/**
 * Mixed Reality
 * Mixed Reality Resource Provider REST API
 *
 * The version of the OpenAPI document: 2019-02-28-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CheckNameAvailabilityRequest from '../model/CheckNameAvailabilityRequest';
import CheckNameAvailabilityResponse from '../model/CheckNameAvailabilityResponse';
import ErrorResponse from '../model/ErrorResponse';
import OperationList from '../model/OperationList';
import SpatialAnchorsAccountList from '../model/SpatialAnchorsAccountList';

/**
* Proxy service.
* @module api/ProxyApi
* @version 2019-02-28-preview
*/
export default class ProxyApi {

    /**
    * Constructs a new ProxyApi. 
    * @alias module:api/ProxyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the checkNameAvailabilityLocal operation.
     * @callback module:api/ProxyApi~checkNameAvailabilityLocalCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CheckNameAvailabilityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check Name Availability for global uniqueness
     * @param {String} subscriptionId Azure subscription ID.
     * @param {String} location The location in which uniqueness will be verified.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/CheckNameAvailabilityRequest} checkNameAvailability Check Name Availability Request.
     * @param {module:api/ProxyApi~checkNameAvailabilityLocalCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CheckNameAvailabilityResponse}
     */
    checkNameAvailabilityLocal(subscriptionId, location, apiVersion, checkNameAvailability, callback) {
      let postBody = checkNameAvailability;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling checkNameAvailabilityLocal");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling checkNameAvailabilityLocal");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling checkNameAvailabilityLocal");
      }
      // verify the required parameter 'checkNameAvailability' is set
      if (checkNameAvailability === undefined || checkNameAvailability === null) {
        throw new Error("Missing the required parameter 'checkNameAvailability' when calling checkNameAvailabilityLocal");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CheckNameAvailabilityResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/locations/{location}/checkNameAvailability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the operationsList operation.
     * @callback module:api/ProxyApi~operationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Exposing Available Operations
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/ProxyApi~operationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationList}
     */
    operationsList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationsList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationList;
      return this.apiClient.callApi(
        '/providers/Microsoft.MixedReality/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the spatialAnchorsAccountsListBySubscription_0 operation.
     * @callback module:api/ProxyApi~spatialAnchorsAccountsListBySubscription_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/SpatialAnchorsAccountList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Spatial Anchors Accounts by Subscription
     * @param {String} subscriptionId Azure subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/ProxyApi~spatialAnchorsAccountsListBySubscription_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpatialAnchorsAccountList}
     */
    spatialAnchorsAccountsListBySubscription_0(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling spatialAnchorsAccountsListBySubscription_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling spatialAnchorsAccountsListBySubscription_0");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SpatialAnchorsAccountList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/spatialAnchorsAccounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
