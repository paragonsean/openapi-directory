/**
 * Mixed Reality
 * Mixed Reality Resource Provider REST API
 *
 * The version of the OpenAPI document: 2019-02-28-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import SpatialAnchorsAccountKeyRegenerateRequest from '../model/SpatialAnchorsAccountKeyRegenerateRequest';
import SpatialAnchorsAccountKeys from '../model/SpatialAnchorsAccountKeys';

/**
* Key service.
* @module api/KeyApi
* @version 2019-02-28-preview
*/
export default class KeyApi {

    /**
    * Constructs a new KeyApi. 
    * @alias module:api/KeyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the spatialAnchorsAccountsGetKeys operation.
     * @callback module:api/KeyApi~spatialAnchorsAccountsGetKeysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpatialAnchorsAccountKeys} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Both of the 2 Keys of a Spatial Anchors Account
     * @param {String} subscriptionId Azure subscription ID.
     * @param {String} resourceGroupName Name of an Azure resource group.
     * @param {String} spatialAnchorsAccountName Name of an Mixed Reality Spatial Anchors Account.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/KeyApi~spatialAnchorsAccountsGetKeysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpatialAnchorsAccountKeys}
     */
    spatialAnchorsAccountsGetKeys(subscriptionId, resourceGroupName, spatialAnchorsAccountName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling spatialAnchorsAccountsGetKeys");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling spatialAnchorsAccountsGetKeys");
      }
      // verify the required parameter 'spatialAnchorsAccountName' is set
      if (spatialAnchorsAccountName === undefined || spatialAnchorsAccountName === null) {
        throw new Error("Missing the required parameter 'spatialAnchorsAccountName' when calling spatialAnchorsAccountsGetKeys");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling spatialAnchorsAccountsGetKeys");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'spatialAnchorsAccountName': spatialAnchorsAccountName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SpatialAnchorsAccountKeys;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/spatialAnchorsAccounts/{spatialAnchorsAccountName}/keys', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the spatialAnchorsAccountsRegenerateKeys operation.
     * @callback module:api/KeyApi~spatialAnchorsAccountsRegenerateKeysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpatialAnchorsAccountKeys} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Regenerate 1 Key of a Spatial Anchors Account
     * @param {String} subscriptionId Azure subscription ID.
     * @param {String} resourceGroupName Name of an Azure resource group.
     * @param {String} spatialAnchorsAccountName Name of an Mixed Reality Spatial Anchors Account.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/SpatialAnchorsAccountKeyRegenerateRequest} spatialAnchorsAccountKeyRegenerate Specifying which key to be regenerated.
     * @param {module:api/KeyApi~spatialAnchorsAccountsRegenerateKeysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpatialAnchorsAccountKeys}
     */
    spatialAnchorsAccountsRegenerateKeys(subscriptionId, resourceGroupName, spatialAnchorsAccountName, apiVersion, spatialAnchorsAccountKeyRegenerate, callback) {
      let postBody = spatialAnchorsAccountKeyRegenerate;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling spatialAnchorsAccountsRegenerateKeys");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling spatialAnchorsAccountsRegenerateKeys");
      }
      // verify the required parameter 'spatialAnchorsAccountName' is set
      if (spatialAnchorsAccountName === undefined || spatialAnchorsAccountName === null) {
        throw new Error("Missing the required parameter 'spatialAnchorsAccountName' when calling spatialAnchorsAccountsRegenerateKeys");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling spatialAnchorsAccountsRegenerateKeys");
      }
      // verify the required parameter 'spatialAnchorsAccountKeyRegenerate' is set
      if (spatialAnchorsAccountKeyRegenerate === undefined || spatialAnchorsAccountKeyRegenerate === null) {
        throw new Error("Missing the required parameter 'spatialAnchorsAccountKeyRegenerate' when calling spatialAnchorsAccountsRegenerateKeys");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'spatialAnchorsAccountName': spatialAnchorsAccountName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SpatialAnchorsAccountKeys;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/spatialAnchorsAccounts/{spatialAnchorsAccountName}/keys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
