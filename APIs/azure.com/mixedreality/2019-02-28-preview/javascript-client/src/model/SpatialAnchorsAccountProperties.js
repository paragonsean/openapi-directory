/**
 * Mixed Reality
 * Mixed Reality Resource Provider REST API
 *
 * The version of the OpenAPI document: 2019-02-28-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SpatialAnchorsAccountProperties model module.
 * @module model/SpatialAnchorsAccountProperties
 * @version 2019-02-28-preview
 */
class SpatialAnchorsAccountProperties {
    /**
     * Constructs a new <code>SpatialAnchorsAccountProperties</code>.
     * Spatial Anchors Account Customize Properties
     * @alias module:model/SpatialAnchorsAccountProperties
     */
    constructor() { 
        
        SpatialAnchorsAccountProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SpatialAnchorsAccountProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpatialAnchorsAccountProperties} obj Optional instance to populate.
     * @return {module:model/SpatialAnchorsAccountProperties} The populated <code>SpatialAnchorsAccountProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpatialAnchorsAccountProperties();

            if (data.hasOwnProperty('accountDomain')) {
                obj['accountDomain'] = ApiClient.convertToType(data['accountDomain'], 'String');
            }
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpatialAnchorsAccountProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpatialAnchorsAccountProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountDomain'] && !(typeof data['accountDomain'] === 'string' || data['accountDomain'] instanceof String)) {
            throw new Error("Expected the field `accountDomain` to be a primitive type in the JSON string but got " + data['accountDomain']);
        }
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }

        return true;
    }


}



/**
 * Correspond domain name of certain Spatial Anchors Account
 * @member {String} accountDomain
 */
SpatialAnchorsAccountProperties.prototype['accountDomain'] = undefined;

/**
 * unique id of certain Spatial Anchors Account data contract.
 * @member {String} accountId
 */
SpatialAnchorsAccountProperties.prototype['accountId'] = undefined;






export default SpatialAnchorsAccountProperties;

