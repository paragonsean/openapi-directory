/**
 * Mixed Reality
 * Mixed Reality Resource Provider REST API
 *
 * The version of the OpenAPI document: 2019-02-28-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CheckNameAvailabilityRequest from './model/CheckNameAvailabilityRequest';
import CheckNameAvailabilityResponse from './model/CheckNameAvailabilityResponse';
import ErrorResponse from './model/ErrorResponse';
import NameAvailability from './model/NameAvailability';
import NameUnavailableReason from './model/NameUnavailableReason';
import Operation from './model/Operation';
import OperationDisplay from './model/OperationDisplay';
import OperationList from './model/OperationList';
import SpatialAnchorsAccount from './model/SpatialAnchorsAccount';
import SpatialAnchorsAccountKeyRegenerateRequest from './model/SpatialAnchorsAccountKeyRegenerateRequest';
import SpatialAnchorsAccountKeys from './model/SpatialAnchorsAccountKeys';
import SpatialAnchorsAccountList from './model/SpatialAnchorsAccountList';
import SpatialAnchorsAccountProperties from './model/SpatialAnchorsAccountProperties';
import KeyApi from './api/KeyApi';
import ProxyApi from './api/ProxyApi';
import ResourceApi from './api/ResourceApi';


/**
* Mixed Reality Resource Provider REST API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MixedReality = require('index'); // See note below*.
* var xxxSvc = new MixedReality.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MixedReality.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MixedReality.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MixedReality.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-02-28-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CheckNameAvailabilityRequest model constructor.
     * @property {module:model/CheckNameAvailabilityRequest}
     */
    CheckNameAvailabilityRequest,

    /**
     * The CheckNameAvailabilityResponse model constructor.
     * @property {module:model/CheckNameAvailabilityResponse}
     */
    CheckNameAvailabilityResponse,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The NameAvailability model constructor.
     * @property {module:model/NameAvailability}
     */
    NameAvailability,

    /**
     * The NameUnavailableReason model constructor.
     * @property {module:model/NameUnavailableReason}
     */
    NameUnavailableReason,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The OperationList model constructor.
     * @property {module:model/OperationList}
     */
    OperationList,

    /**
     * The SpatialAnchorsAccount model constructor.
     * @property {module:model/SpatialAnchorsAccount}
     */
    SpatialAnchorsAccount,

    /**
     * The SpatialAnchorsAccountKeyRegenerateRequest model constructor.
     * @property {module:model/SpatialAnchorsAccountKeyRegenerateRequest}
     */
    SpatialAnchorsAccountKeyRegenerateRequest,

    /**
     * The SpatialAnchorsAccountKeys model constructor.
     * @property {module:model/SpatialAnchorsAccountKeys}
     */
    SpatialAnchorsAccountKeys,

    /**
     * The SpatialAnchorsAccountList model constructor.
     * @property {module:model/SpatialAnchorsAccountList}
     */
    SpatialAnchorsAccountList,

    /**
     * The SpatialAnchorsAccountProperties model constructor.
     * @property {module:model/SpatialAnchorsAccountProperties}
     */
    SpatialAnchorsAccountProperties,

    /**
    * The KeyApi service constructor.
    * @property {module:api/KeyApi}
    */
    KeyApi,

    /**
    * The ProxyApi service constructor.
    * @property {module:api/ProxyApi}
    */
    ProxyApi,

    /**
    * The ResourceApi service constructor.
    * @property {module:api/ResourceApi}
    */
    ResourceApi
};
