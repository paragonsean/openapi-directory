openapi: 3.0.1
info:
  description: "The Azure SQL Database management API provides a RESTful set of web\
    \ APIs that interact with Azure SQL Database services to manage your databases.\
    \ The API enables users to create, retrieve, update, and delete databases, servers,\
    \ and other entities."
  title: SqlManagementClient
  version: 2017-03-01-preview
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json
    version: "2.0"
  x-providerName: azure.com
  x-serviceName: sql-serverSecurityAlertPolicies
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
paths:
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/securityAlertPolicies
  : get:
      description: Get the server's threat detection policies.
      operationId: server_security_alert_policies_list_by_server
      parameters:
      - description: The name of the resource group that contains the resource. You
          can obtain this value from the Azure Resource Manager API or the portal.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the server.
        in: path
        name: serverName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The subscription ID that identifies an Azure subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The API version to use for the request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalServerSecurityAlertPolicyListResult'
          description: Successfully retrieved the server threat detection policies.
        default:
          content: {}
          description: |-
            *** Error Responses: ***

             * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.

             * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.

             * 400 InvalidServerSecurityAlertPolicyCreateRequest - The create server Threat Detection security alert policy request does not exist or has no properties object.

             * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.

             * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 409 ServerSecurityAlertPolicyInProgress - Set server security alert policy is already in progress

             * 409 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.

             * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 500 GetServerSecurityAlertPolicyFailed - Failed to get Threat Detection settings
      tags:
      - ServerSecurityAlertPolicies
      x-ms-examples:
        List the server's threat detection policies:
          parameters:
            api-version: 2017-03-01-preview
            resourceGroupName: securityalert-4799
            serverName: securityalert-6440
            subscriptionId: 00000000-1111-2222-3333-444444444444
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-4799/providers/Microsoft.Sql/servers/securityalert-6440/securityAlertPolicies
                  name: Default
                  properties:
                    disabledAlerts:
                    - Access_Anomaly
                    emailAccountAdmins: true
                    emailAddresses:
                    - test@microsoft.com;user@microsoft.com
                    retentionDays: 0
                    state: Disabled
                    storageAccountAccessKey: ""
                    storageEndpoint: https://mystorage.blob.core.windows.net
                  type: Microsoft.Sql/servers/securityAlertPolicies
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.server_security_alert_policies_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}
  : get:
      description: Get a server's security alert policy.
      operationId: server_security_alert_policies_get
      parameters:
      - description: The name of the resource group that contains the resource. You
          can obtain this value from the Azure Resource Manager API or the portal.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the server.
        in: path
        name: server_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the security alert policy.
        in: path
        name: securityAlertPolicyName
        required: true
        schema:
          enum:
          - Default
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityAlertPolicyName
        x-ms-enum:
          modelAsString: true
          name: SecurityAlertPolicyName
      - description: The subscription ID that identifies an Azure subscription.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The API version to use for the request.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSecurityAlertPolicy'
          description: Successfully retrieved the server threat detection policy.
        default:
          content: {}
          description: |-
            *** Error Responses: ***

             * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.

             * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.

             * 400 InvalidServerSecurityAlertPolicyCreateRequest - The create server Threat Detection security alert policy request does not exist or has no properties object.

             * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.

             * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 409 ServerSecurityAlertPolicyInProgress - Set server security alert policy is already in progress

             * 409 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.

             * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 500 GetServerSecurityAlertPolicyFailed - Failed to get Threat Detection settings
      tags:
      - ServerSecurityAlertPolicies
      x-ms-examples:
        Get a server's threat detection policy:
          parameters:
            api-version: 2017-03-01-preview
            resourceGroupName: securityalert-4799
            securityAlertPolicyName: Default
            serverName: securityalert-6440
            subscriptionId: 00000000-1111-2222-3333-444444444444
          responses:
            "200":
              body:
                id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-4799/providers/Microsoft.Sql/servers/securityalert-6440/securityAlertPolicies/default
                name: Default
                properties:
                  disabledAlerts:
                  - Access_Anomaly
                  emailAccountAdmins: true
                  emailAddresses:
                  - test@microsoft.com;user@microsoft.com
                  retentionDays: 0
                  state: Disabled
                  storageAccountAccessKey: ""
                  storageEndpoint: https://mystorage.blob.core.windows.net
                type: Microsoft.Sql/servers/securityAlertPolicies
      x-openapi-router-controller: openapi_server.controllers.server_security_alert_policies_controller
    put:
      description: Creates or updates a threat detection policy.
      operationId: server_security_alert_policies_create_or_update
      parameters:
      - description: The name of the resource group that contains the resource. You
          can obtain this value from the Azure Resource Manager API or the portal.
        in: path
        name: resource_group_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the server.
        in: path
        name: server_name
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the threat detection policy.
        in: path
        name: securityAlertPolicyName
        required: true
        schema:
          enum:
          - Default
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityAlertPolicyName
        x-ms-enum:
          modelAsString: true
          name: SecurityAlertPolicyName
      - description: The subscription ID that identifies an Azure subscription.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The API version to use for the request.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerSecurityAlertPolicy'
        description: The server security alert policy.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSecurityAlertPolicy'
          description: Successfully updated the threat detection policy.
        "202":
          content: {}
          description: Created request to set the server threat detection policy.
        default:
          content: {}
          description: |-
            *** Error Responses: ***

             * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.

             * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.

             * 400 InvalidServerSecurityAlertPolicyCreateRequest - The create server Threat Detection security alert policy request does not exist or has no properties object.

             * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.

             * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 409 ServerSecurityAlertPolicyInProgress - Set server security alert policy is already in progress

             * 409 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.

             * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later
      tags:
      - ServerSecurityAlertPolicies
      x-ms-examples:
        Update a server's threat detection policy with all parameters:
          parameters:
            api-version: 2017-03-01-preview
            parameters:
              properties:
                disabledAlerts:
                - Access_Anomaly
                - Usage_Anomaly
                emailAccountAdmins: true
                emailAddresses:
                - testSecurityAlert@microsoft.com
                retentionDays: 5
                state: Enabled
                storageAccountAccessKey: sdlfkjabc+sdlfkjsdlkfsjdfLDKFTERLKFDFKLjsdfksjdflsdkfD2342309432849328476458/3RSD==
                storageEndpoint: https://mystorage.blob.core.windows.net
            resourceGroupName: securityalert-4799
            securityAlertPolicyName: Default
            serverName: securityalert-6440
            subscriptionId: 00000000-1111-2222-3333-444444444444
          responses:
            "200":
              body:
                id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-4799/providers/Microsoft.Sql/servers/securityalert-6440/securityAlertPolicies/default
                name: Default
                properties:
                  disabledAlerts:
                  - Access_Anomaly
                  - Usage_Anomaly
                  emailAccountAdmins: true
                  emailAddresses:
                  - testSecurityAlert@microsoft.com
                  retentionDays: 5
                  state: Enabled
                  storageAccountAccessKey: ""
                  storageEndpoint: https://mystorage.blob.core.windows.net
                type: Microsoft.Sql/servers/securityAlertPolicies
            "202": {}
        Update a server's threat detection policy with minimal parameters:
          parameters:
            api-version: 2017-03-01-preview
            parameters:
              properties:
                emailAccountAdmins: true
                state: Disabled
                storageAccountAccessKey: sdlfkjabc+sdlfkjsdlkfsjdfLDKFTERLKFDFKLjsdfksjdflsdkfD2342309432849328476458/3RSD==
                storageEndpoint: https://mystorage.blob.core.windows.net
            resourceGroupName: securityalert-4799
            securityAlertPolicyName: Default
            serverName: securityalert-6440
            subscriptionId: 00000000-1111-2222-3333-444444444444
          responses:
            "200":
              body:
                id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-4799/providers/Microsoft.Sql/servers/securityalert-6440/securityAlertPolicies/default
                name: Default
                properties:
                  disabledAlerts:
                  - ""
                  emailAccountAdmins: true
                  emailAddresses:
                  - ""
                  retentionDays: 0
                  state: Enabled
                  storageAccountAccessKey: ""
                  storageEndpoint: https://mystorage.blob.core.windows.net
                type: Microsoft.Sql/servers/securityAlertPolicies
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.server_security_alert_policies_controller
components:
  parameters:
    ApiVersionParameter:
      description: The API version to use for the request.
      in: query
      name: api-version
      required: true
      schema:
        type: string
        x-ms-parameter-location: client
      x-ms-parameter-location: client
    BlobAuditingPolicyNameParameter:
      description: The name of the blob auditing policy.
      in: path
      name: blobAuditingPolicyName
      required: true
      schema:
        enum:
        - default
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    DatabaseNameParameter:
      description: The name of the database.
      in: path
      name: databaseName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ManagedInstanceNameParameter:
      description: The name of the managed instance.
      in: path
      name: managedInstanceName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ResourceGroupParameter:
      description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ServerNameParameter:
      description: The name of the server.
      in: path
      name: serverName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    SqlVirtualMachineContainerNameParameter:
      description: The name of the SqlVirtualMachineContainer.
      in: path
      name: sqlVirtualMachineContainerName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    SqlVirtualMachineInstanceNameParameter:
      description: The name of the SqlVirtualMachineInstance.
      in: path
      name: sqlVirtualMachineInstanceName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: The subscription ID that identifies an Azure subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
        x-ms-parameter-location: client
      x-ms-parameter-location: client
    VirtualClusterNameParameter:
      description: The name of the virtual cluster.
      in: path
      name: virtualClusterName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  schemas:
    LogicalServerSecurityAlertPolicyListResult:
      description: A list of the server's security alert policies.
      example:
        value:
        - properties:
            disabledAlerts:
            - disabledAlerts
            - disabledAlerts
            storageEndpoint: storageEndpoint
            emailAddresses:
            - emailAddresses
            - emailAddresses
            creationTime: 2000-01-23T04:56:07.000+00:00
            emailAccountAdmins: true
            retentionDays: 0
            storageAccountAccessKey: storageAccountAccessKey
            state: New
        - properties:
            disabledAlerts:
            - disabledAlerts
            - disabledAlerts
            storageEndpoint: storageEndpoint
            emailAddresses:
            - emailAddresses
            - emailAddresses
            creationTime: 2000-01-23T04:56:07.000+00:00
            emailAccountAdmins: true
            retentionDays: 0
            storageAccountAccessKey: storageAccountAccessKey
            state: New
        nextLink: nextLink
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/ServerSecurityAlertPolicy'
          readOnly: true
          title: value
          type: array
      title: LogicalServerSecurityAlertPolicyListResult
      type: object
    SecurityAlertPolicyProperties:
      description: Properties of a security alert policy.
      example:
        disabledAlerts:
        - disabledAlerts
        - disabledAlerts
        storageEndpoint: storageEndpoint
        emailAddresses:
        - emailAddresses
        - emailAddresses
        creationTime: 2000-01-23T04:56:07.000+00:00
        emailAccountAdmins: true
        retentionDays: 0
        storageAccountAccessKey: storageAccountAccessKey
        state: New
      properties:
        creationTime:
          description: Specifies the UTC creation time of the policy.
          format: date-time
          readOnly: true
          title: creationTime
          type: string
        disabledAlerts:
          description: "Specifies an array of alerts that are disabled. Allowed values\
            \ are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration,\
            \ Unsafe_Action"
          items:
            type: string
          title: disabledAlerts
          type: array
        emailAccountAdmins:
          description: Specifies that the alert is sent to the account administrators.
          title: emailAccountAdmins
          type: boolean
        emailAddresses:
          description: Specifies an array of e-mail addresses to which the alert is
            sent.
          items:
            type: string
          title: emailAddresses
          type: array
        retentionDays:
          description: Specifies the number of days to keep in the Threat Detection
            audit logs.
          format: int32
          title: retentionDays
          type: integer
        state:
          description: "Specifies the state of the policy, whether it is enabled or\
            \ disabled or a policy has not been applied yet on the specific database."
          enum:
          - New
          - Enabled
          - Disabled
          title: state
          type: string
          x-ms-enum:
            modelAsString: false
            name: SecurityAlertPolicyState
        storageAccountAccessKey:
          description: Specifies the identifier key of the Threat Detection audit
            storage account.
          title: storageAccountAccessKey
          type: string
        storageEndpoint:
          description: Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net).
            This blob storage will hold all Threat Detection audit logs.
          title: storageEndpoint
          type: string
      required:
      - state
      title: SecurityAlertPolicyProperties
      type: object
    ServerSecurityAlertPolicy:
      allOf:
      - allOf:
        - description: ARM resource.
          properties:
            id:
              description: Resource ID.
              readOnly: true
              type: string
            name:
              description: Resource name.
              readOnly: true
              type: string
            type:
              description: Resource type.
              readOnly: true
              type: string
          type: object
          x-ms-azure-resource: true
        description: ARM proxy resource.
      description: A server security alert policy.
      example:
        properties:
          disabledAlerts:
          - disabledAlerts
          - disabledAlerts
          storageEndpoint: storageEndpoint
          emailAddresses:
          - emailAddresses
          - emailAddresses
          creationTime: 2000-01-23T04:56:07.000+00:00
          emailAccountAdmins: true
          retentionDays: 0
          storageAccountAccessKey: storageAccountAccessKey
          state: New
      properties:
        properties:
          $ref: '#/components/schemas/SecurityAlertPolicyProperties'
      title: ServerSecurityAlertPolicy
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_azure_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_azure_auth
x-original-swagger-version: "2.0"
