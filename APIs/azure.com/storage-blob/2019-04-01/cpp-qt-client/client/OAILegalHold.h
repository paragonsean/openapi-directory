/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILegalHold.h
 *
 * The LegalHold property of a blob container.
 */

#ifndef OAILegalHold_H
#define OAILegalHold_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILegalHold : public OAIObject {
public:
    OAILegalHold();
    OAILegalHold(QString json);
    ~OAILegalHold() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isHasLegalHold() const;
    void setHasLegalHold(const bool &has_legal_hold);
    bool is_has_legal_hold_Set() const;
    bool is_has_legal_hold_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_has_legal_hold;
    bool m_has_legal_hold_isSet;
    bool m_has_legal_hold_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILegalHold)

#endif // OAILegalHold_H
