# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LeaseContainerResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lease_id: str=None, lease_time_seconds: str=None):
        """LeaseContainerResponse - a model defined in OpenAPI

        :param lease_id: The lease_id of this LeaseContainerResponse.
        :param lease_time_seconds: The lease_time_seconds of this LeaseContainerResponse.
        """
        self.openapi_types = {
            'lease_id': str,
            'lease_time_seconds': str
        }

        self.attribute_map = {
            'lease_id': 'leaseId',
            'lease_time_seconds': 'leaseTimeSeconds'
        }

        self._lease_id = lease_id
        self._lease_time_seconds = lease_time_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LeaseContainerResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LeaseContainerResponse of this LeaseContainerResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lease_id(self):
        """Gets the lease_id of this LeaseContainerResponse.

        Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease.

        :return: The lease_id of this LeaseContainerResponse.
        :rtype: str
        """
        return self._lease_id

    @lease_id.setter
    def lease_id(self, lease_id):
        """Sets the lease_id of this LeaseContainerResponse.

        Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease.

        :param lease_id: The lease_id of this LeaseContainerResponse.
        :type lease_id: str
        """

        self._lease_id = lease_id

    @property
    def lease_time_seconds(self):
        """Gets the lease_time_seconds of this LeaseContainerResponse.

        Approximate time remaining in the lease period, in seconds.

        :return: The lease_time_seconds of this LeaseContainerResponse.
        :rtype: str
        """
        return self._lease_time_seconds

    @lease_time_seconds.setter
    def lease_time_seconds(self, lease_time_seconds):
        """Sets the lease_time_seconds of this LeaseContainerResponse.

        Approximate time remaining in the lease period, in seconds.

        :param lease_time_seconds: The lease_time_seconds of this LeaseContainerResponse.
        :type lease_time_seconds: str
        """

        self._lease_time_seconds = lease_time_seconds
