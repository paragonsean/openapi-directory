/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2018-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StorageManagementClient);
  }
}(this, function(expect, StorageManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StorageManagementClient.BlobContainersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BlobContainersApi', function() {
    describe('blobContainersClearLegalHold', function() {
      it('should call blobContainersClearLegalHold successfully', function(done) {
        //uncomment below and update the code to test blobContainersClearLegalHold
        //instance.blobContainersClearLegalHold(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blobContainersCreate', function() {
      it('should call blobContainersCreate successfully', function(done) {
        //uncomment below and update the code to test blobContainersCreate
        //instance.blobContainersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blobContainersCreateOrUpdateImmutabilityPolicy', function() {
      it('should call blobContainersCreateOrUpdateImmutabilityPolicy successfully', function(done) {
        //uncomment below and update the code to test blobContainersCreateOrUpdateImmutabilityPolicy
        //instance.blobContainersCreateOrUpdateImmutabilityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blobContainersDelete', function() {
      it('should call blobContainersDelete successfully', function(done) {
        //uncomment below and update the code to test blobContainersDelete
        //instance.blobContainersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blobContainersDeleteImmutabilityPolicy', function() {
      it('should call blobContainersDeleteImmutabilityPolicy successfully', function(done) {
        //uncomment below and update the code to test blobContainersDeleteImmutabilityPolicy
        //instance.blobContainersDeleteImmutabilityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blobContainersExtendImmutabilityPolicy', function() {
      it('should call blobContainersExtendImmutabilityPolicy successfully', function(done) {
        //uncomment below and update the code to test blobContainersExtendImmutabilityPolicy
        //instance.blobContainersExtendImmutabilityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blobContainersGet', function() {
      it('should call blobContainersGet successfully', function(done) {
        //uncomment below and update the code to test blobContainersGet
        //instance.blobContainersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blobContainersGetImmutabilityPolicy', function() {
      it('should call blobContainersGetImmutabilityPolicy successfully', function(done) {
        //uncomment below and update the code to test blobContainersGetImmutabilityPolicy
        //instance.blobContainersGetImmutabilityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blobContainersLease', function() {
      it('should call blobContainersLease successfully', function(done) {
        //uncomment below and update the code to test blobContainersLease
        //instance.blobContainersLease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blobContainersList', function() {
      it('should call blobContainersList successfully', function(done) {
        //uncomment below and update the code to test blobContainersList
        //instance.blobContainersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blobContainersLockImmutabilityPolicy', function() {
      it('should call blobContainersLockImmutabilityPolicy successfully', function(done) {
        //uncomment below and update the code to test blobContainersLockImmutabilityPolicy
        //instance.blobContainersLockImmutabilityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blobContainersSetLegalHold', function() {
      it('should call blobContainersSetLegalHold successfully', function(done) {
        //uncomment below and update the code to test blobContainersSetLegalHold
        //instance.blobContainersSetLegalHold(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blobContainersUpdate', function() {
      it('should call blobContainersUpdate successfully', function(done) {
        //uncomment below and update the code to test blobContainersUpdate
        //instance.blobContainersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
