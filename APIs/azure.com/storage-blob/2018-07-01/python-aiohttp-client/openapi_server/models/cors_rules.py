# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cors_rule import CorsRule
from openapi_server import util


class CorsRules(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cors_rules: List[CorsRule]=None):
        """CorsRules - a model defined in OpenAPI

        :param cors_rules: The cors_rules of this CorsRules.
        """
        self.openapi_types = {
            'cors_rules': List[CorsRule]
        }

        self.attribute_map = {
            'cors_rules': 'corsRules'
        }

        self._cors_rules = cors_rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CorsRules':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CorsRules of this CorsRules.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cors_rules(self):
        """Gets the cors_rules of this CorsRules.

        The List of CORS rules. You can include up to five CorsRule elements in the request. 

        :return: The cors_rules of this CorsRules.
        :rtype: List[CorsRule]
        """
        return self._cors_rules

    @cors_rules.setter
    def cors_rules(self, cors_rules):
        """Sets the cors_rules of this CorsRules.

        The List of CORS rules. You can include up to five CorsRule elements in the request. 

        :param cors_rules: The cors_rules of this CorsRules.
        :type cors_rules: List[CorsRule]
        """

        self._cors_rules = cors_rules
