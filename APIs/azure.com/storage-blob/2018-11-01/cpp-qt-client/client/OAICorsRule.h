/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2018-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICorsRule.h
 *
 * Specifies a CORS rule for the Blob service.
 */

#ifndef OAICorsRule_H
#define OAICorsRule_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICorsRule : public OAIObject {
public:
    OAICorsRule();
    OAICorsRule(QString json);
    ~OAICorsRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedHeaders() const;
    void setAllowedHeaders(const QList<QString> &allowed_headers);
    bool is_allowed_headers_Set() const;
    bool is_allowed_headers_Valid() const;

    QList<QString> getAllowedMethods() const;
    void setAllowedMethods(const QList<QString> &allowed_methods);
    bool is_allowed_methods_Set() const;
    bool is_allowed_methods_Valid() const;

    QList<QString> getAllowedOrigins() const;
    void setAllowedOrigins(const QList<QString> &allowed_origins);
    bool is_allowed_origins_Set() const;
    bool is_allowed_origins_Valid() const;

    QList<QString> getExposedHeaders() const;
    void setExposedHeaders(const QList<QString> &exposed_headers);
    bool is_exposed_headers_Set() const;
    bool is_exposed_headers_Valid() const;

    qint32 getMaxAgeInSeconds() const;
    void setMaxAgeInSeconds(const qint32 &max_age_in_seconds);
    bool is_max_age_in_seconds_Set() const;
    bool is_max_age_in_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_headers;
    bool m_allowed_headers_isSet;
    bool m_allowed_headers_isValid;

    QList<QString> m_allowed_methods;
    bool m_allowed_methods_isSet;
    bool m_allowed_methods_isValid;

    QList<QString> m_allowed_origins;
    bool m_allowed_origins_isSet;
    bool m_allowed_origins_isValid;

    QList<QString> m_exposed_headers;
    bool m_exposed_headers_isSet;
    bool m_exposed_headers_isValid;

    qint32 m_max_age_in_seconds;
    bool m_max_age_in_seconds_isSet;
    bool m_max_age_in_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICorsRule)

#endif // OAICorsRule_H
