/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2018-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILeaseContainerRequest.h
 *
 * Lease Container request schema.
 */

#ifndef OAILeaseContainerRequest_H
#define OAILeaseContainerRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILeaseContainerRequest : public OAIObject {
public:
    OAILeaseContainerRequest();
    OAILeaseContainerRequest(QString json);
    ~OAILeaseContainerRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    qint32 getBreakPeriod() const;
    void setBreakPeriod(const qint32 &break_period);
    bool is_break_period_Set() const;
    bool is_break_period_Valid() const;

    qint32 getLeaseDuration() const;
    void setLeaseDuration(const qint32 &lease_duration);
    bool is_lease_duration_Set() const;
    bool is_lease_duration_Valid() const;

    QString getLeaseId() const;
    void setLeaseId(const QString &lease_id);
    bool is_lease_id_Set() const;
    bool is_lease_id_Valid() const;

    QString getProposedLeaseId() const;
    void setProposedLeaseId(const QString &proposed_lease_id);
    bool is_proposed_lease_id_Set() const;
    bool is_proposed_lease_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    qint32 m_break_period;
    bool m_break_period_isSet;
    bool m_break_period_isValid;

    qint32 m_lease_duration;
    bool m_lease_duration_isSet;
    bool m_lease_duration_isValid;

    QString m_lease_id;
    bool m_lease_id_isSet;
    bool m_lease_id_isValid;

    QString m_proposed_lease_id;
    bool m_proposed_lease_id_isSet;
    bool m_proposed_lease_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILeaseContainerRequest)

#endif // OAILeaseContainerRequest_H
