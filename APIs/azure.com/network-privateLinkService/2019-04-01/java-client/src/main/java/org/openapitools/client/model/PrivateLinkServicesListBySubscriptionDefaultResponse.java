/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PrivateLinkServicesListBySubscriptionDefaultResponseDetailsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Common error representation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:29:57.583502-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PrivateLinkServicesListBySubscriptionDefaultResponse {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private List<PrivateLinkServicesListBySubscriptionDefaultResponseDetailsInner> details = new ArrayList<>();

  public static final String SERIALIZED_NAME_INNER_ERROR = "innerError";
  @SerializedName(SERIALIZED_NAME_INNER_ERROR)
  private String innerError;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_TARGET = "target";
  @SerializedName(SERIALIZED_NAME_TARGET)
  private String target;

  public PrivateLinkServicesListBySubscriptionDefaultResponse() {
  }

  public PrivateLinkServicesListBySubscriptionDefaultResponse code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Error code.
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public PrivateLinkServicesListBySubscriptionDefaultResponse details(List<PrivateLinkServicesListBySubscriptionDefaultResponseDetailsInner> details) {
    this.details = details;
    return this;
  }

  public PrivateLinkServicesListBySubscriptionDefaultResponse addDetailsItem(PrivateLinkServicesListBySubscriptionDefaultResponseDetailsInner detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<>();
    }
    this.details.add(detailsItem);
    return this;
  }

  /**
   * Error details.
   * @return details
   */
  @javax.annotation.Nullable
  public List<PrivateLinkServicesListBySubscriptionDefaultResponseDetailsInner> getDetails() {
    return details;
  }

  public void setDetails(List<PrivateLinkServicesListBySubscriptionDefaultResponseDetailsInner> details) {
    this.details = details;
  }


  public PrivateLinkServicesListBySubscriptionDefaultResponse innerError(String innerError) {
    this.innerError = innerError;
    return this;
  }

  /**
   * Inner error message.
   * @return innerError
   */
  @javax.annotation.Nullable
  public String getInnerError() {
    return innerError;
  }

  public void setInnerError(String innerError) {
    this.innerError = innerError;
  }


  public PrivateLinkServicesListBySubscriptionDefaultResponse message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Error message.
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public PrivateLinkServicesListBySubscriptionDefaultResponse target(String target) {
    this.target = target;
    return this;
  }

  /**
   * Error target.
   * @return target
   */
  @javax.annotation.Nullable
  public String getTarget() {
    return target;
  }

  public void setTarget(String target) {
    this.target = target;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrivateLinkServicesListBySubscriptionDefaultResponse privateLinkServicesListBySubscriptionDefaultResponse = (PrivateLinkServicesListBySubscriptionDefaultResponse) o;
    return Objects.equals(this.code, privateLinkServicesListBySubscriptionDefaultResponse.code) &&
        Objects.equals(this.details, privateLinkServicesListBySubscriptionDefaultResponse.details) &&
        Objects.equals(this.innerError, privateLinkServicesListBySubscriptionDefaultResponse.innerError) &&
        Objects.equals(this.message, privateLinkServicesListBySubscriptionDefaultResponse.message) &&
        Objects.equals(this.target, privateLinkServicesListBySubscriptionDefaultResponse.target);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, details, innerError, message, target);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrivateLinkServicesListBySubscriptionDefaultResponse {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    innerError: ").append(toIndentedString(innerError)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("code");
    openapiFields.add("details");
    openapiFields.add("innerError");
    openapiFields.add("message");
    openapiFields.add("target");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PrivateLinkServicesListBySubscriptionDefaultResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PrivateLinkServicesListBySubscriptionDefaultResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PrivateLinkServicesListBySubscriptionDefaultResponse is not found in the empty JSON string", PrivateLinkServicesListBySubscriptionDefaultResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PrivateLinkServicesListBySubscriptionDefaultResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PrivateLinkServicesListBySubscriptionDefaultResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if (jsonObj.get("details") != null && !jsonObj.get("details").isJsonNull()) {
        JsonArray jsonArraydetails = jsonObj.getAsJsonArray("details");
        if (jsonArraydetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("details").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `details` to be an array in the JSON string but got `%s`", jsonObj.get("details").toString()));
          }

          // validate the optional field `details` (array)
          for (int i = 0; i < jsonArraydetails.size(); i++) {
            PrivateLinkServicesListBySubscriptionDefaultResponseDetailsInner.validateJsonElement(jsonArraydetails.get(i));
          };
        }
      }
      if ((jsonObj.get("innerError") != null && !jsonObj.get("innerError").isJsonNull()) && !jsonObj.get("innerError").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `innerError` to be a primitive type in the JSON string but got `%s`", jsonObj.get("innerError").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("target") != null && !jsonObj.get("target").isJsonNull()) && !jsonObj.get("target").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PrivateLinkServicesListBySubscriptionDefaultResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PrivateLinkServicesListBySubscriptionDefaultResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PrivateLinkServicesListBySubscriptionDefaultResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PrivateLinkServicesListBySubscriptionDefaultResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<PrivateLinkServicesListBySubscriptionDefaultResponse>() {
           @Override
           public void write(JsonWriter out, PrivateLinkServicesListBySubscriptionDefaultResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PrivateLinkServicesListBySubscriptionDefaultResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PrivateLinkServicesListBySubscriptionDefaultResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PrivateLinkServicesListBySubscriptionDefaultResponse
   * @throws IOException if the JSON string is invalid with respect to PrivateLinkServicesListBySubscriptionDefaultResponse
   */
  public static PrivateLinkServicesListBySubscriptionDefaultResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PrivateLinkServicesListBySubscriptionDefaultResponse.class);
  }

  /**
   * Convert an instance of PrivateLinkServicesListBySubscriptionDefaultResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

