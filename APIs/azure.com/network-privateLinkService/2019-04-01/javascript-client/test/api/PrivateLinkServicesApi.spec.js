/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementClient);
  }
}(this, function(expect, NetworkManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementClient.PrivateLinkServicesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PrivateLinkServicesApi', function() {
    describe('privateLinkServicesCheckPrivateLinkServiceVisibility', function() {
      it('should call privateLinkServicesCheckPrivateLinkServiceVisibility successfully', function(done) {
        //uncomment below and update the code to test privateLinkServicesCheckPrivateLinkServiceVisibility
        //instance.privateLinkServicesCheckPrivateLinkServiceVisibility(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privateLinkServicesCheckPrivateLinkServiceVisibilityByResourceGroup', function() {
      it('should call privateLinkServicesCheckPrivateLinkServiceVisibilityByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test privateLinkServicesCheckPrivateLinkServiceVisibilityByResourceGroup
        //instance.privateLinkServicesCheckPrivateLinkServiceVisibilityByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privateLinkServicesDelete', function() {
      it('should call privateLinkServicesDelete successfully', function(done) {
        //uncomment below and update the code to test privateLinkServicesDelete
        //instance.privateLinkServicesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privateLinkServicesDeletePrivateEndpointConnection', function() {
      it('should call privateLinkServicesDeletePrivateEndpointConnection successfully', function(done) {
        //uncomment below and update the code to test privateLinkServicesDeletePrivateEndpointConnection
        //instance.privateLinkServicesDeletePrivateEndpointConnection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privateLinkServicesGet', function() {
      it('should call privateLinkServicesGet successfully', function(done) {
        //uncomment below and update the code to test privateLinkServicesGet
        //instance.privateLinkServicesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privateLinkServicesList', function() {
      it('should call privateLinkServicesList successfully', function(done) {
        //uncomment below and update the code to test privateLinkServicesList
        //instance.privateLinkServicesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privateLinkServicesListAutoApprovedPrivateLinkServices', function() {
      it('should call privateLinkServicesListAutoApprovedPrivateLinkServices successfully', function(done) {
        //uncomment below and update the code to test privateLinkServicesListAutoApprovedPrivateLinkServices
        //instance.privateLinkServicesListAutoApprovedPrivateLinkServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privateLinkServicesListAutoApprovedPrivateLinkServicesByResourceGroup', function() {
      it('should call privateLinkServicesListAutoApprovedPrivateLinkServicesByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test privateLinkServicesListAutoApprovedPrivateLinkServicesByResourceGroup
        //instance.privateLinkServicesListAutoApprovedPrivateLinkServicesByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privateLinkServicesListBySubscription', function() {
      it('should call privateLinkServicesListBySubscription successfully', function(done) {
        //uncomment below and update the code to test privateLinkServicesListBySubscription
        //instance.privateLinkServicesListBySubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('privateLinkServicesUpdatePrivateEndpointConnection', function() {
      it('should call privateLinkServicesUpdatePrivateEndpointConnection successfully', function(done) {
        //uncomment below and update the code to test privateLinkServicesUpdatePrivateEndpointConnection
        //instance.privateLinkServicesUpdatePrivateEndpointConnection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
