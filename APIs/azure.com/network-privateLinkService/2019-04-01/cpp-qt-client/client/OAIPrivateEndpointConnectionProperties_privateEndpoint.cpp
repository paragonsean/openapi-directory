/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrivateEndpointConnectionProperties_privateEndpoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrivateEndpointConnectionProperties_privateEndpoint::OAIPrivateEndpointConnectionProperties_privateEndpoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrivateEndpointConnectionProperties_privateEndpoint::OAIPrivateEndpointConnectionProperties_privateEndpoint() {
    this->initializeModel();
}

OAIPrivateEndpointConnectionProperties_privateEndpoint::~OAIPrivateEndpointConnectionProperties_privateEndpoint() {}

void OAIPrivateEndpointConnectionProperties_privateEndpoint::initializeModel() {

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;
}

void OAIPrivateEndpointConnectionProperties_privateEndpoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrivateEndpointConnectionProperties_privateEndpoint::fromJsonObject(QJsonObject json) {

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;
}

QString OAIPrivateEndpointConnectionProperties_privateEndpoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrivateEndpointConnectionProperties_privateEndpoint::asJsonObject() const {
    QJsonObject obj;
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_properties_isSet) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    return obj;
}

QString OAIPrivateEndpointConnectionProperties_privateEndpoint::getEtag() const {
    return m_etag;
}
void OAIPrivateEndpointConnectionProperties_privateEndpoint::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIPrivateEndpointConnectionProperties_privateEndpoint::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIPrivateEndpointConnectionProperties_privateEndpoint::is_etag_Valid() const{
    return m_etag_isValid;
}

OAIObject OAIPrivateEndpointConnectionProperties_privateEndpoint::getProperties() const {
    return m_properties;
}
void OAIPrivateEndpointConnectionProperties_privateEndpoint::setProperties(const OAIObject &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIPrivateEndpointConnectionProperties_privateEndpoint::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIPrivateEndpointConnectionProperties_privateEndpoint::is_properties_Valid() const{
    return m_properties_isValid;
}

bool OAIPrivateEndpointConnectionProperties_privateEndpoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrivateEndpointConnectionProperties_privateEndpoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
