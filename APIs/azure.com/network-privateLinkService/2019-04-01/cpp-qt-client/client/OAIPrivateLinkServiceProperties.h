/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPrivateLinkServiceProperties.h
 *
 * Properties of the private link service.
 */

#ifndef OAIPrivateLinkServiceProperties_H
#define OAIPrivateLinkServiceProperties_H

#include <QJsonObject>

#include "OAIPrivateEndpointConnection.h"
#include "OAIPrivateLinkServiceIpConfiguration.h"
#include "OAIPrivateLinkServiceProperties_loadBalancerFrontendIpConfigurations_inner.h"
#include "OAIPrivateLinkServiceProperties_networkInterfaces_inner.h"
#include "OAIResourceSet.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceSet;
class OAIPrivateLinkServiceIpConfiguration;
class OAIPrivateLinkServiceProperties_loadBalancerFrontendIpConfigurations_inner;
class OAIPrivateLinkServiceProperties_networkInterfaces_inner;
class OAIPrivateEndpointConnection;

class OAIPrivateLinkServiceProperties : public OAIObject {
public:
    OAIPrivateLinkServiceProperties();
    OAIPrivateLinkServiceProperties(QString json);
    ~OAIPrivateLinkServiceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlias() const;
    void setAlias(const QString &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    OAIResourceSet getAutoApproval() const;
    void setAutoApproval(const OAIResourceSet &auto_approval);
    bool is_auto_approval_Set() const;
    bool is_auto_approval_Valid() const;

    QList<QString> getFqdns() const;
    void setFqdns(const QList<QString> &fqdns);
    bool is_fqdns_Set() const;
    bool is_fqdns_Valid() const;

    QList<OAIPrivateLinkServiceIpConfiguration> getIpConfigurations() const;
    void setIpConfigurations(const QList<OAIPrivateLinkServiceIpConfiguration> &ip_configurations);
    bool is_ip_configurations_Set() const;
    bool is_ip_configurations_Valid() const;

    QList<OAIPrivateLinkServiceProperties_loadBalancerFrontendIpConfigurations_inner> getLoadBalancerFrontendIpConfigurations() const;
    void setLoadBalancerFrontendIpConfigurations(const QList<OAIPrivateLinkServiceProperties_loadBalancerFrontendIpConfigurations_inner> &load_balancer_frontend_ip_configurations);
    bool is_load_balancer_frontend_ip_configurations_Set() const;
    bool is_load_balancer_frontend_ip_configurations_Valid() const;

    QList<OAIPrivateLinkServiceProperties_networkInterfaces_inner> getNetworkInterfaces() const;
    void setNetworkInterfaces(const QList<OAIPrivateLinkServiceProperties_networkInterfaces_inner> &network_interfaces);
    bool is_network_interfaces_Set() const;
    bool is_network_interfaces_Valid() const;

    QList<OAIPrivateEndpointConnection> getPrivateEndpointConnections() const;
    void setPrivateEndpointConnections(const QList<OAIPrivateEndpointConnection> &private_endpoint_connections);
    bool is_private_endpoint_connections_Set() const;
    bool is_private_endpoint_connections_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIResourceSet getVisibility() const;
    void setVisibility(const OAIResourceSet &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    OAIResourceSet m_auto_approval;
    bool m_auto_approval_isSet;
    bool m_auto_approval_isValid;

    QList<QString> m_fqdns;
    bool m_fqdns_isSet;
    bool m_fqdns_isValid;

    QList<OAIPrivateLinkServiceIpConfiguration> m_ip_configurations;
    bool m_ip_configurations_isSet;
    bool m_ip_configurations_isValid;

    QList<OAIPrivateLinkServiceProperties_loadBalancerFrontendIpConfigurations_inner> m_load_balancer_frontend_ip_configurations;
    bool m_load_balancer_frontend_ip_configurations_isSet;
    bool m_load_balancer_frontend_ip_configurations_isValid;

    QList<OAIPrivateLinkServiceProperties_networkInterfaces_inner> m_network_interfaces;
    bool m_network_interfaces_isSet;
    bool m_network_interfaces_isValid;

    QList<OAIPrivateEndpointConnection> m_private_endpoint_connections;
    bool m_private_endpoint_connections_isSet;
    bool m_private_endpoint_connections_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIResourceSet m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPrivateLinkServiceProperties)

#endif // OAIPrivateLinkServiceProperties_H
