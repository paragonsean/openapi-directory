/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICheckPrivateLinkServiceVisibilityRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICheckPrivateLinkServiceVisibilityRequest::OAICheckPrivateLinkServiceVisibilityRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICheckPrivateLinkServiceVisibilityRequest::OAICheckPrivateLinkServiceVisibilityRequest() {
    this->initializeModel();
}

OAICheckPrivateLinkServiceVisibilityRequest::~OAICheckPrivateLinkServiceVisibilityRequest() {}

void OAICheckPrivateLinkServiceVisibilityRequest::initializeModel() {

    m_private_link_service_alias_isSet = false;
    m_private_link_service_alias_isValid = false;
}

void OAICheckPrivateLinkServiceVisibilityRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICheckPrivateLinkServiceVisibilityRequest::fromJsonObject(QJsonObject json) {

    m_private_link_service_alias_isValid = ::OpenAPI::fromJsonValue(m_private_link_service_alias, json[QString("privateLinkServiceAlias")]);
    m_private_link_service_alias_isSet = !json[QString("privateLinkServiceAlias")].isNull() && m_private_link_service_alias_isValid;
}

QString OAICheckPrivateLinkServiceVisibilityRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICheckPrivateLinkServiceVisibilityRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_private_link_service_alias_isSet) {
        obj.insert(QString("privateLinkServiceAlias"), ::OpenAPI::toJsonValue(m_private_link_service_alias));
    }
    return obj;
}

QString OAICheckPrivateLinkServiceVisibilityRequest::getPrivateLinkServiceAlias() const {
    return m_private_link_service_alias;
}
void OAICheckPrivateLinkServiceVisibilityRequest::setPrivateLinkServiceAlias(const QString &private_link_service_alias) {
    m_private_link_service_alias = private_link_service_alias;
    m_private_link_service_alias_isSet = true;
}

bool OAICheckPrivateLinkServiceVisibilityRequest::is_private_link_service_alias_Set() const{
    return m_private_link_service_alias_isSet;
}

bool OAICheckPrivateLinkServiceVisibilityRequest::is_private_link_service_alias_Valid() const{
    return m_private_link_service_alias_isValid;
}

bool OAICheckPrivateLinkServiceVisibilityRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_private_link_service_alias_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICheckPrivateLinkServiceVisibilityRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
