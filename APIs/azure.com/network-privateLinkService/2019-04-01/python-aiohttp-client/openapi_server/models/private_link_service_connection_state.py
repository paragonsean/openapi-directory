# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrivateLinkServiceConnectionState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions_required: str=None, description: str=None, status: str=None):
        """PrivateLinkServiceConnectionState - a model defined in OpenAPI

        :param actions_required: The actions_required of this PrivateLinkServiceConnectionState.
        :param description: The description of this PrivateLinkServiceConnectionState.
        :param status: The status of this PrivateLinkServiceConnectionState.
        """
        self.openapi_types = {
            'actions_required': str,
            'description': str,
            'status': str
        }

        self.attribute_map = {
            'actions_required': 'actionsRequired',
            'description': 'description',
            'status': 'status'
        }

        self._actions_required = actions_required
        self._description = description
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrivateLinkServiceConnectionState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrivateLinkServiceConnectionState of this PrivateLinkServiceConnectionState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions_required(self):
        """Gets the actions_required of this PrivateLinkServiceConnectionState.

        A message indicating if changes on the service provider require any updates on the consumer.

        :return: The actions_required of this PrivateLinkServiceConnectionState.
        :rtype: str
        """
        return self._actions_required

    @actions_required.setter
    def actions_required(self, actions_required):
        """Sets the actions_required of this PrivateLinkServiceConnectionState.

        A message indicating if changes on the service provider require any updates on the consumer.

        :param actions_required: The actions_required of this PrivateLinkServiceConnectionState.
        :type actions_required: str
        """

        self._actions_required = actions_required

    @property
    def description(self):
        """Gets the description of this PrivateLinkServiceConnectionState.

        The reason for approval/rejection of the connection.

        :return: The description of this PrivateLinkServiceConnectionState.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PrivateLinkServiceConnectionState.

        The reason for approval/rejection of the connection.

        :param description: The description of this PrivateLinkServiceConnectionState.
        :type description: str
        """

        self._description = description

    @property
    def status(self):
        """Gets the status of this PrivateLinkServiceConnectionState.

        Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.

        :return: The status of this PrivateLinkServiceConnectionState.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PrivateLinkServiceConnectionState.

        Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.

        :param status: The status of this PrivateLinkServiceConnectionState.
        :type status: str
        """

        self._status = status
