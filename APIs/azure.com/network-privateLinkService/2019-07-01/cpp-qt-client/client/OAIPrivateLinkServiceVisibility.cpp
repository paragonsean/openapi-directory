/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrivateLinkServiceVisibility.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrivateLinkServiceVisibility::OAIPrivateLinkServiceVisibility(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrivateLinkServiceVisibility::OAIPrivateLinkServiceVisibility() {
    this->initializeModel();
}

OAIPrivateLinkServiceVisibility::~OAIPrivateLinkServiceVisibility() {}

void OAIPrivateLinkServiceVisibility::initializeModel() {

    m_visible_isSet = false;
    m_visible_isValid = false;
}

void OAIPrivateLinkServiceVisibility::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrivateLinkServiceVisibility::fromJsonObject(QJsonObject json) {

    m_visible_isValid = ::OpenAPI::fromJsonValue(m_visible, json[QString("visible")]);
    m_visible_isSet = !json[QString("visible")].isNull() && m_visible_isValid;
}

QString OAIPrivateLinkServiceVisibility::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrivateLinkServiceVisibility::asJsonObject() const {
    QJsonObject obj;
    if (m_visible_isSet) {
        obj.insert(QString("visible"), ::OpenAPI::toJsonValue(m_visible));
    }
    return obj;
}

bool OAIPrivateLinkServiceVisibility::isVisible() const {
    return m_visible;
}
void OAIPrivateLinkServiceVisibility::setVisible(const bool &visible) {
    m_visible = visible;
    m_visible_isSet = true;
}

bool OAIPrivateLinkServiceVisibility::is_visible_Set() const{
    return m_visible_isSet;
}

bool OAIPrivateLinkServiceVisibility::is_visible_Valid() const{
    return m_visible_isValid;
}

bool OAIPrivateLinkServiceVisibility::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_visible_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrivateLinkServiceVisibility::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
