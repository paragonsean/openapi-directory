/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceSet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceSet::OAIResourceSet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceSet::OAIResourceSet() {
    this->initializeModel();
}

OAIResourceSet::~OAIResourceSet() {}

void OAIResourceSet::initializeModel() {

    m_subscriptions_isSet = false;
    m_subscriptions_isValid = false;
}

void OAIResourceSet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResourceSet::fromJsonObject(QJsonObject json) {

    m_subscriptions_isValid = ::OpenAPI::fromJsonValue(m_subscriptions, json[QString("subscriptions")]);
    m_subscriptions_isSet = !json[QString("subscriptions")].isNull() && m_subscriptions_isValid;
}

QString OAIResourceSet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResourceSet::asJsonObject() const {
    QJsonObject obj;
    if (m_subscriptions.size() > 0) {
        obj.insert(QString("subscriptions"), ::OpenAPI::toJsonValue(m_subscriptions));
    }
    return obj;
}

QList<QString> OAIResourceSet::getSubscriptions() const {
    return m_subscriptions;
}
void OAIResourceSet::setSubscriptions(const QList<QString> &subscriptions) {
    m_subscriptions = subscriptions;
    m_subscriptions_isSet = true;
}

bool OAIResourceSet::is_subscriptions_Set() const{
    return m_subscriptions_isSet;
}

bool OAIResourceSet::is_subscriptions_Valid() const{
    return m_subscriptions_isValid;
}

bool OAIResourceSet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_subscriptions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResourceSet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
