/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Private endpoint resource.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:30:01.956435-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PrivateEndpointConnectionPropertiesPrivateEndpoint {
  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private Object properties;

  public PrivateEndpointConnectionPropertiesPrivateEndpoint() {
  }

  public PrivateEndpointConnectionPropertiesPrivateEndpoint etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * A unique read-only string that changes whenever the resource is updated.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public PrivateEndpointConnectionPropertiesPrivateEndpoint properties(Object properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @javax.annotation.Nullable
  public Object getProperties() {
    return properties;
  }

  public void setProperties(Object properties) {
    this.properties = properties;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrivateEndpointConnectionPropertiesPrivateEndpoint privateEndpointConnectionPropertiesPrivateEndpoint = (PrivateEndpointConnectionPropertiesPrivateEndpoint) o;
    return Objects.equals(this.etag, privateEndpointConnectionPropertiesPrivateEndpoint.etag) &&
        Objects.equals(this.properties, privateEndpointConnectionPropertiesPrivateEndpoint.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(etag, properties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrivateEndpointConnectionPropertiesPrivateEndpoint {\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("etag");
    openapiFields.add("properties");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PrivateEndpointConnectionPropertiesPrivateEndpoint
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PrivateEndpointConnectionPropertiesPrivateEndpoint.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PrivateEndpointConnectionPropertiesPrivateEndpoint is not found in the empty JSON string", PrivateEndpointConnectionPropertiesPrivateEndpoint.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PrivateEndpointConnectionPropertiesPrivateEndpoint.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PrivateEndpointConnectionPropertiesPrivateEndpoint` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PrivateEndpointConnectionPropertiesPrivateEndpoint.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PrivateEndpointConnectionPropertiesPrivateEndpoint' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PrivateEndpointConnectionPropertiesPrivateEndpoint> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PrivateEndpointConnectionPropertiesPrivateEndpoint.class));

       return (TypeAdapter<T>) new TypeAdapter<PrivateEndpointConnectionPropertiesPrivateEndpoint>() {
           @Override
           public void write(JsonWriter out, PrivateEndpointConnectionPropertiesPrivateEndpoint value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PrivateEndpointConnectionPropertiesPrivateEndpoint read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PrivateEndpointConnectionPropertiesPrivateEndpoint given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PrivateEndpointConnectionPropertiesPrivateEndpoint
   * @throws IOException if the JSON string is invalid with respect to PrivateEndpointConnectionPropertiesPrivateEndpoint
   */
  public static PrivateEndpointConnectionPropertiesPrivateEndpoint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PrivateEndpointConnectionPropertiesPrivateEndpoint.class);
  }

  /**
   * Convert an instance of PrivateEndpointConnectionPropertiesPrivateEndpoint to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

