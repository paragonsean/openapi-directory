# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AutoApprovedPrivateLinkService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, private_link_service: str=None):
        """AutoApprovedPrivateLinkService - a model defined in OpenAPI

        :param private_link_service: The private_link_service of this AutoApprovedPrivateLinkService.
        """
        self.openapi_types = {
            'private_link_service': str
        }

        self.attribute_map = {
            'private_link_service': 'privateLinkService'
        }

        self._private_link_service = private_link_service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoApprovedPrivateLinkService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoApprovedPrivateLinkService of this AutoApprovedPrivateLinkService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def private_link_service(self):
        """Gets the private_link_service of this AutoApprovedPrivateLinkService.

        The id of the private link service resource.

        :return: The private_link_service of this AutoApprovedPrivateLinkService.
        :rtype: str
        """
        return self._private_link_service

    @private_link_service.setter
    def private_link_service(self, private_link_service):
        """Sets the private_link_service of this AutoApprovedPrivateLinkService.

        The id of the private link service resource.

        :param private_link_service: The private_link_service of this AutoApprovedPrivateLinkService.
        :type private_link_service: str
        """

        self._private_link_service = private_link_service
