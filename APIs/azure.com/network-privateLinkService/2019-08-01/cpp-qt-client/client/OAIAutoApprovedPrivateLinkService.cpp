/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutoApprovedPrivateLinkService.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutoApprovedPrivateLinkService::OAIAutoApprovedPrivateLinkService(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutoApprovedPrivateLinkService::OAIAutoApprovedPrivateLinkService() {
    this->initializeModel();
}

OAIAutoApprovedPrivateLinkService::~OAIAutoApprovedPrivateLinkService() {}

void OAIAutoApprovedPrivateLinkService::initializeModel() {

    m_private_link_service_isSet = false;
    m_private_link_service_isValid = false;
}

void OAIAutoApprovedPrivateLinkService::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutoApprovedPrivateLinkService::fromJsonObject(QJsonObject json) {

    m_private_link_service_isValid = ::OpenAPI::fromJsonValue(m_private_link_service, json[QString("privateLinkService")]);
    m_private_link_service_isSet = !json[QString("privateLinkService")].isNull() && m_private_link_service_isValid;
}

QString OAIAutoApprovedPrivateLinkService::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutoApprovedPrivateLinkService::asJsonObject() const {
    QJsonObject obj;
    if (m_private_link_service_isSet) {
        obj.insert(QString("privateLinkService"), ::OpenAPI::toJsonValue(m_private_link_service));
    }
    return obj;
}

QString OAIAutoApprovedPrivateLinkService::getPrivateLinkService() const {
    return m_private_link_service;
}
void OAIAutoApprovedPrivateLinkService::setPrivateLinkService(const QString &private_link_service) {
    m_private_link_service = private_link_service;
    m_private_link_service_isSet = true;
}

bool OAIAutoApprovedPrivateLinkService::is_private_link_service_Set() const{
    return m_private_link_service_isSet;
}

bool OAIAutoApprovedPrivateLinkService::is_private_link_service_Valid() const{
    return m_private_link_service_isValid;
}

bool OAIAutoApprovedPrivateLinkService::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_private_link_service_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutoApprovedPrivateLinkService::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
