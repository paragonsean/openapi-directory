# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.private_endpoint_connection import PrivateEndpointConnection
from openapi_server.models.private_link_service_ip_configuration import PrivateLinkServiceIpConfiguration
from openapi_server.models.private_link_service_properties_load_balancer_frontend_ip_configurations_inner import PrivateLinkServicePropertiesLoadBalancerFrontendIpConfigurationsInner
from openapi_server.models.private_link_service_properties_network_interfaces_inner import PrivateLinkServicePropertiesNetworkInterfacesInner
from openapi_server.models.resource_set import ResourceSet
from openapi_server import util


class PrivateLinkServiceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alias: str=None, auto_approval: ResourceSet=None, fqdns: List[str]=None, ip_configurations: List[PrivateLinkServiceIpConfiguration]=None, load_balancer_frontend_ip_configurations: List[PrivateLinkServicePropertiesLoadBalancerFrontendIpConfigurationsInner]=None, network_interfaces: List[PrivateLinkServicePropertiesNetworkInterfacesInner]=None, private_endpoint_connections: List[PrivateEndpointConnection]=None, provisioning_state: str=None, visibility: ResourceSet=None):
        """PrivateLinkServiceProperties - a model defined in OpenAPI

        :param alias: The alias of this PrivateLinkServiceProperties.
        :param auto_approval: The auto_approval of this PrivateLinkServiceProperties.
        :param fqdns: The fqdns of this PrivateLinkServiceProperties.
        :param ip_configurations: The ip_configurations of this PrivateLinkServiceProperties.
        :param load_balancer_frontend_ip_configurations: The load_balancer_frontend_ip_configurations of this PrivateLinkServiceProperties.
        :param network_interfaces: The network_interfaces of this PrivateLinkServiceProperties.
        :param private_endpoint_connections: The private_endpoint_connections of this PrivateLinkServiceProperties.
        :param provisioning_state: The provisioning_state of this PrivateLinkServiceProperties.
        :param visibility: The visibility of this PrivateLinkServiceProperties.
        """
        self.openapi_types = {
            'alias': str,
            'auto_approval': ResourceSet,
            'fqdns': List[str],
            'ip_configurations': List[PrivateLinkServiceIpConfiguration],
            'load_balancer_frontend_ip_configurations': List[PrivateLinkServicePropertiesLoadBalancerFrontendIpConfigurationsInner],
            'network_interfaces': List[PrivateLinkServicePropertiesNetworkInterfacesInner],
            'private_endpoint_connections': List[PrivateEndpointConnection],
            'provisioning_state': str,
            'visibility': ResourceSet
        }

        self.attribute_map = {
            'alias': 'alias',
            'auto_approval': 'autoApproval',
            'fqdns': 'fqdns',
            'ip_configurations': 'ipConfigurations',
            'load_balancer_frontend_ip_configurations': 'loadBalancerFrontendIpConfigurations',
            'network_interfaces': 'networkInterfaces',
            'private_endpoint_connections': 'privateEndpointConnections',
            'provisioning_state': 'provisioningState',
            'visibility': 'visibility'
        }

        self._alias = alias
        self._auto_approval = auto_approval
        self._fqdns = fqdns
        self._ip_configurations = ip_configurations
        self._load_balancer_frontend_ip_configurations = load_balancer_frontend_ip_configurations
        self._network_interfaces = network_interfaces
        self._private_endpoint_connections = private_endpoint_connections
        self._provisioning_state = provisioning_state
        self._visibility = visibility

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrivateLinkServiceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrivateLinkServiceProperties of this PrivateLinkServiceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alias(self):
        """Gets the alias of this PrivateLinkServiceProperties.

        The alias of the private link service.

        :return: The alias of this PrivateLinkServiceProperties.
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this PrivateLinkServiceProperties.

        The alias of the private link service.

        :param alias: The alias of this PrivateLinkServiceProperties.
        :type alias: str
        """

        self._alias = alias

    @property
    def auto_approval(self):
        """Gets the auto_approval of this PrivateLinkServiceProperties.

        The auto-approval list of the private link service.

        :return: The auto_approval of this PrivateLinkServiceProperties.
        :rtype: ResourceSet
        """
        return self._auto_approval

    @auto_approval.setter
    def auto_approval(self, auto_approval):
        """Sets the auto_approval of this PrivateLinkServiceProperties.

        The auto-approval list of the private link service.

        :param auto_approval: The auto_approval of this PrivateLinkServiceProperties.
        :type auto_approval: ResourceSet
        """

        self._auto_approval = auto_approval

    @property
    def fqdns(self):
        """Gets the fqdns of this PrivateLinkServiceProperties.

        The list of Fqdn.

        :return: The fqdns of this PrivateLinkServiceProperties.
        :rtype: List[str]
        """
        return self._fqdns

    @fqdns.setter
    def fqdns(self, fqdns):
        """Sets the fqdns of this PrivateLinkServiceProperties.

        The list of Fqdn.

        :param fqdns: The fqdns of this PrivateLinkServiceProperties.
        :type fqdns: List[str]
        """

        self._fqdns = fqdns

    @property
    def ip_configurations(self):
        """Gets the ip_configurations of this PrivateLinkServiceProperties.

        An array of references to the private link service IP configuration.

        :return: The ip_configurations of this PrivateLinkServiceProperties.
        :rtype: List[PrivateLinkServiceIpConfiguration]
        """
        return self._ip_configurations

    @ip_configurations.setter
    def ip_configurations(self, ip_configurations):
        """Sets the ip_configurations of this PrivateLinkServiceProperties.

        An array of references to the private link service IP configuration.

        :param ip_configurations: The ip_configurations of this PrivateLinkServiceProperties.
        :type ip_configurations: List[PrivateLinkServiceIpConfiguration]
        """

        self._ip_configurations = ip_configurations

    @property
    def load_balancer_frontend_ip_configurations(self):
        """Gets the load_balancer_frontend_ip_configurations of this PrivateLinkServiceProperties.

        An array of references to the load balancer IP configurations.

        :return: The load_balancer_frontend_ip_configurations of this PrivateLinkServiceProperties.
        :rtype: List[PrivateLinkServicePropertiesLoadBalancerFrontendIpConfigurationsInner]
        """
        return self._load_balancer_frontend_ip_configurations

    @load_balancer_frontend_ip_configurations.setter
    def load_balancer_frontend_ip_configurations(self, load_balancer_frontend_ip_configurations):
        """Sets the load_balancer_frontend_ip_configurations of this PrivateLinkServiceProperties.

        An array of references to the load balancer IP configurations.

        :param load_balancer_frontend_ip_configurations: The load_balancer_frontend_ip_configurations of this PrivateLinkServiceProperties.
        :type load_balancer_frontend_ip_configurations: List[PrivateLinkServicePropertiesLoadBalancerFrontendIpConfigurationsInner]
        """

        self._load_balancer_frontend_ip_configurations = load_balancer_frontend_ip_configurations

    @property
    def network_interfaces(self):
        """Gets the network_interfaces of this PrivateLinkServiceProperties.

        Gets an array of references to the network interfaces created for this private link service.

        :return: The network_interfaces of this PrivateLinkServiceProperties.
        :rtype: List[PrivateLinkServicePropertiesNetworkInterfacesInner]
        """
        return self._network_interfaces

    @network_interfaces.setter
    def network_interfaces(self, network_interfaces):
        """Sets the network_interfaces of this PrivateLinkServiceProperties.

        Gets an array of references to the network interfaces created for this private link service.

        :param network_interfaces: The network_interfaces of this PrivateLinkServiceProperties.
        :type network_interfaces: List[PrivateLinkServicePropertiesNetworkInterfacesInner]
        """

        self._network_interfaces = network_interfaces

    @property
    def private_endpoint_connections(self):
        """Gets the private_endpoint_connections of this PrivateLinkServiceProperties.

        An array of list about connections to the private endpoint.

        :return: The private_endpoint_connections of this PrivateLinkServiceProperties.
        :rtype: List[PrivateEndpointConnection]
        """
        return self._private_endpoint_connections

    @private_endpoint_connections.setter
    def private_endpoint_connections(self, private_endpoint_connections):
        """Sets the private_endpoint_connections of this PrivateLinkServiceProperties.

        An array of list about connections to the private endpoint.

        :param private_endpoint_connections: The private_endpoint_connections of this PrivateLinkServiceProperties.
        :type private_endpoint_connections: List[PrivateEndpointConnection]
        """

        self._private_endpoint_connections = private_endpoint_connections

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this PrivateLinkServiceProperties.

        The current provisioning state.

        :return: The provisioning_state of this PrivateLinkServiceProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this PrivateLinkServiceProperties.

        The current provisioning state.

        :param provisioning_state: The provisioning_state of this PrivateLinkServiceProperties.
        :type provisioning_state: str
        """
        allowed_values = ["Succeeded", "Updating", "Deleting", "Failed"]  # noqa: E501
        if provisioning_state not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_state` ({0}), must be one of {1}"
                .format(provisioning_state, allowed_values)
            )

        self._provisioning_state = provisioning_state

    @property
    def visibility(self):
        """Gets the visibility of this PrivateLinkServiceProperties.

        The visibility list of the private link service.

        :return: The visibility of this PrivateLinkServiceProperties.
        :rtype: ResourceSet
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this PrivateLinkServiceProperties.

        The visibility list of the private link service.

        :param visibility: The visibility of this PrivateLinkServiceProperties.
        :type visibility: ResourceSet
        """

        self._visibility = visibility
