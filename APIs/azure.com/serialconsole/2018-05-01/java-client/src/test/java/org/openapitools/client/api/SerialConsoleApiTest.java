/*
 * MicrosoftSerialConsoleClient
 * The Azure Serial Console allows you to access the serial console of a Virtual Machine or VM scale set instance
 *
 * The version of the OpenAPI document: 2018-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DisableSerialConsoleResult;
import org.openapitools.client.model.EnableSerialConsoleResult;
import org.openapitools.client.model.GetSerialConsoleSubscriptionNotFound;
import org.openapitools.client.model.SerialConsoleOperations;
import org.openapitools.client.model.SerialConsoleStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SerialConsoleApi
 */
@Disabled
public class SerialConsoleApiTest {

    private final SerialConsoleApi api = new SerialConsoleApi();

    /**
     * Disable Serial Console for a subscription
     *
     * Disables the Serial Console service for all VMs and VM scale sets in the provided subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disableConsoleTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String _default = null;
        DisableSerialConsoleResult response = api.disableConsole(apiVersion, subscriptionId, _default);
        // TODO: test validations
    }

    /**
     * Enable Serial Console for a subscription
     *
     * Enables the Serial Console service for all VMs and VM scale sets in the provided subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enableConsoleTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String _default = null;
        EnableSerialConsoleResult response = api.enableConsole(apiVersion, subscriptionId, _default);
        // TODO: test validations
    }

    /**
     * Get the disabled status for a subscription
     *
     * Gets whether or not Serial Console is disabled for a given subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConsoleStatusTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String _default = null;
        SerialConsoleStatus response = api.getConsoleStatus(apiVersion, subscriptionId, _default);
        // TODO: test validations
    }

    /**
     * Gets a list of Serial Console API operations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listOperationsTest() throws ApiException {
        String apiVersion = null;
        SerialConsoleOperations response = api.listOperations(apiVersion);
        // TODO: test validations
    }

}
