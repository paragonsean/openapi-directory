/**
 * MicrosoftSerialConsoleClient
 * The Azure Serial Console allows you to access the serial console of a Virtual Machine or VM scale set instance
 *
 * The version of the OpenAPI document: 2018-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISerialConsoleOperations_value_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISerialConsoleOperations_value_inner::OAISerialConsoleOperations_value_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISerialConsoleOperations_value_inner::OAISerialConsoleOperations_value_inner() {
    this->initializeModel();
}

OAISerialConsoleOperations_value_inner::~OAISerialConsoleOperations_value_inner() {}

void OAISerialConsoleOperations_value_inner::initializeModel() {

    m_display_isSet = false;
    m_display_isValid = false;

    m_is_data_action_isSet = false;
    m_is_data_action_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAISerialConsoleOperations_value_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISerialConsoleOperations_value_inner::fromJsonObject(QJsonObject json) {

    m_display_isValid = ::OpenAPI::fromJsonValue(m_display, json[QString("display")]);
    m_display_isSet = !json[QString("display")].isNull() && m_display_isValid;

    m_is_data_action_isValid = ::OpenAPI::fromJsonValue(m_is_data_action, json[QString("isDataAction")]);
    m_is_data_action_isSet = !json[QString("isDataAction")].isNull() && m_is_data_action_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAISerialConsoleOperations_value_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISerialConsoleOperations_value_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_display.isSet()) {
        obj.insert(QString("display"), ::OpenAPI::toJsonValue(m_display));
    }
    if (m_is_data_action_isSet) {
        obj.insert(QString("isDataAction"), ::OpenAPI::toJsonValue(m_is_data_action));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAISerialConsoleOperations_value_inner_display OAISerialConsoleOperations_value_inner::getDisplay() const {
    return m_display;
}
void OAISerialConsoleOperations_value_inner::setDisplay(const OAISerialConsoleOperations_value_inner_display &display) {
    m_display = display;
    m_display_isSet = true;
}

bool OAISerialConsoleOperations_value_inner::is_display_Set() const{
    return m_display_isSet;
}

bool OAISerialConsoleOperations_value_inner::is_display_Valid() const{
    return m_display_isValid;
}

QString OAISerialConsoleOperations_value_inner::getIsDataAction() const {
    return m_is_data_action;
}
void OAISerialConsoleOperations_value_inner::setIsDataAction(const QString &is_data_action) {
    m_is_data_action = is_data_action;
    m_is_data_action_isSet = true;
}

bool OAISerialConsoleOperations_value_inner::is_is_data_action_Set() const{
    return m_is_data_action_isSet;
}

bool OAISerialConsoleOperations_value_inner::is_is_data_action_Valid() const{
    return m_is_data_action_isValid;
}

QString OAISerialConsoleOperations_value_inner::getName() const {
    return m_name;
}
void OAISerialConsoleOperations_value_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISerialConsoleOperations_value_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAISerialConsoleOperations_value_inner::is_name_Valid() const{
    return m_name_isValid;
}

bool OAISerialConsoleOperations_value_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_data_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISerialConsoleOperations_value_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
