/**
 * MicrosoftSerialConsoleClient
 * The Azure Serial Console allows you to access the serial console of a Virtual Machine or VM scale set instance
 *
 * The version of the OpenAPI document: 2018-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DisableSerialConsoleResult from './model/DisableSerialConsoleResult';
import EnableSerialConsoleResult from './model/EnableSerialConsoleResult';
import GetSerialConsoleSubscriptionNotFound from './model/GetSerialConsoleSubscriptionNotFound';
import SerialConsoleOperations from './model/SerialConsoleOperations';
import SerialConsoleOperationsValueInner from './model/SerialConsoleOperationsValueInner';
import SerialConsoleOperationsValueInnerDisplay from './model/SerialConsoleOperationsValueInnerDisplay';
import SerialConsoleStatus from './model/SerialConsoleStatus';
import SerialConsoleApi from './api/SerialConsoleApi';


/**
* The Azure Serial Console allows you to access the serial console of a Virtual Machine or VM scale set instance.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MicrosoftSerialConsoleClient = require('index'); // See note below*.
* var xxxSvc = new MicrosoftSerialConsoleClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MicrosoftSerialConsoleClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MicrosoftSerialConsoleClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MicrosoftSerialConsoleClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-05-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DisableSerialConsoleResult model constructor.
     * @property {module:model/DisableSerialConsoleResult}
     */
    DisableSerialConsoleResult,

    /**
     * The EnableSerialConsoleResult model constructor.
     * @property {module:model/EnableSerialConsoleResult}
     */
    EnableSerialConsoleResult,

    /**
     * The GetSerialConsoleSubscriptionNotFound model constructor.
     * @property {module:model/GetSerialConsoleSubscriptionNotFound}
     */
    GetSerialConsoleSubscriptionNotFound,

    /**
     * The SerialConsoleOperations model constructor.
     * @property {module:model/SerialConsoleOperations}
     */
    SerialConsoleOperations,

    /**
     * The SerialConsoleOperationsValueInner model constructor.
     * @property {module:model/SerialConsoleOperationsValueInner}
     */
    SerialConsoleOperationsValueInner,

    /**
     * The SerialConsoleOperationsValueInnerDisplay model constructor.
     * @property {module:model/SerialConsoleOperationsValueInnerDisplay}
     */
    SerialConsoleOperationsValueInnerDisplay,

    /**
     * The SerialConsoleStatus model constructor.
     * @property {module:model/SerialConsoleStatus}
     */
    SerialConsoleStatus,

    /**
    * The SerialConsoleApi service constructor.
    * @property {module:api/SerialConsoleApi}
    */
    SerialConsoleApi
};
