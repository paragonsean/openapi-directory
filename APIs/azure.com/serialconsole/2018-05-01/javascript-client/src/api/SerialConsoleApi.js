/**
 * MicrosoftSerialConsoleClient
 * The Azure Serial Console allows you to access the serial console of a Virtual Machine or VM scale set instance
 *
 * The version of the OpenAPI document: 2018-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DisableSerialConsoleResult from '../model/DisableSerialConsoleResult';
import EnableSerialConsoleResult from '../model/EnableSerialConsoleResult';
import GetSerialConsoleSubscriptionNotFound from '../model/GetSerialConsoleSubscriptionNotFound';
import SerialConsoleOperations from '../model/SerialConsoleOperations';
import SerialConsoleStatus from '../model/SerialConsoleStatus';

/**
* SerialConsole service.
* @module api/SerialConsoleApi
* @version 2018-05-01
*/
export default class SerialConsoleApi {

    /**
    * Constructs a new SerialConsoleApi. 
    * @alias module:api/SerialConsoleApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the disableConsole operation.
     * @callback module:api/SerialConsoleApi~disableConsoleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DisableSerialConsoleResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disable Serial Console for a subscription
     * Disables the Serial Console service for all VMs and VM scale sets in the provided subscription
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId Subscription ID which uniquely identifies the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call requiring it.
     * @param {String} _default Default parameter. Leave the value as \"default\".
     * @param {module:api/SerialConsoleApi~disableConsoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DisableSerialConsoleResult}
     */
    disableConsole(apiVersion, subscriptionId, _default, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling disableConsole");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling disableConsole");
      }
      // verify the required parameter '_default' is set
      if (_default === undefined || _default === null) {
        throw new Error("Missing the required parameter '_default' when calling disableConsole");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'default': _default
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DisableSerialConsoleResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.SerialConsole/consoleServices/{default}/disableConsole', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enableConsole operation.
     * @callback module:api/SerialConsoleApi~enableConsoleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EnableSerialConsoleResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enable Serial Console for a subscription
     * Enables the Serial Console service for all VMs and VM scale sets in the provided subscription
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId Subscription ID which uniquely identifies the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call requiring it.
     * @param {String} _default Default parameter. Leave the value as \"default\".
     * @param {module:api/SerialConsoleApi~enableConsoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EnableSerialConsoleResult}
     */
    enableConsole(apiVersion, subscriptionId, _default, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling enableConsole");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling enableConsole");
      }
      // verify the required parameter '_default' is set
      if (_default === undefined || _default === null) {
        throw new Error("Missing the required parameter '_default' when calling enableConsole");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'default': _default
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EnableSerialConsoleResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.SerialConsole/consoleServices/{default}/enableConsole', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getConsoleStatus operation.
     * @callback module:api/SerialConsoleApi~getConsoleStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SerialConsoleStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the disabled status for a subscription
     * Gets whether or not Serial Console is disabled for a given subscription
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId Subscription ID which uniquely identifies the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call requiring it.
     * @param {String} _default Default parameter. Leave the value as \"default\".
     * @param {module:api/SerialConsoleApi~getConsoleStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SerialConsoleStatus}
     */
    getConsoleStatus(apiVersion, subscriptionId, _default, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling getConsoleStatus");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling getConsoleStatus");
      }
      // verify the required parameter '_default' is set
      if (_default === undefined || _default === null) {
        throw new Error("Missing the required parameter '_default' when calling getConsoleStatus");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'default': _default
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SerialConsoleStatus;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.SerialConsole/consoleServices/{default}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listOperations operation.
     * @callback module:api/SerialConsoleApi~listOperationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SerialConsoleOperations} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of Serial Console API operations.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:api/SerialConsoleApi~listOperationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SerialConsoleOperations}
     */
    listOperations(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling listOperations");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SerialConsoleOperations;
      return this.apiClient.callApi(
        '/providers/Microsoft.SerialConsole/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
