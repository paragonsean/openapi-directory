# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StorageContainerProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_string: str=None, container_name: str=None, resource_group: str=None, subscription_id: str=None):
        """StorageContainerProperties - a model defined in OpenAPI

        :param connection_string: The connection_string of this StorageContainerProperties.
        :param container_name: The container_name of this StorageContainerProperties.
        :param resource_group: The resource_group of this StorageContainerProperties.
        :param subscription_id: The subscription_id of this StorageContainerProperties.
        """
        self.openapi_types = {
            'connection_string': str,
            'container_name': str,
            'resource_group': str,
            'subscription_id': str
        }

        self.attribute_map = {
            'connection_string': 'connectionString',
            'container_name': 'containerName',
            'resource_group': 'resourceGroup',
            'subscription_id': 'subscriptionId'
        }

        self._connection_string = connection_string
        self._container_name = container_name
        self._resource_group = resource_group
        self._subscription_id = subscription_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageContainerProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorageContainerProperties of this StorageContainerProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_string(self):
        """Gets the connection_string of this StorageContainerProperties.

        The connection string of the storage account.

        :return: The connection_string of this StorageContainerProperties.
        :rtype: str
        """
        return self._connection_string

    @connection_string.setter
    def connection_string(self, connection_string):
        """Sets the connection_string of this StorageContainerProperties.

        The connection string of the storage account.

        :param connection_string: The connection_string of this StorageContainerProperties.
        :type connection_string: str
        """

        self._connection_string = connection_string

    @property
    def container_name(self):
        """Gets the container_name of this StorageContainerProperties.

        The name of storage container in the storage account.

        :return: The container_name of this StorageContainerProperties.
        :rtype: str
        """
        return self._container_name

    @container_name.setter
    def container_name(self, container_name):
        """Sets the container_name of this StorageContainerProperties.

        The name of storage container in the storage account.

        :param container_name: The container_name of this StorageContainerProperties.
        :type container_name: str
        """

        self._container_name = container_name

    @property
    def resource_group(self):
        """Gets the resource_group of this StorageContainerProperties.

        The name of the resource group of the storage account.

        :return: The resource_group of this StorageContainerProperties.
        :rtype: str
        """
        return self._resource_group

    @resource_group.setter
    def resource_group(self, resource_group):
        """Sets the resource_group of this StorageContainerProperties.

        The name of the resource group of the storage account.

        :param resource_group: The resource_group of this StorageContainerProperties.
        :type resource_group: str
        """

        self._resource_group = resource_group

    @property
    def subscription_id(self):
        """Gets the subscription_id of this StorageContainerProperties.

        The subscription identifier of the storage account.

        :return: The subscription_id of this StorageContainerProperties.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this StorageContainerProperties.

        The subscription identifier of the storage account.

        :param subscription_id: The subscription_id of this StorageContainerProperties.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id
