/*
 * IoTSpacesClient
 * Use this API to manage the IoTSpaces service instances in your Azure subscription.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ErrorDetails;
import org.openapitools.client.model.IoTSpacesDescription;
import org.openapitools.client.model.IoTSpacesPatchDescription;
import java.util.UUID;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ResourceApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ResourceApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ResourceApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for ioTSpacesCreateOrUpdate
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @param iotSpaceDescription The IoTSpaces instance metadata and security metadata. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted - Put request accepted; the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> DefaultErrorResponse </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTSpacesCreateOrUpdateCall(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, IoTSpacesDescription iotSpaceDescription, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = iotSpaceDescription;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTSpaces/Graph/{resourceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "resourceName" + "}", localVarApiClient.escapeString(resourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ioTSpacesCreateOrUpdateValidateBeforeCall(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, IoTSpacesDescription iotSpaceDescription, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling ioTSpacesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling ioTSpacesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling ioTSpacesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceName' is set
        if (resourceName == null) {
            throw new ApiException("Missing the required parameter 'resourceName' when calling ioTSpacesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'iotSpaceDescription' is set
        if (iotSpaceDescription == null) {
            throw new ApiException("Missing the required parameter 'iotSpaceDescription' when calling ioTSpacesCreateOrUpdate(Async)");
        }

        return ioTSpacesCreateOrUpdateCall(apiVersion, subscriptionId, resourceGroupName, resourceName, iotSpaceDescription, _callback);

    }

    /**
     * 
     * Create or update the metadata of an IoTSpaces instance. The usual pattern to modify a property is to retrieve the IoTSpaces instance metadata and security metadata, and then combine them with the modified values in a new body to update the IoTSpaces instance.
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @param iotSpaceDescription The IoTSpaces instance metadata and security metadata. (required)
     * @return IoTSpacesDescription
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted - Put request accepted; the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> DefaultErrorResponse </td><td>  -  </td></tr>
     </table>
     */
    public IoTSpacesDescription ioTSpacesCreateOrUpdate(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, IoTSpacesDescription iotSpaceDescription) throws ApiException {
        ApiResponse<IoTSpacesDescription> localVarResp = ioTSpacesCreateOrUpdateWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, resourceName, iotSpaceDescription);
        return localVarResp.getData();
    }

    /**
     * 
     * Create or update the metadata of an IoTSpaces instance. The usual pattern to modify a property is to retrieve the IoTSpaces instance metadata and security metadata, and then combine them with the modified values in a new body to update the IoTSpaces instance.
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @param iotSpaceDescription The IoTSpaces instance metadata and security metadata. (required)
     * @return ApiResponse&lt;IoTSpacesDescription&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted - Put request accepted; the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> DefaultErrorResponse </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<IoTSpacesDescription> ioTSpacesCreateOrUpdateWithHttpInfo(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, IoTSpacesDescription iotSpaceDescription) throws ApiException {
        okhttp3.Call localVarCall = ioTSpacesCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, iotSpaceDescription, null);
        Type localVarReturnType = new TypeToken<IoTSpacesDescription>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create or update the metadata of an IoTSpaces instance. The usual pattern to modify a property is to retrieve the IoTSpaces instance metadata and security metadata, and then combine them with the modified values in a new body to update the IoTSpaces instance.
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @param iotSpaceDescription The IoTSpaces instance metadata and security metadata. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted - Put request accepted; the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> DefaultErrorResponse </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTSpacesCreateOrUpdateAsync(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, IoTSpacesDescription iotSpaceDescription, final ApiCallback<IoTSpacesDescription> _callback) throws ApiException {

        okhttp3.Call localVarCall = ioTSpacesCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, iotSpaceDescription, _callback);
        Type localVarReturnType = new TypeToken<IoTSpacesDescription>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for ioTSpacesDelete
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted - Delete request accepted; the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the IoTSpaces service metadata in the service and the status of the delete operation is set to a completed state. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> DefaultErrorResponse </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTSpacesDeleteCall(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTSpaces/Graph/{resourceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "resourceName" + "}", localVarApiClient.escapeString(resourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ioTSpacesDeleteValidateBeforeCall(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling ioTSpacesDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling ioTSpacesDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling ioTSpacesDelete(Async)");
        }

        // verify the required parameter 'resourceName' is set
        if (resourceName == null) {
            throw new ApiException("Missing the required parameter 'resourceName' when calling ioTSpacesDelete(Async)");
        }

        return ioTSpacesDeleteCall(apiVersion, subscriptionId, resourceGroupName, resourceName, _callback);

    }

    /**
     * 
     * Delete an IoTSpaces instance.
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @return IoTSpacesDescription
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted - Delete request accepted; the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the IoTSpaces service metadata in the service and the status of the delete operation is set to a completed state. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> DefaultErrorResponse </td><td>  -  </td></tr>
     </table>
     */
    public IoTSpacesDescription ioTSpacesDelete(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName) throws ApiException {
        ApiResponse<IoTSpacesDescription> localVarResp = ioTSpacesDeleteWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, resourceName);
        return localVarResp.getData();
    }

    /**
     * 
     * Delete an IoTSpaces instance.
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @return ApiResponse&lt;IoTSpacesDescription&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted - Delete request accepted; the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the IoTSpaces service metadata in the service and the status of the delete operation is set to a completed state. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> DefaultErrorResponse </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<IoTSpacesDescription> ioTSpacesDeleteWithHttpInfo(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName) throws ApiException {
        okhttp3.Call localVarCall = ioTSpacesDeleteValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, null);
        Type localVarReturnType = new TypeToken<IoTSpacesDescription>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Delete an IoTSpaces instance.
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted - Delete request accepted; the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the IoTSpaces service metadata in the service and the status of the delete operation is set to a completed state. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> DefaultErrorResponse </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTSpacesDeleteAsync(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, final ApiCallback<IoTSpacesDescription> _callback) throws ApiException {

        okhttp3.Call localVarCall = ioTSpacesDeleteValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, _callback);
        Type localVarReturnType = new TypeToken<IoTSpacesDescription>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for ioTSpacesGet
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The body contains all the non-security properties of the IoTSpaces instance. Security-related properties are set to null. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTSpacesGetCall(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTSpaces/Graph/{resourceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "resourceName" + "}", localVarApiClient.escapeString(resourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ioTSpacesGetValidateBeforeCall(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling ioTSpacesGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling ioTSpacesGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling ioTSpacesGet(Async)");
        }

        // verify the required parameter 'resourceName' is set
        if (resourceName == null) {
            throw new ApiException("Missing the required parameter 'resourceName' when calling ioTSpacesGet(Async)");
        }

        return ioTSpacesGetCall(apiVersion, subscriptionId, resourceGroupName, resourceName, _callback);

    }

    /**
     * 
     * Get the metadata of a IoTSpaces instance.
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @return IoTSpacesDescription
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The body contains all the non-security properties of the IoTSpaces instance. Security-related properties are set to null. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default error response </td><td>  -  </td></tr>
     </table>
     */
    public IoTSpacesDescription ioTSpacesGet(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName) throws ApiException {
        ApiResponse<IoTSpacesDescription> localVarResp = ioTSpacesGetWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, resourceName);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the metadata of a IoTSpaces instance.
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @return ApiResponse&lt;IoTSpacesDescription&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The body contains all the non-security properties of the IoTSpaces instance. Security-related properties are set to null. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<IoTSpacesDescription> ioTSpacesGetWithHttpInfo(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName) throws ApiException {
        okhttp3.Call localVarCall = ioTSpacesGetValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, null);
        Type localVarReturnType = new TypeToken<IoTSpacesDescription>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the metadata of a IoTSpaces instance.
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The body contains all the non-security properties of the IoTSpaces instance. Security-related properties are set to null. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTSpacesGetAsync(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, final ApiCallback<IoTSpacesDescription> _callback) throws ApiException {

        okhttp3.Call localVarCall = ioTSpacesGetValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, _callback);
        Type localVarReturnType = new TypeToken<IoTSpacesDescription>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for ioTSpacesUpdate
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @param iotSpacePatchDescription The IoTSpaces instance metadata and security metadata. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted - Put request accepted; the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> DefaultErrorResponse </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTSpacesUpdateCall(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, IoTSpacesPatchDescription iotSpacePatchDescription, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = iotSpacePatchDescription;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTSpaces/Graph/{resourceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "resourceName" + "}", localVarApiClient.escapeString(resourceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ioTSpacesUpdateValidateBeforeCall(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, IoTSpacesPatchDescription iotSpacePatchDescription, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling ioTSpacesUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling ioTSpacesUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling ioTSpacesUpdate(Async)");
        }

        // verify the required parameter 'resourceName' is set
        if (resourceName == null) {
            throw new ApiException("Missing the required parameter 'resourceName' when calling ioTSpacesUpdate(Async)");
        }

        // verify the required parameter 'iotSpacePatchDescription' is set
        if (iotSpacePatchDescription == null) {
            throw new ApiException("Missing the required parameter 'iotSpacePatchDescription' when calling ioTSpacesUpdate(Async)");
        }

        return ioTSpacesUpdateCall(apiVersion, subscriptionId, resourceGroupName, resourceName, iotSpacePatchDescription, _callback);

    }

    /**
     * 
     * Update the metadata of a IoTSpaces instance.
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @param iotSpacePatchDescription The IoTSpaces instance metadata and security metadata. (required)
     * @return IoTSpacesDescription
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted - Put request accepted; the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> DefaultErrorResponse </td><td>  -  </td></tr>
     </table>
     */
    public IoTSpacesDescription ioTSpacesUpdate(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, IoTSpacesPatchDescription iotSpacePatchDescription) throws ApiException {
        ApiResponse<IoTSpacesDescription> localVarResp = ioTSpacesUpdateWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, resourceName, iotSpacePatchDescription);
        return localVarResp.getData();
    }

    /**
     * 
     * Update the metadata of a IoTSpaces instance.
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @param iotSpacePatchDescription The IoTSpaces instance metadata and security metadata. (required)
     * @return ApiResponse&lt;IoTSpacesDescription&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted - Put request accepted; the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> DefaultErrorResponse </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<IoTSpacesDescription> ioTSpacesUpdateWithHttpInfo(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, IoTSpacesPatchDescription iotSpacePatchDescription) throws ApiException {
        okhttp3.Call localVarCall = ioTSpacesUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, iotSpacePatchDescription, null);
        Type localVarReturnType = new TypeToken<IoTSpacesDescription>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update the metadata of a IoTSpaces instance.
     * @param apiVersion The version of the API. (required)
     * @param subscriptionId The subscription identifier. (required)
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance. (required)
     * @param resourceName The name of the IoTSpaces instance. (required)
     * @param iotSpacePatchDescription The IoTSpaces instance metadata and security metadata. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted - Put request accepted; the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> DefaultErrorResponse </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ioTSpacesUpdateAsync(String apiVersion, UUID subscriptionId, String resourceGroupName, String resourceName, IoTSpacesPatchDescription iotSpacePatchDescription, final ApiCallback<IoTSpacesDescription> _callback) throws ApiException {

        okhttp3.Call localVarCall = ioTSpacesUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, resourceName, iotSpacePatchDescription, _callback);
        Type localVarReturnType = new TypeToken<IoTSpacesDescription>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
