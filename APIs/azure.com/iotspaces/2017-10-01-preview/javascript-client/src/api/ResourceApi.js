/**
 * IoTSpacesClient
 * Use this API to manage the IoTSpaces service instances in your Azure subscription.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorDetails from '../model/ErrorDetails';
import IoTSpacesDescription from '../model/IoTSpacesDescription';
import IoTSpacesPatchDescription from '../model/IoTSpacesPatchDescription';

/**
* Resource service.
* @module api/ResourceApi
* @version 2017-10-01-preview
*/
export default class ResourceApi {

    /**
    * Constructs a new ResourceApi. 
    * @alias module:api/ResourceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the ioTSpacesCreateOrUpdate operation.
     * @callback module:api/ResourceApi~ioTSpacesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IoTSpacesDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update the metadata of an IoTSpaces instance. The usual pattern to modify a property is to retrieve the IoTSpaces instance metadata and security metadata, and then combine them with the modified values in a new body to update the IoTSpaces instance.
     * @param {module:model/String} apiVersion The version of the API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param {String} resourceName The name of the IoTSpaces instance.
     * @param {module:model/IoTSpacesDescription} iotSpaceDescription The IoTSpaces instance metadata and security metadata.
     * @param {module:api/ResourceApi~ioTSpacesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IoTSpacesDescription}
     */
    ioTSpacesCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, resourceName, iotSpaceDescription, callback) {
      let postBody = iotSpaceDescription;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling ioTSpacesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling ioTSpacesCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling ioTSpacesCreateOrUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling ioTSpacesCreateOrUpdate");
      }
      // verify the required parameter 'iotSpaceDescription' is set
      if (iotSpaceDescription === undefined || iotSpaceDescription === null) {
        throw new Error("Missing the required parameter 'iotSpaceDescription' when calling ioTSpacesCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = IoTSpacesDescription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTSpaces/Graph/{resourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ioTSpacesDelete operation.
     * @callback module:api/ResourceApi~ioTSpacesDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IoTSpacesDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an IoTSpaces instance.
     * @param {module:model/String} apiVersion The version of the API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param {String} resourceName The name of the IoTSpaces instance.
     * @param {module:api/ResourceApi~ioTSpacesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IoTSpacesDescription}
     */
    ioTSpacesDelete(apiVersion, subscriptionId, resourceGroupName, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling ioTSpacesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling ioTSpacesDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling ioTSpacesDelete");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling ioTSpacesDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IoTSpacesDescription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTSpaces/Graph/{resourceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ioTSpacesGet operation.
     * @callback module:api/ResourceApi~ioTSpacesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IoTSpacesDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the metadata of a IoTSpaces instance.
     * @param {module:model/String} apiVersion The version of the API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param {String} resourceName The name of the IoTSpaces instance.
     * @param {module:api/ResourceApi~ioTSpacesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IoTSpacesDescription}
     */
    ioTSpacesGet(apiVersion, subscriptionId, resourceGroupName, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling ioTSpacesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling ioTSpacesGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling ioTSpacesGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling ioTSpacesGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IoTSpacesDescription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTSpaces/Graph/{resourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ioTSpacesUpdate operation.
     * @callback module:api/ResourceApi~ioTSpacesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IoTSpacesDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the metadata of a IoTSpaces instance.
     * @param {module:model/String} apiVersion The version of the API.
     * @param {String} subscriptionId The subscription identifier.
     * @param {String} resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param {String} resourceName The name of the IoTSpaces instance.
     * @param {module:model/IoTSpacesPatchDescription} iotSpacePatchDescription The IoTSpaces instance metadata and security metadata.
     * @param {module:api/ResourceApi~ioTSpacesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IoTSpacesDescription}
     */
    ioTSpacesUpdate(apiVersion, subscriptionId, resourceGroupName, resourceName, iotSpacePatchDescription, callback) {
      let postBody = iotSpacePatchDescription;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling ioTSpacesUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling ioTSpacesUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling ioTSpacesUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling ioTSpacesUpdate");
      }
      // verify the required parameter 'iotSpacePatchDescription' is set
      if (iotSpacePatchDescription === undefined || iotSpacePatchDescription === null) {
        throw new Error("Missing the required parameter 'iotSpacePatchDescription' when calling ioTSpacesUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = IoTSpacesDescription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTSpaces/Graph/{resourceName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
