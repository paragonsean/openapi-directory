/**
 * IoTSpacesClient
 * Use this API to manage the IoTSpaces service instances in your Azure subscription.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StorageContainerProperties from './StorageContainerProperties';

/**
 * The IoTSpacesProperties model module.
 * @module model/IoTSpacesProperties
 * @version 2017-10-01-preview
 */
class IoTSpacesProperties {
    /**
     * Constructs a new <code>IoTSpacesProperties</code>.
     * The properties of an IoTSpaces instance.
     * @alias module:model/IoTSpacesProperties
     */
    constructor() { 
        
        IoTSpacesProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoTSpacesProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoTSpacesProperties} obj Optional instance to populate.
     * @return {module:model/IoTSpacesProperties} The populated <code>IoTSpacesProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoTSpacesProperties();

            if (data.hasOwnProperty('managementApiUrl')) {
                obj['managementApiUrl'] = ApiClient.convertToType(data['managementApiUrl'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('storageContainer')) {
                obj['storageContainer'] = StorageContainerProperties.constructFromObject(data['storageContainer']);
            }
            if (data.hasOwnProperty('webPortalUrl')) {
                obj['webPortalUrl'] = ApiClient.convertToType(data['webPortalUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoTSpacesProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoTSpacesProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['managementApiUrl'] && !(typeof data['managementApiUrl'] === 'string' || data['managementApiUrl'] instanceof String)) {
            throw new Error("Expected the field `managementApiUrl` to be a primitive type in the JSON string but got " + data['managementApiUrl']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `storageContainer`
        if (data['storageContainer']) { // data not null
          StorageContainerProperties.validateJSON(data['storageContainer']);
        }
        // ensure the json data is a string
        if (data['webPortalUrl'] && !(typeof data['webPortalUrl'] === 'string' || data['webPortalUrl'] instanceof String)) {
            throw new Error("Expected the field `webPortalUrl` to be a primitive type in the JSON string but got " + data['webPortalUrl']);
        }

        return true;
    }


}



/**
 * The management Api endpoint.
 * @member {String} managementApiUrl
 */
IoTSpacesProperties.prototype['managementApiUrl'] = undefined;

/**
 * The provisioning state.
 * @member {module:model/IoTSpacesProperties.ProvisioningStateEnum} provisioningState
 */
IoTSpacesProperties.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/StorageContainerProperties} storageContainer
 */
IoTSpacesProperties.prototype['storageContainer'] = undefined;

/**
 * The management UI endpoint.
 * @member {String} webPortalUrl
 */
IoTSpacesProperties.prototype['webPortalUrl'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
IoTSpacesProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Provisioning"
     * @const
     */
    "Provisioning": "Provisioning",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled"
};



export default IoTSpacesProperties;

