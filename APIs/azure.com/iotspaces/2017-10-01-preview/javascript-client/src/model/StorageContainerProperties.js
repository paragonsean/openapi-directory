/**
 * IoTSpacesClient
 * Use this API to manage the IoTSpaces service instances in your Azure subscription.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StorageContainerProperties model module.
 * @module model/StorageContainerProperties
 * @version 2017-10-01-preview
 */
class StorageContainerProperties {
    /**
     * Constructs a new <code>StorageContainerProperties</code>.
     * The properties of the Azure Storage Container for file archive.
     * @alias module:model/StorageContainerProperties
     */
    constructor() { 
        
        StorageContainerProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorageContainerProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageContainerProperties} obj Optional instance to populate.
     * @return {module:model/StorageContainerProperties} The populated <code>StorageContainerProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageContainerProperties();

            if (data.hasOwnProperty('connectionString')) {
                obj['connectionString'] = ApiClient.convertToType(data['connectionString'], 'String');
            }
            if (data.hasOwnProperty('containerName')) {
                obj['containerName'] = ApiClient.convertToType(data['containerName'], 'String');
            }
            if (data.hasOwnProperty('resourceGroup')) {
                obj['resourceGroup'] = ApiClient.convertToType(data['resourceGroup'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageContainerProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageContainerProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['connectionString'] && !(typeof data['connectionString'] === 'string' || data['connectionString'] instanceof String)) {
            throw new Error("Expected the field `connectionString` to be a primitive type in the JSON string but got " + data['connectionString']);
        }
        // ensure the json data is a string
        if (data['containerName'] && !(typeof data['containerName'] === 'string' || data['containerName'] instanceof String)) {
            throw new Error("Expected the field `containerName` to be a primitive type in the JSON string but got " + data['containerName']);
        }
        // ensure the json data is a string
        if (data['resourceGroup'] && !(typeof data['resourceGroup'] === 'string' || data['resourceGroup'] instanceof String)) {
            throw new Error("Expected the field `resourceGroup` to be a primitive type in the JSON string but got " + data['resourceGroup']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }

        return true;
    }


}



/**
 * The connection string of the storage account.
 * @member {String} connectionString
 */
StorageContainerProperties.prototype['connectionString'] = undefined;

/**
 * The name of storage container in the storage account.
 * @member {String} containerName
 */
StorageContainerProperties.prototype['containerName'] = undefined;

/**
 * The name of the resource group of the storage account.
 * @member {String} resourceGroup
 */
StorageContainerProperties.prototype['resourceGroup'] = undefined;

/**
 * The subscription identifier of the storage account.
 * @member {String} subscriptionId
 */
StorageContainerProperties.prototype['subscriptionId'] = undefined;






export default StorageContainerProperties;

