/**
 * IoTSpacesClient
 * Use this API to manage the IoTSpaces service instances in your Azure subscription.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ErrorDetails from './model/ErrorDetails';
import IoTSpacesDescription from './model/IoTSpacesDescription';
import IoTSpacesDescriptionListResult from './model/IoTSpacesDescriptionListResult';
import IoTSpacesNameAvailabilityInfo from './model/IoTSpacesNameAvailabilityInfo';
import IoTSpacesPatchDescription from './model/IoTSpacesPatchDescription';
import IoTSpacesProperties from './model/IoTSpacesProperties';
import IoTSpacesSkuInfo from './model/IoTSpacesSkuInfo';
import Operation from './model/Operation';
import OperationDisplay from './model/OperationDisplay';
import OperationInputs from './model/OperationInputs';
import OperationListResult from './model/OperationListResult';
import Resource from './model/Resource';
import StorageContainerProperties from './model/StorageContainerProperties';
import CollectionApi from './api/CollectionApi';
import ProxyApi from './api/ProxyApi';
import ResourceApi from './api/ResourceApi';


/**
* Use this API to manage the IoTSpaces service instances in your Azure subscription..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var IoTSpacesClient = require('index'); // See note below*.
* var xxxSvc = new IoTSpacesClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new IoTSpacesClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new IoTSpacesClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new IoTSpacesClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-10-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ErrorDetails model constructor.
     * @property {module:model/ErrorDetails}
     */
    ErrorDetails,

    /**
     * The IoTSpacesDescription model constructor.
     * @property {module:model/IoTSpacesDescription}
     */
    IoTSpacesDescription,

    /**
     * The IoTSpacesDescriptionListResult model constructor.
     * @property {module:model/IoTSpacesDescriptionListResult}
     */
    IoTSpacesDescriptionListResult,

    /**
     * The IoTSpacesNameAvailabilityInfo model constructor.
     * @property {module:model/IoTSpacesNameAvailabilityInfo}
     */
    IoTSpacesNameAvailabilityInfo,

    /**
     * The IoTSpacesPatchDescription model constructor.
     * @property {module:model/IoTSpacesPatchDescription}
     */
    IoTSpacesPatchDescription,

    /**
     * The IoTSpacesProperties model constructor.
     * @property {module:model/IoTSpacesProperties}
     */
    IoTSpacesProperties,

    /**
     * The IoTSpacesSkuInfo model constructor.
     * @property {module:model/IoTSpacesSkuInfo}
     */
    IoTSpacesSkuInfo,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The OperationInputs model constructor.
     * @property {module:model/OperationInputs}
     */
    OperationInputs,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The StorageContainerProperties model constructor.
     * @property {module:model/StorageContainerProperties}
     */
    StorageContainerProperties,

    /**
    * The CollectionApi service constructor.
    * @property {module:api/CollectionApi}
    */
    CollectionApi,

    /**
    * The ProxyApi service constructor.
    * @property {module:api/ProxyApi}
    */
    ProxyApi,

    /**
    * The ResourceApi service constructor.
    * @property {module:api/ResourceApi}
    */
    ResourceApi
};
