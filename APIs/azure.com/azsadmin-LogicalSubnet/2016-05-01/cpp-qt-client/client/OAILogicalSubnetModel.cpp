/**
 * FabricAdminClient
 * Logical subnet operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2016-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILogicalSubnetModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILogicalSubnetModel::OAILogicalSubnetModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILogicalSubnetModel::OAILogicalSubnetModel() {
    this->initializeModel();
}

OAILogicalSubnetModel::~OAILogicalSubnetModel() {}

void OAILogicalSubnetModel::initializeModel() {

    m_ip_pools_isSet = false;
    m_ip_pools_isValid = false;

    m_is_public_isSet = false;
    m_is_public_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;
}

void OAILogicalSubnetModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILogicalSubnetModel::fromJsonObject(QJsonObject json) {

    m_ip_pools_isValid = ::OpenAPI::fromJsonValue(m_ip_pools, json[QString("ipPools")]);
    m_ip_pools_isSet = !json[QString("ipPools")].isNull() && m_ip_pools_isValid;

    m_is_public_isValid = ::OpenAPI::fromJsonValue(m_is_public, json[QString("isPublic")]);
    m_is_public_isSet = !json[QString("isPublic")].isNull() && m_is_public_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;
}

QString OAILogicalSubnetModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILogicalSubnetModel::asJsonObject() const {
    QJsonObject obj;
    if (m_ip_pools.size() > 0) {
        obj.insert(QString("ipPools"), ::OpenAPI::toJsonValue(m_ip_pools));
    }
    if (m_is_public_isSet) {
        obj.insert(QString("isPublic"), ::OpenAPI::toJsonValue(m_is_public));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    return obj;
}

QList<QString> OAILogicalSubnetModel::getIpPools() const {
    return m_ip_pools;
}
void OAILogicalSubnetModel::setIpPools(const QList<QString> &ip_pools) {
    m_ip_pools = ip_pools;
    m_ip_pools_isSet = true;
}

bool OAILogicalSubnetModel::is_ip_pools_Set() const{
    return m_ip_pools_isSet;
}

bool OAILogicalSubnetModel::is_ip_pools_Valid() const{
    return m_ip_pools_isValid;
}

bool OAILogicalSubnetModel::isIsPublic() const {
    return m_is_public;
}
void OAILogicalSubnetModel::setIsPublic(const bool &is_public) {
    m_is_public = is_public;
    m_is_public_isSet = true;
}

bool OAILogicalSubnetModel::is_is_public_Set() const{
    return m_is_public_isSet;
}

bool OAILogicalSubnetModel::is_is_public_Valid() const{
    return m_is_public_isValid;
}

QMap<QString, QString> OAILogicalSubnetModel::getMetadata() const {
    return m_metadata;
}
void OAILogicalSubnetModel::setMetadata(const QMap<QString, QString> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAILogicalSubnetModel::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAILogicalSubnetModel::is_metadata_Valid() const{
    return m_metadata_isValid;
}

bool OAILogicalSubnetModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ip_pools.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_public_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILogicalSubnetModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
