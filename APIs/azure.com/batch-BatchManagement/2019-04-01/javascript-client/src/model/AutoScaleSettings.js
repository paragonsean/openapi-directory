/**
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AutoScaleSettings model module.
 * @module model/AutoScaleSettings
 * @version 2019-04-01
 */
class AutoScaleSettings {
    /**
     * Constructs a new <code>AutoScaleSettings</code>.
     * @alias module:model/AutoScaleSettings
     * @param formula {String} 
     */
    constructor(formula) { 
        
        AutoScaleSettings.initialize(this, formula);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, formula) { 
        obj['formula'] = formula;
    }

    /**
     * Constructs a <code>AutoScaleSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoScaleSettings} obj Optional instance to populate.
     * @return {module:model/AutoScaleSettings} The populated <code>AutoScaleSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoScaleSettings();

            if (data.hasOwnProperty('evaluationInterval')) {
                obj['evaluationInterval'] = ApiClient.convertToType(data['evaluationInterval'], 'String');
            }
            if (data.hasOwnProperty('formula')) {
                obj['formula'] = ApiClient.convertToType(data['formula'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoScaleSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoScaleSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AutoScaleSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['evaluationInterval'] && !(typeof data['evaluationInterval'] === 'string' || data['evaluationInterval'] instanceof String)) {
            throw new Error("Expected the field `evaluationInterval` to be a primitive type in the JSON string but got " + data['evaluationInterval']);
        }
        // ensure the json data is a string
        if (data['formula'] && !(typeof data['formula'] === 'string' || data['formula'] instanceof String)) {
            throw new Error("Expected the field `formula` to be a primitive type in the JSON string but got " + data['formula']);
        }

        return true;
    }


}

AutoScaleSettings.RequiredProperties = ["formula"];

/**
 * If omitted, the default value is 15 minutes (PT15M).
 * @member {String} evaluationInterval
 */
AutoScaleSettings.prototype['evaluationInterval'] = undefined;

/**
 * @member {String} formula
 */
AutoScaleSettings.prototype['formula'] = undefined;






export default AutoScaleSettings;

