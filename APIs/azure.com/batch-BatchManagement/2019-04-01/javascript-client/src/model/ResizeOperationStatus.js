/**
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ComputeNodeDeallocationOption from './ComputeNodeDeallocationOption';
import ResizeError from './ResizeError';

/**
 * The ResizeOperationStatus model module.
 * @module model/ResizeOperationStatus
 * @version 2019-04-01
 */
class ResizeOperationStatus {
    /**
     * Constructs a new <code>ResizeOperationStatus</code>.
     * Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady).
     * @alias module:model/ResizeOperationStatus
     */
    constructor() { 
        
        ResizeOperationStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResizeOperationStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResizeOperationStatus} obj Optional instance to populate.
     * @return {module:model/ResizeOperationStatus} The populated <code>ResizeOperationStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResizeOperationStatus();

            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [ResizeError]);
            }
            if (data.hasOwnProperty('nodeDeallocationOption')) {
                obj['nodeDeallocationOption'] = ComputeNodeDeallocationOption.constructFromObject(data['nodeDeallocationOption']);
            }
            if (data.hasOwnProperty('resizeTimeout')) {
                obj['resizeTimeout'] = ApiClient.convertToType(data['resizeTimeout'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('targetDedicatedNodes')) {
                obj['targetDedicatedNodes'] = ApiClient.convertToType(data['targetDedicatedNodes'], 'Number');
            }
            if (data.hasOwnProperty('targetLowPriorityNodes')) {
                obj['targetLowPriorityNodes'] = ApiClient.convertToType(data['targetLowPriorityNodes'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResizeOperationStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResizeOperationStatus</code>.
     */
    static validateJSON(data) {
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                ResizeError.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['resizeTimeout'] && !(typeof data['resizeTimeout'] === 'string' || data['resizeTimeout'] instanceof String)) {
            throw new Error("Expected the field `resizeTimeout` to be a primitive type in the JSON string but got " + data['resizeTimeout']);
        }

        return true;
    }


}



/**
 * This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is Steady.
 * @member {Array.<module:model/ResizeError>} errors
 */
ResizeOperationStatus.prototype['errors'] = undefined;

/**
 * @member {module:model/ComputeNodeDeallocationOption} nodeDeallocationOption
 */
ResizeOperationStatus.prototype['nodeDeallocationOption'] = undefined;

/**
 * The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
 * @member {String} resizeTimeout
 */
ResizeOperationStatus.prototype['resizeTimeout'] = undefined;

/**
 * @member {Date} startTime
 */
ResizeOperationStatus.prototype['startTime'] = undefined;

/**
 * @member {Number} targetDedicatedNodes
 */
ResizeOperationStatus.prototype['targetDedicatedNodes'] = undefined;

/**
 * @member {Number} targetLowPriorityNodes
 */
ResizeOperationStatus.prototype['targetLowPriorityNodes'] = undefined;






export default ResizeOperationStatus;

