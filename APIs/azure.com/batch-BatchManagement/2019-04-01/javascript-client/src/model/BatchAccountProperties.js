/**
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoStorageProperties from './AutoStorageProperties';
import KeyVaultReference from './KeyVaultReference';
import PoolAllocationMode from './PoolAllocationMode';
import VirtualMachineFamilyCoreQuota from './VirtualMachineFamilyCoreQuota';

/**
 * The BatchAccountProperties model module.
 * @module model/BatchAccountProperties
 * @version 2019-04-01
 */
class BatchAccountProperties {
    /**
     * Constructs a new <code>BatchAccountProperties</code>.
     * Account specific properties.
     * @alias module:model/BatchAccountProperties
     */
    constructor() { 
        
        BatchAccountProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchAccountProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchAccountProperties} obj Optional instance to populate.
     * @return {module:model/BatchAccountProperties} The populated <code>BatchAccountProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchAccountProperties();

            if (data.hasOwnProperty('accountEndpoint')) {
                obj['accountEndpoint'] = ApiClient.convertToType(data['accountEndpoint'], 'String');
            }
            if (data.hasOwnProperty('activeJobAndJobScheduleQuota')) {
                obj['activeJobAndJobScheduleQuota'] = ApiClient.convertToType(data['activeJobAndJobScheduleQuota'], 'Number');
            }
            if (data.hasOwnProperty('autoStorage')) {
                obj['autoStorage'] = AutoStorageProperties.constructFromObject(data['autoStorage']);
            }
            if (data.hasOwnProperty('dedicatedCoreQuota')) {
                obj['dedicatedCoreQuota'] = ApiClient.convertToType(data['dedicatedCoreQuota'], 'Number');
            }
            if (data.hasOwnProperty('dedicatedCoreQuotaPerVMFamily')) {
                obj['dedicatedCoreQuotaPerVMFamily'] = ApiClient.convertToType(data['dedicatedCoreQuotaPerVMFamily'], [VirtualMachineFamilyCoreQuota]);
            }
            if (data.hasOwnProperty('dedicatedCoreQuotaPerVMFamilyEnforced')) {
                obj['dedicatedCoreQuotaPerVMFamilyEnforced'] = ApiClient.convertToType(data['dedicatedCoreQuotaPerVMFamilyEnforced'], 'Boolean');
            }
            if (data.hasOwnProperty('keyVaultReference')) {
                obj['keyVaultReference'] = KeyVaultReference.constructFromObject(data['keyVaultReference']);
            }
            if (data.hasOwnProperty('lowPriorityCoreQuota')) {
                obj['lowPriorityCoreQuota'] = ApiClient.convertToType(data['lowPriorityCoreQuota'], 'Number');
            }
            if (data.hasOwnProperty('poolAllocationMode')) {
                obj['poolAllocationMode'] = PoolAllocationMode.constructFromObject(data['poolAllocationMode']);
            }
            if (data.hasOwnProperty('poolQuota')) {
                obj['poolQuota'] = ApiClient.convertToType(data['poolQuota'], 'Number');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchAccountProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchAccountProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountEndpoint'] && !(typeof data['accountEndpoint'] === 'string' || data['accountEndpoint'] instanceof String)) {
            throw new Error("Expected the field `accountEndpoint` to be a primitive type in the JSON string but got " + data['accountEndpoint']);
        }
        // validate the optional field `autoStorage`
        if (data['autoStorage']) { // data not null
          AutoStorageProperties.validateJSON(data['autoStorage']);
        }
        if (data['dedicatedCoreQuotaPerVMFamily']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dedicatedCoreQuotaPerVMFamily'])) {
                throw new Error("Expected the field `dedicatedCoreQuotaPerVMFamily` to be an array in the JSON data but got " + data['dedicatedCoreQuotaPerVMFamily']);
            }
            // validate the optional field `dedicatedCoreQuotaPerVMFamily` (array)
            for (const item of data['dedicatedCoreQuotaPerVMFamily']) {
                VirtualMachineFamilyCoreQuota.validateJSON(item);
            };
        }
        // validate the optional field `keyVaultReference`
        if (data['keyVaultReference']) { // data not null
          KeyVaultReference.validateJSON(data['keyVaultReference']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}



/**
 * The account endpoint used to interact with the Batch service.
 * @member {String} accountEndpoint
 */
BatchAccountProperties.prototype['accountEndpoint'] = undefined;

/**
 * @member {Number} activeJobAndJobScheduleQuota
 */
BatchAccountProperties.prototype['activeJobAndJobScheduleQuota'] = undefined;

/**
 * @member {module:model/AutoStorageProperties} autoStorage
 */
BatchAccountProperties.prototype['autoStorage'] = undefined;

/**
 * For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
 * @member {Number} dedicatedCoreQuota
 */
BatchAccountProperties.prototype['dedicatedCoreQuota'] = undefined;

/**
 * A list of the dedicated core quota per Virtual Machine family for the Batch account. For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
 * @member {Array.<module:model/VirtualMachineFamilyCoreQuota>} dedicatedCoreQuotaPerVMFamily
 */
BatchAccountProperties.prototype['dedicatedCoreQuotaPerVMFamily'] = undefined;

/**
 * Batch is transitioning its core quota system for dedicated cores to be enforced per Virtual Machine family. During this transitional phase, the dedicated core quota per Virtual Machine family may not yet be enforced. If this flag is false, dedicated core quota is enforced via the old dedicatedCoreQuota property on the account and does not consider Virtual Machine family. If this flag is true, dedicated core quota is enforced via the dedicatedCoreQuotaPerVMFamily property on the account, and the old dedicatedCoreQuota does not apply.
 * @member {Boolean} dedicatedCoreQuotaPerVMFamilyEnforced
 */
BatchAccountProperties.prototype['dedicatedCoreQuotaPerVMFamilyEnforced'] = undefined;

/**
 * @member {module:model/KeyVaultReference} keyVaultReference
 */
BatchAccountProperties.prototype['keyVaultReference'] = undefined;

/**
 * For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
 * @member {Number} lowPriorityCoreQuota
 */
BatchAccountProperties.prototype['lowPriorityCoreQuota'] = undefined;

/**
 * @member {module:model/PoolAllocationMode} poolAllocationMode
 */
BatchAccountProperties.prototype['poolAllocationMode'] = undefined;

/**
 * @member {Number} poolQuota
 */
BatchAccountProperties.prototype['poolQuota'] = undefined;

/**
 * The provisioned state of the resource
 * @member {module:model/BatchAccountProperties.ProvisioningStateEnum} provisioningState
 */
BatchAccountProperties.prototype['provisioningState'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
BatchAccountProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Cancelled"
     * @const
     */
    "Cancelled": "Cancelled"
};



export default BatchAccountProperties;

