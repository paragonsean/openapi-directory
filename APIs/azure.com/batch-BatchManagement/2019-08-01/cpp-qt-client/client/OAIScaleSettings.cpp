/**
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScaleSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScaleSettings::OAIScaleSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScaleSettings::OAIScaleSettings() {
    this->initializeModel();
}

OAIScaleSettings::~OAIScaleSettings() {}

void OAIScaleSettings::initializeModel() {

    m_auto_scale_isSet = false;
    m_auto_scale_isValid = false;

    m_fixed_scale_isSet = false;
    m_fixed_scale_isValid = false;
}

void OAIScaleSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScaleSettings::fromJsonObject(QJsonObject json) {

    m_auto_scale_isValid = ::OpenAPI::fromJsonValue(m_auto_scale, json[QString("autoScale")]);
    m_auto_scale_isSet = !json[QString("autoScale")].isNull() && m_auto_scale_isValid;

    m_fixed_scale_isValid = ::OpenAPI::fromJsonValue(m_fixed_scale, json[QString("fixedScale")]);
    m_fixed_scale_isSet = !json[QString("fixedScale")].isNull() && m_fixed_scale_isValid;
}

QString OAIScaleSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScaleSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_scale.isSet()) {
        obj.insert(QString("autoScale"), ::OpenAPI::toJsonValue(m_auto_scale));
    }
    if (m_fixed_scale.isSet()) {
        obj.insert(QString("fixedScale"), ::OpenAPI::toJsonValue(m_fixed_scale));
    }
    return obj;
}

OAIAutoScaleSettings OAIScaleSettings::getAutoScale() const {
    return m_auto_scale;
}
void OAIScaleSettings::setAutoScale(const OAIAutoScaleSettings &auto_scale) {
    m_auto_scale = auto_scale;
    m_auto_scale_isSet = true;
}

bool OAIScaleSettings::is_auto_scale_Set() const{
    return m_auto_scale_isSet;
}

bool OAIScaleSettings::is_auto_scale_Valid() const{
    return m_auto_scale_isValid;
}

OAIFixedScaleSettings OAIScaleSettings::getFixedScale() const {
    return m_fixed_scale;
}
void OAIScaleSettings::setFixedScale(const OAIFixedScaleSettings &fixed_scale) {
    m_fixed_scale = fixed_scale;
    m_fixed_scale_isSet = true;
}

bool OAIScaleSettings::is_fixed_scale_Set() const{
    return m_fixed_scale_isSet;
}

bool OAIScaleSettings::is_fixed_scale_Valid() const{
    return m_fixed_scale_isValid;
}

bool OAIScaleSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_scale.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fixed_scale.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScaleSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
