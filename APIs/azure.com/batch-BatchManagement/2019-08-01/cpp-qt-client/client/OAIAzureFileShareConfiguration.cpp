/**
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureFileShareConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureFileShareConfiguration::OAIAzureFileShareConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureFileShareConfiguration::OAIAzureFileShareConfiguration() {
    this->initializeModel();
}

OAIAzureFileShareConfiguration::~OAIAzureFileShareConfiguration() {}

void OAIAzureFileShareConfiguration::initializeModel() {

    m_account_key_isSet = false;
    m_account_key_isValid = false;

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_azure_file_url_isSet = false;
    m_azure_file_url_isValid = false;

    m_mount_options_isSet = false;
    m_mount_options_isValid = false;

    m_relative_mount_path_isSet = false;
    m_relative_mount_path_isValid = false;
}

void OAIAzureFileShareConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureFileShareConfiguration::fromJsonObject(QJsonObject json) {

    m_account_key_isValid = ::OpenAPI::fromJsonValue(m_account_key, json[QString("accountKey")]);
    m_account_key_isSet = !json[QString("accountKey")].isNull() && m_account_key_isValid;

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("accountName")]);
    m_account_name_isSet = !json[QString("accountName")].isNull() && m_account_name_isValid;

    m_azure_file_url_isValid = ::OpenAPI::fromJsonValue(m_azure_file_url, json[QString("azureFileUrl")]);
    m_azure_file_url_isSet = !json[QString("azureFileUrl")].isNull() && m_azure_file_url_isValid;

    m_mount_options_isValid = ::OpenAPI::fromJsonValue(m_mount_options, json[QString("mountOptions")]);
    m_mount_options_isSet = !json[QString("mountOptions")].isNull() && m_mount_options_isValid;

    m_relative_mount_path_isValid = ::OpenAPI::fromJsonValue(m_relative_mount_path, json[QString("relativeMountPath")]);
    m_relative_mount_path_isSet = !json[QString("relativeMountPath")].isNull() && m_relative_mount_path_isValid;
}

QString OAIAzureFileShareConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureFileShareConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_account_key_isSet) {
        obj.insert(QString("accountKey"), ::OpenAPI::toJsonValue(m_account_key));
    }
    if (m_account_name_isSet) {
        obj.insert(QString("accountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_azure_file_url_isSet) {
        obj.insert(QString("azureFileUrl"), ::OpenAPI::toJsonValue(m_azure_file_url));
    }
    if (m_mount_options_isSet) {
        obj.insert(QString("mountOptions"), ::OpenAPI::toJsonValue(m_mount_options));
    }
    if (m_relative_mount_path_isSet) {
        obj.insert(QString("relativeMountPath"), ::OpenAPI::toJsonValue(m_relative_mount_path));
    }
    return obj;
}

QString OAIAzureFileShareConfiguration::getAccountKey() const {
    return m_account_key;
}
void OAIAzureFileShareConfiguration::setAccountKey(const QString &account_key) {
    m_account_key = account_key;
    m_account_key_isSet = true;
}

bool OAIAzureFileShareConfiguration::is_account_key_Set() const{
    return m_account_key_isSet;
}

bool OAIAzureFileShareConfiguration::is_account_key_Valid() const{
    return m_account_key_isValid;
}

QString OAIAzureFileShareConfiguration::getAccountName() const {
    return m_account_name;
}
void OAIAzureFileShareConfiguration::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIAzureFileShareConfiguration::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIAzureFileShareConfiguration::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAIAzureFileShareConfiguration::getAzureFileUrl() const {
    return m_azure_file_url;
}
void OAIAzureFileShareConfiguration::setAzureFileUrl(const QString &azure_file_url) {
    m_azure_file_url = azure_file_url;
    m_azure_file_url_isSet = true;
}

bool OAIAzureFileShareConfiguration::is_azure_file_url_Set() const{
    return m_azure_file_url_isSet;
}

bool OAIAzureFileShareConfiguration::is_azure_file_url_Valid() const{
    return m_azure_file_url_isValid;
}

QString OAIAzureFileShareConfiguration::getMountOptions() const {
    return m_mount_options;
}
void OAIAzureFileShareConfiguration::setMountOptions(const QString &mount_options) {
    m_mount_options = mount_options;
    m_mount_options_isSet = true;
}

bool OAIAzureFileShareConfiguration::is_mount_options_Set() const{
    return m_mount_options_isSet;
}

bool OAIAzureFileShareConfiguration::is_mount_options_Valid() const{
    return m_mount_options_isValid;
}

QString OAIAzureFileShareConfiguration::getRelativeMountPath() const {
    return m_relative_mount_path;
}
void OAIAzureFileShareConfiguration::setRelativeMountPath(const QString &relative_mount_path) {
    m_relative_mount_path = relative_mount_path;
    m_relative_mount_path_isSet = true;
}

bool OAIAzureFileShareConfiguration::is_relative_mount_path_Set() const{
    return m_relative_mount_path_isSet;
}

bool OAIAzureFileShareConfiguration::is_relative_mount_path_Valid() const{
    return m_relative_mount_path_isValid;
}

bool OAIAzureFileShareConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_azure_file_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mount_options_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relative_mount_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureFileShareConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_key_isValid && m_account_name_isValid && m_azure_file_url_isValid && m_relative_mount_path_isValid && true;
}

} // namespace OpenAPI
