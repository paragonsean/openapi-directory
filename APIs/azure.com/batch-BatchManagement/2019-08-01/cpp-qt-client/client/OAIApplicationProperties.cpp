/**
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationProperties::OAIApplicationProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationProperties::OAIApplicationProperties() {
    this->initializeModel();
}

OAIApplicationProperties::~OAIApplicationProperties() {}

void OAIApplicationProperties::initializeModel() {

    m_allow_updates_isSet = false;
    m_allow_updates_isValid = false;

    m_default_version_isSet = false;
    m_default_version_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;
}

void OAIApplicationProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationProperties::fromJsonObject(QJsonObject json) {

    m_allow_updates_isValid = ::OpenAPI::fromJsonValue(m_allow_updates, json[QString("allowUpdates")]);
    m_allow_updates_isSet = !json[QString("allowUpdates")].isNull() && m_allow_updates_isValid;

    m_default_version_isValid = ::OpenAPI::fromJsonValue(m_default_version, json[QString("defaultVersion")]);
    m_default_version_isSet = !json[QString("defaultVersion")].isNull() && m_default_version_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;
}

QString OAIApplicationProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_updates_isSet) {
        obj.insert(QString("allowUpdates"), ::OpenAPI::toJsonValue(m_allow_updates));
    }
    if (m_default_version_isSet) {
        obj.insert(QString("defaultVersion"), ::OpenAPI::toJsonValue(m_default_version));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    return obj;
}

bool OAIApplicationProperties::isAllowUpdates() const {
    return m_allow_updates;
}
void OAIApplicationProperties::setAllowUpdates(const bool &allow_updates) {
    m_allow_updates = allow_updates;
    m_allow_updates_isSet = true;
}

bool OAIApplicationProperties::is_allow_updates_Set() const{
    return m_allow_updates_isSet;
}

bool OAIApplicationProperties::is_allow_updates_Valid() const{
    return m_allow_updates_isValid;
}

QString OAIApplicationProperties::getDefaultVersion() const {
    return m_default_version;
}
void OAIApplicationProperties::setDefaultVersion(const QString &default_version) {
    m_default_version = default_version;
    m_default_version_isSet = true;
}

bool OAIApplicationProperties::is_default_version_Set() const{
    return m_default_version_isSet;
}

bool OAIApplicationProperties::is_default_version_Valid() const{
    return m_default_version_isValid;
}

QString OAIApplicationProperties::getDisplayName() const {
    return m_display_name;
}
void OAIApplicationProperties::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIApplicationProperties::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIApplicationProperties::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIApplicationProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_updates_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
