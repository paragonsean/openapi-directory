/**
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchAccountKeys.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchAccountKeys::OAIBatchAccountKeys(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchAccountKeys::OAIBatchAccountKeys() {
    this->initializeModel();
}

OAIBatchAccountKeys::~OAIBatchAccountKeys() {}

void OAIBatchAccountKeys::initializeModel() {

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_primary_isSet = false;
    m_primary_isValid = false;

    m_secondary_isSet = false;
    m_secondary_isValid = false;
}

void OAIBatchAccountKeys::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchAccountKeys::fromJsonObject(QJsonObject json) {

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("accountName")]);
    m_account_name_isSet = !json[QString("accountName")].isNull() && m_account_name_isValid;

    m_primary_isValid = ::OpenAPI::fromJsonValue(m_primary, json[QString("primary")]);
    m_primary_isSet = !json[QString("primary")].isNull() && m_primary_isValid;

    m_secondary_isValid = ::OpenAPI::fromJsonValue(m_secondary, json[QString("secondary")]);
    m_secondary_isSet = !json[QString("secondary")].isNull() && m_secondary_isValid;
}

QString OAIBatchAccountKeys::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchAccountKeys::asJsonObject() const {
    QJsonObject obj;
    if (m_account_name_isSet) {
        obj.insert(QString("accountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_primary_isSet) {
        obj.insert(QString("primary"), ::OpenAPI::toJsonValue(m_primary));
    }
    if (m_secondary_isSet) {
        obj.insert(QString("secondary"), ::OpenAPI::toJsonValue(m_secondary));
    }
    return obj;
}

QString OAIBatchAccountKeys::getAccountName() const {
    return m_account_name;
}
void OAIBatchAccountKeys::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIBatchAccountKeys::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIBatchAccountKeys::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAIBatchAccountKeys::getPrimary() const {
    return m_primary;
}
void OAIBatchAccountKeys::setPrimary(const QString &primary) {
    m_primary = primary;
    m_primary_isSet = true;
}

bool OAIBatchAccountKeys::is_primary_Set() const{
    return m_primary_isSet;
}

bool OAIBatchAccountKeys::is_primary_Valid() const{
    return m_primary_isValid;
}

QString OAIBatchAccountKeys::getSecondary() const {
    return m_secondary;
}
void OAIBatchAccountKeys::setSecondary(const QString &secondary) {
    m_secondary = secondary;
    m_secondary_isSet = true;
}

bool OAIBatchAccountKeys::is_secondary_Set() const{
    return m_secondary_isSet;
}

bool OAIBatchAccountKeys::is_secondary_Valid() const{
    return m_secondary_isValid;
}

bool OAIBatchAccountKeys::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchAccountKeys::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
