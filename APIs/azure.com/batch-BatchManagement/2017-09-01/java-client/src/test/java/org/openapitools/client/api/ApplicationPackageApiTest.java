/*
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ActivateApplicationPackageParameters;
import org.openapitools.client.model.ApplicationPackage;
import org.openapitools.client.model.CloudError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationPackageApi
 */
@Disabled
public class ApplicationPackageApiTest {

    private final ApplicationPackageApi api = new ApplicationPackageApi();

    /**
     * Activates the specified application package.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationPackageActivateTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String applicationId = null;
        String version = null;
        String apiVersion = null;
        String subscriptionId = null;
        ActivateApplicationPackageParameters parameters = null;
        api.applicationPackageActivate(resourceGroupName, accountName, applicationId, version, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Creates an application package record.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationPackageCreateTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String applicationId = null;
        String version = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApplicationPackage response = api.applicationPackageCreate(resourceGroupName, accountName, applicationId, version, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Deletes an application package record and its associated binary file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationPackageDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String applicationId = null;
        String version = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.applicationPackageDelete(resourceGroupName, accountName, applicationId, version, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets information about the specified application package.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationPackageGetTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String applicationId = null;
        String version = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApplicationPackage response = api.applicationPackageGet(resourceGroupName, accountName, applicationId, version, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
