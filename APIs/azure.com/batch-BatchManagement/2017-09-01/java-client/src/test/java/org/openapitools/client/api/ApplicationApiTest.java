/*
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Application;
import org.openapitools.client.model.ApplicationCreateParameters;
import org.openapitools.client.model.ApplicationUpdateParameters;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.ListApplicationsResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationApi
 */
@Disabled
public class ApplicationApiTest {

    private final ApplicationApi api = new ApplicationApi();

    /**
     * Adds an application to the specified Batch account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationCreateTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String applicationId = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApplicationCreateParameters parameters = null;
        Application response = api.applicationCreate(resourceGroupName, accountName, applicationId, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes an application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String applicationId = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.applicationDelete(resourceGroupName, accountName, applicationId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets information about the specified application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationGetTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String applicationId = null;
        String apiVersion = null;
        String subscriptionId = null;
        Application response = api.applicationGet(resourceGroupName, accountName, applicationId, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists all of the applications in the specified account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationListTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Integer maxresults = null;
        ListApplicationsResult response = api.applicationList(resourceGroupName, accountName, apiVersion, subscriptionId, maxresults);
        // TODO: test validations
    }

    /**
     * Updates settings for the specified application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String accountName = null;
        String applicationId = null;
        String apiVersion = null;
        String subscriptionId = null;
        ApplicationUpdateParameters parameters = null;
        api.applicationUpdate(resourceGroupName, accountName, applicationId, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
