/**
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeploymentConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeploymentConfiguration::OAIDeploymentConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeploymentConfiguration::OAIDeploymentConfiguration() {
    this->initializeModel();
}

OAIDeploymentConfiguration::~OAIDeploymentConfiguration() {}

void OAIDeploymentConfiguration::initializeModel() {

    m_cloud_service_configuration_isSet = false;
    m_cloud_service_configuration_isValid = false;

    m_virtual_machine_configuration_isSet = false;
    m_virtual_machine_configuration_isValid = false;
}

void OAIDeploymentConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeploymentConfiguration::fromJsonObject(QJsonObject json) {

    m_cloud_service_configuration_isValid = ::OpenAPI::fromJsonValue(m_cloud_service_configuration, json[QString("cloudServiceConfiguration")]);
    m_cloud_service_configuration_isSet = !json[QString("cloudServiceConfiguration")].isNull() && m_cloud_service_configuration_isValid;

    m_virtual_machine_configuration_isValid = ::OpenAPI::fromJsonValue(m_virtual_machine_configuration, json[QString("virtualMachineConfiguration")]);
    m_virtual_machine_configuration_isSet = !json[QString("virtualMachineConfiguration")].isNull() && m_virtual_machine_configuration_isValid;
}

QString OAIDeploymentConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeploymentConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_service_configuration.isSet()) {
        obj.insert(QString("cloudServiceConfiguration"), ::OpenAPI::toJsonValue(m_cloud_service_configuration));
    }
    if (m_virtual_machine_configuration.isSet()) {
        obj.insert(QString("virtualMachineConfiguration"), ::OpenAPI::toJsonValue(m_virtual_machine_configuration));
    }
    return obj;
}

OAICloudServiceConfiguration OAIDeploymentConfiguration::getCloudServiceConfiguration() const {
    return m_cloud_service_configuration;
}
void OAIDeploymentConfiguration::setCloudServiceConfiguration(const OAICloudServiceConfiguration &cloud_service_configuration) {
    m_cloud_service_configuration = cloud_service_configuration;
    m_cloud_service_configuration_isSet = true;
}

bool OAIDeploymentConfiguration::is_cloud_service_configuration_Set() const{
    return m_cloud_service_configuration_isSet;
}

bool OAIDeploymentConfiguration::is_cloud_service_configuration_Valid() const{
    return m_cloud_service_configuration_isValid;
}

OAIVirtualMachineConfiguration OAIDeploymentConfiguration::getVirtualMachineConfiguration() const {
    return m_virtual_machine_configuration;
}
void OAIDeploymentConfiguration::setVirtualMachineConfiguration(const OAIVirtualMachineConfiguration &virtual_machine_configuration) {
    m_virtual_machine_configuration = virtual_machine_configuration;
    m_virtual_machine_configuration_isSet = true;
}

bool OAIDeploymentConfiguration::is_virtual_machine_configuration_Set() const{
    return m_virtual_machine_configuration_isSet;
}

bool OAIDeploymentConfiguration::is_virtual_machine_configuration_Valid() const{
    return m_virtual_machine_configuration_isValid;
}

bool OAIDeploymentConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_service_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_virtual_machine_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeploymentConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
