/**
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutoStorageProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutoStorageProperties::OAIAutoStorageProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutoStorageProperties::OAIAutoStorageProperties() {
    this->initializeModel();
}

OAIAutoStorageProperties::~OAIAutoStorageProperties() {}

void OAIAutoStorageProperties::initializeModel() {

    m_last_key_sync_isSet = false;
    m_last_key_sync_isValid = false;

    m_storage_account_id_isSet = false;
    m_storage_account_id_isValid = false;
}

void OAIAutoStorageProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutoStorageProperties::fromJsonObject(QJsonObject json) {

    m_last_key_sync_isValid = ::OpenAPI::fromJsonValue(m_last_key_sync, json[QString("lastKeySync")]);
    m_last_key_sync_isSet = !json[QString("lastKeySync")].isNull() && m_last_key_sync_isValid;

    m_storage_account_id_isValid = ::OpenAPI::fromJsonValue(m_storage_account_id, json[QString("storageAccountId")]);
    m_storage_account_id_isSet = !json[QString("storageAccountId")].isNull() && m_storage_account_id_isValid;
}

QString OAIAutoStorageProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutoStorageProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_last_key_sync_isSet) {
        obj.insert(QString("lastKeySync"), ::OpenAPI::toJsonValue(m_last_key_sync));
    }
    if (m_storage_account_id_isSet) {
        obj.insert(QString("storageAccountId"), ::OpenAPI::toJsonValue(m_storage_account_id));
    }
    return obj;
}

QDateTime OAIAutoStorageProperties::getLastKeySync() const {
    return m_last_key_sync;
}
void OAIAutoStorageProperties::setLastKeySync(const QDateTime &last_key_sync) {
    m_last_key_sync = last_key_sync;
    m_last_key_sync_isSet = true;
}

bool OAIAutoStorageProperties::is_last_key_sync_Set() const{
    return m_last_key_sync_isSet;
}

bool OAIAutoStorageProperties::is_last_key_sync_Valid() const{
    return m_last_key_sync_isValid;
}

QString OAIAutoStorageProperties::getStorageAccountId() const {
    return m_storage_account_id;
}
void OAIAutoStorageProperties::setStorageAccountId(const QString &storage_account_id) {
    m_storage_account_id = storage_account_id;
    m_storage_account_id_isSet = true;
}

bool OAIAutoStorageProperties::is_storage_account_id_Set() const{
    return m_storage_account_id_isSet;
}

bool OAIAutoStorageProperties::is_storage_account_id_Valid() const{
    return m_storage_account_id_isValid;
}

bool OAIAutoStorageProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_key_sync_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutoStorageProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_last_key_sync_isValid && m_storage_account_id_isValid && true;
}

} // namespace OpenAPI
