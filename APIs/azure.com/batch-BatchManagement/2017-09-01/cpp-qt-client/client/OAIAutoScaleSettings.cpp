/**
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutoScaleSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutoScaleSettings::OAIAutoScaleSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutoScaleSettings::OAIAutoScaleSettings() {
    this->initializeModel();
}

OAIAutoScaleSettings::~OAIAutoScaleSettings() {}

void OAIAutoScaleSettings::initializeModel() {

    m_evaluation_interval_isSet = false;
    m_evaluation_interval_isValid = false;

    m_formula_isSet = false;
    m_formula_isValid = false;
}

void OAIAutoScaleSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutoScaleSettings::fromJsonObject(QJsonObject json) {

    m_evaluation_interval_isValid = ::OpenAPI::fromJsonValue(m_evaluation_interval, json[QString("evaluationInterval")]);
    m_evaluation_interval_isSet = !json[QString("evaluationInterval")].isNull() && m_evaluation_interval_isValid;

    m_formula_isValid = ::OpenAPI::fromJsonValue(m_formula, json[QString("formula")]);
    m_formula_isSet = !json[QString("formula")].isNull() && m_formula_isValid;
}

QString OAIAutoScaleSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutoScaleSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_evaluation_interval_isSet) {
        obj.insert(QString("evaluationInterval"), ::OpenAPI::toJsonValue(m_evaluation_interval));
    }
    if (m_formula_isSet) {
        obj.insert(QString("formula"), ::OpenAPI::toJsonValue(m_formula));
    }
    return obj;
}

QString OAIAutoScaleSettings::getEvaluationInterval() const {
    return m_evaluation_interval;
}
void OAIAutoScaleSettings::setEvaluationInterval(const QString &evaluation_interval) {
    m_evaluation_interval = evaluation_interval;
    m_evaluation_interval_isSet = true;
}

bool OAIAutoScaleSettings::is_evaluation_interval_Set() const{
    return m_evaluation_interval_isSet;
}

bool OAIAutoScaleSettings::is_evaluation_interval_Valid() const{
    return m_evaluation_interval_isValid;
}

QString OAIAutoScaleSettings::getFormula() const {
    return m_formula;
}
void OAIAutoScaleSettings::setFormula(const QString &formula) {
    m_formula = formula;
    m_formula_isSet = true;
}

bool OAIAutoScaleSettings::is_formula_Set() const{
    return m_formula_isSet;
}

bool OAIAutoScaleSettings::is_formula_Valid() const{
    return m_formula_isValid;
}

bool OAIAutoScaleSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_evaluation_interval_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_formula_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutoScaleSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_formula_isValid && true;
}

} // namespace OpenAPI
