/**
 * BatchManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOSDisk.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOSDisk::OAIOSDisk(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOSDisk::OAIOSDisk() {
    this->initializeModel();
}

OAIOSDisk::~OAIOSDisk() {}

void OAIOSDisk::initializeModel() {

    m_caching_isSet = false;
    m_caching_isValid = false;
}

void OAIOSDisk::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOSDisk::fromJsonObject(QJsonObject json) {

    m_caching_isValid = ::OpenAPI::fromJsonValue(m_caching, json[QString("caching")]);
    m_caching_isSet = !json[QString("caching")].isNull() && m_caching_isValid;
}

QString OAIOSDisk::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOSDisk::asJsonObject() const {
    QJsonObject obj;
    if (m_caching.isSet()) {
        obj.insert(QString("caching"), ::OpenAPI::toJsonValue(m_caching));
    }
    return obj;
}

OAICachingType OAIOSDisk::getCaching() const {
    return m_caching;
}
void OAIOSDisk::setCaching(const OAICachingType &caching) {
    m_caching = caching;
    m_caching_isSet = true;
}

bool OAIOSDisk::is_caching_Set() const{
    return m_caching_isSet;
}

bool OAIOSDisk::is_caching_Valid() const{
    return m_caching_isValid;
}

bool OAIOSDisk::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_caching.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOSDisk::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
