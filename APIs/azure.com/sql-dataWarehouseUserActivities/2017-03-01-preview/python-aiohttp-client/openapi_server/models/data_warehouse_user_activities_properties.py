# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataWarehouseUserActivitiesProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_queries_count: int=None):
        """DataWarehouseUserActivitiesProperties - a model defined in OpenAPI

        :param active_queries_count: The active_queries_count of this DataWarehouseUserActivitiesProperties.
        """
        self.openapi_types = {
            'active_queries_count': int
        }

        self.attribute_map = {
            'active_queries_count': 'activeQueriesCount'
        }

        self._active_queries_count = active_queries_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataWarehouseUserActivitiesProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataWarehouseUserActivitiesProperties of this DataWarehouseUserActivitiesProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_queries_count(self):
        """Gets the active_queries_count of this DataWarehouseUserActivitiesProperties.

        Count of running and suspended queries.

        :return: The active_queries_count of this DataWarehouseUserActivitiesProperties.
        :rtype: int
        """
        return self._active_queries_count

    @active_queries_count.setter
    def active_queries_count(self, active_queries_count):
        """Sets the active_queries_count of this DataWarehouseUserActivitiesProperties.

        Count of running and suspended queries.

        :param active_queries_count: The active_queries_count of this DataWarehouseUserActivitiesProperties.
        :type active_queries_count: int
        """

        self._active_queries_count = active_queries_count
