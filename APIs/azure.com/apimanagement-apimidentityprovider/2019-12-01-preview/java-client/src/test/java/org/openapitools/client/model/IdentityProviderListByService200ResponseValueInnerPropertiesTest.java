/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on Identity Provider entity associated with your Azure API Management deployment. Setting up an external Identity Provider for authentication can help you manage the developer portal logins using the OAuth2 flow.
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for IdentityProviderListByService200ResponseValueInnerProperties
 */
public class IdentityProviderListByService200ResponseValueInnerPropertiesTest {
    private final IdentityProviderListByService200ResponseValueInnerProperties model = new IdentityProviderListByService200ResponseValueInnerProperties();

    /**
     * Model tests for IdentityProviderListByService200ResponseValueInnerProperties
     */
    @Test
    public void testIdentityProviderListByService200ResponseValueInnerProperties() {
        // TODO: test IdentityProviderListByService200ResponseValueInnerProperties
    }

    /**
     * Test the property 'clientId'
     */
    @Test
    public void clientIdTest() {
        // TODO: test clientId
    }

    /**
     * Test the property 'clientSecret'
     */
    @Test
    public void clientSecretTest() {
        // TODO: test clientSecret
    }

}
