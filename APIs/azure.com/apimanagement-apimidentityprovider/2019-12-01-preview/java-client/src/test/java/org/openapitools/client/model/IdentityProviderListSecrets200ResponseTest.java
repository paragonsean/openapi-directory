/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on Identity Provider entity associated with your Azure API Management deployment. Setting up an external Identity Provider for authentication can help you manage the developer portal logins using the OAuth2 flow.
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for IdentityProviderListSecrets200Response
 */
public class IdentityProviderListSecrets200ResponseTest {
    private final IdentityProviderListSecrets200Response model = new IdentityProviderListSecrets200Response();

    /**
     * Model tests for IdentityProviderListSecrets200Response
     */
    @Test
    public void testIdentityProviderListSecrets200Response() {
        // TODO: test IdentityProviderListSecrets200Response
    }

    /**
     * Test the property 'clientSecret'
     */
    @Test
    public void clientSecretTest() {
        // TODO: test clientSecret
    }

}
