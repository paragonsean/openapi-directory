/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on Identity Provider entity associated with your Azure API Management deployment. Setting up an external Identity Provider for authentication can help you manage the developer portal logins using the OAuth2 flow.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IdentityProviderListByService200ResponseValueInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for IdentityProviderListByService200Response
 */
public class IdentityProviderListByService200ResponseTest {
    private final IdentityProviderListByService200Response model = new IdentityProviderListByService200Response();

    /**
     * Model tests for IdentityProviderListByService200Response
     */
    @Test
    public void testIdentityProviderListByService200Response() {
        // TODO: test IdentityProviderListByService200Response
    }

    /**
     * Test the property 'nextLink'
     */
    @Test
    public void nextLinkTest() {
        // TODO: test nextLink
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

}
