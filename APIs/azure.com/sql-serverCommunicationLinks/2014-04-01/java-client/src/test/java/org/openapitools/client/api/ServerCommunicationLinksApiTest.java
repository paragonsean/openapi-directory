/*
 * Azure SQL Database
 * Provides create, read, update and delete functionality Azure SQL server communication links.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ServerCommunicationLink;
import org.openapitools.client.model.ServerCommunicationLinkListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerCommunicationLinksApi
 */
@Disabled
public class ServerCommunicationLinksApiTest {

    private final ServerCommunicationLinksApi api = new ServerCommunicationLinksApi();

    /**
     * Creates a server communication link.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverCommunicationLinksCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String communicationLinkName = null;
        ServerCommunicationLink parameters = null;
        ServerCommunicationLink response = api.serverCommunicationLinksCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, serverName, communicationLinkName, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a server communication link.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverCommunicationLinksDeleteTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String communicationLinkName = null;
        api.serverCommunicationLinksDelete(apiVersion, subscriptionId, resourceGroupName, serverName, communicationLinkName);
        // TODO: test validations
    }

    /**
     * Returns a server communication link.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverCommunicationLinksGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String communicationLinkName = null;
        ServerCommunicationLink response = api.serverCommunicationLinksGet(apiVersion, subscriptionId, resourceGroupName, serverName, communicationLinkName);
        // TODO: test validations
    }

    /**
     * Gets a list of server communication links.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverCommunicationLinksListByServerTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        ServerCommunicationLinkListResult response = api.serverCommunicationLinksListByServer(apiVersion, subscriptionId, resourceGroupName, serverName);
        // TODO: test validations
    }

}
