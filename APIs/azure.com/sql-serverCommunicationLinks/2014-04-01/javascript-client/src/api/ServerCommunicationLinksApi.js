/**
 * Azure SQL Database
 * Provides create, read, update and delete functionality Azure SQL server communication links.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ServerCommunicationLink from '../model/ServerCommunicationLink';
import ServerCommunicationLinkListResult from '../model/ServerCommunicationLinkListResult';

/**
* ServerCommunicationLinks service.
* @module api/ServerCommunicationLinksApi
* @version 2014-04-01
*/
export default class ServerCommunicationLinksApi {

    /**
    * Constructs a new ServerCommunicationLinksApi. 
    * @alias module:api/ServerCommunicationLinksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the serverCommunicationLinksCreateOrUpdate operation.
     * @callback module:api/ServerCommunicationLinksApi~serverCommunicationLinksCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServerCommunicationLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a server communication link.
     * @param {String} apiVersion The API version to use for the request.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {String} communicationLinkName The name of the server communication link.
     * @param {module:model/ServerCommunicationLink} parameters The required parameters for creating a server communication link.
     * @param {module:api/ServerCommunicationLinksApi~serverCommunicationLinksCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServerCommunicationLink}
     */
    serverCommunicationLinksCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, serverName, communicationLinkName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serverCommunicationLinksCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serverCommunicationLinksCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serverCommunicationLinksCreateOrUpdate");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling serverCommunicationLinksCreateOrUpdate");
      }
      // verify the required parameter 'communicationLinkName' is set
      if (communicationLinkName === undefined || communicationLinkName === null) {
        throw new Error("Missing the required parameter 'communicationLinkName' when calling serverCommunicationLinksCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling serverCommunicationLinksCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'communicationLinkName': communicationLinkName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServerCommunicationLink;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks/{communicationLinkName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serverCommunicationLinksDelete operation.
     * @callback module:api/ServerCommunicationLinksApi~serverCommunicationLinksDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a server communication link.
     * @param {String} apiVersion The API version to use for the request.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {String} communicationLinkName The name of the server communication link.
     * @param {module:api/ServerCommunicationLinksApi~serverCommunicationLinksDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    serverCommunicationLinksDelete(apiVersion, subscriptionId, resourceGroupName, serverName, communicationLinkName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serverCommunicationLinksDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serverCommunicationLinksDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serverCommunicationLinksDelete");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling serverCommunicationLinksDelete");
      }
      // verify the required parameter 'communicationLinkName' is set
      if (communicationLinkName === undefined || communicationLinkName === null) {
        throw new Error("Missing the required parameter 'communicationLinkName' when calling serverCommunicationLinksDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'communicationLinkName': communicationLinkName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks/{communicationLinkName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serverCommunicationLinksGet operation.
     * @callback module:api/ServerCommunicationLinksApi~serverCommunicationLinksGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServerCommunicationLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a server communication link.
     * @param {String} apiVersion The API version to use for the request.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {String} communicationLinkName The name of the server communication link.
     * @param {module:api/ServerCommunicationLinksApi~serverCommunicationLinksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServerCommunicationLink}
     */
    serverCommunicationLinksGet(apiVersion, subscriptionId, resourceGroupName, serverName, communicationLinkName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serverCommunicationLinksGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serverCommunicationLinksGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serverCommunicationLinksGet");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling serverCommunicationLinksGet");
      }
      // verify the required parameter 'communicationLinkName' is set
      if (communicationLinkName === undefined || communicationLinkName === null) {
        throw new Error("Missing the required parameter 'communicationLinkName' when calling serverCommunicationLinksGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'communicationLinkName': communicationLinkName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServerCommunicationLink;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks/{communicationLinkName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serverCommunicationLinksListByServer operation.
     * @callback module:api/ServerCommunicationLinksApi~serverCommunicationLinksListByServerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServerCommunicationLinkListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of server communication links.
     * @param {String} apiVersion The API version to use for the request.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {module:api/ServerCommunicationLinksApi~serverCommunicationLinksListByServerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServerCommunicationLinkListResult}
     */
    serverCommunicationLinksListByServer(apiVersion, subscriptionId, resourceGroupName, serverName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serverCommunicationLinksListByServer");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serverCommunicationLinksListByServer");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serverCommunicationLinksListByServer");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling serverCommunicationLinksListByServer");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'serverName': serverName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServerCommunicationLinkListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
