/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecoverableManagedDatabaseProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecoverableManagedDatabaseProperties::OAIRecoverableManagedDatabaseProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecoverableManagedDatabaseProperties::OAIRecoverableManagedDatabaseProperties() {
    this->initializeModel();
}

OAIRecoverableManagedDatabaseProperties::~OAIRecoverableManagedDatabaseProperties() {}

void OAIRecoverableManagedDatabaseProperties::initializeModel() {

    m_last_available_backup_date_isSet = false;
    m_last_available_backup_date_isValid = false;
}

void OAIRecoverableManagedDatabaseProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecoverableManagedDatabaseProperties::fromJsonObject(QJsonObject json) {

    m_last_available_backup_date_isValid = ::OpenAPI::fromJsonValue(m_last_available_backup_date, json[QString("lastAvailableBackupDate")]);
    m_last_available_backup_date_isSet = !json[QString("lastAvailableBackupDate")].isNull() && m_last_available_backup_date_isValid;
}

QString OAIRecoverableManagedDatabaseProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecoverableManagedDatabaseProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_last_available_backup_date_isSet) {
        obj.insert(QString("lastAvailableBackupDate"), ::OpenAPI::toJsonValue(m_last_available_backup_date));
    }
    return obj;
}

QString OAIRecoverableManagedDatabaseProperties::getLastAvailableBackupDate() const {
    return m_last_available_backup_date;
}
void OAIRecoverableManagedDatabaseProperties::setLastAvailableBackupDate(const QString &last_available_backup_date) {
    m_last_available_backup_date = last_available_backup_date;
    m_last_available_backup_date_isSet = true;
}

bool OAIRecoverableManagedDatabaseProperties::is_last_available_backup_date_Set() const{
    return m_last_available_backup_date_isSet;
}

bool OAIRecoverableManagedDatabaseProperties::is_last_available_backup_date_Valid() const{
    return m_last_available_backup_date_isValid;
}

bool OAIRecoverableManagedDatabaseProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_available_backup_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecoverableManagedDatabaseProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
