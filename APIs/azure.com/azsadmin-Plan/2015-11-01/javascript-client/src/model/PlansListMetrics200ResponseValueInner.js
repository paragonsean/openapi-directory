/**
 * SubscriptionsManagementClient
 * The Admin Subscriptions Management Client.
 *
 * The version of the OpenAPI document: 2015-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlansListMetrics200ResponseValueInnerMetricValuesInner from './PlansListMetrics200ResponseValueInnerMetricValuesInner';

/**
 * The PlansListMetrics200ResponseValueInner model module.
 * @module model/PlansListMetrics200ResponseValueInner
 * @version 2015-11-01
 */
class PlansListMetrics200ResponseValueInner {
    /**
     * Constructs a new <code>PlansListMetrics200ResponseValueInner</code>.
     * The resource metric set that represents the metrics for a particular resource.
     * @alias module:model/PlansListMetrics200ResponseValueInner
     */
    constructor() { 
        
        PlansListMetrics200ResponseValueInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlansListMetrics200ResponseValueInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlansListMetrics200ResponseValueInner} obj Optional instance to populate.
     * @return {module:model/PlansListMetrics200ResponseValueInner} The populated <code>PlansListMetrics200ResponseValueInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlansListMetrics200ResponseValueInner();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('metricUnit')) {
                obj['metricUnit'] = ApiClient.convertToType(data['metricUnit'], 'String');
            }
            if (data.hasOwnProperty('metricValues')) {
                obj['metricValues'] = ApiClient.convertToType(data['metricValues'], [PlansListMetrics200ResponseValueInnerMetricValuesInner]);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('timeGrain')) {
                obj['timeGrain'] = ApiClient.convertToType(data['timeGrain'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlansListMetrics200ResponseValueInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlansListMetrics200ResponseValueInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['metricUnit'] && !(typeof data['metricUnit'] === 'string' || data['metricUnit'] instanceof String)) {
            throw new Error("Expected the field `metricUnit` to be a primitive type in the JSON string but got " + data['metricUnit']);
        }
        if (data['metricValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metricValues'])) {
                throw new Error("Expected the field `metricValues` to be an array in the JSON data but got " + data['metricValues']);
            }
            // validate the optional field `metricValues` (array)
            for (const item of data['metricValues']) {
                PlansListMetrics200ResponseValueInnerMetricValuesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['timeGrain'] && !(typeof data['timeGrain'] === 'string' || data['timeGrain'] instanceof String)) {
            throw new Error("Expected the field `timeGrain` to be a primitive type in the JSON string but got " + data['timeGrain']);
        }

        return true;
    }


}



/**
 * End time of the metric.
 * @member {Date} endTime
 */
PlansListMetrics200ResponseValueInner.prototype['endTime'] = undefined;

/**
 * The resource metric unit.
 * @member {module:model/PlansListMetrics200ResponseValueInner.MetricUnitEnum} metricUnit
 */
PlansListMetrics200ResponseValueInner.prototype['metricUnit'] = undefined;

/**
 * List of metric values.
 * @member {Array.<module:model/PlansListMetrics200ResponseValueInnerMetricValuesInner>} metricValues
 */
PlansListMetrics200ResponseValueInner.prototype['metricValues'] = undefined;

/**
 * Start time of the metric.
 * @member {Date} startTime
 */
PlansListMetrics200ResponseValueInner.prototype['startTime'] = undefined;

/**
 * Timespan of the metric.
 * @member {String} timeGrain
 */
PlansListMetrics200ResponseValueInner.prototype['timeGrain'] = undefined;





/**
 * Allowed values for the <code>metricUnit</code> property.
 * @enum {String}
 * @readonly
 */
PlansListMetrics200ResponseValueInner['MetricUnitEnum'] = {

    /**
     * value: "Count"
     * @const
     */
    "Count": "Count",

    /**
     * value: "Bytes"
     * @const
     */
    "Bytes": "Bytes",

    /**
     * value: "Seconds"
     * @const
     */
    "Seconds": "Seconds",

    /**
     * value: "CountPerSecond"
     * @const
     */
    "CountPerSecond": "CountPerSecond",

    /**
     * value: "BytesPerSecond"
     * @const
     */
    "BytesPerSecond": "BytesPerSecond"
};



export default PlansListMetrics200ResponseValueInner;

