/**
 * SubscriptionsManagementClient
 * The Admin Subscriptions Management Client.
 *
 * The version of the OpenAPI document: 2015-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Plan from '../model/Plan';
import PlanList from '../model/PlanList';
import PlansListMetricDefinitions200Response from '../model/PlansListMetricDefinitions200Response';
import PlansListMetrics200Response from '../model/PlansListMetrics200Response';

/**
* Plans service.
* @module api/PlansApi
* @version 2015-11-01
*/
export default class PlansApi {

    /**
    * Constructs a new PlansApi. 
    * @alias module:api/PlansApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the plansCreateOrUpdate operation.
     * @callback module:api/PlansApi~plansCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Plan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update the plan.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The resource group the resource is located under.
     * @param {String} plan Name of the plan.
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/Plan} newPlan New plan.
     * @param {module:api/PlansApi~plansCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Plan}
     */
    plansCreateOrUpdate(subscriptionId, resourceGroupName, plan, apiVersion, newPlan, callback) {
      let postBody = newPlan;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling plansCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling plansCreateOrUpdate");
      }
      // verify the required parameter 'plan' is set
      if (plan === undefined || plan === null) {
        throw new Error("Missing the required parameter 'plan' when calling plansCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling plansCreateOrUpdate");
      }
      // verify the required parameter 'newPlan' is set
      if (newPlan === undefined || newPlan === null) {
        throw new Error("Missing the required parameter 'newPlan' when calling plansCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'plan': plan
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Plan;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/plans/{plan}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the plansDelete operation.
     * @callback module:api/PlansApi~plansDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete the specified plan.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The resource group the resource is located under.
     * @param {String} plan Name of the plan.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/PlansApi~plansDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    plansDelete(subscriptionId, resourceGroupName, plan, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling plansDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling plansDelete");
      }
      // verify the required parameter 'plan' is set
      if (plan === undefined || plan === null) {
        throw new Error("Missing the required parameter 'plan' when calling plansDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling plansDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'plan': plan
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/plans/{plan}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the plansGet operation.
     * @callback module:api/PlansApi~plansGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Plan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the specified plan.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The resource group the resource is located under.
     * @param {String} plan Name of the plan.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/PlansApi~plansGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Plan}
     */
    plansGet(subscriptionId, resourceGroupName, plan, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling plansGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling plansGet");
      }
      // verify the required parameter 'plan' is set
      if (plan === undefined || plan === null) {
        throw new Error("Missing the required parameter 'plan' when calling plansGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling plansGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'plan': plan
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Plan;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/plans/{plan}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the plansList operation.
     * @callback module:api/PlansApi~plansListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlanList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of plans under a resource group.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The resource group the resource is located under.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/PlansApi~plansListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlanList}
     */
    plansList(subscriptionId, resourceGroupName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling plansList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling plansList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling plansList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlanList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/plans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the plansListAll operation.
     * @callback module:api/PlansApi~plansListAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlanList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all plans across all subscriptions.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/PlansApi~plansListAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlanList}
     */
    plansListAll(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling plansListAll");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling plansListAll");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlanList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/plans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the plansListMetricDefinitions operation.
     * @callback module:api/PlansApi~plansListMetricDefinitionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlansListMetricDefinitions200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the metric definitions of the specified plan.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The resource group the resource is located under.
     * @param {String} plan Name of the plan.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/PlansApi~plansListMetricDefinitionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlansListMetricDefinitions200Response}
     */
    plansListMetricDefinitions(subscriptionId, resourceGroupName, plan, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling plansListMetricDefinitions");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling plansListMetricDefinitions");
      }
      // verify the required parameter 'plan' is set
      if (plan === undefined || plan === null) {
        throw new Error("Missing the required parameter 'plan' when calling plansListMetricDefinitions");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling plansListMetricDefinitions");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'plan': plan
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlansListMetricDefinitions200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/plans/{plan}/metricDefinitions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the plansListMetrics operation.
     * @callback module:api/PlansApi~plansListMetricsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlansListMetrics200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the metrics of the specified plan.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The resource group the resource is located under.
     * @param {String} plan Name of the plan.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/PlansApi~plansListMetricsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlansListMetrics200Response}
     */
    plansListMetrics(subscriptionId, resourceGroupName, plan, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling plansListMetrics");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling plansListMetrics");
      }
      // verify the required parameter 'plan' is set
      if (plan === undefined || plan === null) {
        throw new Error("Missing the required parameter 'plan' when calling plansListMetrics");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling plansListMetrics");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'plan': plan
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlansListMetrics200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Subscriptions.Admin/plans/{plan}/metrics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
