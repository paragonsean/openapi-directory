/*
 * SubscriptionsManagementClient
 * The Admin Subscriptions Management Client.
 *
 * The version of the OpenAPI document: 2015-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Plan;
import org.openapitools.client.model.PlanList;
import org.openapitools.client.model.PlansListMetricDefinitions200Response;
import org.openapitools.client.model.PlansListMetrics200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlansApi
 */
@Disabled
public class PlansApiTest {

    private final PlansApi api = new PlansApi();

    /**
     * Create or update the plan.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void plansCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String plan = null;
        String apiVersion = null;
        Plan newPlan = null;
        Plan response = api.plansCreateOrUpdate(subscriptionId, resourceGroupName, plan, apiVersion, newPlan);
        // TODO: test validations
    }

    /**
     * Delete the specified plan.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void plansDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String plan = null;
        String apiVersion = null;
        api.plansDelete(subscriptionId, resourceGroupName, plan, apiVersion);
        // TODO: test validations
    }

    /**
     * Get the specified plan.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void plansGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String plan = null;
        String apiVersion = null;
        Plan response = api.plansGet(subscriptionId, resourceGroupName, plan, apiVersion);
        // TODO: test validations
    }

    /**
     * Get the list of plans under a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void plansListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        PlanList response = api.plansList(subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * List all plans across all subscriptions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void plansListAllTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        PlanList response = api.plansListAll(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Get the metric definitions of the specified plan.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void plansListMetricDefinitionsTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String plan = null;
        String apiVersion = null;
        PlansListMetricDefinitions200Response response = api.plansListMetricDefinitions(subscriptionId, resourceGroupName, plan, apiVersion);
        // TODO: test validations
    }

    /**
     * Get the metrics of the specified plan.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void plansListMetricsTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String plan = null;
        String apiVersion = null;
        PlansListMetrics200Response response = api.plansListMetrics(subscriptionId, resourceGroupName, plan, apiVersion);
        // TODO: test validations
    }

}
