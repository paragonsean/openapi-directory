# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlanProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, display_name: str=None, external_reference_id: str=None, name: str=None, quota_ids: List[str]=None, sku_ids: List[str]=None, subscription_count: int=None):
        """PlanProperties - a model defined in OpenAPI

        :param description: The description of this PlanProperties.
        :param display_name: The display_name of this PlanProperties.
        :param external_reference_id: The external_reference_id of this PlanProperties.
        :param name: The name of this PlanProperties.
        :param quota_ids: The quota_ids of this PlanProperties.
        :param sku_ids: The sku_ids of this PlanProperties.
        :param subscription_count: The subscription_count of this PlanProperties.
        """
        self.openapi_types = {
            'description': str,
            'display_name': str,
            'external_reference_id': str,
            'name': str,
            'quota_ids': List[str],
            'sku_ids': List[str],
            'subscription_count': int
        }

        self.attribute_map = {
            'description': 'description',
            'display_name': 'displayName',
            'external_reference_id': 'externalReferenceId',
            'name': 'name',
            'quota_ids': 'quotaIds',
            'sku_ids': 'skuIds',
            'subscription_count': 'subscriptionCount'
        }

        self._description = description
        self._display_name = display_name
        self._external_reference_id = external_reference_id
        self._name = name
        self._quota_ids = quota_ids
        self._sku_ids = sku_ids
        self._subscription_count = subscription_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlanProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlanProperties of this PlanProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this PlanProperties.

        Description of the plan.

        :return: The description of this PlanProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PlanProperties.

        Description of the plan.

        :param description: The description of this PlanProperties.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this PlanProperties.

        Display name.

        :return: The display_name of this PlanProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this PlanProperties.

        Display name.

        :param display_name: The display_name of this PlanProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def external_reference_id(self):
        """Gets the external_reference_id of this PlanProperties.

        External reference identifier.

        :return: The external_reference_id of this PlanProperties.
        :rtype: str
        """
        return self._external_reference_id

    @external_reference_id.setter
    def external_reference_id(self, external_reference_id):
        """Sets the external_reference_id of this PlanProperties.

        External reference identifier.

        :param external_reference_id: The external_reference_id of this PlanProperties.
        :type external_reference_id: str
        """

        self._external_reference_id = external_reference_id

    @property
    def name(self):
        """Gets the name of this PlanProperties.

        Name of the plan.

        :return: The name of this PlanProperties.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PlanProperties.

        Name of the plan.

        :param name: The name of this PlanProperties.
        :type name: str
        """

        self._name = name

    @property
    def quota_ids(self):
        """Gets the quota_ids of this PlanProperties.

        Quota identifiers under the plan.

        :return: The quota_ids of this PlanProperties.
        :rtype: List[str]
        """
        return self._quota_ids

    @quota_ids.setter
    def quota_ids(self, quota_ids):
        """Sets the quota_ids of this PlanProperties.

        Quota identifiers under the plan.

        :param quota_ids: The quota_ids of this PlanProperties.
        :type quota_ids: List[str]
        """

        self._quota_ids = quota_ids

    @property
    def sku_ids(self):
        """Gets the sku_ids of this PlanProperties.

        SKU identifiers.

        :return: The sku_ids of this PlanProperties.
        :rtype: List[str]
        """
        return self._sku_ids

    @sku_ids.setter
    def sku_ids(self, sku_ids):
        """Sets the sku_ids of this PlanProperties.

        SKU identifiers.

        :param sku_ids: The sku_ids of this PlanProperties.
        :type sku_ids: List[str]
        """

        self._sku_ids = sku_ids

    @property
    def subscription_count(self):
        """Gets the subscription_count of this PlanProperties.

        Subscription count.

        :return: The subscription_count of this PlanProperties.
        :rtype: int
        """
        return self._subscription_count

    @subscription_count.setter
    def subscription_count(self, subscription_count):
        """Sets the subscription_count of this PlanProperties.

        Subscription count.

        :param subscription_count: The subscription_count of this PlanProperties.
        :type subscription_count: int
        """

        self._subscription_count = subscription_count
