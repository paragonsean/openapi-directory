/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILogSpecification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILogSpecification::OAILogSpecification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILogSpecification::OAILogSpecification() {
    this->initializeModel();
}

OAILogSpecification::~OAILogSpecification() {}

void OAILogSpecification::initializeModel() {

    m_blob_duration_isSet = false;
    m_blob_duration_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAILogSpecification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILogSpecification::fromJsonObject(QJsonObject json) {

    m_blob_duration_isValid = ::OpenAPI::fromJsonValue(m_blob_duration, json[QString("blobDuration")]);
    m_blob_duration_isSet = !json[QString("blobDuration")].isNull() && m_blob_duration_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAILogSpecification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILogSpecification::asJsonObject() const {
    QJsonObject obj;
    if (m_blob_duration_isSet) {
        obj.insert(QString("blobDuration"), ::OpenAPI::toJsonValue(m_blob_duration));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAILogSpecification::getBlobDuration() const {
    return m_blob_duration;
}
void OAILogSpecification::setBlobDuration(const QString &blob_duration) {
    m_blob_duration = blob_duration;
    m_blob_duration_isSet = true;
}

bool OAILogSpecification::is_blob_duration_Set() const{
    return m_blob_duration_isSet;
}

bool OAILogSpecification::is_blob_duration_Valid() const{
    return m_blob_duration_isValid;
}

QString OAILogSpecification::getDisplayName() const {
    return m_display_name;
}
void OAILogSpecification::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAILogSpecification::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAILogSpecification::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAILogSpecification::getName() const {
    return m_name;
}
void OAILogSpecification::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILogSpecification::is_name_Set() const{
    return m_name_isSet;
}

bool OAILogSpecification::is_name_Valid() const{
    return m_name_isValid;
}

bool OAILogSpecification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_blob_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILogSpecification::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
