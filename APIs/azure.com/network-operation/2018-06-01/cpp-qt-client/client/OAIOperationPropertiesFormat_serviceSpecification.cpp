/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperationPropertiesFormat_serviceSpecification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperationPropertiesFormat_serviceSpecification::OAIOperationPropertiesFormat_serviceSpecification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperationPropertiesFormat_serviceSpecification::OAIOperationPropertiesFormat_serviceSpecification() {
    this->initializeModel();
}

OAIOperationPropertiesFormat_serviceSpecification::~OAIOperationPropertiesFormat_serviceSpecification() {}

void OAIOperationPropertiesFormat_serviceSpecification::initializeModel() {

    m_log_specifications_isSet = false;
    m_log_specifications_isValid = false;

    m_metric_specifications_isSet = false;
    m_metric_specifications_isValid = false;
}

void OAIOperationPropertiesFormat_serviceSpecification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOperationPropertiesFormat_serviceSpecification::fromJsonObject(QJsonObject json) {

    m_log_specifications_isValid = ::OpenAPI::fromJsonValue(m_log_specifications, json[QString("logSpecifications")]);
    m_log_specifications_isSet = !json[QString("logSpecifications")].isNull() && m_log_specifications_isValid;

    m_metric_specifications_isValid = ::OpenAPI::fromJsonValue(m_metric_specifications, json[QString("metricSpecifications")]);
    m_metric_specifications_isSet = !json[QString("metricSpecifications")].isNull() && m_metric_specifications_isValid;
}

QString OAIOperationPropertiesFormat_serviceSpecification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOperationPropertiesFormat_serviceSpecification::asJsonObject() const {
    QJsonObject obj;
    if (m_log_specifications.size() > 0) {
        obj.insert(QString("logSpecifications"), ::OpenAPI::toJsonValue(m_log_specifications));
    }
    if (m_metric_specifications.size() > 0) {
        obj.insert(QString("metricSpecifications"), ::OpenAPI::toJsonValue(m_metric_specifications));
    }
    return obj;
}

QList<OAILogSpecification> OAIOperationPropertiesFormat_serviceSpecification::getLogSpecifications() const {
    return m_log_specifications;
}
void OAIOperationPropertiesFormat_serviceSpecification::setLogSpecifications(const QList<OAILogSpecification> &log_specifications) {
    m_log_specifications = log_specifications;
    m_log_specifications_isSet = true;
}

bool OAIOperationPropertiesFormat_serviceSpecification::is_log_specifications_Set() const{
    return m_log_specifications_isSet;
}

bool OAIOperationPropertiesFormat_serviceSpecification::is_log_specifications_Valid() const{
    return m_log_specifications_isValid;
}

QList<OAIMetricSpecification> OAIOperationPropertiesFormat_serviceSpecification::getMetricSpecifications() const {
    return m_metric_specifications;
}
void OAIOperationPropertiesFormat_serviceSpecification::setMetricSpecifications(const QList<OAIMetricSpecification> &metric_specifications) {
    m_metric_specifications = metric_specifications;
    m_metric_specifications_isSet = true;
}

bool OAIOperationPropertiesFormat_serviceSpecification::is_metric_specifications_Set() const{
    return m_metric_specifications_isSet;
}

bool OAIOperationPropertiesFormat_serviceSpecification::is_metric_specifications_Valid() const{
    return m_metric_specifications_isValid;
}

bool OAIOperationPropertiesFormat_serviceSpecification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_log_specifications.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_specifications.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOperationPropertiesFormat_serviceSpecification::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
