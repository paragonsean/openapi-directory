/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAvailability.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAvailability::OAIAvailability(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAvailability::OAIAvailability() {
    this->initializeModel();
}

OAIAvailability::~OAIAvailability() {}

void OAIAvailability::initializeModel() {

    m_blob_duration_isSet = false;
    m_blob_duration_isValid = false;

    m_retention_isSet = false;
    m_retention_isValid = false;

    m_time_grain_isSet = false;
    m_time_grain_isValid = false;
}

void OAIAvailability::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAvailability::fromJsonObject(QJsonObject json) {

    m_blob_duration_isValid = ::OpenAPI::fromJsonValue(m_blob_duration, json[QString("blobDuration")]);
    m_blob_duration_isSet = !json[QString("blobDuration")].isNull() && m_blob_duration_isValid;

    m_retention_isValid = ::OpenAPI::fromJsonValue(m_retention, json[QString("retention")]);
    m_retention_isSet = !json[QString("retention")].isNull() && m_retention_isValid;

    m_time_grain_isValid = ::OpenAPI::fromJsonValue(m_time_grain, json[QString("timeGrain")]);
    m_time_grain_isSet = !json[QString("timeGrain")].isNull() && m_time_grain_isValid;
}

QString OAIAvailability::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAvailability::asJsonObject() const {
    QJsonObject obj;
    if (m_blob_duration_isSet) {
        obj.insert(QString("blobDuration"), ::OpenAPI::toJsonValue(m_blob_duration));
    }
    if (m_retention_isSet) {
        obj.insert(QString("retention"), ::OpenAPI::toJsonValue(m_retention));
    }
    if (m_time_grain_isSet) {
        obj.insert(QString("timeGrain"), ::OpenAPI::toJsonValue(m_time_grain));
    }
    return obj;
}

QString OAIAvailability::getBlobDuration() const {
    return m_blob_duration;
}
void OAIAvailability::setBlobDuration(const QString &blob_duration) {
    m_blob_duration = blob_duration;
    m_blob_duration_isSet = true;
}

bool OAIAvailability::is_blob_duration_Set() const{
    return m_blob_duration_isSet;
}

bool OAIAvailability::is_blob_duration_Valid() const{
    return m_blob_duration_isValid;
}

QString OAIAvailability::getRetention() const {
    return m_retention;
}
void OAIAvailability::setRetention(const QString &retention) {
    m_retention = retention;
    m_retention_isSet = true;
}

bool OAIAvailability::is_retention_Set() const{
    return m_retention_isSet;
}

bool OAIAvailability::is_retention_Valid() const{
    return m_retention_isValid;
}

QString OAIAvailability::getTimeGrain() const {
    return m_time_grain;
}
void OAIAvailability::setTimeGrain(const QString &time_grain) {
    m_time_grain = time_grain;
    m_time_grain_isSet = true;
}

bool OAIAvailability::is_time_grain_Set() const{
    return m_time_grain_isSet;
}

bool OAIAvailability::is_time_grain_Valid() const{
    return m_time_grain_isValid;
}

bool OAIAvailability::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_blob_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retention_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_grain_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAvailability::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
