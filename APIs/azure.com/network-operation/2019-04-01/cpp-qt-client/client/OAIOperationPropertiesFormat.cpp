/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperationPropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperationPropertiesFormat::OAIOperationPropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperationPropertiesFormat::OAIOperationPropertiesFormat() {
    this->initializeModel();
}

OAIOperationPropertiesFormat::~OAIOperationPropertiesFormat() {}

void OAIOperationPropertiesFormat::initializeModel() {

    m_service_specification_isSet = false;
    m_service_specification_isValid = false;
}

void OAIOperationPropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOperationPropertiesFormat::fromJsonObject(QJsonObject json) {

    m_service_specification_isValid = ::OpenAPI::fromJsonValue(m_service_specification, json[QString("serviceSpecification")]);
    m_service_specification_isSet = !json[QString("serviceSpecification")].isNull() && m_service_specification_isValid;
}

QString OAIOperationPropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOperationPropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_service_specification.isSet()) {
        obj.insert(QString("serviceSpecification"), ::OpenAPI::toJsonValue(m_service_specification));
    }
    return obj;
}

OAIOperationPropertiesFormat_serviceSpecification OAIOperationPropertiesFormat::getServiceSpecification() const {
    return m_service_specification;
}
void OAIOperationPropertiesFormat::setServiceSpecification(const OAIOperationPropertiesFormat_serviceSpecification &service_specification) {
    m_service_specification = service_specification;
    m_service_specification_isSet = true;
}

bool OAIOperationPropertiesFormat::is_service_specification_Set() const{
    return m_service_specification_isSet;
}

bool OAIOperationPropertiesFormat::is_service_specification_Valid() const{
    return m_service_specification_isValid;
}

bool OAIOperationPropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOperationPropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
