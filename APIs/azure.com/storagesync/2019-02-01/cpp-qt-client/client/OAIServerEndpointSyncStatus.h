/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServerEndpointSyncStatus.h
 *
 * Server Endpoint sync status
 */

#ifndef OAIServerEndpointSyncStatus_H
#define OAIServerEndpointSyncStatus_H

#include <QJsonObject>

#include "OAIHealthState.h"
#include "OAIOfflineDataTransferState.h"
#include "OAISyncActivityState.h"
#include "OAISyncActivityStatus.h"
#include "OAISyncSessionStatus.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISyncActivityStatus;
class OAISyncSessionStatus;

class OAIServerEndpointSyncStatus : public OAIObject {
public:
    OAIServerEndpointSyncStatus();
    OAIServerEndpointSyncStatus(QString json);
    ~OAIServerEndpointSyncStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHealthState getCombinedHealth() const;
    void setCombinedHealth(const OAIHealthState &combined_health);
    bool is_combined_health_Set() const;
    bool is_combined_health_Valid() const;

    OAISyncActivityStatus getDownloadActivity() const;
    void setDownloadActivity(const OAISyncActivityStatus &download_activity);
    bool is_download_activity_Set() const;
    bool is_download_activity_Valid() const;

    OAIHealthState getDownloadHealth() const;
    void setDownloadHealth(const OAIHealthState &download_health);
    bool is_download_health_Set() const;
    bool is_download_health_Valid() const;

    OAISyncSessionStatus getDownloadStatus() const;
    void setDownloadStatus(const OAISyncSessionStatus &download_status);
    bool is_download_status_Set() const;
    bool is_download_status_Valid() const;

    QDateTime getLastUpdatedTimestamp() const;
    void setLastUpdatedTimestamp(const QDateTime &last_updated_timestamp);
    bool is_last_updated_timestamp_Set() const;
    bool is_last_updated_timestamp_Valid() const;

    OAIOfflineDataTransferState getOfflineDataTransferStatus() const;
    void setOfflineDataTransferStatus(const OAIOfflineDataTransferState &offline_data_transfer_status);
    bool is_offline_data_transfer_status_Set() const;
    bool is_offline_data_transfer_status_Valid() const;

    OAISyncActivityState getSyncActivity() const;
    void setSyncActivity(const OAISyncActivityState &sync_activity);
    bool is_sync_activity_Set() const;
    bool is_sync_activity_Valid() const;

    qint64 getTotalPersistentFilesNotSyncingCount() const;
    void setTotalPersistentFilesNotSyncingCount(const qint64 &total_persistent_files_not_syncing_count);
    bool is_total_persistent_files_not_syncing_count_Set() const;
    bool is_total_persistent_files_not_syncing_count_Valid() const;

    OAISyncActivityStatus getUploadActivity() const;
    void setUploadActivity(const OAISyncActivityStatus &upload_activity);
    bool is_upload_activity_Set() const;
    bool is_upload_activity_Valid() const;

    OAIHealthState getUploadHealth() const;
    void setUploadHealth(const OAIHealthState &upload_health);
    bool is_upload_health_Set() const;
    bool is_upload_health_Valid() const;

    OAISyncSessionStatus getUploadStatus() const;
    void setUploadStatus(const OAISyncSessionStatus &upload_status);
    bool is_upload_status_Set() const;
    bool is_upload_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHealthState m_combined_health;
    bool m_combined_health_isSet;
    bool m_combined_health_isValid;

    OAISyncActivityStatus m_download_activity;
    bool m_download_activity_isSet;
    bool m_download_activity_isValid;

    OAIHealthState m_download_health;
    bool m_download_health_isSet;
    bool m_download_health_isValid;

    OAISyncSessionStatus m_download_status;
    bool m_download_status_isSet;
    bool m_download_status_isValid;

    QDateTime m_last_updated_timestamp;
    bool m_last_updated_timestamp_isSet;
    bool m_last_updated_timestamp_isValid;

    OAIOfflineDataTransferState m_offline_data_transfer_status;
    bool m_offline_data_transfer_status_isSet;
    bool m_offline_data_transfer_status_isValid;

    OAISyncActivityState m_sync_activity;
    bool m_sync_activity_isSet;
    bool m_sync_activity_isValid;

    qint64 m_total_persistent_files_not_syncing_count;
    bool m_total_persistent_files_not_syncing_count_isSet;
    bool m_total_persistent_files_not_syncing_count_isValid;

    OAISyncActivityStatus m_upload_activity;
    bool m_upload_activity_isSet;
    bool m_upload_activity_isValid;

    OAIHealthState m_upload_health;
    bool m_upload_health_isSet;
    bool m_upload_health_isValid;

    OAISyncSessionStatus m_upload_status;
    bool m_upload_status_isSet;
    bool m_upload_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServerEndpointSyncStatus)

#endif // OAIServerEndpointSyncStatus_H
