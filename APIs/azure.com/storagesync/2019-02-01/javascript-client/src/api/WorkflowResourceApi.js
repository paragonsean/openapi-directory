/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import StorageSyncError from '../model/StorageSyncError';
import Workflow from '../model/Workflow';
import WorkflowArray from '../model/WorkflowArray';

/**
* WorkflowResource service.
* @module api/WorkflowResourceApi
* @version 2019-02-01
*/
export default class WorkflowResourceApi {

    /**
    * Constructs a new WorkflowResourceApi. 
    * @alias module:api/WorkflowResourceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the workflowsAbort operation.
     * @callback module:api/WorkflowResourceApi~workflowsAbortCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Abort the given workflow.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} storageSyncServiceName Name of Storage Sync Service resource.
     * @param {String} workflowId workflow Id
     * @param {module:api/WorkflowResourceApi~workflowsAbortCallback} callback The callback function, accepting three arguments: error, data, response
     */
    workflowsAbort(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, workflowId, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workflowsAbort");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workflowsAbort");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workflowsAbort");
      }
      // verify the required parameter 'storageSyncServiceName' is set
      if (storageSyncServiceName === undefined || storageSyncServiceName === null) {
        throw new Error("Missing the required parameter 'storageSyncServiceName' when calling workflowsAbort");
      }
      // verify the required parameter 'workflowId' is set
      if (workflowId === undefined || workflowId === null) {
        throw new Error("Missing the required parameter 'workflowId' when calling workflowsAbort");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'storageSyncServiceName': storageSyncServiceName,
        'workflowId': workflowId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/workflows/{workflowId}/abort', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workflowsGet operation.
     * @callback module:api/WorkflowResourceApi~workflowsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Workflow} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Workflows resource
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} storageSyncServiceName Name of Storage Sync Service resource.
     * @param {String} workflowId workflow Id
     * @param {module:api/WorkflowResourceApi~workflowsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Workflow}
     */
    workflowsGet(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, workflowId, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workflowsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workflowsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workflowsGet");
      }
      // verify the required parameter 'storageSyncServiceName' is set
      if (storageSyncServiceName === undefined || storageSyncServiceName === null) {
        throw new Error("Missing the required parameter 'storageSyncServiceName' when calling workflowsGet");
      }
      // verify the required parameter 'workflowId' is set
      if (workflowId === undefined || workflowId === null) {
        throw new Error("Missing the required parameter 'workflowId' when calling workflowsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'storageSyncServiceName': storageSyncServiceName,
        'workflowId': workflowId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Workflow;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/workflows/{workflowId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workflowsListByStorageSyncService operation.
     * @callback module:api/WorkflowResourceApi~workflowsListByStorageSyncServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkflowArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Workflow List
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} storageSyncServiceName Name of Storage Sync Service resource.
     * @param {module:api/WorkflowResourceApi~workflowsListByStorageSyncServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkflowArray}
     */
    workflowsListByStorageSyncService(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workflowsListByStorageSyncService");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workflowsListByStorageSyncService");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workflowsListByStorageSyncService");
      }
      // verify the required parameter 'storageSyncServiceName' is set
      if (storageSyncServiceName === undefined || storageSyncServiceName === null) {
        throw new Error("Missing the required parameter 'storageSyncServiceName' when calling workflowsListByStorageSyncService");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'storageSyncServiceName': storageSyncServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowArray;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/workflows', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
