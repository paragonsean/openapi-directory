# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SyncGroupProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sync_group_status: str=None, unique_id: str=None):
        """SyncGroupProperties - a model defined in OpenAPI

        :param sync_group_status: The sync_group_status of this SyncGroupProperties.
        :param unique_id: The unique_id of this SyncGroupProperties.
        """
        self.openapi_types = {
            'sync_group_status': str,
            'unique_id': str
        }

        self.attribute_map = {
            'sync_group_status': 'syncGroupStatus',
            'unique_id': 'uniqueId'
        }

        self._sync_group_status = sync_group_status
        self._unique_id = unique_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SyncGroupProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SyncGroupProperties of this SyncGroupProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sync_group_status(self):
        """Gets the sync_group_status of this SyncGroupProperties.

        Sync group status

        :return: The sync_group_status of this SyncGroupProperties.
        :rtype: str
        """
        return self._sync_group_status

    @sync_group_status.setter
    def sync_group_status(self, sync_group_status):
        """Sets the sync_group_status of this SyncGroupProperties.

        Sync group status

        :param sync_group_status: The sync_group_status of this SyncGroupProperties.
        :type sync_group_status: str
        """

        self._sync_group_status = sync_group_status

    @property
    def unique_id(self):
        """Gets the unique_id of this SyncGroupProperties.

        Unique Id

        :return: The unique_id of this SyncGroupProperties.
        :rtype: str
        """
        return self._unique_id

    @unique_id.setter
    def unique_id(self, unique_id):
        """Sets the unique_id of this SyncGroupProperties.

        Unique Id

        :param unique_id: The unique_id of this SyncGroupProperties.
        :type unique_id: str
        """

        self._unique_id = unique_id
