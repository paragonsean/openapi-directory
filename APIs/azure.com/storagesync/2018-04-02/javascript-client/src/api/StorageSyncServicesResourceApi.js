/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2018-04-02
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import StorageSyncError from '../model/StorageSyncError';
import StorageSyncService from '../model/StorageSyncService';
import StorageSyncServiceArray from '../model/StorageSyncServiceArray';
import StorageSyncServiceCreateParameters from '../model/StorageSyncServiceCreateParameters';
import StorageSyncServiceUpdateParameters from '../model/StorageSyncServiceUpdateParameters';

/**
* StorageSyncServicesResource service.
* @module api/StorageSyncServicesResourceApi
* @version 2018-04-02
*/
export default class StorageSyncServicesResourceApi {

    /**
    * Constructs a new StorageSyncServicesResourceApi. 
    * @alias module:api/StorageSyncServicesResourceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the storageSyncServicesCreate operation.
     * @callback module:api/StorageSyncServicesResourceApi~storageSyncServicesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StorageSyncService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new StorageSyncService.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} storageSyncServiceName Name of Storage Sync Service resource.
     * @param {module:model/StorageSyncServiceCreateParameters} parameters Storage Sync Service resource name.
     * @param {module:api/StorageSyncServicesResourceApi~storageSyncServicesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StorageSyncService}
     */
    storageSyncServicesCreate(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling storageSyncServicesCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling storageSyncServicesCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling storageSyncServicesCreate");
      }
      // verify the required parameter 'storageSyncServiceName' is set
      if (storageSyncServiceName === undefined || storageSyncServiceName === null) {
        throw new Error("Missing the required parameter 'storageSyncServiceName' when calling storageSyncServicesCreate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling storageSyncServicesCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'storageSyncServiceName': storageSyncServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StorageSyncService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageSyncServicesDelete operation.
     * @callback module:api/StorageSyncServicesResourceApi~storageSyncServicesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a given StorageSyncService.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} storageSyncServiceName Name of Storage Sync Service resource.
     * @param {module:api/StorageSyncServicesResourceApi~storageSyncServicesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    storageSyncServicesDelete(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling storageSyncServicesDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling storageSyncServicesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling storageSyncServicesDelete");
      }
      // verify the required parameter 'storageSyncServiceName' is set
      if (storageSyncServiceName === undefined || storageSyncServiceName === null) {
        throw new Error("Missing the required parameter 'storageSyncServiceName' when calling storageSyncServicesDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'storageSyncServiceName': storageSyncServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageSyncServicesGet operation.
     * @callback module:api/StorageSyncServicesResourceApi~storageSyncServicesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StorageSyncService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a given StorageSyncService.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} storageSyncServiceName Name of Storage Sync Service resource.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:api/StorageSyncServicesResourceApi~storageSyncServicesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StorageSyncService}
     */
    storageSyncServicesGet(subscriptionId, resourceGroupName, storageSyncServiceName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling storageSyncServicesGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling storageSyncServicesGet");
      }
      // verify the required parameter 'storageSyncServiceName' is set
      if (storageSyncServiceName === undefined || storageSyncServiceName === null) {
        throw new Error("Missing the required parameter 'storageSyncServiceName' when calling storageSyncServicesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling storageSyncServicesGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'storageSyncServiceName': storageSyncServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = StorageSyncService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageSyncServicesListByResourceGroup operation.
     * @callback module:api/StorageSyncServicesResourceApi~storageSyncServicesListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StorageSyncServiceArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a StorageSyncService list by Resource group name.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:api/StorageSyncServicesResourceApi~storageSyncServicesListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StorageSyncServiceArray}
     */
    storageSyncServicesListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling storageSyncServicesListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling storageSyncServicesListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling storageSyncServicesListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = StorageSyncServiceArray;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageSyncServicesListBySubscription operation.
     * @callback module:api/StorageSyncServicesResourceApi~storageSyncServicesListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StorageSyncServiceArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a StorageSyncService list by subscription.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:api/StorageSyncServicesResourceApi~storageSyncServicesListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StorageSyncServiceArray}
     */
    storageSyncServicesListBySubscription(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling storageSyncServicesListBySubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling storageSyncServicesListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = StorageSyncServiceArray;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.StorageSync/storageSyncServices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storageSyncServicesUpdate operation.
     * @callback module:api/StorageSyncServicesResourceApi~storageSyncServicesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StorageSyncService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Patch a given StorageSyncService.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} storageSyncServiceName Name of Storage Sync Service resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/StorageSyncServiceUpdateParameters} [parameters] Storage Sync Service resource.
     * @param {module:api/StorageSyncServicesResourceApi~storageSyncServicesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StorageSyncService}
     */
    storageSyncServicesUpdate(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, opts, callback) {
      opts = opts || {};
      let postBody = opts['parameters'];
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling storageSyncServicesUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling storageSyncServicesUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling storageSyncServicesUpdate");
      }
      // verify the required parameter 'storageSyncServiceName' is set
      if (storageSyncServiceName === undefined || storageSyncServiceName === null) {
        throw new Error("Missing the required parameter 'storageSyncServiceName' when calling storageSyncServicesUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'storageSyncServiceName': storageSyncServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StorageSyncService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
