# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.feature_status import FeatureStatus
from openapi_server import util


class ServerEndpointUpdateProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_tiering: FeatureStatus=None, volume_free_space_percent: int=None):
        """ServerEndpointUpdateProperties - a model defined in OpenAPI

        :param cloud_tiering: The cloud_tiering of this ServerEndpointUpdateProperties.
        :param volume_free_space_percent: The volume_free_space_percent of this ServerEndpointUpdateProperties.
        """
        self.openapi_types = {
            'cloud_tiering': FeatureStatus,
            'volume_free_space_percent': int
        }

        self.attribute_map = {
            'cloud_tiering': 'cloudTiering',
            'volume_free_space_percent': 'volumeFreeSpacePercent'
        }

        self._cloud_tiering = cloud_tiering
        self._volume_free_space_percent = volume_free_space_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerEndpointUpdateProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerEndpointUpdateProperties of this ServerEndpointUpdateProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_tiering(self):
        """Gets the cloud_tiering of this ServerEndpointUpdateProperties.


        :return: The cloud_tiering of this ServerEndpointUpdateProperties.
        :rtype: FeatureStatus
        """
        return self._cloud_tiering

    @cloud_tiering.setter
    def cloud_tiering(self, cloud_tiering):
        """Sets the cloud_tiering of this ServerEndpointUpdateProperties.


        :param cloud_tiering: The cloud_tiering of this ServerEndpointUpdateProperties.
        :type cloud_tiering: FeatureStatus
        """

        self._cloud_tiering = cloud_tiering

    @property
    def volume_free_space_percent(self):
        """Gets the volume_free_space_percent of this ServerEndpointUpdateProperties.

        Level of free space to be maintained by Cloud Tiering if it is enabled.

        :return: The volume_free_space_percent of this ServerEndpointUpdateProperties.
        :rtype: int
        """
        return self._volume_free_space_percent

    @volume_free_space_percent.setter
    def volume_free_space_percent(self, volume_free_space_percent):
        """Sets the volume_free_space_percent of this ServerEndpointUpdateProperties.

        Level of free space to be maintained by Cloud Tiering if it is enabled.

        :param volume_free_space_percent: The volume_free_space_percent of this ServerEndpointUpdateProperties.
        :type volume_free_space_percent: int
        """
        if volume_free_space_percent is not None and volume_free_space_percent > 100:
            raise ValueError("Invalid value for `volume_free_space_percent`, must be a value less than or equal to `100`")
        if volume_free_space_percent is not None and volume_free_space_percent < 0:
            raise ValueError("Invalid value for `volume_free_space_percent`, must be a value greater than or equal to `0`")

        self._volume_free_space_percent = volume_free_space_percent
