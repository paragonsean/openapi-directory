/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2018-04-02
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRestoreFileSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRestoreFileSpec::OAIRestoreFileSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRestoreFileSpec::OAIRestoreFileSpec() {
    this->initializeModel();
}

OAIRestoreFileSpec::~OAIRestoreFileSpec() {}

void OAIRestoreFileSpec::initializeModel() {

    m_isdir_isSet = false;
    m_isdir_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;
}

void OAIRestoreFileSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRestoreFileSpec::fromJsonObject(QJsonObject json) {

    m_isdir_isValid = ::OpenAPI::fromJsonValue(m_isdir, json[QString("isdir")]);
    m_isdir_isSet = !json[QString("isdir")].isNull() && m_isdir_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;
}

QString OAIRestoreFileSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRestoreFileSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_isdir_isSet) {
        obj.insert(QString("isdir"), ::OpenAPI::toJsonValue(m_isdir));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    return obj;
}

bool OAIRestoreFileSpec::isIsdir() const {
    return m_isdir;
}
void OAIRestoreFileSpec::setIsdir(const bool &isdir) {
    m_isdir = isdir;
    m_isdir_isSet = true;
}

bool OAIRestoreFileSpec::is_isdir_Set() const{
    return m_isdir_isSet;
}

bool OAIRestoreFileSpec::is_isdir_Valid() const{
    return m_isdir_isValid;
}

QString OAIRestoreFileSpec::getPath() const {
    return m_path;
}
void OAIRestoreFileSpec::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIRestoreFileSpec::is_path_Set() const{
    return m_path_isSet;
}

bool OAIRestoreFileSpec::is_path_Valid() const{
    return m_path_isValid;
}

bool OAIRestoreFileSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_isdir_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRestoreFileSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
