/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2018-04-02
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegisteredServerCreateParametersProperties.h
 *
 * RegisteredServer Properties object.
 */

#ifndef OAIRegisteredServerCreateParametersProperties_H
#define OAIRegisteredServerCreateParametersProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRegisteredServerCreateParametersProperties : public OAIObject {
public:
    OAIRegisteredServerCreateParametersProperties();
    OAIRegisteredServerCreateParametersProperties(QString json);
    ~OAIRegisteredServerCreateParametersProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAgentVersion() const;
    void setAgentVersion(const QString &agent_version);
    bool is_agent_version_Set() const;
    bool is_agent_version_Valid() const;

    QString getClusterId() const;
    void setClusterId(const QString &cluster_id);
    bool is_cluster_id_Set() const;
    bool is_cluster_id_Valid() const;

    QString getClusterName() const;
    void setClusterName(const QString &cluster_name);
    bool is_cluster_name_Set() const;
    bool is_cluster_name_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QString getLastHeartBeat() const;
    void setLastHeartBeat(const QString &last_heart_beat);
    bool is_last_heart_beat_Set() const;
    bool is_last_heart_beat_Valid() const;

    QString getServerCertificate() const;
    void setServerCertificate(const QString &server_certificate);
    bool is_server_certificate_Set() const;
    bool is_server_certificate_Valid() const;

    QString getServerId() const;
    void setServerId(const QString &server_id);
    bool is_server_id_Set() const;
    bool is_server_id_Valid() const;

    QString getServerOsVersion() const;
    void setServerOsVersion(const QString &server_os_version);
    bool is_server_os_version_Set() const;
    bool is_server_os_version_Valid() const;

    QString getServerRole() const;
    void setServerRole(const QString &server_role);
    bool is_server_role_Set() const;
    bool is_server_role_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_agent_version;
    bool m_agent_version_isSet;
    bool m_agent_version_isValid;

    QString m_cluster_id;
    bool m_cluster_id_isSet;
    bool m_cluster_id_isValid;

    QString m_cluster_name;
    bool m_cluster_name_isSet;
    bool m_cluster_name_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QString m_last_heart_beat;
    bool m_last_heart_beat_isSet;
    bool m_last_heart_beat_isValid;

    QString m_server_certificate;
    bool m_server_certificate_isSet;
    bool m_server_certificate_isValid;

    QString m_server_id;
    bool m_server_id_isSet;
    bool m_server_id_isValid;

    QString m_server_os_version;
    bool m_server_os_version_isSet;
    bool m_server_os_version_isValid;

    QString m_server_role;
    bool m_server_role_isSet;
    bool m_server_role_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegisteredServerCreateParametersProperties)

#endif // OAIRegisteredServerCreateParametersProperties_H
