/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2018-04-02
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecallActionParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecallActionParameters::OAIRecallActionParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecallActionParameters::OAIRecallActionParameters() {
    this->initializeModel();
}

OAIRecallActionParameters::~OAIRecallActionParameters() {}

void OAIRecallActionParameters::initializeModel() {

    m_pattern_isSet = false;
    m_pattern_isValid = false;

    m_recall_path_isSet = false;
    m_recall_path_isValid = false;
}

void OAIRecallActionParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecallActionParameters::fromJsonObject(QJsonObject json) {

    m_pattern_isValid = ::OpenAPI::fromJsonValue(m_pattern, json[QString("pattern")]);
    m_pattern_isSet = !json[QString("pattern")].isNull() && m_pattern_isValid;

    m_recall_path_isValid = ::OpenAPI::fromJsonValue(m_recall_path, json[QString("recallPath")]);
    m_recall_path_isSet = !json[QString("recallPath")].isNull() && m_recall_path_isValid;
}

QString OAIRecallActionParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecallActionParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_pattern_isSet) {
        obj.insert(QString("pattern"), ::OpenAPI::toJsonValue(m_pattern));
    }
    if (m_recall_path_isSet) {
        obj.insert(QString("recallPath"), ::OpenAPI::toJsonValue(m_recall_path));
    }
    return obj;
}

QString OAIRecallActionParameters::getPattern() const {
    return m_pattern;
}
void OAIRecallActionParameters::setPattern(const QString &pattern) {
    m_pattern = pattern;
    m_pattern_isSet = true;
}

bool OAIRecallActionParameters::is_pattern_Set() const{
    return m_pattern_isSet;
}

bool OAIRecallActionParameters::is_pattern_Valid() const{
    return m_pattern_isValid;
}

QString OAIRecallActionParameters::getRecallPath() const {
    return m_recall_path;
}
void OAIRecallActionParameters::setRecallPath(const QString &recall_path) {
    m_recall_path = recall_path;
    m_recall_path_isSet = true;
}

bool OAIRecallActionParameters::is_recall_path_Set() const{
    return m_recall_path_isSet;
}

bool OAIRecallActionParameters::is_recall_path_Valid() const{
    return m_recall_path_isValid;
}

bool OAIRecallActionParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recall_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecallActionParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
