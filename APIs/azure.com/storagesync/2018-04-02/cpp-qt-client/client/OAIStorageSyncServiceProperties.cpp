/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2018-04-02
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStorageSyncServiceProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStorageSyncServiceProperties::OAIStorageSyncServiceProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStorageSyncServiceProperties::OAIStorageSyncServiceProperties() {
    this->initializeModel();
}

OAIStorageSyncServiceProperties::~OAIStorageSyncServiceProperties() {}

void OAIStorageSyncServiceProperties::initializeModel() {

    m_storage_sync_service_status_isSet = false;
    m_storage_sync_service_status_isValid = false;

    m_storage_sync_service_uid_isSet = false;
    m_storage_sync_service_uid_isValid = false;
}

void OAIStorageSyncServiceProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStorageSyncServiceProperties::fromJsonObject(QJsonObject json) {

    m_storage_sync_service_status_isValid = ::OpenAPI::fromJsonValue(m_storage_sync_service_status, json[QString("storageSyncServiceStatus")]);
    m_storage_sync_service_status_isSet = !json[QString("storageSyncServiceStatus")].isNull() && m_storage_sync_service_status_isValid;

    m_storage_sync_service_uid_isValid = ::OpenAPI::fromJsonValue(m_storage_sync_service_uid, json[QString("storageSyncServiceUid")]);
    m_storage_sync_service_uid_isSet = !json[QString("storageSyncServiceUid")].isNull() && m_storage_sync_service_uid_isValid;
}

QString OAIStorageSyncServiceProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStorageSyncServiceProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_storage_sync_service_status_isSet) {
        obj.insert(QString("storageSyncServiceStatus"), ::OpenAPI::toJsonValue(m_storage_sync_service_status));
    }
    if (m_storage_sync_service_uid_isSet) {
        obj.insert(QString("storageSyncServiceUid"), ::OpenAPI::toJsonValue(m_storage_sync_service_uid));
    }
    return obj;
}

qint32 OAIStorageSyncServiceProperties::getStorageSyncServiceStatus() const {
    return m_storage_sync_service_status;
}
void OAIStorageSyncServiceProperties::setStorageSyncServiceStatus(const qint32 &storage_sync_service_status) {
    m_storage_sync_service_status = storage_sync_service_status;
    m_storage_sync_service_status_isSet = true;
}

bool OAIStorageSyncServiceProperties::is_storage_sync_service_status_Set() const{
    return m_storage_sync_service_status_isSet;
}

bool OAIStorageSyncServiceProperties::is_storage_sync_service_status_Valid() const{
    return m_storage_sync_service_status_isValid;
}

QString OAIStorageSyncServiceProperties::getStorageSyncServiceUid() const {
    return m_storage_sync_service_uid;
}
void OAIStorageSyncServiceProperties::setStorageSyncServiceUid(const QString &storage_sync_service_uid) {
    m_storage_sync_service_uid = storage_sync_service_uid;
    m_storage_sync_service_uid_isSet = true;
}

bool OAIStorageSyncServiceProperties::is_storage_sync_service_uid_Set() const{
    return m_storage_sync_service_uid_isSet;
}

bool OAIStorageSyncServiceProperties::is_storage_sync_service_uid_Valid() const{
    return m_storage_sync_service_uid_isValid;
}

bool OAIStorageSyncServiceProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_storage_sync_service_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_sync_service_uid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStorageSyncServiceProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
