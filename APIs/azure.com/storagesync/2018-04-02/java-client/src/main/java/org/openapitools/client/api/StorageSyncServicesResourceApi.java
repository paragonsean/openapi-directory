/*
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2018-04-02
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.StorageSyncError;
import org.openapitools.client.model.StorageSyncService;
import org.openapitools.client.model.StorageSyncServiceArray;
import org.openapitools.client.model.StorageSyncServiceCreateParameters;
import org.openapitools.client.model.StorageSyncServiceUpdateParameters;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class StorageSyncServicesResourceApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public StorageSyncServicesResourceApi() {
        this(Configuration.getDefaultApiClient());
    }

    public StorageSyncServicesResourceApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for storageSyncServicesCreate
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param parameters Storage Sync Service resource name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object created/updated </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageSyncServicesCreateCall(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, StorageSyncServiceCreateParameters parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "storageSyncServiceName" + "}", localVarApiClient.escapeString(storageSyncServiceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageSyncServicesCreateValidateBeforeCall(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, StorageSyncServiceCreateParameters parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling storageSyncServicesCreate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling storageSyncServicesCreate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling storageSyncServicesCreate(Async)");
        }

        // verify the required parameter 'storageSyncServiceName' is set
        if (storageSyncServiceName == null) {
            throw new ApiException("Missing the required parameter 'storageSyncServiceName' when calling storageSyncServicesCreate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling storageSyncServicesCreate(Async)");
        }

        return storageSyncServicesCreateCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, parameters, _callback);

    }

    /**
     * 
     * Create a new StorageSyncService.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param parameters Storage Sync Service resource name. (required)
     * @return StorageSyncService
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object created/updated </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public StorageSyncService storageSyncServicesCreate(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, StorageSyncServiceCreateParameters parameters) throws ApiException {
        ApiResponse<StorageSyncService> localVarResp = storageSyncServicesCreateWithHttpInfo(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Create a new StorageSyncService.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param parameters Storage Sync Service resource name. (required)
     * @return ApiResponse&lt;StorageSyncService&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object created/updated </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StorageSyncService> storageSyncServicesCreateWithHttpInfo(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, StorageSyncServiceCreateParameters parameters) throws ApiException {
        okhttp3.Call localVarCall = storageSyncServicesCreateValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, parameters, null);
        Type localVarReturnType = new TypeToken<StorageSyncService>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create a new StorageSyncService.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param parameters Storage Sync Service resource name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object created/updated </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageSyncServicesCreateAsync(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, StorageSyncServiceCreateParameters parameters, final ApiCallback<StorageSyncService> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageSyncServicesCreateValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, parameters, _callback);
        Type localVarReturnType = new TypeToken<StorageSyncService>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageSyncServicesDelete
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object was deleted. </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 204 </td><td> Storage Sync Service Resource doesn&#39;t exist </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageSyncServicesDeleteCall(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "storageSyncServiceName" + "}", localVarApiClient.escapeString(storageSyncServiceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageSyncServicesDeleteValidateBeforeCall(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling storageSyncServicesDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling storageSyncServicesDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling storageSyncServicesDelete(Async)");
        }

        // verify the required parameter 'storageSyncServiceName' is set
        if (storageSyncServiceName == null) {
            throw new ApiException("Missing the required parameter 'storageSyncServiceName' when calling storageSyncServicesDelete(Async)");
        }

        return storageSyncServicesDeleteCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, _callback);

    }

    /**
     * 
     * Delete a given StorageSyncService.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object was deleted. </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 204 </td><td> Storage Sync Service Resource doesn&#39;t exist </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void storageSyncServicesDelete(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName) throws ApiException {
        storageSyncServicesDeleteWithHttpInfo(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName);
    }

    /**
     * 
     * Delete a given StorageSyncService.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object was deleted. </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 204 </td><td> Storage Sync Service Resource doesn&#39;t exist </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> storageSyncServicesDeleteWithHttpInfo(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName) throws ApiException {
        okhttp3.Call localVarCall = storageSyncServicesDeleteValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Delete a given StorageSyncService.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object was deleted. </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 204 </td><td> Storage Sync Service Resource doesn&#39;t exist </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageSyncServicesDeleteAsync(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageSyncServicesDeleteValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageSyncServicesGet
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageSyncServicesGetCall(String subscriptionId, String resourceGroupName, String storageSyncServiceName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "storageSyncServiceName" + "}", localVarApiClient.escapeString(storageSyncServiceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageSyncServicesGetValidateBeforeCall(String subscriptionId, String resourceGroupName, String storageSyncServiceName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling storageSyncServicesGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling storageSyncServicesGet(Async)");
        }

        // verify the required parameter 'storageSyncServiceName' is set
        if (storageSyncServiceName == null) {
            throw new ApiException("Missing the required parameter 'storageSyncServiceName' when calling storageSyncServicesGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling storageSyncServicesGet(Async)");
        }

        return storageSyncServicesGetCall(subscriptionId, resourceGroupName, storageSyncServiceName, apiVersion, _callback);

    }

    /**
     * 
     * Get a given StorageSyncService.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @return StorageSyncService
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public StorageSyncService storageSyncServicesGet(String subscriptionId, String resourceGroupName, String storageSyncServiceName, String apiVersion) throws ApiException {
        ApiResponse<StorageSyncService> localVarResp = storageSyncServicesGetWithHttpInfo(subscriptionId, resourceGroupName, storageSyncServiceName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Get a given StorageSyncService.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @return ApiResponse&lt;StorageSyncService&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StorageSyncService> storageSyncServicesGetWithHttpInfo(String subscriptionId, String resourceGroupName, String storageSyncServiceName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = storageSyncServicesGetValidateBeforeCall(subscriptionId, resourceGroupName, storageSyncServiceName, apiVersion, null);
        Type localVarReturnType = new TypeToken<StorageSyncService>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get a given StorageSyncService.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageSyncServicesGetAsync(String subscriptionId, String resourceGroupName, String storageSyncServiceName, String apiVersion, final ApiCallback<StorageSyncService> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageSyncServicesGetValidateBeforeCall(subscriptionId, resourceGroupName, storageSyncServiceName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<StorageSyncService>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageSyncServicesListByResourceGroup
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of registered Storage Sync Service resources in the Resource Group </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageSyncServicesListByResourceGroupCall(String subscriptionId, String resourceGroupName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageSyncServicesListByResourceGroupValidateBeforeCall(String subscriptionId, String resourceGroupName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling storageSyncServicesListByResourceGroup(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling storageSyncServicesListByResourceGroup(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling storageSyncServicesListByResourceGroup(Async)");
        }

        return storageSyncServicesListByResourceGroupCall(subscriptionId, resourceGroupName, apiVersion, _callback);

    }

    /**
     * 
     * Get a StorageSyncService list by Resource group name.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @return StorageSyncServiceArray
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of registered Storage Sync Service resources in the Resource Group </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public StorageSyncServiceArray storageSyncServicesListByResourceGroup(String subscriptionId, String resourceGroupName, String apiVersion) throws ApiException {
        ApiResponse<StorageSyncServiceArray> localVarResp = storageSyncServicesListByResourceGroupWithHttpInfo(subscriptionId, resourceGroupName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Get a StorageSyncService list by Resource group name.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @return ApiResponse&lt;StorageSyncServiceArray&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of registered Storage Sync Service resources in the Resource Group </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StorageSyncServiceArray> storageSyncServicesListByResourceGroupWithHttpInfo(String subscriptionId, String resourceGroupName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = storageSyncServicesListByResourceGroupValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, null);
        Type localVarReturnType = new TypeToken<StorageSyncServiceArray>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get a StorageSyncService list by Resource group name.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of registered Storage Sync Service resources in the Resource Group </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageSyncServicesListByResourceGroupAsync(String subscriptionId, String resourceGroupName, String apiVersion, final ApiCallback<StorageSyncServiceArray> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageSyncServicesListByResourceGroupValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<StorageSyncServiceArray>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageSyncServicesListBySubscription
     * @param subscriptionId The ID of the target subscription. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of registered Storage Sync Service resources in the subscription. </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageSyncServicesListBySubscriptionCall(String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.StorageSync/storageSyncServices"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageSyncServicesListBySubscriptionValidateBeforeCall(String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling storageSyncServicesListBySubscription(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling storageSyncServicesListBySubscription(Async)");
        }

        return storageSyncServicesListBySubscriptionCall(subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Get a StorageSyncService list by subscription.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @return StorageSyncServiceArray
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of registered Storage Sync Service resources in the subscription. </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public StorageSyncServiceArray storageSyncServicesListBySubscription(String subscriptionId, String apiVersion) throws ApiException {
        ApiResponse<StorageSyncServiceArray> localVarResp = storageSyncServicesListBySubscriptionWithHttpInfo(subscriptionId, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Get a StorageSyncService list by subscription.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @return ApiResponse&lt;StorageSyncServiceArray&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of registered Storage Sync Service resources in the subscription. </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StorageSyncServiceArray> storageSyncServicesListBySubscriptionWithHttpInfo(String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = storageSyncServicesListBySubscriptionValidateBeforeCall(subscriptionId, apiVersion, null);
        Type localVarReturnType = new TypeToken<StorageSyncServiceArray>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get a StorageSyncService list by subscription.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of registered Storage Sync Service resources in the subscription. </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageSyncServicesListBySubscriptionAsync(String subscriptionId, String apiVersion, final ApiCallback<StorageSyncServiceArray> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageSyncServicesListBySubscriptionValidateBeforeCall(subscriptionId, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<StorageSyncServiceArray>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for storageSyncServicesUpdate
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param parameters Storage Sync Service resource. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object created/updated </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageSyncServicesUpdateCall(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, StorageSyncServiceUpdateParameters parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "storageSyncServiceName" + "}", localVarApiClient.escapeString(storageSyncServiceName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call storageSyncServicesUpdateValidateBeforeCall(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, StorageSyncServiceUpdateParameters parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling storageSyncServicesUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling storageSyncServicesUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling storageSyncServicesUpdate(Async)");
        }

        // verify the required parameter 'storageSyncServiceName' is set
        if (storageSyncServiceName == null) {
            throw new ApiException("Missing the required parameter 'storageSyncServiceName' when calling storageSyncServicesUpdate(Async)");
        }

        return storageSyncServicesUpdateCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, parameters, _callback);

    }

    /**
     * 
     * Patch a given StorageSyncService.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param parameters Storage Sync Service resource. (optional)
     * @return StorageSyncService
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object created/updated </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public StorageSyncService storageSyncServicesUpdate(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, StorageSyncServiceUpdateParameters parameters) throws ApiException {
        ApiResponse<StorageSyncService> localVarResp = storageSyncServicesUpdateWithHttpInfo(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Patch a given StorageSyncService.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param parameters Storage Sync Service resource. (optional)
     * @return ApiResponse&lt;StorageSyncService&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object created/updated </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StorageSyncService> storageSyncServicesUpdateWithHttpInfo(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, StorageSyncServiceUpdateParameters parameters) throws ApiException {
        okhttp3.Call localVarCall = storageSyncServicesUpdateValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, parameters, null);
        Type localVarReturnType = new TypeToken<StorageSyncService>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Patch a given StorageSyncService.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param parameters Storage Sync Service resource. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Storage Sync Service object created/updated </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call storageSyncServicesUpdateAsync(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, StorageSyncServiceUpdateParameters parameters, final ApiCallback<StorageSyncService> _callback) throws ApiException {

        okhttp3.Call localVarCall = storageSyncServicesUpdateValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, parameters, _callback);
        Type localVarReturnType = new TypeToken<StorageSyncService>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
