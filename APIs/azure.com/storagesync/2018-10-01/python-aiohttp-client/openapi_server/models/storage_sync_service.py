# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.storage_sync_service_properties import StorageSyncServiceProperties
from openapi_server import util


class StorageSyncService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, properties: StorageSyncServiceProperties=None, location: str=None, tags: Dict[str, str]=None, id: str=None, name: str=None, type: str=None):
        """StorageSyncService - a model defined in OpenAPI

        :param properties: The properties of this StorageSyncService.
        :param location: The location of this StorageSyncService.
        :param tags: The tags of this StorageSyncService.
        :param id: The id of this StorageSyncService.
        :param name: The name of this StorageSyncService.
        :param type: The type of this StorageSyncService.
        """
        self.openapi_types = {
            'properties': StorageSyncServiceProperties,
            'location': str,
            'tags': Dict[str, str],
            'id': str,
            'name': str,
            'type': str
        }

        self.attribute_map = {
            'properties': 'properties',
            'location': 'location',
            'tags': 'tags',
            'id': 'id',
            'name': 'name',
            'type': 'type'
        }

        self._properties = properties
        self._location = location
        self._tags = tags
        self._id = id
        self._name = name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageSyncService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorageSyncService of this StorageSyncService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def properties(self):
        """Gets the properties of this StorageSyncService.


        :return: The properties of this StorageSyncService.
        :rtype: StorageSyncServiceProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this StorageSyncService.


        :param properties: The properties of this StorageSyncService.
        :type properties: StorageSyncServiceProperties
        """

        self._properties = properties

    @property
    def location(self):
        """Gets the location of this StorageSyncService.

        The geo-location where the resource lives

        :return: The location of this StorageSyncService.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this StorageSyncService.

        The geo-location where the resource lives

        :param location: The location of this StorageSyncService.
        :type location: str
        """
        if location is None:
            raise ValueError("Invalid value for `location`, must not be `None`")

        self._location = location

    @property
    def tags(self):
        """Gets the tags of this StorageSyncService.

        Resource tags.

        :return: The tags of this StorageSyncService.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this StorageSyncService.

        Resource tags.

        :param tags: The tags of this StorageSyncService.
        :type tags: Dict[str, str]
        """

        self._tags = tags

    @property
    def id(self):
        """Gets the id of this StorageSyncService.

        Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}

        :return: The id of this StorageSyncService.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StorageSyncService.

        Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}

        :param id: The id of this StorageSyncService.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this StorageSyncService.

        The name of the resource

        :return: The name of this StorageSyncService.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StorageSyncService.

        The name of the resource

        :param name: The name of this StorageSyncService.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this StorageSyncService.

        The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.

        :return: The type of this StorageSyncService.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this StorageSyncService.

        The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.

        :param type: The type of this StorageSyncService.
        :type type: str
        """

        self._type = type
