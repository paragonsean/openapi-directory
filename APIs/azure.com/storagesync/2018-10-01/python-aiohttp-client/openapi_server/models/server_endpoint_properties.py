# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.feature_status import FeatureStatus
from openapi_server.models.server_endpoint_health import ServerEndpointHealth
from openapi_server import util


class ServerEndpointProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_tiering: FeatureStatus=None, friendly_name: str=None, last_operation_name: str=None, last_workflow_id: str=None, offline_data_transfer: FeatureStatus=None, offline_data_transfer_share_name: str=None, offline_data_transfer_storage_account_resource_id: str=None, offline_data_transfer_storage_account_tenant_id: str=None, provisioning_state: str=None, server_local_path: str=None, server_resource_id: str=None, sync_status: ServerEndpointHealth=None, tier_files_older_than_days: int=None, volume_free_space_percent: int=None):
        """ServerEndpointProperties - a model defined in OpenAPI

        :param cloud_tiering: The cloud_tiering of this ServerEndpointProperties.
        :param friendly_name: The friendly_name of this ServerEndpointProperties.
        :param last_operation_name: The last_operation_name of this ServerEndpointProperties.
        :param last_workflow_id: The last_workflow_id of this ServerEndpointProperties.
        :param offline_data_transfer: The offline_data_transfer of this ServerEndpointProperties.
        :param offline_data_transfer_share_name: The offline_data_transfer_share_name of this ServerEndpointProperties.
        :param offline_data_transfer_storage_account_resource_id: The offline_data_transfer_storage_account_resource_id of this ServerEndpointProperties.
        :param offline_data_transfer_storage_account_tenant_id: The offline_data_transfer_storage_account_tenant_id of this ServerEndpointProperties.
        :param provisioning_state: The provisioning_state of this ServerEndpointProperties.
        :param server_local_path: The server_local_path of this ServerEndpointProperties.
        :param server_resource_id: The server_resource_id of this ServerEndpointProperties.
        :param sync_status: The sync_status of this ServerEndpointProperties.
        :param tier_files_older_than_days: The tier_files_older_than_days of this ServerEndpointProperties.
        :param volume_free_space_percent: The volume_free_space_percent of this ServerEndpointProperties.
        """
        self.openapi_types = {
            'cloud_tiering': FeatureStatus,
            'friendly_name': str,
            'last_operation_name': str,
            'last_workflow_id': str,
            'offline_data_transfer': FeatureStatus,
            'offline_data_transfer_share_name': str,
            'offline_data_transfer_storage_account_resource_id': str,
            'offline_data_transfer_storage_account_tenant_id': str,
            'provisioning_state': str,
            'server_local_path': str,
            'server_resource_id': str,
            'sync_status': ServerEndpointHealth,
            'tier_files_older_than_days': int,
            'volume_free_space_percent': int
        }

        self.attribute_map = {
            'cloud_tiering': 'cloudTiering',
            'friendly_name': 'friendlyName',
            'last_operation_name': 'lastOperationName',
            'last_workflow_id': 'lastWorkflowId',
            'offline_data_transfer': 'offlineDataTransfer',
            'offline_data_transfer_share_name': 'offlineDataTransferShareName',
            'offline_data_transfer_storage_account_resource_id': 'offlineDataTransferStorageAccountResourceId',
            'offline_data_transfer_storage_account_tenant_id': 'offlineDataTransferStorageAccountTenantId',
            'provisioning_state': 'provisioningState',
            'server_local_path': 'serverLocalPath',
            'server_resource_id': 'serverResourceId',
            'sync_status': 'syncStatus',
            'tier_files_older_than_days': 'tierFilesOlderThanDays',
            'volume_free_space_percent': 'volumeFreeSpacePercent'
        }

        self._cloud_tiering = cloud_tiering
        self._friendly_name = friendly_name
        self._last_operation_name = last_operation_name
        self._last_workflow_id = last_workflow_id
        self._offline_data_transfer = offline_data_transfer
        self._offline_data_transfer_share_name = offline_data_transfer_share_name
        self._offline_data_transfer_storage_account_resource_id = offline_data_transfer_storage_account_resource_id
        self._offline_data_transfer_storage_account_tenant_id = offline_data_transfer_storage_account_tenant_id
        self._provisioning_state = provisioning_state
        self._server_local_path = server_local_path
        self._server_resource_id = server_resource_id
        self._sync_status = sync_status
        self._tier_files_older_than_days = tier_files_older_than_days
        self._volume_free_space_percent = volume_free_space_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerEndpointProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerEndpointProperties of this ServerEndpointProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_tiering(self):
        """Gets the cloud_tiering of this ServerEndpointProperties.


        :return: The cloud_tiering of this ServerEndpointProperties.
        :rtype: FeatureStatus
        """
        return self._cloud_tiering

    @cloud_tiering.setter
    def cloud_tiering(self, cloud_tiering):
        """Sets the cloud_tiering of this ServerEndpointProperties.


        :param cloud_tiering: The cloud_tiering of this ServerEndpointProperties.
        :type cloud_tiering: FeatureStatus
        """

        self._cloud_tiering = cloud_tiering

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ServerEndpointProperties.

        Friendly Name

        :return: The friendly_name of this ServerEndpointProperties.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ServerEndpointProperties.

        Friendly Name

        :param friendly_name: The friendly_name of this ServerEndpointProperties.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def last_operation_name(self):
        """Gets the last_operation_name of this ServerEndpointProperties.

        Resource Last Operation Name

        :return: The last_operation_name of this ServerEndpointProperties.
        :rtype: str
        """
        return self._last_operation_name

    @last_operation_name.setter
    def last_operation_name(self, last_operation_name):
        """Sets the last_operation_name of this ServerEndpointProperties.

        Resource Last Operation Name

        :param last_operation_name: The last_operation_name of this ServerEndpointProperties.
        :type last_operation_name: str
        """

        self._last_operation_name = last_operation_name

    @property
    def last_workflow_id(self):
        """Gets the last_workflow_id of this ServerEndpointProperties.

        ServerEndpoint lastWorkflowId

        :return: The last_workflow_id of this ServerEndpointProperties.
        :rtype: str
        """
        return self._last_workflow_id

    @last_workflow_id.setter
    def last_workflow_id(self, last_workflow_id):
        """Sets the last_workflow_id of this ServerEndpointProperties.

        ServerEndpoint lastWorkflowId

        :param last_workflow_id: The last_workflow_id of this ServerEndpointProperties.
        :type last_workflow_id: str
        """

        self._last_workflow_id = last_workflow_id

    @property
    def offline_data_transfer(self):
        """Gets the offline_data_transfer of this ServerEndpointProperties.


        :return: The offline_data_transfer of this ServerEndpointProperties.
        :rtype: FeatureStatus
        """
        return self._offline_data_transfer

    @offline_data_transfer.setter
    def offline_data_transfer(self, offline_data_transfer):
        """Sets the offline_data_transfer of this ServerEndpointProperties.


        :param offline_data_transfer: The offline_data_transfer of this ServerEndpointProperties.
        :type offline_data_transfer: FeatureStatus
        """

        self._offline_data_transfer = offline_data_transfer

    @property
    def offline_data_transfer_share_name(self):
        """Gets the offline_data_transfer_share_name of this ServerEndpointProperties.

        Offline data transfer share name

        :return: The offline_data_transfer_share_name of this ServerEndpointProperties.
        :rtype: str
        """
        return self._offline_data_transfer_share_name

    @offline_data_transfer_share_name.setter
    def offline_data_transfer_share_name(self, offline_data_transfer_share_name):
        """Sets the offline_data_transfer_share_name of this ServerEndpointProperties.

        Offline data transfer share name

        :param offline_data_transfer_share_name: The offline_data_transfer_share_name of this ServerEndpointProperties.
        :type offline_data_transfer_share_name: str
        """

        self._offline_data_transfer_share_name = offline_data_transfer_share_name

    @property
    def offline_data_transfer_storage_account_resource_id(self):
        """Gets the offline_data_transfer_storage_account_resource_id of this ServerEndpointProperties.

        Offline data transfer storage account resource ID

        :return: The offline_data_transfer_storage_account_resource_id of this ServerEndpointProperties.
        :rtype: str
        """
        return self._offline_data_transfer_storage_account_resource_id

    @offline_data_transfer_storage_account_resource_id.setter
    def offline_data_transfer_storage_account_resource_id(self, offline_data_transfer_storage_account_resource_id):
        """Sets the offline_data_transfer_storage_account_resource_id of this ServerEndpointProperties.

        Offline data transfer storage account resource ID

        :param offline_data_transfer_storage_account_resource_id: The offline_data_transfer_storage_account_resource_id of this ServerEndpointProperties.
        :type offline_data_transfer_storage_account_resource_id: str
        """

        self._offline_data_transfer_storage_account_resource_id = offline_data_transfer_storage_account_resource_id

    @property
    def offline_data_transfer_storage_account_tenant_id(self):
        """Gets the offline_data_transfer_storage_account_tenant_id of this ServerEndpointProperties.

        Offline data transfer storage account tenant ID

        :return: The offline_data_transfer_storage_account_tenant_id of this ServerEndpointProperties.
        :rtype: str
        """
        return self._offline_data_transfer_storage_account_tenant_id

    @offline_data_transfer_storage_account_tenant_id.setter
    def offline_data_transfer_storage_account_tenant_id(self, offline_data_transfer_storage_account_tenant_id):
        """Sets the offline_data_transfer_storage_account_tenant_id of this ServerEndpointProperties.

        Offline data transfer storage account tenant ID

        :param offline_data_transfer_storage_account_tenant_id: The offline_data_transfer_storage_account_tenant_id of this ServerEndpointProperties.
        :type offline_data_transfer_storage_account_tenant_id: str
        """

        self._offline_data_transfer_storage_account_tenant_id = offline_data_transfer_storage_account_tenant_id

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ServerEndpointProperties.

        ServerEndpoint Provisioning State

        :return: The provisioning_state of this ServerEndpointProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ServerEndpointProperties.

        ServerEndpoint Provisioning State

        :param provisioning_state: The provisioning_state of this ServerEndpointProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def server_local_path(self):
        """Gets the server_local_path of this ServerEndpointProperties.

        Server folder used for data synchronization

        :return: The server_local_path of this ServerEndpointProperties.
        :rtype: str
        """
        return self._server_local_path

    @server_local_path.setter
    def server_local_path(self, server_local_path):
        """Sets the server_local_path of this ServerEndpointProperties.

        Server folder used for data synchronization

        :param server_local_path: The server_local_path of this ServerEndpointProperties.
        :type server_local_path: str
        """

        self._server_local_path = server_local_path

    @property
    def server_resource_id(self):
        """Gets the server_resource_id of this ServerEndpointProperties.

        Arm resource identifier.

        :return: The server_resource_id of this ServerEndpointProperties.
        :rtype: str
        """
        return self._server_resource_id

    @server_resource_id.setter
    def server_resource_id(self, server_resource_id):
        """Sets the server_resource_id of this ServerEndpointProperties.

        Arm resource identifier.

        :param server_resource_id: The server_resource_id of this ServerEndpointProperties.
        :type server_resource_id: str
        """

        self._server_resource_id = server_resource_id

    @property
    def sync_status(self):
        """Gets the sync_status of this ServerEndpointProperties.


        :return: The sync_status of this ServerEndpointProperties.
        :rtype: ServerEndpointHealth
        """
        return self._sync_status

    @sync_status.setter
    def sync_status(self, sync_status):
        """Sets the sync_status of this ServerEndpointProperties.


        :param sync_status: The sync_status of this ServerEndpointProperties.
        :type sync_status: ServerEndpointHealth
        """

        self._sync_status = sync_status

    @property
    def tier_files_older_than_days(self):
        """Gets the tier_files_older_than_days of this ServerEndpointProperties.

        Tier files older than days.

        :return: The tier_files_older_than_days of this ServerEndpointProperties.
        :rtype: int
        """
        return self._tier_files_older_than_days

    @tier_files_older_than_days.setter
    def tier_files_older_than_days(self, tier_files_older_than_days):
        """Sets the tier_files_older_than_days of this ServerEndpointProperties.

        Tier files older than days.

        :param tier_files_older_than_days: The tier_files_older_than_days of this ServerEndpointProperties.
        :type tier_files_older_than_days: int
        """
        if tier_files_older_than_days is not None and tier_files_older_than_days > 2147483647:
            raise ValueError("Invalid value for `tier_files_older_than_days`, must be a value less than or equal to `2147483647`")
        if tier_files_older_than_days is not None and tier_files_older_than_days < 0:
            raise ValueError("Invalid value for `tier_files_older_than_days`, must be a value greater than or equal to `0`")

        self._tier_files_older_than_days = tier_files_older_than_days

    @property
    def volume_free_space_percent(self):
        """Gets the volume_free_space_percent of this ServerEndpointProperties.

        Level of free space to be maintained by Cloud Tiering if it is enabled.

        :return: The volume_free_space_percent of this ServerEndpointProperties.
        :rtype: int
        """
        return self._volume_free_space_percent

    @volume_free_space_percent.setter
    def volume_free_space_percent(self, volume_free_space_percent):
        """Sets the volume_free_space_percent of this ServerEndpointProperties.

        Level of free space to be maintained by Cloud Tiering if it is enabled.

        :param volume_free_space_percent: The volume_free_space_percent of this ServerEndpointProperties.
        :type volume_free_space_percent: int
        """
        if volume_free_space_percent is not None and volume_free_space_percent > 100:
            raise ValueError("Invalid value for `volume_free_space_percent`, must be a value less than or equal to `100`")
        if volume_free_space_percent is not None and volume_free_space_percent < 0:
            raise ValueError("Invalid value for `volume_free_space_percent`, must be a value greater than or equal to `0`")

        self._volume_free_space_percent = volume_free_space_percent
