/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthState from './HealthState';
import OfflineDataTransferState from './OfflineDataTransferState';
import SyncProgressStatus from './SyncProgressStatus';
import SyncSessionStatus from './SyncSessionStatus';

/**
 * The ServerEndpointHealth model module.
 * @module model/ServerEndpointHealth
 * @version 2018-10-01
 */
class ServerEndpointHealth {
    /**
     * Constructs a new <code>ServerEndpointHealth</code>.
     * ServerEndpoint Health object.
     * @alias module:model/ServerEndpointHealth
     */
    constructor() { 
        
        ServerEndpointHealth.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServerEndpointHealth</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerEndpointHealth} obj Optional instance to populate.
     * @return {module:model/ServerEndpointHealth} The populated <code>ServerEndpointHealth</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerEndpointHealth();

            if (data.hasOwnProperty('combinedHealth')) {
                obj['combinedHealth'] = HealthState.constructFromObject(data['combinedHealth']);
            }
            if (data.hasOwnProperty('currentProgress')) {
                obj['currentProgress'] = SyncProgressStatus.constructFromObject(data['currentProgress']);
            }
            if (data.hasOwnProperty('downloadHealth')) {
                obj['downloadHealth'] = HealthState.constructFromObject(data['downloadHealth']);
            }
            if (data.hasOwnProperty('downloadStatus')) {
                obj['downloadStatus'] = SyncSessionStatus.constructFromObject(data['downloadStatus']);
            }
            if (data.hasOwnProperty('lastUpdatedTimestamp')) {
                obj['lastUpdatedTimestamp'] = ApiClient.convertToType(data['lastUpdatedTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('offlineDataTransferStatus')) {
                obj['offlineDataTransferStatus'] = OfflineDataTransferState.constructFromObject(data['offlineDataTransferStatus']);
            }
            if (data.hasOwnProperty('uploadHealth')) {
                obj['uploadHealth'] = HealthState.constructFromObject(data['uploadHealth']);
            }
            if (data.hasOwnProperty('uploadStatus')) {
                obj['uploadStatus'] = SyncSessionStatus.constructFromObject(data['uploadStatus']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServerEndpointHealth</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServerEndpointHealth</code>.
     */
    static validateJSON(data) {
        // validate the optional field `currentProgress`
        if (data['currentProgress']) { // data not null
          SyncProgressStatus.validateJSON(data['currentProgress']);
        }
        // validate the optional field `downloadStatus`
        if (data['downloadStatus']) { // data not null
          SyncSessionStatus.validateJSON(data['downloadStatus']);
        }
        // validate the optional field `uploadStatus`
        if (data['uploadStatus']) { // data not null
          SyncSessionStatus.validateJSON(data['uploadStatus']);
        }

        return true;
    }


}



/**
 * @member {module:model/HealthState} combinedHealth
 */
ServerEndpointHealth.prototype['combinedHealth'] = undefined;

/**
 * @member {module:model/SyncProgressStatus} currentProgress
 */
ServerEndpointHealth.prototype['currentProgress'] = undefined;

/**
 * @member {module:model/HealthState} downloadHealth
 */
ServerEndpointHealth.prototype['downloadHealth'] = undefined;

/**
 * @member {module:model/SyncSessionStatus} downloadStatus
 */
ServerEndpointHealth.prototype['downloadStatus'] = undefined;

/**
 * Last Updated Timestamp
 * @member {Date} lastUpdatedTimestamp
 */
ServerEndpointHealth.prototype['lastUpdatedTimestamp'] = undefined;

/**
 * @member {module:model/OfflineDataTransferState} offlineDataTransferStatus
 */
ServerEndpointHealth.prototype['offlineDataTransferStatus'] = undefined;

/**
 * @member {module:model/HealthState} uploadHealth
 */
ServerEndpointHealth.prototype['uploadHealth'] = undefined;

/**
 * @member {module:model/SyncSessionStatus} uploadStatus
 */
ServerEndpointHealth.prototype['uploadStatus'] = undefined;






export default ServerEndpointHealth;

