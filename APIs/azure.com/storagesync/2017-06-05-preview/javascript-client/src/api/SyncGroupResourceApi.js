/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2017-06-05-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import StorageSyncError from '../model/StorageSyncError';
import SyncGroup from '../model/SyncGroup';
import SyncGroupArray from '../model/SyncGroupArray';

/**
* SyncGroupResource service.
* @module api/SyncGroupResourceApi
* @version 2017-06-05-preview
*/
export default class SyncGroupResourceApi {

    /**
    * Constructs a new SyncGroupResourceApi. 
    * @alias module:api/SyncGroupResourceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the syncGroupsCreate operation.
     * @callback module:api/SyncGroupResourceApi~syncGroupsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SyncGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new SyncGroup.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} apiVersion Client Api Version.
     * @param {String} storageSyncServiceName Name of Storage Sync Service resource.
     * @param {String} syncGroupName Name of Sync Group resource.
     * @param {module:model/SyncGroup} parameters Sync Group Body
     * @param {module:api/SyncGroupResourceApi~syncGroupsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SyncGroup}
     */
    syncGroupsCreate(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling syncGroupsCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling syncGroupsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling syncGroupsCreate");
      }
      // verify the required parameter 'storageSyncServiceName' is set
      if (storageSyncServiceName === undefined || storageSyncServiceName === null) {
        throw new Error("Missing the required parameter 'storageSyncServiceName' when calling syncGroupsCreate");
      }
      // verify the required parameter 'syncGroupName' is set
      if (syncGroupName === undefined || syncGroupName === null) {
        throw new Error("Missing the required parameter 'syncGroupName' when calling syncGroupsCreate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling syncGroupsCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'storageSyncServiceName': storageSyncServiceName,
        'syncGroupName': syncGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SyncGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the syncGroupsDelete operation.
     * @callback module:api/SyncGroupResourceApi~syncGroupsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a given SyncGroup.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} apiVersion Client Api Version.
     * @param {String} storageSyncServiceName Name of Storage Sync Service resource.
     * @param {String} syncGroupName Name of Sync Group resource.
     * @param {module:api/SyncGroupResourceApi~syncGroupsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    syncGroupsDelete(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling syncGroupsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling syncGroupsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling syncGroupsDelete");
      }
      // verify the required parameter 'storageSyncServiceName' is set
      if (storageSyncServiceName === undefined || storageSyncServiceName === null) {
        throw new Error("Missing the required parameter 'storageSyncServiceName' when calling syncGroupsDelete");
      }
      // verify the required parameter 'syncGroupName' is set
      if (syncGroupName === undefined || syncGroupName === null) {
        throw new Error("Missing the required parameter 'syncGroupName' when calling syncGroupsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'storageSyncServiceName': storageSyncServiceName,
        'syncGroupName': syncGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the syncGroupsGet operation.
     * @callback module:api/SyncGroupResourceApi~syncGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SyncGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a given SyncGroup.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} apiVersion Client Api Version.
     * @param {String} storageSyncServiceName Name of Storage Sync Service resource.
     * @param {String} syncGroupName Name of Sync Group resource.
     * @param {module:api/SyncGroupResourceApi~syncGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SyncGroup}
     */
    syncGroupsGet(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling syncGroupsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling syncGroupsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling syncGroupsGet");
      }
      // verify the required parameter 'storageSyncServiceName' is set
      if (storageSyncServiceName === undefined || storageSyncServiceName === null) {
        throw new Error("Missing the required parameter 'storageSyncServiceName' when calling syncGroupsGet");
      }
      // verify the required parameter 'syncGroupName' is set
      if (syncGroupName === undefined || syncGroupName === null) {
        throw new Error("Missing the required parameter 'syncGroupName' when calling syncGroupsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'storageSyncServiceName': storageSyncServiceName,
        'syncGroupName': syncGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SyncGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the syncGroupsListByStorageSyncService operation.
     * @callback module:api/SyncGroupResourceApi~syncGroupsListByStorageSyncServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SyncGroupArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a SyncGroup List.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} apiVersion Client Api Version.
     * @param {String} storageSyncServiceName Name of Storage Sync Service resource.
     * @param {module:api/SyncGroupResourceApi~syncGroupsListByStorageSyncServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SyncGroupArray}
     */
    syncGroupsListByStorageSyncService(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling syncGroupsListByStorageSyncService");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling syncGroupsListByStorageSyncService");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling syncGroupsListByStorageSyncService");
      }
      // verify the required parameter 'storageSyncServiceName' is set
      if (storageSyncServiceName === undefined || storageSyncServiceName === null) {
        throw new Error("Missing the required parameter 'storageSyncServiceName' when calling syncGroupsListByStorageSyncService");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'storageSyncServiceName': storageSyncServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SyncGroupArray;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
