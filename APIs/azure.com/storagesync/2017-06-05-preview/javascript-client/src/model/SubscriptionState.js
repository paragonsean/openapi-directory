/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2017-06-05-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionState model module.
 * @module model/SubscriptionState
 * @version 2017-06-05-preview
 */
class SubscriptionState {
    /**
     * Constructs a new <code>SubscriptionState</code>.
     * Subscription State object.
     * @alias module:model/SubscriptionState
     */
    constructor() { 
        
        SubscriptionState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionState} obj Optional instance to populate.
     * @return {module:model/SubscriptionState} The populated <code>SubscriptionState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionState();

            if (data.hasOwnProperty('istransitioning')) {
                obj['istransitioning'] = ApiClient.convertToType(data['istransitioning'], 'Boolean');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], Object);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionState</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * Is Transitioning
 * @member {Boolean} istransitioning
 */
SubscriptionState.prototype['istransitioning'] = undefined;

/**
 * Subscription State properties.
 * @member {Object} properties
 */
SubscriptionState.prototype['properties'] = undefined;

/**
 * State of Azure Subscription
 * @member {module:model/SubscriptionState.StateEnum} state
 */
SubscriptionState.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionState['StateEnum'] = {

    /**
     * value: "Registered"
     * @const
     */
    "Registered": "Registered",

    /**
     * value: "Unregistered"
     * @const
     */
    "Unregistered": "Unregistered",

    /**
     * value: "Warned"
     * @const
     */
    "Warned": "Warned",

    /**
     * value: "Suspended"
     * @const
     */
    "Suspended": "Suspended",

    /**
     * value: "Deleted"
     * @const
     */
    "Deleted": "Deleted"
};



export default SubscriptionState;

