# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.feature_status import FeatureStatus
from openapi_server.models.progress_type import ProgressType
from openapi_server import util


class ServerEndpointProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, byte_progress: int=None, byte_total: int=None, cloud_tiering: FeatureStatus=None, current_progress_type: ProgressType=None, friendly_name: str=None, item_download_error_count: int=None, item_progress_count: int=None, item_total_count: int=None, item_upload_error_count: int=None, last_sync_success: datetime=None, last_workflow_id: str=None, provisioning_state: str=None, server_local_path: str=None, server_resource_id: str=None, sync_error_context: str=None, sync_error_direction: ProgressType=None, sync_error_state: str=None, sync_error_state_timestamp: datetime=None, total_progress: int=None, volume_free_space_percent: int=None):
        """ServerEndpointProperties - a model defined in OpenAPI

        :param byte_progress: The byte_progress of this ServerEndpointProperties.
        :param byte_total: The byte_total of this ServerEndpointProperties.
        :param cloud_tiering: The cloud_tiering of this ServerEndpointProperties.
        :param current_progress_type: The current_progress_type of this ServerEndpointProperties.
        :param friendly_name: The friendly_name of this ServerEndpointProperties.
        :param item_download_error_count: The item_download_error_count of this ServerEndpointProperties.
        :param item_progress_count: The item_progress_count of this ServerEndpointProperties.
        :param item_total_count: The item_total_count of this ServerEndpointProperties.
        :param item_upload_error_count: The item_upload_error_count of this ServerEndpointProperties.
        :param last_sync_success: The last_sync_success of this ServerEndpointProperties.
        :param last_workflow_id: The last_workflow_id of this ServerEndpointProperties.
        :param provisioning_state: The provisioning_state of this ServerEndpointProperties.
        :param server_local_path: The server_local_path of this ServerEndpointProperties.
        :param server_resource_id: The server_resource_id of this ServerEndpointProperties.
        :param sync_error_context: The sync_error_context of this ServerEndpointProperties.
        :param sync_error_direction: The sync_error_direction of this ServerEndpointProperties.
        :param sync_error_state: The sync_error_state of this ServerEndpointProperties.
        :param sync_error_state_timestamp: The sync_error_state_timestamp of this ServerEndpointProperties.
        :param total_progress: The total_progress of this ServerEndpointProperties.
        :param volume_free_space_percent: The volume_free_space_percent of this ServerEndpointProperties.
        """
        self.openapi_types = {
            'byte_progress': int,
            'byte_total': int,
            'cloud_tiering': FeatureStatus,
            'current_progress_type': ProgressType,
            'friendly_name': str,
            'item_download_error_count': int,
            'item_progress_count': int,
            'item_total_count': int,
            'item_upload_error_count': int,
            'last_sync_success': datetime,
            'last_workflow_id': str,
            'provisioning_state': str,
            'server_local_path': str,
            'server_resource_id': str,
            'sync_error_context': str,
            'sync_error_direction': ProgressType,
            'sync_error_state': str,
            'sync_error_state_timestamp': datetime,
            'total_progress': int,
            'volume_free_space_percent': int
        }

        self.attribute_map = {
            'byte_progress': 'byteProgress',
            'byte_total': 'byteTotal',
            'cloud_tiering': 'cloudTiering',
            'current_progress_type': 'currentProgressType',
            'friendly_name': 'friendlyName',
            'item_download_error_count': 'itemDownloadErrorCount',
            'item_progress_count': 'itemProgressCount',
            'item_total_count': 'itemTotalCount',
            'item_upload_error_count': 'itemUploadErrorCount',
            'last_sync_success': 'lastSyncSuccess',
            'last_workflow_id': 'lastWorkflowId',
            'provisioning_state': 'provisioningState',
            'server_local_path': 'serverLocalPath',
            'server_resource_id': 'serverResourceId',
            'sync_error_context': 'syncErrorContext',
            'sync_error_direction': 'syncErrorDirection',
            'sync_error_state': 'syncErrorState',
            'sync_error_state_timestamp': 'syncErrorStateTimestamp',
            'total_progress': 'totalProgress',
            'volume_free_space_percent': 'volumeFreeSpacePercent'
        }

        self._byte_progress = byte_progress
        self._byte_total = byte_total
        self._cloud_tiering = cloud_tiering
        self._current_progress_type = current_progress_type
        self._friendly_name = friendly_name
        self._item_download_error_count = item_download_error_count
        self._item_progress_count = item_progress_count
        self._item_total_count = item_total_count
        self._item_upload_error_count = item_upload_error_count
        self._last_sync_success = last_sync_success
        self._last_workflow_id = last_workflow_id
        self._provisioning_state = provisioning_state
        self._server_local_path = server_local_path
        self._server_resource_id = server_resource_id
        self._sync_error_context = sync_error_context
        self._sync_error_direction = sync_error_direction
        self._sync_error_state = sync_error_state
        self._sync_error_state_timestamp = sync_error_state_timestamp
        self._total_progress = total_progress
        self._volume_free_space_percent = volume_free_space_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerEndpointProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerEndpointProperties of this ServerEndpointProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def byte_progress(self):
        """Gets the byte_progress of this ServerEndpointProperties.

        Bytes in progress

        :return: The byte_progress of this ServerEndpointProperties.
        :rtype: int
        """
        return self._byte_progress

    @byte_progress.setter
    def byte_progress(self, byte_progress):
        """Sets the byte_progress of this ServerEndpointProperties.

        Bytes in progress

        :param byte_progress: The byte_progress of this ServerEndpointProperties.
        :type byte_progress: int
        """

        self._byte_progress = byte_progress

    @property
    def byte_total(self):
        """Gets the byte_total of this ServerEndpointProperties.

        Bytes total

        :return: The byte_total of this ServerEndpointProperties.
        :rtype: int
        """
        return self._byte_total

    @byte_total.setter
    def byte_total(self, byte_total):
        """Sets the byte_total of this ServerEndpointProperties.

        Bytes total

        :param byte_total: The byte_total of this ServerEndpointProperties.
        :type byte_total: int
        """

        self._byte_total = byte_total

    @property
    def cloud_tiering(self):
        """Gets the cloud_tiering of this ServerEndpointProperties.


        :return: The cloud_tiering of this ServerEndpointProperties.
        :rtype: FeatureStatus
        """
        return self._cloud_tiering

    @cloud_tiering.setter
    def cloud_tiering(self, cloud_tiering):
        """Sets the cloud_tiering of this ServerEndpointProperties.


        :param cloud_tiering: The cloud_tiering of this ServerEndpointProperties.
        :type cloud_tiering: FeatureStatus
        """

        self._cloud_tiering = cloud_tiering

    @property
    def current_progress_type(self):
        """Gets the current_progress_type of this ServerEndpointProperties.


        :return: The current_progress_type of this ServerEndpointProperties.
        :rtype: ProgressType
        """
        return self._current_progress_type

    @current_progress_type.setter
    def current_progress_type(self, current_progress_type):
        """Sets the current_progress_type of this ServerEndpointProperties.


        :param current_progress_type: The current_progress_type of this ServerEndpointProperties.
        :type current_progress_type: ProgressType
        """

        self._current_progress_type = current_progress_type

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ServerEndpointProperties.

        Friendly Name

        :return: The friendly_name of this ServerEndpointProperties.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ServerEndpointProperties.

        Friendly Name

        :param friendly_name: The friendly_name of this ServerEndpointProperties.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def item_download_error_count(self):
        """Gets the item_download_error_count of this ServerEndpointProperties.

        Item download error count.

        :return: The item_download_error_count of this ServerEndpointProperties.
        :rtype: int
        """
        return self._item_download_error_count

    @item_download_error_count.setter
    def item_download_error_count(self, item_download_error_count):
        """Sets the item_download_error_count of this ServerEndpointProperties.

        Item download error count.

        :param item_download_error_count: The item_download_error_count of this ServerEndpointProperties.
        :type item_download_error_count: int
        """

        self._item_download_error_count = item_download_error_count

    @property
    def item_progress_count(self):
        """Gets the item_progress_count of this ServerEndpointProperties.

        Item Progress Count

        :return: The item_progress_count of this ServerEndpointProperties.
        :rtype: int
        """
        return self._item_progress_count

    @item_progress_count.setter
    def item_progress_count(self, item_progress_count):
        """Sets the item_progress_count of this ServerEndpointProperties.

        Item Progress Count

        :param item_progress_count: The item_progress_count of this ServerEndpointProperties.
        :type item_progress_count: int
        """

        self._item_progress_count = item_progress_count

    @property
    def item_total_count(self):
        """Gets the item_total_count of this ServerEndpointProperties.

        Item Total Count

        :return: The item_total_count of this ServerEndpointProperties.
        :rtype: int
        """
        return self._item_total_count

    @item_total_count.setter
    def item_total_count(self, item_total_count):
        """Sets the item_total_count of this ServerEndpointProperties.

        Item Total Count

        :param item_total_count: The item_total_count of this ServerEndpointProperties.
        :type item_total_count: int
        """

        self._item_total_count = item_total_count

    @property
    def item_upload_error_count(self):
        """Gets the item_upload_error_count of this ServerEndpointProperties.

        Item Upload Error Count.

        :return: The item_upload_error_count of this ServerEndpointProperties.
        :rtype: int
        """
        return self._item_upload_error_count

    @item_upload_error_count.setter
    def item_upload_error_count(self, item_upload_error_count):
        """Sets the item_upload_error_count of this ServerEndpointProperties.

        Item Upload Error Count.

        :param item_upload_error_count: The item_upload_error_count of this ServerEndpointProperties.
        :type item_upload_error_count: int
        """

        self._item_upload_error_count = item_upload_error_count

    @property
    def last_sync_success(self):
        """Gets the last_sync_success of this ServerEndpointProperties.

        Last Sync Success

        :return: The last_sync_success of this ServerEndpointProperties.
        :rtype: datetime
        """
        return self._last_sync_success

    @last_sync_success.setter
    def last_sync_success(self, last_sync_success):
        """Sets the last_sync_success of this ServerEndpointProperties.

        Last Sync Success

        :param last_sync_success: The last_sync_success of this ServerEndpointProperties.
        :type last_sync_success: datetime
        """

        self._last_sync_success = last_sync_success

    @property
    def last_workflow_id(self):
        """Gets the last_workflow_id of this ServerEndpointProperties.

        ServerEndpoint lastWorkflowId

        :return: The last_workflow_id of this ServerEndpointProperties.
        :rtype: str
        """
        return self._last_workflow_id

    @last_workflow_id.setter
    def last_workflow_id(self, last_workflow_id):
        """Sets the last_workflow_id of this ServerEndpointProperties.

        ServerEndpoint lastWorkflowId

        :param last_workflow_id: The last_workflow_id of this ServerEndpointProperties.
        :type last_workflow_id: str
        """

        self._last_workflow_id = last_workflow_id

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ServerEndpointProperties.

        ServerEndpoint Provisioning State

        :return: The provisioning_state of this ServerEndpointProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ServerEndpointProperties.

        ServerEndpoint Provisioning State

        :param provisioning_state: The provisioning_state of this ServerEndpointProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def server_local_path(self):
        """Gets the server_local_path of this ServerEndpointProperties.

        Server folder used for data synchronization

        :return: The server_local_path of this ServerEndpointProperties.
        :rtype: str
        """
        return self._server_local_path

    @server_local_path.setter
    def server_local_path(self, server_local_path):
        """Sets the server_local_path of this ServerEndpointProperties.

        Server folder used for data synchronization

        :param server_local_path: The server_local_path of this ServerEndpointProperties.
        :type server_local_path: str
        """

        self._server_local_path = server_local_path

    @property
    def server_resource_id(self):
        """Gets the server_resource_id of this ServerEndpointProperties.

        Arm resource identifier.

        :return: The server_resource_id of this ServerEndpointProperties.
        :rtype: str
        """
        return self._server_resource_id

    @server_resource_id.setter
    def server_resource_id(self, server_resource_id):
        """Sets the server_resource_id of this ServerEndpointProperties.

        Arm resource identifier.

        :param server_resource_id: The server_resource_id of this ServerEndpointProperties.
        :type server_resource_id: str
        """

        self._server_resource_id = server_resource_id

    @property
    def sync_error_context(self):
        """Gets the sync_error_context of this ServerEndpointProperties.

        sync error context.

        :return: The sync_error_context of this ServerEndpointProperties.
        :rtype: str
        """
        return self._sync_error_context

    @sync_error_context.setter
    def sync_error_context(self, sync_error_context):
        """Sets the sync_error_context of this ServerEndpointProperties.

        sync error context.

        :param sync_error_context: The sync_error_context of this ServerEndpointProperties.
        :type sync_error_context: str
        """

        self._sync_error_context = sync_error_context

    @property
    def sync_error_direction(self):
        """Gets the sync_error_direction of this ServerEndpointProperties.


        :return: The sync_error_direction of this ServerEndpointProperties.
        :rtype: ProgressType
        """
        return self._sync_error_direction

    @sync_error_direction.setter
    def sync_error_direction(self, sync_error_direction):
        """Sets the sync_error_direction of this ServerEndpointProperties.


        :param sync_error_direction: The sync_error_direction of this ServerEndpointProperties.
        :type sync_error_direction: ProgressType
        """

        self._sync_error_direction = sync_error_direction

    @property
    def sync_error_state(self):
        """Gets the sync_error_state of this ServerEndpointProperties.

        Sync Error State

        :return: The sync_error_state of this ServerEndpointProperties.
        :rtype: str
        """
        return self._sync_error_state

    @sync_error_state.setter
    def sync_error_state(self, sync_error_state):
        """Sets the sync_error_state of this ServerEndpointProperties.

        Sync Error State

        :param sync_error_state: The sync_error_state of this ServerEndpointProperties.
        :type sync_error_state: str
        """

        self._sync_error_state = sync_error_state

    @property
    def sync_error_state_timestamp(self):
        """Gets the sync_error_state_timestamp of this ServerEndpointProperties.

        Sync Error State Timestamp

        :return: The sync_error_state_timestamp of this ServerEndpointProperties.
        :rtype: datetime
        """
        return self._sync_error_state_timestamp

    @sync_error_state_timestamp.setter
    def sync_error_state_timestamp(self, sync_error_state_timestamp):
        """Sets the sync_error_state_timestamp of this ServerEndpointProperties.

        Sync Error State Timestamp

        :param sync_error_state_timestamp: The sync_error_state_timestamp of this ServerEndpointProperties.
        :type sync_error_state_timestamp: datetime
        """

        self._sync_error_state_timestamp = sync_error_state_timestamp

    @property
    def total_progress(self):
        """Gets the total_progress of this ServerEndpointProperties.

        Total progress

        :return: The total_progress of this ServerEndpointProperties.
        :rtype: int
        """
        return self._total_progress

    @total_progress.setter
    def total_progress(self, total_progress):
        """Sets the total_progress of this ServerEndpointProperties.

        Total progress

        :param total_progress: The total_progress of this ServerEndpointProperties.
        :type total_progress: int
        """

        self._total_progress = total_progress

    @property
    def volume_free_space_percent(self):
        """Gets the volume_free_space_percent of this ServerEndpointProperties.

        Level of free space to be maintained by Cloud Tiering if it is enabled.

        :return: The volume_free_space_percent of this ServerEndpointProperties.
        :rtype: int
        """
        return self._volume_free_space_percent

    @volume_free_space_percent.setter
    def volume_free_space_percent(self, volume_free_space_percent):
        """Sets the volume_free_space_percent of this ServerEndpointProperties.

        Level of free space to be maintained by Cloud Tiering if it is enabled.

        :param volume_free_space_percent: The volume_free_space_percent of this ServerEndpointProperties.
        :type volume_free_space_percent: int
        """
        if volume_free_space_percent is not None and volume_free_space_percent > 100:
            raise ValueError("Invalid value for `volume_free_space_percent`, must be a value less than or equal to `100`")
        if volume_free_space_percent is not None and volume_free_space_percent < 0:
            raise ValueError("Invalid value for `volume_free_space_percent`, must be a value greater than or equal to `0`")

        self._volume_free_space_percent = volume_free_space_percent
