/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2017-06-05-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServerEndpointProperties.h
 *
 * ServerEndpoint Properties object.
 */

#ifndef OAIServerEndpointProperties_H
#define OAIServerEndpointProperties_H

#include <QJsonObject>

#include "OAIFeatureStatus.h"
#include "OAIProgressType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServerEndpointProperties : public OAIObject {
public:
    OAIServerEndpointProperties();
    OAIServerEndpointProperties(QString json);
    ~OAIServerEndpointProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getByteProgress() const;
    void setByteProgress(const qint32 &byte_progress);
    bool is_byte_progress_Set() const;
    bool is_byte_progress_Valid() const;

    qint32 getByteTotal() const;
    void setByteTotal(const qint32 &byte_total);
    bool is_byte_total_Set() const;
    bool is_byte_total_Valid() const;

    OAIFeatureStatus getCloudTiering() const;
    void setCloudTiering(const OAIFeatureStatus &cloud_tiering);
    bool is_cloud_tiering_Set() const;
    bool is_cloud_tiering_Valid() const;

    OAIProgressType getCurrentProgressType() const;
    void setCurrentProgressType(const OAIProgressType &current_progress_type);
    bool is_current_progress_type_Set() const;
    bool is_current_progress_type_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    qint32 getItemDownloadErrorCount() const;
    void setItemDownloadErrorCount(const qint32 &item_download_error_count);
    bool is_item_download_error_count_Set() const;
    bool is_item_download_error_count_Valid() const;

    qint32 getItemProgressCount() const;
    void setItemProgressCount(const qint32 &item_progress_count);
    bool is_item_progress_count_Set() const;
    bool is_item_progress_count_Valid() const;

    qint32 getItemTotalCount() const;
    void setItemTotalCount(const qint32 &item_total_count);
    bool is_item_total_count_Set() const;
    bool is_item_total_count_Valid() const;

    qint32 getItemUploadErrorCount() const;
    void setItemUploadErrorCount(const qint32 &item_upload_error_count);
    bool is_item_upload_error_count_Set() const;
    bool is_item_upload_error_count_Valid() const;

    QDateTime getLastSyncSuccess() const;
    void setLastSyncSuccess(const QDateTime &last_sync_success);
    bool is_last_sync_success_Set() const;
    bool is_last_sync_success_Valid() const;

    QString getLastWorkflowId() const;
    void setLastWorkflowId(const QString &last_workflow_id);
    bool is_last_workflow_id_Set() const;
    bool is_last_workflow_id_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getServerLocalPath() const;
    void setServerLocalPath(const QString &server_local_path);
    bool is_server_local_path_Set() const;
    bool is_server_local_path_Valid() const;

    QString getServerResourceId() const;
    void setServerResourceId(const QString &server_resource_id);
    bool is_server_resource_id_Set() const;
    bool is_server_resource_id_Valid() const;

    QString getSyncErrorContext() const;
    void setSyncErrorContext(const QString &sync_error_context);
    bool is_sync_error_context_Set() const;
    bool is_sync_error_context_Valid() const;

    OAIProgressType getSyncErrorDirection() const;
    void setSyncErrorDirection(const OAIProgressType &sync_error_direction);
    bool is_sync_error_direction_Set() const;
    bool is_sync_error_direction_Valid() const;

    QString getSyncErrorState() const;
    void setSyncErrorState(const QString &sync_error_state);
    bool is_sync_error_state_Set() const;
    bool is_sync_error_state_Valid() const;

    QDateTime getSyncErrorStateTimestamp() const;
    void setSyncErrorStateTimestamp(const QDateTime &sync_error_state_timestamp);
    bool is_sync_error_state_timestamp_Set() const;
    bool is_sync_error_state_timestamp_Valid() const;

    qint32 getTotalProgress() const;
    void setTotalProgress(const qint32 &total_progress);
    bool is_total_progress_Set() const;
    bool is_total_progress_Valid() const;

    qint32 getVolumeFreeSpacePercent() const;
    void setVolumeFreeSpacePercent(const qint32 &volume_free_space_percent);
    bool is_volume_free_space_percent_Set() const;
    bool is_volume_free_space_percent_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_byte_progress;
    bool m_byte_progress_isSet;
    bool m_byte_progress_isValid;

    qint32 m_byte_total;
    bool m_byte_total_isSet;
    bool m_byte_total_isValid;

    OAIFeatureStatus m_cloud_tiering;
    bool m_cloud_tiering_isSet;
    bool m_cloud_tiering_isValid;

    OAIProgressType m_current_progress_type;
    bool m_current_progress_type_isSet;
    bool m_current_progress_type_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    qint32 m_item_download_error_count;
    bool m_item_download_error_count_isSet;
    bool m_item_download_error_count_isValid;

    qint32 m_item_progress_count;
    bool m_item_progress_count_isSet;
    bool m_item_progress_count_isValid;

    qint32 m_item_total_count;
    bool m_item_total_count_isSet;
    bool m_item_total_count_isValid;

    qint32 m_item_upload_error_count;
    bool m_item_upload_error_count_isSet;
    bool m_item_upload_error_count_isValid;

    QDateTime m_last_sync_success;
    bool m_last_sync_success_isSet;
    bool m_last_sync_success_isValid;

    QString m_last_workflow_id;
    bool m_last_workflow_id_isSet;
    bool m_last_workflow_id_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_server_local_path;
    bool m_server_local_path_isSet;
    bool m_server_local_path_isValid;

    QString m_server_resource_id;
    bool m_server_resource_id_isSet;
    bool m_server_resource_id_isValid;

    QString m_sync_error_context;
    bool m_sync_error_context_isSet;
    bool m_sync_error_context_isValid;

    OAIProgressType m_sync_error_direction;
    bool m_sync_error_direction_isSet;
    bool m_sync_error_direction_isValid;

    QString m_sync_error_state;
    bool m_sync_error_state_isSet;
    bool m_sync_error_state_isValid;

    QDateTime m_sync_error_state_timestamp;
    bool m_sync_error_state_timestamp_isSet;
    bool m_sync_error_state_timestamp_isValid;

    qint32 m_total_progress;
    bool m_total_progress_isSet;
    bool m_total_progress_isValid;

    qint32 m_volume_free_space_percent;
    bool m_volume_free_space_percent_isSet;
    bool m_volume_free_space_percent_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServerEndpointProperties)

#endif // OAIServerEndpointProperties_H
