/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2017-06-05-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorkflowStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorkflowStatus::OAIWorkflowStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorkflowStatus::OAIWorkflowStatus() {
    this->initializeModel();
}

OAIWorkflowStatus::~OAIWorkflowStatus() {}

void OAIWorkflowStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIWorkflowStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIWorkflowStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("active", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorkflowStatus::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("expired", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorkflowStatus::EXPIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("succeeded", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorkflowStatus::SUCCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("aborted", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorkflowStatus::ABORTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorkflowStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIWorkflowStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIWorkflowStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIWorkflowStatus::ACTIVE:
            val = "active";
            break;
        case eOAIWorkflowStatus::EXPIRED:
            val = "expired";
            break;
        case eOAIWorkflowStatus::SUCCEEDED:
            val = "succeeded";
            break;
        case eOAIWorkflowStatus::ABORTED:
            val = "aborted";
            break;
        case eOAIWorkflowStatus::FAILED:
            val = "failed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIWorkflowStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIWorkflowStatus::eOAIWorkflowStatus OAIWorkflowStatus::getValue() const {
    return m_value;
}

void OAIWorkflowStatus::setValue(const OAIWorkflowStatus::eOAIWorkflowStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIWorkflowStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIWorkflowStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
