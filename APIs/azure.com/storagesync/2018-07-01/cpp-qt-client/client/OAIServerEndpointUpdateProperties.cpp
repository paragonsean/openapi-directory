/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServerEndpointUpdateProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServerEndpointUpdateProperties::OAIServerEndpointUpdateProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServerEndpointUpdateProperties::OAIServerEndpointUpdateProperties() {
    this->initializeModel();
}

OAIServerEndpointUpdateProperties::~OAIServerEndpointUpdateProperties() {}

void OAIServerEndpointUpdateProperties::initializeModel() {

    m_cloud_tiering_isSet = false;
    m_cloud_tiering_isValid = false;

    m_tier_files_older_than_days_isSet = false;
    m_tier_files_older_than_days_isValid = false;

    m_volume_free_space_percent_isSet = false;
    m_volume_free_space_percent_isValid = false;
}

void OAIServerEndpointUpdateProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServerEndpointUpdateProperties::fromJsonObject(QJsonObject json) {

    m_cloud_tiering_isValid = ::OpenAPI::fromJsonValue(m_cloud_tiering, json[QString("cloudTiering")]);
    m_cloud_tiering_isSet = !json[QString("cloudTiering")].isNull() && m_cloud_tiering_isValid;

    m_tier_files_older_than_days_isValid = ::OpenAPI::fromJsonValue(m_tier_files_older_than_days, json[QString("tierFilesOlderThanDays")]);
    m_tier_files_older_than_days_isSet = !json[QString("tierFilesOlderThanDays")].isNull() && m_tier_files_older_than_days_isValid;

    m_volume_free_space_percent_isValid = ::OpenAPI::fromJsonValue(m_volume_free_space_percent, json[QString("volumeFreeSpacePercent")]);
    m_volume_free_space_percent_isSet = !json[QString("volumeFreeSpacePercent")].isNull() && m_volume_free_space_percent_isValid;
}

QString OAIServerEndpointUpdateProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServerEndpointUpdateProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_tiering.isSet()) {
        obj.insert(QString("cloudTiering"), ::OpenAPI::toJsonValue(m_cloud_tiering));
    }
    if (m_tier_files_older_than_days_isSet) {
        obj.insert(QString("tierFilesOlderThanDays"), ::OpenAPI::toJsonValue(m_tier_files_older_than_days));
    }
    if (m_volume_free_space_percent_isSet) {
        obj.insert(QString("volumeFreeSpacePercent"), ::OpenAPI::toJsonValue(m_volume_free_space_percent));
    }
    return obj;
}

OAIFeatureStatus OAIServerEndpointUpdateProperties::getCloudTiering() const {
    return m_cloud_tiering;
}
void OAIServerEndpointUpdateProperties::setCloudTiering(const OAIFeatureStatus &cloud_tiering) {
    m_cloud_tiering = cloud_tiering;
    m_cloud_tiering_isSet = true;
}

bool OAIServerEndpointUpdateProperties::is_cloud_tiering_Set() const{
    return m_cloud_tiering_isSet;
}

bool OAIServerEndpointUpdateProperties::is_cloud_tiering_Valid() const{
    return m_cloud_tiering_isValid;
}

qint32 OAIServerEndpointUpdateProperties::getTierFilesOlderThanDays() const {
    return m_tier_files_older_than_days;
}
void OAIServerEndpointUpdateProperties::setTierFilesOlderThanDays(const qint32 &tier_files_older_than_days) {
    m_tier_files_older_than_days = tier_files_older_than_days;
    m_tier_files_older_than_days_isSet = true;
}

bool OAIServerEndpointUpdateProperties::is_tier_files_older_than_days_Set() const{
    return m_tier_files_older_than_days_isSet;
}

bool OAIServerEndpointUpdateProperties::is_tier_files_older_than_days_Valid() const{
    return m_tier_files_older_than_days_isValid;
}

qint32 OAIServerEndpointUpdateProperties::getVolumeFreeSpacePercent() const {
    return m_volume_free_space_percent;
}
void OAIServerEndpointUpdateProperties::setVolumeFreeSpacePercent(const qint32 &volume_free_space_percent) {
    m_volume_free_space_percent = volume_free_space_percent;
    m_volume_free_space_percent_isSet = true;
}

bool OAIServerEndpointUpdateProperties::is_volume_free_space_percent_Set() const{
    return m_volume_free_space_percent_isSet;
}

bool OAIServerEndpointUpdateProperties::is_volume_free_space_percent_Valid() const{
    return m_volume_free_space_percent_isValid;
}

bool OAIServerEndpointUpdateProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_tiering.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tier_files_older_than_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_volume_free_space_percent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServerEndpointUpdateProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
