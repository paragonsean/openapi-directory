/*
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RegisteredServer Properties object.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:59:26.654956-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RegisteredServerProperties {
  public static final String SERIALIZED_NAME_AGENT_VERSION = "agentVersion";
  @SerializedName(SERIALIZED_NAME_AGENT_VERSION)
  private String agentVersion;

  public static final String SERIALIZED_NAME_CLUSTER_ID = "clusterId";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ID)
  private String clusterId;

  public static final String SERIALIZED_NAME_CLUSTER_NAME = "clusterName";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NAME)
  private String clusterName;

  public static final String SERIALIZED_NAME_DISCOVERY_ENDPOINT_URI = "discoveryEndpointUri";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_ENDPOINT_URI)
  private String discoveryEndpointUri;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendlyName";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_LAST_HEART_BEAT = "lastHeartBeat";
  @SerializedName(SERIALIZED_NAME_LAST_HEART_BEAT)
  private String lastHeartBeat;

  public static final String SERIALIZED_NAME_LAST_OPERATION_NAME = "lastOperationName";
  @SerializedName(SERIALIZED_NAME_LAST_OPERATION_NAME)
  private String lastOperationName;

  public static final String SERIALIZED_NAME_LAST_WORKFLOW_ID = "lastWorkflowId";
  @SerializedName(SERIALIZED_NAME_LAST_WORKFLOW_ID)
  private String lastWorkflowId;

  public static final String SERIALIZED_NAME_MANAGEMENT_ENDPOINT_URI = "managementEndpointUri";
  @SerializedName(SERIALIZED_NAME_MANAGEMENT_ENDPOINT_URI)
  private String managementEndpointUri;

  public static final String SERIALIZED_NAME_MONITORING_CONFIGURATION = "monitoringConfiguration";
  @SerializedName(SERIALIZED_NAME_MONITORING_CONFIGURATION)
  private String monitoringConfiguration;

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private String provisioningState;

  public static final String SERIALIZED_NAME_RESOURCE_LOCATION = "resourceLocation";
  @SerializedName(SERIALIZED_NAME_RESOURCE_LOCATION)
  private String resourceLocation;

  public static final String SERIALIZED_NAME_SERVER_CERTIFICATE = "serverCertificate";
  @SerializedName(SERIALIZED_NAME_SERVER_CERTIFICATE)
  private String serverCertificate;

  public static final String SERIALIZED_NAME_SERVER_ID = "serverId";
  @SerializedName(SERIALIZED_NAME_SERVER_ID)
  private String serverId;

  public static final String SERIALIZED_NAME_SERVER_MANAGEMENTT_ERROR_CODE = "serverManagementtErrorCode";
  @SerializedName(SERIALIZED_NAME_SERVER_MANAGEMENTT_ERROR_CODE)
  private Integer serverManagementtErrorCode;

  public static final String SERIALIZED_NAME_SERVER_O_S_VERSION = "serverOSVersion";
  @SerializedName(SERIALIZED_NAME_SERVER_O_S_VERSION)
  private String serverOSVersion;

  public static final String SERIALIZED_NAME_SERVER_ROLE = "serverRole";
  @SerializedName(SERIALIZED_NAME_SERVER_ROLE)
  private String serverRole;

  public static final String SERIALIZED_NAME_SERVICE_LOCATION = "serviceLocation";
  @SerializedName(SERIALIZED_NAME_SERVICE_LOCATION)
  private String serviceLocation;

  public static final String SERIALIZED_NAME_STORAGE_SYNC_SERVICE_UID = "storageSyncServiceUid";
  @SerializedName(SERIALIZED_NAME_STORAGE_SYNC_SERVICE_UID)
  private String storageSyncServiceUid;

  public RegisteredServerProperties() {
  }

  public RegisteredServerProperties agentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
    return this;
  }

  /**
   * Registered Server Agent Version
   * @return agentVersion
   */
  @javax.annotation.Nullable
  public String getAgentVersion() {
    return agentVersion;
  }

  public void setAgentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
  }


  public RegisteredServerProperties clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

  /**
   * Registered Server clusterId
   * @return clusterId
   */
  @javax.annotation.Nullable
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }


  public RegisteredServerProperties clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

  /**
   * Registered Server clusterName
   * @return clusterName
   */
  @javax.annotation.Nullable
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }


  public RegisteredServerProperties discoveryEndpointUri(String discoveryEndpointUri) {
    this.discoveryEndpointUri = discoveryEndpointUri;
    return this;
  }

  /**
   * Resource discoveryEndpointUri
   * @return discoveryEndpointUri
   */
  @javax.annotation.Nullable
  public String getDiscoveryEndpointUri() {
    return discoveryEndpointUri;
  }

  public void setDiscoveryEndpointUri(String discoveryEndpointUri) {
    this.discoveryEndpointUri = discoveryEndpointUri;
  }


  public RegisteredServerProperties friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * Friendly Name
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public RegisteredServerProperties lastHeartBeat(String lastHeartBeat) {
    this.lastHeartBeat = lastHeartBeat;
    return this;
  }

  /**
   * Registered Server last heart beat
   * @return lastHeartBeat
   */
  @javax.annotation.Nullable
  public String getLastHeartBeat() {
    return lastHeartBeat;
  }

  public void setLastHeartBeat(String lastHeartBeat) {
    this.lastHeartBeat = lastHeartBeat;
  }


  public RegisteredServerProperties lastOperationName(String lastOperationName) {
    this.lastOperationName = lastOperationName;
    return this;
  }

  /**
   * Resource Last Operation Name
   * @return lastOperationName
   */
  @javax.annotation.Nullable
  public String getLastOperationName() {
    return lastOperationName;
  }

  public void setLastOperationName(String lastOperationName) {
    this.lastOperationName = lastOperationName;
  }


  public RegisteredServerProperties lastWorkflowId(String lastWorkflowId) {
    this.lastWorkflowId = lastWorkflowId;
    return this;
  }

  /**
   * Registered Server lastWorkflowId
   * @return lastWorkflowId
   */
  @javax.annotation.Nullable
  public String getLastWorkflowId() {
    return lastWorkflowId;
  }

  public void setLastWorkflowId(String lastWorkflowId) {
    this.lastWorkflowId = lastWorkflowId;
  }


  public RegisteredServerProperties managementEndpointUri(String managementEndpointUri) {
    this.managementEndpointUri = managementEndpointUri;
    return this;
  }

  /**
   * Management Endpoint Uri
   * @return managementEndpointUri
   */
  @javax.annotation.Nullable
  public String getManagementEndpointUri() {
    return managementEndpointUri;
  }

  public void setManagementEndpointUri(String managementEndpointUri) {
    this.managementEndpointUri = managementEndpointUri;
  }


  public RegisteredServerProperties monitoringConfiguration(String monitoringConfiguration) {
    this.monitoringConfiguration = monitoringConfiguration;
    return this;
  }

  /**
   * Monitoring Configuration
   * @return monitoringConfiguration
   */
  @javax.annotation.Nullable
  public String getMonitoringConfiguration() {
    return monitoringConfiguration;
  }

  public void setMonitoringConfiguration(String monitoringConfiguration) {
    this.monitoringConfiguration = monitoringConfiguration;
  }


  public RegisteredServerProperties provisioningState(String provisioningState) {
    this.provisioningState = provisioningState;
    return this;
  }

  /**
   * Registered Server Provisioning State
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public String getProvisioningState() {
    return provisioningState;
  }

  public void setProvisioningState(String provisioningState) {
    this.provisioningState = provisioningState;
  }


  public RegisteredServerProperties resourceLocation(String resourceLocation) {
    this.resourceLocation = resourceLocation;
    return this;
  }

  /**
   * Resource Location
   * @return resourceLocation
   */
  @javax.annotation.Nullable
  public String getResourceLocation() {
    return resourceLocation;
  }

  public void setResourceLocation(String resourceLocation) {
    this.resourceLocation = resourceLocation;
  }


  public RegisteredServerProperties serverCertificate(String serverCertificate) {
    this.serverCertificate = serverCertificate;
    return this;
  }

  /**
   * Registered Server Certificate
   * @return serverCertificate
   */
  @javax.annotation.Nullable
  public String getServerCertificate() {
    return serverCertificate;
  }

  public void setServerCertificate(String serverCertificate) {
    this.serverCertificate = serverCertificate;
  }


  public RegisteredServerProperties serverId(String serverId) {
    this.serverId = serverId;
    return this;
  }

  /**
   * Registered Server serverId
   * @return serverId
   */
  @javax.annotation.Nullable
  public String getServerId() {
    return serverId;
  }

  public void setServerId(String serverId) {
    this.serverId = serverId;
  }


  public RegisteredServerProperties serverManagementtErrorCode(Integer serverManagementtErrorCode) {
    this.serverManagementtErrorCode = serverManagementtErrorCode;
    return this;
  }

  /**
   * Registered Server Management Error Code
   * @return serverManagementtErrorCode
   */
  @javax.annotation.Nullable
  public Integer getServerManagementtErrorCode() {
    return serverManagementtErrorCode;
  }

  public void setServerManagementtErrorCode(Integer serverManagementtErrorCode) {
    this.serverManagementtErrorCode = serverManagementtErrorCode;
  }


  public RegisteredServerProperties serverOSVersion(String serverOSVersion) {
    this.serverOSVersion = serverOSVersion;
    return this;
  }

  /**
   * Registered Server OS Version
   * @return serverOSVersion
   */
  @javax.annotation.Nullable
  public String getServerOSVersion() {
    return serverOSVersion;
  }

  public void setServerOSVersion(String serverOSVersion) {
    this.serverOSVersion = serverOSVersion;
  }


  public RegisteredServerProperties serverRole(String serverRole) {
    this.serverRole = serverRole;
    return this;
  }

  /**
   * Registered Server serverRole
   * @return serverRole
   */
  @javax.annotation.Nullable
  public String getServerRole() {
    return serverRole;
  }

  public void setServerRole(String serverRole) {
    this.serverRole = serverRole;
  }


  public RegisteredServerProperties serviceLocation(String serviceLocation) {
    this.serviceLocation = serviceLocation;
    return this;
  }

  /**
   * Service Location
   * @return serviceLocation
   */
  @javax.annotation.Nullable
  public String getServiceLocation() {
    return serviceLocation;
  }

  public void setServiceLocation(String serviceLocation) {
    this.serviceLocation = serviceLocation;
  }


  public RegisteredServerProperties storageSyncServiceUid(String storageSyncServiceUid) {
    this.storageSyncServiceUid = storageSyncServiceUid;
    return this;
  }

  /**
   * Registered Server storageSyncServiceUid
   * @return storageSyncServiceUid
   */
  @javax.annotation.Nullable
  public String getStorageSyncServiceUid() {
    return storageSyncServiceUid;
  }

  public void setStorageSyncServiceUid(String storageSyncServiceUid) {
    this.storageSyncServiceUid = storageSyncServiceUid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegisteredServerProperties registeredServerProperties = (RegisteredServerProperties) o;
    return Objects.equals(this.agentVersion, registeredServerProperties.agentVersion) &&
        Objects.equals(this.clusterId, registeredServerProperties.clusterId) &&
        Objects.equals(this.clusterName, registeredServerProperties.clusterName) &&
        Objects.equals(this.discoveryEndpointUri, registeredServerProperties.discoveryEndpointUri) &&
        Objects.equals(this.friendlyName, registeredServerProperties.friendlyName) &&
        Objects.equals(this.lastHeartBeat, registeredServerProperties.lastHeartBeat) &&
        Objects.equals(this.lastOperationName, registeredServerProperties.lastOperationName) &&
        Objects.equals(this.lastWorkflowId, registeredServerProperties.lastWorkflowId) &&
        Objects.equals(this.managementEndpointUri, registeredServerProperties.managementEndpointUri) &&
        Objects.equals(this.monitoringConfiguration, registeredServerProperties.monitoringConfiguration) &&
        Objects.equals(this.provisioningState, registeredServerProperties.provisioningState) &&
        Objects.equals(this.resourceLocation, registeredServerProperties.resourceLocation) &&
        Objects.equals(this.serverCertificate, registeredServerProperties.serverCertificate) &&
        Objects.equals(this.serverId, registeredServerProperties.serverId) &&
        Objects.equals(this.serverManagementtErrorCode, registeredServerProperties.serverManagementtErrorCode) &&
        Objects.equals(this.serverOSVersion, registeredServerProperties.serverOSVersion) &&
        Objects.equals(this.serverRole, registeredServerProperties.serverRole) &&
        Objects.equals(this.serviceLocation, registeredServerProperties.serviceLocation) &&
        Objects.equals(this.storageSyncServiceUid, registeredServerProperties.storageSyncServiceUid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentVersion, clusterId, clusterName, discoveryEndpointUri, friendlyName, lastHeartBeat, lastOperationName, lastWorkflowId, managementEndpointUri, monitoringConfiguration, provisioningState, resourceLocation, serverCertificate, serverId, serverManagementtErrorCode, serverOSVersion, serverRole, serviceLocation, storageSyncServiceUid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegisteredServerProperties {\n");
    sb.append("    agentVersion: ").append(toIndentedString(agentVersion)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    discoveryEndpointUri: ").append(toIndentedString(discoveryEndpointUri)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    lastHeartBeat: ").append(toIndentedString(lastHeartBeat)).append("\n");
    sb.append("    lastOperationName: ").append(toIndentedString(lastOperationName)).append("\n");
    sb.append("    lastWorkflowId: ").append(toIndentedString(lastWorkflowId)).append("\n");
    sb.append("    managementEndpointUri: ").append(toIndentedString(managementEndpointUri)).append("\n");
    sb.append("    monitoringConfiguration: ").append(toIndentedString(monitoringConfiguration)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    resourceLocation: ").append(toIndentedString(resourceLocation)).append("\n");
    sb.append("    serverCertificate: ").append(toIndentedString(serverCertificate)).append("\n");
    sb.append("    serverId: ").append(toIndentedString(serverId)).append("\n");
    sb.append("    serverManagementtErrorCode: ").append(toIndentedString(serverManagementtErrorCode)).append("\n");
    sb.append("    serverOSVersion: ").append(toIndentedString(serverOSVersion)).append("\n");
    sb.append("    serverRole: ").append(toIndentedString(serverRole)).append("\n");
    sb.append("    serviceLocation: ").append(toIndentedString(serviceLocation)).append("\n");
    sb.append("    storageSyncServiceUid: ").append(toIndentedString(storageSyncServiceUid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agentVersion");
    openapiFields.add("clusterId");
    openapiFields.add("clusterName");
    openapiFields.add("discoveryEndpointUri");
    openapiFields.add("friendlyName");
    openapiFields.add("lastHeartBeat");
    openapiFields.add("lastOperationName");
    openapiFields.add("lastWorkflowId");
    openapiFields.add("managementEndpointUri");
    openapiFields.add("monitoringConfiguration");
    openapiFields.add("provisioningState");
    openapiFields.add("resourceLocation");
    openapiFields.add("serverCertificate");
    openapiFields.add("serverId");
    openapiFields.add("serverManagementtErrorCode");
    openapiFields.add("serverOSVersion");
    openapiFields.add("serverRole");
    openapiFields.add("serviceLocation");
    openapiFields.add("storageSyncServiceUid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RegisteredServerProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RegisteredServerProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RegisteredServerProperties is not found in the empty JSON string", RegisteredServerProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RegisteredServerProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RegisteredServerProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("agentVersion") != null && !jsonObj.get("agentVersion").isJsonNull()) && !jsonObj.get("agentVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agentVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agentVersion").toString()));
      }
      if ((jsonObj.get("clusterId") != null && !jsonObj.get("clusterId").isJsonNull()) && !jsonObj.get("clusterId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clusterId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clusterId").toString()));
      }
      if ((jsonObj.get("clusterName") != null && !jsonObj.get("clusterName").isJsonNull()) && !jsonObj.get("clusterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clusterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clusterName").toString()));
      }
      if ((jsonObj.get("discoveryEndpointUri") != null && !jsonObj.get("discoveryEndpointUri").isJsonNull()) && !jsonObj.get("discoveryEndpointUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discoveryEndpointUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discoveryEndpointUri").toString()));
      }
      if ((jsonObj.get("friendlyName") != null && !jsonObj.get("friendlyName").isJsonNull()) && !jsonObj.get("friendlyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendlyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendlyName").toString()));
      }
      if ((jsonObj.get("lastHeartBeat") != null && !jsonObj.get("lastHeartBeat").isJsonNull()) && !jsonObj.get("lastHeartBeat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastHeartBeat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastHeartBeat").toString()));
      }
      if ((jsonObj.get("lastOperationName") != null && !jsonObj.get("lastOperationName").isJsonNull()) && !jsonObj.get("lastOperationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastOperationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastOperationName").toString()));
      }
      if ((jsonObj.get("lastWorkflowId") != null && !jsonObj.get("lastWorkflowId").isJsonNull()) && !jsonObj.get("lastWorkflowId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastWorkflowId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastWorkflowId").toString()));
      }
      if ((jsonObj.get("managementEndpointUri") != null && !jsonObj.get("managementEndpointUri").isJsonNull()) && !jsonObj.get("managementEndpointUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `managementEndpointUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("managementEndpointUri").toString()));
      }
      if ((jsonObj.get("monitoringConfiguration") != null && !jsonObj.get("monitoringConfiguration").isJsonNull()) && !jsonObj.get("monitoringConfiguration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `monitoringConfiguration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("monitoringConfiguration").toString()));
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      if ((jsonObj.get("resourceLocation") != null && !jsonObj.get("resourceLocation").isJsonNull()) && !jsonObj.get("resourceLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceLocation").toString()));
      }
      if ((jsonObj.get("serverCertificate") != null && !jsonObj.get("serverCertificate").isJsonNull()) && !jsonObj.get("serverCertificate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverCertificate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverCertificate").toString()));
      }
      if ((jsonObj.get("serverId") != null && !jsonObj.get("serverId").isJsonNull()) && !jsonObj.get("serverId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverId").toString()));
      }
      if ((jsonObj.get("serverOSVersion") != null && !jsonObj.get("serverOSVersion").isJsonNull()) && !jsonObj.get("serverOSVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverOSVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverOSVersion").toString()));
      }
      if ((jsonObj.get("serverRole") != null && !jsonObj.get("serverRole").isJsonNull()) && !jsonObj.get("serverRole").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverRole` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverRole").toString()));
      }
      if ((jsonObj.get("serviceLocation") != null && !jsonObj.get("serviceLocation").isJsonNull()) && !jsonObj.get("serviceLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceLocation").toString()));
      }
      if ((jsonObj.get("storageSyncServiceUid") != null && !jsonObj.get("storageSyncServiceUid").isJsonNull()) && !jsonObj.get("storageSyncServiceUid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storageSyncServiceUid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storageSyncServiceUid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RegisteredServerProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RegisteredServerProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RegisteredServerProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RegisteredServerProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<RegisteredServerProperties>() {
           @Override
           public void write(JsonWriter out, RegisteredServerProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RegisteredServerProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RegisteredServerProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RegisteredServerProperties
   * @throws IOException if the JSON string is invalid with respect to RegisteredServerProperties
   */
  public static RegisteredServerProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RegisteredServerProperties.class);
  }

  /**
   * Convert an instance of RegisteredServerProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

