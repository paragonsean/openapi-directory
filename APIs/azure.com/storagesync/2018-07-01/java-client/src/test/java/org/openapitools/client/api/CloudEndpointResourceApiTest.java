/*
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BackupRequest;
import org.openapitools.client.model.CloudEndpoint;
import org.openapitools.client.model.CloudEndpointArray;
import org.openapitools.client.model.CloudEndpointCreateParameters;
import org.openapitools.client.model.PostBackupResponse;
import org.openapitools.client.model.PostRestoreRequest;
import org.openapitools.client.model.PreRestoreRequest;
import org.openapitools.client.model.StorageSyncError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CloudEndpointResourceApi
 */
@Disabled
public class CloudEndpointResourceApiTest {

    private final CloudEndpointResourceApi api = new CloudEndpointResourceApi();

    /**
     * Create a new CloudEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudEndpointsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String syncGroupName = null;
        String cloudEndpointName = null;
        CloudEndpointCreateParameters parameters = null;
        CloudEndpoint response = api.cloudEndpointsCreate(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters);
        // TODO: test validations
    }

    /**
     * Delete a given CloudEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudEndpointsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String syncGroupName = null;
        String cloudEndpointName = null;
        api.cloudEndpointsDelete(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName);
        // TODO: test validations
    }

    /**
     * Get a given CloudEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudEndpointsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String syncGroupName = null;
        String cloudEndpointName = null;
        CloudEndpoint response = api.cloudEndpointsGet(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName);
        // TODO: test validations
    }

    /**
     * Get a CloudEndpoint List.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudEndpointsListBySyncGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String syncGroupName = null;
        CloudEndpointArray response = api.cloudEndpointsListBySyncGroup(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName);
        // TODO: test validations
    }

    /**
     * Post Backup a given CloudEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudEndpointsPostBackupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String syncGroupName = null;
        String cloudEndpointName = null;
        BackupRequest parameters = null;
        PostBackupResponse response = api.cloudEndpointsPostBackup(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters);
        // TODO: test validations
    }

    /**
     * Post Restore a given CloudEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudEndpointsPostRestoreTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String syncGroupName = null;
        String cloudEndpointName = null;
        PostRestoreRequest parameters = null;
        api.cloudEndpointsPostRestore(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters);
        // TODO: test validations
    }

    /**
     * Pre Backup a given CloudEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudEndpointsPreBackupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String syncGroupName = null;
        String cloudEndpointName = null;
        BackupRequest parameters = null;
        api.cloudEndpointsPreBackup(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters);
        // TODO: test validations
    }

    /**
     * Pre Restore a given CloudEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudEndpointsPreRestoreTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String syncGroupName = null;
        String cloudEndpointName = null;
        PreRestoreRequest parameters = null;
        api.cloudEndpointsPreRestore(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters);
        // TODO: test validations
    }

    /**
     * Restore Heartbeat a given CloudEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloudEndpointsRestoreheartbeatTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String syncGroupName = null;
        String cloudEndpointName = null;
        api.cloudEndpointsRestoreheartbeat(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName);
        // TODO: test validations
    }

}
