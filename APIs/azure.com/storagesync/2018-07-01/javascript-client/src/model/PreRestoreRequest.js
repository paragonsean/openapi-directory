/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RestoreFileSpec from './RestoreFileSpec';

/**
 * The PreRestoreRequest model module.
 * @module model/PreRestoreRequest
 * @version 2018-07-01
 */
class PreRestoreRequest {
    /**
     * Constructs a new <code>PreRestoreRequest</code>.
     * Pre Restore request object.
     * @alias module:model/PreRestoreRequest
     */
    constructor() { 
        
        PreRestoreRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PreRestoreRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PreRestoreRequest} obj Optional instance to populate.
     * @return {module:model/PreRestoreRequest} The populated <code>PreRestoreRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PreRestoreRequest();

            if (data.hasOwnProperty('azureFileShareUri')) {
                obj['azureFileShareUri'] = ApiClient.convertToType(data['azureFileShareUri'], 'String');
            }
            if (data.hasOwnProperty('backupMetadataPropertyBag')) {
                obj['backupMetadataPropertyBag'] = ApiClient.convertToType(data['backupMetadataPropertyBag'], 'String');
            }
            if (data.hasOwnProperty('partition')) {
                obj['partition'] = ApiClient.convertToType(data['partition'], 'String');
            }
            if (data.hasOwnProperty('pauseWaitForSyncDrainTimePeriodInSeconds')) {
                obj['pauseWaitForSyncDrainTimePeriodInSeconds'] = ApiClient.convertToType(data['pauseWaitForSyncDrainTimePeriodInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('replicaGroup')) {
                obj['replicaGroup'] = ApiClient.convertToType(data['replicaGroup'], 'String');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('restoreFileSpec')) {
                obj['restoreFileSpec'] = ApiClient.convertToType(data['restoreFileSpec'], [RestoreFileSpec]);
            }
            if (data.hasOwnProperty('sourceAzureFileShareUri')) {
                obj['sourceAzureFileShareUri'] = ApiClient.convertToType(data['sourceAzureFileShareUri'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PreRestoreRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PreRestoreRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['azureFileShareUri'] && !(typeof data['azureFileShareUri'] === 'string' || data['azureFileShareUri'] instanceof String)) {
            throw new Error("Expected the field `azureFileShareUri` to be a primitive type in the JSON string but got " + data['azureFileShareUri']);
        }
        // ensure the json data is a string
        if (data['backupMetadataPropertyBag'] && !(typeof data['backupMetadataPropertyBag'] === 'string' || data['backupMetadataPropertyBag'] instanceof String)) {
            throw new Error("Expected the field `backupMetadataPropertyBag` to be a primitive type in the JSON string but got " + data['backupMetadataPropertyBag']);
        }
        // ensure the json data is a string
        if (data['partition'] && !(typeof data['partition'] === 'string' || data['partition'] instanceof String)) {
            throw new Error("Expected the field `partition` to be a primitive type in the JSON string but got " + data['partition']);
        }
        // ensure the json data is a string
        if (data['replicaGroup'] && !(typeof data['replicaGroup'] === 'string' || data['replicaGroup'] instanceof String)) {
            throw new Error("Expected the field `replicaGroup` to be a primitive type in the JSON string but got " + data['replicaGroup']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        if (data['restoreFileSpec']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['restoreFileSpec'])) {
                throw new Error("Expected the field `restoreFileSpec` to be an array in the JSON data but got " + data['restoreFileSpec']);
            }
            // validate the optional field `restoreFileSpec` (array)
            for (const item of data['restoreFileSpec']) {
                RestoreFileSpec.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['sourceAzureFileShareUri'] && !(typeof data['sourceAzureFileShareUri'] === 'string' || data['sourceAzureFileShareUri'] instanceof String)) {
            throw new Error("Expected the field `sourceAzureFileShareUri` to be a primitive type in the JSON string but got " + data['sourceAzureFileShareUri']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Pre Restore Azure file share uri.
 * @member {String} azureFileShareUri
 */
PreRestoreRequest.prototype['azureFileShareUri'] = undefined;

/**
 * Pre Restore backup metadata property bag.
 * @member {String} backupMetadataPropertyBag
 */
PreRestoreRequest.prototype['backupMetadataPropertyBag'] = undefined;

/**
 * Pre Restore partition.
 * @member {String} partition
 */
PreRestoreRequest.prototype['partition'] = undefined;

/**
 * Pre Restore pause wait for sync drain time period in seconds.
 * @member {Number} pauseWaitForSyncDrainTimePeriodInSeconds
 */
PreRestoreRequest.prototype['pauseWaitForSyncDrainTimePeriodInSeconds'] = undefined;

/**
 * Pre Restore replica group.
 * @member {String} replicaGroup
 */
PreRestoreRequest.prototype['replicaGroup'] = undefined;

/**
 * Pre Restore request id.
 * @member {String} requestId
 */
PreRestoreRequest.prototype['requestId'] = undefined;

/**
 * Pre Restore restore file spec array.
 * @member {Array.<module:model/RestoreFileSpec>} restoreFileSpec
 */
PreRestoreRequest.prototype['restoreFileSpec'] = undefined;

/**
 * Pre Restore Azure source azure file share uri.
 * @member {String} sourceAzureFileShareUri
 */
PreRestoreRequest.prototype['sourceAzureFileShareUri'] = undefined;

/**
 * Pre Restore Azure status.
 * @member {String} status
 */
PreRestoreRequest.prototype['status'] = undefined;






export default PreRestoreRequest;

