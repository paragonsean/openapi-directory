/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RegisteredServerCreateParametersProperties model module.
 * @module model/RegisteredServerCreateParametersProperties
 * @version 2019-06-01
 */
class RegisteredServerCreateParametersProperties {
    /**
     * Constructs a new <code>RegisteredServerCreateParametersProperties</code>.
     * @alias module:model/RegisteredServerCreateParametersProperties
     */
    constructor() { 
        
        RegisteredServerCreateParametersProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RegisteredServerCreateParametersProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegisteredServerCreateParametersProperties} obj Optional instance to populate.
     * @return {module:model/RegisteredServerCreateParametersProperties} The populated <code>RegisteredServerCreateParametersProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegisteredServerCreateParametersProperties();

            if (data.hasOwnProperty('agentVersion')) {
                obj['agentVersion'] = ApiClient.convertToType(data['agentVersion'], 'String');
            }
            if (data.hasOwnProperty('clusterId')) {
                obj['clusterId'] = ApiClient.convertToType(data['clusterId'], 'String');
            }
            if (data.hasOwnProperty('clusterName')) {
                obj['clusterName'] = ApiClient.convertToType(data['clusterName'], 'String');
            }
            if (data.hasOwnProperty('friendlyName')) {
                obj['friendlyName'] = ApiClient.convertToType(data['friendlyName'], 'String');
            }
            if (data.hasOwnProperty('lastHeartBeat')) {
                obj['lastHeartBeat'] = ApiClient.convertToType(data['lastHeartBeat'], 'String');
            }
            if (data.hasOwnProperty('serverCertificate')) {
                obj['serverCertificate'] = ApiClient.convertToType(data['serverCertificate'], 'String');
            }
            if (data.hasOwnProperty('serverId')) {
                obj['serverId'] = ApiClient.convertToType(data['serverId'], 'String');
            }
            if (data.hasOwnProperty('serverOSVersion')) {
                obj['serverOSVersion'] = ApiClient.convertToType(data['serverOSVersion'], 'String');
            }
            if (data.hasOwnProperty('serverRole')) {
                obj['serverRole'] = ApiClient.convertToType(data['serverRole'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegisteredServerCreateParametersProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegisteredServerCreateParametersProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['agentVersion'] && !(typeof data['agentVersion'] === 'string' || data['agentVersion'] instanceof String)) {
            throw new Error("Expected the field `agentVersion` to be a primitive type in the JSON string but got " + data['agentVersion']);
        }
        // ensure the json data is a string
        if (data['clusterId'] && !(typeof data['clusterId'] === 'string' || data['clusterId'] instanceof String)) {
            throw new Error("Expected the field `clusterId` to be a primitive type in the JSON string but got " + data['clusterId']);
        }
        // ensure the json data is a string
        if (data['clusterName'] && !(typeof data['clusterName'] === 'string' || data['clusterName'] instanceof String)) {
            throw new Error("Expected the field `clusterName` to be a primitive type in the JSON string but got " + data['clusterName']);
        }
        // ensure the json data is a string
        if (data['friendlyName'] && !(typeof data['friendlyName'] === 'string' || data['friendlyName'] instanceof String)) {
            throw new Error("Expected the field `friendlyName` to be a primitive type in the JSON string but got " + data['friendlyName']);
        }
        // ensure the json data is a string
        if (data['lastHeartBeat'] && !(typeof data['lastHeartBeat'] === 'string' || data['lastHeartBeat'] instanceof String)) {
            throw new Error("Expected the field `lastHeartBeat` to be a primitive type in the JSON string but got " + data['lastHeartBeat']);
        }
        // ensure the json data is a string
        if (data['serverCertificate'] && !(typeof data['serverCertificate'] === 'string' || data['serverCertificate'] instanceof String)) {
            throw new Error("Expected the field `serverCertificate` to be a primitive type in the JSON string but got " + data['serverCertificate']);
        }
        // ensure the json data is a string
        if (data['serverId'] && !(typeof data['serverId'] === 'string' || data['serverId'] instanceof String)) {
            throw new Error("Expected the field `serverId` to be a primitive type in the JSON string but got " + data['serverId']);
        }
        // ensure the json data is a string
        if (data['serverOSVersion'] && !(typeof data['serverOSVersion'] === 'string' || data['serverOSVersion'] instanceof String)) {
            throw new Error("Expected the field `serverOSVersion` to be a primitive type in the JSON string but got " + data['serverOSVersion']);
        }
        // ensure the json data is a string
        if (data['serverRole'] && !(typeof data['serverRole'] === 'string' || data['serverRole'] instanceof String)) {
            throw new Error("Expected the field `serverRole` to be a primitive type in the JSON string but got " + data['serverRole']);
        }

        return true;
    }


}



/**
 * Registered Server Agent Version
 * @member {String} agentVersion
 */
RegisteredServerCreateParametersProperties.prototype['agentVersion'] = undefined;

/**
 * Registered Server clusterId
 * @member {String} clusterId
 */
RegisteredServerCreateParametersProperties.prototype['clusterId'] = undefined;

/**
 * Registered Server clusterName
 * @member {String} clusterName
 */
RegisteredServerCreateParametersProperties.prototype['clusterName'] = undefined;

/**
 * Friendly Name
 * @member {String} friendlyName
 */
RegisteredServerCreateParametersProperties.prototype['friendlyName'] = undefined;

/**
 * Registered Server last heart beat
 * @member {String} lastHeartBeat
 */
RegisteredServerCreateParametersProperties.prototype['lastHeartBeat'] = undefined;

/**
 * Registered Server Certificate
 * @member {String} serverCertificate
 */
RegisteredServerCreateParametersProperties.prototype['serverCertificate'] = undefined;

/**
 * Registered Server serverId
 * @member {String} serverId
 */
RegisteredServerCreateParametersProperties.prototype['serverId'] = undefined;

/**
 * Registered Server OS Version
 * @member {String} serverOSVersion
 */
RegisteredServerCreateParametersProperties.prototype['serverOSVersion'] = undefined;

/**
 * Registered Server serverRole
 * @member {String} serverRole
 */
RegisteredServerCreateParametersProperties.prototype['serverRole'] = undefined;






export default RegisteredServerCreateParametersProperties;

