/*
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.BackupRequest;
import org.openapitools.client.model.PostBackupResponse;
import org.openapitools.client.model.PostRestoreRequest;
import org.openapitools.client.model.PreRestoreRequest;
import org.openapitools.client.model.StorageSyncError;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BackupRestoreApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BackupRestoreApi() {
        this(Configuration.getDefaultApiClient());
    }

    public BackupRestoreApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for cloudEndpointsPostBackup_1
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Backup request. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudEndpointsPostBackup_1Call(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, BackupRequest parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/postbackup"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "storageSyncServiceName" + "}", localVarApiClient.escapeString(storageSyncServiceName.toString()))
            .replace("{" + "syncGroupName" + "}", localVarApiClient.escapeString(syncGroupName.toString()))
            .replace("{" + "cloudEndpointName" + "}", localVarApiClient.escapeString(cloudEndpointName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudEndpointsPostBackup_1ValidateBeforeCall(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, BackupRequest parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling cloudEndpointsPostBackup_1(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling cloudEndpointsPostBackup_1(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling cloudEndpointsPostBackup_1(Async)");
        }

        // verify the required parameter 'storageSyncServiceName' is set
        if (storageSyncServiceName == null) {
            throw new ApiException("Missing the required parameter 'storageSyncServiceName' when calling cloudEndpointsPostBackup_1(Async)");
        }

        // verify the required parameter 'syncGroupName' is set
        if (syncGroupName == null) {
            throw new ApiException("Missing the required parameter 'syncGroupName' when calling cloudEndpointsPostBackup_1(Async)");
        }

        // verify the required parameter 'cloudEndpointName' is set
        if (cloudEndpointName == null) {
            throw new ApiException("Missing the required parameter 'cloudEndpointName' when calling cloudEndpointsPostBackup_1(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling cloudEndpointsPostBackup_1(Async)");
        }

        return cloudEndpointsPostBackup_1Call(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, _callback);

    }

    /**
     * 
     * Post Backup a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Backup request. (required)
     * @return PostBackupResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public PostBackupResponse cloudEndpointsPostBackup_1(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, BackupRequest parameters) throws ApiException {
        ApiResponse<PostBackupResponse> localVarResp = cloudEndpointsPostBackup_1WithHttpInfo(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Post Backup a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Backup request. (required)
     * @return ApiResponse&lt;PostBackupResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PostBackupResponse> cloudEndpointsPostBackup_1WithHttpInfo(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, BackupRequest parameters) throws ApiException {
        okhttp3.Call localVarCall = cloudEndpointsPostBackup_1ValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, null);
        Type localVarReturnType = new TypeToken<PostBackupResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Post Backup a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Backup request. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudEndpointsPostBackup_1Async(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, BackupRequest parameters, final ApiCallback<PostBackupResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudEndpointsPostBackup_1ValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, _callback);
        Type localVarReturnType = new TypeToken<PostBackupResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for cloudEndpointsPostRestore_1
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Cloud Endpoint object. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudEndpointsPostRestore_1Call(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, PostRestoreRequest parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/postrestore"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "storageSyncServiceName" + "}", localVarApiClient.escapeString(storageSyncServiceName.toString()))
            .replace("{" + "syncGroupName" + "}", localVarApiClient.escapeString(syncGroupName.toString()))
            .replace("{" + "cloudEndpointName" + "}", localVarApiClient.escapeString(cloudEndpointName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudEndpointsPostRestore_1ValidateBeforeCall(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, PostRestoreRequest parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling cloudEndpointsPostRestore_1(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling cloudEndpointsPostRestore_1(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling cloudEndpointsPostRestore_1(Async)");
        }

        // verify the required parameter 'storageSyncServiceName' is set
        if (storageSyncServiceName == null) {
            throw new ApiException("Missing the required parameter 'storageSyncServiceName' when calling cloudEndpointsPostRestore_1(Async)");
        }

        // verify the required parameter 'syncGroupName' is set
        if (syncGroupName == null) {
            throw new ApiException("Missing the required parameter 'syncGroupName' when calling cloudEndpointsPostRestore_1(Async)");
        }

        // verify the required parameter 'cloudEndpointName' is set
        if (cloudEndpointName == null) {
            throw new ApiException("Missing the required parameter 'cloudEndpointName' when calling cloudEndpointsPostRestore_1(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling cloudEndpointsPostRestore_1(Async)");
        }

        return cloudEndpointsPostRestore_1Call(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, _callback);

    }

    /**
     * 
     * Post Restore a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Cloud Endpoint object. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void cloudEndpointsPostRestore_1(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, PostRestoreRequest parameters) throws ApiException {
        cloudEndpointsPostRestore_1WithHttpInfo(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters);
    }

    /**
     * 
     * Post Restore a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Cloud Endpoint object. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> cloudEndpointsPostRestore_1WithHttpInfo(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, PostRestoreRequest parameters) throws ApiException {
        okhttp3.Call localVarCall = cloudEndpointsPostRestore_1ValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Post Restore a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Cloud Endpoint object. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudEndpointsPostRestore_1Async(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, PostRestoreRequest parameters, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudEndpointsPostRestore_1ValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for cloudEndpointsPreBackup_1
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Backup request. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudEndpointsPreBackup_1Call(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, BackupRequest parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/prebackup"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "storageSyncServiceName" + "}", localVarApiClient.escapeString(storageSyncServiceName.toString()))
            .replace("{" + "syncGroupName" + "}", localVarApiClient.escapeString(syncGroupName.toString()))
            .replace("{" + "cloudEndpointName" + "}", localVarApiClient.escapeString(cloudEndpointName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudEndpointsPreBackup_1ValidateBeforeCall(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, BackupRequest parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling cloudEndpointsPreBackup_1(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling cloudEndpointsPreBackup_1(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling cloudEndpointsPreBackup_1(Async)");
        }

        // verify the required parameter 'storageSyncServiceName' is set
        if (storageSyncServiceName == null) {
            throw new ApiException("Missing the required parameter 'storageSyncServiceName' when calling cloudEndpointsPreBackup_1(Async)");
        }

        // verify the required parameter 'syncGroupName' is set
        if (syncGroupName == null) {
            throw new ApiException("Missing the required parameter 'syncGroupName' when calling cloudEndpointsPreBackup_1(Async)");
        }

        // verify the required parameter 'cloudEndpointName' is set
        if (cloudEndpointName == null) {
            throw new ApiException("Missing the required parameter 'cloudEndpointName' when calling cloudEndpointsPreBackup_1(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling cloudEndpointsPreBackup_1(Async)");
        }

        return cloudEndpointsPreBackup_1Call(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, _callback);

    }

    /**
     * 
     * Pre Backup a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Backup request. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void cloudEndpointsPreBackup_1(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, BackupRequest parameters) throws ApiException {
        cloudEndpointsPreBackup_1WithHttpInfo(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters);
    }

    /**
     * 
     * Pre Backup a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Backup request. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> cloudEndpointsPreBackup_1WithHttpInfo(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, BackupRequest parameters) throws ApiException {
        okhttp3.Call localVarCall = cloudEndpointsPreBackup_1ValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Pre Backup a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Backup request. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudEndpointsPreBackup_1Async(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, BackupRequest parameters, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudEndpointsPreBackup_1ValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for cloudEndpointsPreRestore_1
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Cloud Endpoint object. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudEndpointsPreRestore_1Call(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, PreRestoreRequest parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/prerestore"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "storageSyncServiceName" + "}", localVarApiClient.escapeString(storageSyncServiceName.toString()))
            .replace("{" + "syncGroupName" + "}", localVarApiClient.escapeString(syncGroupName.toString()))
            .replace("{" + "cloudEndpointName" + "}", localVarApiClient.escapeString(cloudEndpointName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudEndpointsPreRestore_1ValidateBeforeCall(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, PreRestoreRequest parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling cloudEndpointsPreRestore_1(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling cloudEndpointsPreRestore_1(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling cloudEndpointsPreRestore_1(Async)");
        }

        // verify the required parameter 'storageSyncServiceName' is set
        if (storageSyncServiceName == null) {
            throw new ApiException("Missing the required parameter 'storageSyncServiceName' when calling cloudEndpointsPreRestore_1(Async)");
        }

        // verify the required parameter 'syncGroupName' is set
        if (syncGroupName == null) {
            throw new ApiException("Missing the required parameter 'syncGroupName' when calling cloudEndpointsPreRestore_1(Async)");
        }

        // verify the required parameter 'cloudEndpointName' is set
        if (cloudEndpointName == null) {
            throw new ApiException("Missing the required parameter 'cloudEndpointName' when calling cloudEndpointsPreRestore_1(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling cloudEndpointsPreRestore_1(Async)");
        }

        return cloudEndpointsPreRestore_1Call(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, _callback);

    }

    /**
     * 
     * Pre Restore a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Cloud Endpoint object. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void cloudEndpointsPreRestore_1(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, PreRestoreRequest parameters) throws ApiException {
        cloudEndpointsPreRestore_1WithHttpInfo(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters);
    }

    /**
     * 
     * Pre Restore a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Cloud Endpoint object. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> cloudEndpointsPreRestore_1WithHttpInfo(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, PreRestoreRequest parameters) throws ApiException {
        okhttp3.Call localVarCall = cloudEndpointsPreRestore_1ValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Pre Restore a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param parameters Body of Cloud Endpoint object. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Asynchronous Operation Status Location </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  * Location - Operation Status Location URI <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudEndpointsPreRestore_1Async(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, PreRestoreRequest parameters, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudEndpointsPreRestore_1ValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for cloudEndpointsRestoreheartbeat_1
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Restore Heartbeat Operation has ran successfully. </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudEndpointsRestoreheartbeat_1Call(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/restoreheartbeat"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "storageSyncServiceName" + "}", localVarApiClient.escapeString(storageSyncServiceName.toString()))
            .replace("{" + "syncGroupName" + "}", localVarApiClient.escapeString(syncGroupName.toString()))
            .replace("{" + "cloudEndpointName" + "}", localVarApiClient.escapeString(cloudEndpointName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call cloudEndpointsRestoreheartbeat_1ValidateBeforeCall(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling cloudEndpointsRestoreheartbeat_1(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling cloudEndpointsRestoreheartbeat_1(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling cloudEndpointsRestoreheartbeat_1(Async)");
        }

        // verify the required parameter 'storageSyncServiceName' is set
        if (storageSyncServiceName == null) {
            throw new ApiException("Missing the required parameter 'storageSyncServiceName' when calling cloudEndpointsRestoreheartbeat_1(Async)");
        }

        // verify the required parameter 'syncGroupName' is set
        if (syncGroupName == null) {
            throw new ApiException("Missing the required parameter 'syncGroupName' when calling cloudEndpointsRestoreheartbeat_1(Async)");
        }

        // verify the required parameter 'cloudEndpointName' is set
        if (cloudEndpointName == null) {
            throw new ApiException("Missing the required parameter 'cloudEndpointName' when calling cloudEndpointsRestoreheartbeat_1(Async)");
        }

        return cloudEndpointsRestoreheartbeat_1Call(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, _callback);

    }

    /**
     * 
     * Restore Heartbeat a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Restore Heartbeat Operation has ran successfully. </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void cloudEndpointsRestoreheartbeat_1(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName) throws ApiException {
        cloudEndpointsRestoreheartbeat_1WithHttpInfo(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName);
    }

    /**
     * 
     * Restore Heartbeat a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Restore Heartbeat Operation has ran successfully. </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> cloudEndpointsRestoreheartbeat_1WithHttpInfo(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName) throws ApiException {
        okhttp3.Call localVarCall = cloudEndpointsRestoreheartbeat_1ValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Restore Heartbeat a given CloudEndpoint.
     * @param subscriptionId The ID of the target subscription. (required)
     * @param resourceGroupName The name of the resource group. The name is case insensitive. (required)
     * @param apiVersion The API version to use for this operation. (required)
     * @param storageSyncServiceName Name of Storage Sync Service resource. (required)
     * @param syncGroupName Name of Sync Group resource. (required)
     * @param cloudEndpointName Name of Cloud Endpoint object. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Restore Heartbeat Operation has ran successfully. </td><td>  * x-ms-request-id - request id. <br>  * x-ms-correlation-request-id - correlation request id. <br>  </td></tr>
        <tr><td> 0 </td><td> Error message indicating why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call cloudEndpointsRestoreheartbeat_1Async(String subscriptionId, String resourceGroupName, String apiVersion, String storageSyncServiceName, String syncGroupName, String cloudEndpointName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = cloudEndpointsRestoreheartbeat_1ValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, syncGroupName, cloudEndpointName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
