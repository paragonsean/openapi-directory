/*
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RegisteredServer;
import org.openapitools.client.model.RegisteredServerArray;
import org.openapitools.client.model.RegisteredServerCreateParameters;
import org.openapitools.client.model.StorageSyncError;
import org.openapitools.client.model.TriggerRolloverRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RegisteredServerResourceApi
 */
@Disabled
public class RegisteredServerResourceApiTest {

    private final RegisteredServerResourceApi api = new RegisteredServerResourceApi();

    /**
     * Add a new registered server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registeredServersCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String serverId = null;
        RegisteredServerCreateParameters parameters = null;
        RegisteredServer response = api.registeredServersCreate(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, serverId, parameters);
        // TODO: test validations
    }

    /**
     * Delete the given registered server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registeredServersDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String serverId = null;
        api.registeredServersDelete(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, serverId);
        // TODO: test validations
    }

    /**
     * Get a given registered server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registeredServersGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String serverId = null;
        RegisteredServer response = api.registeredServersGet(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, serverId);
        // TODO: test validations
    }

    /**
     * Get a given registered server list.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registeredServersListByStorageSyncServiceTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        RegisteredServerArray response = api.registeredServersListByStorageSyncService(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName);
        // TODO: test validations
    }

    /**
     * Triggers Server certificate rollover.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registeredServersTriggerRolloverTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String storageSyncServiceName = null;
        String serverId = null;
        TriggerRolloverRequest parameters = null;
        api.registeredServersTriggerRollover(subscriptionId, resourceGroupName, apiVersion, storageSyncServiceName, serverId, parameters);
        // TODO: test validations
    }

}
