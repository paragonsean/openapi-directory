/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServerEndpointOfflineDataTransferState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServerEndpointOfflineDataTransferState::OAIServerEndpointOfflineDataTransferState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServerEndpointOfflineDataTransferState::OAIServerEndpointOfflineDataTransferState() {
    this->initializeModel();
}

OAIServerEndpointOfflineDataTransferState::~OAIServerEndpointOfflineDataTransferState() {}

void OAIServerEndpointOfflineDataTransferState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIServerEndpointOfflineDataTransferState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIServerEndpointOfflineDataTransferState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("InProgress", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServerEndpointOfflineDataTransferState::INPROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Stopping", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServerEndpointOfflineDataTransferState::STOPPING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NotRunning", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServerEndpointOfflineDataTransferState::NOTRUNNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Complete", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServerEndpointOfflineDataTransferState::COMPLETE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIServerEndpointOfflineDataTransferState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIServerEndpointOfflineDataTransferState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIServerEndpointOfflineDataTransferState::INPROGRESS:
            val = "InProgress";
            break;
        case eOAIServerEndpointOfflineDataTransferState::STOPPING:
            val = "Stopping";
            break;
        case eOAIServerEndpointOfflineDataTransferState::NOTRUNNING:
            val = "NotRunning";
            break;
        case eOAIServerEndpointOfflineDataTransferState::COMPLETE:
            val = "Complete";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIServerEndpointOfflineDataTransferState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIServerEndpointOfflineDataTransferState::eOAIServerEndpointOfflineDataTransferState OAIServerEndpointOfflineDataTransferState::getValue() const {
    return m_value;
}

void OAIServerEndpointOfflineDataTransferState::setValue(const OAIServerEndpointOfflineDataTransferState::eOAIServerEndpointOfflineDataTransferState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIServerEndpointOfflineDataTransferState::isSet() const {
    
    return m_value_isSet;
}

bool OAIServerEndpointOfflineDataTransferState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
