/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServerEndpointCloudTieringStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServerEndpointCloudTieringStatus::OAIServerEndpointCloudTieringStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServerEndpointCloudTieringStatus::OAIServerEndpointCloudTieringStatus() {
    this->initializeModel();
}

OAIServerEndpointCloudTieringStatus::~OAIServerEndpointCloudTieringStatus() {}

void OAIServerEndpointCloudTieringStatus::initializeModel() {

    m_health_isSet = false;
    m_health_isValid = false;

    m_last_cloud_tiering_result_isSet = false;
    m_last_cloud_tiering_result_isValid = false;

    m_last_success_timestamp_isSet = false;
    m_last_success_timestamp_isValid = false;

    m_last_updated_timestamp_isSet = false;
    m_last_updated_timestamp_isValid = false;
}

void OAIServerEndpointCloudTieringStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServerEndpointCloudTieringStatus::fromJsonObject(QJsonObject json) {

    m_health_isValid = ::OpenAPI::fromJsonValue(m_health, json[QString("health")]);
    m_health_isSet = !json[QString("health")].isNull() && m_health_isValid;

    m_last_cloud_tiering_result_isValid = ::OpenAPI::fromJsonValue(m_last_cloud_tiering_result, json[QString("lastCloudTieringResult")]);
    m_last_cloud_tiering_result_isSet = !json[QString("lastCloudTieringResult")].isNull() && m_last_cloud_tiering_result_isValid;

    m_last_success_timestamp_isValid = ::OpenAPI::fromJsonValue(m_last_success_timestamp, json[QString("lastSuccessTimestamp")]);
    m_last_success_timestamp_isSet = !json[QString("lastSuccessTimestamp")].isNull() && m_last_success_timestamp_isValid;

    m_last_updated_timestamp_isValid = ::OpenAPI::fromJsonValue(m_last_updated_timestamp, json[QString("lastUpdatedTimestamp")]);
    m_last_updated_timestamp_isSet = !json[QString("lastUpdatedTimestamp")].isNull() && m_last_updated_timestamp_isValid;
}

QString OAIServerEndpointCloudTieringStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServerEndpointCloudTieringStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_health.isSet()) {
        obj.insert(QString("health"), ::OpenAPI::toJsonValue(m_health));
    }
    if (m_last_cloud_tiering_result_isSet) {
        obj.insert(QString("lastCloudTieringResult"), ::OpenAPI::toJsonValue(m_last_cloud_tiering_result));
    }
    if (m_last_success_timestamp_isSet) {
        obj.insert(QString("lastSuccessTimestamp"), ::OpenAPI::toJsonValue(m_last_success_timestamp));
    }
    if (m_last_updated_timestamp_isSet) {
        obj.insert(QString("lastUpdatedTimestamp"), ::OpenAPI::toJsonValue(m_last_updated_timestamp));
    }
    return obj;
}

OAIServerEndpointCloudTieringHealthState OAIServerEndpointCloudTieringStatus::getHealth() const {
    return m_health;
}
void OAIServerEndpointCloudTieringStatus::setHealth(const OAIServerEndpointCloudTieringHealthState &health) {
    m_health = health;
    m_health_isSet = true;
}

bool OAIServerEndpointCloudTieringStatus::is_health_Set() const{
    return m_health_isSet;
}

bool OAIServerEndpointCloudTieringStatus::is_health_Valid() const{
    return m_health_isValid;
}

qint32 OAIServerEndpointCloudTieringStatus::getLastCloudTieringResult() const {
    return m_last_cloud_tiering_result;
}
void OAIServerEndpointCloudTieringStatus::setLastCloudTieringResult(const qint32 &last_cloud_tiering_result) {
    m_last_cloud_tiering_result = last_cloud_tiering_result;
    m_last_cloud_tiering_result_isSet = true;
}

bool OAIServerEndpointCloudTieringStatus::is_last_cloud_tiering_result_Set() const{
    return m_last_cloud_tiering_result_isSet;
}

bool OAIServerEndpointCloudTieringStatus::is_last_cloud_tiering_result_Valid() const{
    return m_last_cloud_tiering_result_isValid;
}

QDateTime OAIServerEndpointCloudTieringStatus::getLastSuccessTimestamp() const {
    return m_last_success_timestamp;
}
void OAIServerEndpointCloudTieringStatus::setLastSuccessTimestamp(const QDateTime &last_success_timestamp) {
    m_last_success_timestamp = last_success_timestamp;
    m_last_success_timestamp_isSet = true;
}

bool OAIServerEndpointCloudTieringStatus::is_last_success_timestamp_Set() const{
    return m_last_success_timestamp_isSet;
}

bool OAIServerEndpointCloudTieringStatus::is_last_success_timestamp_Valid() const{
    return m_last_success_timestamp_isValid;
}

QDateTime OAIServerEndpointCloudTieringStatus::getLastUpdatedTimestamp() const {
    return m_last_updated_timestamp;
}
void OAIServerEndpointCloudTieringStatus::setLastUpdatedTimestamp(const QDateTime &last_updated_timestamp) {
    m_last_updated_timestamp = last_updated_timestamp;
    m_last_updated_timestamp_isSet = true;
}

bool OAIServerEndpointCloudTieringStatus::is_last_updated_timestamp_Set() const{
    return m_last_updated_timestamp_isSet;
}

bool OAIServerEndpointCloudTieringStatus::is_last_updated_timestamp_Valid() const{
    return m_last_updated_timestamp_isValid;
}

bool OAIServerEndpointCloudTieringStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_health.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_cloud_tiering_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_success_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServerEndpointCloudTieringStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
