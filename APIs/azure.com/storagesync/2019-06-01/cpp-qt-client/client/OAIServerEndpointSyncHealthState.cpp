/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServerEndpointSyncHealthState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServerEndpointSyncHealthState::OAIServerEndpointSyncHealthState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServerEndpointSyncHealthState::OAIServerEndpointSyncHealthState() {
    this->initializeModel();
}

OAIServerEndpointSyncHealthState::~OAIServerEndpointSyncHealthState() {}

void OAIServerEndpointSyncHealthState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIServerEndpointSyncHealthState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIServerEndpointSyncHealthState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Healthy", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServerEndpointSyncHealthState::HEALTHY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Error", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServerEndpointSyncHealthState::ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SyncBlockedForRestore", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServerEndpointSyncHealthState::SYNCBLOCKEDFORRESTORE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SyncBlockedForChangeDetectionPostRestore", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServerEndpointSyncHealthState::SYNCBLOCKEDFORCHANGEDETECTIONPOSTRESTORE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NoActivity", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServerEndpointSyncHealthState::NOACTIVITY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIServerEndpointSyncHealthState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIServerEndpointSyncHealthState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIServerEndpointSyncHealthState::HEALTHY:
            val = "Healthy";
            break;
        case eOAIServerEndpointSyncHealthState::ERROR:
            val = "Error";
            break;
        case eOAIServerEndpointSyncHealthState::SYNCBLOCKEDFORRESTORE:
            val = "SyncBlockedForRestore";
            break;
        case eOAIServerEndpointSyncHealthState::SYNCBLOCKEDFORCHANGEDETECTIONPOSTRESTORE:
            val = "SyncBlockedForChangeDetectionPostRestore";
            break;
        case eOAIServerEndpointSyncHealthState::NOACTIVITY:
            val = "NoActivity";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIServerEndpointSyncHealthState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIServerEndpointSyncHealthState::eOAIServerEndpointSyncHealthState OAIServerEndpointSyncHealthState::getValue() const {
    return m_value;
}

void OAIServerEndpointSyncHealthState::setValue(const OAIServerEndpointSyncHealthState::eOAIServerEndpointSyncHealthState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIServerEndpointSyncHealthState::isSet() const {
    
    return m_value_isSet;
}

bool OAIServerEndpointSyncHealthState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
