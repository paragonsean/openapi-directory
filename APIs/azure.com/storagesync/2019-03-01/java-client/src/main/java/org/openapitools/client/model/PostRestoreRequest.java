/*
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RestoreFileSpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Post Restore Request
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:59:13.703960-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PostRestoreRequest {
  public static final String SERIALIZED_NAME_AZURE_FILE_SHARE_URI = "azureFileShareUri";
  @SerializedName(SERIALIZED_NAME_AZURE_FILE_SHARE_URI)
  private String azureFileShareUri;

  public static final String SERIALIZED_NAME_FAILED_FILE_LIST = "failedFileList";
  @SerializedName(SERIALIZED_NAME_FAILED_FILE_LIST)
  private String failedFileList;

  public static final String SERIALIZED_NAME_PARTITION = "partition";
  @SerializedName(SERIALIZED_NAME_PARTITION)
  private String partition;

  public static final String SERIALIZED_NAME_REPLICA_GROUP = "replicaGroup";
  @SerializedName(SERIALIZED_NAME_REPLICA_GROUP)
  private String replicaGroup;

  public static final String SERIALIZED_NAME_REQUEST_ID = "requestId";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public static final String SERIALIZED_NAME_RESTORE_FILE_SPEC = "restoreFileSpec";
  @SerializedName(SERIALIZED_NAME_RESTORE_FILE_SPEC)
  private List<RestoreFileSpec> restoreFileSpec = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE_AZURE_FILE_SHARE_URI = "sourceAzureFileShareUri";
  @SerializedName(SERIALIZED_NAME_SOURCE_AZURE_FILE_SHARE_URI)
  private String sourceAzureFileShareUri;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public PostRestoreRequest() {
  }

  public PostRestoreRequest azureFileShareUri(String azureFileShareUri) {
    this.azureFileShareUri = azureFileShareUri;
    return this;
  }

  /**
   * Post Restore Azure file share uri.
   * @return azureFileShareUri
   */
  @javax.annotation.Nullable
  public String getAzureFileShareUri() {
    return azureFileShareUri;
  }

  public void setAzureFileShareUri(String azureFileShareUri) {
    this.azureFileShareUri = azureFileShareUri;
  }


  public PostRestoreRequest failedFileList(String failedFileList) {
    this.failedFileList = failedFileList;
    return this;
  }

  /**
   * Post Restore Azure failed file list.
   * @return failedFileList
   */
  @javax.annotation.Nullable
  public String getFailedFileList() {
    return failedFileList;
  }

  public void setFailedFileList(String failedFileList) {
    this.failedFileList = failedFileList;
  }


  public PostRestoreRequest partition(String partition) {
    this.partition = partition;
    return this;
  }

  /**
   * Post Restore partition.
   * @return partition
   */
  @javax.annotation.Nullable
  public String getPartition() {
    return partition;
  }

  public void setPartition(String partition) {
    this.partition = partition;
  }


  public PostRestoreRequest replicaGroup(String replicaGroup) {
    this.replicaGroup = replicaGroup;
    return this;
  }

  /**
   * Post Restore replica group.
   * @return replicaGroup
   */
  @javax.annotation.Nullable
  public String getReplicaGroup() {
    return replicaGroup;
  }

  public void setReplicaGroup(String replicaGroup) {
    this.replicaGroup = replicaGroup;
  }


  public PostRestoreRequest requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * Post Restore request id.
   * @return requestId
   */
  @javax.annotation.Nullable
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public PostRestoreRequest restoreFileSpec(List<RestoreFileSpec> restoreFileSpec) {
    this.restoreFileSpec = restoreFileSpec;
    return this;
  }

  public PostRestoreRequest addRestoreFileSpecItem(RestoreFileSpec restoreFileSpecItem) {
    if (this.restoreFileSpec == null) {
      this.restoreFileSpec = new ArrayList<>();
    }
    this.restoreFileSpec.add(restoreFileSpecItem);
    return this;
  }

  /**
   * Post Restore restore file spec array.
   * @return restoreFileSpec
   */
  @javax.annotation.Nullable
  public List<RestoreFileSpec> getRestoreFileSpec() {
    return restoreFileSpec;
  }

  public void setRestoreFileSpec(List<RestoreFileSpec> restoreFileSpec) {
    this.restoreFileSpec = restoreFileSpec;
  }


  public PostRestoreRequest sourceAzureFileShareUri(String sourceAzureFileShareUri) {
    this.sourceAzureFileShareUri = sourceAzureFileShareUri;
    return this;
  }

  /**
   * Post Restore Azure source azure file share uri.
   * @return sourceAzureFileShareUri
   */
  @javax.annotation.Nullable
  public String getSourceAzureFileShareUri() {
    return sourceAzureFileShareUri;
  }

  public void setSourceAzureFileShareUri(String sourceAzureFileShareUri) {
    this.sourceAzureFileShareUri = sourceAzureFileShareUri;
  }


  public PostRestoreRequest status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Post Restore Azure status.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostRestoreRequest postRestoreRequest = (PostRestoreRequest) o;
    return Objects.equals(this.azureFileShareUri, postRestoreRequest.azureFileShareUri) &&
        Objects.equals(this.failedFileList, postRestoreRequest.failedFileList) &&
        Objects.equals(this.partition, postRestoreRequest.partition) &&
        Objects.equals(this.replicaGroup, postRestoreRequest.replicaGroup) &&
        Objects.equals(this.requestId, postRestoreRequest.requestId) &&
        Objects.equals(this.restoreFileSpec, postRestoreRequest.restoreFileSpec) &&
        Objects.equals(this.sourceAzureFileShareUri, postRestoreRequest.sourceAzureFileShareUri) &&
        Objects.equals(this.status, postRestoreRequest.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(azureFileShareUri, failedFileList, partition, replicaGroup, requestId, restoreFileSpec, sourceAzureFileShareUri, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostRestoreRequest {\n");
    sb.append("    azureFileShareUri: ").append(toIndentedString(azureFileShareUri)).append("\n");
    sb.append("    failedFileList: ").append(toIndentedString(failedFileList)).append("\n");
    sb.append("    partition: ").append(toIndentedString(partition)).append("\n");
    sb.append("    replicaGroup: ").append(toIndentedString(replicaGroup)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    restoreFileSpec: ").append(toIndentedString(restoreFileSpec)).append("\n");
    sb.append("    sourceAzureFileShareUri: ").append(toIndentedString(sourceAzureFileShareUri)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("azureFileShareUri");
    openapiFields.add("failedFileList");
    openapiFields.add("partition");
    openapiFields.add("replicaGroup");
    openapiFields.add("requestId");
    openapiFields.add("restoreFileSpec");
    openapiFields.add("sourceAzureFileShareUri");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PostRestoreRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PostRestoreRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PostRestoreRequest is not found in the empty JSON string", PostRestoreRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PostRestoreRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PostRestoreRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("azureFileShareUri") != null && !jsonObj.get("azureFileShareUri").isJsonNull()) && !jsonObj.get("azureFileShareUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `azureFileShareUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("azureFileShareUri").toString()));
      }
      if ((jsonObj.get("failedFileList") != null && !jsonObj.get("failedFileList").isJsonNull()) && !jsonObj.get("failedFileList").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failedFileList` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failedFileList").toString()));
      }
      if ((jsonObj.get("partition") != null && !jsonObj.get("partition").isJsonNull()) && !jsonObj.get("partition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partition").toString()));
      }
      if ((jsonObj.get("replicaGroup") != null && !jsonObj.get("replicaGroup").isJsonNull()) && !jsonObj.get("replicaGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `replicaGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("replicaGroup").toString()));
      }
      if ((jsonObj.get("requestId") != null && !jsonObj.get("requestId").isJsonNull()) && !jsonObj.get("requestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestId").toString()));
      }
      if (jsonObj.get("restoreFileSpec") != null && !jsonObj.get("restoreFileSpec").isJsonNull()) {
        JsonArray jsonArrayrestoreFileSpec = jsonObj.getAsJsonArray("restoreFileSpec");
        if (jsonArrayrestoreFileSpec != null) {
          // ensure the json data is an array
          if (!jsonObj.get("restoreFileSpec").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `restoreFileSpec` to be an array in the JSON string but got `%s`", jsonObj.get("restoreFileSpec").toString()));
          }

          // validate the optional field `restoreFileSpec` (array)
          for (int i = 0; i < jsonArrayrestoreFileSpec.size(); i++) {
            RestoreFileSpec.validateJsonElement(jsonArrayrestoreFileSpec.get(i));
          };
        }
      }
      if ((jsonObj.get("sourceAzureFileShareUri") != null && !jsonObj.get("sourceAzureFileShareUri").isJsonNull()) && !jsonObj.get("sourceAzureFileShareUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceAzureFileShareUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceAzureFileShareUri").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PostRestoreRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PostRestoreRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PostRestoreRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PostRestoreRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PostRestoreRequest>() {
           @Override
           public void write(JsonWriter out, PostRestoreRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PostRestoreRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PostRestoreRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PostRestoreRequest
   * @throws IOException if the JSON string is invalid with respect to PostRestoreRequest
   */
  public static PostRestoreRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PostRestoreRequest.class);
  }

  /**
   * Convert an instance of PostRestoreRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

