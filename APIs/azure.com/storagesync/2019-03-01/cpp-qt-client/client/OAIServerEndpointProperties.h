/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServerEndpointProperties.h
 *
 * ServerEndpoint Properties object.
 */

#ifndef OAIServerEndpointProperties_H
#define OAIServerEndpointProperties_H

#include <QJsonObject>

#include "OAIFeatureStatus.h"
#include "OAIServerEndpointSyncStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIServerEndpointSyncStatus;

class OAIServerEndpointProperties : public OAIObject {
public:
    OAIServerEndpointProperties();
    OAIServerEndpointProperties(QString json);
    ~OAIServerEndpointProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFeatureStatus getCloudTiering() const;
    void setCloudTiering(const OAIFeatureStatus &cloud_tiering);
    bool is_cloud_tiering_Set() const;
    bool is_cloud_tiering_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QString getLastOperationName() const;
    void setLastOperationName(const QString &last_operation_name);
    bool is_last_operation_name_Set() const;
    bool is_last_operation_name_Valid() const;

    QString getLastWorkflowId() const;
    void setLastWorkflowId(const QString &last_workflow_id);
    bool is_last_workflow_id_Set() const;
    bool is_last_workflow_id_Valid() const;

    OAIFeatureStatus getOfflineDataTransfer() const;
    void setOfflineDataTransfer(const OAIFeatureStatus &offline_data_transfer);
    bool is_offline_data_transfer_Set() const;
    bool is_offline_data_transfer_Valid() const;

    QString getOfflineDataTransferShareName() const;
    void setOfflineDataTransferShareName(const QString &offline_data_transfer_share_name);
    bool is_offline_data_transfer_share_name_Set() const;
    bool is_offline_data_transfer_share_name_Valid() const;

    QString getOfflineDataTransferStorageAccountResourceId() const;
    void setOfflineDataTransferStorageAccountResourceId(const QString &offline_data_transfer_storage_account_resource_id);
    bool is_offline_data_transfer_storage_account_resource_id_Set() const;
    bool is_offline_data_transfer_storage_account_resource_id_Valid() const;

    QString getOfflineDataTransferStorageAccountTenantId() const;
    void setOfflineDataTransferStorageAccountTenantId(const QString &offline_data_transfer_storage_account_tenant_id);
    bool is_offline_data_transfer_storage_account_tenant_id_Set() const;
    bool is_offline_data_transfer_storage_account_tenant_id_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getServerLocalPath() const;
    void setServerLocalPath(const QString &server_local_path);
    bool is_server_local_path_Set() const;
    bool is_server_local_path_Valid() const;

    QString getServerResourceId() const;
    void setServerResourceId(const QString &server_resource_id);
    bool is_server_resource_id_Set() const;
    bool is_server_resource_id_Valid() const;

    OAIServerEndpointSyncStatus getSyncStatus() const;
    void setSyncStatus(const OAIServerEndpointSyncStatus &sync_status);
    bool is_sync_status_Set() const;
    bool is_sync_status_Valid() const;

    qint32 getTierFilesOlderThanDays() const;
    void setTierFilesOlderThanDays(const qint32 &tier_files_older_than_days);
    bool is_tier_files_older_than_days_Set() const;
    bool is_tier_files_older_than_days_Valid() const;

    qint32 getVolumeFreeSpacePercent() const;
    void setVolumeFreeSpacePercent(const qint32 &volume_free_space_percent);
    bool is_volume_free_space_percent_Set() const;
    bool is_volume_free_space_percent_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFeatureStatus m_cloud_tiering;
    bool m_cloud_tiering_isSet;
    bool m_cloud_tiering_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QString m_last_operation_name;
    bool m_last_operation_name_isSet;
    bool m_last_operation_name_isValid;

    QString m_last_workflow_id;
    bool m_last_workflow_id_isSet;
    bool m_last_workflow_id_isValid;

    OAIFeatureStatus m_offline_data_transfer;
    bool m_offline_data_transfer_isSet;
    bool m_offline_data_transfer_isValid;

    QString m_offline_data_transfer_share_name;
    bool m_offline_data_transfer_share_name_isSet;
    bool m_offline_data_transfer_share_name_isValid;

    QString m_offline_data_transfer_storage_account_resource_id;
    bool m_offline_data_transfer_storage_account_resource_id_isSet;
    bool m_offline_data_transfer_storage_account_resource_id_isValid;

    QString m_offline_data_transfer_storage_account_tenant_id;
    bool m_offline_data_transfer_storage_account_tenant_id_isSet;
    bool m_offline_data_transfer_storage_account_tenant_id_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_server_local_path;
    bool m_server_local_path_isSet;
    bool m_server_local_path_isValid;

    QString m_server_resource_id;
    bool m_server_resource_id_isSet;
    bool m_server_resource_id_isValid;

    OAIServerEndpointSyncStatus m_sync_status;
    bool m_sync_status_isSet;
    bool m_sync_status_isValid;

    qint32 m_tier_files_older_than_days;
    bool m_tier_files_older_than_days_isSet;
    bool m_tier_files_older_than_days_isValid;

    qint32 m_volume_free_space_percent;
    bool m_volume_free_space_percent_isSet;
    bool m_volume_free_space_percent_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServerEndpointProperties)

#endif // OAIServerEndpointProperties_H
