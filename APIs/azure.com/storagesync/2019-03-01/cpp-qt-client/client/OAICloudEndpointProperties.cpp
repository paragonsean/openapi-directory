/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudEndpointProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudEndpointProperties::OAICloudEndpointProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudEndpointProperties::OAICloudEndpointProperties() {
    this->initializeModel();
}

OAICloudEndpointProperties::~OAICloudEndpointProperties() {}

void OAICloudEndpointProperties::initializeModel() {

    m_azure_file_share_name_isSet = false;
    m_azure_file_share_name_isValid = false;

    m_backup_enabled_isSet = false;
    m_backup_enabled_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_last_operation_name_isSet = false;
    m_last_operation_name_isValid = false;

    m_last_workflow_id_isSet = false;
    m_last_workflow_id_isValid = false;

    m_partnership_id_isSet = false;
    m_partnership_id_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_storage_account_resource_id_isSet = false;
    m_storage_account_resource_id_isValid = false;

    m_storage_account_tenant_id_isSet = false;
    m_storage_account_tenant_id_isValid = false;
}

void OAICloudEndpointProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudEndpointProperties::fromJsonObject(QJsonObject json) {

    m_azure_file_share_name_isValid = ::OpenAPI::fromJsonValue(m_azure_file_share_name, json[QString("azureFileShareName")]);
    m_azure_file_share_name_isSet = !json[QString("azureFileShareName")].isNull() && m_azure_file_share_name_isValid;

    m_backup_enabled_isValid = ::OpenAPI::fromJsonValue(m_backup_enabled, json[QString("backupEnabled")]);
    m_backup_enabled_isSet = !json[QString("backupEnabled")].isNull() && m_backup_enabled_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendlyName")]);
    m_friendly_name_isSet = !json[QString("friendlyName")].isNull() && m_friendly_name_isValid;

    m_last_operation_name_isValid = ::OpenAPI::fromJsonValue(m_last_operation_name, json[QString("lastOperationName")]);
    m_last_operation_name_isSet = !json[QString("lastOperationName")].isNull() && m_last_operation_name_isValid;

    m_last_workflow_id_isValid = ::OpenAPI::fromJsonValue(m_last_workflow_id, json[QString("lastWorkflowId")]);
    m_last_workflow_id_isSet = !json[QString("lastWorkflowId")].isNull() && m_last_workflow_id_isValid;

    m_partnership_id_isValid = ::OpenAPI::fromJsonValue(m_partnership_id, json[QString("partnershipId")]);
    m_partnership_id_isSet = !json[QString("partnershipId")].isNull() && m_partnership_id_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_storage_account_resource_id_isValid = ::OpenAPI::fromJsonValue(m_storage_account_resource_id, json[QString("storageAccountResourceId")]);
    m_storage_account_resource_id_isSet = !json[QString("storageAccountResourceId")].isNull() && m_storage_account_resource_id_isValid;

    m_storage_account_tenant_id_isValid = ::OpenAPI::fromJsonValue(m_storage_account_tenant_id, json[QString("storageAccountTenantId")]);
    m_storage_account_tenant_id_isSet = !json[QString("storageAccountTenantId")].isNull() && m_storage_account_tenant_id_isValid;
}

QString OAICloudEndpointProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudEndpointProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_azure_file_share_name_isSet) {
        obj.insert(QString("azureFileShareName"), ::OpenAPI::toJsonValue(m_azure_file_share_name));
    }
    if (m_backup_enabled_isSet) {
        obj.insert(QString("backupEnabled"), ::OpenAPI::toJsonValue(m_backup_enabled));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendlyName"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_last_operation_name_isSet) {
        obj.insert(QString("lastOperationName"), ::OpenAPI::toJsonValue(m_last_operation_name));
    }
    if (m_last_workflow_id_isSet) {
        obj.insert(QString("lastWorkflowId"), ::OpenAPI::toJsonValue(m_last_workflow_id));
    }
    if (m_partnership_id_isSet) {
        obj.insert(QString("partnershipId"), ::OpenAPI::toJsonValue(m_partnership_id));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_storage_account_resource_id_isSet) {
        obj.insert(QString("storageAccountResourceId"), ::OpenAPI::toJsonValue(m_storage_account_resource_id));
    }
    if (m_storage_account_tenant_id_isSet) {
        obj.insert(QString("storageAccountTenantId"), ::OpenAPI::toJsonValue(m_storage_account_tenant_id));
    }
    return obj;
}

QString OAICloudEndpointProperties::getAzureFileShareName() const {
    return m_azure_file_share_name;
}
void OAICloudEndpointProperties::setAzureFileShareName(const QString &azure_file_share_name) {
    m_azure_file_share_name = azure_file_share_name;
    m_azure_file_share_name_isSet = true;
}

bool OAICloudEndpointProperties::is_azure_file_share_name_Set() const{
    return m_azure_file_share_name_isSet;
}

bool OAICloudEndpointProperties::is_azure_file_share_name_Valid() const{
    return m_azure_file_share_name_isValid;
}

QString OAICloudEndpointProperties::getBackupEnabled() const {
    return m_backup_enabled;
}
void OAICloudEndpointProperties::setBackupEnabled(const QString &backup_enabled) {
    m_backup_enabled = backup_enabled;
    m_backup_enabled_isSet = true;
}

bool OAICloudEndpointProperties::is_backup_enabled_Set() const{
    return m_backup_enabled_isSet;
}

bool OAICloudEndpointProperties::is_backup_enabled_Valid() const{
    return m_backup_enabled_isValid;
}

QString OAICloudEndpointProperties::getFriendlyName() const {
    return m_friendly_name;
}
void OAICloudEndpointProperties::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAICloudEndpointProperties::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAICloudEndpointProperties::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAICloudEndpointProperties::getLastOperationName() const {
    return m_last_operation_name;
}
void OAICloudEndpointProperties::setLastOperationName(const QString &last_operation_name) {
    m_last_operation_name = last_operation_name;
    m_last_operation_name_isSet = true;
}

bool OAICloudEndpointProperties::is_last_operation_name_Set() const{
    return m_last_operation_name_isSet;
}

bool OAICloudEndpointProperties::is_last_operation_name_Valid() const{
    return m_last_operation_name_isValid;
}

QString OAICloudEndpointProperties::getLastWorkflowId() const {
    return m_last_workflow_id;
}
void OAICloudEndpointProperties::setLastWorkflowId(const QString &last_workflow_id) {
    m_last_workflow_id = last_workflow_id;
    m_last_workflow_id_isSet = true;
}

bool OAICloudEndpointProperties::is_last_workflow_id_Set() const{
    return m_last_workflow_id_isSet;
}

bool OAICloudEndpointProperties::is_last_workflow_id_Valid() const{
    return m_last_workflow_id_isValid;
}

QString OAICloudEndpointProperties::getPartnershipId() const {
    return m_partnership_id;
}
void OAICloudEndpointProperties::setPartnershipId(const QString &partnership_id) {
    m_partnership_id = partnership_id;
    m_partnership_id_isSet = true;
}

bool OAICloudEndpointProperties::is_partnership_id_Set() const{
    return m_partnership_id_isSet;
}

bool OAICloudEndpointProperties::is_partnership_id_Valid() const{
    return m_partnership_id_isValid;
}

QString OAICloudEndpointProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAICloudEndpointProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAICloudEndpointProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAICloudEndpointProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

QString OAICloudEndpointProperties::getStorageAccountResourceId() const {
    return m_storage_account_resource_id;
}
void OAICloudEndpointProperties::setStorageAccountResourceId(const QString &storage_account_resource_id) {
    m_storage_account_resource_id = storage_account_resource_id;
    m_storage_account_resource_id_isSet = true;
}

bool OAICloudEndpointProperties::is_storage_account_resource_id_Set() const{
    return m_storage_account_resource_id_isSet;
}

bool OAICloudEndpointProperties::is_storage_account_resource_id_Valid() const{
    return m_storage_account_resource_id_isValid;
}

QString OAICloudEndpointProperties::getStorageAccountTenantId() const {
    return m_storage_account_tenant_id;
}
void OAICloudEndpointProperties::setStorageAccountTenantId(const QString &storage_account_tenant_id) {
    m_storage_account_tenant_id = storage_account_tenant_id;
    m_storage_account_tenant_id_isSet = true;
}

bool OAICloudEndpointProperties::is_storage_account_tenant_id_Set() const{
    return m_storage_account_tenant_id_isSet;
}

bool OAICloudEndpointProperties::is_storage_account_tenant_id_Valid() const{
    return m_storage_account_tenant_id_isValid;
}

bool OAICloudEndpointProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_azure_file_share_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_backup_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_operation_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_workflow_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_partnership_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_account_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_account_tenant_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudEndpointProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
