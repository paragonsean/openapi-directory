/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISyncActivityStatus.h
 *
 * Sync Session status object.
 */

#ifndef OAISyncActivityStatus_H
#define OAISyncActivityStatus_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISyncActivityStatus : public OAIObject {
public:
    OAISyncActivityStatus();
    OAISyncActivityStatus(QString json);
    ~OAISyncActivityStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAppliedBytes() const;
    void setAppliedBytes(const qint64 &applied_bytes);
    bool is_applied_bytes_Set() const;
    bool is_applied_bytes_Valid() const;

    qint64 getAppliedItemCount() const;
    void setAppliedItemCount(const qint64 &applied_item_count);
    bool is_applied_item_count_Set() const;
    bool is_applied_item_count_Valid() const;

    qint64 getPerItemErrorCount() const;
    void setPerItemErrorCount(const qint64 &per_item_error_count);
    bool is_per_item_error_count_Set() const;
    bool is_per_item_error_count_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    qint64 getTotalBytes() const;
    void setTotalBytes(const qint64 &total_bytes);
    bool is_total_bytes_Set() const;
    bool is_total_bytes_Valid() const;

    qint64 getTotalItemCount() const;
    void setTotalItemCount(const qint64 &total_item_count);
    bool is_total_item_count_Set() const;
    bool is_total_item_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_applied_bytes;
    bool m_applied_bytes_isSet;
    bool m_applied_bytes_isValid;

    qint64 m_applied_item_count;
    bool m_applied_item_count_isSet;
    bool m_applied_item_count_isValid;

    qint64 m_per_item_error_count;
    bool m_per_item_error_count_isSet;
    bool m_per_item_error_count_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    qint64 m_total_bytes;
    bool m_total_bytes_isSet;
    bool m_total_bytes_isValid;

    qint64 m_total_item_count;
    bool m_total_item_count_isSet;
    bool m_total_item_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISyncActivityStatus)

#endif // OAISyncActivityStatus_H
