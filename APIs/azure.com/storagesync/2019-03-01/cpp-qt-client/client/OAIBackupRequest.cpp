/**
 * Microsoft Storage Sync
 * Microsoft Storage Sync Service API
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBackupRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBackupRequest::OAIBackupRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBackupRequest::OAIBackupRequest() {
    this->initializeModel();
}

OAIBackupRequest::~OAIBackupRequest() {}

void OAIBackupRequest::initializeModel() {

    m_azure_file_share_isSet = false;
    m_azure_file_share_isValid = false;
}

void OAIBackupRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBackupRequest::fromJsonObject(QJsonObject json) {

    m_azure_file_share_isValid = ::OpenAPI::fromJsonValue(m_azure_file_share, json[QString("azureFileShare")]);
    m_azure_file_share_isSet = !json[QString("azureFileShare")].isNull() && m_azure_file_share_isValid;
}

QString OAIBackupRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBackupRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_azure_file_share_isSet) {
        obj.insert(QString("azureFileShare"), ::OpenAPI::toJsonValue(m_azure_file_share));
    }
    return obj;
}

QString OAIBackupRequest::getAzureFileShare() const {
    return m_azure_file_share;
}
void OAIBackupRequest::setAzureFileShare(const QString &azure_file_share) {
    m_azure_file_share = azure_file_share;
    m_azure_file_share_isSet = true;
}

bool OAIBackupRequest::is_azure_file_share_Set() const{
    return m_azure_file_share_isSet;
}

bool OAIBackupRequest::is_azure_file_share_Valid() const{
    return m_azure_file_share_isValid;
}

bool OAIBackupRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_azure_file_share_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBackupRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
