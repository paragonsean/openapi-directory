# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TriggerRolloverRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server_certificate: str=None):
        """TriggerRolloverRequest - a model defined in OpenAPI

        :param server_certificate: The server_certificate of this TriggerRolloverRequest.
        """
        self.openapi_types = {
            'server_certificate': str
        }

        self.attribute_map = {
            'server_certificate': 'serverCertificate'
        }

        self._server_certificate = server_certificate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TriggerRolloverRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TriggerRolloverRequest of this TriggerRolloverRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server_certificate(self):
        """Gets the server_certificate of this TriggerRolloverRequest.

        Certificate Data

        :return: The server_certificate of this TriggerRolloverRequest.
        :rtype: str
        """
        return self._server_certificate

    @server_certificate.setter
    def server_certificate(self, server_certificate):
        """Sets the server_certificate of this TriggerRolloverRequest.

        Certificate Data

        :param server_certificate: The server_certificate of this TriggerRolloverRequest.
        :type server_certificate: str
        """

        self._server_certificate = server_certificate
