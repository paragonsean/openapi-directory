/**
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2018-06-01-privatepreview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CloudError from './model/CloudError';
import CloudErrorBody from './model/CloudErrorBody';
import PrivateLinkResource from './model/PrivateLinkResource';
import PrivateLinkResourceListResult from './model/PrivateLinkResourceListResult';
import PrivateLinkResourceProperties from './model/PrivateLinkResourceProperties';
import ProxyResource from './model/ProxyResource';
import Resource from './model/Resource';
import PrivateLinkResourcesApi from './api/PrivateLinkResourcesApi';


/**
* The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MySqlManagementClient = require('index'); // See note below*.
* var xxxSvc = new MySqlManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MySqlManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MySqlManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MySqlManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-06-01-privatepreview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CloudError model constructor.
     * @property {module:model/CloudError}
     */
    CloudError,

    /**
     * The CloudErrorBody model constructor.
     * @property {module:model/CloudErrorBody}
     */
    CloudErrorBody,

    /**
     * The PrivateLinkResource model constructor.
     * @property {module:model/PrivateLinkResource}
     */
    PrivateLinkResource,

    /**
     * The PrivateLinkResourceListResult model constructor.
     * @property {module:model/PrivateLinkResourceListResult}
     */
    PrivateLinkResourceListResult,

    /**
     * The PrivateLinkResourceProperties model constructor.
     * @property {module:model/PrivateLinkResourceProperties}
     */
    PrivateLinkResourceProperties,

    /**
     * The ProxyResource model constructor.
     * @property {module:model/ProxyResource}
     */
    ProxyResource,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
    * The PrivateLinkResourcesApi service constructor.
    * @property {module:api/PrivateLinkResourcesApi}
    */
    PrivateLinkResourcesApi
};
