/**
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import PrivateLinkResource from '../model/PrivateLinkResource';
import PrivateLinkResourceListResult from '../model/PrivateLinkResourceListResult';

/**
* PrivateLinkResources service.
* @module api/PrivateLinkResourcesApi
* @version 2018-06-01
*/
export default class PrivateLinkResourcesApi {

    /**
    * Constructs a new PrivateLinkResourcesApi. 
    * @alias module:api/PrivateLinkResourcesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the privateLinkResourcesGet operation.
     * @callback module:api/PrivateLinkResourcesApi~privateLinkResourcesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PrivateLinkResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a private link resource for MySQL server.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} serverName The name of the server.
     * @param {String} groupName The name of the private link resource.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:api/PrivateLinkResourcesApi~privateLinkResourcesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PrivateLinkResource}
     */
    privateLinkResourcesGet(resourceGroupName, serverName, groupName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateLinkResourcesGet");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling privateLinkResourcesGet");
      }
      // verify the required parameter 'groupName' is set
      if (groupName === undefined || groupName === null) {
        throw new Error("Missing the required parameter 'groupName' when calling privateLinkResourcesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateLinkResourcesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateLinkResourcesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'groupName': groupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PrivateLinkResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateLinkResources/{groupName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the privateLinkResourcesListByServer operation.
     * @callback module:api/PrivateLinkResourcesApi~privateLinkResourcesListByServerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PrivateLinkResourceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the private link resources for MySQL server.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} serverName The name of the server.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:api/PrivateLinkResourcesApi~privateLinkResourcesListByServerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PrivateLinkResourceListResult}
     */
    privateLinkResourcesListByServer(resourceGroupName, serverName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling privateLinkResourcesListByServer");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling privateLinkResourcesListByServer");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling privateLinkResourcesListByServer");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling privateLinkResourcesListByServer");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PrivateLinkResourceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/privateLinkResources', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
