/**
 * Microsoft.Support
 * Microsoft Azure Support Resource Provider.
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQuotaTicketDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQuotaTicketDetails::OAIQuotaTicketDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQuotaTicketDetails::OAIQuotaTicketDetails() {
    this->initializeModel();
}

OAIQuotaTicketDetails::~OAIQuotaTicketDetails() {}

void OAIQuotaTicketDetails::initializeModel() {

    m_quota_change_request_sub_type_isSet = false;
    m_quota_change_request_sub_type_isValid = false;

    m_quota_change_request_version_isSet = false;
    m_quota_change_request_version_isValid = false;

    m_quota_change_requests_isSet = false;
    m_quota_change_requests_isValid = false;
}

void OAIQuotaTicketDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQuotaTicketDetails::fromJsonObject(QJsonObject json) {

    m_quota_change_request_sub_type_isValid = ::OpenAPI::fromJsonValue(m_quota_change_request_sub_type, json[QString("quotaChangeRequestSubType")]);
    m_quota_change_request_sub_type_isSet = !json[QString("quotaChangeRequestSubType")].isNull() && m_quota_change_request_sub_type_isValid;

    m_quota_change_request_version_isValid = ::OpenAPI::fromJsonValue(m_quota_change_request_version, json[QString("quotaChangeRequestVersion")]);
    m_quota_change_request_version_isSet = !json[QString("quotaChangeRequestVersion")].isNull() && m_quota_change_request_version_isValid;

    m_quota_change_requests_isValid = ::OpenAPI::fromJsonValue(m_quota_change_requests, json[QString("quotaChangeRequests")]);
    m_quota_change_requests_isSet = !json[QString("quotaChangeRequests")].isNull() && m_quota_change_requests_isValid;
}

QString OAIQuotaTicketDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQuotaTicketDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_quota_change_request_sub_type_isSet) {
        obj.insert(QString("quotaChangeRequestSubType"), ::OpenAPI::toJsonValue(m_quota_change_request_sub_type));
    }
    if (m_quota_change_request_version_isSet) {
        obj.insert(QString("quotaChangeRequestVersion"), ::OpenAPI::toJsonValue(m_quota_change_request_version));
    }
    if (m_quota_change_requests.size() > 0) {
        obj.insert(QString("quotaChangeRequests"), ::OpenAPI::toJsonValue(m_quota_change_requests));
    }
    return obj;
}

QString OAIQuotaTicketDetails::getQuotaChangeRequestSubType() const {
    return m_quota_change_request_sub_type;
}
void OAIQuotaTicketDetails::setQuotaChangeRequestSubType(const QString &quota_change_request_sub_type) {
    m_quota_change_request_sub_type = quota_change_request_sub_type;
    m_quota_change_request_sub_type_isSet = true;
}

bool OAIQuotaTicketDetails::is_quota_change_request_sub_type_Set() const{
    return m_quota_change_request_sub_type_isSet;
}

bool OAIQuotaTicketDetails::is_quota_change_request_sub_type_Valid() const{
    return m_quota_change_request_sub_type_isValid;
}

QString OAIQuotaTicketDetails::getQuotaChangeRequestVersion() const {
    return m_quota_change_request_version;
}
void OAIQuotaTicketDetails::setQuotaChangeRequestVersion(const QString &quota_change_request_version) {
    m_quota_change_request_version = quota_change_request_version;
    m_quota_change_request_version_isSet = true;
}

bool OAIQuotaTicketDetails::is_quota_change_request_version_Set() const{
    return m_quota_change_request_version_isSet;
}

bool OAIQuotaTicketDetails::is_quota_change_request_version_Valid() const{
    return m_quota_change_request_version_isValid;
}

QList<OAIQuotaChangeRequest> OAIQuotaTicketDetails::getQuotaChangeRequests() const {
    return m_quota_change_requests;
}
void OAIQuotaTicketDetails::setQuotaChangeRequests(const QList<OAIQuotaChangeRequest> &quota_change_requests) {
    m_quota_change_requests = quota_change_requests;
    m_quota_change_requests_isSet = true;
}

bool OAIQuotaTicketDetails::is_quota_change_requests_Set() const{
    return m_quota_change_requests_isSet;
}

bool OAIQuotaTicketDetails::is_quota_change_requests_Valid() const{
    return m_quota_change_requests_isValid;
}

bool OAIQuotaTicketDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_quota_change_request_sub_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota_change_request_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota_change_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQuotaTicketDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
