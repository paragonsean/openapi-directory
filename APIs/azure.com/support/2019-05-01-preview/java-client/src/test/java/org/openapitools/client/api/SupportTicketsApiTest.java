/*
 * Microsoft.Support
 * Microsoft Azure Support Resource Provider.
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CheckNameAvailabilityInput;
import org.openapitools.client.model.CheckNameAvailabilityOutput;
import org.openapitools.client.model.ExceptionResponse;
import org.openapitools.client.model.SupportTicketDetails;
import org.openapitools.client.model.SupportTicketsListResult;
import org.openapitools.client.model.UpdateSupportTicket;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SupportTicketsApi
 */
@Disabled
public class SupportTicketsApiTest {

    private final SupportTicketsApi api = new SupportTicketsApi();

    /**
     * Check the availability of a resource name. This API should to be used to check the uniqueness of the name for support ticket creation for the selected subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void supportTicketsCheckNameAvailabilityTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        CheckNameAvailabilityInput checkNameAvailabilityInput = null;
        CheckNameAvailabilityOutput response = api.supportTicketsCheckNameAvailability(subscriptionId, apiVersion, checkNameAvailabilityInput);
        // TODO: test validations
    }

    /**
     * Creates a new support ticket for Quota increase, Technical, Billing, and Subscription Management issues for the specified subscription. &lt;br/&gt;&lt;br/&gt;A paid technical support plan is required to create a support ticket using this API. &lt;a href&#x3D;&#39;https://aka.ms/supportticketAPI&#39;&gt;Learn more&lt;/a&gt; &lt;br/&gt;&lt;br/&gt; Use the Services API to map the right Service Id to the issue type. For example: For billing tickets set *serviceId* to *&#39;/providers/Microsoft.Support/services/517f2da6-78fd-0498-4e22-ad26996b1dfc&#39;*. &lt;br/&gt; For Technical issues, the Service id will map to the Azure service you want to raise a support ticket for. &lt;br/&gt;&lt;br/&gt;Always call the Services and ProblemClassifications API to get the most recent set of services and problem categories required for support ticket creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void supportTicketsCreateTest() throws ApiException {
        String supportTicketName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SupportTicketDetails createSupportTicketParameters = null;
        SupportTicketDetails response = api.supportTicketsCreate(supportTicketName, subscriptionId, apiVersion, createSupportTicketParameters);
        // TODO: test validations
    }

    /**
     * Gets details for a specific support ticket in an Azure subscription. &lt;br/&gt;&lt;br/&gt;Support ticket data is available for 12 months after ticket creation. If a ticket was created more than 12 months ago, a request for data might cause an error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void supportTicketsGetTest() throws ApiException {
        String supportTicketName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SupportTicketDetails response = api.supportTicketsGet(supportTicketName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all the support tickets for an Azure subscription. &lt;br/&gt;&lt;br/&gt;You can also filter the support tickets by &lt;i&gt;Status&lt;/i&gt; or &lt;i&gt;CreatedDate&lt;/i&gt; using the $filter parameter. Output will be a paged result with &lt;i&gt;nextLink&lt;/i&gt;, using which you can retrieve the next set of support tickets. &lt;br/&gt;&lt;br/&gt;Support ticket data is available for 12 months after ticket creation. If a ticket was created more than 12 months ago, a request for data might cause an error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void supportTicketsListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        Integer $top = null;
        String $filter = null;
        SupportTicketsListResult response = api.supportTicketsList(subscriptionId, apiVersion, $top, $filter);
        // TODO: test validations
    }

    /**
     * This API allows you to update the severity level or your contact information in the support ticket. &lt;br/&gt;&lt;br/&gt; Note: The severity levels cannot be changed if a support ticket is actively being worked upon by an Azure support engineer. In such a case, contact your support engineer to request severity update by adding a new communication using the Communications API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void supportTicketsUpdateTest() throws ApiException {
        String supportTicketName = null;
        String subscriptionId = null;
        String apiVersion = null;
        UpdateSupportTicket updateSupportTicket = null;
        SupportTicketDetails response = api.supportTicketsUpdate(supportTicketName, subscriptionId, apiVersion, updateSupportTicket);
        // TODO: test validations
    }

}
