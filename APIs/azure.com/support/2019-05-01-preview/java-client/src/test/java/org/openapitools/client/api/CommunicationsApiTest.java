/*
 * Microsoft.Support
 * Microsoft Azure Support Resource Provider.
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CheckNameAvailabilityInput;
import org.openapitools.client.model.CheckNameAvailabilityOutput;
import org.openapitools.client.model.CommunicationDetails;
import org.openapitools.client.model.CommunicationsListResult;
import org.openapitools.client.model.ExceptionResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CommunicationsApi
 */
@Disabled
public class CommunicationsApiTest {

    private final CommunicationsApi api = new CommunicationsApi();

    /**
     * Check the availability of a resource name. This API should to be used to check the uniqueness of the name for adding a new communication to the support ticket.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void communicationsCheckNameAvailabilityTest() throws ApiException {
        String supportTicketName = null;
        String subscriptionId = null;
        String apiVersion = null;
        CheckNameAvailabilityInput checkNameAvailabilityInput = null;
        CheckNameAvailabilityOutput response = api.communicationsCheckNameAvailability(supportTicketName, subscriptionId, apiVersion, checkNameAvailabilityInput);
        // TODO: test validations
    }

    /**
     * Adds a new customer communication to an Azure support ticket. Adding attachments are not currently supported via the API. &lt;br/&gt;To add a file to a support ticket, visit the &lt;a target&#x3D;&#39;_blank&#39; href&#x3D;&#39;https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/managesupportrequest&#39;&gt;Manage support ticket&lt;/a&gt; page in the Azure portal, select the support ticket, and use the file upload control to add a new file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void communicationsCreateTest() throws ApiException {
        String supportTicketName = null;
        String communicationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        CommunicationDetails createCommunicationParameters = null;
        CommunicationDetails response = api.communicationsCreate(supportTicketName, communicationName, subscriptionId, apiVersion, createCommunicationParameters);
        // TODO: test validations
    }

    /**
     * Returns details of a specific communication in a support ticket.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void communicationsGetTest() throws ApiException {
        String supportTicketName = null;
        String communicationName = null;
        String subscriptionId = null;
        String apiVersion = null;
        CommunicationDetails response = api.communicationsGet(supportTicketName, communicationName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all communications (attachments not included) for a support ticket. &lt;br/&gt;&lt;/br&gt; You can also filter support ticket communications by &lt;i&gt;CreatedDate&lt;/i&gt;ï¿½or &lt;i&gt;CommunicationType&lt;/i&gt; using the $filter parameter. The only type of communication supported today is &lt;i&gt;Web&lt;/i&gt;. Output will be a paged result with &lt;i&gt;nextLink&lt;/i&gt;, using which you can retrieve the next set of Communication results. &lt;br/&gt;&lt;br/&gt; Support ticket data is available for 12 months after ticket creation. If a ticket was created more than 12 months ago, a request for data might cause an error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void communicationsListTest() throws ApiException {
        String supportTicketName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Integer $top = null;
        String $filter = null;
        CommunicationsListResult response = api.communicationsList(supportTicketName, subscriptionId, apiVersion, $top, $filter);
        // TODO: test validations
    }

}
