/*
 * Microsoft.Support
 * Microsoft Azure Support Resource Provider.
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.QuotaChangeRequest;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Additional set of information required for quota increase support ticket for certain quota types, e.g.: Virtual machine cores. Get complete details about Quota payload support request along with examples at &lt;a target&#x3D;&#39;&#39; href&#x3D;&#39;https://aka.ms/supportrpquotarequestpayload&#39;&gt;Support quota request&lt;/a&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:51:04.189658-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class QuotaTicketDetails {
  public static final String SERIALIZED_NAME_QUOTA_CHANGE_REQUEST_SUB_TYPE = "quotaChangeRequestSubType";
  @SerializedName(SERIALIZED_NAME_QUOTA_CHANGE_REQUEST_SUB_TYPE)
  private String quotaChangeRequestSubType;

  public static final String SERIALIZED_NAME_QUOTA_CHANGE_REQUEST_VERSION = "quotaChangeRequestVersion";
  @SerializedName(SERIALIZED_NAME_QUOTA_CHANGE_REQUEST_VERSION)
  private String quotaChangeRequestVersion;

  public static final String SERIALIZED_NAME_QUOTA_CHANGE_REQUESTS = "quotaChangeRequests";
  @SerializedName(SERIALIZED_NAME_QUOTA_CHANGE_REQUESTS)
  private List<QuotaChangeRequest> quotaChangeRequests = new ArrayList<>();

  public QuotaTicketDetails() {
  }

  public QuotaTicketDetails quotaChangeRequestSubType(String quotaChangeRequestSubType) {
    this.quotaChangeRequestSubType = quotaChangeRequestSubType;
    return this;
  }

  /**
   * Required for certain quota types when there is a sub type that you are requesting quota increase for. Example: Batch
   * @return quotaChangeRequestSubType
   */
  @javax.annotation.Nullable
  public String getQuotaChangeRequestSubType() {
    return quotaChangeRequestSubType;
  }

  public void setQuotaChangeRequestSubType(String quotaChangeRequestSubType) {
    this.quotaChangeRequestSubType = quotaChangeRequestSubType;
  }


  public QuotaTicketDetails quotaChangeRequestVersion(String quotaChangeRequestVersion) {
    this.quotaChangeRequestVersion = quotaChangeRequestVersion;
    return this;
  }

  /**
   * Quota change request version
   * @return quotaChangeRequestVersion
   */
  @javax.annotation.Nullable
  public String getQuotaChangeRequestVersion() {
    return quotaChangeRequestVersion;
  }

  public void setQuotaChangeRequestVersion(String quotaChangeRequestVersion) {
    this.quotaChangeRequestVersion = quotaChangeRequestVersion;
  }


  public QuotaTicketDetails quotaChangeRequests(List<QuotaChangeRequest> quotaChangeRequests) {
    this.quotaChangeRequests = quotaChangeRequests;
    return this;
  }

  public QuotaTicketDetails addQuotaChangeRequestsItem(QuotaChangeRequest quotaChangeRequestsItem) {
    if (this.quotaChangeRequests == null) {
      this.quotaChangeRequests = new ArrayList<>();
    }
    this.quotaChangeRequests.add(quotaChangeRequestsItem);
    return this;
  }

  /**
   * This property is required for providing the region and new quota limits.
   * @return quotaChangeRequests
   */
  @javax.annotation.Nullable
  public List<QuotaChangeRequest> getQuotaChangeRequests() {
    return quotaChangeRequests;
  }

  public void setQuotaChangeRequests(List<QuotaChangeRequest> quotaChangeRequests) {
    this.quotaChangeRequests = quotaChangeRequests;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuotaTicketDetails quotaTicketDetails = (QuotaTicketDetails) o;
    return Objects.equals(this.quotaChangeRequestSubType, quotaTicketDetails.quotaChangeRequestSubType) &&
        Objects.equals(this.quotaChangeRequestVersion, quotaTicketDetails.quotaChangeRequestVersion) &&
        Objects.equals(this.quotaChangeRequests, quotaTicketDetails.quotaChangeRequests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quotaChangeRequestSubType, quotaChangeRequestVersion, quotaChangeRequests);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuotaTicketDetails {\n");
    sb.append("    quotaChangeRequestSubType: ").append(toIndentedString(quotaChangeRequestSubType)).append("\n");
    sb.append("    quotaChangeRequestVersion: ").append(toIndentedString(quotaChangeRequestVersion)).append("\n");
    sb.append("    quotaChangeRequests: ").append(toIndentedString(quotaChangeRequests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("quotaChangeRequestSubType");
    openapiFields.add("quotaChangeRequestVersion");
    openapiFields.add("quotaChangeRequests");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QuotaTicketDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuotaTicketDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuotaTicketDetails is not found in the empty JSON string", QuotaTicketDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuotaTicketDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuotaTicketDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("quotaChangeRequestSubType") != null && !jsonObj.get("quotaChangeRequestSubType").isJsonNull()) && !jsonObj.get("quotaChangeRequestSubType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quotaChangeRequestSubType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quotaChangeRequestSubType").toString()));
      }
      if ((jsonObj.get("quotaChangeRequestVersion") != null && !jsonObj.get("quotaChangeRequestVersion").isJsonNull()) && !jsonObj.get("quotaChangeRequestVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quotaChangeRequestVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quotaChangeRequestVersion").toString()));
      }
      if (jsonObj.get("quotaChangeRequests") != null && !jsonObj.get("quotaChangeRequests").isJsonNull()) {
        JsonArray jsonArrayquotaChangeRequests = jsonObj.getAsJsonArray("quotaChangeRequests");
        if (jsonArrayquotaChangeRequests != null) {
          // ensure the json data is an array
          if (!jsonObj.get("quotaChangeRequests").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `quotaChangeRequests` to be an array in the JSON string but got `%s`", jsonObj.get("quotaChangeRequests").toString()));
          }

          // validate the optional field `quotaChangeRequests` (array)
          for (int i = 0; i < jsonArrayquotaChangeRequests.size(); i++) {
            QuotaChangeRequest.validateJsonElement(jsonArrayquotaChangeRequests.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuotaTicketDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuotaTicketDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuotaTicketDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuotaTicketDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<QuotaTicketDetails>() {
           @Override
           public void write(JsonWriter out, QuotaTicketDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuotaTicketDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QuotaTicketDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QuotaTicketDetails
   * @throws IOException if the JSON string is invalid with respect to QuotaTicketDetails
   */
  public static QuotaTicketDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuotaTicketDetails.class);
  }

  /**
   * Convert an instance of QuotaTicketDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

