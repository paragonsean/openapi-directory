/**
 * Microsoft.Support
 * Microsoft Azure Support Resource Provider.
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateContactProfile model module.
 * @module model/UpdateContactProfile
 * @version 2019-05-01-preview
 */
class UpdateContactProfile {
    /**
     * Constructs a new <code>UpdateContactProfile</code>.
     * Contact information associated with the support ticket.
     * @alias module:model/UpdateContactProfile
     */
    constructor() { 
        
        UpdateContactProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateContactProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateContactProfile} obj Optional instance to populate.
     * @return {module:model/UpdateContactProfile} The populated <code>UpdateContactProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateContactProfile();

            if (data.hasOwnProperty('additionalEmailAddresses')) {
                obj['additionalEmailAddresses'] = ApiClient.convertToType(data['additionalEmailAddresses'], ['String']);
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('preferredContactMethod')) {
                obj['preferredContactMethod'] = ApiClient.convertToType(data['preferredContactMethod'], 'String');
            }
            if (data.hasOwnProperty('preferredSupportLanguage')) {
                obj['preferredSupportLanguage'] = ApiClient.convertToType(data['preferredSupportLanguage'], 'String');
            }
            if (data.hasOwnProperty('preferredTimeZone')) {
                obj['preferredTimeZone'] = ApiClient.convertToType(data['preferredTimeZone'], 'String');
            }
            if (data.hasOwnProperty('primaryEmailAddress')) {
                obj['primaryEmailAddress'] = ApiClient.convertToType(data['primaryEmailAddress'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateContactProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateContactProfile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['additionalEmailAddresses'])) {
            throw new Error("Expected the field `additionalEmailAddresses` to be an array in the JSON data but got " + data['additionalEmailAddresses']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }
        // ensure the json data is a string
        if (data['phoneNumber'] && !(typeof data['phoneNumber'] === 'string' || data['phoneNumber'] instanceof String)) {
            throw new Error("Expected the field `phoneNumber` to be a primitive type in the JSON string but got " + data['phoneNumber']);
        }
        // ensure the json data is a string
        if (data['preferredContactMethod'] && !(typeof data['preferredContactMethod'] === 'string' || data['preferredContactMethod'] instanceof String)) {
            throw new Error("Expected the field `preferredContactMethod` to be a primitive type in the JSON string but got " + data['preferredContactMethod']);
        }
        // ensure the json data is a string
        if (data['preferredSupportLanguage'] && !(typeof data['preferredSupportLanguage'] === 'string' || data['preferredSupportLanguage'] instanceof String)) {
            throw new Error("Expected the field `preferredSupportLanguage` to be a primitive type in the JSON string but got " + data['preferredSupportLanguage']);
        }
        // ensure the json data is a string
        if (data['preferredTimeZone'] && !(typeof data['preferredTimeZone'] === 'string' || data['preferredTimeZone'] instanceof String)) {
            throw new Error("Expected the field `preferredTimeZone` to be a primitive type in the JSON string but got " + data['preferredTimeZone']);
        }
        // ensure the json data is a string
        if (data['primaryEmailAddress'] && !(typeof data['primaryEmailAddress'] === 'string' || data['primaryEmailAddress'] instanceof String)) {
            throw new Error("Expected the field `primaryEmailAddress` to be a primitive type in the JSON string but got " + data['primaryEmailAddress']);
        }

        return true;
    }


}



/**
 * Email addresses listed will be copied on any correspondence about the support ticket
 * @member {Array.<String>} additionalEmailAddresses
 */
UpdateContactProfile.prototype['additionalEmailAddresses'] = undefined;

/**
 * Country of the user. This is the ISO 3166-1 alpha-3 code.
 * @member {String} country
 */
UpdateContactProfile.prototype['country'] = undefined;

/**
 * First name
 * @member {String} firstName
 */
UpdateContactProfile.prototype['firstName'] = undefined;

/**
 * Last name
 * @member {String} lastName
 */
UpdateContactProfile.prototype['lastName'] = undefined;

/**
 * Phone number. This is required if preferred contact method is phone.
 * @member {String} phoneNumber
 */
UpdateContactProfile.prototype['phoneNumber'] = undefined;

/**
 * Preferred contact method
 * @member {module:model/UpdateContactProfile.PreferredContactMethodEnum} preferredContactMethod
 */
UpdateContactProfile.prototype['preferredContactMethod'] = undefined;

/**
 * Preferred language of support from Azure. Support languages vary based on the severity you choose for your support ticket. Learn more at <a  target='_blank' href='https://azure.microsoft.com/support/plans/response/'>Azure Severity and responsiveness</a>. Use the standard language-country code. Valid values are 'en-us' for English, 'zh-hans' for Chinese, 'es-es' for Spanish, 'fr-fr' for French, 'ja-jp' for Japanese, 'ko-kr' for Korean, 'ru-ru' for Russian, 'pt-br' for Portuguese, 'it-it' for Italian, 'zh-tw' for Chinese and 'de-de' for German.
 * @member {String} preferredSupportLanguage
 */
UpdateContactProfile.prototype['preferredSupportLanguage'] = undefined;

/**
 * Time zone of the user. This is the name of the time zone from <a  target='_blank' href='https://support.microsoft.com/en-us/help/973627/microsoft-time-zone-index-values'>Microsoft Time Zone Index Values</a>.
 * @member {String} preferredTimeZone
 */
UpdateContactProfile.prototype['preferredTimeZone'] = undefined;

/**
 * Primary email address
 * @member {String} primaryEmailAddress
 */
UpdateContactProfile.prototype['primaryEmailAddress'] = undefined;





/**
 * Allowed values for the <code>preferredContactMethod</code> property.
 * @enum {String}
 * @readonly
 */
UpdateContactProfile['PreferredContactMethodEnum'] = {

    /**
     * value: "email"
     * @const
     */
    "email": "email",

    /**
     * value: "phone"
     * @const
     */
    "phone": "phone"
};



export default UpdateContactProfile;

