/**
 * Microsoft.Support
 * Microsoft Azure Support Resource Provider.
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ExceptionResponse from '../model/ExceptionResponse';
import ProblemClassification from '../model/ProblemClassification';
import ProblemClassificationsListResult from '../model/ProblemClassificationsListResult';

/**
* ProblemClassifications service.
* @module api/ProblemClassificationsApi
* @version 2019-05-01-preview
*/
export default class ProblemClassificationsApi {

    /**
    * Constructs a new ProblemClassificationsApi. 
    * @alias module:api/ProblemClassificationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the problemClassificationsGet operation.
     * @callback module:api/ProblemClassificationsApi~problemClassificationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProblemClassification} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the details of a specific problem classification for a specific Azure service.
     * @param {String} serviceName Name of Azure service available for support.
     * @param {String} problemClassificationName Name of problem classification.
     * @param {String} apiVersion Api version
     * @param {module:api/ProblemClassificationsApi~problemClassificationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProblemClassification}
     */
    problemClassificationsGet(serviceName, problemClassificationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling problemClassificationsGet");
      }
      // verify the required parameter 'problemClassificationName' is set
      if (problemClassificationName === undefined || problemClassificationName === null) {
        throw new Error("Missing the required parameter 'problemClassificationName' when calling problemClassificationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling problemClassificationsGet");
      }

      let pathParams = {
        'serviceName': serviceName,
        'problemClassificationName': problemClassificationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProblemClassification;
      return this.apiClient.callApi(
        '/providers/Microsoft.Support/services/{serviceName}/problemClassifications/{problemClassificationName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the problemClassificationsList operation.
     * @callback module:api/ProblemClassificationsApi~problemClassificationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProblemClassificationsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the problem classifications (categories) available for a specific Azure service.<br/><br/> Always use the service and problem classifications obtained programmatically. This practice ensures that you always have the most recent set of service and problem classification Ids.
     * @param {String} serviceName Name of Azure service for which the problem classifications need to be retrieved.
     * @param {String} apiVersion Api version
     * @param {module:api/ProblemClassificationsApi~problemClassificationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProblemClassificationsListResult}
     */
    problemClassificationsList(serviceName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling problemClassificationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling problemClassificationsList");
      }

      let pathParams = {
        'serviceName': serviceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProblemClassificationsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Support/services/{serviceName}/problemClassifications', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
