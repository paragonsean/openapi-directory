/**
 * Microsoft.Support
 * Microsoft Azure Support Resource Provider.
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MicrosoftSupport);
  }
}(this, function(expect, MicrosoftSupport) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MicrosoftSupport.SupportTicketDetailsProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SupportTicketDetailsProperties', function() {
    it('should create an instance of SupportTicketDetailsProperties', function() {
      // uncomment below and update the code to test SupportTicketDetailsProperties
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be.a(MicrosoftSupport.SupportTicketDetailsProperties);
    });

    it('should have the property contactDetails (base name: "contactDetails")', function() {
      // uncomment below and update the code to test the property contactDetails
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property createdDate (base name: "createdDate")', function() {
      // uncomment below and update the code to test the property createdDate
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property enrollmentId (base name: "enrollmentId")', function() {
      // uncomment below and update the code to test the property enrollmentId
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property modifiedDate (base name: "modifiedDate")', function() {
      // uncomment below and update the code to test the property modifiedDate
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property problemClassificationDisplayName (base name: "problemClassificationDisplayName")', function() {
      // uncomment below and update the code to test the property problemClassificationDisplayName
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property problemClassificationId (base name: "problemClassificationId")', function() {
      // uncomment below and update the code to test the property problemClassificationId
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property problemStartTime (base name: "problemStartTime")', function() {
      // uncomment below and update the code to test the property problemStartTime
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property productionOutage (base name: "productionOutage")', function() {
      // uncomment below and update the code to test the property productionOutage
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property quotaTicketDetails (base name: "quotaTicketDetails")', function() {
      // uncomment below and update the code to test the property quotaTicketDetails
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property require24X7Response (base name: "require24X7Response")', function() {
      // uncomment below and update the code to test the property require24X7Response
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceDisplayName (base name: "serviceDisplayName")', function() {
      // uncomment below and update the code to test the property serviceDisplayName
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceId (base name: "serviceId")', function() {
      // uncomment below and update the code to test the property serviceId
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceLevelAgreement (base name: "serviceLevelAgreement")', function() {
      // uncomment below and update the code to test the property serviceLevelAgreement
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property severity (base name: "severity")', function() {
      // uncomment below and update the code to test the property severity
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property supportEngineer (base name: "supportEngineer")', function() {
      // uncomment below and update the code to test the property supportEngineer
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property supportPlanType (base name: "supportPlanType")', function() {
      // uncomment below and update the code to test the property supportPlanType
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property supportTicketId (base name: "supportTicketId")', function() {
      // uncomment below and update the code to test the property supportTicketId
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property technicalTicketDetails (base name: "technicalTicketDetails")', function() {
      // uncomment below and update the code to test the property technicalTicketDetails
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new MicrosoftSupport.SupportTicketDetailsProperties();
      //expect(instance).to.be();
    });

  });

}));
