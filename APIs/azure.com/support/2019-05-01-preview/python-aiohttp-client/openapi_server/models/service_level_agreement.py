# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceLevelAgreement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiration_time: datetime=None, sla_minutes: int=None, start_time: datetime=None):
        """ServiceLevelAgreement - a model defined in OpenAPI

        :param expiration_time: The expiration_time of this ServiceLevelAgreement.
        :param sla_minutes: The sla_minutes of this ServiceLevelAgreement.
        :param start_time: The start_time of this ServiceLevelAgreement.
        """
        self.openapi_types = {
            'expiration_time': datetime,
            'sla_minutes': int,
            'start_time': datetime
        }

        self.attribute_map = {
            'expiration_time': 'expirationTime',
            'sla_minutes': 'slaMinutes',
            'start_time': 'startTime'
        }

        self._expiration_time = expiration_time
        self._sla_minutes = sla_minutes
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceLevelAgreement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceLevelAgreement of this ServiceLevelAgreement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiration_time(self):
        """Gets the expiration_time of this ServiceLevelAgreement.

        Time in UTC (ISO 8601 format) when service level agreement expires.

        :return: The expiration_time of this ServiceLevelAgreement.
        :rtype: datetime
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this ServiceLevelAgreement.

        Time in UTC (ISO 8601 format) when service level agreement expires.

        :param expiration_time: The expiration_time of this ServiceLevelAgreement.
        :type expiration_time: datetime
        """

        self._expiration_time = expiration_time

    @property
    def sla_minutes(self):
        """Gets the sla_minutes of this ServiceLevelAgreement.

        Service Level Agreement in minutes

        :return: The sla_minutes of this ServiceLevelAgreement.
        :rtype: int
        """
        return self._sla_minutes

    @sla_minutes.setter
    def sla_minutes(self, sla_minutes):
        """Sets the sla_minutes of this ServiceLevelAgreement.

        Service Level Agreement in minutes

        :param sla_minutes: The sla_minutes of this ServiceLevelAgreement.
        :type sla_minutes: int
        """

        self._sla_minutes = sla_minutes

    @property
    def start_time(self):
        """Gets the start_time of this ServiceLevelAgreement.

        Time in UTC (ISO 8601 format) when service level agreement starts.

        :return: The start_time of this ServiceLevelAgreement.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ServiceLevelAgreement.

        Time in UTC (ISO 8601 format) when service level agreement starts.

        :param start_time: The start_time of this ServiceLevelAgreement.
        :type start_time: datetime
        """

        self._start_time = start_time
