# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_profile import ContactProfile
from openapi_server.models.quota_ticket_details import QuotaTicketDetails
from openapi_server.models.service_level_agreement import ServiceLevelAgreement
from openapi_server.models.support_engineer import SupportEngineer
from openapi_server.models.technical_ticket_details import TechnicalTicketDetails
from openapi_server import util


class SupportTicketDetailsProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_details: ContactProfile=None, created_date: datetime=None, description: str=None, enrollment_id: str=None, modified_date: datetime=None, problem_classification_display_name: str=None, problem_classification_id: str=None, problem_start_time: datetime=None, production_outage: bool=None, quota_ticket_details: QuotaTicketDetails=None, require24_x7_response: bool=None, service_display_name: str=None, service_id: str=None, service_level_agreement: ServiceLevelAgreement=None, severity: str=None, status: str=None, support_engineer: SupportEngineer=None, support_plan_type: str=None, support_ticket_id: str=None, technical_ticket_details: TechnicalTicketDetails=None, title: str=None):
        """SupportTicketDetailsProperties - a model defined in OpenAPI

        :param contact_details: The contact_details of this SupportTicketDetailsProperties.
        :param created_date: The created_date of this SupportTicketDetailsProperties.
        :param description: The description of this SupportTicketDetailsProperties.
        :param enrollment_id: The enrollment_id of this SupportTicketDetailsProperties.
        :param modified_date: The modified_date of this SupportTicketDetailsProperties.
        :param problem_classification_display_name: The problem_classification_display_name of this SupportTicketDetailsProperties.
        :param problem_classification_id: The problem_classification_id of this SupportTicketDetailsProperties.
        :param problem_start_time: The problem_start_time of this SupportTicketDetailsProperties.
        :param production_outage: The production_outage of this SupportTicketDetailsProperties.
        :param quota_ticket_details: The quota_ticket_details of this SupportTicketDetailsProperties.
        :param require24_x7_response: The require24_x7_response of this SupportTicketDetailsProperties.
        :param service_display_name: The service_display_name of this SupportTicketDetailsProperties.
        :param service_id: The service_id of this SupportTicketDetailsProperties.
        :param service_level_agreement: The service_level_agreement of this SupportTicketDetailsProperties.
        :param severity: The severity of this SupportTicketDetailsProperties.
        :param status: The status of this SupportTicketDetailsProperties.
        :param support_engineer: The support_engineer of this SupportTicketDetailsProperties.
        :param support_plan_type: The support_plan_type of this SupportTicketDetailsProperties.
        :param support_ticket_id: The support_ticket_id of this SupportTicketDetailsProperties.
        :param technical_ticket_details: The technical_ticket_details of this SupportTicketDetailsProperties.
        :param title: The title of this SupportTicketDetailsProperties.
        """
        self.openapi_types = {
            'contact_details': ContactProfile,
            'created_date': datetime,
            'description': str,
            'enrollment_id': str,
            'modified_date': datetime,
            'problem_classification_display_name': str,
            'problem_classification_id': str,
            'problem_start_time': datetime,
            'production_outage': bool,
            'quota_ticket_details': QuotaTicketDetails,
            'require24_x7_response': bool,
            'service_display_name': str,
            'service_id': str,
            'service_level_agreement': ServiceLevelAgreement,
            'severity': str,
            'status': str,
            'support_engineer': SupportEngineer,
            'support_plan_type': str,
            'support_ticket_id': str,
            'technical_ticket_details': TechnicalTicketDetails,
            'title': str
        }

        self.attribute_map = {
            'contact_details': 'contactDetails',
            'created_date': 'createdDate',
            'description': 'description',
            'enrollment_id': 'enrollmentId',
            'modified_date': 'modifiedDate',
            'problem_classification_display_name': 'problemClassificationDisplayName',
            'problem_classification_id': 'problemClassificationId',
            'problem_start_time': 'problemStartTime',
            'production_outage': 'productionOutage',
            'quota_ticket_details': 'quotaTicketDetails',
            'require24_x7_response': 'require24X7Response',
            'service_display_name': 'serviceDisplayName',
            'service_id': 'serviceId',
            'service_level_agreement': 'serviceLevelAgreement',
            'severity': 'severity',
            'status': 'status',
            'support_engineer': 'supportEngineer',
            'support_plan_type': 'supportPlanType',
            'support_ticket_id': 'supportTicketId',
            'technical_ticket_details': 'technicalTicketDetails',
            'title': 'title'
        }

        self._contact_details = contact_details
        self._created_date = created_date
        self._description = description
        self._enrollment_id = enrollment_id
        self._modified_date = modified_date
        self._problem_classification_display_name = problem_classification_display_name
        self._problem_classification_id = problem_classification_id
        self._problem_start_time = problem_start_time
        self._production_outage = production_outage
        self._quota_ticket_details = quota_ticket_details
        self._require24_x7_response = require24_x7_response
        self._service_display_name = service_display_name
        self._service_id = service_id
        self._service_level_agreement = service_level_agreement
        self._severity = severity
        self._status = status
        self._support_engineer = support_engineer
        self._support_plan_type = support_plan_type
        self._support_ticket_id = support_ticket_id
        self._technical_ticket_details = technical_ticket_details
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SupportTicketDetailsProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SupportTicketDetailsProperties of this SupportTicketDetailsProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_details(self):
        """Gets the contact_details of this SupportTicketDetailsProperties.


        :return: The contact_details of this SupportTicketDetailsProperties.
        :rtype: ContactProfile
        """
        return self._contact_details

    @contact_details.setter
    def contact_details(self, contact_details):
        """Sets the contact_details of this SupportTicketDetailsProperties.


        :param contact_details: The contact_details of this SupportTicketDetailsProperties.
        :type contact_details: ContactProfile
        """
        if contact_details is None:
            raise ValueError("Invalid value for `contact_details`, must not be `None`")

        self._contact_details = contact_details

    @property
    def created_date(self):
        """Gets the created_date of this SupportTicketDetailsProperties.

        Time in UTC (ISO 8601 format) when support ticket was created.

        :return: The created_date of this SupportTicketDetailsProperties.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this SupportTicketDetailsProperties.

        Time in UTC (ISO 8601 format) when support ticket was created.

        :param created_date: The created_date of this SupportTicketDetailsProperties.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def description(self):
        """Gets the description of this SupportTicketDetailsProperties.

        Detailed description of the question or issue.

        :return: The description of this SupportTicketDetailsProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SupportTicketDetailsProperties.

        Detailed description of the question or issue.

        :param description: The description of this SupportTicketDetailsProperties.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def enrollment_id(self):
        """Gets the enrollment_id of this SupportTicketDetailsProperties.

        Enrollment ID associated with the support ticket.

        :return: The enrollment_id of this SupportTicketDetailsProperties.
        :rtype: str
        """
        return self._enrollment_id

    @enrollment_id.setter
    def enrollment_id(self, enrollment_id):
        """Sets the enrollment_id of this SupportTicketDetailsProperties.

        Enrollment ID associated with the support ticket.

        :param enrollment_id: The enrollment_id of this SupportTicketDetailsProperties.
        :type enrollment_id: str
        """

        self._enrollment_id = enrollment_id

    @property
    def modified_date(self):
        """Gets the modified_date of this SupportTicketDetailsProperties.

        Time in UTC (ISO 8601 format) when support ticket was last modified.

        :return: The modified_date of this SupportTicketDetailsProperties.
        :rtype: datetime
        """
        return self._modified_date

    @modified_date.setter
    def modified_date(self, modified_date):
        """Sets the modified_date of this SupportTicketDetailsProperties.

        Time in UTC (ISO 8601 format) when support ticket was last modified.

        :param modified_date: The modified_date of this SupportTicketDetailsProperties.
        :type modified_date: datetime
        """

        self._modified_date = modified_date

    @property
    def problem_classification_display_name(self):
        """Gets the problem_classification_display_name of this SupportTicketDetailsProperties.

        Localized name of problem classification.

        :return: The problem_classification_display_name of this SupportTicketDetailsProperties.
        :rtype: str
        """
        return self._problem_classification_display_name

    @problem_classification_display_name.setter
    def problem_classification_display_name(self, problem_classification_display_name):
        """Sets the problem_classification_display_name of this SupportTicketDetailsProperties.

        Localized name of problem classification.

        :param problem_classification_display_name: The problem_classification_display_name of this SupportTicketDetailsProperties.
        :type problem_classification_display_name: str
        """

        self._problem_classification_display_name = problem_classification_display_name

    @property
    def problem_classification_id(self):
        """Gets the problem_classification_id of this SupportTicketDetailsProperties.

        Each Azure service has its own set of issue category called problem classification that corresponds to the type of problem you're experiencing. This parameter is the resource id of ProblemClassification resource.

        :return: The problem_classification_id of this SupportTicketDetailsProperties.
        :rtype: str
        """
        return self._problem_classification_id

    @problem_classification_id.setter
    def problem_classification_id(self, problem_classification_id):
        """Sets the problem_classification_id of this SupportTicketDetailsProperties.

        Each Azure service has its own set of issue category called problem classification that corresponds to the type of problem you're experiencing. This parameter is the resource id of ProblemClassification resource.

        :param problem_classification_id: The problem_classification_id of this SupportTicketDetailsProperties.
        :type problem_classification_id: str
        """
        if problem_classification_id is None:
            raise ValueError("Invalid value for `problem_classification_id`, must not be `None`")

        self._problem_classification_id = problem_classification_id

    @property
    def problem_start_time(self):
        """Gets the problem_start_time of this SupportTicketDetailsProperties.

        Time in UTC (ISO 8601 format) when the problem started.

        :return: The problem_start_time of this SupportTicketDetailsProperties.
        :rtype: datetime
        """
        return self._problem_start_time

    @problem_start_time.setter
    def problem_start_time(self, problem_start_time):
        """Sets the problem_start_time of this SupportTicketDetailsProperties.

        Time in UTC (ISO 8601 format) when the problem started.

        :param problem_start_time: The problem_start_time of this SupportTicketDetailsProperties.
        :type problem_start_time: datetime
        """

        self._problem_start_time = problem_start_time

    @property
    def production_outage(self):
        """Gets the production_outage of this SupportTicketDetailsProperties.

        Indicates if this issue is a production outage.

        :return: The production_outage of this SupportTicketDetailsProperties.
        :rtype: bool
        """
        return self._production_outage

    @production_outage.setter
    def production_outage(self, production_outage):
        """Sets the production_outage of this SupportTicketDetailsProperties.

        Indicates if this issue is a production outage.

        :param production_outage: The production_outage of this SupportTicketDetailsProperties.
        :type production_outage: bool
        """

        self._production_outage = production_outage

    @property
    def quota_ticket_details(self):
        """Gets the quota_ticket_details of this SupportTicketDetailsProperties.


        :return: The quota_ticket_details of this SupportTicketDetailsProperties.
        :rtype: QuotaTicketDetails
        """
        return self._quota_ticket_details

    @quota_ticket_details.setter
    def quota_ticket_details(self, quota_ticket_details):
        """Sets the quota_ticket_details of this SupportTicketDetailsProperties.


        :param quota_ticket_details: The quota_ticket_details of this SupportTicketDetailsProperties.
        :type quota_ticket_details: QuotaTicketDetails
        """

        self._quota_ticket_details = quota_ticket_details

    @property
    def require24_x7_response(self):
        """Gets the require24_x7_response of this SupportTicketDetailsProperties.

        Indicates if this requires a 24x7 response from Azure.

        :return: The require24_x7_response of this SupportTicketDetailsProperties.
        :rtype: bool
        """
        return self._require24_x7_response

    @require24_x7_response.setter
    def require24_x7_response(self, require24_x7_response):
        """Sets the require24_x7_response of this SupportTicketDetailsProperties.

        Indicates if this requires a 24x7 response from Azure.

        :param require24_x7_response: The require24_x7_response of this SupportTicketDetailsProperties.
        :type require24_x7_response: bool
        """

        self._require24_x7_response = require24_x7_response

    @property
    def service_display_name(self):
        """Gets the service_display_name of this SupportTicketDetailsProperties.

        Localized name of Azure service.

        :return: The service_display_name of this SupportTicketDetailsProperties.
        :rtype: str
        """
        return self._service_display_name

    @service_display_name.setter
    def service_display_name(self, service_display_name):
        """Sets the service_display_name of this SupportTicketDetailsProperties.

        Localized name of Azure service.

        :param service_display_name: The service_display_name of this SupportTicketDetailsProperties.
        :type service_display_name: str
        """

        self._service_display_name = service_display_name

    @property
    def service_id(self):
        """Gets the service_id of this SupportTicketDetailsProperties.

        This is the resource id of the Azure service resource associated with the support ticket.

        :return: The service_id of this SupportTicketDetailsProperties.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this SupportTicketDetailsProperties.

        This is the resource id of the Azure service resource associated with the support ticket.

        :param service_id: The service_id of this SupportTicketDetailsProperties.
        :type service_id: str
        """
        if service_id is None:
            raise ValueError("Invalid value for `service_id`, must not be `None`")

        self._service_id = service_id

    @property
    def service_level_agreement(self):
        """Gets the service_level_agreement of this SupportTicketDetailsProperties.


        :return: The service_level_agreement of this SupportTicketDetailsProperties.
        :rtype: ServiceLevelAgreement
        """
        return self._service_level_agreement

    @service_level_agreement.setter
    def service_level_agreement(self, service_level_agreement):
        """Sets the service_level_agreement of this SupportTicketDetailsProperties.


        :param service_level_agreement: The service_level_agreement of this SupportTicketDetailsProperties.
        :type service_level_agreement: ServiceLevelAgreement
        """

        self._service_level_agreement = service_level_agreement

    @property
    def severity(self):
        """Gets the severity of this SupportTicketDetailsProperties.

        A value that indicates the urgency of the case, which in turn determines the response time according to the service level agreement of the technical support plan you have with Azure.

        :return: The severity of this SupportTicketDetailsProperties.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this SupportTicketDetailsProperties.

        A value that indicates the urgency of the case, which in turn determines the response time according to the service level agreement of the technical support plan you have with Azure.

        :param severity: The severity of this SupportTicketDetailsProperties.
        :type severity: str
        """
        allowed_values = ["minimal", "moderate", "critical"]  # noqa: E501
        if severity not in allowed_values:
            raise ValueError(
                "Invalid value for `severity` ({0}), must be one of {1}"
                .format(severity, allowed_values)
            )

        self._severity = severity

    @property
    def status(self):
        """Gets the status of this SupportTicketDetailsProperties.

        Status of the support ticket.

        :return: The status of this SupportTicketDetailsProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SupportTicketDetailsProperties.

        Status of the support ticket.

        :param status: The status of this SupportTicketDetailsProperties.
        :type status: str
        """

        self._status = status

    @property
    def support_engineer(self):
        """Gets the support_engineer of this SupportTicketDetailsProperties.


        :return: The support_engineer of this SupportTicketDetailsProperties.
        :rtype: SupportEngineer
        """
        return self._support_engineer

    @support_engineer.setter
    def support_engineer(self, support_engineer):
        """Sets the support_engineer of this SupportTicketDetailsProperties.


        :param support_engineer: The support_engineer of this SupportTicketDetailsProperties.
        :type support_engineer: SupportEngineer
        """

        self._support_engineer = support_engineer

    @property
    def support_plan_type(self):
        """Gets the support_plan_type of this SupportTicketDetailsProperties.

        Support plan type associated with the support ticket.

        :return: The support_plan_type of this SupportTicketDetailsProperties.
        :rtype: str
        """
        return self._support_plan_type

    @support_plan_type.setter
    def support_plan_type(self, support_plan_type):
        """Sets the support_plan_type of this SupportTicketDetailsProperties.

        Support plan type associated with the support ticket.

        :param support_plan_type: The support_plan_type of this SupportTicketDetailsProperties.
        :type support_plan_type: str
        """

        self._support_plan_type = support_plan_type

    @property
    def support_ticket_id(self):
        """Gets the support_ticket_id of this SupportTicketDetailsProperties.

        System generated support ticket id that is unique.

        :return: The support_ticket_id of this SupportTicketDetailsProperties.
        :rtype: str
        """
        return self._support_ticket_id

    @support_ticket_id.setter
    def support_ticket_id(self, support_ticket_id):
        """Sets the support_ticket_id of this SupportTicketDetailsProperties.

        System generated support ticket id that is unique.

        :param support_ticket_id: The support_ticket_id of this SupportTicketDetailsProperties.
        :type support_ticket_id: str
        """

        self._support_ticket_id = support_ticket_id

    @property
    def technical_ticket_details(self):
        """Gets the technical_ticket_details of this SupportTicketDetailsProperties.


        :return: The technical_ticket_details of this SupportTicketDetailsProperties.
        :rtype: TechnicalTicketDetails
        """
        return self._technical_ticket_details

    @technical_ticket_details.setter
    def technical_ticket_details(self, technical_ticket_details):
        """Sets the technical_ticket_details of this SupportTicketDetailsProperties.


        :param technical_ticket_details: The technical_ticket_details of this SupportTicketDetailsProperties.
        :type technical_ticket_details: TechnicalTicketDetails
        """

        self._technical_ticket_details = technical_ticket_details

    @property
    def title(self):
        """Gets the title of this SupportTicketDetailsProperties.

        Title of the support ticket.

        :return: The title of this SupportTicketDetailsProperties.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SupportTicketDetailsProperties.

        Title of the support ticket.

        :param title: The title of this SupportTicketDetailsProperties.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title
