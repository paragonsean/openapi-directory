# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateContactProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_email_addresses: List[str]=None, country: str=None, first_name: str=None, last_name: str=None, phone_number: str=None, preferred_contact_method: str=None, preferred_support_language: str=None, preferred_time_zone: str=None, primary_email_address: str=None):
        """UpdateContactProfile - a model defined in OpenAPI

        :param additional_email_addresses: The additional_email_addresses of this UpdateContactProfile.
        :param country: The country of this UpdateContactProfile.
        :param first_name: The first_name of this UpdateContactProfile.
        :param last_name: The last_name of this UpdateContactProfile.
        :param phone_number: The phone_number of this UpdateContactProfile.
        :param preferred_contact_method: The preferred_contact_method of this UpdateContactProfile.
        :param preferred_support_language: The preferred_support_language of this UpdateContactProfile.
        :param preferred_time_zone: The preferred_time_zone of this UpdateContactProfile.
        :param primary_email_address: The primary_email_address of this UpdateContactProfile.
        """
        self.openapi_types = {
            'additional_email_addresses': List[str],
            'country': str,
            'first_name': str,
            'last_name': str,
            'phone_number': str,
            'preferred_contact_method': str,
            'preferred_support_language': str,
            'preferred_time_zone': str,
            'primary_email_address': str
        }

        self.attribute_map = {
            'additional_email_addresses': 'additionalEmailAddresses',
            'country': 'country',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'phone_number': 'phoneNumber',
            'preferred_contact_method': 'preferredContactMethod',
            'preferred_support_language': 'preferredSupportLanguage',
            'preferred_time_zone': 'preferredTimeZone',
            'primary_email_address': 'primaryEmailAddress'
        }

        self._additional_email_addresses = additional_email_addresses
        self._country = country
        self._first_name = first_name
        self._last_name = last_name
        self._phone_number = phone_number
        self._preferred_contact_method = preferred_contact_method
        self._preferred_support_language = preferred_support_language
        self._preferred_time_zone = preferred_time_zone
        self._primary_email_address = primary_email_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateContactProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateContactProfile of this UpdateContactProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_email_addresses(self):
        """Gets the additional_email_addresses of this UpdateContactProfile.

        Email addresses listed will be copied on any correspondence about the support ticket

        :return: The additional_email_addresses of this UpdateContactProfile.
        :rtype: List[str]
        """
        return self._additional_email_addresses

    @additional_email_addresses.setter
    def additional_email_addresses(self, additional_email_addresses):
        """Sets the additional_email_addresses of this UpdateContactProfile.

        Email addresses listed will be copied on any correspondence about the support ticket

        :param additional_email_addresses: The additional_email_addresses of this UpdateContactProfile.
        :type additional_email_addresses: List[str]
        """

        self._additional_email_addresses = additional_email_addresses

    @property
    def country(self):
        """Gets the country of this UpdateContactProfile.

        Country of the user. This is the ISO 3166-1 alpha-3 code.

        :return: The country of this UpdateContactProfile.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this UpdateContactProfile.

        Country of the user. This is the ISO 3166-1 alpha-3 code.

        :param country: The country of this UpdateContactProfile.
        :type country: str
        """

        self._country = country

    @property
    def first_name(self):
        """Gets the first_name of this UpdateContactProfile.

        First name

        :return: The first_name of this UpdateContactProfile.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this UpdateContactProfile.

        First name

        :param first_name: The first_name of this UpdateContactProfile.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this UpdateContactProfile.

        Last name

        :return: The last_name of this UpdateContactProfile.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this UpdateContactProfile.

        Last name

        :param last_name: The last_name of this UpdateContactProfile.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def phone_number(self):
        """Gets the phone_number of this UpdateContactProfile.

        Phone number. This is required if preferred contact method is phone.

        :return: The phone_number of this UpdateContactProfile.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this UpdateContactProfile.

        Phone number. This is required if preferred contact method is phone.

        :param phone_number: The phone_number of this UpdateContactProfile.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def preferred_contact_method(self):
        """Gets the preferred_contact_method of this UpdateContactProfile.

        Preferred contact method

        :return: The preferred_contact_method of this UpdateContactProfile.
        :rtype: str
        """
        return self._preferred_contact_method

    @preferred_contact_method.setter
    def preferred_contact_method(self, preferred_contact_method):
        """Sets the preferred_contact_method of this UpdateContactProfile.

        Preferred contact method

        :param preferred_contact_method: The preferred_contact_method of this UpdateContactProfile.
        :type preferred_contact_method: str
        """
        allowed_values = ["email", "phone"]  # noqa: E501
        if preferred_contact_method not in allowed_values:
            raise ValueError(
                "Invalid value for `preferred_contact_method` ({0}), must be one of {1}"
                .format(preferred_contact_method, allowed_values)
            )

        self._preferred_contact_method = preferred_contact_method

    @property
    def preferred_support_language(self):
        """Gets the preferred_support_language of this UpdateContactProfile.

        Preferred language of support from Azure. Support languages vary based on the severity you choose for your support ticket. Learn more at <a  target='_blank' href='https://azure.microsoft.com/support/plans/response/'>Azure Severity and responsiveness</a>. Use the standard language-country code. Valid values are 'en-us' for English, 'zh-hans' for Chinese, 'es-es' for Spanish, 'fr-fr' for French, 'ja-jp' for Japanese, 'ko-kr' for Korean, 'ru-ru' for Russian, 'pt-br' for Portuguese, 'it-it' for Italian, 'zh-tw' for Chinese and 'de-de' for German.

        :return: The preferred_support_language of this UpdateContactProfile.
        :rtype: str
        """
        return self._preferred_support_language

    @preferred_support_language.setter
    def preferred_support_language(self, preferred_support_language):
        """Sets the preferred_support_language of this UpdateContactProfile.

        Preferred language of support from Azure. Support languages vary based on the severity you choose for your support ticket. Learn more at <a  target='_blank' href='https://azure.microsoft.com/support/plans/response/'>Azure Severity and responsiveness</a>. Use the standard language-country code. Valid values are 'en-us' for English, 'zh-hans' for Chinese, 'es-es' for Spanish, 'fr-fr' for French, 'ja-jp' for Japanese, 'ko-kr' for Korean, 'ru-ru' for Russian, 'pt-br' for Portuguese, 'it-it' for Italian, 'zh-tw' for Chinese and 'de-de' for German.

        :param preferred_support_language: The preferred_support_language of this UpdateContactProfile.
        :type preferred_support_language: str
        """

        self._preferred_support_language = preferred_support_language

    @property
    def preferred_time_zone(self):
        """Gets the preferred_time_zone of this UpdateContactProfile.

        Time zone of the user. This is the name of the time zone from <a  target='_blank' href='https://support.microsoft.com/en-us/help/973627/microsoft-time-zone-index-values'>Microsoft Time Zone Index Values</a>.

        :return: The preferred_time_zone of this UpdateContactProfile.
        :rtype: str
        """
        return self._preferred_time_zone

    @preferred_time_zone.setter
    def preferred_time_zone(self, preferred_time_zone):
        """Sets the preferred_time_zone of this UpdateContactProfile.

        Time zone of the user. This is the name of the time zone from <a  target='_blank' href='https://support.microsoft.com/en-us/help/973627/microsoft-time-zone-index-values'>Microsoft Time Zone Index Values</a>.

        :param preferred_time_zone: The preferred_time_zone of this UpdateContactProfile.
        :type preferred_time_zone: str
        """

        self._preferred_time_zone = preferred_time_zone

    @property
    def primary_email_address(self):
        """Gets the primary_email_address of this UpdateContactProfile.

        Primary email address

        :return: The primary_email_address of this UpdateContactProfile.
        :rtype: str
        """
        return self._primary_email_address

    @primary_email_address.setter
    def primary_email_address(self, primary_email_address):
        """Sets the primary_email_address of this UpdateContactProfile.

        Primary email address

        :param primary_email_address: The primary_email_address of this UpdateContactProfile.
        :type primary_email_address: str
        """

        self._primary_email_address = primary_email_address
