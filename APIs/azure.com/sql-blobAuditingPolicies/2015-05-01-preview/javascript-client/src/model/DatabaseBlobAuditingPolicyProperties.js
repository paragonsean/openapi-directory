/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DatabaseBlobAuditingPolicyProperties model module.
 * @module model/DatabaseBlobAuditingPolicyProperties
 * @version 2015-05-01-preview
 */
class DatabaseBlobAuditingPolicyProperties {
    /**
     * Constructs a new <code>DatabaseBlobAuditingPolicyProperties</code>.
     * Properties of a database blob auditing policy.
     * @alias module:model/DatabaseBlobAuditingPolicyProperties
     * @param state {module:model/DatabaseBlobAuditingPolicyProperties.StateEnum} Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.
     */
    constructor(state) { 
        
        DatabaseBlobAuditingPolicyProperties.initialize(this, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, state) { 
        obj['state'] = state;
    }

    /**
     * Constructs a <code>DatabaseBlobAuditingPolicyProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatabaseBlobAuditingPolicyProperties} obj Optional instance to populate.
     * @return {module:model/DatabaseBlobAuditingPolicyProperties} The populated <code>DatabaseBlobAuditingPolicyProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatabaseBlobAuditingPolicyProperties();

            if (data.hasOwnProperty('auditActionsAndGroups')) {
                obj['auditActionsAndGroups'] = ApiClient.convertToType(data['auditActionsAndGroups'], ['String']);
            }
            if (data.hasOwnProperty('isStorageSecondaryKeyInUse')) {
                obj['isStorageSecondaryKeyInUse'] = ApiClient.convertToType(data['isStorageSecondaryKeyInUse'], 'Boolean');
            }
            if (data.hasOwnProperty('retentionDays')) {
                obj['retentionDays'] = ApiClient.convertToType(data['retentionDays'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('storageAccountAccessKey')) {
                obj['storageAccountAccessKey'] = ApiClient.convertToType(data['storageAccountAccessKey'], 'String');
            }
            if (data.hasOwnProperty('storageAccountSubscriptionId')) {
                obj['storageAccountSubscriptionId'] = ApiClient.convertToType(data['storageAccountSubscriptionId'], 'String');
            }
            if (data.hasOwnProperty('storageEndpoint')) {
                obj['storageEndpoint'] = ApiClient.convertToType(data['storageEndpoint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatabaseBlobAuditingPolicyProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatabaseBlobAuditingPolicyProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DatabaseBlobAuditingPolicyProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['auditActionsAndGroups'])) {
            throw new Error("Expected the field `auditActionsAndGroups` to be an array in the JSON data but got " + data['auditActionsAndGroups']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['storageAccountAccessKey'] && !(typeof data['storageAccountAccessKey'] === 'string' || data['storageAccountAccessKey'] instanceof String)) {
            throw new Error("Expected the field `storageAccountAccessKey` to be a primitive type in the JSON string but got " + data['storageAccountAccessKey']);
        }
        // ensure the json data is a string
        if (data['storageAccountSubscriptionId'] && !(typeof data['storageAccountSubscriptionId'] === 'string' || data['storageAccountSubscriptionId'] instanceof String)) {
            throw new Error("Expected the field `storageAccountSubscriptionId` to be a primitive type in the JSON string but got " + data['storageAccountSubscriptionId']);
        }
        // ensure the json data is a string
        if (data['storageEndpoint'] && !(typeof data['storageEndpoint'] === 'string' || data['storageEndpoint'] instanceof String)) {
            throw new Error("Expected the field `storageEndpoint` to be a primitive type in the JSON string but got " + data['storageEndpoint']);
        }

        return true;
    }


}

DatabaseBlobAuditingPolicyProperties.RequiredProperties = ["state"];

/**
 * Specifies the Actions and Actions-Groups to audit.
 * @member {Array.<String>} auditActionsAndGroups
 */
DatabaseBlobAuditingPolicyProperties.prototype['auditActionsAndGroups'] = undefined;

/**
 * Specifies whether storageAccountAccessKey value is the storageâ€™s secondary key.
 * @member {Boolean} isStorageSecondaryKeyInUse
 */
DatabaseBlobAuditingPolicyProperties.prototype['isStorageSecondaryKeyInUse'] = undefined;

/**
 * Specifies the number of days to keep in the audit logs.
 * @member {Number} retentionDays
 */
DatabaseBlobAuditingPolicyProperties.prototype['retentionDays'] = undefined;

/**
 * Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.
 * @member {module:model/DatabaseBlobAuditingPolicyProperties.StateEnum} state
 */
DatabaseBlobAuditingPolicyProperties.prototype['state'] = undefined;

/**
 * Specifies the identifier key of the auditing storage account. If state is Enabled, storageAccountAccessKey is required.
 * @member {String} storageAccountAccessKey
 */
DatabaseBlobAuditingPolicyProperties.prototype['storageAccountAccessKey'] = undefined;

/**
 * Specifies the blob storage subscription Id.
 * @member {String} storageAccountSubscriptionId
 */
DatabaseBlobAuditingPolicyProperties.prototype['storageAccountSubscriptionId'] = undefined;

/**
 * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.
 * @member {String} storageEndpoint
 */
DatabaseBlobAuditingPolicyProperties.prototype['storageEndpoint'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
DatabaseBlobAuditingPolicyProperties['StateEnum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};



export default DatabaseBlobAuditingPolicyProperties;

