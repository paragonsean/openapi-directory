# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.database_assessment_details import DatabaseAssessmentDetails
from openapi_server import util


class DatabaseProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assessment_data: List[DatabaseAssessmentDetails]=None, last_updated_time: datetime=None):
        """DatabaseProperties - a model defined in OpenAPI

        :param assessment_data: The assessment_data of this DatabaseProperties.
        :param last_updated_time: The last_updated_time of this DatabaseProperties.
        """
        self.openapi_types = {
            'assessment_data': List[DatabaseAssessmentDetails],
            'last_updated_time': datetime
        }

        self.attribute_map = {
            'assessment_data': 'assessmentData',
            'last_updated_time': 'lastUpdatedTime'
        }

        self._assessment_data = assessment_data
        self._last_updated_time = last_updated_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatabaseProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatabaseProperties of this DatabaseProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assessment_data(self):
        """Gets the assessment_data of this DatabaseProperties.

        Gets or sets the assessment details of the database published by various sources.

        :return: The assessment_data of this DatabaseProperties.
        :rtype: List[DatabaseAssessmentDetails]
        """
        return self._assessment_data

    @assessment_data.setter
    def assessment_data(self, assessment_data):
        """Sets the assessment_data of this DatabaseProperties.

        Gets or sets the assessment details of the database published by various sources.

        :param assessment_data: The assessment_data of this DatabaseProperties.
        :type assessment_data: List[DatabaseAssessmentDetails]
        """

        self._assessment_data = assessment_data

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this DatabaseProperties.

        Gets or sets the time of the last modification of the database.

        :return: The last_updated_time of this DatabaseProperties.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this DatabaseProperties.

        Gets or sets the time of the last modification of the database.

        :param last_updated_time: The last_updated_time of this DatabaseProperties.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time
