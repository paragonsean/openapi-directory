# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i_edm_navigation_property_binding import IEdmNavigationPropertyBinding
from openapi_server.models.i_edm_path_expression import IEdmPathExpression
from openapi_server.models.i_edm_type import IEdmType
from openapi_server import util


class IEdmNavigationSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, navigation_property_bindings: List[IEdmNavigationPropertyBinding]=None, path: IEdmPathExpression=None, type: IEdmType=None):
        """IEdmNavigationSource - a model defined in OpenAPI

        :param name: The name of this IEdmNavigationSource.
        :param navigation_property_bindings: The navigation_property_bindings of this IEdmNavigationSource.
        :param path: The path of this IEdmNavigationSource.
        :param type: The type of this IEdmNavigationSource.
        """
        self.openapi_types = {
            'name': str,
            'navigation_property_bindings': List[IEdmNavigationPropertyBinding],
            'path': IEdmPathExpression,
            'type': IEdmType
        }

        self.attribute_map = {
            'name': 'name',
            'navigation_property_bindings': 'navigationPropertyBindings',
            'path': 'path',
            'type': 'type'
        }

        self._name = name
        self._navigation_property_bindings = navigation_property_bindings
        self._path = path
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IEdmNavigationSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IEdmNavigationSource of this IEdmNavigationSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this IEdmNavigationSource.


        :return: The name of this IEdmNavigationSource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this IEdmNavigationSource.


        :param name: The name of this IEdmNavigationSource.
        :type name: str
        """

        self._name = name

    @property
    def navigation_property_bindings(self):
        """Gets the navigation_property_bindings of this IEdmNavigationSource.


        :return: The navigation_property_bindings of this IEdmNavigationSource.
        :rtype: List[IEdmNavigationPropertyBinding]
        """
        return self._navigation_property_bindings

    @navigation_property_bindings.setter
    def navigation_property_bindings(self, navigation_property_bindings):
        """Sets the navigation_property_bindings of this IEdmNavigationSource.


        :param navigation_property_bindings: The navigation_property_bindings of this IEdmNavigationSource.
        :type navigation_property_bindings: List[IEdmNavigationPropertyBinding]
        """

        self._navigation_property_bindings = navigation_property_bindings

    @property
    def path(self):
        """Gets the path of this IEdmNavigationSource.


        :return: The path of this IEdmNavigationSource.
        :rtype: IEdmPathExpression
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this IEdmNavigationSource.


        :param path: The path of this IEdmNavigationSource.
        :type path: IEdmPathExpression
        """

        self._path = path

    @property
    def type(self):
        """Gets the type of this IEdmNavigationSource.


        :return: The type of this IEdmNavigationSource.
        :rtype: IEdmType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this IEdmNavigationSource.


        :param type: The type of this IEdmNavigationSource.
        :type type: IEdmType
        """

        self._type = type
