# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.default_query_settings import DefaultQuerySettings
from openapi_server.models.i_edm_model import IEdmModel
from openapi_server.models.i_edm_navigation_source import IEdmNavigationSource
from openapi_server.models.i_edm_type import IEdmType
from openapi_server.models.o_data_path import ODataPath
from openapi_server import util


class ODataQueryContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_query_settings: DefaultQuerySettings=None, element_clr_type: str=None, element_type: IEdmType=None, model: IEdmModel=None, navigation_source: IEdmNavigationSource=None, path: ODataPath=None, request_container: object=None):
        """ODataQueryContext - a model defined in OpenAPI

        :param default_query_settings: The default_query_settings of this ODataQueryContext.
        :param element_clr_type: The element_clr_type of this ODataQueryContext.
        :param element_type: The element_type of this ODataQueryContext.
        :param model: The model of this ODataQueryContext.
        :param navigation_source: The navigation_source of this ODataQueryContext.
        :param path: The path of this ODataQueryContext.
        :param request_container: The request_container of this ODataQueryContext.
        """
        self.openapi_types = {
            'default_query_settings': DefaultQuerySettings,
            'element_clr_type': str,
            'element_type': IEdmType,
            'model': IEdmModel,
            'navigation_source': IEdmNavigationSource,
            'path': ODataPath,
            'request_container': object
        }

        self.attribute_map = {
            'default_query_settings': 'defaultQuerySettings',
            'element_clr_type': 'elementClrType',
            'element_type': 'elementType',
            'model': 'model',
            'navigation_source': 'navigationSource',
            'path': 'path',
            'request_container': 'requestContainer'
        }

        self._default_query_settings = default_query_settings
        self._element_clr_type = element_clr_type
        self._element_type = element_type
        self._model = model
        self._navigation_source = navigation_source
        self._path = path
        self._request_container = request_container

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ODataQueryContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ODataQueryContext of this ODataQueryContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_query_settings(self):
        """Gets the default_query_settings of this ODataQueryContext.


        :return: The default_query_settings of this ODataQueryContext.
        :rtype: DefaultQuerySettings
        """
        return self._default_query_settings

    @default_query_settings.setter
    def default_query_settings(self, default_query_settings):
        """Sets the default_query_settings of this ODataQueryContext.


        :param default_query_settings: The default_query_settings of this ODataQueryContext.
        :type default_query_settings: DefaultQuerySettings
        """

        self._default_query_settings = default_query_settings

    @property
    def element_clr_type(self):
        """Gets the element_clr_type of this ODataQueryContext.


        :return: The element_clr_type of this ODataQueryContext.
        :rtype: str
        """
        return self._element_clr_type

    @element_clr_type.setter
    def element_clr_type(self, element_clr_type):
        """Sets the element_clr_type of this ODataQueryContext.


        :param element_clr_type: The element_clr_type of this ODataQueryContext.
        :type element_clr_type: str
        """

        self._element_clr_type = element_clr_type

    @property
    def element_type(self):
        """Gets the element_type of this ODataQueryContext.


        :return: The element_type of this ODataQueryContext.
        :rtype: IEdmType
        """
        return self._element_type

    @element_type.setter
    def element_type(self, element_type):
        """Sets the element_type of this ODataQueryContext.


        :param element_type: The element_type of this ODataQueryContext.
        :type element_type: IEdmType
        """

        self._element_type = element_type

    @property
    def model(self):
        """Gets the model of this ODataQueryContext.


        :return: The model of this ODataQueryContext.
        :rtype: IEdmModel
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this ODataQueryContext.


        :param model: The model of this ODataQueryContext.
        :type model: IEdmModel
        """

        self._model = model

    @property
    def navigation_source(self):
        """Gets the navigation_source of this ODataQueryContext.


        :return: The navigation_source of this ODataQueryContext.
        :rtype: IEdmNavigationSource
        """
        return self._navigation_source

    @navigation_source.setter
    def navigation_source(self, navigation_source):
        """Sets the navigation_source of this ODataQueryContext.


        :param navigation_source: The navigation_source of this ODataQueryContext.
        :type navigation_source: IEdmNavigationSource
        """

        self._navigation_source = navigation_source

    @property
    def path(self):
        """Gets the path of this ODataQueryContext.


        :return: The path of this ODataQueryContext.
        :rtype: ODataPath
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ODataQueryContext.


        :param path: The path of this ODataQueryContext.
        :type path: ODataPath
        """

        self._path = path

    @property
    def request_container(self):
        """Gets the request_container of this ODataQueryContext.


        :return: The request_container of this ODataQueryContext.
        :rtype: object
        """
        return self._request_container

    @request_container.setter
    def request_container(self, request_container):
        """Sets the request_container of this ODataQueryContext.


        :param request_container: The request_container of this ODataQueryContext.
        :type request_container: object
        """

        self._request_container = request_container
