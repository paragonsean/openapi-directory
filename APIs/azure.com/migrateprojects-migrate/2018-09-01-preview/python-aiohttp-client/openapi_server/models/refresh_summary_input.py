# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RefreshSummaryInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, goal: str=None):
        """RefreshSummaryInput - a model defined in OpenAPI

        :param goal: The goal of this RefreshSummaryInput.
        """
        self.openapi_types = {
            'goal': str
        }

        self.attribute_map = {
            'goal': 'goal'
        }

        self._goal = goal

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RefreshSummaryInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RefreshSummaryInput of this RefreshSummaryInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def goal(self):
        """Gets the goal of this RefreshSummaryInput.

        Gets or sets the goal for which summary needs to be refreshed.

        :return: The goal of this RefreshSummaryInput.
        :rtype: str
        """
        return self._goal

    @goal.setter
    def goal(self, goal):
        """Sets the goal of this RefreshSummaryInput.

        Gets or sets the goal for which summary needs to be refreshed.

        :param goal: The goal of this RefreshSummaryInput.
        :type goal: str
        """
        allowed_values = ["Servers", "Databases"]  # noqa: E501
        if goal not in allowed_values:
            raise ValueError(
                "Invalid value for `goal` ({0}), must be one of {1}"
                .format(goal, allowed_values)
            )

        self._goal = goal
