# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DiscoveryDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bios_id: str=None, enqueue_time: str=None, extended_info: Dict[str, str]=None, fabric_type: str=None, fqdn: str=None, ip_addresses: List[str]=None, last_updated_time: datetime=None, mac_addresses: List[str]=None, machine_id: str=None, machine_manager_id: str=None, machine_name: str=None, os_name: str=None, os_type: str=None, os_version: str=None, solution_name: str=None):
        """DiscoveryDetails - a model defined in OpenAPI

        :param bios_id: The bios_id of this DiscoveryDetails.
        :param enqueue_time: The enqueue_time of this DiscoveryDetails.
        :param extended_info: The extended_info of this DiscoveryDetails.
        :param fabric_type: The fabric_type of this DiscoveryDetails.
        :param fqdn: The fqdn of this DiscoveryDetails.
        :param ip_addresses: The ip_addresses of this DiscoveryDetails.
        :param last_updated_time: The last_updated_time of this DiscoveryDetails.
        :param mac_addresses: The mac_addresses of this DiscoveryDetails.
        :param machine_id: The machine_id of this DiscoveryDetails.
        :param machine_manager_id: The machine_manager_id of this DiscoveryDetails.
        :param machine_name: The machine_name of this DiscoveryDetails.
        :param os_name: The os_name of this DiscoveryDetails.
        :param os_type: The os_type of this DiscoveryDetails.
        :param os_version: The os_version of this DiscoveryDetails.
        :param solution_name: The solution_name of this DiscoveryDetails.
        """
        self.openapi_types = {
            'bios_id': str,
            'enqueue_time': str,
            'extended_info': Dict[str, str],
            'fabric_type': str,
            'fqdn': str,
            'ip_addresses': List[str],
            'last_updated_time': datetime,
            'mac_addresses': List[str],
            'machine_id': str,
            'machine_manager_id': str,
            'machine_name': str,
            'os_name': str,
            'os_type': str,
            'os_version': str,
            'solution_name': str
        }

        self.attribute_map = {
            'bios_id': 'biosId',
            'enqueue_time': 'enqueueTime',
            'extended_info': 'extendedInfo',
            'fabric_type': 'fabricType',
            'fqdn': 'fqdn',
            'ip_addresses': 'ipAddresses',
            'last_updated_time': 'lastUpdatedTime',
            'mac_addresses': 'macAddresses',
            'machine_id': 'machineId',
            'machine_manager_id': 'machineManagerId',
            'machine_name': 'machineName',
            'os_name': 'osName',
            'os_type': 'osType',
            'os_version': 'osVersion',
            'solution_name': 'solutionName'
        }

        self._bios_id = bios_id
        self._enqueue_time = enqueue_time
        self._extended_info = extended_info
        self._fabric_type = fabric_type
        self._fqdn = fqdn
        self._ip_addresses = ip_addresses
        self._last_updated_time = last_updated_time
        self._mac_addresses = mac_addresses
        self._machine_id = machine_id
        self._machine_manager_id = machine_manager_id
        self._machine_name = machine_name
        self._os_name = os_name
        self._os_type = os_type
        self._os_version = os_version
        self._solution_name = solution_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiscoveryDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiscoveryDetails of this DiscoveryDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bios_id(self):
        """Gets the bios_id of this DiscoveryDetails.

        Gets or sets the BIOS ID of the machine.

        :return: The bios_id of this DiscoveryDetails.
        :rtype: str
        """
        return self._bios_id

    @bios_id.setter
    def bios_id(self, bios_id):
        """Sets the bios_id of this DiscoveryDetails.

        Gets or sets the BIOS ID of the machine.

        :param bios_id: The bios_id of this DiscoveryDetails.
        :type bios_id: str
        """

        self._bios_id = bios_id

    @property
    def enqueue_time(self):
        """Gets the enqueue_time of this DiscoveryDetails.

        Gets or sets the time the message was enqueued.

        :return: The enqueue_time of this DiscoveryDetails.
        :rtype: str
        """
        return self._enqueue_time

    @enqueue_time.setter
    def enqueue_time(self, enqueue_time):
        """Sets the enqueue_time of this DiscoveryDetails.

        Gets or sets the time the message was enqueued.

        :param enqueue_time: The enqueue_time of this DiscoveryDetails.
        :type enqueue_time: str
        """

        self._enqueue_time = enqueue_time

    @property
    def extended_info(self):
        """Gets the extended_info of this DiscoveryDetails.

        Gets or sets the ISV specific extended information.

        :return: The extended_info of this DiscoveryDetails.
        :rtype: Dict[str, str]
        """
        return self._extended_info

    @extended_info.setter
    def extended_info(self, extended_info):
        """Sets the extended_info of this DiscoveryDetails.

        Gets or sets the ISV specific extended information.

        :param extended_info: The extended_info of this DiscoveryDetails.
        :type extended_info: Dict[str, str]
        """

        self._extended_info = extended_info

    @property
    def fabric_type(self):
        """Gets the fabric_type of this DiscoveryDetails.

        Gets or sets the fabric type.

        :return: The fabric_type of this DiscoveryDetails.
        :rtype: str
        """
        return self._fabric_type

    @fabric_type.setter
    def fabric_type(self, fabric_type):
        """Sets the fabric_type of this DiscoveryDetails.

        Gets or sets the fabric type.

        :param fabric_type: The fabric_type of this DiscoveryDetails.
        :type fabric_type: str
        """

        self._fabric_type = fabric_type

    @property
    def fqdn(self):
        """Gets the fqdn of this DiscoveryDetails.

        Gets or sets the FQDN of the machine.

        :return: The fqdn of this DiscoveryDetails.
        :rtype: str
        """
        return self._fqdn

    @fqdn.setter
    def fqdn(self, fqdn):
        """Sets the fqdn of this DiscoveryDetails.

        Gets or sets the FQDN of the machine.

        :param fqdn: The fqdn of this DiscoveryDetails.
        :type fqdn: str
        """

        self._fqdn = fqdn

    @property
    def ip_addresses(self):
        """Gets the ip_addresses of this DiscoveryDetails.

        Gets or sets the list of IP addresses of the machine. IP addresses could be IP V4 or IP V6.

        :return: The ip_addresses of this DiscoveryDetails.
        :rtype: List[str]
        """
        return self._ip_addresses

    @ip_addresses.setter
    def ip_addresses(self, ip_addresses):
        """Sets the ip_addresses of this DiscoveryDetails.

        Gets or sets the list of IP addresses of the machine. IP addresses could be IP V4 or IP V6.

        :param ip_addresses: The ip_addresses of this DiscoveryDetails.
        :type ip_addresses: List[str]
        """

        self._ip_addresses = ip_addresses

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this DiscoveryDetails.

        Gets or sets the time of the last modification of the machine details.

        :return: The last_updated_time of this DiscoveryDetails.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this DiscoveryDetails.

        Gets or sets the time of the last modification of the machine details.

        :param last_updated_time: The last_updated_time of this DiscoveryDetails.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def mac_addresses(self):
        """Gets the mac_addresses of this DiscoveryDetails.

        Gets or sets the list of MAC addresses of the machine.

        :return: The mac_addresses of this DiscoveryDetails.
        :rtype: List[str]
        """
        return self._mac_addresses

    @mac_addresses.setter
    def mac_addresses(self, mac_addresses):
        """Sets the mac_addresses of this DiscoveryDetails.

        Gets or sets the list of MAC addresses of the machine.

        :param mac_addresses: The mac_addresses of this DiscoveryDetails.
        :type mac_addresses: List[str]
        """

        self._mac_addresses = mac_addresses

    @property
    def machine_id(self):
        """Gets the machine_id of this DiscoveryDetails.

        Gets or sets the unique identifier of the machine.

        :return: The machine_id of this DiscoveryDetails.
        :rtype: str
        """
        return self._machine_id

    @machine_id.setter
    def machine_id(self, machine_id):
        """Sets the machine_id of this DiscoveryDetails.

        Gets or sets the unique identifier of the machine.

        :param machine_id: The machine_id of this DiscoveryDetails.
        :type machine_id: str
        """

        self._machine_id = machine_id

    @property
    def machine_manager_id(self):
        """Gets the machine_manager_id of this DiscoveryDetails.

        Gets or sets the unique identifier of the virtual machine manager(vCenter/VMM).

        :return: The machine_manager_id of this DiscoveryDetails.
        :rtype: str
        """
        return self._machine_manager_id

    @machine_manager_id.setter
    def machine_manager_id(self, machine_manager_id):
        """Sets the machine_manager_id of this DiscoveryDetails.

        Gets or sets the unique identifier of the virtual machine manager(vCenter/VMM).

        :param machine_manager_id: The machine_manager_id of this DiscoveryDetails.
        :type machine_manager_id: str
        """

        self._machine_manager_id = machine_manager_id

    @property
    def machine_name(self):
        """Gets the machine_name of this DiscoveryDetails.

        Gets or sets the name of the machine.

        :return: The machine_name of this DiscoveryDetails.
        :rtype: str
        """
        return self._machine_name

    @machine_name.setter
    def machine_name(self, machine_name):
        """Sets the machine_name of this DiscoveryDetails.

        Gets or sets the name of the machine.

        :param machine_name: The machine_name of this DiscoveryDetails.
        :type machine_name: str
        """

        self._machine_name = machine_name

    @property
    def os_name(self):
        """Gets the os_name of this DiscoveryDetails.

        Gets or sets the OS name.

        :return: The os_name of this DiscoveryDetails.
        :rtype: str
        """
        return self._os_name

    @os_name.setter
    def os_name(self, os_name):
        """Sets the os_name of this DiscoveryDetails.

        Gets or sets the OS name.

        :param os_name: The os_name of this DiscoveryDetails.
        :type os_name: str
        """

        self._os_name = os_name

    @property
    def os_type(self):
        """Gets the os_type of this DiscoveryDetails.

        Gets or sets the OS type.

        :return: The os_type of this DiscoveryDetails.
        :rtype: str
        """
        return self._os_type

    @os_type.setter
    def os_type(self, os_type):
        """Sets the os_type of this DiscoveryDetails.

        Gets or sets the OS type.

        :param os_type: The os_type of this DiscoveryDetails.
        :type os_type: str
        """

        self._os_type = os_type

    @property
    def os_version(self):
        """Gets the os_version of this DiscoveryDetails.

        Gets or sets the OS version.

        :return: The os_version of this DiscoveryDetails.
        :rtype: str
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """Sets the os_version of this DiscoveryDetails.

        Gets or sets the OS version.

        :param os_version: The os_version of this DiscoveryDetails.
        :type os_version: str
        """

        self._os_version = os_version

    @property
    def solution_name(self):
        """Gets the solution_name of this DiscoveryDetails.

        Gets or sets the name of the solution that sent the data.

        :return: The solution_name of this DiscoveryDetails.
        :rtype: str
        """
        return self._solution_name

    @solution_name.setter
    def solution_name(self, solution_name):
        """Sets the solution_name of this DiscoveryDetails.

        Gets or sets the name of the solution that sent the data.

        :param solution_name: The solution_name of this DiscoveryDetails.
        :type solution_name: str
        """

        self._solution_name = solution_name
