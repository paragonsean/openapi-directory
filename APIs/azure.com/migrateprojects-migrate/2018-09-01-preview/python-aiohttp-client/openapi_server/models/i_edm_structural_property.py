# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i_edm_structured_type import IEdmStructuredType
from openapi_server.models.i_edm_type_reference import IEdmTypeReference
from openapi_server import util


class IEdmStructuralProperty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, declaring_type: IEdmStructuredType=None, default_value_string: str=None, name: str=None, property_kind: str=None, type: IEdmTypeReference=None):
        """IEdmStructuralProperty - a model defined in OpenAPI

        :param declaring_type: The declaring_type of this IEdmStructuralProperty.
        :param default_value_string: The default_value_string of this IEdmStructuralProperty.
        :param name: The name of this IEdmStructuralProperty.
        :param property_kind: The property_kind of this IEdmStructuralProperty.
        :param type: The type of this IEdmStructuralProperty.
        """
        self.openapi_types = {
            'declaring_type': IEdmStructuredType,
            'default_value_string': str,
            'name': str,
            'property_kind': str,
            'type': IEdmTypeReference
        }

        self.attribute_map = {
            'declaring_type': 'declaringType',
            'default_value_string': 'defaultValueString',
            'name': 'name',
            'property_kind': 'propertyKind',
            'type': 'type'
        }

        self._declaring_type = declaring_type
        self._default_value_string = default_value_string
        self._name = name
        self._property_kind = property_kind
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IEdmStructuralProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IEdmStructuralProperty of this IEdmStructuralProperty.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def declaring_type(self):
        """Gets the declaring_type of this IEdmStructuralProperty.


        :return: The declaring_type of this IEdmStructuralProperty.
        :rtype: IEdmStructuredType
        """
        return self._declaring_type

    @declaring_type.setter
    def declaring_type(self, declaring_type):
        """Sets the declaring_type of this IEdmStructuralProperty.


        :param declaring_type: The declaring_type of this IEdmStructuralProperty.
        :type declaring_type: IEdmStructuredType
        """

        self._declaring_type = declaring_type

    @property
    def default_value_string(self):
        """Gets the default_value_string of this IEdmStructuralProperty.


        :return: The default_value_string of this IEdmStructuralProperty.
        :rtype: str
        """
        return self._default_value_string

    @default_value_string.setter
    def default_value_string(self, default_value_string):
        """Sets the default_value_string of this IEdmStructuralProperty.


        :param default_value_string: The default_value_string of this IEdmStructuralProperty.
        :type default_value_string: str
        """

        self._default_value_string = default_value_string

    @property
    def name(self):
        """Gets the name of this IEdmStructuralProperty.


        :return: The name of this IEdmStructuralProperty.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this IEdmStructuralProperty.


        :param name: The name of this IEdmStructuralProperty.
        :type name: str
        """

        self._name = name

    @property
    def property_kind(self):
        """Gets the property_kind of this IEdmStructuralProperty.


        :return: The property_kind of this IEdmStructuralProperty.
        :rtype: str
        """
        return self._property_kind

    @property_kind.setter
    def property_kind(self, property_kind):
        """Sets the property_kind of this IEdmStructuralProperty.


        :param property_kind: The property_kind of this IEdmStructuralProperty.
        :type property_kind: str
        """
        allowed_values = ["None", "Structural", "Navigation"]  # noqa: E501
        if property_kind not in allowed_values:
            raise ValueError(
                "Invalid value for `property_kind` ({0}), must be one of {1}"
                .format(property_kind, allowed_values)
            )

        self._property_kind = property_kind

    @property
    def type(self):
        """Gets the type of this IEdmStructuralProperty.


        :return: The type of this IEdmStructuralProperty.
        :rtype: IEdmTypeReference
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this IEdmStructuralProperty.


        :param type: The type of this IEdmStructuralProperty.
        :type type: IEdmTypeReference
        """

        self._type = type
