# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extended_summary: Dict[str, str]=None, instance_type: str=None, last_summary_refreshed_time: datetime=None, refresh_summary_state: str=None):
        """ProjectSummary - a model defined in OpenAPI

        :param extended_summary: The extended_summary of this ProjectSummary.
        :param instance_type: The instance_type of this ProjectSummary.
        :param last_summary_refreshed_time: The last_summary_refreshed_time of this ProjectSummary.
        :param refresh_summary_state: The refresh_summary_state of this ProjectSummary.
        """
        self.openapi_types = {
            'extended_summary': Dict[str, str],
            'instance_type': str,
            'last_summary_refreshed_time': datetime,
            'refresh_summary_state': str
        }

        self.attribute_map = {
            'extended_summary': 'extendedSummary',
            'instance_type': 'instanceType',
            'last_summary_refreshed_time': 'lastSummaryRefreshedTime',
            'refresh_summary_state': 'refreshSummaryState'
        }

        self._extended_summary = extended_summary
        self._instance_type = instance_type
        self._last_summary_refreshed_time = last_summary_refreshed_time
        self._refresh_summary_state = refresh_summary_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectSummary of this ProjectSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extended_summary(self):
        """Gets the extended_summary of this ProjectSummary.

        Gets or sets the extended summary.

        :return: The extended_summary of this ProjectSummary.
        :rtype: Dict[str, str]
        """
        return self._extended_summary

    @extended_summary.setter
    def extended_summary(self, extended_summary):
        """Sets the extended_summary of this ProjectSummary.

        Gets or sets the extended summary.

        :param extended_summary: The extended_summary of this ProjectSummary.
        :type extended_summary: Dict[str, str]
        """

        self._extended_summary = extended_summary

    @property
    def instance_type(self):
        """Gets the instance_type of this ProjectSummary.

        Gets the Instance type.

        :return: The instance_type of this ProjectSummary.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this ProjectSummary.

        Gets the Instance type.

        :param instance_type: The instance_type of this ProjectSummary.
        :type instance_type: str
        """

        self._instance_type = instance_type

    @property
    def last_summary_refreshed_time(self):
        """Gets the last_summary_refreshed_time of this ProjectSummary.

        Gets or sets the time when summary was last refreshed.

        :return: The last_summary_refreshed_time of this ProjectSummary.
        :rtype: datetime
        """
        return self._last_summary_refreshed_time

    @last_summary_refreshed_time.setter
    def last_summary_refreshed_time(self, last_summary_refreshed_time):
        """Sets the last_summary_refreshed_time of this ProjectSummary.

        Gets or sets the time when summary was last refreshed.

        :param last_summary_refreshed_time: The last_summary_refreshed_time of this ProjectSummary.
        :type last_summary_refreshed_time: datetime
        """

        self._last_summary_refreshed_time = last_summary_refreshed_time

    @property
    def refresh_summary_state(self):
        """Gets the refresh_summary_state of this ProjectSummary.

        Gets or sets the state of refresh summary.

        :return: The refresh_summary_state of this ProjectSummary.
        :rtype: str
        """
        return self._refresh_summary_state

    @refresh_summary_state.setter
    def refresh_summary_state(self, refresh_summary_state):
        """Sets the refresh_summary_state of this ProjectSummary.

        Gets or sets the state of refresh summary.

        :param refresh_summary_state: The refresh_summary_state of this ProjectSummary.
        :type refresh_summary_state: str
        """
        allowed_values = ["Started", "InProgress", "Completed", "Failed"]  # noqa: E501
        if refresh_summary_state not in allowed_values:
            raise ValueError(
                "Invalid value for `refresh_summary_state` ({0}), must be one of {1}"
                .format(refresh_summary_state, allowed_values)
            )

        self._refresh_summary_state = refresh_summary_state
