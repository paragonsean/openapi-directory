# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.filter_query_option import FilterQueryOption
from openapi_server import util


class ODataQueryOptions1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: FilterQueryOption=None):
        """ODataQueryOptions1 - a model defined in OpenAPI

        :param filter: The filter of this ODataQueryOptions1.
        """
        self.openapi_types = {
            'filter': FilterQueryOption
        }

        self.attribute_map = {
            'filter': 'filter'
        }

        self._filter = filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ODataQueryOptions1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ODataQueryOptions&#x60;1 of this ODataQueryOptions1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this ODataQueryOptions1.


        :return: The filter of this ODataQueryOptions1.
        :rtype: FilterQueryOption
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this ODataQueryOptions1.


        :param filter: The filter of this ODataQueryOptions1.
        :type filter: FilterQueryOption
        """

        self._filter = filter
