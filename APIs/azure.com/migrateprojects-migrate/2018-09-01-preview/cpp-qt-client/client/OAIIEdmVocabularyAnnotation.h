/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIEdmVocabularyAnnotation.h
 *
 * 
 */

#ifndef OAIIEdmVocabularyAnnotation_H
#define OAIIEdmVocabularyAnnotation_H

#include <QJsonObject>

#include "OAIIEdmExpression.h"
#include "OAIIEdmTerm.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIEdmTerm;
class OAIIEdmExpression;

class OAIIEdmVocabularyAnnotation : public OAIObject {
public:
    OAIIEdmVocabularyAnnotation();
    OAIIEdmVocabularyAnnotation(QString json);
    ~OAIIEdmVocabularyAnnotation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getQualifier() const;
    void setQualifier(const QString &qualifier);
    bool is_qualifier_Set() const;
    bool is_qualifier_Valid() const;

    OAIObject getTarget() const;
    void setTarget(const OAIObject &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    OAIIEdmTerm getTerm() const;
    void setTerm(const OAIIEdmTerm &term);
    bool is_term_Set() const;
    bool is_term_Valid() const;

    OAIIEdmExpression getValue() const;
    void setValue(const OAIIEdmExpression &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_qualifier;
    bool m_qualifier_isSet;
    bool m_qualifier_isValid;

    OAIObject m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    OAIIEdmTerm m_term;
    bool m_term_isSet;
    bool m_term_isValid;

    OAIIEdmExpression m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIEdmVocabularyAnnotation)

#endif // OAIIEdmVocabularyAnnotation_H
