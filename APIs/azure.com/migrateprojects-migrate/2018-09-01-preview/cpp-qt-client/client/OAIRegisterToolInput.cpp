/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegisterToolInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegisterToolInput::OAIRegisterToolInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegisterToolInput::OAIRegisterToolInput() {
    this->initializeModel();
}

OAIRegisterToolInput::~OAIRegisterToolInput() {}

void OAIRegisterToolInput::initializeModel() {

    m_tool_isSet = false;
    m_tool_isValid = false;
}

void OAIRegisterToolInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegisterToolInput::fromJsonObject(QJsonObject json) {

    m_tool_isValid = ::OpenAPI::fromJsonValue(m_tool, json[QString("tool")]);
    m_tool_isSet = !json[QString("tool")].isNull() && m_tool_isValid;
}

QString OAIRegisterToolInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegisterToolInput::asJsonObject() const {
    QJsonObject obj;
    if (m_tool_isSet) {
        obj.insert(QString("tool"), ::OpenAPI::toJsonValue(m_tool));
    }
    return obj;
}

QString OAIRegisterToolInput::getTool() const {
    return m_tool;
}
void OAIRegisterToolInput::setTool(const QString &tool) {
    m_tool = tool;
    m_tool_isSet = true;
}

bool OAIRegisterToolInput::is_tool_Set() const{
    return m_tool_isSet;
}

bool OAIRegisterToolInput::is_tool_Valid() const{
    return m_tool_isValid;
}

bool OAIRegisterToolInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tool_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegisterToolInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
