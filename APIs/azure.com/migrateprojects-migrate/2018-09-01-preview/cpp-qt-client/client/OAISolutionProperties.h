/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISolutionProperties.h
 *
 * Class for solution properties.
 */

#ifndef OAISolutionProperties_H
#define OAISolutionProperties_H

#include <QJsonObject>

#include "OAISolutionDetails.h"
#include "OAISolutionSummary.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISolutionDetails;
class OAISolutionSummary;

class OAISolutionProperties : public OAIObject {
public:
    OAISolutionProperties();
    OAISolutionProperties(QString json);
    ~OAISolutionProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCleanupState() const;
    void setCleanupState(const QString &cleanup_state);
    bool is_cleanup_state_Set() const;
    bool is_cleanup_state_Valid() const;

    OAISolutionDetails getDetails() const;
    void setDetails(const OAISolutionDetails &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QString getGoal() const;
    void setGoal(const QString &goal);
    bool is_goal_Set() const;
    bool is_goal_Valid() const;

    QString getPurpose() const;
    void setPurpose(const QString &purpose);
    bool is_purpose_Set() const;
    bool is_purpose_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAISolutionSummary getSummary() const;
    void setSummary(const OAISolutionSummary &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    QString getTool() const;
    void setTool(const QString &tool);
    bool is_tool_Set() const;
    bool is_tool_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cleanup_state;
    bool m_cleanup_state_isSet;
    bool m_cleanup_state_isValid;

    OAISolutionDetails m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QString m_goal;
    bool m_goal_isSet;
    bool m_goal_isValid;

    QString m_purpose;
    bool m_purpose_isSet;
    bool m_purpose_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAISolutionSummary m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    QString m_tool;
    bool m_tool_isSet;
    bool m_tool_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISolutionProperties)

#endif // OAISolutionProperties_H
