/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMigrateProjectProperties.h
 *
 * Class for migrate project properties.
 */

#ifndef OAIMigrateProjectProperties_H
#define OAIMigrateProjectProperties_H

#include <QJsonObject>

#include "OAIProjectSummary.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProjectSummary;

class OAIMigrateProjectProperties : public OAIObject {
public:
    OAIMigrateProjectProperties();
    OAIMigrateProjectProperties(QString json);
    ~OAIMigrateProjectProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getLastSummaryRefreshedTime() const;
    void setLastSummaryRefreshedTime(const QDateTime &last_summary_refreshed_time);
    bool is_last_summary_refreshed_time_Set() const;
    bool is_last_summary_refreshed_time_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getRefreshSummaryState() const;
    void setRefreshSummaryState(const QString &refresh_summary_state);
    bool is_refresh_summary_state_Set() const;
    bool is_refresh_summary_state_Valid() const;

    QList<QString> getRegisteredTools() const;
    void setRegisteredTools(const QList<QString> &registered_tools);
    bool is_registered_tools_Set() const;
    bool is_registered_tools_Valid() const;

    QMap<QString, OAIProjectSummary> getSummary() const;
    void setSummary(const QMap<QString, OAIProjectSummary> &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_last_summary_refreshed_time;
    bool m_last_summary_refreshed_time_isSet;
    bool m_last_summary_refreshed_time_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_refresh_summary_state;
    bool m_refresh_summary_state_isSet;
    bool m_refresh_summary_state_isValid;

    QList<QString> m_registered_tools;
    bool m_registered_tools_isSet;
    bool m_registered_tools_isValid;

    QMap<QString, OAIProjectSummary> m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMigrateProjectProperties)

#endif // OAIMigrateProjectProperties_H
