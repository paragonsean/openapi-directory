/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIODataQueryContext.h
 *
 * 
 */

#ifndef OAIODataQueryContext_H
#define OAIODataQueryContext_H

#include <QJsonObject>

#include "OAIDefaultQuerySettings.h"
#include "OAIIEdmModel.h"
#include "OAIIEdmNavigationSource.h"
#include "OAIIEdmType.h"
#include "OAIODataPath.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDefaultQuerySettings;
class OAIIEdmType;
class OAIIEdmModel;
class OAIIEdmNavigationSource;
class OAIODataPath;

class OAIODataQueryContext : public OAIObject {
public:
    OAIODataQueryContext();
    OAIODataQueryContext(QString json);
    ~OAIODataQueryContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDefaultQuerySettings getDefaultQuerySettings() const;
    void setDefaultQuerySettings(const OAIDefaultQuerySettings &default_query_settings);
    bool is_default_query_settings_Set() const;
    bool is_default_query_settings_Valid() const;

    QString getElementClrType() const;
    void setElementClrType(const QString &element_clr_type);
    bool is_element_clr_type_Set() const;
    bool is_element_clr_type_Valid() const;

    OAIIEdmType getElementType() const;
    void setElementType(const OAIIEdmType &element_type);
    bool is_element_type_Set() const;
    bool is_element_type_Valid() const;

    OAIIEdmModel getModel() const;
    void setModel(const OAIIEdmModel &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    OAIIEdmNavigationSource getNavigationSource() const;
    void setNavigationSource(const OAIIEdmNavigationSource &navigation_source);
    bool is_navigation_source_Set() const;
    bool is_navigation_source_Valid() const;

    OAIODataPath getPath() const;
    void setPath(const OAIODataPath &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    OAIObject getRequestContainer() const;
    void setRequestContainer(const OAIObject &request_container);
    bool is_request_container_Set() const;
    bool is_request_container_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDefaultQuerySettings m_default_query_settings;
    bool m_default_query_settings_isSet;
    bool m_default_query_settings_isValid;

    QString m_element_clr_type;
    bool m_element_clr_type_isSet;
    bool m_element_clr_type_isValid;

    OAIIEdmType m_element_type;
    bool m_element_type_isSet;
    bool m_element_type_isValid;

    OAIIEdmModel m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    OAIIEdmNavigationSource m_navigation_source;
    bool m_navigation_source_isSet;
    bool m_navigation_source_isValid;

    OAIODataPath m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    OAIObject m_request_container;
    bool m_request_container_isSet;
    bool m_request_container_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIODataQueryContext)

#endif // OAIODataQueryContext_H
