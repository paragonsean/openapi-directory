/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatabasesSolutionSummary.h
 *
 * Class representing the databases solution summary.
 */

#ifndef OAIDatabasesSolutionSummary_H
#define OAIDatabasesSolutionSummary_H

#include <QJsonObject>

#include "OAISolutionSummary.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDatabasesSolutionSummary : public OAIObject {
public:
    OAIDatabasesSolutionSummary();
    OAIDatabasesSolutionSummary(QString json);
    ~OAIDatabasesSolutionSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDatabaseInstancesAssessedCount() const;
    void setDatabaseInstancesAssessedCount(const qint32 &database_instances_assessed_count);
    bool is_database_instances_assessed_count_Set() const;
    bool is_database_instances_assessed_count_Valid() const;

    qint32 getDatabasesAssessedCount() const;
    void setDatabasesAssessedCount(const qint32 &databases_assessed_count);
    bool is_databases_assessed_count_Set() const;
    bool is_databases_assessed_count_Valid() const;

    qint32 getMigrationReadyCount() const;
    void setMigrationReadyCount(const qint32 &migration_ready_count);
    bool is_migration_ready_count_Set() const;
    bool is_migration_ready_count_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_database_instances_assessed_count;
    bool m_database_instances_assessed_count_isSet;
    bool m_database_instances_assessed_count_isValid;

    qint32 m_databases_assessed_count;
    bool m_databases_assessed_count_isSet;
    bool m_databases_assessed_count_isValid;

    qint32 m_migration_ready_count;
    bool m_migration_ready_count_isSet;
    bool m_migration_ready_count_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatabasesSolutionSummary)

#endif // OAIDatabasesSolutionSummary_H
