/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIEdmNavigationProperty.h
 *
 * 
 */

#ifndef OAIIEdmNavigationProperty_H
#define OAIIEdmNavigationProperty_H

#include <QJsonObject>

#include "OAIIEdmReferentialConstraint.h"
#include "OAIIEdmStructuredType.h"
#include "OAIIEdmTypeReference.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIEdmStructuredType;
class OAIIEdmReferentialConstraint;
class OAIIEdmTypeReference;

class OAIIEdmNavigationProperty : public OAIObject {
public:
    OAIIEdmNavigationProperty();
    OAIIEdmNavigationProperty(QString json);
    ~OAIIEdmNavigationProperty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isContainsTarget() const;
    void setContainsTarget(const bool &contains_target);
    bool is_contains_target_Set() const;
    bool is_contains_target_Valid() const;

    OAIIEdmStructuredType getDeclaringType() const;
    void setDeclaringType(const OAIIEdmStructuredType &declaring_type);
    bool is_declaring_type_Set() const;
    bool is_declaring_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOnDelete() const;
    void setOnDelete(const QString &on_delete);
    bool is_on_delete_Set() const;
    bool is_on_delete_Valid() const;

    OAIIEdmNavigationProperty getPartner() const;
    void setPartner(const OAIIEdmNavigationProperty &partner);
    bool is_partner_Set() const;
    bool is_partner_Valid() const;

    QString getPropertyKind() const;
    void setPropertyKind(const QString &property_kind);
    bool is_property_kind_Set() const;
    bool is_property_kind_Valid() const;

    OAIIEdmReferentialConstraint getReferentialConstraint() const;
    void setReferentialConstraint(const OAIIEdmReferentialConstraint &referential_constraint);
    bool is_referential_constraint_Set() const;
    bool is_referential_constraint_Valid() const;

    OAIIEdmTypeReference getType() const;
    void setType(const OAIIEdmTypeReference &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_contains_target;
    bool m_contains_target_isSet;
    bool m_contains_target_isValid;

    OAIIEdmStructuredType m_declaring_type;
    bool m_declaring_type_isSet;
    bool m_declaring_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_on_delete;
    bool m_on_delete_isSet;
    bool m_on_delete_isValid;

    OAIIEdmNavigationProperty m_partner;
    bool m_partner_isSet;
    bool m_partner_isValid;

    QString m_property_kind;
    bool m_property_kind_isSet;
    bool m_property_kind_isValid;

    OAIIEdmReferentialConstraint m_referential_constraint;
    bool m_referential_constraint_isSet;
    bool m_referential_constraint_isValid;

    OAIIEdmTypeReference m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIEdmNavigationProperty)

#endif // OAIIEdmNavigationProperty_H
