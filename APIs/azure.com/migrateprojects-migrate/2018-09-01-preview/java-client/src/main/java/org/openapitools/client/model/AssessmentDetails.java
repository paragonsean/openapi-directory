/*
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Assessment properties that can be shared by various publishers.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:17:48.937321-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AssessmentDetails {
  public static final String SERIALIZED_NAME_ASSESSMENT_ID = "assessmentId";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_ID)
  private String assessmentId;

  public static final String SERIALIZED_NAME_BIOS_ID = "biosId";
  @SerializedName(SERIALIZED_NAME_BIOS_ID)
  private String biosId;

  public static final String SERIALIZED_NAME_ENQUEUE_TIME = "enqueueTime";
  @SerializedName(SERIALIZED_NAME_ENQUEUE_TIME)
  private String enqueueTime;

  public static final String SERIALIZED_NAME_EXTENDED_INFO = "extendedInfo";
  @SerializedName(SERIALIZED_NAME_EXTENDED_INFO)
  private Map<String, String> extendedInfo = new HashMap<>();

  public static final String SERIALIZED_NAME_FABRIC_TYPE = "fabricType";
  @SerializedName(SERIALIZED_NAME_FABRIC_TYPE)
  private String fabricType;

  public static final String SERIALIZED_NAME_FQDN = "fqdn";
  @SerializedName(SERIALIZED_NAME_FQDN)
  private String fqdn;

  public static final String SERIALIZED_NAME_IP_ADDRESSES = "ipAddresses";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESSES)
  private List<String> ipAddresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "lastUpdatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
  private OffsetDateTime lastUpdatedTime;

  public static final String SERIALIZED_NAME_MAC_ADDRESSES = "macAddresses";
  @SerializedName(SERIALIZED_NAME_MAC_ADDRESSES)
  private List<String> macAddresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_MACHINE_ID = "machineId";
  @SerializedName(SERIALIZED_NAME_MACHINE_ID)
  private String machineId;

  public static final String SERIALIZED_NAME_MACHINE_MANAGER_ID = "machineManagerId";
  @SerializedName(SERIALIZED_NAME_MACHINE_MANAGER_ID)
  private String machineManagerId;

  public static final String SERIALIZED_NAME_MACHINE_NAME = "machineName";
  @SerializedName(SERIALIZED_NAME_MACHINE_NAME)
  private String machineName;

  public static final String SERIALIZED_NAME_SOLUTION_NAME = "solutionName";
  @SerializedName(SERIALIZED_NAME_SOLUTION_NAME)
  private String solutionName;

  public static final String SERIALIZED_NAME_TARGET_STORAGE_TYPE = "targetStorageType";
  @SerializedName(SERIALIZED_NAME_TARGET_STORAGE_TYPE)
  private Map<String, String> targetStorageType = new HashMap<>();

  public static final String SERIALIZED_NAME_TARGET_V_M_LOCATION = "targetVMLocation";
  @SerializedName(SERIALIZED_NAME_TARGET_V_M_LOCATION)
  private String targetVMLocation;

  public static final String SERIALIZED_NAME_TARGET_V_M_SIZE = "targetVMSize";
  @SerializedName(SERIALIZED_NAME_TARGET_V_M_SIZE)
  private String targetVMSize;

  public AssessmentDetails() {
  }

  public AssessmentDetails assessmentId(String assessmentId) {
    this.assessmentId = assessmentId;
    return this;
  }

  /**
   * Gets or sets the id of the assessment done on the machine.
   * @return assessmentId
   */
  @javax.annotation.Nullable
  public String getAssessmentId() {
    return assessmentId;
  }

  public void setAssessmentId(String assessmentId) {
    this.assessmentId = assessmentId;
  }


  public AssessmentDetails biosId(String biosId) {
    this.biosId = biosId;
    return this;
  }

  /**
   * Gets or sets the BIOS ID of the machine.
   * @return biosId
   */
  @javax.annotation.Nullable
  public String getBiosId() {
    return biosId;
  }

  public void setBiosId(String biosId) {
    this.biosId = biosId;
  }


  public AssessmentDetails enqueueTime(String enqueueTime) {
    this.enqueueTime = enqueueTime;
    return this;
  }

  /**
   * Gets or sets the time the message was enqueued.
   * @return enqueueTime
   */
  @javax.annotation.Nullable
  public String getEnqueueTime() {
    return enqueueTime;
  }

  public void setEnqueueTime(String enqueueTime) {
    this.enqueueTime = enqueueTime;
  }


  public AssessmentDetails extendedInfo(Map<String, String> extendedInfo) {
    this.extendedInfo = extendedInfo;
    return this;
  }

  public AssessmentDetails putExtendedInfoItem(String key, String extendedInfoItem) {
    if (this.extendedInfo == null) {
      this.extendedInfo = new HashMap<>();
    }
    this.extendedInfo.put(key, extendedInfoItem);
    return this;
  }

  /**
   * Gets or sets the ISV specific extended information.
   * @return extendedInfo
   */
  @javax.annotation.Nullable
  public Map<String, String> getExtendedInfo() {
    return extendedInfo;
  }

  public void setExtendedInfo(Map<String, String> extendedInfo) {
    this.extendedInfo = extendedInfo;
  }


  public AssessmentDetails fabricType(String fabricType) {
    this.fabricType = fabricType;
    return this;
  }

  /**
   * Gets or sets the fabric type.
   * @return fabricType
   */
  @javax.annotation.Nullable
  public String getFabricType() {
    return fabricType;
  }

  public void setFabricType(String fabricType) {
    this.fabricType = fabricType;
  }


  public AssessmentDetails fqdn(String fqdn) {
    this.fqdn = fqdn;
    return this;
  }

  /**
   * Gets or sets the FQDN of the machine.
   * @return fqdn
   */
  @javax.annotation.Nullable
  public String getFqdn() {
    return fqdn;
  }

  public void setFqdn(String fqdn) {
    this.fqdn = fqdn;
  }


  public AssessmentDetails ipAddresses(List<String> ipAddresses) {
    this.ipAddresses = ipAddresses;
    return this;
  }

  public AssessmentDetails addIpAddressesItem(String ipAddressesItem) {
    if (this.ipAddresses == null) {
      this.ipAddresses = new ArrayList<>();
    }
    this.ipAddresses.add(ipAddressesItem);
    return this;
  }

  /**
   * Gets or sets the list of IP addresses of the machine. IP addresses could be IP V4 or IP V6.
   * @return ipAddresses
   */
  @javax.annotation.Nullable
  public List<String> getIpAddresses() {
    return ipAddresses;
  }

  public void setIpAddresses(List<String> ipAddresses) {
    this.ipAddresses = ipAddresses;
  }


  public AssessmentDetails lastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
    return this;
  }

  /**
   * Gets or sets the time of the last modification of the machine details.
   * @return lastUpdatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedTime() {
    return lastUpdatedTime;
  }

  public void setLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }


  public AssessmentDetails macAddresses(List<String> macAddresses) {
    this.macAddresses = macAddresses;
    return this;
  }

  public AssessmentDetails addMacAddressesItem(String macAddressesItem) {
    if (this.macAddresses == null) {
      this.macAddresses = new ArrayList<>();
    }
    this.macAddresses.add(macAddressesItem);
    return this;
  }

  /**
   * Gets or sets the list of MAC addresses of the machine.
   * @return macAddresses
   */
  @javax.annotation.Nullable
  public List<String> getMacAddresses() {
    return macAddresses;
  }

  public void setMacAddresses(List<String> macAddresses) {
    this.macAddresses = macAddresses;
  }


  public AssessmentDetails machineId(String machineId) {
    this.machineId = machineId;
    return this;
  }

  /**
   * Gets or sets the unique identifier of the machine.
   * @return machineId
   */
  @javax.annotation.Nullable
  public String getMachineId() {
    return machineId;
  }

  public void setMachineId(String machineId) {
    this.machineId = machineId;
  }


  public AssessmentDetails machineManagerId(String machineManagerId) {
    this.machineManagerId = machineManagerId;
    return this;
  }

  /**
   * Gets or sets the unique identifier of the virtual machine manager(vCenter/VMM).
   * @return machineManagerId
   */
  @javax.annotation.Nullable
  public String getMachineManagerId() {
    return machineManagerId;
  }

  public void setMachineManagerId(String machineManagerId) {
    this.machineManagerId = machineManagerId;
  }


  public AssessmentDetails machineName(String machineName) {
    this.machineName = machineName;
    return this;
  }

  /**
   * Gets or sets the name of the machine.
   * @return machineName
   */
  @javax.annotation.Nullable
  public String getMachineName() {
    return machineName;
  }

  public void setMachineName(String machineName) {
    this.machineName = machineName;
  }


  public AssessmentDetails solutionName(String solutionName) {
    this.solutionName = solutionName;
    return this;
  }

  /**
   * Gets or sets the name of the solution that sent the data.
   * @return solutionName
   */
  @javax.annotation.Nullable
  public String getSolutionName() {
    return solutionName;
  }

  public void setSolutionName(String solutionName) {
    this.solutionName = solutionName;
  }


  public AssessmentDetails targetStorageType(Map<String, String> targetStorageType) {
    this.targetStorageType = targetStorageType;
    return this;
  }

  public AssessmentDetails putTargetStorageTypeItem(String key, String targetStorageTypeItem) {
    if (this.targetStorageType == null) {
      this.targetStorageType = new HashMap<>();
    }
    this.targetStorageType.put(key, targetStorageTypeItem);
    return this;
  }

  /**
   * Gets or sets the target storage type.
   * @return targetStorageType
   */
  @javax.annotation.Nullable
  public Map<String, String> getTargetStorageType() {
    return targetStorageType;
  }

  public void setTargetStorageType(Map<String, String> targetStorageType) {
    this.targetStorageType = targetStorageType;
  }


  public AssessmentDetails targetVMLocation(String targetVMLocation) {
    this.targetVMLocation = targetVMLocation;
    return this;
  }

  /**
   * Gets or sets the target VM location.
   * @return targetVMLocation
   */
  @javax.annotation.Nullable
  public String getTargetVMLocation() {
    return targetVMLocation;
  }

  public void setTargetVMLocation(String targetVMLocation) {
    this.targetVMLocation = targetVMLocation;
  }


  public AssessmentDetails targetVMSize(String targetVMSize) {
    this.targetVMSize = targetVMSize;
    return this;
  }

  /**
   * Gets or sets the target VM size.
   * @return targetVMSize
   */
  @javax.annotation.Nullable
  public String getTargetVMSize() {
    return targetVMSize;
  }

  public void setTargetVMSize(String targetVMSize) {
    this.targetVMSize = targetVMSize;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssessmentDetails assessmentDetails = (AssessmentDetails) o;
    return Objects.equals(this.assessmentId, assessmentDetails.assessmentId) &&
        Objects.equals(this.biosId, assessmentDetails.biosId) &&
        Objects.equals(this.enqueueTime, assessmentDetails.enqueueTime) &&
        Objects.equals(this.extendedInfo, assessmentDetails.extendedInfo) &&
        Objects.equals(this.fabricType, assessmentDetails.fabricType) &&
        Objects.equals(this.fqdn, assessmentDetails.fqdn) &&
        Objects.equals(this.ipAddresses, assessmentDetails.ipAddresses) &&
        Objects.equals(this.lastUpdatedTime, assessmentDetails.lastUpdatedTime) &&
        Objects.equals(this.macAddresses, assessmentDetails.macAddresses) &&
        Objects.equals(this.machineId, assessmentDetails.machineId) &&
        Objects.equals(this.machineManagerId, assessmentDetails.machineManagerId) &&
        Objects.equals(this.machineName, assessmentDetails.machineName) &&
        Objects.equals(this.solutionName, assessmentDetails.solutionName) &&
        Objects.equals(this.targetStorageType, assessmentDetails.targetStorageType) &&
        Objects.equals(this.targetVMLocation, assessmentDetails.targetVMLocation) &&
        Objects.equals(this.targetVMSize, assessmentDetails.targetVMSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assessmentId, biosId, enqueueTime, extendedInfo, fabricType, fqdn, ipAddresses, lastUpdatedTime, macAddresses, machineId, machineManagerId, machineName, solutionName, targetStorageType, targetVMLocation, targetVMSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssessmentDetails {\n");
    sb.append("    assessmentId: ").append(toIndentedString(assessmentId)).append("\n");
    sb.append("    biosId: ").append(toIndentedString(biosId)).append("\n");
    sb.append("    enqueueTime: ").append(toIndentedString(enqueueTime)).append("\n");
    sb.append("    extendedInfo: ").append(toIndentedString(extendedInfo)).append("\n");
    sb.append("    fabricType: ").append(toIndentedString(fabricType)).append("\n");
    sb.append("    fqdn: ").append(toIndentedString(fqdn)).append("\n");
    sb.append("    ipAddresses: ").append(toIndentedString(ipAddresses)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    macAddresses: ").append(toIndentedString(macAddresses)).append("\n");
    sb.append("    machineId: ").append(toIndentedString(machineId)).append("\n");
    sb.append("    machineManagerId: ").append(toIndentedString(machineManagerId)).append("\n");
    sb.append("    machineName: ").append(toIndentedString(machineName)).append("\n");
    sb.append("    solutionName: ").append(toIndentedString(solutionName)).append("\n");
    sb.append("    targetStorageType: ").append(toIndentedString(targetStorageType)).append("\n");
    sb.append("    targetVMLocation: ").append(toIndentedString(targetVMLocation)).append("\n");
    sb.append("    targetVMSize: ").append(toIndentedString(targetVMSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assessmentId");
    openapiFields.add("biosId");
    openapiFields.add("enqueueTime");
    openapiFields.add("extendedInfo");
    openapiFields.add("fabricType");
    openapiFields.add("fqdn");
    openapiFields.add("ipAddresses");
    openapiFields.add("lastUpdatedTime");
    openapiFields.add("macAddresses");
    openapiFields.add("machineId");
    openapiFields.add("machineManagerId");
    openapiFields.add("machineName");
    openapiFields.add("solutionName");
    openapiFields.add("targetStorageType");
    openapiFields.add("targetVMLocation");
    openapiFields.add("targetVMSize");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssessmentDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssessmentDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssessmentDetails is not found in the empty JSON string", AssessmentDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssessmentDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssessmentDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("assessmentId") != null && !jsonObj.get("assessmentId").isJsonNull()) && !jsonObj.get("assessmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assessmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assessmentId").toString()));
      }
      if ((jsonObj.get("biosId") != null && !jsonObj.get("biosId").isJsonNull()) && !jsonObj.get("biosId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `biosId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("biosId").toString()));
      }
      if ((jsonObj.get("enqueueTime") != null && !jsonObj.get("enqueueTime").isJsonNull()) && !jsonObj.get("enqueueTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enqueueTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enqueueTime").toString()));
      }
      if ((jsonObj.get("fabricType") != null && !jsonObj.get("fabricType").isJsonNull()) && !jsonObj.get("fabricType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fabricType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fabricType").toString()));
      }
      if ((jsonObj.get("fqdn") != null && !jsonObj.get("fqdn").isJsonNull()) && !jsonObj.get("fqdn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fqdn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fqdn").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ipAddresses") != null && !jsonObj.get("ipAddresses").isJsonNull() && !jsonObj.get("ipAddresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ipAddresses` to be an array in the JSON string but got `%s`", jsonObj.get("ipAddresses").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("macAddresses") != null && !jsonObj.get("macAddresses").isJsonNull() && !jsonObj.get("macAddresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `macAddresses` to be an array in the JSON string but got `%s`", jsonObj.get("macAddresses").toString()));
      }
      if ((jsonObj.get("machineId") != null && !jsonObj.get("machineId").isJsonNull()) && !jsonObj.get("machineId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `machineId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("machineId").toString()));
      }
      if ((jsonObj.get("machineManagerId") != null && !jsonObj.get("machineManagerId").isJsonNull()) && !jsonObj.get("machineManagerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `machineManagerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("machineManagerId").toString()));
      }
      if ((jsonObj.get("machineName") != null && !jsonObj.get("machineName").isJsonNull()) && !jsonObj.get("machineName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `machineName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("machineName").toString()));
      }
      if ((jsonObj.get("solutionName") != null && !jsonObj.get("solutionName").isJsonNull()) && !jsonObj.get("solutionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `solutionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("solutionName").toString()));
      }
      if ((jsonObj.get("targetVMLocation") != null && !jsonObj.get("targetVMLocation").isJsonNull()) && !jsonObj.get("targetVMLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetVMLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetVMLocation").toString()));
      }
      if ((jsonObj.get("targetVMSize") != null && !jsonObj.get("targetVMSize").isJsonNull()) && !jsonObj.get("targetVMSize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetVMSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetVMSize").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssessmentDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssessmentDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssessmentDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssessmentDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AssessmentDetails>() {
           @Override
           public void write(JsonWriter out, AssessmentDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssessmentDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssessmentDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssessmentDetails
   * @throws IOException if the JSON string is invalid with respect to AssessmentDetails
   */
  public static AssessmentDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssessmentDetails.class);
  }

  /**
   * Convert an instance of AssessmentDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

