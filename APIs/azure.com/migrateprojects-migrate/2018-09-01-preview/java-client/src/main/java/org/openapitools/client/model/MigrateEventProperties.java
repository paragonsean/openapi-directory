/*
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Properties of the error resource.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:17:48.937321-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MigrateEventProperties {
  public static final String SERIALIZED_NAME_CLIENT_REQUEST_ID = "clientRequestId";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_ID)
  private String clientRequestId;

  public static final String SERIALIZED_NAME_ERROR_CODE = "errorCode";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private String errorCode;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "errorMessage";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "instanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  protected String instanceType;

  public static final String SERIALIZED_NAME_POSSIBLE_CAUSES = "possibleCauses";
  @SerializedName(SERIALIZED_NAME_POSSIBLE_CAUSES)
  private String possibleCauses;

  public static final String SERIALIZED_NAME_RECOMMENDATION = "recommendation";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATION)
  private String recommendation;

  public static final String SERIALIZED_NAME_SOLUTION = "solution";
  @SerializedName(SERIALIZED_NAME_SOLUTION)
  private String solution;

  public MigrateEventProperties() {
    this.instanceType = this.getClass().getSimpleName();
  }

  public MigrateEventProperties(
     String instanceType
  ) {
    this();
    this.instanceType = instanceType;
  }

  public MigrateEventProperties clientRequestId(String clientRequestId) {
    this.clientRequestId = clientRequestId;
    return this;
  }

  /**
   * Gets or sets the client request Id of the payload for which the event is being reported.
   * @return clientRequestId
   */
  @javax.annotation.Nullable
  public String getClientRequestId() {
    return clientRequestId;
  }

  public void setClientRequestId(String clientRequestId) {
    this.clientRequestId = clientRequestId;
  }


  public MigrateEventProperties errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * Gets or sets the error code.
   * @return errorCode
   */
  @javax.annotation.Nullable
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }


  public MigrateEventProperties errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Gets or sets the error message.
   * @return errorMessage
   */
  @javax.annotation.Nullable
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  /**
   * Gets the Instance type.
   * @return instanceType
   */
  @javax.annotation.Nullable
  public String getInstanceType() {
    return instanceType;
  }



  public MigrateEventProperties possibleCauses(String possibleCauses) {
    this.possibleCauses = possibleCauses;
    return this;
  }

  /**
   * Gets or sets the possible causes for the error.
   * @return possibleCauses
   */
  @javax.annotation.Nullable
  public String getPossibleCauses() {
    return possibleCauses;
  }

  public void setPossibleCauses(String possibleCauses) {
    this.possibleCauses = possibleCauses;
  }


  public MigrateEventProperties recommendation(String recommendation) {
    this.recommendation = recommendation;
    return this;
  }

  /**
   * Gets or sets the recommendation for the error.
   * @return recommendation
   */
  @javax.annotation.Nullable
  public String getRecommendation() {
    return recommendation;
  }

  public void setRecommendation(String recommendation) {
    this.recommendation = recommendation;
  }


  public MigrateEventProperties solution(String solution) {
    this.solution = solution;
    return this;
  }

  /**
   * Gets or sets the solution for which the error is being reported.
   * @return solution
   */
  @javax.annotation.Nullable
  public String getSolution() {
    return solution;
  }

  public void setSolution(String solution) {
    this.solution = solution;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MigrateEventProperties migrateEventProperties = (MigrateEventProperties) o;
    return Objects.equals(this.clientRequestId, migrateEventProperties.clientRequestId) &&
        Objects.equals(this.errorCode, migrateEventProperties.errorCode) &&
        Objects.equals(this.errorMessage, migrateEventProperties.errorMessage) &&
        Objects.equals(this.instanceType, migrateEventProperties.instanceType) &&
        Objects.equals(this.possibleCauses, migrateEventProperties.possibleCauses) &&
        Objects.equals(this.recommendation, migrateEventProperties.recommendation) &&
        Objects.equals(this.solution, migrateEventProperties.solution);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientRequestId, errorCode, errorMessage, instanceType, possibleCauses, recommendation, solution);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MigrateEventProperties {\n");
    sb.append("    clientRequestId: ").append(toIndentedString(clientRequestId)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    possibleCauses: ").append(toIndentedString(possibleCauses)).append("\n");
    sb.append("    recommendation: ").append(toIndentedString(recommendation)).append("\n");
    sb.append("    solution: ").append(toIndentedString(solution)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clientRequestId");
    openapiFields.add("errorCode");
    openapiFields.add("errorMessage");
    openapiFields.add("instanceType");
    openapiFields.add("possibleCauses");
    openapiFields.add("recommendation");
    openapiFields.add("solution");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MigrateEventProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MigrateEventProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MigrateEventProperties is not found in the empty JSON string", MigrateEventProperties.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("instanceType").getAsString();
      switch (discriminatorValue) {
        case "DatabaseMigrateEventProperties":
          DatabaseMigrateEventProperties.validateJsonElement(jsonElement);
          break;
        case "MachineMigrateEventProperties":
          MachineMigrateEventProperties.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `instanceType` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of MigrateEventProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MigrateEventProperties
   * @throws IOException if the JSON string is invalid with respect to MigrateEventProperties
   */
  public static MigrateEventProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MigrateEventProperties.class);
  }

  /**
   * Convert an instance of MigrateEventProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

