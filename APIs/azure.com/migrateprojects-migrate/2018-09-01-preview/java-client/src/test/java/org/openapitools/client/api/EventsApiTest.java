/*
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EventCollection;
import org.openapitools.client.model.MigrateEvent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsApi
 */
@Disabled
public class EventsApiTest {

    private final EventsApi api = new EventsApi();

    /**
     * Delete the migrate event
     *
     * Delete the migrate event. Deleting non-existent migrate event is a no-operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventsDeleteEventTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String migrateProjectName = null;
        String apiVersion = null;
        String eventName = null;
        api.eventsDeleteEvent(subscriptionId, resourceGroupName, migrateProjectName, apiVersion, eventName);
        // TODO: test validations
    }

    /**
     * Gets a list of events in the migrate project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventsEnumerateEventsTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String migrateProjectName = null;
        String apiVersion = null;
        String continuationToken = null;
        Integer pageSize = null;
        String acceptLanguage = null;
        EventCollection response = api.eventsEnumerateEvents(subscriptionId, resourceGroupName, migrateProjectName, apiVersion, continuationToken, pageSize, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Gets an event in the migrate project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventsGetEventTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String migrateProjectName = null;
        String apiVersion = null;
        String eventName = null;
        MigrateEvent response = api.eventsGetEvent(subscriptionId, resourceGroupName, migrateProjectName, apiVersion, eventName);
        // TODO: test validations
    }

}
