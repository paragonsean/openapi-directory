/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Machine from '../model/Machine';
import MachineCollection from '../model/MachineCollection';

/**
* Machines service.
* @module api/MachinesApi
* @version 2018-09-01-preview
*/
export default class MachinesApi {

    /**
    * Constructs a new MachinesApi. 
    * @alias module:api/MachinesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the machinesEnumerateMachines operation.
     * @callback module:api/MachinesApi~machinesEnumerateMachinesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MachineCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of machines in the migrate project.
     * @param {String} subscriptionId Azure Subscription Id in which migrate project was created.
     * @param {String} resourceGroupName Name of the Azure Resource Group that migrate project is part of.
     * @param {String} migrateProjectName Name of the Azure Migrate project.
     * @param {module:model/String} apiVersion Standard request header. Used by service to identify API version used by client.
     * @param {Object} opts Optional parameters
     * @param {String} [continuationToken] The continuation token.
     * @param {Number} [pageSize] The number of items to be returned in a single page. This value is honored only if it is less than the 100.
     * @param {module:api/MachinesApi~machinesEnumerateMachinesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MachineCollection}
     */
    machinesEnumerateMachines(subscriptionId, resourceGroupName, migrateProjectName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling machinesEnumerateMachines");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling machinesEnumerateMachines");
      }
      // verify the required parameter 'migrateProjectName' is set
      if (migrateProjectName === undefined || migrateProjectName === null) {
        throw new Error("Missing the required parameter 'migrateProjectName' when calling machinesEnumerateMachines");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling machinesEnumerateMachines");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'migrateProjectName': migrateProjectName
      };
      let queryParams = {
        'api-version': apiVersion,
        'continuationToken': opts['continuationToken'],
        'pageSize': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MachineCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/machines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the machinesGetMachine operation.
     * @callback module:api/MachinesApi~machinesGetMachineCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Machine} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a machine in the migrate project.
     * @param {String} subscriptionId Azure Subscription Id in which migrate project was created.
     * @param {String} resourceGroupName Name of the Azure Resource Group that migrate project is part of.
     * @param {String} migrateProjectName Name of the Azure Migrate project.
     * @param {module:model/String} apiVersion Standard request header. Used by service to identify API version used by client.
     * @param {String} machineName Unique name of a machine in Azure migration hub.
     * @param {module:api/MachinesApi~machinesGetMachineCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Machine}
     */
    machinesGetMachine(subscriptionId, resourceGroupName, migrateProjectName, apiVersion, machineName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling machinesGetMachine");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling machinesGetMachine");
      }
      // verify the required parameter 'migrateProjectName' is set
      if (migrateProjectName === undefined || migrateProjectName === null) {
        throw new Error("Missing the required parameter 'migrateProjectName' when calling machinesGetMachine");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling machinesGetMachine");
      }
      // verify the required parameter 'machineName' is set
      if (machineName === undefined || machineName === null) {
        throw new Error("Missing the required parameter 'machineName' when calling machinesGetMachine");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'migrateProjectName': migrateProjectName,
        'machineName': machineName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Machine;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/machines/{machineName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
