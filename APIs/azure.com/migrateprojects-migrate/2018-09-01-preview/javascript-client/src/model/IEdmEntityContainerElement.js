/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IEdmEntityContainer from './IEdmEntityContainer';

/**
 * The IEdmEntityContainerElement model module.
 * @module model/IEdmEntityContainerElement
 * @version 2018-09-01-preview
 */
class IEdmEntityContainerElement {
    /**
     * Constructs a new <code>IEdmEntityContainerElement</code>.
     * @alias module:model/IEdmEntityContainerElement
     */
    constructor() { 
        
        IEdmEntityContainerElement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IEdmEntityContainerElement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IEdmEntityContainerElement} obj Optional instance to populate.
     * @return {module:model/IEdmEntityContainerElement} The populated <code>IEdmEntityContainerElement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IEdmEntityContainerElement();

            if (data.hasOwnProperty('container')) {
                obj['container'] = IEdmEntityContainer.constructFromObject(data['container']);
            }
            if (data.hasOwnProperty('containerElementKind')) {
                obj['containerElementKind'] = ApiClient.convertToType(data['containerElementKind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IEdmEntityContainerElement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IEdmEntityContainerElement</code>.
     */
    static validateJSON(data) {
        // validate the optional field `container`
        if (data['container']) { // data not null
          IEdmEntityContainer.validateJSON(data['container']);
        }
        // ensure the json data is a string
        if (data['containerElementKind'] && !(typeof data['containerElementKind'] === 'string' || data['containerElementKind'] instanceof String)) {
            throw new Error("Expected the field `containerElementKind` to be a primitive type in the JSON string but got " + data['containerElementKind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/IEdmEntityContainer} container
 */
IEdmEntityContainerElement.prototype['container'] = undefined;

/**
 * @member {module:model/IEdmEntityContainerElement.ContainerElementKindEnum} containerElementKind
 */
IEdmEntityContainerElement.prototype['containerElementKind'] = undefined;

/**
 * @member {String} name
 */
IEdmEntityContainerElement.prototype['name'] = undefined;





/**
 * Allowed values for the <code>containerElementKind</code> property.
 * @enum {String}
 * @readonly
 */
IEdmEntityContainerElement['ContainerElementKindEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "EntitySet"
     * @const
     */
    "EntitySet": "EntitySet",

    /**
     * value: "ActionImport"
     * @const
     */
    "ActionImport": "ActionImport",

    /**
     * value: "FunctionImport"
     * @const
     */
    "FunctionImport": "FunctionImport",

    /**
     * value: "Singleton"
     * @const
     */
    "Singleton": "Singleton"
};



export default IEdmEntityContainerElement;

