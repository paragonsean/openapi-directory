/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatabaseInstanceDiscoveryDetails from './DatabaseInstanceDiscoveryDetails';
import DatabaseInstanceSummary from './DatabaseInstanceSummary';

/**
 * The DatabaseInstanceProperties model module.
 * @module model/DatabaseInstanceProperties
 * @version 2018-09-01-preview
 */
class DatabaseInstanceProperties {
    /**
     * Constructs a new <code>DatabaseInstanceProperties</code>.
     * Properties of the database instance resource.
     * @alias module:model/DatabaseInstanceProperties
     */
    constructor() { 
        
        DatabaseInstanceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DatabaseInstanceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatabaseInstanceProperties} obj Optional instance to populate.
     * @return {module:model/DatabaseInstanceProperties} The populated <code>DatabaseInstanceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatabaseInstanceProperties();

            if (data.hasOwnProperty('discoveryData')) {
                obj['discoveryData'] = ApiClient.convertToType(data['discoveryData'], [DatabaseInstanceDiscoveryDetails]);
            }
            if (data.hasOwnProperty('lastUpdatedTime')) {
                obj['lastUpdatedTime'] = ApiClient.convertToType(data['lastUpdatedTime'], 'Date');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], {'String': DatabaseInstanceSummary});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatabaseInstanceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatabaseInstanceProperties</code>.
     */
    static validateJSON(data) {
        if (data['discoveryData']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['discoveryData'])) {
                throw new Error("Expected the field `discoveryData` to be an array in the JSON data but got " + data['discoveryData']);
            }
            // validate the optional field `discoveryData` (array)
            for (const item of data['discoveryData']) {
                DatabaseInstanceDiscoveryDetails.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Gets or sets the assessment details of the database instance published by various sources.
 * @member {Array.<module:model/DatabaseInstanceDiscoveryDetails>} discoveryData
 */
DatabaseInstanceProperties.prototype['discoveryData'] = undefined;

/**
 * Gets or sets the time of the last modification of the database.
 * @member {Date} lastUpdatedTime
 */
DatabaseInstanceProperties.prototype['lastUpdatedTime'] = undefined;

/**
 * Gets or sets the database instances summary per solution. The key of dictionary is the solution name and value is the corresponding database instance summary object.
 * @member {Object.<String, module:model/DatabaseInstanceSummary>} summary
 */
DatabaseInstanceProperties.prototype['summary'] = undefined;






export default DatabaseInstanceProperties;

