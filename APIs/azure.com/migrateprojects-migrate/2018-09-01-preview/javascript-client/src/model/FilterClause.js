/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IEdmTypeReference from './IEdmTypeReference';
import RangeVariable from './RangeVariable';
import SingleValueNode from './SingleValueNode';

/**
 * The FilterClause model module.
 * @module model/FilterClause
 * @version 2018-09-01-preview
 */
class FilterClause {
    /**
     * Constructs a new <code>FilterClause</code>.
     * @alias module:model/FilterClause
     */
    constructor() { 
        
        FilterClause.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FilterClause</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilterClause} obj Optional instance to populate.
     * @return {module:model/FilterClause} The populated <code>FilterClause</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilterClause();

            if (data.hasOwnProperty('expression')) {
                obj['expression'] = SingleValueNode.constructFromObject(data['expression']);
            }
            if (data.hasOwnProperty('itemType')) {
                obj['itemType'] = IEdmTypeReference.constructFromObject(data['itemType']);
            }
            if (data.hasOwnProperty('rangeVariable')) {
                obj['rangeVariable'] = RangeVariable.constructFromObject(data['rangeVariable']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FilterClause</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FilterClause</code>.
     */
    static validateJSON(data) {
        // validate the optional field `expression`
        if (data['expression']) { // data not null
          SingleValueNode.validateJSON(data['expression']);
        }
        // validate the optional field `itemType`
        if (data['itemType']) { // data not null
          IEdmTypeReference.validateJSON(data['itemType']);
        }
        // validate the optional field `rangeVariable`
        if (data['rangeVariable']) { // data not null
          RangeVariable.validateJSON(data['rangeVariable']);
        }

        return true;
    }


}



/**
 * @member {module:model/SingleValueNode} expression
 */
FilterClause.prototype['expression'] = undefined;

/**
 * @member {module:model/IEdmTypeReference} itemType
 */
FilterClause.prototype['itemType'] = undefined;

/**
 * @member {module:model/RangeVariable} rangeVariable
 */
FilterClause.prototype['rangeVariable'] = undefined;






export default FilterClause;

