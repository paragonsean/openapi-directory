/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IEdmNavigationPropertyBinding from './IEdmNavigationPropertyBinding';
import IEdmPathExpression from './IEdmPathExpression';
import IEdmType from './IEdmType';

/**
 * The IEdmNavigationSource model module.
 * @module model/IEdmNavigationSource
 * @version 2018-09-01-preview
 */
class IEdmNavigationSource {
    /**
     * Constructs a new <code>IEdmNavigationSource</code>.
     * @alias module:model/IEdmNavigationSource
     */
    constructor() { 
        
        IEdmNavigationSource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IEdmNavigationSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IEdmNavigationSource} obj Optional instance to populate.
     * @return {module:model/IEdmNavigationSource} The populated <code>IEdmNavigationSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IEdmNavigationSource();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('navigationPropertyBindings')) {
                obj['navigationPropertyBindings'] = ApiClient.convertToType(data['navigationPropertyBindings'], [IEdmNavigationPropertyBinding]);
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = IEdmPathExpression.constructFromObject(data['path']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = IEdmType.constructFromObject(data['type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IEdmNavigationSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IEdmNavigationSource</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['navigationPropertyBindings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['navigationPropertyBindings'])) {
                throw new Error("Expected the field `navigationPropertyBindings` to be an array in the JSON data but got " + data['navigationPropertyBindings']);
            }
            // validate the optional field `navigationPropertyBindings` (array)
            for (const item of data['navigationPropertyBindings']) {
                IEdmNavigationPropertyBinding.validateJSON(item);
            };
        }
        // validate the optional field `path`
        if (data['path']) { // data not null
          IEdmPathExpression.validateJSON(data['path']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          IEdmType.validateJSON(data['type']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
IEdmNavigationSource.prototype['name'] = undefined;

/**
 * @member {Array.<module:model/IEdmNavigationPropertyBinding>} navigationPropertyBindings
 */
IEdmNavigationSource.prototype['navigationPropertyBindings'] = undefined;

/**
 * @member {module:model/IEdmPathExpression} path
 */
IEdmNavigationSource.prototype['path'] = undefined;

/**
 * @member {module:model/IEdmType} type
 */
IEdmNavigationSource.prototype['type'] = undefined;






export default IEdmNavigationSource;

