/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SolutionSummary from './SolutionSummary';

/**
 * The ServersSolutionSummary model module.
 * @module model/ServersSolutionSummary
 * @version 2018-09-01-preview
 */
class ServersSolutionSummary {
    /**
     * Constructs a new <code>ServersSolutionSummary</code>.
     * Class representing the servers solution summary.
     * @alias module:model/ServersSolutionSummary
     * @extends module:model/SolutionSummary
     * @implements module:model/SolutionSummary
     */
    constructor() { 
        SolutionSummary.initialize(this);
        ServersSolutionSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServersSolutionSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServersSolutionSummary} obj Optional instance to populate.
     * @return {module:model/ServersSolutionSummary} The populated <code>ServersSolutionSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServersSolutionSummary();
            SolutionSummary.constructFromObject(data, obj);
            SolutionSummary.constructFromObject(data, obj);

            if (data.hasOwnProperty('assessedCount')) {
                obj['assessedCount'] = ApiClient.convertToType(data['assessedCount'], 'Number');
            }
            if (data.hasOwnProperty('discoveredCount')) {
                obj['discoveredCount'] = ApiClient.convertToType(data['discoveredCount'], 'Number');
            }
            if (data.hasOwnProperty('migratedCount')) {
                obj['migratedCount'] = ApiClient.convertToType(data['migratedCount'], 'Number');
            }
            if (data.hasOwnProperty('replicatingCount')) {
                obj['replicatingCount'] = ApiClient.convertToType(data['replicatingCount'], 'Number');
            }
            if (data.hasOwnProperty('testMigratedCount')) {
                obj['testMigratedCount'] = ApiClient.convertToType(data['testMigratedCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServersSolutionSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServersSolutionSummary</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Gets or sets the count of servers assessed.
 * @member {Number} assessedCount
 */
ServersSolutionSummary.prototype['assessedCount'] = undefined;

/**
 * Gets or sets the count of servers discovered.
 * @member {Number} discoveredCount
 */
ServersSolutionSummary.prototype['discoveredCount'] = undefined;

/**
 * Gets or sets the count of servers migrated.
 * @member {Number} migratedCount
 */
ServersSolutionSummary.prototype['migratedCount'] = undefined;

/**
 * Gets or sets the count of servers being replicated.
 * @member {Number} replicatingCount
 */
ServersSolutionSummary.prototype['replicatingCount'] = undefined;

/**
 * Gets or sets the count of servers test migrated.
 * @member {Number} testMigratedCount
 */
ServersSolutionSummary.prototype['testMigratedCount'] = undefined;


// Implement SolutionSummary interface:
/**
 * Gets the Instance type.
 * @member {String} instanceType
 */
SolutionSummary.prototype['instanceType'] = undefined;




export default ServersSolutionSummary;

