/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FilterClause from './FilterClause';
import ODataQueryContext from './ODataQueryContext';

/**
 * The FilterQueryOption model module.
 * @module model/FilterQueryOption
 * @version 2018-09-01-preview
 */
class FilterQueryOption {
    /**
     * Constructs a new <code>FilterQueryOption</code>.
     * @alias module:model/FilterQueryOption
     */
    constructor() { 
        
        FilterQueryOption.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FilterQueryOption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilterQueryOption} obj Optional instance to populate.
     * @return {module:model/FilterQueryOption} The populated <code>FilterQueryOption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilterQueryOption();

            if (data.hasOwnProperty('context')) {
                obj['context'] = ODataQueryContext.constructFromObject(data['context']);
            }
            if (data.hasOwnProperty('filterClause')) {
                obj['filterClause'] = FilterClause.constructFromObject(data['filterClause']);
            }
            if (data.hasOwnProperty('rawValue')) {
                obj['rawValue'] = ApiClient.convertToType(data['rawValue'], 'String');
            }
            if (data.hasOwnProperty('validator')) {
                obj['validator'] = ApiClient.convertToType(data['validator'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FilterQueryOption</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FilterQueryOption</code>.
     */
    static validateJSON(data) {
        // validate the optional field `context`
        if (data['context']) { // data not null
          ODataQueryContext.validateJSON(data['context']);
        }
        // validate the optional field `filterClause`
        if (data['filterClause']) { // data not null
          FilterClause.validateJSON(data['filterClause']);
        }
        // ensure the json data is a string
        if (data['rawValue'] && !(typeof data['rawValue'] === 'string' || data['rawValue'] instanceof String)) {
            throw new Error("Expected the field `rawValue` to be a primitive type in the JSON string but got " + data['rawValue']);
        }

        return true;
    }


}



/**
 * @member {module:model/ODataQueryContext} context
 */
FilterQueryOption.prototype['context'] = undefined;

/**
 * @member {module:model/FilterClause} filterClause
 */
FilterQueryOption.prototype['filterClause'] = undefined;

/**
 * @member {String} rawValue
 */
FilterQueryOption.prototype['rawValue'] = undefined;

/**
 * @member {Object} validator
 */
FilterQueryOption.prototype['validator'] = undefined;






export default FilterQueryOption;

