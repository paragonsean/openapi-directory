/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IEdmTypeReference from './IEdmTypeReference';

/**
 * The RangeVariable model module.
 * @module model/RangeVariable
 * @version 2018-09-01-preview
 */
class RangeVariable {
    /**
     * Constructs a new <code>RangeVariable</code>.
     * @alias module:model/RangeVariable
     */
    constructor() { 
        
        RangeVariable.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RangeVariable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RangeVariable} obj Optional instance to populate.
     * @return {module:model/RangeVariable} The populated <code>RangeVariable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RangeVariable();

            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('typeReference')) {
                obj['typeReference'] = IEdmTypeReference.constructFromObject(data['typeReference']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RangeVariable</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RangeVariable</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `typeReference`
        if (data['typeReference']) { // data not null
          IEdmTypeReference.validateJSON(data['typeReference']);
        }

        return true;
    }


}



/**
 * @member {Number} kind
 */
RangeVariable.prototype['kind'] = undefined;

/**
 * @member {String} name
 */
RangeVariable.prototype['name'] = undefined;

/**
 * @member {module:model/IEdmTypeReference} typeReference
 */
RangeVariable.prototype['typeReference'] = undefined;






export default RangeVariable;

