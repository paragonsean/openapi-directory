/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProjectSummary from './ProjectSummary';

/**
 * The MigrateProjectProperties model module.
 * @module model/MigrateProjectProperties
 * @version 2018-09-01-preview
 */
class MigrateProjectProperties {
    /**
     * Constructs a new <code>MigrateProjectProperties</code>.
     * Class for migrate project properties.
     * @alias module:model/MigrateProjectProperties
     */
    constructor() { 
        
        MigrateProjectProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MigrateProjectProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MigrateProjectProperties} obj Optional instance to populate.
     * @return {module:model/MigrateProjectProperties} The populated <code>MigrateProjectProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MigrateProjectProperties();

            if (data.hasOwnProperty('lastSummaryRefreshedTime')) {
                obj['lastSummaryRefreshedTime'] = ApiClient.convertToType(data['lastSummaryRefreshedTime'], 'Date');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('refreshSummaryState')) {
                obj['refreshSummaryState'] = ApiClient.convertToType(data['refreshSummaryState'], 'String');
            }
            if (data.hasOwnProperty('registeredTools')) {
                obj['registeredTools'] = ApiClient.convertToType(data['registeredTools'], ['String']);
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], {'String': ProjectSummary});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MigrateProjectProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MigrateProjectProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['refreshSummaryState'] && !(typeof data['refreshSummaryState'] === 'string' || data['refreshSummaryState'] instanceof String)) {
            throw new Error("Expected the field `refreshSummaryState` to be a primitive type in the JSON string but got " + data['refreshSummaryState']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['registeredTools'])) {
            throw new Error("Expected the field `registeredTools` to be an array in the JSON data but got " + data['registeredTools']);
        }

        return true;
    }


}



/**
 * Gets the last time the project summary was refreshed.
 * @member {Date} lastSummaryRefreshedTime
 */
MigrateProjectProperties.prototype['lastSummaryRefreshedTime'] = undefined;

/**
 * Provisioning state of the migrate project.
 * @member {module:model/MigrateProjectProperties.ProvisioningStateEnum} provisioningState
 */
MigrateProjectProperties.prototype['provisioningState'] = undefined;

/**
 * Gets the refresh summary state.
 * @member {module:model/MigrateProjectProperties.RefreshSummaryStateEnum} refreshSummaryState
 */
MigrateProjectProperties.prototype['refreshSummaryState'] = undefined;

/**
 * Gets or sets the list of tools registered with the migrate project.
 * @member {Array.<module:model/MigrateProjectProperties.RegisteredToolsEnum>} registeredTools
 */
MigrateProjectProperties.prototype['registeredTools'] = undefined;

/**
 * Gets the summary of the migrate project.
 * @member {Object.<String, module:model/ProjectSummary>} summary
 */
MigrateProjectProperties.prototype['summary'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
MigrateProjectProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Accepted"
     * @const
     */
    "Accepted": "Accepted",

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Moving"
     * @const
     */
    "Moving": "Moving",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded"
};


/**
 * Allowed values for the <code>refreshSummaryState</code> property.
 * @enum {String}
 * @readonly
 */
MigrateProjectProperties['RefreshSummaryStateEnum'] = {

    /**
     * value: "Started"
     * @const
     */
    "Started": "Started",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed"
};


/**
 * Allowed values for the <code>registeredTools</code> property.
 * @enum {String}
 * @readonly
 */
MigrateProjectProperties['RegisteredToolsEnum'] = {

    /**
     * value: "ServerDiscovery"
     * @const
     */
    "ServerDiscovery": "ServerDiscovery",

    /**
     * value: "ServerAssessment"
     * @const
     */
    "ServerAssessment": "ServerAssessment",

    /**
     * value: "ServerMigration"
     * @const
     */
    "ServerMigration": "ServerMigration",

    /**
     * value: "Cloudamize"
     * @const
     */
    "Cloudamize": "Cloudamize",

    /**
     * value: "Turbonomic"
     * @const
     */
    "Turbonomic": "Turbonomic",

    /**
     * value: "Zerto"
     * @const
     */
    "Zerto": "Zerto",

    /**
     * value: "CorentTech"
     * @const
     */
    "CorentTech": "CorentTech",

    /**
     * value: "ServerAssessmentV1"
     * @const
     */
    "ServerAssessmentV1": "ServerAssessmentV1",

    /**
     * value: "ServerMigration_Replication"
     * @const
     */
    "ServerMigration_Replication": "ServerMigration_Replication",

    /**
     * value: "Carbonite"
     * @const
     */
    "Carbonite": "Carbonite",

    /**
     * value: "DataMigrationAssistant"
     * @const
     */
    "DataMigrationAssistant": "DataMigrationAssistant",

    /**
     * value: "DatabaseMigrationService"
     * @const
     */
    "DatabaseMigrationService": "DatabaseMigrationService"
};



export default MigrateProjectProperties;

