/**
 * Azure Migrate Hub
 * Migrate your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * Contact: azuremigratehub@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IEdmType model module.
 * @module model/IEdmType
 * @version 2018-09-01-preview
 */
class IEdmType {
    /**
     * Constructs a new <code>IEdmType</code>.
     * @alias module:model/IEdmType
     */
    constructor() { 
        
        IEdmType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IEdmType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IEdmType} obj Optional instance to populate.
     * @return {module:model/IEdmType} The populated <code>IEdmType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IEdmType();

            if (data.hasOwnProperty('typeKind')) {
                obj['typeKind'] = ApiClient.convertToType(data['typeKind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IEdmType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IEdmType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['typeKind'] && !(typeof data['typeKind'] === 'string' || data['typeKind'] instanceof String)) {
            throw new Error("Expected the field `typeKind` to be a primitive type in the JSON string but got " + data['typeKind']);
        }

        return true;
    }


}



/**
 * @member {module:model/IEdmType.TypeKindEnum} typeKind
 */
IEdmType.prototype['typeKind'] = undefined;





/**
 * Allowed values for the <code>typeKind</code> property.
 * @enum {String}
 * @readonly
 */
IEdmType['TypeKindEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Primitive"
     * @const
     */
    "Primitive": "Primitive",

    /**
     * value: "Entity"
     * @const
     */
    "Entity": "Entity",

    /**
     * value: "Complex"
     * @const
     */
    "Complex": "Complex",

    /**
     * value: "Collection"
     * @const
     */
    "Collection": "Collection",

    /**
     * value: "EntityReference"
     * @const
     */
    "EntityReference": "EntityReference",

    /**
     * value: "Enum"
     * @const
     */
    "Enum": "Enum",

    /**
     * value: "TypeDefinition"
     * @const
     */
    "TypeDefinition": "TypeDefinition",

    /**
     * value: "Untyped"
     * @const
     */
    "Untyped": "Untyped",

    /**
     * value: "Path"
     * @const
     */
    "Path": "Path"
};



export default IEdmType;

