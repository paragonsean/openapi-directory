/**
 * iotDpsClient
 * API for using the Azure IoT Hub Device Provisioning Service features.
 *
 * The version of the OpenAPI document: 2017-08-21-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VerificationCodeResponse model module.
 * @module model/VerificationCodeResponse
 * @version 2017-08-21-preview
 */
class VerificationCodeResponse {
    /**
     * Constructs a new <code>VerificationCodeResponse</code>.
     * Description of the response of the verification code.
     * @alias module:model/VerificationCodeResponse
     */
    constructor() { 
        
        VerificationCodeResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VerificationCodeResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VerificationCodeResponse} obj Optional instance to populate.
     * @return {module:model/VerificationCodeResponse} The populated <code>VerificationCodeResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VerificationCodeResponse();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('expiry')) {
                obj['expiry'] = ApiClient.convertToType(data['expiry'], 'String');
            }
            if (data.hasOwnProperty('isVerified')) {
                obj['isVerified'] = ApiClient.convertToType(data['isVerified'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('thumbprint')) {
                obj['thumbprint'] = ApiClient.convertToType(data['thumbprint'], 'String');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'String');
            }
            if (data.hasOwnProperty('verificationCode')) {
                obj['verificationCode'] = ApiClient.convertToType(data['verificationCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VerificationCodeResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VerificationCodeResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created'] && !(typeof data['created'] === 'string' || data['created'] instanceof String)) {
            throw new Error("Expected the field `created` to be a primitive type in the JSON string but got " + data['created']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['expiry'] && !(typeof data['expiry'] === 'string' || data['expiry'] instanceof String)) {
            throw new Error("Expected the field `expiry` to be a primitive type in the JSON string but got " + data['expiry']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is a string
        if (data['thumbprint'] && !(typeof data['thumbprint'] === 'string' || data['thumbprint'] instanceof String)) {
            throw new Error("Expected the field `thumbprint` to be a primitive type in the JSON string but got " + data['thumbprint']);
        }
        // ensure the json data is a string
        if (data['updated'] && !(typeof data['updated'] === 'string' || data['updated'] instanceof String)) {
            throw new Error("Expected the field `updated` to be a primitive type in the JSON string but got " + data['updated']);
        }
        // ensure the json data is a string
        if (data['verificationCode'] && !(typeof data['verificationCode'] === 'string' || data['verificationCode'] instanceof String)) {
            throw new Error("Expected the field `verificationCode` to be a primitive type in the JSON string but got " + data['verificationCode']);
        }

        return true;
    }


}



/**
 * Certificate created time.
 * @member {String} created
 */
VerificationCodeResponse.prototype['created'] = undefined;

/**
 * Request etag.
 * @member {String} etag
 */
VerificationCodeResponse.prototype['etag'] = undefined;

/**
 * Code expiry.
 * @member {String} expiry
 */
VerificationCodeResponse.prototype['expiry'] = undefined;

/**
 * Indicate if the certificate is verified by owner of private key.
 * @member {Boolean} isVerified
 */
VerificationCodeResponse.prototype['isVerified'] = undefined;

/**
 * Name of certificate.
 * @member {String} name
 */
VerificationCodeResponse.prototype['name'] = undefined;

/**
 * Certificate subject.
 * @member {String} subject
 */
VerificationCodeResponse.prototype['subject'] = undefined;

/**
 * Certificate thumbprint.
 * @member {String} thumbprint
 */
VerificationCodeResponse.prototype['thumbprint'] = undefined;

/**
 * Certificate updated time.
 * @member {String} updated
 */
VerificationCodeResponse.prototype['updated'] = undefined;

/**
 * Verification code.
 * @member {String} verificationCode
 */
VerificationCodeResponse.prototype['verificationCode'] = undefined;






export default VerificationCodeResponse;

