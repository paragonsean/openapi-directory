/**
 * iotDpsClient
 * API for using the Azure IoT Hub Device Provisioning Service features.
 *
 * The version of the OpenAPI document: 2017-11-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProvisioningServiceDescriptionListResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProvisioningServiceDescriptionListResult::OAIProvisioningServiceDescriptionListResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProvisioningServiceDescriptionListResult::OAIProvisioningServiceDescriptionListResult() {
    this->initializeModel();
}

OAIProvisioningServiceDescriptionListResult::~OAIProvisioningServiceDescriptionListResult() {}

void OAIProvisioningServiceDescriptionListResult::initializeModel() {

    m_next_link_isSet = false;
    m_next_link_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIProvisioningServiceDescriptionListResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProvisioningServiceDescriptionListResult::fromJsonObject(QJsonObject json) {

    m_next_link_isValid = ::OpenAPI::fromJsonValue(m_next_link, json[QString("nextLink")]);
    m_next_link_isSet = !json[QString("nextLink")].isNull() && m_next_link_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIProvisioningServiceDescriptionListResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProvisioningServiceDescriptionListResult::asJsonObject() const {
    QJsonObject obj;
    if (m_next_link_isSet) {
        obj.insert(QString("nextLink"), ::OpenAPI::toJsonValue(m_next_link));
    }
    if (m_value.size() > 0) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIProvisioningServiceDescriptionListResult::getNextLink() const {
    return m_next_link;
}
void OAIProvisioningServiceDescriptionListResult::setNextLink(const QString &next_link) {
    m_next_link = next_link;
    m_next_link_isSet = true;
}

bool OAIProvisioningServiceDescriptionListResult::is_next_link_Set() const{
    return m_next_link_isSet;
}

bool OAIProvisioningServiceDescriptionListResult::is_next_link_Valid() const{
    return m_next_link_isValid;
}

QList<OAIProvisioningServiceDescription> OAIProvisioningServiceDescriptionListResult::getValue() const {
    return m_value;
}
void OAIProvisioningServiceDescriptionListResult::setValue(const QList<OAIProvisioningServiceDescription> &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIProvisioningServiceDescriptionListResult::is_value_Set() const{
    return m_value_isSet;
}

bool OAIProvisioningServiceDescriptionListResult::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIProvisioningServiceDescriptionListResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProvisioningServiceDescriptionListResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
