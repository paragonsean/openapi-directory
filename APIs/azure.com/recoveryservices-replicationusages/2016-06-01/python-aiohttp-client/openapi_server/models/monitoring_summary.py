# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MonitoringSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deprecated_provider_count: int=None, events_count: int=None, supported_provider_count: int=None, un_healthy_provider_count: int=None, un_healthy_vm_count: int=None, unsupported_provider_count: int=None):
        """MonitoringSummary - a model defined in OpenAPI

        :param deprecated_provider_count: The deprecated_provider_count of this MonitoringSummary.
        :param events_count: The events_count of this MonitoringSummary.
        :param supported_provider_count: The supported_provider_count of this MonitoringSummary.
        :param un_healthy_provider_count: The un_healthy_provider_count of this MonitoringSummary.
        :param un_healthy_vm_count: The un_healthy_vm_count of this MonitoringSummary.
        :param unsupported_provider_count: The unsupported_provider_count of this MonitoringSummary.
        """
        self.openapi_types = {
            'deprecated_provider_count': int,
            'events_count': int,
            'supported_provider_count': int,
            'un_healthy_provider_count': int,
            'un_healthy_vm_count': int,
            'unsupported_provider_count': int
        }

        self.attribute_map = {
            'deprecated_provider_count': 'deprecatedProviderCount',
            'events_count': 'eventsCount',
            'supported_provider_count': 'supportedProviderCount',
            'un_healthy_provider_count': 'unHealthyProviderCount',
            'un_healthy_vm_count': 'unHealthyVmCount',
            'unsupported_provider_count': 'unsupportedProviderCount'
        }

        self._deprecated_provider_count = deprecated_provider_count
        self._events_count = events_count
        self._supported_provider_count = supported_provider_count
        self._un_healthy_provider_count = un_healthy_provider_count
        self._un_healthy_vm_count = un_healthy_vm_count
        self._unsupported_provider_count = unsupported_provider_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitoringSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonitoringSummary of this MonitoringSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deprecated_provider_count(self):
        """Gets the deprecated_provider_count of this MonitoringSummary.

        Count of all deprecated recovery service providers.

        :return: The deprecated_provider_count of this MonitoringSummary.
        :rtype: int
        """
        return self._deprecated_provider_count

    @deprecated_provider_count.setter
    def deprecated_provider_count(self, deprecated_provider_count):
        """Sets the deprecated_provider_count of this MonitoringSummary.

        Count of all deprecated recovery service providers.

        :param deprecated_provider_count: The deprecated_provider_count of this MonitoringSummary.
        :type deprecated_provider_count: int
        """

        self._deprecated_provider_count = deprecated_provider_count

    @property
    def events_count(self):
        """Gets the events_count of this MonitoringSummary.

        Count of all critical warnings.

        :return: The events_count of this MonitoringSummary.
        :rtype: int
        """
        return self._events_count

    @events_count.setter
    def events_count(self, events_count):
        """Sets the events_count of this MonitoringSummary.

        Count of all critical warnings.

        :param events_count: The events_count of this MonitoringSummary.
        :type events_count: int
        """

        self._events_count = events_count

    @property
    def supported_provider_count(self):
        """Gets the supported_provider_count of this MonitoringSummary.

        Count of all the supported recovery service providers.

        :return: The supported_provider_count of this MonitoringSummary.
        :rtype: int
        """
        return self._supported_provider_count

    @supported_provider_count.setter
    def supported_provider_count(self, supported_provider_count):
        """Sets the supported_provider_count of this MonitoringSummary.

        Count of all the supported recovery service providers.

        :param supported_provider_count: The supported_provider_count of this MonitoringSummary.
        :type supported_provider_count: int
        """

        self._supported_provider_count = supported_provider_count

    @property
    def un_healthy_provider_count(self):
        """Gets the un_healthy_provider_count of this MonitoringSummary.

        Count of unhealthy replication providers.

        :return: The un_healthy_provider_count of this MonitoringSummary.
        :rtype: int
        """
        return self._un_healthy_provider_count

    @un_healthy_provider_count.setter
    def un_healthy_provider_count(self, un_healthy_provider_count):
        """Sets the un_healthy_provider_count of this MonitoringSummary.

        Count of unhealthy replication providers.

        :param un_healthy_provider_count: The un_healthy_provider_count of this MonitoringSummary.
        :type un_healthy_provider_count: int
        """

        self._un_healthy_provider_count = un_healthy_provider_count

    @property
    def un_healthy_vm_count(self):
        """Gets the un_healthy_vm_count of this MonitoringSummary.

        Count of unhealthy VMs.

        :return: The un_healthy_vm_count of this MonitoringSummary.
        :rtype: int
        """
        return self._un_healthy_vm_count

    @un_healthy_vm_count.setter
    def un_healthy_vm_count(self, un_healthy_vm_count):
        """Sets the un_healthy_vm_count of this MonitoringSummary.

        Count of unhealthy VMs.

        :param un_healthy_vm_count: The un_healthy_vm_count of this MonitoringSummary.
        :type un_healthy_vm_count: int
        """

        self._un_healthy_vm_count = un_healthy_vm_count

    @property
    def unsupported_provider_count(self):
        """Gets the unsupported_provider_count of this MonitoringSummary.

        Count of all the unsupported recovery service providers.

        :return: The unsupported_provider_count of this MonitoringSummary.
        :rtype: int
        """
        return self._unsupported_provider_count

    @unsupported_provider_count.setter
    def unsupported_provider_count(self, unsupported_provider_count):
        """Sets the unsupported_provider_count of this MonitoringSummary.

        Count of all the unsupported recovery service providers.

        :param unsupported_provider_count: The unsupported_provider_count of this MonitoringSummary.
        :type unsupported_provider_count: int
        """

        self._unsupported_provider_count = unsupported_provider_count
