# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.jobs_summary import JobsSummary
from openapi_server.models.monitoring_summary import MonitoringSummary
from openapi_server import util


class ReplicationUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jobs_summary: JobsSummary=None, monitoring_summary: MonitoringSummary=None, protected_item_count: int=None, recovery_plan_count: int=None, recovery_services_provider_auth_type: int=None, registered_servers_count: int=None):
        """ReplicationUsage - a model defined in OpenAPI

        :param jobs_summary: The jobs_summary of this ReplicationUsage.
        :param monitoring_summary: The monitoring_summary of this ReplicationUsage.
        :param protected_item_count: The protected_item_count of this ReplicationUsage.
        :param recovery_plan_count: The recovery_plan_count of this ReplicationUsage.
        :param recovery_services_provider_auth_type: The recovery_services_provider_auth_type of this ReplicationUsage.
        :param registered_servers_count: The registered_servers_count of this ReplicationUsage.
        """
        self.openapi_types = {
            'jobs_summary': JobsSummary,
            'monitoring_summary': MonitoringSummary,
            'protected_item_count': int,
            'recovery_plan_count': int,
            'recovery_services_provider_auth_type': int,
            'registered_servers_count': int
        }

        self.attribute_map = {
            'jobs_summary': 'jobsSummary',
            'monitoring_summary': 'monitoringSummary',
            'protected_item_count': 'protectedItemCount',
            'recovery_plan_count': 'recoveryPlanCount',
            'recovery_services_provider_auth_type': 'recoveryServicesProviderAuthType',
            'registered_servers_count': 'registeredServersCount'
        }

        self._jobs_summary = jobs_summary
        self._monitoring_summary = monitoring_summary
        self._protected_item_count = protected_item_count
        self._recovery_plan_count = recovery_plan_count
        self._recovery_services_provider_auth_type = recovery_services_provider_auth_type
        self._registered_servers_count = registered_servers_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplicationUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplicationUsage of this ReplicationUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jobs_summary(self):
        """Gets the jobs_summary of this ReplicationUsage.


        :return: The jobs_summary of this ReplicationUsage.
        :rtype: JobsSummary
        """
        return self._jobs_summary

    @jobs_summary.setter
    def jobs_summary(self, jobs_summary):
        """Sets the jobs_summary of this ReplicationUsage.


        :param jobs_summary: The jobs_summary of this ReplicationUsage.
        :type jobs_summary: JobsSummary
        """

        self._jobs_summary = jobs_summary

    @property
    def monitoring_summary(self):
        """Gets the monitoring_summary of this ReplicationUsage.


        :return: The monitoring_summary of this ReplicationUsage.
        :rtype: MonitoringSummary
        """
        return self._monitoring_summary

    @monitoring_summary.setter
    def monitoring_summary(self, monitoring_summary):
        """Sets the monitoring_summary of this ReplicationUsage.


        :param monitoring_summary: The monitoring_summary of this ReplicationUsage.
        :type monitoring_summary: MonitoringSummary
        """

        self._monitoring_summary = monitoring_summary

    @property
    def protected_item_count(self):
        """Gets the protected_item_count of this ReplicationUsage.

        Number of replication protected items for this vault.

        :return: The protected_item_count of this ReplicationUsage.
        :rtype: int
        """
        return self._protected_item_count

    @protected_item_count.setter
    def protected_item_count(self, protected_item_count):
        """Sets the protected_item_count of this ReplicationUsage.

        Number of replication protected items for this vault.

        :param protected_item_count: The protected_item_count of this ReplicationUsage.
        :type protected_item_count: int
        """

        self._protected_item_count = protected_item_count

    @property
    def recovery_plan_count(self):
        """Gets the recovery_plan_count of this ReplicationUsage.

        Number of replication recovery plans for this vault.

        :return: The recovery_plan_count of this ReplicationUsage.
        :rtype: int
        """
        return self._recovery_plan_count

    @recovery_plan_count.setter
    def recovery_plan_count(self, recovery_plan_count):
        """Sets the recovery_plan_count of this ReplicationUsage.

        Number of replication recovery plans for this vault.

        :param recovery_plan_count: The recovery_plan_count of this ReplicationUsage.
        :type recovery_plan_count: int
        """

        self._recovery_plan_count = recovery_plan_count

    @property
    def recovery_services_provider_auth_type(self):
        """Gets the recovery_services_provider_auth_type of this ReplicationUsage.

        The authentication type of recovery service providers in the vault.

        :return: The recovery_services_provider_auth_type of this ReplicationUsage.
        :rtype: int
        """
        return self._recovery_services_provider_auth_type

    @recovery_services_provider_auth_type.setter
    def recovery_services_provider_auth_type(self, recovery_services_provider_auth_type):
        """Sets the recovery_services_provider_auth_type of this ReplicationUsage.

        The authentication type of recovery service providers in the vault.

        :param recovery_services_provider_auth_type: The recovery_services_provider_auth_type of this ReplicationUsage.
        :type recovery_services_provider_auth_type: int
        """

        self._recovery_services_provider_auth_type = recovery_services_provider_auth_type

    @property
    def registered_servers_count(self):
        """Gets the registered_servers_count of this ReplicationUsage.

        Number of servers registered to this vault.

        :return: The registered_servers_count of this ReplicationUsage.
        :rtype: int
        """
        return self._registered_servers_count

    @registered_servers_count.setter
    def registered_servers_count(self, registered_servers_count):
        """Sets the registered_servers_count of this ReplicationUsage.

        Number of servers registered to this vault.

        :param registered_servers_count: The registered_servers_count of this ReplicationUsage.
        :type registered_servers_count: int
        """

        self._registered_servers_count = registered_servers_count
