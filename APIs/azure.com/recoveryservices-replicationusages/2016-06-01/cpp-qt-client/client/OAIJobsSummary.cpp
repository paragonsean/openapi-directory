/**
 * RecoveryServicesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobsSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobsSummary::OAIJobsSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobsSummary::OAIJobsSummary() {
    this->initializeModel();
}

OAIJobsSummary::~OAIJobsSummary() {}

void OAIJobsSummary::initializeModel() {

    m_failed_jobs_isSet = false;
    m_failed_jobs_isValid = false;

    m_in_progress_jobs_isSet = false;
    m_in_progress_jobs_isValid = false;

    m_suspended_jobs_isSet = false;
    m_suspended_jobs_isValid = false;
}

void OAIJobsSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobsSummary::fromJsonObject(QJsonObject json) {

    m_failed_jobs_isValid = ::OpenAPI::fromJsonValue(m_failed_jobs, json[QString("failedJobs")]);
    m_failed_jobs_isSet = !json[QString("failedJobs")].isNull() && m_failed_jobs_isValid;

    m_in_progress_jobs_isValid = ::OpenAPI::fromJsonValue(m_in_progress_jobs, json[QString("inProgressJobs")]);
    m_in_progress_jobs_isSet = !json[QString("inProgressJobs")].isNull() && m_in_progress_jobs_isValid;

    m_suspended_jobs_isValid = ::OpenAPI::fromJsonValue(m_suspended_jobs, json[QString("suspendedJobs")]);
    m_suspended_jobs_isSet = !json[QString("suspendedJobs")].isNull() && m_suspended_jobs_isValid;
}

QString OAIJobsSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobsSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_failed_jobs_isSet) {
        obj.insert(QString("failedJobs"), ::OpenAPI::toJsonValue(m_failed_jobs));
    }
    if (m_in_progress_jobs_isSet) {
        obj.insert(QString("inProgressJobs"), ::OpenAPI::toJsonValue(m_in_progress_jobs));
    }
    if (m_suspended_jobs_isSet) {
        obj.insert(QString("suspendedJobs"), ::OpenAPI::toJsonValue(m_suspended_jobs));
    }
    return obj;
}

qint32 OAIJobsSummary::getFailedJobs() const {
    return m_failed_jobs;
}
void OAIJobsSummary::setFailedJobs(const qint32 &failed_jobs) {
    m_failed_jobs = failed_jobs;
    m_failed_jobs_isSet = true;
}

bool OAIJobsSummary::is_failed_jobs_Set() const{
    return m_failed_jobs_isSet;
}

bool OAIJobsSummary::is_failed_jobs_Valid() const{
    return m_failed_jobs_isValid;
}

qint32 OAIJobsSummary::getInProgressJobs() const {
    return m_in_progress_jobs;
}
void OAIJobsSummary::setInProgressJobs(const qint32 &in_progress_jobs) {
    m_in_progress_jobs = in_progress_jobs;
    m_in_progress_jobs_isSet = true;
}

bool OAIJobsSummary::is_in_progress_jobs_Set() const{
    return m_in_progress_jobs_isSet;
}

bool OAIJobsSummary::is_in_progress_jobs_Valid() const{
    return m_in_progress_jobs_isValid;
}

qint32 OAIJobsSummary::getSuspendedJobs() const {
    return m_suspended_jobs;
}
void OAIJobsSummary::setSuspendedJobs(const qint32 &suspended_jobs) {
    m_suspended_jobs = suspended_jobs;
    m_suspended_jobs_isSet = true;
}

bool OAIJobsSummary::is_suspended_jobs_Set() const{
    return m_suspended_jobs_isSet;
}

bool OAIJobsSummary::is_suspended_jobs_Valid() const{
    return m_suspended_jobs_isValid;
}

bool OAIJobsSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_failed_jobs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_in_progress_jobs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suspended_jobs_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobsSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
