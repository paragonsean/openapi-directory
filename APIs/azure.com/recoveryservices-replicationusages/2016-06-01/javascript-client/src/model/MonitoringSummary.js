/**
 * RecoveryServicesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MonitoringSummary model module.
 * @module model/MonitoringSummary
 * @version 2016-06-01
 */
class MonitoringSummary {
    /**
     * Constructs a new <code>MonitoringSummary</code>.
     * Summary of the replication monitoring data for this vault.
     * @alias module:model/MonitoringSummary
     */
    constructor() { 
        
        MonitoringSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MonitoringSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MonitoringSummary} obj Optional instance to populate.
     * @return {module:model/MonitoringSummary} The populated <code>MonitoringSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MonitoringSummary();

            if (data.hasOwnProperty('deprecatedProviderCount')) {
                obj['deprecatedProviderCount'] = ApiClient.convertToType(data['deprecatedProviderCount'], 'Number');
            }
            if (data.hasOwnProperty('eventsCount')) {
                obj['eventsCount'] = ApiClient.convertToType(data['eventsCount'], 'Number');
            }
            if (data.hasOwnProperty('supportedProviderCount')) {
                obj['supportedProviderCount'] = ApiClient.convertToType(data['supportedProviderCount'], 'Number');
            }
            if (data.hasOwnProperty('unHealthyProviderCount')) {
                obj['unHealthyProviderCount'] = ApiClient.convertToType(data['unHealthyProviderCount'], 'Number');
            }
            if (data.hasOwnProperty('unHealthyVmCount')) {
                obj['unHealthyVmCount'] = ApiClient.convertToType(data['unHealthyVmCount'], 'Number');
            }
            if (data.hasOwnProperty('unsupportedProviderCount')) {
                obj['unsupportedProviderCount'] = ApiClient.convertToType(data['unsupportedProviderCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MonitoringSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MonitoringSummary</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Count of all deprecated recovery service providers.
 * @member {Number} deprecatedProviderCount
 */
MonitoringSummary.prototype['deprecatedProviderCount'] = undefined;

/**
 * Count of all critical warnings.
 * @member {Number} eventsCount
 */
MonitoringSummary.prototype['eventsCount'] = undefined;

/**
 * Count of all the supported recovery service providers.
 * @member {Number} supportedProviderCount
 */
MonitoringSummary.prototype['supportedProviderCount'] = undefined;

/**
 * Count of unhealthy replication providers.
 * @member {Number} unHealthyProviderCount
 */
MonitoringSummary.prototype['unHealthyProviderCount'] = undefined;

/**
 * Count of unhealthy VMs.
 * @member {Number} unHealthyVmCount
 */
MonitoringSummary.prototype['unHealthyVmCount'] = undefined;

/**
 * Count of all the unsupported recovery service providers.
 * @member {Number} unsupportedProviderCount
 */
MonitoringSummary.prototype['unsupportedProviderCount'] = undefined;






export default MonitoringSummary;

