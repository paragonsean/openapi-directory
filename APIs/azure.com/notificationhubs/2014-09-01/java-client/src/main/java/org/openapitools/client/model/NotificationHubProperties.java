/*
 * NotificationHubsManagementClient
 * Azure NotificationHub client
 *
 * The version of the OpenAPI document: 2014-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AdmCredential;
import org.openapitools.client.model.ApnsCredential;
import org.openapitools.client.model.BaiduCredential;
import org.openapitools.client.model.GcmCredential;
import org.openapitools.client.model.MpnsCredential;
import org.openapitools.client.model.SharedAccessAuthorizationRuleProperties;
import org.openapitools.client.model.WnsCredential;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * NotificationHub properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:21:59.836594-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NotificationHubProperties {
  public static final String SERIALIZED_NAME_ADM_CREDENTIAL = "admCredential";
  @SerializedName(SERIALIZED_NAME_ADM_CREDENTIAL)
  private AdmCredential admCredential;

  public static final String SERIALIZED_NAME_APNS_CREDENTIAL = "apnsCredential";
  @SerializedName(SERIALIZED_NAME_APNS_CREDENTIAL)
  private ApnsCredential apnsCredential;

  public static final String SERIALIZED_NAME_AUTHORIZATION_RULES = "authorizationRules";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION_RULES)
  private List<SharedAccessAuthorizationRuleProperties> authorizationRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_BAIDU_CREDENTIAL = "baiduCredential";
  @SerializedName(SERIALIZED_NAME_BAIDU_CREDENTIAL)
  private BaiduCredential baiduCredential;

  public static final String SERIALIZED_NAME_GCM_CREDENTIAL = "gcmCredential";
  @SerializedName(SERIALIZED_NAME_GCM_CREDENTIAL)
  private GcmCredential gcmCredential;

  public static final String SERIALIZED_NAME_MPNS_CREDENTIAL = "mpnsCredential";
  @SerializedName(SERIALIZED_NAME_MPNS_CREDENTIAL)
  private MpnsCredential mpnsCredential;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REGISTRATION_TTL = "registrationTtl";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_TTL)
  private String registrationTtl;

  public static final String SERIALIZED_NAME_WNS_CREDENTIAL = "wnsCredential";
  @SerializedName(SERIALIZED_NAME_WNS_CREDENTIAL)
  private WnsCredential wnsCredential;

  public NotificationHubProperties() {
  }

  public NotificationHubProperties admCredential(AdmCredential admCredential) {
    this.admCredential = admCredential;
    return this;
  }

  /**
   * Get admCredential
   * @return admCredential
   */
  @javax.annotation.Nullable
  public AdmCredential getAdmCredential() {
    return admCredential;
  }

  public void setAdmCredential(AdmCredential admCredential) {
    this.admCredential = admCredential;
  }


  public NotificationHubProperties apnsCredential(ApnsCredential apnsCredential) {
    this.apnsCredential = apnsCredential;
    return this;
  }

  /**
   * Get apnsCredential
   * @return apnsCredential
   */
  @javax.annotation.Nullable
  public ApnsCredential getApnsCredential() {
    return apnsCredential;
  }

  public void setApnsCredential(ApnsCredential apnsCredential) {
    this.apnsCredential = apnsCredential;
  }


  public NotificationHubProperties authorizationRules(List<SharedAccessAuthorizationRuleProperties> authorizationRules) {
    this.authorizationRules = authorizationRules;
    return this;
  }

  public NotificationHubProperties addAuthorizationRulesItem(SharedAccessAuthorizationRuleProperties authorizationRulesItem) {
    if (this.authorizationRules == null) {
      this.authorizationRules = new ArrayList<>();
    }
    this.authorizationRules.add(authorizationRulesItem);
    return this;
  }

  /**
   * The AuthorizationRules of the created NotificationHub
   * @return authorizationRules
   */
  @javax.annotation.Nullable
  public List<SharedAccessAuthorizationRuleProperties> getAuthorizationRules() {
    return authorizationRules;
  }

  public void setAuthorizationRules(List<SharedAccessAuthorizationRuleProperties> authorizationRules) {
    this.authorizationRules = authorizationRules;
  }


  public NotificationHubProperties baiduCredential(BaiduCredential baiduCredential) {
    this.baiduCredential = baiduCredential;
    return this;
  }

  /**
   * Get baiduCredential
   * @return baiduCredential
   */
  @javax.annotation.Nullable
  public BaiduCredential getBaiduCredential() {
    return baiduCredential;
  }

  public void setBaiduCredential(BaiduCredential baiduCredential) {
    this.baiduCredential = baiduCredential;
  }


  public NotificationHubProperties gcmCredential(GcmCredential gcmCredential) {
    this.gcmCredential = gcmCredential;
    return this;
  }

  /**
   * Get gcmCredential
   * @return gcmCredential
   */
  @javax.annotation.Nullable
  public GcmCredential getGcmCredential() {
    return gcmCredential;
  }

  public void setGcmCredential(GcmCredential gcmCredential) {
    this.gcmCredential = gcmCredential;
  }


  public NotificationHubProperties mpnsCredential(MpnsCredential mpnsCredential) {
    this.mpnsCredential = mpnsCredential;
    return this;
  }

  /**
   * Get mpnsCredential
   * @return mpnsCredential
   */
  @javax.annotation.Nullable
  public MpnsCredential getMpnsCredential() {
    return mpnsCredential;
  }

  public void setMpnsCredential(MpnsCredential mpnsCredential) {
    this.mpnsCredential = mpnsCredential;
  }


  public NotificationHubProperties name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The NotificationHub name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public NotificationHubProperties registrationTtl(String registrationTtl) {
    this.registrationTtl = registrationTtl;
    return this;
  }

  /**
   * The RegistrationTtl of the created NotificationHub
   * @return registrationTtl
   */
  @javax.annotation.Nullable
  public String getRegistrationTtl() {
    return registrationTtl;
  }

  public void setRegistrationTtl(String registrationTtl) {
    this.registrationTtl = registrationTtl;
  }


  public NotificationHubProperties wnsCredential(WnsCredential wnsCredential) {
    this.wnsCredential = wnsCredential;
    return this;
  }

  /**
   * Get wnsCredential
   * @return wnsCredential
   */
  @javax.annotation.Nullable
  public WnsCredential getWnsCredential() {
    return wnsCredential;
  }

  public void setWnsCredential(WnsCredential wnsCredential) {
    this.wnsCredential = wnsCredential;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationHubProperties notificationHubProperties = (NotificationHubProperties) o;
    return Objects.equals(this.admCredential, notificationHubProperties.admCredential) &&
        Objects.equals(this.apnsCredential, notificationHubProperties.apnsCredential) &&
        Objects.equals(this.authorizationRules, notificationHubProperties.authorizationRules) &&
        Objects.equals(this.baiduCredential, notificationHubProperties.baiduCredential) &&
        Objects.equals(this.gcmCredential, notificationHubProperties.gcmCredential) &&
        Objects.equals(this.mpnsCredential, notificationHubProperties.mpnsCredential) &&
        Objects.equals(this.name, notificationHubProperties.name) &&
        Objects.equals(this.registrationTtl, notificationHubProperties.registrationTtl) &&
        Objects.equals(this.wnsCredential, notificationHubProperties.wnsCredential);
  }

  @Override
  public int hashCode() {
    return Objects.hash(admCredential, apnsCredential, authorizationRules, baiduCredential, gcmCredential, mpnsCredential, name, registrationTtl, wnsCredential);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationHubProperties {\n");
    sb.append("    admCredential: ").append(toIndentedString(admCredential)).append("\n");
    sb.append("    apnsCredential: ").append(toIndentedString(apnsCredential)).append("\n");
    sb.append("    authorizationRules: ").append(toIndentedString(authorizationRules)).append("\n");
    sb.append("    baiduCredential: ").append(toIndentedString(baiduCredential)).append("\n");
    sb.append("    gcmCredential: ").append(toIndentedString(gcmCredential)).append("\n");
    sb.append("    mpnsCredential: ").append(toIndentedString(mpnsCredential)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    registrationTtl: ").append(toIndentedString(registrationTtl)).append("\n");
    sb.append("    wnsCredential: ").append(toIndentedString(wnsCredential)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("admCredential");
    openapiFields.add("apnsCredential");
    openapiFields.add("authorizationRules");
    openapiFields.add("baiduCredential");
    openapiFields.add("gcmCredential");
    openapiFields.add("mpnsCredential");
    openapiFields.add("name");
    openapiFields.add("registrationTtl");
    openapiFields.add("wnsCredential");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NotificationHubProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NotificationHubProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NotificationHubProperties is not found in the empty JSON string", NotificationHubProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NotificationHubProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NotificationHubProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `admCredential`
      if (jsonObj.get("admCredential") != null && !jsonObj.get("admCredential").isJsonNull()) {
        AdmCredential.validateJsonElement(jsonObj.get("admCredential"));
      }
      // validate the optional field `apnsCredential`
      if (jsonObj.get("apnsCredential") != null && !jsonObj.get("apnsCredential").isJsonNull()) {
        ApnsCredential.validateJsonElement(jsonObj.get("apnsCredential"));
      }
      if (jsonObj.get("authorizationRules") != null && !jsonObj.get("authorizationRules").isJsonNull()) {
        JsonArray jsonArrayauthorizationRules = jsonObj.getAsJsonArray("authorizationRules");
        if (jsonArrayauthorizationRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("authorizationRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `authorizationRules` to be an array in the JSON string but got `%s`", jsonObj.get("authorizationRules").toString()));
          }

          // validate the optional field `authorizationRules` (array)
          for (int i = 0; i < jsonArrayauthorizationRules.size(); i++) {
            SharedAccessAuthorizationRuleProperties.validateJsonElement(jsonArrayauthorizationRules.get(i));
          };
        }
      }
      // validate the optional field `baiduCredential`
      if (jsonObj.get("baiduCredential") != null && !jsonObj.get("baiduCredential").isJsonNull()) {
        BaiduCredential.validateJsonElement(jsonObj.get("baiduCredential"));
      }
      // validate the optional field `gcmCredential`
      if (jsonObj.get("gcmCredential") != null && !jsonObj.get("gcmCredential").isJsonNull()) {
        GcmCredential.validateJsonElement(jsonObj.get("gcmCredential"));
      }
      // validate the optional field `mpnsCredential`
      if (jsonObj.get("mpnsCredential") != null && !jsonObj.get("mpnsCredential").isJsonNull()) {
        MpnsCredential.validateJsonElement(jsonObj.get("mpnsCredential"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("registrationTtl") != null && !jsonObj.get("registrationTtl").isJsonNull()) && !jsonObj.get("registrationTtl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `registrationTtl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("registrationTtl").toString()));
      }
      // validate the optional field `wnsCredential`
      if (jsonObj.get("wnsCredential") != null && !jsonObj.get("wnsCredential").isJsonNull()) {
        WnsCredential.validateJsonElement(jsonObj.get("wnsCredential"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NotificationHubProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NotificationHubProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NotificationHubProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NotificationHubProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<NotificationHubProperties>() {
           @Override
           public void write(JsonWriter out, NotificationHubProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NotificationHubProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NotificationHubProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NotificationHubProperties
   * @throws IOException if the JSON string is invalid with respect to NotificationHubProperties
   */
  public static NotificationHubProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NotificationHubProperties.class);
  }

  /**
   * Convert an instance of NotificationHubProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

