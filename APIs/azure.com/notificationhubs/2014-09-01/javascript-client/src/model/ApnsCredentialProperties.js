/**
 * NotificationHubsManagementClient
 * Azure NotificationHub client
 *
 * The version of the OpenAPI document: 2014-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApnsCredentialProperties model module.
 * @module model/ApnsCredentialProperties
 * @version 2014-09-01
 */
class ApnsCredentialProperties {
    /**
     * Constructs a new <code>ApnsCredentialProperties</code>.
     * Description of a NotificationHub ApnsCredential.
     * @alias module:model/ApnsCredentialProperties
     */
    constructor() { 
        
        ApnsCredentialProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApnsCredentialProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApnsCredentialProperties} obj Optional instance to populate.
     * @return {module:model/ApnsCredentialProperties} The populated <code>ApnsCredentialProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApnsCredentialProperties();

            if (data.hasOwnProperty('apnsCertificate')) {
                obj['apnsCertificate'] = ApiClient.convertToType(data['apnsCertificate'], 'String');
            }
            if (data.hasOwnProperty('certificateKey')) {
                obj['certificateKey'] = ApiClient.convertToType(data['certificateKey'], 'String');
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('thumbprint')) {
                obj['thumbprint'] = ApiClient.convertToType(data['thumbprint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApnsCredentialProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApnsCredentialProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apnsCertificate'] && !(typeof data['apnsCertificate'] === 'string' || data['apnsCertificate'] instanceof String)) {
            throw new Error("Expected the field `apnsCertificate` to be a primitive type in the JSON string but got " + data['apnsCertificate']);
        }
        // ensure the json data is a string
        if (data['certificateKey'] && !(typeof data['certificateKey'] === 'string' || data['certificateKey'] instanceof String)) {
            throw new Error("Expected the field `certificateKey` to be a primitive type in the JSON string but got " + data['certificateKey']);
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['thumbprint'] && !(typeof data['thumbprint'] === 'string' || data['thumbprint'] instanceof String)) {
            throw new Error("Expected the field `thumbprint` to be a primitive type in the JSON string but got " + data['thumbprint']);
        }

        return true;
    }


}



/**
 * Gets or sets the APNS certificate.
 * @member {String} apnsCertificate
 */
ApnsCredentialProperties.prototype['apnsCertificate'] = undefined;

/**
 * Gets or sets the certificate key.
 * @member {String} certificateKey
 */
ApnsCredentialProperties.prototype['certificateKey'] = undefined;

/**
 * Gets or sets the endpoint of this credential.
 * @member {String} endpoint
 */
ApnsCredentialProperties.prototype['endpoint'] = undefined;

/**
 * Gets or sets the Apns certificate Thumbprint
 * @member {String} thumbprint
 */
ApnsCredentialProperties.prototype['thumbprint'] = undefined;






export default ApnsCredentialProperties;

