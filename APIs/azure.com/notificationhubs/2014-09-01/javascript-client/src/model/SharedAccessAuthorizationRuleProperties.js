/**
 * NotificationHubsManagementClient
 * Azure NotificationHub client
 *
 * The version of the OpenAPI document: 2014-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SharedAccessAuthorizationRuleProperties model module.
 * @module model/SharedAccessAuthorizationRuleProperties
 * @version 2014-09-01
 */
class SharedAccessAuthorizationRuleProperties {
    /**
     * Constructs a new <code>SharedAccessAuthorizationRuleProperties</code>.
     * SharedAccessAuthorizationRule properties.
     * @alias module:model/SharedAccessAuthorizationRuleProperties
     */
    constructor() { 
        
        SharedAccessAuthorizationRuleProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SharedAccessAuthorizationRuleProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SharedAccessAuthorizationRuleProperties} obj Optional instance to populate.
     * @return {module:model/SharedAccessAuthorizationRuleProperties} The populated <code>SharedAccessAuthorizationRuleProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SharedAccessAuthorizationRuleProperties();

            if (data.hasOwnProperty('claimType')) {
                obj['claimType'] = ApiClient.convertToType(data['claimType'], 'String');
            }
            if (data.hasOwnProperty('claimValue')) {
                obj['claimValue'] = ApiClient.convertToType(data['claimValue'], 'String');
            }
            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('keyName')) {
                obj['keyName'] = ApiClient.convertToType(data['keyName'], 'String');
            }
            if (data.hasOwnProperty('modifiedTime')) {
                obj['modifiedTime'] = ApiClient.convertToType(data['modifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('primaryKey')) {
                obj['primaryKey'] = ApiClient.convertToType(data['primaryKey'], 'String');
            }
            if (data.hasOwnProperty('revision')) {
                obj['revision'] = ApiClient.convertToType(data['revision'], 'Number');
            }
            if (data.hasOwnProperty('rights')) {
                obj['rights'] = ApiClient.convertToType(data['rights'], ['String']);
            }
            if (data.hasOwnProperty('secondaryKey')) {
                obj['secondaryKey'] = ApiClient.convertToType(data['secondaryKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SharedAccessAuthorizationRuleProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SharedAccessAuthorizationRuleProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['claimType'] && !(typeof data['claimType'] === 'string' || data['claimType'] instanceof String)) {
            throw new Error("Expected the field `claimType` to be a primitive type in the JSON string but got " + data['claimType']);
        }
        // ensure the json data is a string
        if (data['claimValue'] && !(typeof data['claimValue'] === 'string' || data['claimValue'] instanceof String)) {
            throw new Error("Expected the field `claimValue` to be a primitive type in the JSON string but got " + data['claimValue']);
        }
        // ensure the json data is a string
        if (data['keyName'] && !(typeof data['keyName'] === 'string' || data['keyName'] instanceof String)) {
            throw new Error("Expected the field `keyName` to be a primitive type in the JSON string but got " + data['keyName']);
        }
        // ensure the json data is a string
        if (data['primaryKey'] && !(typeof data['primaryKey'] === 'string' || data['primaryKey'] instanceof String)) {
            throw new Error("Expected the field `primaryKey` to be a primitive type in the JSON string but got " + data['primaryKey']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['rights'])) {
            throw new Error("Expected the field `rights` to be an array in the JSON data but got " + data['rights']);
        }
        // ensure the json data is a string
        if (data['secondaryKey'] && !(typeof data['secondaryKey'] === 'string' || data['secondaryKey'] instanceof String)) {
            throw new Error("Expected the field `secondaryKey` to be a primitive type in the JSON string but got " + data['secondaryKey']);
        }

        return true;
    }


}



/**
 * The type of the claim.
 * @member {String} claimType
 */
SharedAccessAuthorizationRuleProperties.prototype['claimType'] = undefined;

/**
 * The value of the claim.
 * @member {String} claimValue
 */
SharedAccessAuthorizationRuleProperties.prototype['claimValue'] = undefined;

/**
 * The time at which the authorization rule was created.
 * @member {Date} createdTime
 */
SharedAccessAuthorizationRuleProperties.prototype['createdTime'] = undefined;

/**
 * The name of the key that was used.
 * @member {String} keyName
 */
SharedAccessAuthorizationRuleProperties.prototype['keyName'] = undefined;

/**
 * The most recent time the rule was updated.
 * @member {Date} modifiedTime
 */
SharedAccessAuthorizationRuleProperties.prototype['modifiedTime'] = undefined;

/**
 * The primary key that was used.
 * @member {String} primaryKey
 */
SharedAccessAuthorizationRuleProperties.prototype['primaryKey'] = undefined;

/**
 * The revision number for the rule.
 * @member {Number} revision
 */
SharedAccessAuthorizationRuleProperties.prototype['revision'] = undefined;

/**
 * The rights associated with the rule.
 * @member {Array.<module:model/SharedAccessAuthorizationRuleProperties.RightsEnum>} rights
 */
SharedAccessAuthorizationRuleProperties.prototype['rights'] = undefined;

/**
 * The secondary key that was used.
 * @member {String} secondaryKey
 */
SharedAccessAuthorizationRuleProperties.prototype['secondaryKey'] = undefined;





/**
 * Allowed values for the <code>rights</code> property.
 * @enum {String}
 * @readonly
 */
SharedAccessAuthorizationRuleProperties['RightsEnum'] = {

    /**
     * value: "Manage"
     * @const
     */
    "Manage": "Manage",

    /**
     * value: "Send"
     * @const
     */
    "Send": "Send",

    /**
     * value: "Listen"
     * @const
     */
    "Listen": "Listen"
};



export default SharedAccessAuthorizationRuleProperties;

