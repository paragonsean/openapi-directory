/**
 * NotificationHubsManagementClient
 * Azure NotificationHub client
 *
 * The version of the OpenAPI document: 2016-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPnsCredentialsProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPnsCredentialsProperties::OAIPnsCredentialsProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPnsCredentialsProperties::OAIPnsCredentialsProperties() {
    this->initializeModel();
}

OAIPnsCredentialsProperties::~OAIPnsCredentialsProperties() {}

void OAIPnsCredentialsProperties::initializeModel() {

    m_adm_credential_isSet = false;
    m_adm_credential_isValid = false;

    m_apns_credential_isSet = false;
    m_apns_credential_isValid = false;

    m_baidu_credential_isSet = false;
    m_baidu_credential_isValid = false;

    m_gcm_credential_isSet = false;
    m_gcm_credential_isValid = false;

    m_mpns_credential_isSet = false;
    m_mpns_credential_isValid = false;

    m_wns_credential_isSet = false;
    m_wns_credential_isValid = false;
}

void OAIPnsCredentialsProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPnsCredentialsProperties::fromJsonObject(QJsonObject json) {

    m_adm_credential_isValid = ::OpenAPI::fromJsonValue(m_adm_credential, json[QString("admCredential")]);
    m_adm_credential_isSet = !json[QString("admCredential")].isNull() && m_adm_credential_isValid;

    m_apns_credential_isValid = ::OpenAPI::fromJsonValue(m_apns_credential, json[QString("apnsCredential")]);
    m_apns_credential_isSet = !json[QString("apnsCredential")].isNull() && m_apns_credential_isValid;

    m_baidu_credential_isValid = ::OpenAPI::fromJsonValue(m_baidu_credential, json[QString("baiduCredential")]);
    m_baidu_credential_isSet = !json[QString("baiduCredential")].isNull() && m_baidu_credential_isValid;

    m_gcm_credential_isValid = ::OpenAPI::fromJsonValue(m_gcm_credential, json[QString("gcmCredential")]);
    m_gcm_credential_isSet = !json[QString("gcmCredential")].isNull() && m_gcm_credential_isValid;

    m_mpns_credential_isValid = ::OpenAPI::fromJsonValue(m_mpns_credential, json[QString("mpnsCredential")]);
    m_mpns_credential_isSet = !json[QString("mpnsCredential")].isNull() && m_mpns_credential_isValid;

    m_wns_credential_isValid = ::OpenAPI::fromJsonValue(m_wns_credential, json[QString("wnsCredential")]);
    m_wns_credential_isSet = !json[QString("wnsCredential")].isNull() && m_wns_credential_isValid;
}

QString OAIPnsCredentialsProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPnsCredentialsProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_adm_credential.isSet()) {
        obj.insert(QString("admCredential"), ::OpenAPI::toJsonValue(m_adm_credential));
    }
    if (m_apns_credential.isSet()) {
        obj.insert(QString("apnsCredential"), ::OpenAPI::toJsonValue(m_apns_credential));
    }
    if (m_baidu_credential.isSet()) {
        obj.insert(QString("baiduCredential"), ::OpenAPI::toJsonValue(m_baidu_credential));
    }
    if (m_gcm_credential.isSet()) {
        obj.insert(QString("gcmCredential"), ::OpenAPI::toJsonValue(m_gcm_credential));
    }
    if (m_mpns_credential.isSet()) {
        obj.insert(QString("mpnsCredential"), ::OpenAPI::toJsonValue(m_mpns_credential));
    }
    if (m_wns_credential.isSet()) {
        obj.insert(QString("wnsCredential"), ::OpenAPI::toJsonValue(m_wns_credential));
    }
    return obj;
}

OAIAdmCredential OAIPnsCredentialsProperties::getAdmCredential() const {
    return m_adm_credential;
}
void OAIPnsCredentialsProperties::setAdmCredential(const OAIAdmCredential &adm_credential) {
    m_adm_credential = adm_credential;
    m_adm_credential_isSet = true;
}

bool OAIPnsCredentialsProperties::is_adm_credential_Set() const{
    return m_adm_credential_isSet;
}

bool OAIPnsCredentialsProperties::is_adm_credential_Valid() const{
    return m_adm_credential_isValid;
}

OAIApnsCredential OAIPnsCredentialsProperties::getApnsCredential() const {
    return m_apns_credential;
}
void OAIPnsCredentialsProperties::setApnsCredential(const OAIApnsCredential &apns_credential) {
    m_apns_credential = apns_credential;
    m_apns_credential_isSet = true;
}

bool OAIPnsCredentialsProperties::is_apns_credential_Set() const{
    return m_apns_credential_isSet;
}

bool OAIPnsCredentialsProperties::is_apns_credential_Valid() const{
    return m_apns_credential_isValid;
}

OAIBaiduCredential OAIPnsCredentialsProperties::getBaiduCredential() const {
    return m_baidu_credential;
}
void OAIPnsCredentialsProperties::setBaiduCredential(const OAIBaiduCredential &baidu_credential) {
    m_baidu_credential = baidu_credential;
    m_baidu_credential_isSet = true;
}

bool OAIPnsCredentialsProperties::is_baidu_credential_Set() const{
    return m_baidu_credential_isSet;
}

bool OAIPnsCredentialsProperties::is_baidu_credential_Valid() const{
    return m_baidu_credential_isValid;
}

OAIGcmCredential OAIPnsCredentialsProperties::getGcmCredential() const {
    return m_gcm_credential;
}
void OAIPnsCredentialsProperties::setGcmCredential(const OAIGcmCredential &gcm_credential) {
    m_gcm_credential = gcm_credential;
    m_gcm_credential_isSet = true;
}

bool OAIPnsCredentialsProperties::is_gcm_credential_Set() const{
    return m_gcm_credential_isSet;
}

bool OAIPnsCredentialsProperties::is_gcm_credential_Valid() const{
    return m_gcm_credential_isValid;
}

OAIMpnsCredential OAIPnsCredentialsProperties::getMpnsCredential() const {
    return m_mpns_credential;
}
void OAIPnsCredentialsProperties::setMpnsCredential(const OAIMpnsCredential &mpns_credential) {
    m_mpns_credential = mpns_credential;
    m_mpns_credential_isSet = true;
}

bool OAIPnsCredentialsProperties::is_mpns_credential_Set() const{
    return m_mpns_credential_isSet;
}

bool OAIPnsCredentialsProperties::is_mpns_credential_Valid() const{
    return m_mpns_credential_isValid;
}

OAIWnsCredential OAIPnsCredentialsProperties::getWnsCredential() const {
    return m_wns_credential;
}
void OAIPnsCredentialsProperties::setWnsCredential(const OAIWnsCredential &wns_credential) {
    m_wns_credential = wns_credential;
    m_wns_credential_isSet = true;
}

bool OAIPnsCredentialsProperties::is_wns_credential_Set() const{
    return m_wns_credential_isSet;
}

bool OAIPnsCredentialsProperties::is_wns_credential_Valid() const{
    return m_wns_credential_isValid;
}

bool OAIPnsCredentialsProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adm_credential.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_apns_credential.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_baidu_credential.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcm_credential.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_mpns_credential.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_wns_credential.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPnsCredentialsProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
