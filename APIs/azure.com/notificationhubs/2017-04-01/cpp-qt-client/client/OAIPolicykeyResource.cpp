/**
 * NotificationHubsManagementClient
 * Azure NotificationHub client
 *
 * The version of the OpenAPI document: 2017-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPolicykeyResource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPolicykeyResource::OAIPolicykeyResource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPolicykeyResource::OAIPolicykeyResource() {
    this->initializeModel();
}

OAIPolicykeyResource::~OAIPolicykeyResource() {}

void OAIPolicykeyResource::initializeModel() {

    m_policy_key_isSet = false;
    m_policy_key_isValid = false;
}

void OAIPolicykeyResource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPolicykeyResource::fromJsonObject(QJsonObject json) {

    m_policy_key_isValid = ::OpenAPI::fromJsonValue(m_policy_key, json[QString("policyKey")]);
    m_policy_key_isSet = !json[QString("policyKey")].isNull() && m_policy_key_isValid;
}

QString OAIPolicykeyResource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPolicykeyResource::asJsonObject() const {
    QJsonObject obj;
    if (m_policy_key_isSet) {
        obj.insert(QString("policyKey"), ::OpenAPI::toJsonValue(m_policy_key));
    }
    return obj;
}

QString OAIPolicykeyResource::getPolicyKey() const {
    return m_policy_key;
}
void OAIPolicykeyResource::setPolicyKey(const QString &policy_key) {
    m_policy_key = policy_key;
    m_policy_key_isSet = true;
}

bool OAIPolicykeyResource::is_policy_key_Set() const{
    return m_policy_key_isSet;
}

bool OAIPolicykeyResource::is_policy_key_Valid() const{
    return m_policy_key_isValid;
}

bool OAIPolicykeyResource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_policy_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPolicykeyResource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
