/**
 * NotificationHubsManagementClient
 * Azure NotificationHub client
 *
 * The version of the OpenAPI document: 2017-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NotificationHubsManagementClient);
  }
}(this, function(expect, NotificationHubsManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NotificationHubsManagementClient.NotificationHubsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NotificationHubsApi', function() {
    describe('notificationHubsCheckNotificationHubAvailability', function() {
      it('should call notificationHubsCheckNotificationHubAvailability successfully', function(done) {
        //uncomment below and update the code to test notificationHubsCheckNotificationHubAvailability
        //instance.notificationHubsCheckNotificationHubAvailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsCreateOrUpdate', function() {
      it('should call notificationHubsCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test notificationHubsCreateOrUpdate
        //instance.notificationHubsCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsCreateOrUpdateAuthorizationRule', function() {
      it('should call notificationHubsCreateOrUpdateAuthorizationRule successfully', function(done) {
        //uncomment below and update the code to test notificationHubsCreateOrUpdateAuthorizationRule
        //instance.notificationHubsCreateOrUpdateAuthorizationRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsDebugSend', function() {
      it('should call notificationHubsDebugSend successfully', function(done) {
        //uncomment below and update the code to test notificationHubsDebugSend
        //instance.notificationHubsDebugSend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsDelete', function() {
      it('should call notificationHubsDelete successfully', function(done) {
        //uncomment below and update the code to test notificationHubsDelete
        //instance.notificationHubsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsDeleteAuthorizationRule', function() {
      it('should call notificationHubsDeleteAuthorizationRule successfully', function(done) {
        //uncomment below and update the code to test notificationHubsDeleteAuthorizationRule
        //instance.notificationHubsDeleteAuthorizationRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsGet', function() {
      it('should call notificationHubsGet successfully', function(done) {
        //uncomment below and update the code to test notificationHubsGet
        //instance.notificationHubsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsGetAuthorizationRule', function() {
      it('should call notificationHubsGetAuthorizationRule successfully', function(done) {
        //uncomment below and update the code to test notificationHubsGetAuthorizationRule
        //instance.notificationHubsGetAuthorizationRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsGetPnsCredentials', function() {
      it('should call notificationHubsGetPnsCredentials successfully', function(done) {
        //uncomment below and update the code to test notificationHubsGetPnsCredentials
        //instance.notificationHubsGetPnsCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsList', function() {
      it('should call notificationHubsList successfully', function(done) {
        //uncomment below and update the code to test notificationHubsList
        //instance.notificationHubsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsListAuthorizationRules', function() {
      it('should call notificationHubsListAuthorizationRules successfully', function(done) {
        //uncomment below and update the code to test notificationHubsListAuthorizationRules
        //instance.notificationHubsListAuthorizationRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsListKeys', function() {
      it('should call notificationHubsListKeys successfully', function(done) {
        //uncomment below and update the code to test notificationHubsListKeys
        //instance.notificationHubsListKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsPatch', function() {
      it('should call notificationHubsPatch successfully', function(done) {
        //uncomment below and update the code to test notificationHubsPatch
        //instance.notificationHubsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationHubsRegenerateKeys', function() {
      it('should call notificationHubsRegenerateKeys successfully', function(done) {
        //uncomment below and update the code to test notificationHubsRegenerateKeys
        //instance.notificationHubsRegenerateKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
