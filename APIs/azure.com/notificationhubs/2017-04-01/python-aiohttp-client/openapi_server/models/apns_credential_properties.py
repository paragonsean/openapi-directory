# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApnsCredentialProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apns_certificate: str=None, app_id: str=None, app_name: str=None, certificate_key: str=None, endpoint: str=None, key_id: str=None, thumbprint: str=None, token: str=None):
        """ApnsCredentialProperties - a model defined in OpenAPI

        :param apns_certificate: The apns_certificate of this ApnsCredentialProperties.
        :param app_id: The app_id of this ApnsCredentialProperties.
        :param app_name: The app_name of this ApnsCredentialProperties.
        :param certificate_key: The certificate_key of this ApnsCredentialProperties.
        :param endpoint: The endpoint of this ApnsCredentialProperties.
        :param key_id: The key_id of this ApnsCredentialProperties.
        :param thumbprint: The thumbprint of this ApnsCredentialProperties.
        :param token: The token of this ApnsCredentialProperties.
        """
        self.openapi_types = {
            'apns_certificate': str,
            'app_id': str,
            'app_name': str,
            'certificate_key': str,
            'endpoint': str,
            'key_id': str,
            'thumbprint': str,
            'token': str
        }

        self.attribute_map = {
            'apns_certificate': 'apnsCertificate',
            'app_id': 'appId',
            'app_name': 'appName',
            'certificate_key': 'certificateKey',
            'endpoint': 'endpoint',
            'key_id': 'keyId',
            'thumbprint': 'thumbprint',
            'token': 'token'
        }

        self._apns_certificate = apns_certificate
        self._app_id = app_id
        self._app_name = app_name
        self._certificate_key = certificate_key
        self._endpoint = endpoint
        self._key_id = key_id
        self._thumbprint = thumbprint
        self._token = token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApnsCredentialProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApnsCredentialProperties of this ApnsCredentialProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apns_certificate(self):
        """Gets the apns_certificate of this ApnsCredentialProperties.

        The APNS certificate.

        :return: The apns_certificate of this ApnsCredentialProperties.
        :rtype: str
        """
        return self._apns_certificate

    @apns_certificate.setter
    def apns_certificate(self, apns_certificate):
        """Sets the apns_certificate of this ApnsCredentialProperties.

        The APNS certificate.

        :param apns_certificate: The apns_certificate of this ApnsCredentialProperties.
        :type apns_certificate: str
        """

        self._apns_certificate = apns_certificate

    @property
    def app_id(self):
        """Gets the app_id of this ApnsCredentialProperties.

        The issuer (iss) registered claim key, whose value is your 10-character Team ID, obtained from your developer account

        :return: The app_id of this ApnsCredentialProperties.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this ApnsCredentialProperties.

        The issuer (iss) registered claim key, whose value is your 10-character Team ID, obtained from your developer account

        :param app_id: The app_id of this ApnsCredentialProperties.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def app_name(self):
        """Gets the app_name of this ApnsCredentialProperties.

        The name of the application

        :return: The app_name of this ApnsCredentialProperties.
        :rtype: str
        """
        return self._app_name

    @app_name.setter
    def app_name(self, app_name):
        """Sets the app_name of this ApnsCredentialProperties.

        The name of the application

        :param app_name: The app_name of this ApnsCredentialProperties.
        :type app_name: str
        """

        self._app_name = app_name

    @property
    def certificate_key(self):
        """Gets the certificate_key of this ApnsCredentialProperties.

        The certificate key.

        :return: The certificate_key of this ApnsCredentialProperties.
        :rtype: str
        """
        return self._certificate_key

    @certificate_key.setter
    def certificate_key(self, certificate_key):
        """Sets the certificate_key of this ApnsCredentialProperties.

        The certificate key.

        :param certificate_key: The certificate_key of this ApnsCredentialProperties.
        :type certificate_key: str
        """

        self._certificate_key = certificate_key

    @property
    def endpoint(self):
        """Gets the endpoint of this ApnsCredentialProperties.

        The endpoint of this credential.

        :return: The endpoint of this ApnsCredentialProperties.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this ApnsCredentialProperties.

        The endpoint of this credential.

        :param endpoint: The endpoint of this ApnsCredentialProperties.
        :type endpoint: str
        """

        self._endpoint = endpoint

    @property
    def key_id(self):
        """Gets the key_id of this ApnsCredentialProperties.

        A 10-character key identifier (kid) key, obtained from your developer account

        :return: The key_id of this ApnsCredentialProperties.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id):
        """Sets the key_id of this ApnsCredentialProperties.

        A 10-character key identifier (kid) key, obtained from your developer account

        :param key_id: The key_id of this ApnsCredentialProperties.
        :type key_id: str
        """

        self._key_id = key_id

    @property
    def thumbprint(self):
        """Gets the thumbprint of this ApnsCredentialProperties.

        The APNS certificate Thumbprint

        :return: The thumbprint of this ApnsCredentialProperties.
        :rtype: str
        """
        return self._thumbprint

    @thumbprint.setter
    def thumbprint(self, thumbprint):
        """Sets the thumbprint of this ApnsCredentialProperties.

        The APNS certificate Thumbprint

        :param thumbprint: The thumbprint of this ApnsCredentialProperties.
        :type thumbprint: str
        """

        self._thumbprint = thumbprint

    @property
    def token(self):
        """Gets the token of this ApnsCredentialProperties.

        Provider Authentication Token, obtained through your developer account

        :return: The token of this ApnsCredentialProperties.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this ApnsCredentialProperties.

        Provider Authentication Token, obtained through your developer account

        :param token: The token of this ApnsCredentialProperties.
        :type token: str
        """

        self._token = token
