# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MpnsCredentialProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_key: str=None, mpns_certificate: str=None, thumbprint: str=None):
        """MpnsCredentialProperties - a model defined in OpenAPI

        :param certificate_key: The certificate_key of this MpnsCredentialProperties.
        :param mpns_certificate: The mpns_certificate of this MpnsCredentialProperties.
        :param thumbprint: The thumbprint of this MpnsCredentialProperties.
        """
        self.openapi_types = {
            'certificate_key': str,
            'mpns_certificate': str,
            'thumbprint': str
        }

        self.attribute_map = {
            'certificate_key': 'certificateKey',
            'mpns_certificate': 'mpnsCertificate',
            'thumbprint': 'thumbprint'
        }

        self._certificate_key = certificate_key
        self._mpns_certificate = mpns_certificate
        self._thumbprint = thumbprint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MpnsCredentialProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MpnsCredentialProperties of this MpnsCredentialProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_key(self):
        """Gets the certificate_key of this MpnsCredentialProperties.

        The certificate key for this credential.

        :return: The certificate_key of this MpnsCredentialProperties.
        :rtype: str
        """
        return self._certificate_key

    @certificate_key.setter
    def certificate_key(self, certificate_key):
        """Sets the certificate_key of this MpnsCredentialProperties.

        The certificate key for this credential.

        :param certificate_key: The certificate_key of this MpnsCredentialProperties.
        :type certificate_key: str
        """

        self._certificate_key = certificate_key

    @property
    def mpns_certificate(self):
        """Gets the mpns_certificate of this MpnsCredentialProperties.

        The MPNS certificate.

        :return: The mpns_certificate of this MpnsCredentialProperties.
        :rtype: str
        """
        return self._mpns_certificate

    @mpns_certificate.setter
    def mpns_certificate(self, mpns_certificate):
        """Sets the mpns_certificate of this MpnsCredentialProperties.

        The MPNS certificate.

        :param mpns_certificate: The mpns_certificate of this MpnsCredentialProperties.
        :type mpns_certificate: str
        """

        self._mpns_certificate = mpns_certificate

    @property
    def thumbprint(self):
        """Gets the thumbprint of this MpnsCredentialProperties.

        The MPNS certificate Thumbprint

        :return: The thumbprint of this MpnsCredentialProperties.
        :rtype: str
        """
        return self._thumbprint

    @thumbprint.setter
    def thumbprint(self, thumbprint):
        """Sets the thumbprint of this MpnsCredentialProperties.

        The MPNS certificate Thumbprint

        :param thumbprint: The thumbprint of this MpnsCredentialProperties.
        :type thumbprint: str
        """

        self._thumbprint = thumbprint
