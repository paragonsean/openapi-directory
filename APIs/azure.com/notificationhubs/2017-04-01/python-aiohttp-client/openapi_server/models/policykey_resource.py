# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PolicykeyResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_key: str=None):
        """PolicykeyResource - a model defined in OpenAPI

        :param policy_key: The policy_key of this PolicykeyResource.
        """
        self.openapi_types = {
            'policy_key': str
        }

        self.attribute_map = {
            'policy_key': 'policyKey'
        }

        self._policy_key = policy_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicykeyResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicykeyResource of this PolicykeyResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_key(self):
        """Gets the policy_key of this PolicykeyResource.

        Name of the key that has to be regenerated for the Namespace/Notification Hub Authorization Rule. The value can be Primary Key/Secondary Key.

        :return: The policy_key of this PolicykeyResource.
        :rtype: str
        """
        return self._policy_key

    @policy_key.setter
    def policy_key(self, policy_key):
        """Sets the policy_key of this PolicykeyResource.

        Name of the key that has to be regenerated for the Namespace/Notification Hub Authorization Rule. The value can be Primary Key/Secondary Key.

        :param policy_key: The policy_key of this PolicykeyResource.
        :type policy_key: str
        """

        self._policy_key = policy_key
