/*
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.SecurityTaskParameters;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes properties of a task.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:38:11.183252-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SecurityTaskProperties {
  public static final String SERIALIZED_NAME_CREATION_TIME_UTC = "creationTimeUtc";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME_UTC)
  private OffsetDateTime creationTimeUtc;

  public static final String SERIALIZED_NAME_LAST_STATE_CHANGE_TIME_UTC = "lastStateChangeTimeUtc";
  @SerializedName(SERIALIZED_NAME_LAST_STATE_CHANGE_TIME_UTC)
  private OffsetDateTime lastStateChangeTimeUtc;

  public static final String SERIALIZED_NAME_SECURITY_TASK_PARAMETERS = "securityTaskParameters";
  @SerializedName(SERIALIZED_NAME_SECURITY_TASK_PARAMETERS)
  private SecurityTaskParameters securityTaskParameters;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_SUB_STATE = "subState";
  @SerializedName(SERIALIZED_NAME_SUB_STATE)
  private String subState;

  public SecurityTaskProperties() {
  }

  public SecurityTaskProperties(
     OffsetDateTime creationTimeUtc, 
     OffsetDateTime lastStateChangeTimeUtc, 
     String state, 
     String subState
  ) {
    this();
    this.creationTimeUtc = creationTimeUtc;
    this.lastStateChangeTimeUtc = lastStateChangeTimeUtc;
    this.state = state;
    this.subState = subState;
  }

  /**
   * The time this task was discovered in UTC
   * @return creationTimeUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTimeUtc() {
    return creationTimeUtc;
  }



  /**
   * The time this task&#39;s details were last changed in UTC
   * @return lastStateChangeTimeUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastStateChangeTimeUtc() {
    return lastStateChangeTimeUtc;
  }



  public SecurityTaskProperties securityTaskParameters(SecurityTaskParameters securityTaskParameters) {
    this.securityTaskParameters = securityTaskParameters;
    return this;
  }

  /**
   * Get securityTaskParameters
   * @return securityTaskParameters
   */
  @javax.annotation.Nullable
  public SecurityTaskParameters getSecurityTaskParameters() {
    return securityTaskParameters;
  }

  public void setSecurityTaskParameters(SecurityTaskParameters securityTaskParameters) {
    this.securityTaskParameters = securityTaskParameters;
  }


  /**
   * State of the task (Active, Resolved etc.)
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }



  /**
   * Additional data on the state of the task
   * @return subState
   */
  @javax.annotation.Nullable
  public String getSubState() {
    return subState;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecurityTaskProperties securityTaskProperties = (SecurityTaskProperties) o;
    return Objects.equals(this.creationTimeUtc, securityTaskProperties.creationTimeUtc) &&
        Objects.equals(this.lastStateChangeTimeUtc, securityTaskProperties.lastStateChangeTimeUtc) &&
        Objects.equals(this.securityTaskParameters, securityTaskProperties.securityTaskParameters) &&
        Objects.equals(this.state, securityTaskProperties.state) &&
        Objects.equals(this.subState, securityTaskProperties.subState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationTimeUtc, lastStateChangeTimeUtc, securityTaskParameters, state, subState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecurityTaskProperties {\n");
    sb.append("    creationTimeUtc: ").append(toIndentedString(creationTimeUtc)).append("\n");
    sb.append("    lastStateChangeTimeUtc: ").append(toIndentedString(lastStateChangeTimeUtc)).append("\n");
    sb.append("    securityTaskParameters: ").append(toIndentedString(securityTaskParameters)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    subState: ").append(toIndentedString(subState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("creationTimeUtc");
    openapiFields.add("lastStateChangeTimeUtc");
    openapiFields.add("securityTaskParameters");
    openapiFields.add("state");
    openapiFields.add("subState");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SecurityTaskProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SecurityTaskProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SecurityTaskProperties is not found in the empty JSON string", SecurityTaskProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SecurityTaskProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SecurityTaskProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("subState") != null && !jsonObj.get("subState").isJsonNull()) && !jsonObj.get("subState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subState").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SecurityTaskProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SecurityTaskProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SecurityTaskProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SecurityTaskProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<SecurityTaskProperties>() {
           @Override
           public void write(JsonWriter out, SecurityTaskProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SecurityTaskProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SecurityTaskProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SecurityTaskProperties
   * @throws IOException if the JSON string is invalid with respect to SecurityTaskProperties
   */
  public static SecurityTaskProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SecurityTaskProperties.class);
  }

  /**
   * Convert an instance of SecurityTaskProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

