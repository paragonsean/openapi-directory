/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISecurityTaskProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISecurityTaskProperties::OAISecurityTaskProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISecurityTaskProperties::OAISecurityTaskProperties() {
    this->initializeModel();
}

OAISecurityTaskProperties::~OAISecurityTaskProperties() {}

void OAISecurityTaskProperties::initializeModel() {

    m_creation_time_utc_isSet = false;
    m_creation_time_utc_isValid = false;

    m_last_state_change_time_utc_isSet = false;
    m_last_state_change_time_utc_isValid = false;

    m_security_task_parameters_isSet = false;
    m_security_task_parameters_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_sub_state_isSet = false;
    m_sub_state_isValid = false;
}

void OAISecurityTaskProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISecurityTaskProperties::fromJsonObject(QJsonObject json) {

    m_creation_time_utc_isValid = ::OpenAPI::fromJsonValue(m_creation_time_utc, json[QString("creationTimeUtc")]);
    m_creation_time_utc_isSet = !json[QString("creationTimeUtc")].isNull() && m_creation_time_utc_isValid;

    m_last_state_change_time_utc_isValid = ::OpenAPI::fromJsonValue(m_last_state_change_time_utc, json[QString("lastStateChangeTimeUtc")]);
    m_last_state_change_time_utc_isSet = !json[QString("lastStateChangeTimeUtc")].isNull() && m_last_state_change_time_utc_isValid;

    m_security_task_parameters_isValid = ::OpenAPI::fromJsonValue(m_security_task_parameters, json[QString("securityTaskParameters")]);
    m_security_task_parameters_isSet = !json[QString("securityTaskParameters")].isNull() && m_security_task_parameters_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_sub_state_isValid = ::OpenAPI::fromJsonValue(m_sub_state, json[QString("subState")]);
    m_sub_state_isSet = !json[QString("subState")].isNull() && m_sub_state_isValid;
}

QString OAISecurityTaskProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISecurityTaskProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_utc_isSet) {
        obj.insert(QString("creationTimeUtc"), ::OpenAPI::toJsonValue(m_creation_time_utc));
    }
    if (m_last_state_change_time_utc_isSet) {
        obj.insert(QString("lastStateChangeTimeUtc"), ::OpenAPI::toJsonValue(m_last_state_change_time_utc));
    }
    if (m_security_task_parameters.isSet()) {
        obj.insert(QString("securityTaskParameters"), ::OpenAPI::toJsonValue(m_security_task_parameters));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_sub_state_isSet) {
        obj.insert(QString("subState"), ::OpenAPI::toJsonValue(m_sub_state));
    }
    return obj;
}

QDateTime OAISecurityTaskProperties::getCreationTimeUtc() const {
    return m_creation_time_utc;
}
void OAISecurityTaskProperties::setCreationTimeUtc(const QDateTime &creation_time_utc) {
    m_creation_time_utc = creation_time_utc;
    m_creation_time_utc_isSet = true;
}

bool OAISecurityTaskProperties::is_creation_time_utc_Set() const{
    return m_creation_time_utc_isSet;
}

bool OAISecurityTaskProperties::is_creation_time_utc_Valid() const{
    return m_creation_time_utc_isValid;
}

QDateTime OAISecurityTaskProperties::getLastStateChangeTimeUtc() const {
    return m_last_state_change_time_utc;
}
void OAISecurityTaskProperties::setLastStateChangeTimeUtc(const QDateTime &last_state_change_time_utc) {
    m_last_state_change_time_utc = last_state_change_time_utc;
    m_last_state_change_time_utc_isSet = true;
}

bool OAISecurityTaskProperties::is_last_state_change_time_utc_Set() const{
    return m_last_state_change_time_utc_isSet;
}

bool OAISecurityTaskProperties::is_last_state_change_time_utc_Valid() const{
    return m_last_state_change_time_utc_isValid;
}

OAISecurityTaskParameters OAISecurityTaskProperties::getSecurityTaskParameters() const {
    return m_security_task_parameters;
}
void OAISecurityTaskProperties::setSecurityTaskParameters(const OAISecurityTaskParameters &security_task_parameters) {
    m_security_task_parameters = security_task_parameters;
    m_security_task_parameters_isSet = true;
}

bool OAISecurityTaskProperties::is_security_task_parameters_Set() const{
    return m_security_task_parameters_isSet;
}

bool OAISecurityTaskProperties::is_security_task_parameters_Valid() const{
    return m_security_task_parameters_isValid;
}

QString OAISecurityTaskProperties::getState() const {
    return m_state;
}
void OAISecurityTaskProperties::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAISecurityTaskProperties::is_state_Set() const{
    return m_state_isSet;
}

bool OAISecurityTaskProperties::is_state_Valid() const{
    return m_state_isValid;
}

QString OAISecurityTaskProperties::getSubState() const {
    return m_sub_state;
}
void OAISecurityTaskProperties::setSubState(const QString &sub_state) {
    m_sub_state = sub_state;
    m_sub_state_isSet = true;
}

bool OAISecurityTaskProperties::is_sub_state_Set() const{
    return m_sub_state_isSet;
}

bool OAISecurityTaskProperties::is_sub_state_Valid() const{
    return m_sub_state_isValid;
}

bool OAISecurityTaskProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_state_change_time_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_task_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISecurityTaskProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
