# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChargeSummaryProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, azure_charges: float=None, billing_period_id: str=None, charges_billed_separately: float=None, currency: str=None, marketplace_charges: float=None, usage_end: str=None, usage_start: str=None):
        """ChargeSummaryProperties - a model defined in OpenAPI

        :param azure_charges: The azure_charges of this ChargeSummaryProperties.
        :param billing_period_id: The billing_period_id of this ChargeSummaryProperties.
        :param charges_billed_separately: The charges_billed_separately of this ChargeSummaryProperties.
        :param currency: The currency of this ChargeSummaryProperties.
        :param marketplace_charges: The marketplace_charges of this ChargeSummaryProperties.
        :param usage_end: The usage_end of this ChargeSummaryProperties.
        :param usage_start: The usage_start of this ChargeSummaryProperties.
        """
        self.openapi_types = {
            'azure_charges': float,
            'billing_period_id': str,
            'charges_billed_separately': float,
            'currency': str,
            'marketplace_charges': float,
            'usage_end': str,
            'usage_start': str
        }

        self.attribute_map = {
            'azure_charges': 'azureCharges',
            'billing_period_id': 'billingPeriodId',
            'charges_billed_separately': 'chargesBilledSeparately',
            'currency': 'currency',
            'marketplace_charges': 'marketplaceCharges',
            'usage_end': 'usageEnd',
            'usage_start': 'usageStart'
        }

        self._azure_charges = azure_charges
        self._billing_period_id = billing_period_id
        self._charges_billed_separately = charges_billed_separately
        self._currency = currency
        self._marketplace_charges = marketplace_charges
        self._usage_end = usage_end
        self._usage_start = usage_start

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChargeSummaryProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChargeSummaryProperties of this ChargeSummaryProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def azure_charges(self):
        """Gets the azure_charges of this ChargeSummaryProperties.

        Azure Charges.

        :return: The azure_charges of this ChargeSummaryProperties.
        :rtype: float
        """
        return self._azure_charges

    @azure_charges.setter
    def azure_charges(self, azure_charges):
        """Sets the azure_charges of this ChargeSummaryProperties.

        Azure Charges.

        :param azure_charges: The azure_charges of this ChargeSummaryProperties.
        :type azure_charges: float
        """

        self._azure_charges = azure_charges

    @property
    def billing_period_id(self):
        """Gets the billing_period_id of this ChargeSummaryProperties.

        The id of the billing period resource that the charge belongs to.

        :return: The billing_period_id of this ChargeSummaryProperties.
        :rtype: str
        """
        return self._billing_period_id

    @billing_period_id.setter
    def billing_period_id(self, billing_period_id):
        """Sets the billing_period_id of this ChargeSummaryProperties.

        The id of the billing period resource that the charge belongs to.

        :param billing_period_id: The billing_period_id of this ChargeSummaryProperties.
        :type billing_period_id: str
        """

        self._billing_period_id = billing_period_id

    @property
    def charges_billed_separately(self):
        """Gets the charges_billed_separately of this ChargeSummaryProperties.

        Charges Billed separately.

        :return: The charges_billed_separately of this ChargeSummaryProperties.
        :rtype: float
        """
        return self._charges_billed_separately

    @charges_billed_separately.setter
    def charges_billed_separately(self, charges_billed_separately):
        """Sets the charges_billed_separately of this ChargeSummaryProperties.

        Charges Billed separately.

        :param charges_billed_separately: The charges_billed_separately of this ChargeSummaryProperties.
        :type charges_billed_separately: float
        """

        self._charges_billed_separately = charges_billed_separately

    @property
    def currency(self):
        """Gets the currency of this ChargeSummaryProperties.

        Currency Code

        :return: The currency of this ChargeSummaryProperties.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this ChargeSummaryProperties.

        Currency Code

        :param currency: The currency of this ChargeSummaryProperties.
        :type currency: str
        """

        self._currency = currency

    @property
    def marketplace_charges(self):
        """Gets the marketplace_charges of this ChargeSummaryProperties.

        Marketplace Charges.

        :return: The marketplace_charges of this ChargeSummaryProperties.
        :rtype: float
        """
        return self._marketplace_charges

    @marketplace_charges.setter
    def marketplace_charges(self, marketplace_charges):
        """Sets the marketplace_charges of this ChargeSummaryProperties.

        Marketplace Charges.

        :param marketplace_charges: The marketplace_charges of this ChargeSummaryProperties.
        :type marketplace_charges: float
        """

        self._marketplace_charges = marketplace_charges

    @property
    def usage_end(self):
        """Gets the usage_end of this ChargeSummaryProperties.

         Usage end date.

        :return: The usage_end of this ChargeSummaryProperties.
        :rtype: str
        """
        return self._usage_end

    @usage_end.setter
    def usage_end(self, usage_end):
        """Sets the usage_end of this ChargeSummaryProperties.

         Usage end date.

        :param usage_end: The usage_end of this ChargeSummaryProperties.
        :type usage_end: str
        """

        self._usage_end = usage_end

    @property
    def usage_start(self):
        """Gets the usage_start of this ChargeSummaryProperties.

        Usage start date.

        :return: The usage_start of this ChargeSummaryProperties.
        :rtype: str
        """
        return self._usage_start

    @usage_start.setter
    def usage_start(self, usage_start):
        """Sets the usage_start of this ChargeSummaryProperties.

        Usage start date.

        :param usage_start: The usage_start of this ChargeSummaryProperties.
        :type usage_start: str
        """

        self._usage_start = usage_start
