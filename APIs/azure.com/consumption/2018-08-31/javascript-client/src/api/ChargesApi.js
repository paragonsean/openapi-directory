/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-08-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ChargeSummary from '../model/ChargeSummary';
import ChargesListResult from '../model/ChargesListResult';
import ErrorResponse from '../model/ErrorResponse';

/**
* Charges service.
* @module api/ChargesApi
* @version 2018-08-31
*/
export default class ChargesApi {

    /**
    * Constructs a new ChargesApi. 
    * @alias module:api/ChargesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the chargesListByDepartment operation.
     * @callback module:api/ChargesApi~chargesListByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the charges by departmentId.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} departmentId Department ID
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-31.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter charges by properties/usageEnd (Utc time), properties/usageStart (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
     * @param {module:api/ChargesApi~chargesListByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargesListResult}
     */
    chargesListByDepartment(billingAccountId, departmentId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling chargesListByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling chargesListByDepartment");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling chargesListByDepartment");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'departmentId': departmentId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ChargesListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.Consumption/charges', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the chargesListByEnrollmentAccount operation.
     * @callback module:api/ChargesApi~chargesListByEnrollmentAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the charges by enrollmentAccountId.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} enrollmentAccountId EnrollmentAccount ID
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-31.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter charges by properties/usageEnd (Utc time), properties/usageStart (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
     * @param {module:api/ChargesApi~chargesListByEnrollmentAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargesListResult}
     */
    chargesListByEnrollmentAccount(billingAccountId, enrollmentAccountId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling chargesListByEnrollmentAccount");
      }
      // verify the required parameter 'enrollmentAccountId' is set
      if (enrollmentAccountId === undefined || enrollmentAccountId === null) {
        throw new Error("Missing the required parameter 'enrollmentAccountId' when calling chargesListByEnrollmentAccount");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling chargesListByEnrollmentAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'enrollmentAccountId': enrollmentAccountId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ChargesListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.Consumption/charges', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the chargesListForBillingPeriodByDepartment operation.
     * @callback module:api/ChargesApi~chargesListForBillingPeriodByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargeSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the charges based on departmentId by billing period.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} departmentId Department ID
     * @param {String} billingPeriodName Billing Period Name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-31.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter charges by properties/usageEnd (Utc time), properties/usageStart (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
     * @param {module:api/ChargesApi~chargesListForBillingPeriodByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargeSummary}
     */
    chargesListForBillingPeriodByDepartment(billingAccountId, departmentId, billingPeriodName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling chargesListForBillingPeriodByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling chargesListForBillingPeriodByDepartment");
      }
      // verify the required parameter 'billingPeriodName' is set
      if (billingPeriodName === undefined || billingPeriodName === null) {
        throw new Error("Missing the required parameter 'billingPeriodName' when calling chargesListForBillingPeriodByDepartment");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling chargesListForBillingPeriodByDepartment");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'departmentId': departmentId,
        'billingPeriodName': billingPeriodName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ChargeSummary;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/charges', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the chargesListForBillingPeriodByEnrollmentAccount operation.
     * @callback module:api/ChargesApi~chargesListForBillingPeriodByEnrollmentAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargeSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the charges based on enrollmentAccountId by billing period.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} enrollmentAccountId EnrollmentAccount ID
     * @param {String} billingPeriodName Billing Period Name.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-08-31.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter charges by properties/usageEnd (Utc time), properties/usageStart (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
     * @param {module:api/ChargesApi~chargesListForBillingPeriodByEnrollmentAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargeSummary}
     */
    chargesListForBillingPeriodByEnrollmentAccount(billingAccountId, enrollmentAccountId, billingPeriodName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling chargesListForBillingPeriodByEnrollmentAccount");
      }
      // verify the required parameter 'enrollmentAccountId' is set
      if (enrollmentAccountId === undefined || enrollmentAccountId === null) {
        throw new Error("Missing the required parameter 'enrollmentAccountId' when calling chargesListForBillingPeriodByEnrollmentAccount");
      }
      // verify the required parameter 'billingPeriodName' is set
      if (billingPeriodName === undefined || billingPeriodName === null) {
        throw new Error("Missing the required parameter 'billingPeriodName' when calling chargesListForBillingPeriodByEnrollmentAccount");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling chargesListForBillingPeriodByEnrollmentAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'enrollmentAccountId': enrollmentAccountId,
        'billingPeriodName': billingPeriodName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ChargeSummary;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/charges', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
