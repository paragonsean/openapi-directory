/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import MarketplacesListResult from '../model/MarketplacesListResult';

/**
* Marketplaces service.
* @module api/MarketplacesApi
* @version 2018-10-01
*/
export default class MarketplacesApi {

    /**
    * Constructs a new MarketplacesApi. 
    * @alias module:api/MarketplacesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the marketplacesList operation.
     * @callback module:api/MarketplacesApi~marketplacesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplacesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the marketplaces for a scope by subscriptionId and current billing period. Marketplaces are available via this API only for May 1, 2014 or later.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-10-01.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param {Number} [top] May be used to limit the number of results to the most recent N marketplaces.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {module:api/MarketplacesApi~marketplacesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplacesListResult}
     */
    marketplacesList(apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling marketplacesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling marketplacesList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$skiptoken': opts['skiptoken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MarketplacesListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/marketplaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketplacesListByBillingAccount operation.
     * @callback module:api/MarketplacesApi~marketplacesListByBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplacesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the marketplaces for a scope by billingAccountId and current billing period. Marketplaces are available via this API only for May 1, 2014 or later.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-10-01.
     * @param {String} billingAccountId BillingAccount ID
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param {Number} [top] May be used to limit the number of results to the most recent N marketplaces.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {module:api/MarketplacesApi~marketplacesListByBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplacesListResult}
     */
    marketplacesListByBillingAccount(apiVersion, billingAccountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling marketplacesListByBillingAccount");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling marketplacesListByBillingAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$skiptoken': opts['skiptoken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MarketplacesListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/marketplaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketplacesListByBillingPeriod operation.
     * @callback module:api/MarketplacesApi~marketplacesListByBillingPeriodCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplacesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the marketplaces for a scope by billing period and subscriptionId. Marketplaces are available via this API only for May 1, 2014 or later.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-10-01.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} billingPeriodName Billing Period Name.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param {Number} [top] May be used to limit the number of results to the most recent N marketplaces.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {module:api/MarketplacesApi~marketplacesListByBillingPeriodCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplacesListResult}
     */
    marketplacesListByBillingPeriod(apiVersion, subscriptionId, billingPeriodName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling marketplacesListByBillingPeriod");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling marketplacesListByBillingPeriod");
      }
      // verify the required parameter 'billingPeriodName' is set
      if (billingPeriodName === undefined || billingPeriodName === null) {
        throw new Error("Missing the required parameter 'billingPeriodName' when calling marketplacesListByBillingPeriod");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'billingPeriodName': billingPeriodName
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$skiptoken': opts['skiptoken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MarketplacesListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/marketplaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketplacesListByDepartment operation.
     * @callback module:api/MarketplacesApi~marketplacesListByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplacesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the marketplaces for a scope by departmentId and current billing period. Marketplaces are available via this API only for May 1, 2014 or later.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-10-01.
     * @param {String} departmentId Department ID
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param {Number} [top] May be used to limit the number of results to the most recent N marketplaces.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {module:api/MarketplacesApi~marketplacesListByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplacesListResult}
     */
    marketplacesListByDepartment(apiVersion, departmentId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling marketplacesListByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling marketplacesListByDepartment");
      }

      let pathParams = {
        'departmentId': departmentId
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$skiptoken': opts['skiptoken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MarketplacesListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Consumption/marketplaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketplacesListByEnrollmentAccount operation.
     * @callback module:api/MarketplacesApi~marketplacesListByEnrollmentAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplacesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the marketplaces for a scope by enrollmentAccountId and current billing period. Marketplaces are available via this API only for May 1, 2014 or later.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-10-01.
     * @param {String} enrollmentAccountId EnrollmentAccount ID
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param {Number} [top] May be used to limit the number of results to the most recent N marketplaces.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {module:api/MarketplacesApi~marketplacesListByEnrollmentAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplacesListResult}
     */
    marketplacesListByEnrollmentAccount(apiVersion, enrollmentAccountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling marketplacesListByEnrollmentAccount");
      }
      // verify the required parameter 'enrollmentAccountId' is set
      if (enrollmentAccountId === undefined || enrollmentAccountId === null) {
        throw new Error("Missing the required parameter 'enrollmentAccountId' when calling marketplacesListByEnrollmentAccount");
      }

      let pathParams = {
        'enrollmentAccountId': enrollmentAccountId
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$skiptoken': opts['skiptoken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MarketplacesListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.Consumption/marketplaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketplacesListByManagementGroup operation.
     * @callback module:api/MarketplacesApi~marketplacesListByManagementGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplacesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the marketplace records for all subscriptions belonging to a management group scope by current billing period. Marketplaces are available via this API only for May 1, 2014 or later.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-10-01.
     * @param {String} managementGroupId Azure Management Group ID.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param {Number} [top] May be used to limit the number of results to the most recent N marketplaces.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {module:api/MarketplacesApi~marketplacesListByManagementGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplacesListResult}
     */
    marketplacesListByManagementGroup(apiVersion, managementGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling marketplacesListByManagementGroup");
      }
      // verify the required parameter 'managementGroupId' is set
      if (managementGroupId === undefined || managementGroupId === null) {
        throw new Error("Missing the required parameter 'managementGroupId' when calling marketplacesListByManagementGroup");
      }

      let pathParams = {
        'managementGroupId': managementGroupId
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$skiptoken': opts['skiptoken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MarketplacesListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Consumption/marketplaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketplacesListForBillingPeriodByBillingAccount operation.
     * @callback module:api/MarketplacesApi~marketplacesListForBillingPeriodByBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplacesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the marketplaces for a scope by billing period and billingAccountId. Marketplaces are available via this API only for May 1, 2014 or later.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-10-01.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} billingPeriodName Billing Period Name.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param {Number} [top] May be used to limit the number of results to the most recent N marketplaces.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {module:api/MarketplacesApi~marketplacesListForBillingPeriodByBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplacesListResult}
     */
    marketplacesListForBillingPeriodByBillingAccount(apiVersion, billingAccountId, billingPeriodName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling marketplacesListForBillingPeriodByBillingAccount");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling marketplacesListForBillingPeriodByBillingAccount");
      }
      // verify the required parameter 'billingPeriodName' is set
      if (billingPeriodName === undefined || billingPeriodName === null) {
        throw new Error("Missing the required parameter 'billingPeriodName' when calling marketplacesListForBillingPeriodByBillingAccount");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'billingPeriodName': billingPeriodName
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$skiptoken': opts['skiptoken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MarketplacesListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/marketplaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketplacesListForBillingPeriodByDepartment operation.
     * @callback module:api/MarketplacesApi~marketplacesListForBillingPeriodByDepartmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplacesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the marketplaces for a scope by billing period and departmentId. Marketplaces are available via this API only for May 1, 2014 or later.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-10-01.
     * @param {String} departmentId Department ID
     * @param {String} billingPeriodName Billing Period Name.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param {Number} [top] May be used to limit the number of results to the most recent N marketplaces.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {module:api/MarketplacesApi~marketplacesListForBillingPeriodByDepartmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplacesListResult}
     */
    marketplacesListForBillingPeriodByDepartment(apiVersion, departmentId, billingPeriodName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling marketplacesListForBillingPeriodByDepartment");
      }
      // verify the required parameter 'departmentId' is set
      if (departmentId === undefined || departmentId === null) {
        throw new Error("Missing the required parameter 'departmentId' when calling marketplacesListForBillingPeriodByDepartment");
      }
      // verify the required parameter 'billingPeriodName' is set
      if (billingPeriodName === undefined || billingPeriodName === null) {
        throw new Error("Missing the required parameter 'billingPeriodName' when calling marketplacesListForBillingPeriodByDepartment");
      }

      let pathParams = {
        'departmentId': departmentId,
        'billingPeriodName': billingPeriodName
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$skiptoken': opts['skiptoken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MarketplacesListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/marketplaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketplacesListForBillingPeriodByEnrollmentAccount operation.
     * @callback module:api/MarketplacesApi~marketplacesListForBillingPeriodByEnrollmentAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplacesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the marketplaces for a scope by billing period and enrollmentAccountId. Marketplaces are available via this API only for May 1, 2014 or later.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-10-01.
     * @param {String} enrollmentAccountId EnrollmentAccount ID
     * @param {String} billingPeriodName Billing Period Name.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param {Number} [top] May be used to limit the number of results to the most recent N marketplaces.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {module:api/MarketplacesApi~marketplacesListForBillingPeriodByEnrollmentAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplacesListResult}
     */
    marketplacesListForBillingPeriodByEnrollmentAccount(apiVersion, enrollmentAccountId, billingPeriodName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling marketplacesListForBillingPeriodByEnrollmentAccount");
      }
      // verify the required parameter 'enrollmentAccountId' is set
      if (enrollmentAccountId === undefined || enrollmentAccountId === null) {
        throw new Error("Missing the required parameter 'enrollmentAccountId' when calling marketplacesListForBillingPeriodByEnrollmentAccount");
      }
      // verify the required parameter 'billingPeriodName' is set
      if (billingPeriodName === undefined || billingPeriodName === null) {
        throw new Error("Missing the required parameter 'billingPeriodName' when calling marketplacesListForBillingPeriodByEnrollmentAccount");
      }

      let pathParams = {
        'enrollmentAccountId': enrollmentAccountId,
        'billingPeriodName': billingPeriodName
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$skiptoken': opts['skiptoken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MarketplacesListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/marketplaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketplacesListForBillingPeriodByManagementGroup operation.
     * @callback module:api/MarketplacesApi~marketplacesListForBillingPeriodByManagementGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplacesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the marketplace records for all subscriptions belonging to a management group scope by specified billing period. Marketplaces are available via this API only for May 1, 2014 or later.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-10-01.
     * @param {String} managementGroupId Azure Management Group ID.
     * @param {String} billingPeriodName Billing Period Name.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param {Number} [top] May be used to limit the number of results to the most recent N marketplaces.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {module:api/MarketplacesApi~marketplacesListForBillingPeriodByManagementGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplacesListResult}
     */
    marketplacesListForBillingPeriodByManagementGroup(apiVersion, managementGroupId, billingPeriodName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling marketplacesListForBillingPeriodByManagementGroup");
      }
      // verify the required parameter 'managementGroupId' is set
      if (managementGroupId === undefined || managementGroupId === null) {
        throw new Error("Missing the required parameter 'managementGroupId' when calling marketplacesListForBillingPeriodByManagementGroup");
      }
      // verify the required parameter 'billingPeriodName' is set
      if (billingPeriodName === undefined || billingPeriodName === null) {
        throw new Error("Missing the required parameter 'billingPeriodName' when calling marketplacesListForBillingPeriodByManagementGroup");
      }

      let pathParams = {
        'managementGroupId': managementGroupId,
        'billingPeriodName': billingPeriodName
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$skiptoken': opts['skiptoken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MarketplacesListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/marketplaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
