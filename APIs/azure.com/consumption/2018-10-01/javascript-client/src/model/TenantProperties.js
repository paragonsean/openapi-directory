/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TenantProperties model module.
 * @module model/TenantProperties
 * @version 2018-10-01
 */
class TenantProperties {
    /**
     * Constructs a new <code>TenantProperties</code>.
     * The properties of the tenants.
     * @alias module:model/TenantProperties
     */
    constructor() { 
        
        TenantProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TenantProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TenantProperties} obj Optional instance to populate.
     * @return {module:model/TenantProperties} The populated <code>TenantProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TenantProperties();

            if (data.hasOwnProperty('billingAccountId')) {
                obj['billingAccountId'] = ApiClient.convertToType(data['billingAccountId'], 'String');
            }
            if (data.hasOwnProperty('billingAccountName')) {
                obj['billingAccountName'] = ApiClient.convertToType(data['billingAccountName'], 'String');
            }
            if (data.hasOwnProperty('billingProfileName')) {
                obj['billingProfileName'] = ApiClient.convertToType(data['billingProfileName'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TenantProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TenantProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['billingAccountId'] && !(typeof data['billingAccountId'] === 'string' || data['billingAccountId'] instanceof String)) {
            throw new Error("Expected the field `billingAccountId` to be a primitive type in the JSON string but got " + data['billingAccountId']);
        }
        // ensure the json data is a string
        if (data['billingAccountName'] && !(typeof data['billingAccountName'] === 'string' || data['billingAccountName'] instanceof String)) {
            throw new Error("Expected the field `billingAccountName` to be a primitive type in the JSON string but got " + data['billingAccountName']);
        }
        // ensure the json data is a string
        if (data['billingProfileName'] && !(typeof data['billingProfileName'] === 'string' || data['billingProfileName'] instanceof String)) {
            throw new Error("Expected the field `billingProfileName` to be a primitive type in the JSON string but got " + data['billingProfileName']);
        }
        // ensure the json data is a string
        if (data['tenantId'] && !(typeof data['tenantId'] === 'string' || data['tenantId'] instanceof String)) {
            throw new Error("Expected the field `tenantId` to be a primitive type in the JSON string but got " + data['tenantId']);
        }

        return true;
    }


}



/**
 * The Billing AccountId.
 * @member {String} billingAccountId
 */
TenantProperties.prototype['billingAccountId'] = undefined;

/**
 * The Billing Account Name.
 * @member {String} billingAccountName
 */
TenantProperties.prototype['billingAccountName'] = undefined;

/**
 * The Billing Profile name.
 * @member {String} billingProfileName
 */
TenantProperties.prototype['billingProfileName'] = undefined;

/**
 * The TenantId.
 * @member {String} tenantId
 */
TenantProperties.prototype['tenantId'] = undefined;






export default TenantProperties;

