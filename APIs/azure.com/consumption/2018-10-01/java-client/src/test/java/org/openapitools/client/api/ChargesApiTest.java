/*
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ChargeSummary;
import org.openapitools.client.model.ChargesListResult;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChargesApi
 */
@Disabled
public class ChargesApiTest {

    private final ChargesApi api = new ChargesApi();

    /**
     * Lists the charges by departmentId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chargesListByDepartmentTest() throws ApiException {
        String billingAccountId = null;
        String departmentId = null;
        String apiVersion = null;
        String $filter = null;
        ChargesListResult response = api.chargesListByDepartment(billingAccountId, departmentId, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Lists the charges by enrollmentAccountId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chargesListByEnrollmentAccountTest() throws ApiException {
        String billingAccountId = null;
        String enrollmentAccountId = null;
        String apiVersion = null;
        String $filter = null;
        ChargesListResult response = api.chargesListByEnrollmentAccount(billingAccountId, enrollmentAccountId, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Lists the charges based on departmentId by billing period.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chargesListForBillingPeriodByDepartmentTest() throws ApiException {
        String billingAccountId = null;
        String departmentId = null;
        String billingPeriodName = null;
        String apiVersion = null;
        String $filter = null;
        ChargeSummary response = api.chargesListForBillingPeriodByDepartment(billingAccountId, departmentId, billingPeriodName, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Lists the charges based on enrollmentAccountId by billing period.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chargesListForBillingPeriodByEnrollmentAccountTest() throws ApiException {
        String billingAccountId = null;
        String enrollmentAccountId = null;
        String billingPeriodName = null;
        String apiVersion = null;
        String $filter = null;
        ChargeSummary response = api.chargesListForBillingPeriodByEnrollmentAccount(billingAccountId, enrollmentAccountId, billingPeriodName, apiVersion, $filter);
        // TODO: test validations
    }

}
