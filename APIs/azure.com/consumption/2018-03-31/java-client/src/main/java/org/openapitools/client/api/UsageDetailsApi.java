/*
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-03-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.UsageDetailsListResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UsageDetailsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public UsageDetailsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public UsageDetailsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for usageDetailsByBillingAccountList
     * @param billingAccountId BillingAccount ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsByBillingAccountListCall(String billingAccountId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/usageDetails"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        if ($top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$top", $top));
        }

        if ($apply != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$apply", $apply));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call usageDetailsByBillingAccountListValidateBeforeCall(String billingAccountId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling usageDetailsByBillingAccountList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling usageDetailsByBillingAccountList(Async)");
        }

        return usageDetailsByBillingAccountListCall(billingAccountId, apiVersion, $expand, $filter, $skiptoken, $top, $apply, _callback);

    }

    /**
     * 
     * Lists the usage details by billingAccountId for a scope by current billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param billingAccountId BillingAccount ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @return UsageDetailsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public UsageDetailsListResult usageDetailsByBillingAccountList(String billingAccountId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply) throws ApiException {
        ApiResponse<UsageDetailsListResult> localVarResp = usageDetailsByBillingAccountListWithHttpInfo(billingAccountId, apiVersion, $expand, $filter, $skiptoken, $top, $apply);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the usage details by billingAccountId for a scope by current billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param billingAccountId BillingAccount ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @return ApiResponse&lt;UsageDetailsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<UsageDetailsListResult> usageDetailsByBillingAccountListWithHttpInfo(String billingAccountId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply) throws ApiException {
        okhttp3.Call localVarCall = usageDetailsByBillingAccountListValidateBeforeCall(billingAccountId, apiVersion, $expand, $filter, $skiptoken, $top, $apply, null);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the usage details by billingAccountId for a scope by current billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param billingAccountId BillingAccount ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsByBillingAccountListAsync(String billingAccountId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply, final ApiCallback<UsageDetailsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = usageDetailsByBillingAccountListValidateBeforeCall(billingAccountId, apiVersion, $expand, $filter, $skiptoken, $top, $apply, _callback);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for usageDetailsByBillingAccountListByBillingPeriod
     * @param billingAccountId BillingAccount ID (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsByBillingAccountListByBillingPeriodCall(String billingAccountId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/usageDetails"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()))
            .replace("{" + "billingPeriodName" + "}", localVarApiClient.escapeString(billingPeriodName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($apply != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$apply", $apply));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        if ($top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$top", $top));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call usageDetailsByBillingAccountListByBillingPeriodValidateBeforeCall(String billingAccountId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling usageDetailsByBillingAccountListByBillingPeriod(Async)");
        }

        // verify the required parameter 'billingPeriodName' is set
        if (billingPeriodName == null) {
            throw new ApiException("Missing the required parameter 'billingPeriodName' when calling usageDetailsByBillingAccountListByBillingPeriod(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling usageDetailsByBillingAccountListByBillingPeriod(Async)");
        }

        return usageDetailsByBillingAccountListByBillingPeriodCall(billingAccountId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top, _callback);

    }

    /**
     * 
     * Lists the usage details based on billingAccountId for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param billingAccountId BillingAccount ID (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @return UsageDetailsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public UsageDetailsListResult usageDetailsByBillingAccountListByBillingPeriod(String billingAccountId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top) throws ApiException {
        ApiResponse<UsageDetailsListResult> localVarResp = usageDetailsByBillingAccountListByBillingPeriodWithHttpInfo(billingAccountId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the usage details based on billingAccountId for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param billingAccountId BillingAccount ID (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @return ApiResponse&lt;UsageDetailsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<UsageDetailsListResult> usageDetailsByBillingAccountListByBillingPeriodWithHttpInfo(String billingAccountId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top) throws ApiException {
        okhttp3.Call localVarCall = usageDetailsByBillingAccountListByBillingPeriodValidateBeforeCall(billingAccountId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top, null);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the usage details based on billingAccountId for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param billingAccountId BillingAccount ID (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsByBillingAccountListByBillingPeriodAsync(String billingAccountId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top, final ApiCallback<UsageDetailsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = usageDetailsByBillingAccountListByBillingPeriodValidateBeforeCall(billingAccountId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top, _callback);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for usageDetailsByDepartmentList
     * @param departmentId Department ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsByDepartmentListCall(String departmentId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Consumption/usageDetails"
            .replace("{" + "departmentId" + "}", localVarApiClient.escapeString(departmentId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        if ($top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$top", $top));
        }

        if ($apply != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$apply", $apply));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call usageDetailsByDepartmentListValidateBeforeCall(String departmentId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'departmentId' is set
        if (departmentId == null) {
            throw new ApiException("Missing the required parameter 'departmentId' when calling usageDetailsByDepartmentList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling usageDetailsByDepartmentList(Async)");
        }

        return usageDetailsByDepartmentListCall(departmentId, apiVersion, $expand, $filter, $skiptoken, $top, $apply, _callback);

    }

    /**
     * 
     * Lists the usage details by departmentId for a scope by current billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param departmentId Department ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @return UsageDetailsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public UsageDetailsListResult usageDetailsByDepartmentList(String departmentId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply) throws ApiException {
        ApiResponse<UsageDetailsListResult> localVarResp = usageDetailsByDepartmentListWithHttpInfo(departmentId, apiVersion, $expand, $filter, $skiptoken, $top, $apply);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the usage details by departmentId for a scope by current billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param departmentId Department ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @return ApiResponse&lt;UsageDetailsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<UsageDetailsListResult> usageDetailsByDepartmentListWithHttpInfo(String departmentId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply) throws ApiException {
        okhttp3.Call localVarCall = usageDetailsByDepartmentListValidateBeforeCall(departmentId, apiVersion, $expand, $filter, $skiptoken, $top, $apply, null);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the usage details by departmentId for a scope by current billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param departmentId Department ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsByDepartmentListAsync(String departmentId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply, final ApiCallback<UsageDetailsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = usageDetailsByDepartmentListValidateBeforeCall(departmentId, apiVersion, $expand, $filter, $skiptoken, $top, $apply, _callback);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for usageDetailsByDepartmentListByBillingPeriod
     * @param departmentId Department ID (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsByDepartmentListByBillingPeriodCall(String departmentId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/usageDetails"
            .replace("{" + "departmentId" + "}", localVarApiClient.escapeString(departmentId.toString()))
            .replace("{" + "billingPeriodName" + "}", localVarApiClient.escapeString(billingPeriodName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($apply != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$apply", $apply));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        if ($top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$top", $top));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call usageDetailsByDepartmentListByBillingPeriodValidateBeforeCall(String departmentId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'departmentId' is set
        if (departmentId == null) {
            throw new ApiException("Missing the required parameter 'departmentId' when calling usageDetailsByDepartmentListByBillingPeriod(Async)");
        }

        // verify the required parameter 'billingPeriodName' is set
        if (billingPeriodName == null) {
            throw new ApiException("Missing the required parameter 'billingPeriodName' when calling usageDetailsByDepartmentListByBillingPeriod(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling usageDetailsByDepartmentListByBillingPeriod(Async)");
        }

        return usageDetailsByDepartmentListByBillingPeriodCall(departmentId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top, _callback);

    }

    /**
     * 
     * Lists the usage details  based on departmentId for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param departmentId Department ID (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @return UsageDetailsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public UsageDetailsListResult usageDetailsByDepartmentListByBillingPeriod(String departmentId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top) throws ApiException {
        ApiResponse<UsageDetailsListResult> localVarResp = usageDetailsByDepartmentListByBillingPeriodWithHttpInfo(departmentId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the usage details  based on departmentId for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param departmentId Department ID (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @return ApiResponse&lt;UsageDetailsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<UsageDetailsListResult> usageDetailsByDepartmentListByBillingPeriodWithHttpInfo(String departmentId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top) throws ApiException {
        okhttp3.Call localVarCall = usageDetailsByDepartmentListByBillingPeriodValidateBeforeCall(departmentId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top, null);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the usage details  based on departmentId for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param departmentId Department ID (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsByDepartmentListByBillingPeriodAsync(String departmentId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top, final ApiCallback<UsageDetailsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = usageDetailsByDepartmentListByBillingPeriodValidateBeforeCall(departmentId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top, _callback);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for usageDetailsByEnrollmentAccountList
     * @param enrollmentAccountId EnrollmentAccount ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsByEnrollmentAccountListCall(String enrollmentAccountId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.Consumption/usageDetails"
            .replace("{" + "enrollmentAccountId" + "}", localVarApiClient.escapeString(enrollmentAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        if ($top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$top", $top));
        }

        if ($apply != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$apply", $apply));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call usageDetailsByEnrollmentAccountListValidateBeforeCall(String enrollmentAccountId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'enrollmentAccountId' is set
        if (enrollmentAccountId == null) {
            throw new ApiException("Missing the required parameter 'enrollmentAccountId' when calling usageDetailsByEnrollmentAccountList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling usageDetailsByEnrollmentAccountList(Async)");
        }

        return usageDetailsByEnrollmentAccountListCall(enrollmentAccountId, apiVersion, $expand, $filter, $skiptoken, $top, $apply, _callback);

    }

    /**
     * 
     * Lists the usage details by enrollmentAccountId for a scope by current billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param enrollmentAccountId EnrollmentAccount ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @return UsageDetailsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public UsageDetailsListResult usageDetailsByEnrollmentAccountList(String enrollmentAccountId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply) throws ApiException {
        ApiResponse<UsageDetailsListResult> localVarResp = usageDetailsByEnrollmentAccountListWithHttpInfo(enrollmentAccountId, apiVersion, $expand, $filter, $skiptoken, $top, $apply);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the usage details by enrollmentAccountId for a scope by current billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param enrollmentAccountId EnrollmentAccount ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @return ApiResponse&lt;UsageDetailsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<UsageDetailsListResult> usageDetailsByEnrollmentAccountListWithHttpInfo(String enrollmentAccountId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply) throws ApiException {
        okhttp3.Call localVarCall = usageDetailsByEnrollmentAccountListValidateBeforeCall(enrollmentAccountId, apiVersion, $expand, $filter, $skiptoken, $top, $apply, null);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the usage details by enrollmentAccountId for a scope by current billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param enrollmentAccountId EnrollmentAccount ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsByEnrollmentAccountListAsync(String enrollmentAccountId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply, final ApiCallback<UsageDetailsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = usageDetailsByEnrollmentAccountListValidateBeforeCall(enrollmentAccountId, apiVersion, $expand, $filter, $skiptoken, $top, $apply, _callback);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for usageDetailsByEnrollmentAccountListByBillingPeriod
     * @param enrollmentAccountId EnrollmentAccount ID (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsByEnrollmentAccountListByBillingPeriodCall(String enrollmentAccountId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/usageDetails"
            .replace("{" + "enrollmentAccountId" + "}", localVarApiClient.escapeString(enrollmentAccountId.toString()))
            .replace("{" + "billingPeriodName" + "}", localVarApiClient.escapeString(billingPeriodName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($apply != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$apply", $apply));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        if ($top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$top", $top));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call usageDetailsByEnrollmentAccountListByBillingPeriodValidateBeforeCall(String enrollmentAccountId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'enrollmentAccountId' is set
        if (enrollmentAccountId == null) {
            throw new ApiException("Missing the required parameter 'enrollmentAccountId' when calling usageDetailsByEnrollmentAccountListByBillingPeriod(Async)");
        }

        // verify the required parameter 'billingPeriodName' is set
        if (billingPeriodName == null) {
            throw new ApiException("Missing the required parameter 'billingPeriodName' when calling usageDetailsByEnrollmentAccountListByBillingPeriod(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling usageDetailsByEnrollmentAccountListByBillingPeriod(Async)");
        }

        return usageDetailsByEnrollmentAccountListByBillingPeriodCall(enrollmentAccountId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top, _callback);

    }

    /**
     * 
     * Lists the usage details based on enrollmentAccountId for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param enrollmentAccountId EnrollmentAccount ID (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @return UsageDetailsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public UsageDetailsListResult usageDetailsByEnrollmentAccountListByBillingPeriod(String enrollmentAccountId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top) throws ApiException {
        ApiResponse<UsageDetailsListResult> localVarResp = usageDetailsByEnrollmentAccountListByBillingPeriodWithHttpInfo(enrollmentAccountId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the usage details based on enrollmentAccountId for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param enrollmentAccountId EnrollmentAccount ID (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @return ApiResponse&lt;UsageDetailsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<UsageDetailsListResult> usageDetailsByEnrollmentAccountListByBillingPeriodWithHttpInfo(String enrollmentAccountId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top) throws ApiException {
        okhttp3.Call localVarCall = usageDetailsByEnrollmentAccountListByBillingPeriodValidateBeforeCall(enrollmentAccountId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top, null);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the usage details based on enrollmentAccountId for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param enrollmentAccountId EnrollmentAccount ID (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsByEnrollmentAccountListByBillingPeriodAsync(String enrollmentAccountId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top, final ApiCallback<UsageDetailsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = usageDetailsByEnrollmentAccountListByBillingPeriodValidateBeforeCall(enrollmentAccountId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top, _callback);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for usageDetailsList
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsListCall(String subscriptionId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/usageDetails"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        if ($top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$top", $top));
        }

        if ($apply != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$apply", $apply));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call usageDetailsListValidateBeforeCall(String subscriptionId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling usageDetailsList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling usageDetailsList(Async)");
        }

        return usageDetailsListCall(subscriptionId, apiVersion, $expand, $filter, $skiptoken, $top, $apply, _callback);

    }

    /**
     * 
     * Lists the usage details for a scope by current billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @return UsageDetailsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public UsageDetailsListResult usageDetailsList(String subscriptionId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply) throws ApiException {
        ApiResponse<UsageDetailsListResult> localVarResp = usageDetailsListWithHttpInfo(subscriptionId, apiVersion, $expand, $filter, $skiptoken, $top, $apply);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the usage details for a scope by current billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @return ApiResponse&lt;UsageDetailsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<UsageDetailsListResult> usageDetailsListWithHttpInfo(String subscriptionId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply) throws ApiException {
        okhttp3.Call localVarCall = usageDetailsListValidateBeforeCall(subscriptionId, apiVersion, $expand, $filter, $skiptoken, $top, $apply, null);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the usage details for a scope by current billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsListAsync(String subscriptionId, String apiVersion, String $expand, String $filter, String $skiptoken, Integer $top, String $apply, final ApiCallback<UsageDetailsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = usageDetailsListValidateBeforeCall(subscriptionId, apiVersion, $expand, $filter, $skiptoken, $top, $apply, _callback);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for usageDetailsListByBillingPeriod
     * @param subscriptionId Azure Subscription ID. (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsListByBillingPeriodCall(String subscriptionId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/usageDetails"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "billingPeriodName" + "}", localVarApiClient.escapeString(billingPeriodName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($apply != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$apply", $apply));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        if ($top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$top", $top));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call usageDetailsListByBillingPeriodValidateBeforeCall(String subscriptionId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling usageDetailsListByBillingPeriod(Async)");
        }

        // verify the required parameter 'billingPeriodName' is set
        if (billingPeriodName == null) {
            throw new ApiException("Missing the required parameter 'billingPeriodName' when calling usageDetailsListByBillingPeriod(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling usageDetailsListByBillingPeriod(Async)");
        }

        return usageDetailsListByBillingPeriodCall(subscriptionId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top, _callback);

    }

    /**
     * 
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @return UsageDetailsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public UsageDetailsListResult usageDetailsListByBillingPeriod(String subscriptionId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top) throws ApiException {
        ApiResponse<UsageDetailsListResult> localVarResp = usageDetailsListByBillingPeriodWithHttpInfo(subscriptionId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @return ApiResponse&lt;UsageDetailsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<UsageDetailsListResult> usageDetailsListByBillingPeriodWithHttpInfo(String subscriptionId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top) throws ApiException {
        okhttp3.Call localVarCall = usageDetailsListByBillingPeriodValidateBeforeCall(subscriptionId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top, null);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param billingPeriodName Billing Period Name. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-03-31. (required)
     * @param $expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. (optional)
     * @param $filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports &#39;eq&#39;, &#39;lt&#39;, &#39;gt&#39;, &#39;le&#39;, &#39;ge&#39;, and &#39;and&#39;. It does not currently support &#39;ne&#39;, &#39;or&#39;, or &#39;not&#39;. Tag filter is a key value pair string where key and value is separated by a colon (:). (optional)
     * @param $apply OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart) for specified billing period (optional)
     * @param $skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. (optional)
     * @param $top May be used to limit the number of results to the most recent N usageDetails. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call usageDetailsListByBillingPeriodAsync(String subscriptionId, String billingPeriodName, String apiVersion, String $expand, String $filter, String $apply, String $skiptoken, Integer $top, final ApiCallback<UsageDetailsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = usageDetailsListByBillingPeriodValidateBeforeCall(subscriptionId, billingPeriodName, apiVersion, $expand, $filter, $apply, $skiptoken, $top, _callback);
        Type localVarReturnType = new TypeToken<UsageDetailsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
