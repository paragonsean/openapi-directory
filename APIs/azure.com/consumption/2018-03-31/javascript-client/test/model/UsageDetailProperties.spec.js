/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-03-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ConsumptionManagementClient);
  }
}(this, function(expect, ConsumptionManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ConsumptionManagementClient.UsageDetailProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsageDetailProperties', function() {
    it('should create an instance of UsageDetailProperties', function() {
      // uncomment below and update the code to test UsageDetailProperties
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be.a(ConsumptionManagementClient.UsageDetailProperties);
    });

    it('should have the property accountName (base name: "accountName")', function() {
      // uncomment below and update the code to test the property accountName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property additionalProperties (base name: "additionalProperties")', function() {
      // uncomment below and update the code to test the property additionalProperties
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billableQuantity (base name: "billableQuantity")', function() {
      // uncomment below and update the code to test the property billableQuantity
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingPeriodId (base name: "billingPeriodId")', function() {
      // uncomment below and update the code to test the property billingPeriodId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property consumedService (base name: "consumedService")', function() {
      // uncomment below and update the code to test the property consumedService
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property costCenter (base name: "costCenter")', function() {
      // uncomment below and update the code to test the property costCenter
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property departmentName (base name: "departmentName")', function() {
      // uncomment below and update the code to test the property departmentName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property instanceId (base name: "instanceId")', function() {
      // uncomment below and update the code to test the property instanceId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property instanceLocation (base name: "instanceLocation")', function() {
      // uncomment below and update the code to test the property instanceLocation
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property instanceName (base name: "instanceName")', function() {
      // uncomment below and update the code to test the property instanceName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property invoiceId (base name: "invoiceId")', function() {
      // uncomment below and update the code to test the property invoiceId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property isEstimated (base name: "isEstimated")', function() {
      // uncomment below and update the code to test the property isEstimated
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property meterDetails (base name: "meterDetails")', function() {
      // uncomment below and update the code to test the property meterDetails
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property meterId (base name: "meterId")', function() {
      // uncomment below and update the code to test the property meterId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property pretaxCost (base name: "pretaxCost")', function() {
      // uncomment below and update the code to test the property pretaxCost
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property product (base name: "product")', function() {
      // uncomment below and update the code to test the property product
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionGuid (base name: "subscriptionGuid")', function() {
      // uncomment below and update the code to test the property subscriptionGuid
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionName (base name: "subscriptionName")', function() {
      // uncomment below and update the code to test the property subscriptionName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property usageEnd (base name: "usageEnd")', function() {
      // uncomment below and update the code to test the property usageEnd
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property usageQuantity (base name: "usageQuantity")', function() {
      // uncomment below and update the code to test the property usageQuantity
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property usageStart (base name: "usageStart")', function() {
      // uncomment below and update the code to test the property usageStart
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

  });

}));
