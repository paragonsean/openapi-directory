/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-04-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DownloadUrl model module.
 * @module model/DownloadUrl
 * @version 2019-04-01-preview
 */
class DownloadUrl {
    /**
     * Constructs a new <code>DownloadUrl</code>.
     * A secure URL that can be used to download a an entity until the URL expires.
     * @alias module:model/DownloadUrl
     */
    constructor() { 
        
        DownloadUrl.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DownloadUrl</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DownloadUrl} obj Optional instance to populate.
     * @return {module:model/DownloadUrl} The populated <code>DownloadUrl</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DownloadUrl();

            if (data.hasOwnProperty('downloadUrl')) {
                obj['downloadUrl'] = ApiClient.convertToType(data['downloadUrl'], 'String');
            }
            if (data.hasOwnProperty('validTill')) {
                obj['validTill'] = ApiClient.convertToType(data['validTill'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DownloadUrl</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DownloadUrl</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['downloadUrl'] && !(typeof data['downloadUrl'] === 'string' || data['downloadUrl'] instanceof String)) {
            throw new Error("Expected the field `downloadUrl` to be a primitive type in the JSON string but got " + data['downloadUrl']);
        }
        // ensure the json data is a string
        if (data['validTill'] && !(typeof data['validTill'] === 'string' || data['validTill'] instanceof String)) {
            throw new Error("Expected the field `validTill` to be a primitive type in the JSON string but got " + data['validTill']);
        }

        return true;
    }


}



/**
 * The URL to the csv file.
 * @member {String} downloadUrl
 */
DownloadUrl.prototype['downloadUrl'] = undefined;

/**
 * The time in UTC at which this download URL will expire.
 * @member {String} validTill
 */
DownloadUrl.prototype['validTill'] = undefined;






export default DownloadUrl;

