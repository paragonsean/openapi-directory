/*
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ChargesListByBillingAccount;
import org.openapitools.client.model.ChargesListByBillingProfile;
import org.openapitools.client.model.ChargesListByInvoiceSection;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChargesApi
 */
@Disabled
public class ChargesApiTest {

    private final ChargesApi api = new ChargesApi();

    /**
     * Lists the charges by billingAccountId for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chargesByBillingAccountListTest() throws ApiException {
        String billingAccountId = null;
        String apiVersion = null;
        String startDate = null;
        String endDate = null;
        String $apply = null;
        ChargesListByBillingAccount response = api.chargesByBillingAccountList(billingAccountId, apiVersion, startDate, endDate, $apply);
        // TODO: test validations
    }

    /**
     * Lists the charges by billing profile id for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chargesByBillingProfileListTest() throws ApiException {
        String billingAccountId = null;
        String billingProfileId = null;
        String apiVersion = null;
        String startDate = null;
        String endDate = null;
        ChargesListByBillingProfile response = api.chargesByBillingProfileList(billingAccountId, billingProfileId, apiVersion, startDate, endDate);
        // TODO: test validations
    }

    /**
     * Lists the charges by invoice section id for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chargesByInvoiceSectionListTest() throws ApiException {
        String billingAccountId = null;
        String invoiceSectionId = null;
        String apiVersion = null;
        String startDate = null;
        String endDate = null;
        String $apply = null;
        ChargesListByInvoiceSection response = api.chargesByInvoiceSectionList(billingAccountId, invoiceSectionId, apiVersion, startDate, endDate, $apply);
        // TODO: test validations
    }

}
