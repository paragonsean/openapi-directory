/*
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ChargesListByBillingAccount;
import org.openapitools.client.model.ChargesListByBillingProfile;
import org.openapitools.client.model.ChargesListByInvoiceSection;
import org.openapitools.client.model.ErrorResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ChargesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ChargesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ChargesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for chargesByBillingAccountList
     * @param billingAccountId BillingAccount ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param startDate Start date (required)
     * @param endDate End date (required)
     * @param $apply May be used to group charges by properties/billingProfileId, or properties/invoiceSectionId. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call chargesByBillingAccountListCall(String billingAccountId, String apiVersion, String startDate, String endDate, String $apply, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/charges"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (startDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startDate", startDate));
        }

        if (endDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endDate", endDate));
        }

        if ($apply != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$apply", $apply));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call chargesByBillingAccountListValidateBeforeCall(String billingAccountId, String apiVersion, String startDate, String endDate, String $apply, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling chargesByBillingAccountList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling chargesByBillingAccountList(Async)");
        }

        // verify the required parameter 'startDate' is set
        if (startDate == null) {
            throw new ApiException("Missing the required parameter 'startDate' when calling chargesByBillingAccountList(Async)");
        }

        // verify the required parameter 'endDate' is set
        if (endDate == null) {
            throw new ApiException("Missing the required parameter 'endDate' when calling chargesByBillingAccountList(Async)");
        }

        return chargesByBillingAccountListCall(billingAccountId, apiVersion, startDate, endDate, $apply, _callback);

    }

    /**
     * 
     * Lists the charges by billingAccountId for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     * @param billingAccountId BillingAccount ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param startDate Start date (required)
     * @param endDate End date (required)
     * @param $apply May be used to group charges by properties/billingProfileId, or properties/invoiceSectionId. (optional)
     * @return ChargesListByBillingAccount
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ChargesListByBillingAccount chargesByBillingAccountList(String billingAccountId, String apiVersion, String startDate, String endDate, String $apply) throws ApiException {
        ApiResponse<ChargesListByBillingAccount> localVarResp = chargesByBillingAccountListWithHttpInfo(billingAccountId, apiVersion, startDate, endDate, $apply);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the charges by billingAccountId for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     * @param billingAccountId BillingAccount ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param startDate Start date (required)
     * @param endDate End date (required)
     * @param $apply May be used to group charges by properties/billingProfileId, or properties/invoiceSectionId. (optional)
     * @return ApiResponse&lt;ChargesListByBillingAccount&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<ChargesListByBillingAccount> chargesByBillingAccountListWithHttpInfo(String billingAccountId, String apiVersion, String startDate, String endDate, String $apply) throws ApiException {
        okhttp3.Call localVarCall = chargesByBillingAccountListValidateBeforeCall(billingAccountId, apiVersion, startDate, endDate, $apply, null);
        Type localVarReturnType = new TypeToken<ChargesListByBillingAccount>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the charges by billingAccountId for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     * @param billingAccountId BillingAccount ID (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param startDate Start date (required)
     * @param endDate End date (required)
     * @param $apply May be used to group charges by properties/billingProfileId, or properties/invoiceSectionId. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call chargesByBillingAccountListAsync(String billingAccountId, String apiVersion, String startDate, String endDate, String $apply, final ApiCallback<ChargesListByBillingAccount> _callback) throws ApiException {

        okhttp3.Call localVarCall = chargesByBillingAccountListValidateBeforeCall(billingAccountId, apiVersion, startDate, endDate, $apply, _callback);
        Type localVarReturnType = new TypeToken<ChargesListByBillingAccount>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for chargesByBillingProfileList
     * @param billingAccountId BillingAccount ID (required)
     * @param billingProfileId Billing Profile Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param startDate Start date (required)
     * @param endDate End date (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call chargesByBillingProfileListCall(String billingAccountId, String billingProfileId, String apiVersion, String startDate, String endDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/charges"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()))
            .replace("{" + "billingProfileId" + "}", localVarApiClient.escapeString(billingProfileId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (startDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startDate", startDate));
        }

        if (endDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endDate", endDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call chargesByBillingProfileListValidateBeforeCall(String billingAccountId, String billingProfileId, String apiVersion, String startDate, String endDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling chargesByBillingProfileList(Async)");
        }

        // verify the required parameter 'billingProfileId' is set
        if (billingProfileId == null) {
            throw new ApiException("Missing the required parameter 'billingProfileId' when calling chargesByBillingProfileList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling chargesByBillingProfileList(Async)");
        }

        // verify the required parameter 'startDate' is set
        if (startDate == null) {
            throw new ApiException("Missing the required parameter 'startDate' when calling chargesByBillingProfileList(Async)");
        }

        // verify the required parameter 'endDate' is set
        if (endDate == null) {
            throw new ApiException("Missing the required parameter 'endDate' when calling chargesByBillingProfileList(Async)");
        }

        return chargesByBillingProfileListCall(billingAccountId, billingProfileId, apiVersion, startDate, endDate, _callback);

    }

    /**
     * 
     * Lists the charges by billing profile id for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     * @param billingAccountId BillingAccount ID (required)
     * @param billingProfileId Billing Profile Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param startDate Start date (required)
     * @param endDate End date (required)
     * @return ChargesListByBillingProfile
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ChargesListByBillingProfile chargesByBillingProfileList(String billingAccountId, String billingProfileId, String apiVersion, String startDate, String endDate) throws ApiException {
        ApiResponse<ChargesListByBillingProfile> localVarResp = chargesByBillingProfileListWithHttpInfo(billingAccountId, billingProfileId, apiVersion, startDate, endDate);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the charges by billing profile id for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     * @param billingAccountId BillingAccount ID (required)
     * @param billingProfileId Billing Profile Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param startDate Start date (required)
     * @param endDate End date (required)
     * @return ApiResponse&lt;ChargesListByBillingProfile&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<ChargesListByBillingProfile> chargesByBillingProfileListWithHttpInfo(String billingAccountId, String billingProfileId, String apiVersion, String startDate, String endDate) throws ApiException {
        okhttp3.Call localVarCall = chargesByBillingProfileListValidateBeforeCall(billingAccountId, billingProfileId, apiVersion, startDate, endDate, null);
        Type localVarReturnType = new TypeToken<ChargesListByBillingProfile>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the charges by billing profile id for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     * @param billingAccountId BillingAccount ID (required)
     * @param billingProfileId Billing Profile Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param startDate Start date (required)
     * @param endDate End date (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call chargesByBillingProfileListAsync(String billingAccountId, String billingProfileId, String apiVersion, String startDate, String endDate, final ApiCallback<ChargesListByBillingProfile> _callback) throws ApiException {

        okhttp3.Call localVarCall = chargesByBillingProfileListValidateBeforeCall(billingAccountId, billingProfileId, apiVersion, startDate, endDate, _callback);
        Type localVarReturnType = new TypeToken<ChargesListByBillingProfile>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for chargesByInvoiceSectionList
     * @param billingAccountId BillingAccount ID (required)
     * @param invoiceSectionId Invoice Section Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param startDate Start date (required)
     * @param endDate End date (required)
     * @param $apply May be used to group charges by properties/productName. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call chargesByInvoiceSectionListCall(String billingAccountId, String invoiceSectionId, String apiVersion, String startDate, String endDate, String $apply, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}/providers/Microsoft.Consumption/charges"
            .replace("{" + "billingAccountId" + "}", localVarApiClient.escapeString(billingAccountId.toString()))
            .replace("{" + "invoiceSectionId" + "}", localVarApiClient.escapeString(invoiceSectionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (startDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startDate", startDate));
        }

        if (endDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endDate", endDate));
        }

        if ($apply != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$apply", $apply));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call chargesByInvoiceSectionListValidateBeforeCall(String billingAccountId, String invoiceSectionId, String apiVersion, String startDate, String endDate, String $apply, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling chargesByInvoiceSectionList(Async)");
        }

        // verify the required parameter 'invoiceSectionId' is set
        if (invoiceSectionId == null) {
            throw new ApiException("Missing the required parameter 'invoiceSectionId' when calling chargesByInvoiceSectionList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling chargesByInvoiceSectionList(Async)");
        }

        // verify the required parameter 'startDate' is set
        if (startDate == null) {
            throw new ApiException("Missing the required parameter 'startDate' when calling chargesByInvoiceSectionList(Async)");
        }

        // verify the required parameter 'endDate' is set
        if (endDate == null) {
            throw new ApiException("Missing the required parameter 'endDate' when calling chargesByInvoiceSectionList(Async)");
        }

        return chargesByInvoiceSectionListCall(billingAccountId, invoiceSectionId, apiVersion, startDate, endDate, $apply, _callback);

    }

    /**
     * 
     * Lists the charges by invoice section id for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     * @param billingAccountId BillingAccount ID (required)
     * @param invoiceSectionId Invoice Section Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param startDate Start date (required)
     * @param endDate End date (required)
     * @param $apply May be used to group charges by properties/productName. (optional)
     * @return ChargesListByInvoiceSection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ChargesListByInvoiceSection chargesByInvoiceSectionList(String billingAccountId, String invoiceSectionId, String apiVersion, String startDate, String endDate, String $apply) throws ApiException {
        ApiResponse<ChargesListByInvoiceSection> localVarResp = chargesByInvoiceSectionListWithHttpInfo(billingAccountId, invoiceSectionId, apiVersion, startDate, endDate, $apply);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the charges by invoice section id for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     * @param billingAccountId BillingAccount ID (required)
     * @param invoiceSectionId Invoice Section Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param startDate Start date (required)
     * @param endDate End date (required)
     * @param $apply May be used to group charges by properties/productName. (optional)
     * @return ApiResponse&lt;ChargesListByInvoiceSection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<ChargesListByInvoiceSection> chargesByInvoiceSectionListWithHttpInfo(String billingAccountId, String invoiceSectionId, String apiVersion, String startDate, String endDate, String $apply) throws ApiException {
        okhttp3.Call localVarCall = chargesByInvoiceSectionListValidateBeforeCall(billingAccountId, invoiceSectionId, apiVersion, startDate, endDate, $apply, null);
        Type localVarReturnType = new TypeToken<ChargesListByInvoiceSection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the charges by invoice section id for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     * @param billingAccountId BillingAccount ID (required)
     * @param invoiceSectionId Invoice Section Id. (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview. (required)
     * @param startDate Start date (required)
     * @param endDate End date (required)
     * @param $apply May be used to group charges by properties/productName. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call chargesByInvoiceSectionListAsync(String billingAccountId, String invoiceSectionId, String apiVersion, String startDate, String endDate, String $apply, final ApiCallback<ChargesListByInvoiceSection> _callback) throws ApiException {

        okhttp3.Call localVarCall = chargesByInvoiceSectionListValidateBeforeCall(billingAccountId, invoiceSectionId, apiVersion, startDate, endDate, $apply, _callback);
        Type localVarReturnType = new TypeToken<ChargesListByInvoiceSection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
