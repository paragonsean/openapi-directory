/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';

/**
 * The BillingProfileProperties model module.
 * @module model/BillingProfileProperties
 * @version 2018-11-01-preview
 */
class BillingProfileProperties {
    /**
     * Constructs a new <code>BillingProfileProperties</code>.
     * The properties of the billing profile.
     * @alias module:model/BillingProfileProperties
     */
    constructor() { 
        
        BillingProfileProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillingProfileProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillingProfileProperties} obj Optional instance to populate.
     * @return {module:model/BillingProfileProperties} The populated <code>BillingProfileProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillingProfileProperties();

            if (data.hasOwnProperty('billingAddress')) {
                obj['billingAddress'] = Address.constructFromObject(data['billingAddress']);
            }
            if (data.hasOwnProperty('billingContact')) {
                obj['billingContact'] = ApiClient.convertToType(data['billingContact'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('emailInvoice')) {
                obj['emailInvoice'] = ApiClient.convertToType(data['emailInvoice'], 'Boolean');
            }
            if (data.hasOwnProperty('invoiceDay')) {
                obj['invoiceDay'] = ApiClient.convertToType(data['invoiceDay'], 'Number');
            }
            if (data.hasOwnProperty('poNumber')) {
                obj['poNumber'] = ApiClient.convertToType(data['poNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillingProfileProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillingProfileProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `billingAddress`
        if (data['billingAddress']) { // data not null
          Address.validateJSON(data['billingAddress']);
        }
        // ensure the json data is a string
        if (data['billingContact'] && !(typeof data['billingContact'] === 'string' || data['billingContact'] instanceof String)) {
            throw new Error("Expected the field `billingContact` to be a primitive type in the JSON string but got " + data['billingContact']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['poNumber'] && !(typeof data['poNumber'] === 'string' || data['poNumber'] instanceof String)) {
            throw new Error("Expected the field `poNumber` to be a primitive type in the JSON string but got " + data['poNumber']);
        }

        return true;
    }


}



/**
 * @member {module:model/Address} billingAddress
 */
BillingProfileProperties.prototype['billingAddress'] = undefined;

/**
 * Billing contact.
 * @member {String} billingContact
 */
BillingProfileProperties.prototype['billingContact'] = undefined;

/**
 * Currency on the billing profile.
 * @member {String} currency
 */
BillingProfileProperties.prototype['currency'] = undefined;

/**
 * The billing profile name.
 * @member {String} displayName
 */
BillingProfileProperties.prototype['displayName'] = undefined;

/**
 * Email invoice.
 * @member {Boolean} emailInvoice
 */
BillingProfileProperties.prototype['emailInvoice'] = undefined;

/**
 * Invoice day.
 * @member {Number} invoiceDay
 */
BillingProfileProperties.prototype['invoiceDay'] = undefined;

/**
 * Purchase order number.
 * @member {String} poNumber
 */
BillingProfileProperties.prototype['poNumber'] = undefined;






export default BillingProfileProperties;

