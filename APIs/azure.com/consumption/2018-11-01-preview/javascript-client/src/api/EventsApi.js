/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Events from '../model/Events';

/**
* Events service.
* @module api/EventsApi
* @version 2018-11-01-preview
*/
export default class EventsApi {

    /**
    * Constructs a new EventsApi. 
    * @alias module:api/EventsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the eventsByBillingProfileList operation.
     * @callback module:api/EventsApi~eventsByBillingProfileListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Events} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the events by billingAccountId and billingProfileId for given start and end date.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} billingProfileId Billing Profile Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {String} startDate Start date
     * @param {String} endDate End date
     * @param {module:api/EventsApi~eventsByBillingProfileListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Events}
     */
    eventsByBillingProfileList(billingAccountId, billingProfileId, apiVersion, startDate, endDate, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling eventsByBillingProfileList");
      }
      // verify the required parameter 'billingProfileId' is set
      if (billingProfileId === undefined || billingProfileId === null) {
        throw new Error("Missing the required parameter 'billingProfileId' when calling eventsByBillingProfileList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling eventsByBillingProfileList");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling eventsByBillingProfileList");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling eventsByBillingProfileList");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'billingProfileId': billingProfileId
      };
      let queryParams = {
        'api-version': apiVersion,
        'startDate': startDate,
        'endDate': endDate
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Events;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
