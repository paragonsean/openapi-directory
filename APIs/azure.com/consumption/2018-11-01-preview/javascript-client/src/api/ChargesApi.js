/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ChargesListByBillingAccount from '../model/ChargesListByBillingAccount';
import ChargesListByBillingProfile from '../model/ChargesListByBillingProfile';
import ChargesListByInvoiceSection from '../model/ChargesListByInvoiceSection';
import ErrorResponse from '../model/ErrorResponse';

/**
* Charges service.
* @module api/ChargesApi
* @version 2018-11-01-preview
*/
export default class ChargesApi {

    /**
    * Constructs a new ChargesApi. 
    * @alias module:api/ChargesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the chargesByBillingAccountList operation.
     * @callback module:api/ChargesApi~chargesByBillingAccountListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargesListByBillingAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the charges by billingAccountId for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {String} startDate Start date
     * @param {String} endDate End date
     * @param {Object} opts Optional parameters
     * @param {String} [apply] May be used to group charges by properties/billingProfileId, or properties/invoiceSectionId.
     * @param {module:api/ChargesApi~chargesByBillingAccountListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargesListByBillingAccount}
     */
    chargesByBillingAccountList(billingAccountId, apiVersion, startDate, endDate, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling chargesByBillingAccountList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling chargesByBillingAccountList");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling chargesByBillingAccountList");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling chargesByBillingAccountList");
      }

      let pathParams = {
        'billingAccountId': billingAccountId
      };
      let queryParams = {
        'api-version': apiVersion,
        'startDate': startDate,
        'endDate': endDate,
        '$apply': opts['apply']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ChargesListByBillingAccount;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/charges', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the chargesByBillingProfileList operation.
     * @callback module:api/ChargesApi~chargesByBillingProfileListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargesListByBillingProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the charges by billing profile id for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} billingProfileId Billing Profile Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {String} startDate Start date
     * @param {String} endDate End date
     * @param {module:api/ChargesApi~chargesByBillingProfileListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargesListByBillingProfile}
     */
    chargesByBillingProfileList(billingAccountId, billingProfileId, apiVersion, startDate, endDate, callback) {
      let postBody = null;
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling chargesByBillingProfileList");
      }
      // verify the required parameter 'billingProfileId' is set
      if (billingProfileId === undefined || billingProfileId === null) {
        throw new Error("Missing the required parameter 'billingProfileId' when calling chargesByBillingProfileList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling chargesByBillingProfileList");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling chargesByBillingProfileList");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling chargesByBillingProfileList");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'billingProfileId': billingProfileId
      };
      let queryParams = {
        'api-version': apiVersion,
        'startDate': startDate,
        'endDate': endDate
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ChargesListByBillingProfile;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/charges', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the chargesByInvoiceSectionList operation.
     * @callback module:api/ChargesApi~chargesByInvoiceSectionListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargesListByInvoiceSection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the charges by invoice section id for given start and end date. Start and end date are used to determine the billing period. For current month, the data will be provided from month to date. If there are no charges for a month then that month will show all zeroes.
     * @param {String} billingAccountId BillingAccount ID
     * @param {String} invoiceSectionId Invoice Section Id.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2018-11-01-preview.
     * @param {String} startDate Start date
     * @param {String} endDate End date
     * @param {Object} opts Optional parameters
     * @param {String} [apply] May be used to group charges by properties/productName.
     * @param {module:api/ChargesApi~chargesByInvoiceSectionListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargesListByInvoiceSection}
     */
    chargesByInvoiceSectionList(billingAccountId, invoiceSectionId, apiVersion, startDate, endDate, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling chargesByInvoiceSectionList");
      }
      // verify the required parameter 'invoiceSectionId' is set
      if (invoiceSectionId === undefined || invoiceSectionId === null) {
        throw new Error("Missing the required parameter 'invoiceSectionId' when calling chargesByInvoiceSectionList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling chargesByInvoiceSectionList");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling chargesByInvoiceSectionList");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling chargesByInvoiceSectionList");
      }

      let pathParams = {
        'billingAccountId': billingAccountId,
        'invoiceSectionId': invoiceSectionId
      };
      let queryParams = {
        'api-version': apiVersion,
        'startDate': startDate,
        'endDate': endDate,
        '$apply': opts['apply']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ChargesListByInvoiceSection;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}/providers/Microsoft.Consumption/charges', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
