/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillingAccountProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillingAccountProperties::OAIBillingAccountProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillingAccountProperties::OAIBillingAccountProperties() {
    this->initializeModel();
}

OAIBillingAccountProperties::~OAIBillingAccountProperties() {}

void OAIBillingAccountProperties::initializeModel() {

    m_account_type_isSet = false;
    m_account_type_isValid = false;

    m_address_isSet = false;
    m_address_isValid = false;

    m_agreements_isSet = false;
    m_agreements_isValid = false;

    m_billing_profiles_isSet = false;
    m_billing_profiles_isValid = false;

    m_company_isSet = false;
    m_company_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_default_currency_isSet = false;
    m_default_currency_isValid = false;

    m_departments_isSet = false;
    m_departments_isValid = false;

    m_enrollment_accounts_isSet = false;
    m_enrollment_accounts_isValid = false;

    m_enrollment_details_isSet = false;
    m_enrollment_details_isValid = false;

    m_invoice_sections_isSet = false;
    m_invoice_sections_isValid = false;
}

void OAIBillingAccountProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillingAccountProperties::fromJsonObject(QJsonObject json) {

    m_account_type_isValid = ::OpenAPI::fromJsonValue(m_account_type, json[QString("accountType")]);
    m_account_type_isSet = !json[QString("accountType")].isNull() && m_account_type_isValid;

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_agreements_isValid = ::OpenAPI::fromJsonValue(m_agreements, json[QString("agreements")]);
    m_agreements_isSet = !json[QString("agreements")].isNull() && m_agreements_isValid;

    m_billing_profiles_isValid = ::OpenAPI::fromJsonValue(m_billing_profiles, json[QString("billingProfiles")]);
    m_billing_profiles_isSet = !json[QString("billingProfiles")].isNull() && m_billing_profiles_isValid;

    m_company_isValid = ::OpenAPI::fromJsonValue(m_company, json[QString("company")]);
    m_company_isSet = !json[QString("company")].isNull() && m_company_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_default_currency_isValid = ::OpenAPI::fromJsonValue(m_default_currency, json[QString("defaultCurrency")]);
    m_default_currency_isSet = !json[QString("defaultCurrency")].isNull() && m_default_currency_isValid;

    m_departments_isValid = ::OpenAPI::fromJsonValue(m_departments, json[QString("departments")]);
    m_departments_isSet = !json[QString("departments")].isNull() && m_departments_isValid;

    m_enrollment_accounts_isValid = ::OpenAPI::fromJsonValue(m_enrollment_accounts, json[QString("enrollmentAccounts")]);
    m_enrollment_accounts_isSet = !json[QString("enrollmentAccounts")].isNull() && m_enrollment_accounts_isValid;

    m_enrollment_details_isValid = ::OpenAPI::fromJsonValue(m_enrollment_details, json[QString("enrollmentDetails")]);
    m_enrollment_details_isSet = !json[QString("enrollmentDetails")].isNull() && m_enrollment_details_isValid;

    m_invoice_sections_isValid = ::OpenAPI::fromJsonValue(m_invoice_sections, json[QString("invoiceSections")]);
    m_invoice_sections_isSet = !json[QString("invoiceSections")].isNull() && m_invoice_sections_isValid;
}

QString OAIBillingAccountProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillingAccountProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_account_type_isSet) {
        obj.insert(QString("accountType"), ::OpenAPI::toJsonValue(m_account_type));
    }
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_agreements_isSet) {
        obj.insert(QString("agreements"), ::OpenAPI::toJsonValue(m_agreements));
    }
    if (m_billing_profiles.size() > 0) {
        obj.insert(QString("billingProfiles"), ::OpenAPI::toJsonValue(m_billing_profiles));
    }
    if (m_company_isSet) {
        obj.insert(QString("company"), ::OpenAPI::toJsonValue(m_company));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_default_currency_isSet) {
        obj.insert(QString("defaultCurrency"), ::OpenAPI::toJsonValue(m_default_currency));
    }
    if (m_departments.size() > 0) {
        obj.insert(QString("departments"), ::OpenAPI::toJsonValue(m_departments));
    }
    if (m_enrollment_accounts.size() > 0) {
        obj.insert(QString("enrollmentAccounts"), ::OpenAPI::toJsonValue(m_enrollment_accounts));
    }
    if (m_enrollment_details.isSet()) {
        obj.insert(QString("enrollmentDetails"), ::OpenAPI::toJsonValue(m_enrollment_details));
    }
    if (m_invoice_sections.size() > 0) {
        obj.insert(QString("invoiceSections"), ::OpenAPI::toJsonValue(m_invoice_sections));
    }
    return obj;
}

QString OAIBillingAccountProperties::getAccountType() const {
    return m_account_type;
}
void OAIBillingAccountProperties::setAccountType(const QString &account_type) {
    m_account_type = account_type;
    m_account_type_isSet = true;
}

bool OAIBillingAccountProperties::is_account_type_Set() const{
    return m_account_type_isSet;
}

bool OAIBillingAccountProperties::is_account_type_Valid() const{
    return m_account_type_isValid;
}

OAIAddress OAIBillingAccountProperties::getAddress() const {
    return m_address;
}
void OAIBillingAccountProperties::setAddress(const OAIAddress &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIBillingAccountProperties::is_address_Set() const{
    return m_address_isSet;
}

bool OAIBillingAccountProperties::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIBillingAccountProperties::getAgreements() const {
    return m_agreements;
}
void OAIBillingAccountProperties::setAgreements(const QString &agreements) {
    m_agreements = agreements;
    m_agreements_isSet = true;
}

bool OAIBillingAccountProperties::is_agreements_Set() const{
    return m_agreements_isSet;
}

bool OAIBillingAccountProperties::is_agreements_Valid() const{
    return m_agreements_isValid;
}

QList<OAIBillingProfile> OAIBillingAccountProperties::getBillingProfiles() const {
    return m_billing_profiles;
}
void OAIBillingAccountProperties::setBillingProfiles(const QList<OAIBillingProfile> &billing_profiles) {
    m_billing_profiles = billing_profiles;
    m_billing_profiles_isSet = true;
}

bool OAIBillingAccountProperties::is_billing_profiles_Set() const{
    return m_billing_profiles_isSet;
}

bool OAIBillingAccountProperties::is_billing_profiles_Valid() const{
    return m_billing_profiles_isValid;
}

QString OAIBillingAccountProperties::getCompany() const {
    return m_company;
}
void OAIBillingAccountProperties::setCompany(const QString &company) {
    m_company = company;
    m_company_isSet = true;
}

bool OAIBillingAccountProperties::is_company_Set() const{
    return m_company_isSet;
}

bool OAIBillingAccountProperties::is_company_Valid() const{
    return m_company_isValid;
}

QString OAIBillingAccountProperties::getCountry() const {
    return m_country;
}
void OAIBillingAccountProperties::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIBillingAccountProperties::is_country_Set() const{
    return m_country_isSet;
}

bool OAIBillingAccountProperties::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIBillingAccountProperties::getDefaultCurrency() const {
    return m_default_currency;
}
void OAIBillingAccountProperties::setDefaultCurrency(const QString &default_currency) {
    m_default_currency = default_currency;
    m_default_currency_isSet = true;
}

bool OAIBillingAccountProperties::is_default_currency_Set() const{
    return m_default_currency_isSet;
}

bool OAIBillingAccountProperties::is_default_currency_Valid() const{
    return m_default_currency_isValid;
}

QList<OAIDepartment> OAIBillingAccountProperties::getDepartments() const {
    return m_departments;
}
void OAIBillingAccountProperties::setDepartments(const QList<OAIDepartment> &departments) {
    m_departments = departments;
    m_departments_isSet = true;
}

bool OAIBillingAccountProperties::is_departments_Set() const{
    return m_departments_isSet;
}

bool OAIBillingAccountProperties::is_departments_Valid() const{
    return m_departments_isValid;
}

QList<OAIEnrollmentAccount> OAIBillingAccountProperties::getEnrollmentAccounts() const {
    return m_enrollment_accounts;
}
void OAIBillingAccountProperties::setEnrollmentAccounts(const QList<OAIEnrollmentAccount> &enrollment_accounts) {
    m_enrollment_accounts = enrollment_accounts;
    m_enrollment_accounts_isSet = true;
}

bool OAIBillingAccountProperties::is_enrollment_accounts_Set() const{
    return m_enrollment_accounts_isSet;
}

bool OAIBillingAccountProperties::is_enrollment_accounts_Valid() const{
    return m_enrollment_accounts_isValid;
}

OAIEnrollment OAIBillingAccountProperties::getEnrollmentDetails() const {
    return m_enrollment_details;
}
void OAIBillingAccountProperties::setEnrollmentDetails(const OAIEnrollment &enrollment_details) {
    m_enrollment_details = enrollment_details;
    m_enrollment_details_isSet = true;
}

bool OAIBillingAccountProperties::is_enrollment_details_Set() const{
    return m_enrollment_details_isSet;
}

bool OAIBillingAccountProperties::is_enrollment_details_Valid() const{
    return m_enrollment_details_isValid;
}

QList<OAIInvoiceSection> OAIBillingAccountProperties::getInvoiceSections() const {
    return m_invoice_sections;
}
void OAIBillingAccountProperties::setInvoiceSections(const QList<OAIInvoiceSection> &invoice_sections) {
    m_invoice_sections = invoice_sections;
    m_invoice_sections_isSet = true;
}

bool OAIBillingAccountProperties::is_invoice_sections_Set() const{
    return m_invoice_sections_isSet;
}

bool OAIBillingAccountProperties::is_invoice_sections_Valid() const{
    return m_invoice_sections_isValid;
}

bool OAIBillingAccountProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_agreements_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_profiles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_departments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_enrollment_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_enrollment_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_sections.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillingAccountProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
