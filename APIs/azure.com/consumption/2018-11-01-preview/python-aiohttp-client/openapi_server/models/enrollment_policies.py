# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnrollmentPolicies(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_owner_view_charges: bool=None, department_admin_view_charges: bool=None, marketplaces_enabled: bool=None, reserved_instances_enabled: bool=None):
        """EnrollmentPolicies - a model defined in OpenAPI

        :param account_owner_view_charges: The account_owner_view_charges of this EnrollmentPolicies.
        :param department_admin_view_charges: The department_admin_view_charges of this EnrollmentPolicies.
        :param marketplaces_enabled: The marketplaces_enabled of this EnrollmentPolicies.
        :param reserved_instances_enabled: The reserved_instances_enabled of this EnrollmentPolicies.
        """
        self.openapi_types = {
            'account_owner_view_charges': bool,
            'department_admin_view_charges': bool,
            'marketplaces_enabled': bool,
            'reserved_instances_enabled': bool
        }

        self.attribute_map = {
            'account_owner_view_charges': 'accountOwnerViewCharges',
            'department_admin_view_charges': 'departmentAdminViewCharges',
            'marketplaces_enabled': 'marketplacesEnabled',
            'reserved_instances_enabled': 'reservedInstancesEnabled'
        }

        self._account_owner_view_charges = account_owner_view_charges
        self._department_admin_view_charges = department_admin_view_charges
        self._marketplaces_enabled = marketplaces_enabled
        self._reserved_instances_enabled = reserved_instances_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnrollmentPolicies':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnrollmentPolicies of this EnrollmentPolicies.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_owner_view_charges(self):
        """Gets the account_owner_view_charges of this EnrollmentPolicies.

        The accountOwnerViewCharges flag for Enrollment

        :return: The account_owner_view_charges of this EnrollmentPolicies.
        :rtype: bool
        """
        return self._account_owner_view_charges

    @account_owner_view_charges.setter
    def account_owner_view_charges(self, account_owner_view_charges):
        """Sets the account_owner_view_charges of this EnrollmentPolicies.

        The accountOwnerViewCharges flag for Enrollment

        :param account_owner_view_charges: The account_owner_view_charges of this EnrollmentPolicies.
        :type account_owner_view_charges: bool
        """

        self._account_owner_view_charges = account_owner_view_charges

    @property
    def department_admin_view_charges(self):
        """Gets the department_admin_view_charges of this EnrollmentPolicies.

        The departmentAdminViewCharges flag for Enrollment

        :return: The department_admin_view_charges of this EnrollmentPolicies.
        :rtype: bool
        """
        return self._department_admin_view_charges

    @department_admin_view_charges.setter
    def department_admin_view_charges(self, department_admin_view_charges):
        """Sets the department_admin_view_charges of this EnrollmentPolicies.

        The departmentAdminViewCharges flag for Enrollment

        :param department_admin_view_charges: The department_admin_view_charges of this EnrollmentPolicies.
        :type department_admin_view_charges: bool
        """

        self._department_admin_view_charges = department_admin_view_charges

    @property
    def marketplaces_enabled(self):
        """Gets the marketplaces_enabled of this EnrollmentPolicies.

        The marketplaces flag for Enrollment

        :return: The marketplaces_enabled of this EnrollmentPolicies.
        :rtype: bool
        """
        return self._marketplaces_enabled

    @marketplaces_enabled.setter
    def marketplaces_enabled(self, marketplaces_enabled):
        """Sets the marketplaces_enabled of this EnrollmentPolicies.

        The marketplaces flag for Enrollment

        :param marketplaces_enabled: The marketplaces_enabled of this EnrollmentPolicies.
        :type marketplaces_enabled: bool
        """

        self._marketplaces_enabled = marketplaces_enabled

    @property
    def reserved_instances_enabled(self):
        """Gets the reserved_instances_enabled of this EnrollmentPolicies.

        The reserved instances flag for Enrollment

        :return: The reserved_instances_enabled of this EnrollmentPolicies.
        :rtype: bool
        """
        return self._reserved_instances_enabled

    @reserved_instances_enabled.setter
    def reserved_instances_enabled(self, reserved_instances_enabled):
        """Sets the reserved_instances_enabled of this EnrollmentPolicies.

        The reserved instances flag for Enrollment

        :param reserved_instances_enabled: The reserved_instances_enabled of this EnrollmentPolicies.
        :type reserved_instances_enabled: bool
        """

        self._reserved_instances_enabled = reserved_instances_enabled
