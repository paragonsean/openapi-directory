# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amount import Amount
from openapi_server import util


class LotProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, closed_balance: Amount=None, expiration_date: datetime=None, original_amount: Amount=None, po_number: str=None, source: str=None, start_date: datetime=None):
        """LotProperties - a model defined in OpenAPI

        :param closed_balance: The closed_balance of this LotProperties.
        :param expiration_date: The expiration_date of this LotProperties.
        :param original_amount: The original_amount of this LotProperties.
        :param po_number: The po_number of this LotProperties.
        :param source: The source of this LotProperties.
        :param start_date: The start_date of this LotProperties.
        """
        self.openapi_types = {
            'closed_balance': Amount,
            'expiration_date': datetime,
            'original_amount': Amount,
            'po_number': str,
            'source': str,
            'start_date': datetime
        }

        self.attribute_map = {
            'closed_balance': 'closedBalance',
            'expiration_date': 'expirationDate',
            'original_amount': 'originalAmount',
            'po_number': 'poNumber',
            'source': 'source',
            'start_date': 'startDate'
        }

        self._closed_balance = closed_balance
        self._expiration_date = expiration_date
        self._original_amount = original_amount
        self._po_number = po_number
        self._source = source
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LotProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LotProperties of this LotProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def closed_balance(self):
        """Gets the closed_balance of this LotProperties.


        :return: The closed_balance of this LotProperties.
        :rtype: Amount
        """
        return self._closed_balance

    @closed_balance.setter
    def closed_balance(self, closed_balance):
        """Sets the closed_balance of this LotProperties.


        :param closed_balance: The closed_balance of this LotProperties.
        :type closed_balance: Amount
        """

        self._closed_balance = closed_balance

    @property
    def expiration_date(self):
        """Gets the expiration_date of this LotProperties.

        Expiration Date.

        :return: The expiration_date of this LotProperties.
        :rtype: datetime
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this LotProperties.

        Expiration Date.

        :param expiration_date: The expiration_date of this LotProperties.
        :type expiration_date: datetime
        """

        self._expiration_date = expiration_date

    @property
    def original_amount(self):
        """Gets the original_amount of this LotProperties.


        :return: The original_amount of this LotProperties.
        :rtype: Amount
        """
        return self._original_amount

    @original_amount.setter
    def original_amount(self, original_amount):
        """Sets the original_amount of this LotProperties.


        :param original_amount: The original_amount of this LotProperties.
        :type original_amount: Amount
        """

        self._original_amount = original_amount

    @property
    def po_number(self):
        """Gets the po_number of this LotProperties.

        PO Number.

        :return: The po_number of this LotProperties.
        :rtype: str
        """
        return self._po_number

    @po_number.setter
    def po_number(self, po_number):
        """Sets the po_number of this LotProperties.

        PO Number.

        :param po_number: The po_number of this LotProperties.
        :type po_number: str
        """

        self._po_number = po_number

    @property
    def source(self):
        """Gets the source of this LotProperties.

        Lot source.

        :return: The source of this LotProperties.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this LotProperties.

        Lot source.

        :param source: The source of this LotProperties.
        :type source: str
        """
        allowed_values = ["PurchasedCredit", "PromotionalCredit"]  # noqa: E501
        if source not in allowed_values:
            raise ValueError(
                "Invalid value for `source` ({0}), must be one of {1}"
                .format(source, allowed_values)
            )

        self._source = source

    @property
    def start_date(self):
        """Gets the start_date of this LotProperties.

        Start Date.

        :return: The start_date of this LotProperties.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this LotProperties.

        Start Date.

        :param start_date: The start_date of this LotProperties.
        :type start_date: datetime
        """

        self._start_date = start_date
