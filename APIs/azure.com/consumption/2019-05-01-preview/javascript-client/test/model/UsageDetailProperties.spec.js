/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ConsumptionManagementClient);
  }
}(this, function(expect, ConsumptionManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ConsumptionManagementClient.UsageDetailProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsageDetailProperties', function() {
    it('should create an instance of UsageDetailProperties', function() {
      // uncomment below and update the code to test UsageDetailProperties
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be.a(ConsumptionManagementClient.UsageDetailProperties);
    });

    it('should have the property accountName (base name: "accountName")', function() {
      // uncomment below and update the code to test the property accountName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property accountOwnerId (base name: "accountOwnerId")', function() {
      // uncomment below and update the code to test the property accountOwnerId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property additionalInfo (base name: "additionalInfo")', function() {
      // uncomment below and update the code to test the property additionalInfo
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingAccountId (base name: "billingAccountId")', function() {
      // uncomment below and update the code to test the property billingAccountId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingAccountName (base name: "billingAccountName")', function() {
      // uncomment below and update the code to test the property billingAccountName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingCurrency (base name: "billingCurrency")', function() {
      // uncomment below and update the code to test the property billingCurrency
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingPeriodEndDate (base name: "billingPeriodEndDate")', function() {
      // uncomment below and update the code to test the property billingPeriodEndDate
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingPeriodStartDate (base name: "billingPeriodStartDate")', function() {
      // uncomment below and update the code to test the property billingPeriodStartDate
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingProfileId (base name: "billingProfileId")', function() {
      // uncomment below and update the code to test the property billingProfileId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingProfileName (base name: "billingProfileName")', function() {
      // uncomment below and update the code to test the property billingProfileName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property chargeType (base name: "chargeType")', function() {
      // uncomment below and update the code to test the property chargeType
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property consumedService (base name: "consumedService")', function() {
      // uncomment below and update the code to test the property consumedService
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property cost (base name: "cost")', function() {
      // uncomment below and update the code to test the property cost
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property costCenter (base name: "costCenter")', function() {
      // uncomment below and update the code to test the property costCenter
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "date")', function() {
      // uncomment below and update the code to test the property date
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property effectivePrice (base name: "effectivePrice")', function() {
      // uncomment below and update the code to test the property effectivePrice
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property frequency (base name: "frequency")', function() {
      // uncomment below and update the code to test the property frequency
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property invoiceSection (base name: "invoiceSection")', function() {
      // uncomment below and update the code to test the property invoiceSection
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property isAzureCreditEligible (base name: "isAzureCreditEligible")', function() {
      // uncomment below and update the code to test the property isAzureCreditEligible
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property meterDetails (base name: "meterDetails")', function() {
      // uncomment below and update the code to test the property meterDetails
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property meterId (base name: "meterId")', function() {
      // uncomment below and update the code to test the property meterId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property offerId (base name: "offerId")', function() {
      // uncomment below and update the code to test the property offerId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property partNumber (base name: "partNumber")', function() {
      // uncomment below and update the code to test the property partNumber
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property planName (base name: "planName")', function() {
      // uncomment below and update the code to test the property planName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property product (base name: "product")', function() {
      // uncomment below and update the code to test the property product
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property productOrderId (base name: "productOrderId")', function() {
      // uncomment below and update the code to test the property productOrderId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property productOrderName (base name: "productOrderName")', function() {
      // uncomment below and update the code to test the property productOrderName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property publisherName (base name: "publisherName")', function() {
      // uncomment below and update the code to test the property publisherName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property publisherType (base name: "publisherType")', function() {
      // uncomment below and update the code to test the property publisherType
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property reservationId (base name: "reservationId")', function() {
      // uncomment below and update the code to test the property reservationId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property reservationName (base name: "reservationName")', function() {
      // uncomment below and update the code to test the property reservationName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property resourceGroup (base name: "resourceGroup")', function() {
      // uncomment below and update the code to test the property resourceGroup
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property resourceId (base name: "resourceId")', function() {
      // uncomment below and update the code to test the property resourceId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property resourceLocation (base name: "resourceLocation")', function() {
      // uncomment below and update the code to test the property resourceLocation
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property resourceName (base name: "resourceName")', function() {
      // uncomment below and update the code to test the property resourceName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceInfo1 (base name: "serviceInfo1")', function() {
      // uncomment below and update the code to test the property serviceInfo1
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceInfo2 (base name: "serviceInfo2")', function() {
      // uncomment below and update the code to test the property serviceInfo2
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionId (base name: "subscriptionId")', function() {
      // uncomment below and update the code to test the property subscriptionId
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionName (base name: "subscriptionName")', function() {
      // uncomment below and update the code to test the property subscriptionName
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property term (base name: "term")', function() {
      // uncomment below and update the code to test the property term
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property unitPrice (base name: "unitPrice")', function() {
      // uncomment below and update the code to test the property unitPrice
      //var instance = new ConsumptionManagementClient.UsageDetailProperties();
      //expect(instance).to.be();
    });

  });

}));
