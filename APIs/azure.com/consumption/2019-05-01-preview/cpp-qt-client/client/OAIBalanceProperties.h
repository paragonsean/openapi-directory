/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBalanceProperties.h
 *
 * The properties of the balance.
 */

#ifndef OAIBalanceProperties_H
#define OAIBalanceProperties_H

#include <QJsonObject>

#include "OAIBalanceProperties_adjustmentDetails_inner.h"
#include "OAIBalanceProperties_newPurchasesDetails_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBalanceProperties_adjustmentDetails_inner;
class OAIBalanceProperties_newPurchasesDetails_inner;

class OAIBalanceProperties : public OAIObject {
public:
    OAIBalanceProperties();
    OAIBalanceProperties(QString json);
    ~OAIBalanceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBalanceProperties_adjustmentDetails_inner> getAdjustmentDetails() const;
    void setAdjustmentDetails(const QList<OAIBalanceProperties_adjustmentDetails_inner> &adjustment_details);
    bool is_adjustment_details_Set() const;
    bool is_adjustment_details_Valid() const;

    double getAdjustments() const;
    void setAdjustments(const double &adjustments);
    bool is_adjustments_Set() const;
    bool is_adjustments_Valid() const;

    double getAzureMarketplaceServiceCharges() const;
    void setAzureMarketplaceServiceCharges(const double &azure_marketplace_service_charges);
    bool is_azure_marketplace_service_charges_Set() const;
    bool is_azure_marketplace_service_charges_Valid() const;

    double getBeginningBalance() const;
    void setBeginningBalance(const double &beginning_balance);
    bool is_beginning_balance_Set() const;
    bool is_beginning_balance_Valid() const;

    QString getBillingFrequency() const;
    void setBillingFrequency(const QString &billing_frequency);
    bool is_billing_frequency_Set() const;
    bool is_billing_frequency_Valid() const;

    double getChargesBilledSeparately() const;
    void setChargesBilledSeparately(const double &charges_billed_separately);
    bool is_charges_billed_separately_Set() const;
    bool is_charges_billed_separately_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    double getEndingBalance() const;
    void setEndingBalance(const double &ending_balance);
    bool is_ending_balance_Set() const;
    bool is_ending_balance_Valid() const;

    double getNewPurchases() const;
    void setNewPurchases(const double &new_purchases);
    bool is_new_purchases_Set() const;
    bool is_new_purchases_Valid() const;

    QList<OAIBalanceProperties_newPurchasesDetails_inner> getNewPurchasesDetails() const;
    void setNewPurchasesDetails(const QList<OAIBalanceProperties_newPurchasesDetails_inner> &new_purchases_details);
    bool is_new_purchases_details_Set() const;
    bool is_new_purchases_details_Valid() const;

    bool isPriceHidden() const;
    void setPriceHidden(const bool &price_hidden);
    bool is_price_hidden_Set() const;
    bool is_price_hidden_Valid() const;

    double getServiceOverage() const;
    void setServiceOverage(const double &service_overage);
    bool is_service_overage_Set() const;
    bool is_service_overage_Valid() const;

    double getTotalOverage() const;
    void setTotalOverage(const double &total_overage);
    bool is_total_overage_Set() const;
    bool is_total_overage_Valid() const;

    double getTotalUsage() const;
    void setTotalUsage(const double &total_usage);
    bool is_total_usage_Set() const;
    bool is_total_usage_Valid() const;

    double getUtilized() const;
    void setUtilized(const double &utilized);
    bool is_utilized_Set() const;
    bool is_utilized_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBalanceProperties_adjustmentDetails_inner> m_adjustment_details;
    bool m_adjustment_details_isSet;
    bool m_adjustment_details_isValid;

    double m_adjustments;
    bool m_adjustments_isSet;
    bool m_adjustments_isValid;

    double m_azure_marketplace_service_charges;
    bool m_azure_marketplace_service_charges_isSet;
    bool m_azure_marketplace_service_charges_isValid;

    double m_beginning_balance;
    bool m_beginning_balance_isSet;
    bool m_beginning_balance_isValid;

    QString m_billing_frequency;
    bool m_billing_frequency_isSet;
    bool m_billing_frequency_isValid;

    double m_charges_billed_separately;
    bool m_charges_billed_separately_isSet;
    bool m_charges_billed_separately_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    double m_ending_balance;
    bool m_ending_balance_isSet;
    bool m_ending_balance_isValid;

    double m_new_purchases;
    bool m_new_purchases_isSet;
    bool m_new_purchases_isValid;

    QList<OAIBalanceProperties_newPurchasesDetails_inner> m_new_purchases_details;
    bool m_new_purchases_details_isSet;
    bool m_new_purchases_details_isValid;

    bool m_price_hidden;
    bool m_price_hidden_isSet;
    bool m_price_hidden_isValid;

    double m_service_overage;
    bool m_service_overage_isSet;
    bool m_service_overage_isValid;

    double m_total_overage;
    bool m_total_overage_isSet;
    bool m_total_overage_isValid;

    double m_total_usage;
    bool m_total_usage_isSet;
    bool m_total_usage_isValid;

    double m_utilized;
    bool m_utilized_isSet;
    bool m_utilized_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBalanceProperties)

#endif // OAIBalanceProperties_H
