/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPriceSheetProperties.h
 *
 * The properties of the price sheet.
 */

#ifndef OAIPriceSheetProperties_H
#define OAIPriceSheetProperties_H

#include <QJsonObject>

#include "OAIMeterDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMeterDetails;

class OAIPriceSheetProperties : public OAIObject {
public:
    OAIPriceSheetProperties();
    OAIPriceSheetProperties(QString json);
    ~OAIPriceSheetProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBillingPeriodId() const;
    void setBillingPeriodId(const QString &billing_period_id);
    bool is_billing_period_id_Set() const;
    bool is_billing_period_id_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    double getIncludedQuantity() const;
    void setIncludedQuantity(const double &included_quantity);
    bool is_included_quantity_Set() const;
    bool is_included_quantity_Valid() const;

    OAIMeterDetails getMeterDetails() const;
    void setMeterDetails(const OAIMeterDetails &meter_details);
    bool is_meter_details_Set() const;
    bool is_meter_details_Valid() const;

    QString getMeterId() const;
    void setMeterId(const QString &meter_id);
    bool is_meter_id_Set() const;
    bool is_meter_id_Valid() const;

    QString getOfferId() const;
    void setOfferId(const QString &offer_id);
    bool is_offer_id_Set() const;
    bool is_offer_id_Valid() const;

    QString getPartNumber() const;
    void setPartNumber(const QString &part_number);
    bool is_part_number_Set() const;
    bool is_part_number_Valid() const;

    QString getUnitOfMeasure() const;
    void setUnitOfMeasure(const QString &unit_of_measure);
    bool is_unit_of_measure_Set() const;
    bool is_unit_of_measure_Valid() const;

    double getUnitPrice() const;
    void setUnitPrice(const double &unit_price);
    bool is_unit_price_Set() const;
    bool is_unit_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_billing_period_id;
    bool m_billing_period_id_isSet;
    bool m_billing_period_id_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    double m_included_quantity;
    bool m_included_quantity_isSet;
    bool m_included_quantity_isValid;

    OAIMeterDetails m_meter_details;
    bool m_meter_details_isSet;
    bool m_meter_details_isValid;

    QString m_meter_id;
    bool m_meter_id_isSet;
    bool m_meter_id_isValid;

    QString m_offer_id;
    bool m_offer_id_isSet;
    bool m_offer_id_isValid;

    QString m_part_number;
    bool m_part_number_isSet;
    bool m_part_number_isValid;

    QString m_unit_of_measure;
    bool m_unit_of_measure_isSet;
    bool m_unit_of_measure_isValid;

    double m_unit_price;
    bool m_unit_price_isSet;
    bool m_unit_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPriceSheetProperties)

#endif // OAIPriceSheetProperties_H
