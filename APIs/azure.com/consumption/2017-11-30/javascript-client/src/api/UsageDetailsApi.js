/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2017-11-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import UsageDetailsListResult from '../model/UsageDetailsListResult';

/**
* UsageDetails service.
* @module api/UsageDetailsApi
* @version 2017-11-30
*/
export default class UsageDetailsApi {

    /**
    * Constructs a new UsageDetailsApi. 
    * @alias module:api/UsageDetailsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the usageDetailsList operation.
     * @callback module:api/UsageDetailsApi~usageDetailsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UsageDetailsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     * @param {String} scope The scope of the usage details. The scope can be '/subscriptions/{subscriptionId}' for a subscription, or '/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}' for a billing period.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2017-11-30.
     * @param {Object} opts Optional parameters
     * @param {String} [expand] May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.
     * @param {String} [filter] May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param {String} [skiptoken] Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param {Number} [top] May be used to limit the number of results to the most recent N usageDetails.
     * @param {module:api/UsageDetailsApi~usageDetailsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UsageDetailsListResult}
     */
    usageDetailsList(scope, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling usageDetailsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling usageDetailsList");
      }

      let pathParams = {
        'scope': scope
      };
      let queryParams = {
        '$expand': opts['expand'],
        '$filter': opts['filter'],
        '$skiptoken': opts['skiptoken'],
        '$top': opts['top'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UsageDetailsListResult;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.Consumption/usageDetails', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
