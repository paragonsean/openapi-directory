# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModernUsageDetailProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_info: str=None, billing_account_id: str=None, billing_account_name: str=None, billing_currency_code: str=None, billing_period_end_date: datetime=None, billing_period_start_date: datetime=None, billing_profile_id: str=None, billing_profile_name: str=None, charge_type: str=None, consumed_service: str=None, cost_center: str=None, cost_in_billing_currency: float=None, cost_in_pricing_currency: float=None, cost_in_usd: float=None, customer_name: str=None, customer_tenant_id: str=None, _date: datetime=None, exchange_rate: str=None, exchange_rate_date: datetime=None, exchange_rate_pricing_to_billing: float=None, frequency: str=None, instance_name: str=None, invoice_id: str=None, invoice_section_id: str=None, invoice_section_name: str=None, is_azure_credit_eligible: bool=None, market_price: float=None, meter_category: str=None, meter_id: str=None, meter_name: str=None, meter_region: str=None, meter_sub_category: str=None, partner_earned_credit_applied: str=None, partner_earned_credit_rate: float=None, partner_name: str=None, partner_tenant_id: str=None, payg_cost_in_billing_currency: float=None, payg_cost_in_usd: float=None, previous_invoice_id: str=None, pricing_currency_code: str=None, product: str=None, product_identifier: str=None, product_order_id: str=None, product_order_name: str=None, publisher_id: str=None, publisher_name: str=None, publisher_type: str=None, quantity: float=None, reseller_mpn_id: str=None, reseller_name: str=None, reservation_id: str=None, reservation_name: str=None, resource_group: str=None, resource_location: str=None, resource_location_normalized: str=None, service_family: str=None, service_info1: str=None, service_info2: str=None, service_period_end_date: datetime=None, service_period_start_date: datetime=None, subscription_guid: str=None, subscription_name: str=None, term: str=None, unit_of_measure: str=None, unit_price: float=None):
        """ModernUsageDetailProperties - a model defined in OpenAPI

        :param additional_info: The additional_info of this ModernUsageDetailProperties.
        :param billing_account_id: The billing_account_id of this ModernUsageDetailProperties.
        :param billing_account_name: The billing_account_name of this ModernUsageDetailProperties.
        :param billing_currency_code: The billing_currency_code of this ModernUsageDetailProperties.
        :param billing_period_end_date: The billing_period_end_date of this ModernUsageDetailProperties.
        :param billing_period_start_date: The billing_period_start_date of this ModernUsageDetailProperties.
        :param billing_profile_id: The billing_profile_id of this ModernUsageDetailProperties.
        :param billing_profile_name: The billing_profile_name of this ModernUsageDetailProperties.
        :param charge_type: The charge_type of this ModernUsageDetailProperties.
        :param consumed_service: The consumed_service of this ModernUsageDetailProperties.
        :param cost_center: The cost_center of this ModernUsageDetailProperties.
        :param cost_in_billing_currency: The cost_in_billing_currency of this ModernUsageDetailProperties.
        :param cost_in_pricing_currency: The cost_in_pricing_currency of this ModernUsageDetailProperties.
        :param cost_in_usd: The cost_in_usd of this ModernUsageDetailProperties.
        :param customer_name: The customer_name of this ModernUsageDetailProperties.
        :param customer_tenant_id: The customer_tenant_id of this ModernUsageDetailProperties.
        :param _date: The _date of this ModernUsageDetailProperties.
        :param exchange_rate: The exchange_rate of this ModernUsageDetailProperties.
        :param exchange_rate_date: The exchange_rate_date of this ModernUsageDetailProperties.
        :param exchange_rate_pricing_to_billing: The exchange_rate_pricing_to_billing of this ModernUsageDetailProperties.
        :param frequency: The frequency of this ModernUsageDetailProperties.
        :param instance_name: The instance_name of this ModernUsageDetailProperties.
        :param invoice_id: The invoice_id of this ModernUsageDetailProperties.
        :param invoice_section_id: The invoice_section_id of this ModernUsageDetailProperties.
        :param invoice_section_name: The invoice_section_name of this ModernUsageDetailProperties.
        :param is_azure_credit_eligible: The is_azure_credit_eligible of this ModernUsageDetailProperties.
        :param market_price: The market_price of this ModernUsageDetailProperties.
        :param meter_category: The meter_category of this ModernUsageDetailProperties.
        :param meter_id: The meter_id of this ModernUsageDetailProperties.
        :param meter_name: The meter_name of this ModernUsageDetailProperties.
        :param meter_region: The meter_region of this ModernUsageDetailProperties.
        :param meter_sub_category: The meter_sub_category of this ModernUsageDetailProperties.
        :param partner_earned_credit_applied: The partner_earned_credit_applied of this ModernUsageDetailProperties.
        :param partner_earned_credit_rate: The partner_earned_credit_rate of this ModernUsageDetailProperties.
        :param partner_name: The partner_name of this ModernUsageDetailProperties.
        :param partner_tenant_id: The partner_tenant_id of this ModernUsageDetailProperties.
        :param payg_cost_in_billing_currency: The payg_cost_in_billing_currency of this ModernUsageDetailProperties.
        :param payg_cost_in_usd: The payg_cost_in_usd of this ModernUsageDetailProperties.
        :param previous_invoice_id: The previous_invoice_id of this ModernUsageDetailProperties.
        :param pricing_currency_code: The pricing_currency_code of this ModernUsageDetailProperties.
        :param product: The product of this ModernUsageDetailProperties.
        :param product_identifier: The product_identifier of this ModernUsageDetailProperties.
        :param product_order_id: The product_order_id of this ModernUsageDetailProperties.
        :param product_order_name: The product_order_name of this ModernUsageDetailProperties.
        :param publisher_id: The publisher_id of this ModernUsageDetailProperties.
        :param publisher_name: The publisher_name of this ModernUsageDetailProperties.
        :param publisher_type: The publisher_type of this ModernUsageDetailProperties.
        :param quantity: The quantity of this ModernUsageDetailProperties.
        :param reseller_mpn_id: The reseller_mpn_id of this ModernUsageDetailProperties.
        :param reseller_name: The reseller_name of this ModernUsageDetailProperties.
        :param reservation_id: The reservation_id of this ModernUsageDetailProperties.
        :param reservation_name: The reservation_name of this ModernUsageDetailProperties.
        :param resource_group: The resource_group of this ModernUsageDetailProperties.
        :param resource_location: The resource_location of this ModernUsageDetailProperties.
        :param resource_location_normalized: The resource_location_normalized of this ModernUsageDetailProperties.
        :param service_family: The service_family of this ModernUsageDetailProperties.
        :param service_info1: The service_info1 of this ModernUsageDetailProperties.
        :param service_info2: The service_info2 of this ModernUsageDetailProperties.
        :param service_period_end_date: The service_period_end_date of this ModernUsageDetailProperties.
        :param service_period_start_date: The service_period_start_date of this ModernUsageDetailProperties.
        :param subscription_guid: The subscription_guid of this ModernUsageDetailProperties.
        :param subscription_name: The subscription_name of this ModernUsageDetailProperties.
        :param term: The term of this ModernUsageDetailProperties.
        :param unit_of_measure: The unit_of_measure of this ModernUsageDetailProperties.
        :param unit_price: The unit_price of this ModernUsageDetailProperties.
        """
        self.openapi_types = {
            'additional_info': str,
            'billing_account_id': str,
            'billing_account_name': str,
            'billing_currency_code': str,
            'billing_period_end_date': datetime,
            'billing_period_start_date': datetime,
            'billing_profile_id': str,
            'billing_profile_name': str,
            'charge_type': str,
            'consumed_service': str,
            'cost_center': str,
            'cost_in_billing_currency': float,
            'cost_in_pricing_currency': float,
            'cost_in_usd': float,
            'customer_name': str,
            'customer_tenant_id': str,
            '_date': datetime,
            'exchange_rate': str,
            'exchange_rate_date': datetime,
            'exchange_rate_pricing_to_billing': float,
            'frequency': str,
            'instance_name': str,
            'invoice_id': str,
            'invoice_section_id': str,
            'invoice_section_name': str,
            'is_azure_credit_eligible': bool,
            'market_price': float,
            'meter_category': str,
            'meter_id': str,
            'meter_name': str,
            'meter_region': str,
            'meter_sub_category': str,
            'partner_earned_credit_applied': str,
            'partner_earned_credit_rate': float,
            'partner_name': str,
            'partner_tenant_id': str,
            'payg_cost_in_billing_currency': float,
            'payg_cost_in_usd': float,
            'previous_invoice_id': str,
            'pricing_currency_code': str,
            'product': str,
            'product_identifier': str,
            'product_order_id': str,
            'product_order_name': str,
            'publisher_id': str,
            'publisher_name': str,
            'publisher_type': str,
            'quantity': float,
            'reseller_mpn_id': str,
            'reseller_name': str,
            'reservation_id': str,
            'reservation_name': str,
            'resource_group': str,
            'resource_location': str,
            'resource_location_normalized': str,
            'service_family': str,
            'service_info1': str,
            'service_info2': str,
            'service_period_end_date': datetime,
            'service_period_start_date': datetime,
            'subscription_guid': str,
            'subscription_name': str,
            'term': str,
            'unit_of_measure': str,
            'unit_price': float
        }

        self.attribute_map = {
            'additional_info': 'additionalInfo',
            'billing_account_id': 'billingAccountId',
            'billing_account_name': 'billingAccountName',
            'billing_currency_code': 'billingCurrencyCode',
            'billing_period_end_date': 'billingPeriodEndDate',
            'billing_period_start_date': 'billingPeriodStartDate',
            'billing_profile_id': 'billingProfileId',
            'billing_profile_name': 'billingProfileName',
            'charge_type': 'chargeType',
            'consumed_service': 'consumedService',
            'cost_center': 'costCenter',
            'cost_in_billing_currency': 'costInBillingCurrency',
            'cost_in_pricing_currency': 'costInPricingCurrency',
            'cost_in_usd': 'costInUSD',
            'customer_name': 'customerName',
            'customer_tenant_id': 'customerTenantId',
            '_date': 'date',
            'exchange_rate': 'exchangeRate',
            'exchange_rate_date': 'exchangeRateDate',
            'exchange_rate_pricing_to_billing': 'exchangeRatePricingToBilling',
            'frequency': 'frequency',
            'instance_name': 'instanceName',
            'invoice_id': 'invoiceId',
            'invoice_section_id': 'invoiceSectionId',
            'invoice_section_name': 'invoiceSectionName',
            'is_azure_credit_eligible': 'isAzureCreditEligible',
            'market_price': 'marketPrice',
            'meter_category': 'meterCategory',
            'meter_id': 'meterId',
            'meter_name': 'meterName',
            'meter_region': 'meterRegion',
            'meter_sub_category': 'meterSubCategory',
            'partner_earned_credit_applied': 'partnerEarnedCreditApplied',
            'partner_earned_credit_rate': 'partnerEarnedCreditRate',
            'partner_name': 'partnerName',
            'partner_tenant_id': 'partnerTenantId',
            'payg_cost_in_billing_currency': 'paygCostInBillingCurrency',
            'payg_cost_in_usd': 'paygCostInUSD',
            'previous_invoice_id': 'previousInvoiceId',
            'pricing_currency_code': 'pricingCurrencyCode',
            'product': 'product',
            'product_identifier': 'productIdentifier',
            'product_order_id': 'productOrderId',
            'product_order_name': 'productOrderName',
            'publisher_id': 'publisherId',
            'publisher_name': 'publisherName',
            'publisher_type': 'publisherType',
            'quantity': 'quantity',
            'reseller_mpn_id': 'resellerMpnId',
            'reseller_name': 'resellerName',
            'reservation_id': 'reservationId',
            'reservation_name': 'reservationName',
            'resource_group': 'resourceGroup',
            'resource_location': 'resourceLocation',
            'resource_location_normalized': 'resourceLocationNormalized',
            'service_family': 'serviceFamily',
            'service_info1': 'serviceInfo1',
            'service_info2': 'serviceInfo2',
            'service_period_end_date': 'servicePeriodEndDate',
            'service_period_start_date': 'servicePeriodStartDate',
            'subscription_guid': 'subscriptionGuid',
            'subscription_name': 'subscriptionName',
            'term': 'term',
            'unit_of_measure': 'unitOfMeasure',
            'unit_price': 'unitPrice'
        }

        self._additional_info = additional_info
        self._billing_account_id = billing_account_id
        self._billing_account_name = billing_account_name
        self._billing_currency_code = billing_currency_code
        self._billing_period_end_date = billing_period_end_date
        self._billing_period_start_date = billing_period_start_date
        self._billing_profile_id = billing_profile_id
        self._billing_profile_name = billing_profile_name
        self._charge_type = charge_type
        self._consumed_service = consumed_service
        self._cost_center = cost_center
        self._cost_in_billing_currency = cost_in_billing_currency
        self._cost_in_pricing_currency = cost_in_pricing_currency
        self._cost_in_usd = cost_in_usd
        self._customer_name = customer_name
        self._customer_tenant_id = customer_tenant_id
        self.__date = _date
        self._exchange_rate = exchange_rate
        self._exchange_rate_date = exchange_rate_date
        self._exchange_rate_pricing_to_billing = exchange_rate_pricing_to_billing
        self._frequency = frequency
        self._instance_name = instance_name
        self._invoice_id = invoice_id
        self._invoice_section_id = invoice_section_id
        self._invoice_section_name = invoice_section_name
        self._is_azure_credit_eligible = is_azure_credit_eligible
        self._market_price = market_price
        self._meter_category = meter_category
        self._meter_id = meter_id
        self._meter_name = meter_name
        self._meter_region = meter_region
        self._meter_sub_category = meter_sub_category
        self._partner_earned_credit_applied = partner_earned_credit_applied
        self._partner_earned_credit_rate = partner_earned_credit_rate
        self._partner_name = partner_name
        self._partner_tenant_id = partner_tenant_id
        self._payg_cost_in_billing_currency = payg_cost_in_billing_currency
        self._payg_cost_in_usd = payg_cost_in_usd
        self._previous_invoice_id = previous_invoice_id
        self._pricing_currency_code = pricing_currency_code
        self._product = product
        self._product_identifier = product_identifier
        self._product_order_id = product_order_id
        self._product_order_name = product_order_name
        self._publisher_id = publisher_id
        self._publisher_name = publisher_name
        self._publisher_type = publisher_type
        self._quantity = quantity
        self._reseller_mpn_id = reseller_mpn_id
        self._reseller_name = reseller_name
        self._reservation_id = reservation_id
        self._reservation_name = reservation_name
        self._resource_group = resource_group
        self._resource_location = resource_location
        self._resource_location_normalized = resource_location_normalized
        self._service_family = service_family
        self._service_info1 = service_info1
        self._service_info2 = service_info2
        self._service_period_end_date = service_period_end_date
        self._service_period_start_date = service_period_start_date
        self._subscription_guid = subscription_guid
        self._subscription_name = subscription_name
        self._term = term
        self._unit_of_measure = unit_of_measure
        self._unit_price = unit_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModernUsageDetailProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModernUsageDetailProperties of this ModernUsageDetailProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_info(self):
        """Gets the additional_info of this ModernUsageDetailProperties.

        Additional details of this usage item. Use this field to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation discount is applied.

        :return: The additional_info of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info):
        """Sets the additional_info of this ModernUsageDetailProperties.

        Additional details of this usage item. Use this field to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation discount is applied.

        :param additional_info: The additional_info of this ModernUsageDetailProperties.
        :type additional_info: str
        """

        self._additional_info = additional_info

    @property
    def billing_account_id(self):
        """Gets the billing_account_id of this ModernUsageDetailProperties.

        Billing Account identifier.

        :return: The billing_account_id of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._billing_account_id

    @billing_account_id.setter
    def billing_account_id(self, billing_account_id):
        """Sets the billing_account_id of this ModernUsageDetailProperties.

        Billing Account identifier.

        :param billing_account_id: The billing_account_id of this ModernUsageDetailProperties.
        :type billing_account_id: str
        """

        self._billing_account_id = billing_account_id

    @property
    def billing_account_name(self):
        """Gets the billing_account_name of this ModernUsageDetailProperties.

        Name of the Billing Account.

        :return: The billing_account_name of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._billing_account_name

    @billing_account_name.setter
    def billing_account_name(self, billing_account_name):
        """Sets the billing_account_name of this ModernUsageDetailProperties.

        Name of the Billing Account.

        :param billing_account_name: The billing_account_name of this ModernUsageDetailProperties.
        :type billing_account_name: str
        """

        self._billing_account_name = billing_account_name

    @property
    def billing_currency_code(self):
        """Gets the billing_currency_code of this ModernUsageDetailProperties.

        The currency defining the billed cost.

        :return: The billing_currency_code of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._billing_currency_code

    @billing_currency_code.setter
    def billing_currency_code(self, billing_currency_code):
        """Sets the billing_currency_code of this ModernUsageDetailProperties.

        The currency defining the billed cost.

        :param billing_currency_code: The billing_currency_code of this ModernUsageDetailProperties.
        :type billing_currency_code: str
        """

        self._billing_currency_code = billing_currency_code

    @property
    def billing_period_end_date(self):
        """Gets the billing_period_end_date of this ModernUsageDetailProperties.

        Billing Period End Date as in the invoice.

        :return: The billing_period_end_date of this ModernUsageDetailProperties.
        :rtype: datetime
        """
        return self._billing_period_end_date

    @billing_period_end_date.setter
    def billing_period_end_date(self, billing_period_end_date):
        """Sets the billing_period_end_date of this ModernUsageDetailProperties.

        Billing Period End Date as in the invoice.

        :param billing_period_end_date: The billing_period_end_date of this ModernUsageDetailProperties.
        :type billing_period_end_date: datetime
        """

        self._billing_period_end_date = billing_period_end_date

    @property
    def billing_period_start_date(self):
        """Gets the billing_period_start_date of this ModernUsageDetailProperties.

        Billing Period Start Date as in the invoice.

        :return: The billing_period_start_date of this ModernUsageDetailProperties.
        :rtype: datetime
        """
        return self._billing_period_start_date

    @billing_period_start_date.setter
    def billing_period_start_date(self, billing_period_start_date):
        """Sets the billing_period_start_date of this ModernUsageDetailProperties.

        Billing Period Start Date as in the invoice.

        :param billing_period_start_date: The billing_period_start_date of this ModernUsageDetailProperties.
        :type billing_period_start_date: datetime
        """

        self._billing_period_start_date = billing_period_start_date

    @property
    def billing_profile_id(self):
        """Gets the billing_profile_id of this ModernUsageDetailProperties.

        Identifier for the billing profile that groups costs across invoices in the a singular billing currency across across the customers who have onboarded the Microsoft customer agreement and the customers in CSP who have made entitlement purchases like SaaS, Marketplace, RI, etc.

        :return: The billing_profile_id of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._billing_profile_id

    @billing_profile_id.setter
    def billing_profile_id(self, billing_profile_id):
        """Sets the billing_profile_id of this ModernUsageDetailProperties.

        Identifier for the billing profile that groups costs across invoices in the a singular billing currency across across the customers who have onboarded the Microsoft customer agreement and the customers in CSP who have made entitlement purchases like SaaS, Marketplace, RI, etc.

        :param billing_profile_id: The billing_profile_id of this ModernUsageDetailProperties.
        :type billing_profile_id: str
        """

        self._billing_profile_id = billing_profile_id

    @property
    def billing_profile_name(self):
        """Gets the billing_profile_name of this ModernUsageDetailProperties.

        Name of the billing profile that groups costs across invoices in the a singular billing currency across across the customers who have onboarded the Microsoft customer agreement and the customers in CSP who have made entitlement purchases like SaaS, Marketplace, RI, etc.

        :return: The billing_profile_name of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._billing_profile_name

    @billing_profile_name.setter
    def billing_profile_name(self, billing_profile_name):
        """Sets the billing_profile_name of this ModernUsageDetailProperties.

        Name of the billing profile that groups costs across invoices in the a singular billing currency across across the customers who have onboarded the Microsoft customer agreement and the customers in CSP who have made entitlement purchases like SaaS, Marketplace, RI, etc.

        :param billing_profile_name: The billing_profile_name of this ModernUsageDetailProperties.
        :type billing_profile_name: str
        """

        self._billing_profile_name = billing_profile_name

    @property
    def charge_type(self):
        """Gets the charge_type of this ModernUsageDetailProperties.

        Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.

        :return: The charge_type of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._charge_type

    @charge_type.setter
    def charge_type(self, charge_type):
        """Sets the charge_type of this ModernUsageDetailProperties.

        Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.

        :param charge_type: The charge_type of this ModernUsageDetailProperties.
        :type charge_type: str
        """

        self._charge_type = charge_type

    @property
    def consumed_service(self):
        """Gets the consumed_service of this ModernUsageDetailProperties.

        Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided for marketplace usage.

        :return: The consumed_service of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._consumed_service

    @consumed_service.setter
    def consumed_service(self, consumed_service):
        """Sets the consumed_service of this ModernUsageDetailProperties.

        Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided for marketplace usage.

        :param consumed_service: The consumed_service of this ModernUsageDetailProperties.
        :type consumed_service: str
        """

        self._consumed_service = consumed_service

    @property
    def cost_center(self):
        """Gets the cost_center of this ModernUsageDetailProperties.

        The cost center of this department if it is a department and a cost center is provided.

        :return: The cost_center of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._cost_center

    @cost_center.setter
    def cost_center(self, cost_center):
        """Sets the cost_center of this ModernUsageDetailProperties.

        The cost center of this department if it is a department and a cost center is provided.

        :param cost_center: The cost_center of this ModernUsageDetailProperties.
        :type cost_center: str
        """

        self._cost_center = cost_center

    @property
    def cost_in_billing_currency(self):
        """Gets the cost_in_billing_currency of this ModernUsageDetailProperties.

        ExtendedCost or blended cost before tax in billed currency.

        :return: The cost_in_billing_currency of this ModernUsageDetailProperties.
        :rtype: float
        """
        return self._cost_in_billing_currency

    @cost_in_billing_currency.setter
    def cost_in_billing_currency(self, cost_in_billing_currency):
        """Sets the cost_in_billing_currency of this ModernUsageDetailProperties.

        ExtendedCost or blended cost before tax in billed currency.

        :param cost_in_billing_currency: The cost_in_billing_currency of this ModernUsageDetailProperties.
        :type cost_in_billing_currency: float
        """

        self._cost_in_billing_currency = cost_in_billing_currency

    @property
    def cost_in_pricing_currency(self):
        """Gets the cost_in_pricing_currency of this ModernUsageDetailProperties.

        ExtendedCost or blended cost before tax in pricing currency to correlate with prices.

        :return: The cost_in_pricing_currency of this ModernUsageDetailProperties.
        :rtype: float
        """
        return self._cost_in_pricing_currency

    @cost_in_pricing_currency.setter
    def cost_in_pricing_currency(self, cost_in_pricing_currency):
        """Sets the cost_in_pricing_currency of this ModernUsageDetailProperties.

        ExtendedCost or blended cost before tax in pricing currency to correlate with prices.

        :param cost_in_pricing_currency: The cost_in_pricing_currency of this ModernUsageDetailProperties.
        :type cost_in_pricing_currency: float
        """

        self._cost_in_pricing_currency = cost_in_pricing_currency

    @property
    def cost_in_usd(self):
        """Gets the cost_in_usd of this ModernUsageDetailProperties.

        Estimated extendedCost or blended cost before tax in USD.

        :return: The cost_in_usd of this ModernUsageDetailProperties.
        :rtype: float
        """
        return self._cost_in_usd

    @cost_in_usd.setter
    def cost_in_usd(self, cost_in_usd):
        """Sets the cost_in_usd of this ModernUsageDetailProperties.

        Estimated extendedCost or blended cost before tax in USD.

        :param cost_in_usd: The cost_in_usd of this ModernUsageDetailProperties.
        :type cost_in_usd: float
        """

        self._cost_in_usd = cost_in_usd

    @property
    def customer_name(self):
        """Gets the customer_name of this ModernUsageDetailProperties.

        Name of the customer's AAD tenant.

        :return: The customer_name of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._customer_name

    @customer_name.setter
    def customer_name(self, customer_name):
        """Sets the customer_name of this ModernUsageDetailProperties.

        Name of the customer's AAD tenant.

        :param customer_name: The customer_name of this ModernUsageDetailProperties.
        :type customer_name: str
        """

        self._customer_name = customer_name

    @property
    def customer_tenant_id(self):
        """Gets the customer_tenant_id of this ModernUsageDetailProperties.

        Identifier of the customer's AAD tenant.

        :return: The customer_tenant_id of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._customer_tenant_id

    @customer_tenant_id.setter
    def customer_tenant_id(self, customer_tenant_id):
        """Sets the customer_tenant_id of this ModernUsageDetailProperties.

        Identifier of the customer's AAD tenant.

        :param customer_tenant_id: The customer_tenant_id of this ModernUsageDetailProperties.
        :type customer_tenant_id: str
        """

        self._customer_tenant_id = customer_tenant_id

    @property
    def _date(self):
        """Gets the _date of this ModernUsageDetailProperties.

        Date for the usage record.

        :return: The _date of this ModernUsageDetailProperties.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this ModernUsageDetailProperties.

        Date for the usage record.

        :param _date: The _date of this ModernUsageDetailProperties.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def exchange_rate(self):
        """Gets the exchange_rate of this ModernUsageDetailProperties.

        Exchange rate used in conversion from pricing currency to billing currency.

        :return: The exchange_rate of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._exchange_rate

    @exchange_rate.setter
    def exchange_rate(self, exchange_rate):
        """Sets the exchange_rate of this ModernUsageDetailProperties.

        Exchange rate used in conversion from pricing currency to billing currency.

        :param exchange_rate: The exchange_rate of this ModernUsageDetailProperties.
        :type exchange_rate: str
        """

        self._exchange_rate = exchange_rate

    @property
    def exchange_rate_date(self):
        """Gets the exchange_rate_date of this ModernUsageDetailProperties.

        Date on which exchange rate used in conversion from pricing currency to billing currency.

        :return: The exchange_rate_date of this ModernUsageDetailProperties.
        :rtype: datetime
        """
        return self._exchange_rate_date

    @exchange_rate_date.setter
    def exchange_rate_date(self, exchange_rate_date):
        """Sets the exchange_rate_date of this ModernUsageDetailProperties.

        Date on which exchange rate used in conversion from pricing currency to billing currency.

        :param exchange_rate_date: The exchange_rate_date of this ModernUsageDetailProperties.
        :type exchange_rate_date: datetime
        """

        self._exchange_rate_date = exchange_rate_date

    @property
    def exchange_rate_pricing_to_billing(self):
        """Gets the exchange_rate_pricing_to_billing of this ModernUsageDetailProperties.

        Exchange Rate from pricing currency to billing currency.

        :return: The exchange_rate_pricing_to_billing of this ModernUsageDetailProperties.
        :rtype: float
        """
        return self._exchange_rate_pricing_to_billing

    @exchange_rate_pricing_to_billing.setter
    def exchange_rate_pricing_to_billing(self, exchange_rate_pricing_to_billing):
        """Sets the exchange_rate_pricing_to_billing of this ModernUsageDetailProperties.

        Exchange Rate from pricing currency to billing currency.

        :param exchange_rate_pricing_to_billing: The exchange_rate_pricing_to_billing of this ModernUsageDetailProperties.
        :type exchange_rate_pricing_to_billing: float
        """

        self._exchange_rate_pricing_to_billing = exchange_rate_pricing_to_billing

    @property
    def frequency(self):
        """Gets the frequency of this ModernUsageDetailProperties.

        Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which recur every month, and UsageBased for charges based on how much a service is used.

        :return: The frequency of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this ModernUsageDetailProperties.

        Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which recur every month, and UsageBased for charges based on how much a service is used.

        :param frequency: The frequency of this ModernUsageDetailProperties.
        :type frequency: str
        """

        self._frequency = frequency

    @property
    def instance_name(self):
        """Gets the instance_name of this ModernUsageDetailProperties.

        Instance Name.

        :return: The instance_name of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._instance_name

    @instance_name.setter
    def instance_name(self, instance_name):
        """Sets the instance_name of this ModernUsageDetailProperties.

        Instance Name.

        :param instance_name: The instance_name of this ModernUsageDetailProperties.
        :type instance_name: str
        """

        self._instance_name = instance_name

    @property
    def invoice_id(self):
        """Gets the invoice_id of this ModernUsageDetailProperties.

        Invoice ID as on the invoice where the specific transaction appears.

        :return: The invoice_id of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """Sets the invoice_id of this ModernUsageDetailProperties.

        Invoice ID as on the invoice where the specific transaction appears.

        :param invoice_id: The invoice_id of this ModernUsageDetailProperties.
        :type invoice_id: str
        """

        self._invoice_id = invoice_id

    @property
    def invoice_section_id(self):
        """Gets the invoice_section_id of this ModernUsageDetailProperties.

        Identifier of the project that is being charged in the invoice. Not applicable for Microsoft Customer Agreements onboarded by partners.

        :return: The invoice_section_id of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._invoice_section_id

    @invoice_section_id.setter
    def invoice_section_id(self, invoice_section_id):
        """Sets the invoice_section_id of this ModernUsageDetailProperties.

        Identifier of the project that is being charged in the invoice. Not applicable for Microsoft Customer Agreements onboarded by partners.

        :param invoice_section_id: The invoice_section_id of this ModernUsageDetailProperties.
        :type invoice_section_id: str
        """

        self._invoice_section_id = invoice_section_id

    @property
    def invoice_section_name(self):
        """Gets the invoice_section_name of this ModernUsageDetailProperties.

        Name of the project that is being charged in the invoice. Not applicable for Microsoft Customer Agreements onboarded by partners.

        :return: The invoice_section_name of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._invoice_section_name

    @invoice_section_name.setter
    def invoice_section_name(self, invoice_section_name):
        """Sets the invoice_section_name of this ModernUsageDetailProperties.

        Name of the project that is being charged in the invoice. Not applicable for Microsoft Customer Agreements onboarded by partners.

        :param invoice_section_name: The invoice_section_name of this ModernUsageDetailProperties.
        :type invoice_section_name: str
        """

        self._invoice_section_name = invoice_section_name

    @property
    def is_azure_credit_eligible(self):
        """Gets the is_azure_credit_eligible of this ModernUsageDetailProperties.

        Determines if the cost is eligible to be paid for using Azure credits.

        :return: The is_azure_credit_eligible of this ModernUsageDetailProperties.
        :rtype: bool
        """
        return self._is_azure_credit_eligible

    @is_azure_credit_eligible.setter
    def is_azure_credit_eligible(self, is_azure_credit_eligible):
        """Sets the is_azure_credit_eligible of this ModernUsageDetailProperties.

        Determines if the cost is eligible to be paid for using Azure credits.

        :param is_azure_credit_eligible: The is_azure_credit_eligible of this ModernUsageDetailProperties.
        :type is_azure_credit_eligible: bool
        """

        self._is_azure_credit_eligible = is_azure_credit_eligible

    @property
    def market_price(self):
        """Gets the market_price of this ModernUsageDetailProperties.

        Market Price that's charged for the usage.

        :return: The market_price of this ModernUsageDetailProperties.
        :rtype: float
        """
        return self._market_price

    @market_price.setter
    def market_price(self, market_price):
        """Sets the market_price of this ModernUsageDetailProperties.

        Market Price that's charged for the usage.

        :param market_price: The market_price of this ModernUsageDetailProperties.
        :type market_price: float
        """

        self._market_price = market_price

    @property
    def meter_category(self):
        """Gets the meter_category of this ModernUsageDetailProperties.

        Identifies the top-level service for the usage.

        :return: The meter_category of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._meter_category

    @meter_category.setter
    def meter_category(self, meter_category):
        """Sets the meter_category of this ModernUsageDetailProperties.

        Identifies the top-level service for the usage.

        :param meter_category: The meter_category of this ModernUsageDetailProperties.
        :type meter_category: str
        """

        self._meter_category = meter_category

    @property
    def meter_id(self):
        """Gets the meter_id of this ModernUsageDetailProperties.

        The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.

        :return: The meter_id of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._meter_id

    @meter_id.setter
    def meter_id(self, meter_id):
        """Sets the meter_id of this ModernUsageDetailProperties.

        The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.

        :param meter_id: The meter_id of this ModernUsageDetailProperties.
        :type meter_id: str
        """

        self._meter_id = meter_id

    @property
    def meter_name(self):
        """Gets the meter_name of this ModernUsageDetailProperties.

        Identifies the name of the meter against which consumption is measured.

        :return: The meter_name of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._meter_name

    @meter_name.setter
    def meter_name(self, meter_name):
        """Sets the meter_name of this ModernUsageDetailProperties.

        Identifies the name of the meter against which consumption is measured.

        :param meter_name: The meter_name of this ModernUsageDetailProperties.
        :type meter_name: str
        """

        self._meter_name = meter_name

    @property
    def meter_region(self):
        """Gets the meter_region of this ModernUsageDetailProperties.

        Identifies the location of the datacenter for certain services that are priced based on datacenter location.

        :return: The meter_region of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._meter_region

    @meter_region.setter
    def meter_region(self, meter_region):
        """Sets the meter_region of this ModernUsageDetailProperties.

        Identifies the location of the datacenter for certain services that are priced based on datacenter location.

        :param meter_region: The meter_region of this ModernUsageDetailProperties.
        :type meter_region: str
        """

        self._meter_region = meter_region

    @property
    def meter_sub_category(self):
        """Gets the meter_sub_category of this ModernUsageDetailProperties.

        Defines the type or sub-category of Azure service that can affect the rate.

        :return: The meter_sub_category of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._meter_sub_category

    @meter_sub_category.setter
    def meter_sub_category(self, meter_sub_category):
        """Sets the meter_sub_category of this ModernUsageDetailProperties.

        Defines the type or sub-category of Azure service that can affect the rate.

        :param meter_sub_category: The meter_sub_category of this ModernUsageDetailProperties.
        :type meter_sub_category: str
        """

        self._meter_sub_category = meter_sub_category

    @property
    def partner_earned_credit_applied(self):
        """Gets the partner_earned_credit_applied of this ModernUsageDetailProperties.

        Flag to indicate if partner earned credit has been applied or not.

        :return: The partner_earned_credit_applied of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._partner_earned_credit_applied

    @partner_earned_credit_applied.setter
    def partner_earned_credit_applied(self, partner_earned_credit_applied):
        """Sets the partner_earned_credit_applied of this ModernUsageDetailProperties.

        Flag to indicate if partner earned credit has been applied or not.

        :param partner_earned_credit_applied: The partner_earned_credit_applied of this ModernUsageDetailProperties.
        :type partner_earned_credit_applied: str
        """

        self._partner_earned_credit_applied = partner_earned_credit_applied

    @property
    def partner_earned_credit_rate(self):
        """Gets the partner_earned_credit_rate of this ModernUsageDetailProperties.

        Rate of discount applied if there is a partner earned credit (PEC) based on partner admin link access.

        :return: The partner_earned_credit_rate of this ModernUsageDetailProperties.
        :rtype: float
        """
        return self._partner_earned_credit_rate

    @partner_earned_credit_rate.setter
    def partner_earned_credit_rate(self, partner_earned_credit_rate):
        """Sets the partner_earned_credit_rate of this ModernUsageDetailProperties.

        Rate of discount applied if there is a partner earned credit (PEC) based on partner admin link access.

        :param partner_earned_credit_rate: The partner_earned_credit_rate of this ModernUsageDetailProperties.
        :type partner_earned_credit_rate: float
        """

        self._partner_earned_credit_rate = partner_earned_credit_rate

    @property
    def partner_name(self):
        """Gets the partner_name of this ModernUsageDetailProperties.

        Name of the partner' AAD tenant.

        :return: The partner_name of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._partner_name

    @partner_name.setter
    def partner_name(self, partner_name):
        """Sets the partner_name of this ModernUsageDetailProperties.

        Name of the partner' AAD tenant.

        :param partner_name: The partner_name of this ModernUsageDetailProperties.
        :type partner_name: str
        """

        self._partner_name = partner_name

    @property
    def partner_tenant_id(self):
        """Gets the partner_tenant_id of this ModernUsageDetailProperties.

        Identifier for the partner's AAD tenant.

        :return: The partner_tenant_id of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._partner_tenant_id

    @partner_tenant_id.setter
    def partner_tenant_id(self, partner_tenant_id):
        """Sets the partner_tenant_id of this ModernUsageDetailProperties.

        Identifier for the partner's AAD tenant.

        :param partner_tenant_id: The partner_tenant_id of this ModernUsageDetailProperties.
        :type partner_tenant_id: str
        """

        self._partner_tenant_id = partner_tenant_id

    @property
    def payg_cost_in_billing_currency(self):
        """Gets the payg_cost_in_billing_currency of this ModernUsageDetailProperties.

        The amount of PayG cost before tax in billing currency.

        :return: The payg_cost_in_billing_currency of this ModernUsageDetailProperties.
        :rtype: float
        """
        return self._payg_cost_in_billing_currency

    @payg_cost_in_billing_currency.setter
    def payg_cost_in_billing_currency(self, payg_cost_in_billing_currency):
        """Sets the payg_cost_in_billing_currency of this ModernUsageDetailProperties.

        The amount of PayG cost before tax in billing currency.

        :param payg_cost_in_billing_currency: The payg_cost_in_billing_currency of this ModernUsageDetailProperties.
        :type payg_cost_in_billing_currency: float
        """

        self._payg_cost_in_billing_currency = payg_cost_in_billing_currency

    @property
    def payg_cost_in_usd(self):
        """Gets the payg_cost_in_usd of this ModernUsageDetailProperties.

        The amount of PayG cost before tax in US Dollar currency.

        :return: The payg_cost_in_usd of this ModernUsageDetailProperties.
        :rtype: float
        """
        return self._payg_cost_in_usd

    @payg_cost_in_usd.setter
    def payg_cost_in_usd(self, payg_cost_in_usd):
        """Sets the payg_cost_in_usd of this ModernUsageDetailProperties.

        The amount of PayG cost before tax in US Dollar currency.

        :param payg_cost_in_usd: The payg_cost_in_usd of this ModernUsageDetailProperties.
        :type payg_cost_in_usd: float
        """

        self._payg_cost_in_usd = payg_cost_in_usd

    @property
    def previous_invoice_id(self):
        """Gets the previous_invoice_id of this ModernUsageDetailProperties.

        Reference to an original invoice there is a refund (negative cost). This is populated only when there is a refund.

        :return: The previous_invoice_id of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._previous_invoice_id

    @previous_invoice_id.setter
    def previous_invoice_id(self, previous_invoice_id):
        """Sets the previous_invoice_id of this ModernUsageDetailProperties.

        Reference to an original invoice there is a refund (negative cost). This is populated only when there is a refund.

        :param previous_invoice_id: The previous_invoice_id of this ModernUsageDetailProperties.
        :type previous_invoice_id: str
        """

        self._previous_invoice_id = previous_invoice_id

    @property
    def pricing_currency_code(self):
        """Gets the pricing_currency_code of this ModernUsageDetailProperties.

        Pricing Billing Currency.

        :return: The pricing_currency_code of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._pricing_currency_code

    @pricing_currency_code.setter
    def pricing_currency_code(self, pricing_currency_code):
        """Sets the pricing_currency_code of this ModernUsageDetailProperties.

        Pricing Billing Currency.

        :param pricing_currency_code: The pricing_currency_code of this ModernUsageDetailProperties.
        :type pricing_currency_code: str
        """

        self._pricing_currency_code = pricing_currency_code

    @property
    def product(self):
        """Gets the product of this ModernUsageDetailProperties.

        Name of the product that has accrued charges by consumption or purchase as listed in the invoice. Not available for Marketplace.

        :return: The product of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this ModernUsageDetailProperties.

        Name of the product that has accrued charges by consumption or purchase as listed in the invoice. Not available for Marketplace.

        :param product: The product of this ModernUsageDetailProperties.
        :type product: str
        """

        self._product = product

    @property
    def product_identifier(self):
        """Gets the product_identifier of this ModernUsageDetailProperties.

        Identifer for the product that has accrued charges by consumption or purchase . This is the concatenated key of productId and SKuId in partner center.

        :return: The product_identifier of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._product_identifier

    @product_identifier.setter
    def product_identifier(self, product_identifier):
        """Sets the product_identifier of this ModernUsageDetailProperties.

        Identifer for the product that has accrued charges by consumption or purchase . This is the concatenated key of productId and SKuId in partner center.

        :param product_identifier: The product_identifier of this ModernUsageDetailProperties.
        :type product_identifier: str
        """

        self._product_identifier = product_identifier

    @property
    def product_order_id(self):
        """Gets the product_order_id of this ModernUsageDetailProperties.

        The identifier for the asset or Azure plan name that the subscription belongs to. For example: Azure Plan. For reservations this is the Reservation Order ID.

        :return: The product_order_id of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._product_order_id

    @product_order_id.setter
    def product_order_id(self, product_order_id):
        """Sets the product_order_id of this ModernUsageDetailProperties.

        The identifier for the asset or Azure plan name that the subscription belongs to. For example: Azure Plan. For reservations this is the Reservation Order ID.

        :param product_order_id: The product_order_id of this ModernUsageDetailProperties.
        :type product_order_id: str
        """

        self._product_order_id = product_order_id

    @property
    def product_order_name(self):
        """Gets the product_order_name of this ModernUsageDetailProperties.

        Product Order Name. For reservations this is the SKU that was purchased.

        :return: The product_order_name of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._product_order_name

    @product_order_name.setter
    def product_order_name(self, product_order_name):
        """Sets the product_order_name of this ModernUsageDetailProperties.

        Product Order Name. For reservations this is the SKU that was purchased.

        :param product_order_name: The product_order_name of this ModernUsageDetailProperties.
        :type product_order_name: str
        """

        self._product_order_name = product_order_name

    @property
    def publisher_id(self):
        """Gets the publisher_id of this ModernUsageDetailProperties.

        Publisher Id.

        :return: The publisher_id of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._publisher_id

    @publisher_id.setter
    def publisher_id(self, publisher_id):
        """Sets the publisher_id of this ModernUsageDetailProperties.

        Publisher Id.

        :param publisher_id: The publisher_id of this ModernUsageDetailProperties.
        :type publisher_id: str
        """

        self._publisher_id = publisher_id

    @property
    def publisher_name(self):
        """Gets the publisher_name of this ModernUsageDetailProperties.

        Name of the publisher of the service including Microsoft or Third Party publishers.

        :return: The publisher_name of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._publisher_name

    @publisher_name.setter
    def publisher_name(self, publisher_name):
        """Sets the publisher_name of this ModernUsageDetailProperties.

        Name of the publisher of the service including Microsoft or Third Party publishers.

        :param publisher_name: The publisher_name of this ModernUsageDetailProperties.
        :type publisher_name: str
        """

        self._publisher_name = publisher_name

    @property
    def publisher_type(self):
        """Gets the publisher_type of this ModernUsageDetailProperties.

        Type of publisher that identifies if the publisher is first party, third party reseller or third party agency.

        :return: The publisher_type of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._publisher_type

    @publisher_type.setter
    def publisher_type(self, publisher_type):
        """Sets the publisher_type of this ModernUsageDetailProperties.

        Type of publisher that identifies if the publisher is first party, third party reseller or third party agency.

        :param publisher_type: The publisher_type of this ModernUsageDetailProperties.
        :type publisher_type: str
        """

        self._publisher_type = publisher_type

    @property
    def quantity(self):
        """Gets the quantity of this ModernUsageDetailProperties.

        Measure the quantity purchased or consumed.The amount of the meter used during the billing period.

        :return: The quantity of this ModernUsageDetailProperties.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ModernUsageDetailProperties.

        Measure the quantity purchased or consumed.The amount of the meter used during the billing period.

        :param quantity: The quantity of this ModernUsageDetailProperties.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def reseller_mpn_id(self):
        """Gets the reseller_mpn_id of this ModernUsageDetailProperties.

        MPNId for the reseller associated with the subscription.

        :return: The reseller_mpn_id of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._reseller_mpn_id

    @reseller_mpn_id.setter
    def reseller_mpn_id(self, reseller_mpn_id):
        """Sets the reseller_mpn_id of this ModernUsageDetailProperties.

        MPNId for the reseller associated with the subscription.

        :param reseller_mpn_id: The reseller_mpn_id of this ModernUsageDetailProperties.
        :type reseller_mpn_id: str
        """

        self._reseller_mpn_id = reseller_mpn_id

    @property
    def reseller_name(self):
        """Gets the reseller_name of this ModernUsageDetailProperties.

        Reseller Name.

        :return: The reseller_name of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._reseller_name

    @reseller_name.setter
    def reseller_name(self, reseller_name):
        """Sets the reseller_name of this ModernUsageDetailProperties.

        Reseller Name.

        :param reseller_name: The reseller_name of this ModernUsageDetailProperties.
        :type reseller_name: str
        """

        self._reseller_name = reseller_name

    @property
    def reservation_id(self):
        """Gets the reservation_id of this ModernUsageDetailProperties.

        ARM resource id of the reservation. Only applies to records relevant to reservations.

        :return: The reservation_id of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._reservation_id

    @reservation_id.setter
    def reservation_id(self, reservation_id):
        """Sets the reservation_id of this ModernUsageDetailProperties.

        ARM resource id of the reservation. Only applies to records relevant to reservations.

        :param reservation_id: The reservation_id of this ModernUsageDetailProperties.
        :type reservation_id: str
        """

        self._reservation_id = reservation_id

    @property
    def reservation_name(self):
        """Gets the reservation_name of this ModernUsageDetailProperties.

        User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only applies to records relevant to reservations.

        :return: The reservation_name of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._reservation_name

    @reservation_name.setter
    def reservation_name(self, reservation_name):
        """Sets the reservation_name of this ModernUsageDetailProperties.

        User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only applies to records relevant to reservations.

        :param reservation_name: The reservation_name of this ModernUsageDetailProperties.
        :type reservation_name: str
        """

        self._reservation_name = reservation_name

    @property
    def resource_group(self):
        """Gets the resource_group of this ModernUsageDetailProperties.

        Name of the Azure resource group used for cohesive lifecycle management of resources.

        :return: The resource_group of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._resource_group

    @resource_group.setter
    def resource_group(self, resource_group):
        """Sets the resource_group of this ModernUsageDetailProperties.

        Name of the Azure resource group used for cohesive lifecycle management of resources.

        :param resource_group: The resource_group of this ModernUsageDetailProperties.
        :type resource_group: str
        """

        self._resource_group = resource_group

    @property
    def resource_location(self):
        """Gets the resource_location of this ModernUsageDetailProperties.

        Name of the resource location.

        :return: The resource_location of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._resource_location

    @resource_location.setter
    def resource_location(self, resource_location):
        """Sets the resource_location of this ModernUsageDetailProperties.

        Name of the resource location.

        :param resource_location: The resource_location of this ModernUsageDetailProperties.
        :type resource_location: str
        """

        self._resource_location = resource_location

    @property
    def resource_location_normalized(self):
        """Gets the resource_location_normalized of this ModernUsageDetailProperties.

        Resource Location Normalized.

        :return: The resource_location_normalized of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._resource_location_normalized

    @resource_location_normalized.setter
    def resource_location_normalized(self, resource_location_normalized):
        """Sets the resource_location_normalized of this ModernUsageDetailProperties.

        Resource Location Normalized.

        :param resource_location_normalized: The resource_location_normalized of this ModernUsageDetailProperties.
        :type resource_location_normalized: str
        """

        self._resource_location_normalized = resource_location_normalized

    @property
    def service_family(self):
        """Gets the service_family of this ModernUsageDetailProperties.

        List the service family for the product purchased or charged (Example: Storage ; Compute).

        :return: The service_family of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._service_family

    @service_family.setter
    def service_family(self, service_family):
        """Sets the service_family of this ModernUsageDetailProperties.

        List the service family for the product purchased or charged (Example: Storage ; Compute).

        :param service_family: The service_family of this ModernUsageDetailProperties.
        :type service_family: str
        """

        self._service_family = service_family

    @property
    def service_info1(self):
        """Gets the service_info1 of this ModernUsageDetailProperties.

        Service Info 1.

        :return: The service_info1 of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._service_info1

    @service_info1.setter
    def service_info1(self, service_info1):
        """Sets the service_info1 of this ModernUsageDetailProperties.

        Service Info 1.

        :param service_info1: The service_info1 of this ModernUsageDetailProperties.
        :type service_info1: str
        """

        self._service_info1 = service_info1

    @property
    def service_info2(self):
        """Gets the service_info2 of this ModernUsageDetailProperties.

        Service Info 2.

        :return: The service_info2 of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._service_info2

    @service_info2.setter
    def service_info2(self, service_info2):
        """Sets the service_info2 of this ModernUsageDetailProperties.

        Service Info 2.

        :param service_info2: The service_info2 of this ModernUsageDetailProperties.
        :type service_info2: str
        """

        self._service_info2 = service_info2

    @property
    def service_period_end_date(self):
        """Gets the service_period_end_date of this ModernUsageDetailProperties.

        End date for the period when the service usage was rated for charges. The prices for Azure services are determined based on the rating period.

        :return: The service_period_end_date of this ModernUsageDetailProperties.
        :rtype: datetime
        """
        return self._service_period_end_date

    @service_period_end_date.setter
    def service_period_end_date(self, service_period_end_date):
        """Sets the service_period_end_date of this ModernUsageDetailProperties.

        End date for the period when the service usage was rated for charges. The prices for Azure services are determined based on the rating period.

        :param service_period_end_date: The service_period_end_date of this ModernUsageDetailProperties.
        :type service_period_end_date: datetime
        """

        self._service_period_end_date = service_period_end_date

    @property
    def service_period_start_date(self):
        """Gets the service_period_start_date of this ModernUsageDetailProperties.

        Start date for the rating period when the service usage was rated for charges. The prices for Azure services are determined for the rating period.

        :return: The service_period_start_date of this ModernUsageDetailProperties.
        :rtype: datetime
        """
        return self._service_period_start_date

    @service_period_start_date.setter
    def service_period_start_date(self, service_period_start_date):
        """Sets the service_period_start_date of this ModernUsageDetailProperties.

        Start date for the rating period when the service usage was rated for charges. The prices for Azure services are determined for the rating period.

        :param service_period_start_date: The service_period_start_date of this ModernUsageDetailProperties.
        :type service_period_start_date: datetime
        """

        self._service_period_start_date = service_period_start_date

    @property
    def subscription_guid(self):
        """Gets the subscription_guid of this ModernUsageDetailProperties.

        Unique Microsoft generated identifier for the Azure Subscription.

        :return: The subscription_guid of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._subscription_guid

    @subscription_guid.setter
    def subscription_guid(self, subscription_guid):
        """Sets the subscription_guid of this ModernUsageDetailProperties.

        Unique Microsoft generated identifier for the Azure Subscription.

        :param subscription_guid: The subscription_guid of this ModernUsageDetailProperties.
        :type subscription_guid: str
        """

        self._subscription_guid = subscription_guid

    @property
    def subscription_name(self):
        """Gets the subscription_name of this ModernUsageDetailProperties.

        Name of the Azure Subscription.

        :return: The subscription_name of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._subscription_name

    @subscription_name.setter
    def subscription_name(self, subscription_name):
        """Sets the subscription_name of this ModernUsageDetailProperties.

        Name of the Azure Subscription.

        :param subscription_name: The subscription_name of this ModernUsageDetailProperties.
        :type subscription_name: str
        """

        self._subscription_name = subscription_name

    @property
    def term(self):
        """Gets the term of this ModernUsageDetailProperties.

        Term (in months). Displays the term for the validity of the offer. For example. In case of reserved instances it displays 12 months for yearly term of reserved instance. For one time purchases or recurring purchases, the terms displays 1 month; This is not applicable for Azure consumption.

        :return: The term of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._term

    @term.setter
    def term(self, term):
        """Sets the term of this ModernUsageDetailProperties.

        Term (in months). Displays the term for the validity of the offer. For example. In case of reserved instances it displays 12 months for yearly term of reserved instance. For one time purchases or recurring purchases, the terms displays 1 month; This is not applicable for Azure consumption.

        :param term: The term of this ModernUsageDetailProperties.
        :type term: str
        """

        self._term = term

    @property
    def unit_of_measure(self):
        """Gets the unit_of_measure of this ModernUsageDetailProperties.

        Identifies the Unit that the service is charged in. For example, GB, hours, 10,000 s.

        :return: The unit_of_measure of this ModernUsageDetailProperties.
        :rtype: str
        """
        return self._unit_of_measure

    @unit_of_measure.setter
    def unit_of_measure(self, unit_of_measure):
        """Sets the unit_of_measure of this ModernUsageDetailProperties.

        Identifies the Unit that the service is charged in. For example, GB, hours, 10,000 s.

        :param unit_of_measure: The unit_of_measure of this ModernUsageDetailProperties.
        :type unit_of_measure: str
        """

        self._unit_of_measure = unit_of_measure

    @property
    def unit_price(self):
        """Gets the unit_price of this ModernUsageDetailProperties.

        Unit Price is the price applicable to you. (your EA or other contract price).

        :return: The unit_price of this ModernUsageDetailProperties.
        :rtype: float
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price):
        """Sets the unit_price of this ModernUsageDetailProperties.

        Unit Price is the price applicable to you. (your EA or other contract price).

        :param unit_price: The unit_price of this ModernUsageDetailProperties.
        :type unit_price: float
        """

        self._unit_price = unit_price
