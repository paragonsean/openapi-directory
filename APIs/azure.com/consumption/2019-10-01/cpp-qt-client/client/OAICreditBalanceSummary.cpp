/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditBalanceSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditBalanceSummary::OAICreditBalanceSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditBalanceSummary::OAICreditBalanceSummary() {
    this->initializeModel();
}

OAICreditBalanceSummary::~OAICreditBalanceSummary() {}

void OAICreditBalanceSummary::initializeModel() {

    m_current_balance_isSet = false;
    m_current_balance_isValid = false;

    m_estimated_balance_isSet = false;
    m_estimated_balance_isValid = false;
}

void OAICreditBalanceSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditBalanceSummary::fromJsonObject(QJsonObject json) {

    m_current_balance_isValid = ::OpenAPI::fromJsonValue(m_current_balance, json[QString("currentBalance")]);
    m_current_balance_isSet = !json[QString("currentBalance")].isNull() && m_current_balance_isValid;

    m_estimated_balance_isValid = ::OpenAPI::fromJsonValue(m_estimated_balance, json[QString("estimatedBalance")]);
    m_estimated_balance_isSet = !json[QString("estimatedBalance")].isNull() && m_estimated_balance_isValid;
}

QString OAICreditBalanceSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditBalanceSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_current_balance.isSet()) {
        obj.insert(QString("currentBalance"), ::OpenAPI::toJsonValue(m_current_balance));
    }
    if (m_estimated_balance.isSet()) {
        obj.insert(QString("estimatedBalance"), ::OpenAPI::toJsonValue(m_estimated_balance));
    }
    return obj;
}

OAIAmount OAICreditBalanceSummary::getCurrentBalance() const {
    return m_current_balance;
}
void OAICreditBalanceSummary::setCurrentBalance(const OAIAmount &current_balance) {
    m_current_balance = current_balance;
    m_current_balance_isSet = true;
}

bool OAICreditBalanceSummary::is_current_balance_Set() const{
    return m_current_balance_isSet;
}

bool OAICreditBalanceSummary::is_current_balance_Valid() const{
    return m_current_balance_isValid;
}

OAIAmount OAICreditBalanceSummary::getEstimatedBalance() const {
    return m_estimated_balance;
}
void OAICreditBalanceSummary::setEstimatedBalance(const OAIAmount &estimated_balance) {
    m_estimated_balance = estimated_balance;
    m_estimated_balance_isSet = true;
}

bool OAICreditBalanceSummary::is_estimated_balance_Set() const{
    return m_estimated_balance_isSet;
}

bool OAICreditBalanceSummary::is_estimated_balance_Valid() const{
    return m_estimated_balance_isValid;
}

bool OAICreditBalanceSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_current_balance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_estimated_balance.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditBalanceSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
