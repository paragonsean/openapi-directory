/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModernChargeSummaryProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModernChargeSummaryProperties::OAIModernChargeSummaryProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModernChargeSummaryProperties::OAIModernChargeSummaryProperties() {
    this->initializeModel();
}

OAIModernChargeSummaryProperties::~OAIModernChargeSummaryProperties() {}

void OAIModernChargeSummaryProperties::initializeModel() {

    m_azure_charges_isSet = false;
    m_azure_charges_isValid = false;

    m_billing_account_id_isSet = false;
    m_billing_account_id_isValid = false;

    m_billing_period_id_isSet = false;
    m_billing_period_id_isValid = false;

    m_billing_profile_id_isSet = false;
    m_billing_profile_id_isValid = false;

    m_charges_billed_separately_isSet = false;
    m_charges_billed_separately_isValid = false;

    m_customer_id_isSet = false;
    m_customer_id_isValid = false;

    m_invoice_section_id_isSet = false;
    m_invoice_section_id_isValid = false;

    m_is_invoiced_isSet = false;
    m_is_invoiced_isValid = false;

    m_marketplace_charges_isSet = false;
    m_marketplace_charges_isValid = false;

    m_usage_end_isSet = false;
    m_usage_end_isValid = false;

    m_usage_start_isSet = false;
    m_usage_start_isValid = false;
}

void OAIModernChargeSummaryProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModernChargeSummaryProperties::fromJsonObject(QJsonObject json) {

    m_azure_charges_isValid = ::OpenAPI::fromJsonValue(m_azure_charges, json[QString("azureCharges")]);
    m_azure_charges_isSet = !json[QString("azureCharges")].isNull() && m_azure_charges_isValid;

    m_billing_account_id_isValid = ::OpenAPI::fromJsonValue(m_billing_account_id, json[QString("billingAccountId")]);
    m_billing_account_id_isSet = !json[QString("billingAccountId")].isNull() && m_billing_account_id_isValid;

    m_billing_period_id_isValid = ::OpenAPI::fromJsonValue(m_billing_period_id, json[QString("billingPeriodId")]);
    m_billing_period_id_isSet = !json[QString("billingPeriodId")].isNull() && m_billing_period_id_isValid;

    m_billing_profile_id_isValid = ::OpenAPI::fromJsonValue(m_billing_profile_id, json[QString("billingProfileId")]);
    m_billing_profile_id_isSet = !json[QString("billingProfileId")].isNull() && m_billing_profile_id_isValid;

    m_charges_billed_separately_isValid = ::OpenAPI::fromJsonValue(m_charges_billed_separately, json[QString("chargesBilledSeparately")]);
    m_charges_billed_separately_isSet = !json[QString("chargesBilledSeparately")].isNull() && m_charges_billed_separately_isValid;

    m_customer_id_isValid = ::OpenAPI::fromJsonValue(m_customer_id, json[QString("customerId")]);
    m_customer_id_isSet = !json[QString("customerId")].isNull() && m_customer_id_isValid;

    m_invoice_section_id_isValid = ::OpenAPI::fromJsonValue(m_invoice_section_id, json[QString("invoiceSectionId")]);
    m_invoice_section_id_isSet = !json[QString("invoiceSectionId")].isNull() && m_invoice_section_id_isValid;

    m_is_invoiced_isValid = ::OpenAPI::fromJsonValue(m_is_invoiced, json[QString("isInvoiced")]);
    m_is_invoiced_isSet = !json[QString("isInvoiced")].isNull() && m_is_invoiced_isValid;

    m_marketplace_charges_isValid = ::OpenAPI::fromJsonValue(m_marketplace_charges, json[QString("marketplaceCharges")]);
    m_marketplace_charges_isSet = !json[QString("marketplaceCharges")].isNull() && m_marketplace_charges_isValid;

    m_usage_end_isValid = ::OpenAPI::fromJsonValue(m_usage_end, json[QString("usageEnd")]);
    m_usage_end_isSet = !json[QString("usageEnd")].isNull() && m_usage_end_isValid;

    m_usage_start_isValid = ::OpenAPI::fromJsonValue(m_usage_start, json[QString("usageStart")]);
    m_usage_start_isSet = !json[QString("usageStart")].isNull() && m_usage_start_isValid;
}

QString OAIModernChargeSummaryProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModernChargeSummaryProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_azure_charges.isSet()) {
        obj.insert(QString("azureCharges"), ::OpenAPI::toJsonValue(m_azure_charges));
    }
    if (m_billing_account_id_isSet) {
        obj.insert(QString("billingAccountId"), ::OpenAPI::toJsonValue(m_billing_account_id));
    }
    if (m_billing_period_id_isSet) {
        obj.insert(QString("billingPeriodId"), ::OpenAPI::toJsonValue(m_billing_period_id));
    }
    if (m_billing_profile_id_isSet) {
        obj.insert(QString("billingProfileId"), ::OpenAPI::toJsonValue(m_billing_profile_id));
    }
    if (m_charges_billed_separately.isSet()) {
        obj.insert(QString("chargesBilledSeparately"), ::OpenAPI::toJsonValue(m_charges_billed_separately));
    }
    if (m_customer_id_isSet) {
        obj.insert(QString("customerId"), ::OpenAPI::toJsonValue(m_customer_id));
    }
    if (m_invoice_section_id_isSet) {
        obj.insert(QString("invoiceSectionId"), ::OpenAPI::toJsonValue(m_invoice_section_id));
    }
    if (m_is_invoiced_isSet) {
        obj.insert(QString("isInvoiced"), ::OpenAPI::toJsonValue(m_is_invoiced));
    }
    if (m_marketplace_charges.isSet()) {
        obj.insert(QString("marketplaceCharges"), ::OpenAPI::toJsonValue(m_marketplace_charges));
    }
    if (m_usage_end_isSet) {
        obj.insert(QString("usageEnd"), ::OpenAPI::toJsonValue(m_usage_end));
    }
    if (m_usage_start_isSet) {
        obj.insert(QString("usageStart"), ::OpenAPI::toJsonValue(m_usage_start));
    }
    return obj;
}

OAIAmount OAIModernChargeSummaryProperties::getAzureCharges() const {
    return m_azure_charges;
}
void OAIModernChargeSummaryProperties::setAzureCharges(const OAIAmount &azure_charges) {
    m_azure_charges = azure_charges;
    m_azure_charges_isSet = true;
}

bool OAIModernChargeSummaryProperties::is_azure_charges_Set() const{
    return m_azure_charges_isSet;
}

bool OAIModernChargeSummaryProperties::is_azure_charges_Valid() const{
    return m_azure_charges_isValid;
}

QString OAIModernChargeSummaryProperties::getBillingAccountId() const {
    return m_billing_account_id;
}
void OAIModernChargeSummaryProperties::setBillingAccountId(const QString &billing_account_id) {
    m_billing_account_id = billing_account_id;
    m_billing_account_id_isSet = true;
}

bool OAIModernChargeSummaryProperties::is_billing_account_id_Set() const{
    return m_billing_account_id_isSet;
}

bool OAIModernChargeSummaryProperties::is_billing_account_id_Valid() const{
    return m_billing_account_id_isValid;
}

QString OAIModernChargeSummaryProperties::getBillingPeriodId() const {
    return m_billing_period_id;
}
void OAIModernChargeSummaryProperties::setBillingPeriodId(const QString &billing_period_id) {
    m_billing_period_id = billing_period_id;
    m_billing_period_id_isSet = true;
}

bool OAIModernChargeSummaryProperties::is_billing_period_id_Set() const{
    return m_billing_period_id_isSet;
}

bool OAIModernChargeSummaryProperties::is_billing_period_id_Valid() const{
    return m_billing_period_id_isValid;
}

QString OAIModernChargeSummaryProperties::getBillingProfileId() const {
    return m_billing_profile_id;
}
void OAIModernChargeSummaryProperties::setBillingProfileId(const QString &billing_profile_id) {
    m_billing_profile_id = billing_profile_id;
    m_billing_profile_id_isSet = true;
}

bool OAIModernChargeSummaryProperties::is_billing_profile_id_Set() const{
    return m_billing_profile_id_isSet;
}

bool OAIModernChargeSummaryProperties::is_billing_profile_id_Valid() const{
    return m_billing_profile_id_isValid;
}

OAIAmount OAIModernChargeSummaryProperties::getChargesBilledSeparately() const {
    return m_charges_billed_separately;
}
void OAIModernChargeSummaryProperties::setChargesBilledSeparately(const OAIAmount &charges_billed_separately) {
    m_charges_billed_separately = charges_billed_separately;
    m_charges_billed_separately_isSet = true;
}

bool OAIModernChargeSummaryProperties::is_charges_billed_separately_Set() const{
    return m_charges_billed_separately_isSet;
}

bool OAIModernChargeSummaryProperties::is_charges_billed_separately_Valid() const{
    return m_charges_billed_separately_isValid;
}

QString OAIModernChargeSummaryProperties::getCustomerId() const {
    return m_customer_id;
}
void OAIModernChargeSummaryProperties::setCustomerId(const QString &customer_id) {
    m_customer_id = customer_id;
    m_customer_id_isSet = true;
}

bool OAIModernChargeSummaryProperties::is_customer_id_Set() const{
    return m_customer_id_isSet;
}

bool OAIModernChargeSummaryProperties::is_customer_id_Valid() const{
    return m_customer_id_isValid;
}

QString OAIModernChargeSummaryProperties::getInvoiceSectionId() const {
    return m_invoice_section_id;
}
void OAIModernChargeSummaryProperties::setInvoiceSectionId(const QString &invoice_section_id) {
    m_invoice_section_id = invoice_section_id;
    m_invoice_section_id_isSet = true;
}

bool OAIModernChargeSummaryProperties::is_invoice_section_id_Set() const{
    return m_invoice_section_id_isSet;
}

bool OAIModernChargeSummaryProperties::is_invoice_section_id_Valid() const{
    return m_invoice_section_id_isValid;
}

bool OAIModernChargeSummaryProperties::isIsInvoiced() const {
    return m_is_invoiced;
}
void OAIModernChargeSummaryProperties::setIsInvoiced(const bool &is_invoiced) {
    m_is_invoiced = is_invoiced;
    m_is_invoiced_isSet = true;
}

bool OAIModernChargeSummaryProperties::is_is_invoiced_Set() const{
    return m_is_invoiced_isSet;
}

bool OAIModernChargeSummaryProperties::is_is_invoiced_Valid() const{
    return m_is_invoiced_isValid;
}

OAIAmount OAIModernChargeSummaryProperties::getMarketplaceCharges() const {
    return m_marketplace_charges;
}
void OAIModernChargeSummaryProperties::setMarketplaceCharges(const OAIAmount &marketplace_charges) {
    m_marketplace_charges = marketplace_charges;
    m_marketplace_charges_isSet = true;
}

bool OAIModernChargeSummaryProperties::is_marketplace_charges_Set() const{
    return m_marketplace_charges_isSet;
}

bool OAIModernChargeSummaryProperties::is_marketplace_charges_Valid() const{
    return m_marketplace_charges_isValid;
}

QString OAIModernChargeSummaryProperties::getUsageEnd() const {
    return m_usage_end;
}
void OAIModernChargeSummaryProperties::setUsageEnd(const QString &usage_end) {
    m_usage_end = usage_end;
    m_usage_end_isSet = true;
}

bool OAIModernChargeSummaryProperties::is_usage_end_Set() const{
    return m_usage_end_isSet;
}

bool OAIModernChargeSummaryProperties::is_usage_end_Valid() const{
    return m_usage_end_isValid;
}

QString OAIModernChargeSummaryProperties::getUsageStart() const {
    return m_usage_start;
}
void OAIModernChargeSummaryProperties::setUsageStart(const QString &usage_start) {
    m_usage_start = usage_start;
    m_usage_start_isSet = true;
}

bool OAIModernChargeSummaryProperties::is_usage_start_Set() const{
    return m_usage_start_isSet;
}

bool OAIModernChargeSummaryProperties::is_usage_start_Valid() const{
    return m_usage_start_isValid;
}

bool OAIModernChargeSummaryProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_azure_charges.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_period_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_charges_billed_separately.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_section_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketplace_charges.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_usage_end_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usage_start_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModernChargeSummaryProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
