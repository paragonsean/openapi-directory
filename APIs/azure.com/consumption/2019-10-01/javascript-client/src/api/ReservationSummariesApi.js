/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ReservationSummariesListResult from '../model/ReservationSummariesListResult';

/**
* ReservationSummaries service.
* @module api/ReservationSummariesApi
* @version 2019-10-01
*/
export default class ReservationSummariesApi {

    /**
    * Constructs a new ReservationSummariesApi. 
    * @alias module:api/ReservationSummariesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the reservationsSummariesList operation.
     * @callback module:api/ReservationSummariesApi~reservationsSummariesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationSummariesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the reservations summaries for the defined scope daily or monthly grain.
     * @param {String} scope The scope associated with reservations summaries operations. This includes '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope (legacy), and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope (modern). 
     * @param {module:model/String} grain Can be daily or monthly
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-10-01.
     * @param {Object} opts Optional parameters
     * @param {String} [startDate] Start date
     * @param {String} [endDate] End date
     * @param {String} [filter] Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'
     * @param {module:api/ReservationSummariesApi~reservationsSummariesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationSummariesListResult}
     */
    reservationsSummariesList(scope, grain, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling reservationsSummariesList");
      }
      // verify the required parameter 'grain' is set
      if (grain === undefined || grain === null) {
        throw new Error("Missing the required parameter 'grain' when calling reservationsSummariesList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationsSummariesList");
      }

      let pathParams = {
        'scope': scope
      };
      let queryParams = {
        'grain': grain,
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        '$filter': opts['filter'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReservationSummariesListResult;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.Consumption/reservationSummaries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reservationsSummariesListByReservationOrder operation.
     * @callback module:api/ReservationSummariesApi~reservationsSummariesListByReservationOrderCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationSummariesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the reservations summaries for daily or monthly grain.
     * @param {String} reservationOrderId Order Id of the reservation
     * @param {module:model/String} grain Can be daily or monthly
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-10-01.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'
     * @param {module:api/ReservationSummariesApi~reservationsSummariesListByReservationOrderCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationSummariesListResult}
     */
    reservationsSummariesListByReservationOrder(reservationOrderId, grain, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'reservationOrderId' is set
      if (reservationOrderId === undefined || reservationOrderId === null) {
        throw new Error("Missing the required parameter 'reservationOrderId' when calling reservationsSummariesListByReservationOrder");
      }
      // verify the required parameter 'grain' is set
      if (grain === undefined || grain === null) {
        throw new Error("Missing the required parameter 'grain' when calling reservationsSummariesListByReservationOrder");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationsSummariesListByReservationOrder");
      }

      let pathParams = {
        'reservationOrderId': reservationOrderId
      };
      let queryParams = {
        'grain': grain,
        '$filter': opts['filter'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReservationSummariesListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationSummaries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reservationsSummariesListByReservationOrderAndReservation operation.
     * @callback module:api/ReservationSummariesApi~reservationsSummariesListByReservationOrderAndReservationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationSummariesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the reservations summaries for daily or monthly grain.
     * @param {String} reservationOrderId Order Id of the reservation
     * @param {String} reservationId Id of the reservation
     * @param {module:model/String} grain Can be daily or monthly
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-10-01.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'
     * @param {module:api/ReservationSummariesApi~reservationsSummariesListByReservationOrderAndReservationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationSummariesListResult}
     */
    reservationsSummariesListByReservationOrderAndReservation(reservationOrderId, reservationId, grain, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'reservationOrderId' is set
      if (reservationOrderId === undefined || reservationOrderId === null) {
        throw new Error("Missing the required parameter 'reservationOrderId' when calling reservationsSummariesListByReservationOrderAndReservation");
      }
      // verify the required parameter 'reservationId' is set
      if (reservationId === undefined || reservationId === null) {
        throw new Error("Missing the required parameter 'reservationId' when calling reservationsSummariesListByReservationOrderAndReservation");
      }
      // verify the required parameter 'grain' is set
      if (grain === undefined || grain === null) {
        throw new Error("Missing the required parameter 'grain' when calling reservationsSummariesListByReservationOrderAndReservation");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationsSummariesListByReservationOrderAndReservation");
      }

      let pathParams = {
        'reservationOrderId': reservationOrderId,
        'reservationId': reservationId
      };
      let queryParams = {
        'grain': grain,
        '$filter': opts['filter'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReservationSummariesListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationSummaries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
