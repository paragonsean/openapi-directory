/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LegacyChargeSummaryProperties model module.
 * @module model/LegacyChargeSummaryProperties
 * @version 2019-10-01
 */
class LegacyChargeSummaryProperties {
    /**
     * Constructs a new <code>LegacyChargeSummaryProperties</code>.
     * The properties of legacy charge summary.
     * @alias module:model/LegacyChargeSummaryProperties
     */
    constructor() { 
        
        LegacyChargeSummaryProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LegacyChargeSummaryProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LegacyChargeSummaryProperties} obj Optional instance to populate.
     * @return {module:model/LegacyChargeSummaryProperties} The populated <code>LegacyChargeSummaryProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LegacyChargeSummaryProperties();

            if (data.hasOwnProperty('azureCharges')) {
                obj['azureCharges'] = ApiClient.convertToType(data['azureCharges'], 'Number');
            }
            if (data.hasOwnProperty('billingPeriodId')) {
                obj['billingPeriodId'] = ApiClient.convertToType(data['billingPeriodId'], 'String');
            }
            if (data.hasOwnProperty('chargesBilledSeparately')) {
                obj['chargesBilledSeparately'] = ApiClient.convertToType(data['chargesBilledSeparately'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('marketplaceCharges')) {
                obj['marketplaceCharges'] = ApiClient.convertToType(data['marketplaceCharges'], 'Number');
            }
            if (data.hasOwnProperty('usageEnd')) {
                obj['usageEnd'] = ApiClient.convertToType(data['usageEnd'], 'String');
            }
            if (data.hasOwnProperty('usageStart')) {
                obj['usageStart'] = ApiClient.convertToType(data['usageStart'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LegacyChargeSummaryProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LegacyChargeSummaryProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['billingPeriodId'] && !(typeof data['billingPeriodId'] === 'string' || data['billingPeriodId'] instanceof String)) {
            throw new Error("Expected the field `billingPeriodId` to be a primitive type in the JSON string but got " + data['billingPeriodId']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['usageEnd'] && !(typeof data['usageEnd'] === 'string' || data['usageEnd'] instanceof String)) {
            throw new Error("Expected the field `usageEnd` to be a primitive type in the JSON string but got " + data['usageEnd']);
        }
        // ensure the json data is a string
        if (data['usageStart'] && !(typeof data['usageStart'] === 'string' || data['usageStart'] instanceof String)) {
            throw new Error("Expected the field `usageStart` to be a primitive type in the JSON string but got " + data['usageStart']);
        }

        return true;
    }


}



/**
 * Azure Charges.
 * @member {Number} azureCharges
 */
LegacyChargeSummaryProperties.prototype['azureCharges'] = undefined;

/**
 * The id of the billing period resource that the charge belongs to.
 * @member {String} billingPeriodId
 */
LegacyChargeSummaryProperties.prototype['billingPeriodId'] = undefined;

/**
 * Charges Billed separately.
 * @member {Number} chargesBilledSeparately
 */
LegacyChargeSummaryProperties.prototype['chargesBilledSeparately'] = undefined;

/**
 * Currency Code
 * @member {String} currency
 */
LegacyChargeSummaryProperties.prototype['currency'] = undefined;

/**
 * Marketplace Charges.
 * @member {Number} marketplaceCharges
 */
LegacyChargeSummaryProperties.prototype['marketplaceCharges'] = undefined;

/**
 * Usage end date.
 * @member {String} usageEnd
 */
LegacyChargeSummaryProperties.prototype['usageEnd'] = undefined;

/**
 * Usage start date.
 * @member {String} usageStart
 */
LegacyChargeSummaryProperties.prototype['usageStart'] = undefined;






export default LegacyChargeSummaryProperties;

