/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The LotProperties model module.
 * @module model/LotProperties
 * @version 2019-10-01
 */
class LotProperties {
    /**
     * Constructs a new <code>LotProperties</code>.
     * The lot properties.
     * @alias module:model/LotProperties
     */
    constructor() { 
        
        LotProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LotProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LotProperties} obj Optional instance to populate.
     * @return {module:model/LotProperties} The populated <code>LotProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LotProperties();

            if (data.hasOwnProperty('closedBalance')) {
                obj['closedBalance'] = Amount.constructFromObject(data['closedBalance']);
            }
            if (data.hasOwnProperty('expirationDate')) {
                obj['expirationDate'] = ApiClient.convertToType(data['expirationDate'], 'Date');
            }
            if (data.hasOwnProperty('originalAmount')) {
                obj['originalAmount'] = Amount.constructFromObject(data['originalAmount']);
            }
            if (data.hasOwnProperty('poNumber')) {
                obj['poNumber'] = ApiClient.convertToType(data['poNumber'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LotProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LotProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `closedBalance`
        if (data['closedBalance']) { // data not null
          Amount.validateJSON(data['closedBalance']);
        }
        // validate the optional field `originalAmount`
        if (data['originalAmount']) { // data not null
          Amount.validateJSON(data['originalAmount']);
        }
        // ensure the json data is a string
        if (data['poNumber'] && !(typeof data['poNumber'] === 'string' || data['poNumber'] instanceof String)) {
            throw new Error("Expected the field `poNumber` to be a primitive type in the JSON string but got " + data['poNumber']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }

        return true;
    }


}



/**
 * @member {module:model/Amount} closedBalance
 */
LotProperties.prototype['closedBalance'] = undefined;

/**
 * Expiration date.
 * @member {Date} expirationDate
 */
LotProperties.prototype['expirationDate'] = undefined;

/**
 * @member {module:model/Amount} originalAmount
 */
LotProperties.prototype['originalAmount'] = undefined;

/**
 * PO number.
 * @member {String} poNumber
 */
LotProperties.prototype['poNumber'] = undefined;

/**
 * Lot source.
 * @member {module:model/LotProperties.SourceEnum} source
 */
LotProperties.prototype['source'] = undefined;

/**
 * Start date.
 * @member {Date} startDate
 */
LotProperties.prototype['startDate'] = undefined;





/**
 * Allowed values for the <code>source</code> property.
 * @enum {String}
 * @readonly
 */
LotProperties['SourceEnum'] = {

    /**
     * value: "PurchasedCredit"
     * @const
     */
    "PurchasedCredit": "PurchasedCredit",

    /**
     * value: "PromotionalCredit"
     * @const
     */
    "PromotionalCredit": "PromotionalCredit"
};



export default LotProperties;

