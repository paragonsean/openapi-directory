/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';

/**
 * The ModernChargeSummaryProperties model module.
 * @module model/ModernChargeSummaryProperties
 * @version 2019-10-01
 */
class ModernChargeSummaryProperties {
    /**
     * Constructs a new <code>ModernChargeSummaryProperties</code>.
     * The properties of modern charge summary.
     * @alias module:model/ModernChargeSummaryProperties
     */
    constructor() { 
        
        ModernChargeSummaryProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModernChargeSummaryProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModernChargeSummaryProperties} obj Optional instance to populate.
     * @return {module:model/ModernChargeSummaryProperties} The populated <code>ModernChargeSummaryProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModernChargeSummaryProperties();

            if (data.hasOwnProperty('azureCharges')) {
                obj['azureCharges'] = Amount.constructFromObject(data['azureCharges']);
            }
            if (data.hasOwnProperty('billingAccountId')) {
                obj['billingAccountId'] = ApiClient.convertToType(data['billingAccountId'], 'String');
            }
            if (data.hasOwnProperty('billingPeriodId')) {
                obj['billingPeriodId'] = ApiClient.convertToType(data['billingPeriodId'], 'String');
            }
            if (data.hasOwnProperty('billingProfileId')) {
                obj['billingProfileId'] = ApiClient.convertToType(data['billingProfileId'], 'String');
            }
            if (data.hasOwnProperty('chargesBilledSeparately')) {
                obj['chargesBilledSeparately'] = Amount.constructFromObject(data['chargesBilledSeparately']);
            }
            if (data.hasOwnProperty('customerId')) {
                obj['customerId'] = ApiClient.convertToType(data['customerId'], 'String');
            }
            if (data.hasOwnProperty('invoiceSectionId')) {
                obj['invoiceSectionId'] = ApiClient.convertToType(data['invoiceSectionId'], 'String');
            }
            if (data.hasOwnProperty('isInvoiced')) {
                obj['isInvoiced'] = ApiClient.convertToType(data['isInvoiced'], 'Boolean');
            }
            if (data.hasOwnProperty('marketplaceCharges')) {
                obj['marketplaceCharges'] = Amount.constructFromObject(data['marketplaceCharges']);
            }
            if (data.hasOwnProperty('usageEnd')) {
                obj['usageEnd'] = ApiClient.convertToType(data['usageEnd'], 'String');
            }
            if (data.hasOwnProperty('usageStart')) {
                obj['usageStart'] = ApiClient.convertToType(data['usageStart'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModernChargeSummaryProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModernChargeSummaryProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `azureCharges`
        if (data['azureCharges']) { // data not null
          Amount.validateJSON(data['azureCharges']);
        }
        // ensure the json data is a string
        if (data['billingAccountId'] && !(typeof data['billingAccountId'] === 'string' || data['billingAccountId'] instanceof String)) {
            throw new Error("Expected the field `billingAccountId` to be a primitive type in the JSON string but got " + data['billingAccountId']);
        }
        // ensure the json data is a string
        if (data['billingPeriodId'] && !(typeof data['billingPeriodId'] === 'string' || data['billingPeriodId'] instanceof String)) {
            throw new Error("Expected the field `billingPeriodId` to be a primitive type in the JSON string but got " + data['billingPeriodId']);
        }
        // ensure the json data is a string
        if (data['billingProfileId'] && !(typeof data['billingProfileId'] === 'string' || data['billingProfileId'] instanceof String)) {
            throw new Error("Expected the field `billingProfileId` to be a primitive type in the JSON string but got " + data['billingProfileId']);
        }
        // validate the optional field `chargesBilledSeparately`
        if (data['chargesBilledSeparately']) { // data not null
          Amount.validateJSON(data['chargesBilledSeparately']);
        }
        // ensure the json data is a string
        if (data['customerId'] && !(typeof data['customerId'] === 'string' || data['customerId'] instanceof String)) {
            throw new Error("Expected the field `customerId` to be a primitive type in the JSON string but got " + data['customerId']);
        }
        // ensure the json data is a string
        if (data['invoiceSectionId'] && !(typeof data['invoiceSectionId'] === 'string' || data['invoiceSectionId'] instanceof String)) {
            throw new Error("Expected the field `invoiceSectionId` to be a primitive type in the JSON string but got " + data['invoiceSectionId']);
        }
        // validate the optional field `marketplaceCharges`
        if (data['marketplaceCharges']) { // data not null
          Amount.validateJSON(data['marketplaceCharges']);
        }
        // ensure the json data is a string
        if (data['usageEnd'] && !(typeof data['usageEnd'] === 'string' || data['usageEnd'] instanceof String)) {
            throw new Error("Expected the field `usageEnd` to be a primitive type in the JSON string but got " + data['usageEnd']);
        }
        // ensure the json data is a string
        if (data['usageStart'] && !(typeof data['usageStart'] === 'string' || data['usageStart'] instanceof String)) {
            throw new Error("Expected the field `usageStart` to be a primitive type in the JSON string but got " + data['usageStart']);
        }

        return true;
    }


}



/**
 * @member {module:model/Amount} azureCharges
 */
ModernChargeSummaryProperties.prototype['azureCharges'] = undefined;

/**
 * Billing Account Id
 * @member {String} billingAccountId
 */
ModernChargeSummaryProperties.prototype['billingAccountId'] = undefined;

/**
 * The id of the billing period resource that the charge belongs to.
 * @member {String} billingPeriodId
 */
ModernChargeSummaryProperties.prototype['billingPeriodId'] = undefined;

/**
 * Billing Profile Id
 * @member {String} billingProfileId
 */
ModernChargeSummaryProperties.prototype['billingProfileId'] = undefined;

/**
 * @member {module:model/Amount} chargesBilledSeparately
 */
ModernChargeSummaryProperties.prototype['chargesBilledSeparately'] = undefined;

/**
 * Customer Id
 * @member {String} customerId
 */
ModernChargeSummaryProperties.prototype['customerId'] = undefined;

/**
 * Invoice Section Id
 * @member {String} invoiceSectionId
 */
ModernChargeSummaryProperties.prototype['invoiceSectionId'] = undefined;

/**
 * Is charge Invoiced
 * @member {Boolean} isInvoiced
 */
ModernChargeSummaryProperties.prototype['isInvoiced'] = undefined;

/**
 * @member {module:model/Amount} marketplaceCharges
 */
ModernChargeSummaryProperties.prototype['marketplaceCharges'] = undefined;

/**
 * Usage end date.
 * @member {String} usageEnd
 */
ModernChargeSummaryProperties.prototype['usageEnd'] = undefined;

/**
 * Usage start date.
 * @member {String} usageStart
 */
ModernChargeSummaryProperties.prototype['usageStart'] = undefined;






export default ModernChargeSummaryProperties;

