/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ConsumptionManagementClient);
  }
}(this, function(expect, ConsumptionManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModernUsageDetailProperties', function() {
    it('should create an instance of ModernUsageDetailProperties', function() {
      // uncomment below and update the code to test ModernUsageDetailProperties
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be.a(ConsumptionManagementClient.ModernUsageDetailProperties);
    });

    it('should have the property additionalInfo (base name: "additionalInfo")', function() {
      // uncomment below and update the code to test the property additionalInfo
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingAccountId (base name: "billingAccountId")', function() {
      // uncomment below and update the code to test the property billingAccountId
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingAccountName (base name: "billingAccountName")', function() {
      // uncomment below and update the code to test the property billingAccountName
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingCurrencyCode (base name: "billingCurrencyCode")', function() {
      // uncomment below and update the code to test the property billingCurrencyCode
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingPeriodEndDate (base name: "billingPeriodEndDate")', function() {
      // uncomment below and update the code to test the property billingPeriodEndDate
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingPeriodStartDate (base name: "billingPeriodStartDate")', function() {
      // uncomment below and update the code to test the property billingPeriodStartDate
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingProfileId (base name: "billingProfileId")', function() {
      // uncomment below and update the code to test the property billingProfileId
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property billingProfileName (base name: "billingProfileName")', function() {
      // uncomment below and update the code to test the property billingProfileName
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property chargeType (base name: "chargeType")', function() {
      // uncomment below and update the code to test the property chargeType
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property consumedService (base name: "consumedService")', function() {
      // uncomment below and update the code to test the property consumedService
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property costCenter (base name: "costCenter")', function() {
      // uncomment below and update the code to test the property costCenter
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property costInBillingCurrency (base name: "costInBillingCurrency")', function() {
      // uncomment below and update the code to test the property costInBillingCurrency
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property costInPricingCurrency (base name: "costInPricingCurrency")', function() {
      // uncomment below and update the code to test the property costInPricingCurrency
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property costInUSD (base name: "costInUSD")', function() {
      // uncomment below and update the code to test the property costInUSD
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property customerName (base name: "customerName")', function() {
      // uncomment below and update the code to test the property customerName
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property customerTenantId (base name: "customerTenantId")', function() {
      // uncomment below and update the code to test the property customerTenantId
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "date")', function() {
      // uncomment below and update the code to test the property date
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property exchangeRate (base name: "exchangeRate")', function() {
      // uncomment below and update the code to test the property exchangeRate
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property exchangeRateDate (base name: "exchangeRateDate")', function() {
      // uncomment below and update the code to test the property exchangeRateDate
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property exchangeRatePricingToBilling (base name: "exchangeRatePricingToBilling")', function() {
      // uncomment below and update the code to test the property exchangeRatePricingToBilling
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property frequency (base name: "frequency")', function() {
      // uncomment below and update the code to test the property frequency
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property instanceName (base name: "instanceName")', function() {
      // uncomment below and update the code to test the property instanceName
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property invoiceId (base name: "invoiceId")', function() {
      // uncomment below and update the code to test the property invoiceId
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property invoiceSectionId (base name: "invoiceSectionId")', function() {
      // uncomment below and update the code to test the property invoiceSectionId
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property invoiceSectionName (base name: "invoiceSectionName")', function() {
      // uncomment below and update the code to test the property invoiceSectionName
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property isAzureCreditEligible (base name: "isAzureCreditEligible")', function() {
      // uncomment below and update the code to test the property isAzureCreditEligible
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property marketPrice (base name: "marketPrice")', function() {
      // uncomment below and update the code to test the property marketPrice
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property meterCategory (base name: "meterCategory")', function() {
      // uncomment below and update the code to test the property meterCategory
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property meterId (base name: "meterId")', function() {
      // uncomment below and update the code to test the property meterId
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property meterName (base name: "meterName")', function() {
      // uncomment below and update the code to test the property meterName
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property meterRegion (base name: "meterRegion")', function() {
      // uncomment below and update the code to test the property meterRegion
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property meterSubCategory (base name: "meterSubCategory")', function() {
      // uncomment below and update the code to test the property meterSubCategory
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property partnerEarnedCreditApplied (base name: "partnerEarnedCreditApplied")', function() {
      // uncomment below and update the code to test the property partnerEarnedCreditApplied
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property partnerEarnedCreditRate (base name: "partnerEarnedCreditRate")', function() {
      // uncomment below and update the code to test the property partnerEarnedCreditRate
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property partnerName (base name: "partnerName")', function() {
      // uncomment below and update the code to test the property partnerName
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property partnerTenantId (base name: "partnerTenantId")', function() {
      // uncomment below and update the code to test the property partnerTenantId
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property paygCostInBillingCurrency (base name: "paygCostInBillingCurrency")', function() {
      // uncomment below and update the code to test the property paygCostInBillingCurrency
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property paygCostInUSD (base name: "paygCostInUSD")', function() {
      // uncomment below and update the code to test the property paygCostInUSD
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property previousInvoiceId (base name: "previousInvoiceId")', function() {
      // uncomment below and update the code to test the property previousInvoiceId
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property pricingCurrencyCode (base name: "pricingCurrencyCode")', function() {
      // uncomment below and update the code to test the property pricingCurrencyCode
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property product (base name: "product")', function() {
      // uncomment below and update the code to test the property product
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property productIdentifier (base name: "productIdentifier")', function() {
      // uncomment below and update the code to test the property productIdentifier
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property productOrderId (base name: "productOrderId")', function() {
      // uncomment below and update the code to test the property productOrderId
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property productOrderName (base name: "productOrderName")', function() {
      // uncomment below and update the code to test the property productOrderName
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property publisherId (base name: "publisherId")', function() {
      // uncomment below and update the code to test the property publisherId
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property publisherName (base name: "publisherName")', function() {
      // uncomment below and update the code to test the property publisherName
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property publisherType (base name: "publisherType")', function() {
      // uncomment below and update the code to test the property publisherType
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property resellerMpnId (base name: "resellerMpnId")', function() {
      // uncomment below and update the code to test the property resellerMpnId
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property resellerName (base name: "resellerName")', function() {
      // uncomment below and update the code to test the property resellerName
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property reservationId (base name: "reservationId")', function() {
      // uncomment below and update the code to test the property reservationId
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property reservationName (base name: "reservationName")', function() {
      // uncomment below and update the code to test the property reservationName
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property resourceGroup (base name: "resourceGroup")', function() {
      // uncomment below and update the code to test the property resourceGroup
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property resourceLocation (base name: "resourceLocation")', function() {
      // uncomment below and update the code to test the property resourceLocation
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property resourceLocationNormalized (base name: "resourceLocationNormalized")', function() {
      // uncomment below and update the code to test the property resourceLocationNormalized
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceFamily (base name: "serviceFamily")', function() {
      // uncomment below and update the code to test the property serviceFamily
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceInfo1 (base name: "serviceInfo1")', function() {
      // uncomment below and update the code to test the property serviceInfo1
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceInfo2 (base name: "serviceInfo2")', function() {
      // uncomment below and update the code to test the property serviceInfo2
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property servicePeriodEndDate (base name: "servicePeriodEndDate")', function() {
      // uncomment below and update the code to test the property servicePeriodEndDate
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property servicePeriodStartDate (base name: "servicePeriodStartDate")', function() {
      // uncomment below and update the code to test the property servicePeriodStartDate
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionGuid (base name: "subscriptionGuid")', function() {
      // uncomment below and update the code to test the property subscriptionGuid
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionName (base name: "subscriptionName")', function() {
      // uncomment below and update the code to test the property subscriptionName
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property term (base name: "term")', function() {
      // uncomment below and update the code to test the property term
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property unitOfMeasure (base name: "unitOfMeasure")', function() {
      // uncomment below and update the code to test the property unitOfMeasure
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

    it('should have the property unitPrice (base name: "unitPrice")', function() {
      // uncomment below and update the code to test the property unitPrice
      //var instance = new ConsumptionManagementClient.ModernUsageDetailProperties();
      //expect(instance).to.be();
    });

  });

}));
