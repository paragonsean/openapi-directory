/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-05-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ErrorDetails from './model/ErrorDetails';
import ErrorResponse from './model/ErrorResponse';
import Forecast from './model/Forecast';
import ForecastProperties from './model/ForecastProperties';
import ForecastPropertiesConfidenceLevelsInner from './model/ForecastPropertiesConfidenceLevelsInner';
import ForecastsListResult from './model/ForecastsListResult';
import MeterDetails from './model/MeterDetails';
import Operation from './model/Operation';
import OperationDisplay from './model/OperationDisplay';
import OperationListResult from './model/OperationListResult';
import PriceSheetModel from './model/PriceSheetModel';
import PriceSheetProperties from './model/PriceSheetProperties';
import PriceSheetResult from './model/PriceSheetResult';
import Resource from './model/Resource';
import UsageDetail from './model/UsageDetail';
import UsageDetailProperties from './model/UsageDetailProperties';
import UsageDetailsListResult from './model/UsageDetailsListResult';
import ForecastsApi from './api/ForecastsApi';
import OperationsApi from './api/OperationsApi';
import PriceSheetApi from './api/PriceSheetApi';
import UsageDetailsApi from './api/UsageDetailsApi';


/**
* Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ConsumptionManagementClient = require('index'); // See note below*.
* var xxxSvc = new ConsumptionManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ConsumptionManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ConsumptionManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ConsumptionManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-05-31
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ErrorDetails model constructor.
     * @property {module:model/ErrorDetails}
     */
    ErrorDetails,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The Forecast model constructor.
     * @property {module:model/Forecast}
     */
    Forecast,

    /**
     * The ForecastProperties model constructor.
     * @property {module:model/ForecastProperties}
     */
    ForecastProperties,

    /**
     * The ForecastPropertiesConfidenceLevelsInner model constructor.
     * @property {module:model/ForecastPropertiesConfidenceLevelsInner}
     */
    ForecastPropertiesConfidenceLevelsInner,

    /**
     * The ForecastsListResult model constructor.
     * @property {module:model/ForecastsListResult}
     */
    ForecastsListResult,

    /**
     * The MeterDetails model constructor.
     * @property {module:model/MeterDetails}
     */
    MeterDetails,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The PriceSheetModel model constructor.
     * @property {module:model/PriceSheetModel}
     */
    PriceSheetModel,

    /**
     * The PriceSheetProperties model constructor.
     * @property {module:model/PriceSheetProperties}
     */
    PriceSheetProperties,

    /**
     * The PriceSheetResult model constructor.
     * @property {module:model/PriceSheetResult}
     */
    PriceSheetResult,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The UsageDetail model constructor.
     * @property {module:model/UsageDetail}
     */
    UsageDetail,

    /**
     * The UsageDetailProperties model constructor.
     * @property {module:model/UsageDetailProperties}
     */
    UsageDetailProperties,

    /**
     * The UsageDetailsListResult model constructor.
     * @property {module:model/UsageDetailsListResult}
     */
    UsageDetailsListResult,

    /**
    * The ForecastsApi service constructor.
    * @property {module:api/ForecastsApi}
    */
    ForecastsApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi,

    /**
    * The PriceSheetApi service constructor.
    * @property {module:api/PriceSheetApi}
    */
    PriceSheetApi,

    /**
    * The UsageDetailsApi service constructor.
    * @property {module:api/UsageDetailsApi}
    */
    UsageDetailsApi
};
