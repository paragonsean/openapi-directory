# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.meter_details import MeterDetails
from openapi_server import util


class PriceSheetProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_period_id: str=None, currency_code: str=None, included_quantity: float=None, meter_details: MeterDetails=None, meter_id: str=None, part_number: str=None, unit_of_measure: str=None, unit_price: float=None):
        """PriceSheetProperties - a model defined in OpenAPI

        :param billing_period_id: The billing_period_id of this PriceSheetProperties.
        :param currency_code: The currency_code of this PriceSheetProperties.
        :param included_quantity: The included_quantity of this PriceSheetProperties.
        :param meter_details: The meter_details of this PriceSheetProperties.
        :param meter_id: The meter_id of this PriceSheetProperties.
        :param part_number: The part_number of this PriceSheetProperties.
        :param unit_of_measure: The unit_of_measure of this PriceSheetProperties.
        :param unit_price: The unit_price of this PriceSheetProperties.
        """
        self.openapi_types = {
            'billing_period_id': str,
            'currency_code': str,
            'included_quantity': float,
            'meter_details': MeterDetails,
            'meter_id': str,
            'part_number': str,
            'unit_of_measure': str,
            'unit_price': float
        }

        self.attribute_map = {
            'billing_period_id': 'billingPeriodId',
            'currency_code': 'currencyCode',
            'included_quantity': 'includedQuantity',
            'meter_details': 'meterDetails',
            'meter_id': 'meterId',
            'part_number': 'partNumber',
            'unit_of_measure': 'unitOfMeasure',
            'unit_price': 'unitPrice'
        }

        self._billing_period_id = billing_period_id
        self._currency_code = currency_code
        self._included_quantity = included_quantity
        self._meter_details = meter_details
        self._meter_id = meter_id
        self._part_number = part_number
        self._unit_of_measure = unit_of_measure
        self._unit_price = unit_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PriceSheetProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PriceSheetProperties of this PriceSheetProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_period_id(self):
        """Gets the billing_period_id of this PriceSheetProperties.

        The id of the billing period resource that the usage belongs to.

        :return: The billing_period_id of this PriceSheetProperties.
        :rtype: str
        """
        return self._billing_period_id

    @billing_period_id.setter
    def billing_period_id(self, billing_period_id):
        """Sets the billing_period_id of this PriceSheetProperties.

        The id of the billing period resource that the usage belongs to.

        :param billing_period_id: The billing_period_id of this PriceSheetProperties.
        :type billing_period_id: str
        """

        self._billing_period_id = billing_period_id

    @property
    def currency_code(self):
        """Gets the currency_code of this PriceSheetProperties.

        Currency Code

        :return: The currency_code of this PriceSheetProperties.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this PriceSheetProperties.

        Currency Code

        :param currency_code: The currency_code of this PriceSheetProperties.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def included_quantity(self):
        """Gets the included_quantity of this PriceSheetProperties.

        Included quality for an offer

        :return: The included_quantity of this PriceSheetProperties.
        :rtype: float
        """
        return self._included_quantity

    @included_quantity.setter
    def included_quantity(self, included_quantity):
        """Sets the included_quantity of this PriceSheetProperties.

        Included quality for an offer

        :param included_quantity: The included_quantity of this PriceSheetProperties.
        :type included_quantity: float
        """

        self._included_quantity = included_quantity

    @property
    def meter_details(self):
        """Gets the meter_details of this PriceSheetProperties.


        :return: The meter_details of this PriceSheetProperties.
        :rtype: MeterDetails
        """
        return self._meter_details

    @meter_details.setter
    def meter_details(self, meter_details):
        """Sets the meter_details of this PriceSheetProperties.


        :param meter_details: The meter_details of this PriceSheetProperties.
        :type meter_details: MeterDetails
        """

        self._meter_details = meter_details

    @property
    def meter_id(self):
        """Gets the meter_id of this PriceSheetProperties.

        The meter id

        :return: The meter_id of this PriceSheetProperties.
        :rtype: str
        """
        return self._meter_id

    @meter_id.setter
    def meter_id(self, meter_id):
        """Sets the meter_id of this PriceSheetProperties.

        The meter id

        :param meter_id: The meter_id of this PriceSheetProperties.
        :type meter_id: str
        """

        self._meter_id = meter_id

    @property
    def part_number(self):
        """Gets the part_number of this PriceSheetProperties.

        Part Number

        :return: The part_number of this PriceSheetProperties.
        :rtype: str
        """
        return self._part_number

    @part_number.setter
    def part_number(self, part_number):
        """Sets the part_number of this PriceSheetProperties.

        Part Number

        :param part_number: The part_number of this PriceSheetProperties.
        :type part_number: str
        """

        self._part_number = part_number

    @property
    def unit_of_measure(self):
        """Gets the unit_of_measure of this PriceSheetProperties.

        Unit of measure

        :return: The unit_of_measure of this PriceSheetProperties.
        :rtype: str
        """
        return self._unit_of_measure

    @unit_of_measure.setter
    def unit_of_measure(self, unit_of_measure):
        """Sets the unit_of_measure of this PriceSheetProperties.

        Unit of measure

        :param unit_of_measure: The unit_of_measure of this PriceSheetProperties.
        :type unit_of_measure: str
        """

        self._unit_of_measure = unit_of_measure

    @property
    def unit_price(self):
        """Gets the unit_price of this PriceSheetProperties.

        Unit Price

        :return: The unit_price of this PriceSheetProperties.
        :rtype: float
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price):
        """Sets the unit_price of this PriceSheetProperties.

        Unit Price

        :param unit_price: The unit_price of this PriceSheetProperties.
        :type unit_price: float
        """

        self._unit_price = unit_price
