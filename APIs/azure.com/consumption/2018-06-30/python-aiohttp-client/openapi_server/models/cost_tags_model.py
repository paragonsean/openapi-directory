# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cost_tag_properties import CostTagProperties
from openapi_server import util


class CostTagsModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost_tags: List[CostTagProperties]=None):
        """CostTagsModel - a model defined in OpenAPI

        :param cost_tags: The cost_tags of this CostTagsModel.
        """
        self.openapi_types = {
            'cost_tags': List[CostTagProperties]
        }

        self.attribute_map = {
            'cost_tags': 'costTags'
        }

        self._cost_tags = cost_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CostTagsModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CostTagsModel of this CostTagsModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost_tags(self):
        """Gets the cost_tags of this CostTagsModel.

        Cost tags.

        :return: The cost_tags of this CostTagsModel.
        :rtype: List[CostTagProperties]
        """
        return self._cost_tags

    @cost_tags.setter
    def cost_tags(self, cost_tags):
        """Sets the cost_tags of this CostTagsModel.

        Cost tags.

        :param cost_tags: The cost_tags of this CostTagsModel.
        :type cost_tags: List[CostTagProperties]
        """

        self._cost_tags = cost_tags
