/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-06-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CostTagProperties from './CostTagProperties';

/**
 * The CostTagsModel model module.
 * @module model/CostTagsModel
 * @version 2018-06-30
 */
class CostTagsModel {
    /**
     * Constructs a new <code>CostTagsModel</code>.
     * The cost tag.
     * @alias module:model/CostTagsModel
     */
    constructor() { 
        
        CostTagsModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CostTagsModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CostTagsModel} obj Optional instance to populate.
     * @return {module:model/CostTagsModel} The populated <code>CostTagsModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CostTagsModel();

            if (data.hasOwnProperty('costTags')) {
                obj['costTags'] = ApiClient.convertToType(data['costTags'], [CostTagProperties]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CostTagsModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CostTagsModel</code>.
     */
    static validateJSON(data) {
        if (data['costTags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['costTags'])) {
                throw new Error("Expected the field `costTags` to be an array in the JSON data but got " + data['costTags']);
            }
            // validate the optional field `costTags` (array)
            for (const item of data['costTags']) {
                CostTagProperties.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Cost tags.
 * @member {Array.<module:model/CostTagProperties>} costTags
 */
CostTagsModel.prototype['costTags'] = undefined;






export default CostTagsModel;

