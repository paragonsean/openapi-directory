/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-06-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BalancePropertiesAdjustmentDetailsInner from './BalancePropertiesAdjustmentDetailsInner';
import BalancePropertiesNewPurchasesDetailsInner from './BalancePropertiesNewPurchasesDetailsInner';

/**
 * The BalanceProperties model module.
 * @module model/BalanceProperties
 * @version 2018-06-30
 */
class BalanceProperties {
    /**
     * Constructs a new <code>BalanceProperties</code>.
     * The properties of the balance.
     * @alias module:model/BalanceProperties
     */
    constructor() { 
        
        BalanceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BalanceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BalanceProperties} obj Optional instance to populate.
     * @return {module:model/BalanceProperties} The populated <code>BalanceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BalanceProperties();

            if (data.hasOwnProperty('adjustmentDetails')) {
                obj['adjustmentDetails'] = ApiClient.convertToType(data['adjustmentDetails'], [BalancePropertiesAdjustmentDetailsInner]);
            }
            if (data.hasOwnProperty('adjustments')) {
                obj['adjustments'] = ApiClient.convertToType(data['adjustments'], 'Number');
            }
            if (data.hasOwnProperty('azureMarketplaceServiceCharges')) {
                obj['azureMarketplaceServiceCharges'] = ApiClient.convertToType(data['azureMarketplaceServiceCharges'], 'Number');
            }
            if (data.hasOwnProperty('beginningBalance')) {
                obj['beginningBalance'] = ApiClient.convertToType(data['beginningBalance'], 'Number');
            }
            if (data.hasOwnProperty('billingFrequency')) {
                obj['billingFrequency'] = ApiClient.convertToType(data['billingFrequency'], 'String');
            }
            if (data.hasOwnProperty('chargesBilledSeparately')) {
                obj['chargesBilledSeparately'] = ApiClient.convertToType(data['chargesBilledSeparately'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('endingBalance')) {
                obj['endingBalance'] = ApiClient.convertToType(data['endingBalance'], 'Number');
            }
            if (data.hasOwnProperty('newPurchases')) {
                obj['newPurchases'] = ApiClient.convertToType(data['newPurchases'], 'Number');
            }
            if (data.hasOwnProperty('newPurchasesDetails')) {
                obj['newPurchasesDetails'] = ApiClient.convertToType(data['newPurchasesDetails'], [BalancePropertiesNewPurchasesDetailsInner]);
            }
            if (data.hasOwnProperty('priceHidden')) {
                obj['priceHidden'] = ApiClient.convertToType(data['priceHidden'], 'Boolean');
            }
            if (data.hasOwnProperty('serviceOverage')) {
                obj['serviceOverage'] = ApiClient.convertToType(data['serviceOverage'], 'Number');
            }
            if (data.hasOwnProperty('totalOverage')) {
                obj['totalOverage'] = ApiClient.convertToType(data['totalOverage'], 'Number');
            }
            if (data.hasOwnProperty('totalUsage')) {
                obj['totalUsage'] = ApiClient.convertToType(data['totalUsage'], 'Number');
            }
            if (data.hasOwnProperty('utilized')) {
                obj['utilized'] = ApiClient.convertToType(data['utilized'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BalanceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BalanceProperties</code>.
     */
    static validateJSON(data) {
        if (data['adjustmentDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['adjustmentDetails'])) {
                throw new Error("Expected the field `adjustmentDetails` to be an array in the JSON data but got " + data['adjustmentDetails']);
            }
            // validate the optional field `adjustmentDetails` (array)
            for (const item of data['adjustmentDetails']) {
                BalancePropertiesAdjustmentDetailsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['billingFrequency'] && !(typeof data['billingFrequency'] === 'string' || data['billingFrequency'] instanceof String)) {
            throw new Error("Expected the field `billingFrequency` to be a primitive type in the JSON string but got " + data['billingFrequency']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        if (data['newPurchasesDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['newPurchasesDetails'])) {
                throw new Error("Expected the field `newPurchasesDetails` to be an array in the JSON data but got " + data['newPurchasesDetails']);
            }
            // validate the optional field `newPurchasesDetails` (array)
            for (const item of data['newPurchasesDetails']) {
                BalancePropertiesNewPurchasesDetailsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of Adjustments (Promo credit, SIE credit etc.).
 * @member {Array.<module:model/BalancePropertiesAdjustmentDetailsInner>} adjustmentDetails
 */
BalanceProperties.prototype['adjustmentDetails'] = undefined;

/**
 * Total adjustment amount.
 * @member {Number} adjustments
 */
BalanceProperties.prototype['adjustments'] = undefined;

/**
 * Total charges for Azure Marketplace.
 * @member {Number} azureMarketplaceServiceCharges
 */
BalanceProperties.prototype['azureMarketplaceServiceCharges'] = undefined;

/**
 * The beginning balance for the billing period.
 * @member {Number} beginningBalance
 */
BalanceProperties.prototype['beginningBalance'] = undefined;

/**
 * The billing frequency.
 * @member {module:model/BalanceProperties.BillingFrequencyEnum} billingFrequency
 */
BalanceProperties.prototype['billingFrequency'] = undefined;

/**
 * Charges Billed separately.
 * @member {Number} chargesBilledSeparately
 */
BalanceProperties.prototype['chargesBilledSeparately'] = undefined;

/**
 * The ISO currency in which the meter is charged, for example, USD.
 * @member {String} currency
 */
BalanceProperties.prototype['currency'] = undefined;

/**
 * The ending balance for the billing period (for open periods this will be updated daily).
 * @member {Number} endingBalance
 */
BalanceProperties.prototype['endingBalance'] = undefined;

/**
 * Total new purchase amount.
 * @member {Number} newPurchases
 */
BalanceProperties.prototype['newPurchases'] = undefined;

/**
 * List of new purchases.
 * @member {Array.<module:model/BalancePropertiesNewPurchasesDetailsInner>} newPurchasesDetails
 */
BalanceProperties.prototype['newPurchasesDetails'] = undefined;

/**
 * Price is hidden or not.
 * @member {Boolean} priceHidden
 */
BalanceProperties.prototype['priceHidden'] = undefined;

/**
 * Overage for Azure services.
 * @member {Number} serviceOverage
 */
BalanceProperties.prototype['serviceOverage'] = undefined;

/**
 * serviceOverage + chargesBilledSeparately.
 * @member {Number} totalOverage
 */
BalanceProperties.prototype['totalOverage'] = undefined;

/**
 * Azure service commitment + total Overage.
 * @member {Number} totalUsage
 */
BalanceProperties.prototype['totalUsage'] = undefined;

/**
 * Total Commitment usage.
 * @member {Number} utilized
 */
BalanceProperties.prototype['utilized'] = undefined;





/**
 * Allowed values for the <code>billingFrequency</code> property.
 * @enum {String}
 * @readonly
 */
BalanceProperties['BillingFrequencyEnum'] = {

    /**
     * value: "Month"
     * @const
     */
    "Month": "Month",

    /**
     * value: "Quarter"
     * @const
     */
    "Quarter": "Quarter",

    /**
     * value: "Year"
     * @const
     */
    "Year": "Year"
};



export default BalanceProperties;

