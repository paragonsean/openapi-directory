/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-06-30
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMarketplaceProperties.h
 *
 * The properties of the marketplace usage detail.
 */

#ifndef OAIMarketplaceProperties_H
#define OAIMarketplaceProperties_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMarketplaceProperties : public OAIObject {
public:
    OAIMarketplaceProperties();
    OAIMarketplaceProperties(QString json);
    ~OAIMarketplaceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountName() const;
    void setAccountName(const QString &account_name);
    bool is_account_name_Set() const;
    bool is_account_name_Valid() const;

    QString getAdditionalProperties() const;
    void setAdditionalProperties(const QString &additional_properties);
    bool is_additional_properties_Set() const;
    bool is_additional_properties_Valid() const;

    QString getBillingPeriodId() const;
    void setBillingPeriodId(const QString &billing_period_id);
    bool is_billing_period_id_Set() const;
    bool is_billing_period_id_Valid() const;

    double getConsumedQuantity() const;
    void setConsumedQuantity(const double &consumed_quantity);
    bool is_consumed_quantity_Set() const;
    bool is_consumed_quantity_Valid() const;

    QString getConsumedService() const;
    void setConsumedService(const QString &consumed_service);
    bool is_consumed_service_Set() const;
    bool is_consumed_service_Valid() const;

    QString getCostCenter() const;
    void setCostCenter(const QString &cost_center);
    bool is_cost_center_Set() const;
    bool is_cost_center_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDepartmentName() const;
    void setDepartmentName(const QString &department_name);
    bool is_department_name_Set() const;
    bool is_department_name_Valid() const;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QString getInstanceName() const;
    void setInstanceName(const QString &instance_name);
    bool is_instance_name_Set() const;
    bool is_instance_name_Valid() const;

    bool isIsEstimated() const;
    void setIsEstimated(const bool &is_estimated);
    bool is_is_estimated_Set() const;
    bool is_is_estimated_Valid() const;

    QString getMeterId() const;
    void setMeterId(const QString &meter_id);
    bool is_meter_id_Set() const;
    bool is_meter_id_Valid() const;

    QString getOfferName() const;
    void setOfferName(const QString &offer_name);
    bool is_offer_name_Set() const;
    bool is_offer_name_Valid() const;

    QString getOrderNumber() const;
    void setOrderNumber(const QString &order_number);
    bool is_order_number_Set() const;
    bool is_order_number_Valid() const;

    QString getPlanName() const;
    void setPlanName(const QString &plan_name);
    bool is_plan_name_Set() const;
    bool is_plan_name_Valid() const;

    double getPretaxCost() const;
    void setPretaxCost(const double &pretax_cost);
    bool is_pretax_cost_Set() const;
    bool is_pretax_cost_Valid() const;

    QString getPublisherName() const;
    void setPublisherName(const QString &publisher_name);
    bool is_publisher_name_Set() const;
    bool is_publisher_name_Valid() const;

    QString getResourceGroup() const;
    void setResourceGroup(const QString &resource_group);
    bool is_resource_group_Set() const;
    bool is_resource_group_Valid() const;

    double getResourceRate() const;
    void setResourceRate(const double &resource_rate);
    bool is_resource_rate_Set() const;
    bool is_resource_rate_Valid() const;

    QString getSubscriptionGuid() const;
    void setSubscriptionGuid(const QString &subscription_guid);
    bool is_subscription_guid_Set() const;
    bool is_subscription_guid_Valid() const;

    QString getSubscriptionName() const;
    void setSubscriptionName(const QString &subscription_name);
    bool is_subscription_name_Set() const;
    bool is_subscription_name_Valid() const;

    QString getUnitOfMeasure() const;
    void setUnitOfMeasure(const QString &unit_of_measure);
    bool is_unit_of_measure_Set() const;
    bool is_unit_of_measure_Valid() const;

    QDateTime getUsageEnd() const;
    void setUsageEnd(const QDateTime &usage_end);
    bool is_usage_end_Set() const;
    bool is_usage_end_Valid() const;

    QDateTime getUsageStart() const;
    void setUsageStart(const QDateTime &usage_start);
    bool is_usage_start_Set() const;
    bool is_usage_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_name;
    bool m_account_name_isSet;
    bool m_account_name_isValid;

    QString m_additional_properties;
    bool m_additional_properties_isSet;
    bool m_additional_properties_isValid;

    QString m_billing_period_id;
    bool m_billing_period_id_isSet;
    bool m_billing_period_id_isValid;

    double m_consumed_quantity;
    bool m_consumed_quantity_isSet;
    bool m_consumed_quantity_isValid;

    QString m_consumed_service;
    bool m_consumed_service_isSet;
    bool m_consumed_service_isValid;

    QString m_cost_center;
    bool m_cost_center_isSet;
    bool m_cost_center_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_department_name;
    bool m_department_name_isSet;
    bool m_department_name_isValid;

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QString m_instance_name;
    bool m_instance_name_isSet;
    bool m_instance_name_isValid;

    bool m_is_estimated;
    bool m_is_estimated_isSet;
    bool m_is_estimated_isValid;

    QString m_meter_id;
    bool m_meter_id_isSet;
    bool m_meter_id_isValid;

    QString m_offer_name;
    bool m_offer_name_isSet;
    bool m_offer_name_isValid;

    QString m_order_number;
    bool m_order_number_isSet;
    bool m_order_number_isValid;

    QString m_plan_name;
    bool m_plan_name_isSet;
    bool m_plan_name_isValid;

    double m_pretax_cost;
    bool m_pretax_cost_isSet;
    bool m_pretax_cost_isValid;

    QString m_publisher_name;
    bool m_publisher_name_isSet;
    bool m_publisher_name_isValid;

    QString m_resource_group;
    bool m_resource_group_isSet;
    bool m_resource_group_isValid;

    double m_resource_rate;
    bool m_resource_rate_isSet;
    bool m_resource_rate_isValid;

    QString m_subscription_guid;
    bool m_subscription_guid_isSet;
    bool m_subscription_guid_isValid;

    QString m_subscription_name;
    bool m_subscription_name_isSet;
    bool m_subscription_name_isValid;

    QString m_unit_of_measure;
    bool m_unit_of_measure_isSet;
    bool m_unit_of_measure_isValid;

    QDateTime m_usage_end;
    bool m_usage_end_isSet;
    bool m_usage_end_isValid;

    QDateTime m_usage_start;
    bool m_usage_start_isSet;
    bool m_usage_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMarketplaceProperties)

#endif // OAIMarketplaceProperties_H
