/*
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-06-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.Budget;
import org.openapitools.client.model.BudgetsListResult;
import org.openapitools.client.model.ErrorResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BudgetsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BudgetsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public BudgetsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for budgetsCreateOrUpdate
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param budgetName Budget Name. (required)
     * @param parameters Parameters supplied to the Create Budget operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsCreateOrUpdateCall(String apiVersion, String subscriptionId, String budgetName, Budget parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/budgets/{budgetName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "budgetName" + "}", localVarApiClient.escapeString(budgetName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call budgetsCreateOrUpdateValidateBeforeCall(String apiVersion, String subscriptionId, String budgetName, Budget parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling budgetsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling budgetsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'budgetName' is set
        if (budgetName == null) {
            throw new ApiException("Missing the required parameter 'budgetName' when calling budgetsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling budgetsCreateOrUpdate(Async)");
        }

        return budgetsCreateOrUpdateCall(apiVersion, subscriptionId, budgetName, parameters, _callback);

    }

    /**
     * 
     * The operation to create or update a budget. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param budgetName Budget Name. (required)
     * @param parameters Parameters supplied to the Create Budget operation. (required)
     * @return Budget
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public Budget budgetsCreateOrUpdate(String apiVersion, String subscriptionId, String budgetName, Budget parameters) throws ApiException {
        ApiResponse<Budget> localVarResp = budgetsCreateOrUpdateWithHttpInfo(apiVersion, subscriptionId, budgetName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The operation to create or update a budget. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param budgetName Budget Name. (required)
     * @param parameters Parameters supplied to the Create Budget operation. (required)
     * @return ApiResponse&lt;Budget&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<Budget> budgetsCreateOrUpdateWithHttpInfo(String apiVersion, String subscriptionId, String budgetName, Budget parameters) throws ApiException {
        okhttp3.Call localVarCall = budgetsCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, budgetName, parameters, null);
        Type localVarReturnType = new TypeToken<Budget>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The operation to create or update a budget. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param budgetName Budget Name. (required)
     * @param parameters Parameters supplied to the Create Budget operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsCreateOrUpdateAsync(String apiVersion, String subscriptionId, String budgetName, Budget parameters, final ApiCallback<Budget> _callback) throws ApiException {

        okhttp3.Call localVarCall = budgetsCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, budgetName, parameters, _callback);
        Type localVarReturnType = new TypeToken<Budget>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for budgetsCreateOrUpdateByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param budgetName Budget Name. (required)
     * @param parameters Parameters supplied to the Create Budget operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsCreateOrUpdateByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName, Budget parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Consumption/budgets/{budgetName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "budgetName" + "}", localVarApiClient.escapeString(budgetName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call budgetsCreateOrUpdateByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName, Budget parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling budgetsCreateOrUpdateByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling budgetsCreateOrUpdateByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling budgetsCreateOrUpdateByResourceGroupName(Async)");
        }

        // verify the required parameter 'budgetName' is set
        if (budgetName == null) {
            throw new ApiException("Missing the required parameter 'budgetName' when calling budgetsCreateOrUpdateByResourceGroupName(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling budgetsCreateOrUpdateByResourceGroupName(Async)");
        }

        return budgetsCreateOrUpdateByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, budgetName, parameters, _callback);

    }

    /**
     * 
     * The operation to create or update a budget. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param budgetName Budget Name. (required)
     * @param parameters Parameters supplied to the Create Budget operation. (required)
     * @return Budget
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public Budget budgetsCreateOrUpdateByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName, Budget parameters) throws ApiException {
        ApiResponse<Budget> localVarResp = budgetsCreateOrUpdateByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, budgetName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The operation to create or update a budget. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param budgetName Budget Name. (required)
     * @param parameters Parameters supplied to the Create Budget operation. (required)
     * @return ApiResponse&lt;Budget&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<Budget> budgetsCreateOrUpdateByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName, Budget parameters) throws ApiException {
        okhttp3.Call localVarCall = budgetsCreateOrUpdateByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, budgetName, parameters, null);
        Type localVarReturnType = new TypeToken<Budget>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The operation to create or update a budget. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param budgetName Budget Name. (required)
     * @param parameters Parameters supplied to the Create Budget operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsCreateOrUpdateByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName, Budget parameters, final ApiCallback<Budget> _callback) throws ApiException {

        okhttp3.Call localVarCall = budgetsCreateOrUpdateByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, budgetName, parameters, _callback);
        Type localVarReturnType = new TypeToken<Budget>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for budgetsDelete
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param budgetName Budget Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsDeleteCall(String apiVersion, String subscriptionId, String budgetName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/budgets/{budgetName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "budgetName" + "}", localVarApiClient.escapeString(budgetName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call budgetsDeleteValidateBeforeCall(String apiVersion, String subscriptionId, String budgetName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling budgetsDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling budgetsDelete(Async)");
        }

        // verify the required parameter 'budgetName' is set
        if (budgetName == null) {
            throw new ApiException("Missing the required parameter 'budgetName' when calling budgetsDelete(Async)");
        }

        return budgetsDeleteCall(apiVersion, subscriptionId, budgetName, _callback);

    }

    /**
     * 
     * The operation to delete a budget.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param budgetName Budget Name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public void budgetsDelete(String apiVersion, String subscriptionId, String budgetName) throws ApiException {
        budgetsDeleteWithHttpInfo(apiVersion, subscriptionId, budgetName);
    }

    /**
     * 
     * The operation to delete a budget.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param budgetName Budget Name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<Void> budgetsDeleteWithHttpInfo(String apiVersion, String subscriptionId, String budgetName) throws ApiException {
        okhttp3.Call localVarCall = budgetsDeleteValidateBeforeCall(apiVersion, subscriptionId, budgetName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * The operation to delete a budget.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param budgetName Budget Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsDeleteAsync(String apiVersion, String subscriptionId, String budgetName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = budgetsDeleteValidateBeforeCall(apiVersion, subscriptionId, budgetName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for budgetsDeleteByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param budgetName Budget Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsDeleteByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Consumption/budgets/{budgetName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "budgetName" + "}", localVarApiClient.escapeString(budgetName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call budgetsDeleteByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling budgetsDeleteByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling budgetsDeleteByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling budgetsDeleteByResourceGroupName(Async)");
        }

        // verify the required parameter 'budgetName' is set
        if (budgetName == null) {
            throw new ApiException("Missing the required parameter 'budgetName' when calling budgetsDeleteByResourceGroupName(Async)");
        }

        return budgetsDeleteByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, budgetName, _callback);

    }

    /**
     * 
     * The operation to delete a budget.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param budgetName Budget Name. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public void budgetsDeleteByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName) throws ApiException {
        budgetsDeleteByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, budgetName);
    }

    /**
     * 
     * The operation to delete a budget.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param budgetName Budget Name. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<Void> budgetsDeleteByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName) throws ApiException {
        okhttp3.Call localVarCall = budgetsDeleteByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, budgetName, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * The operation to delete a budget.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param budgetName Budget Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsDeleteByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = budgetsDeleteByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, budgetName, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for budgetsGet
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param budgetName Budget Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsGetCall(String apiVersion, String subscriptionId, String budgetName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/budgets/{budgetName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "budgetName" + "}", localVarApiClient.escapeString(budgetName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call budgetsGetValidateBeforeCall(String apiVersion, String subscriptionId, String budgetName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling budgetsGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling budgetsGet(Async)");
        }

        // verify the required parameter 'budgetName' is set
        if (budgetName == null) {
            throw new ApiException("Missing the required parameter 'budgetName' when calling budgetsGet(Async)");
        }

        return budgetsGetCall(apiVersion, subscriptionId, budgetName, _callback);

    }

    /**
     * 
     * Gets the budget for a subscription by budget name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param budgetName Budget Name. (required)
     * @return Budget
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public Budget budgetsGet(String apiVersion, String subscriptionId, String budgetName) throws ApiException {
        ApiResponse<Budget> localVarResp = budgetsGetWithHttpInfo(apiVersion, subscriptionId, budgetName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the budget for a subscription by budget name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param budgetName Budget Name. (required)
     * @return ApiResponse&lt;Budget&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<Budget> budgetsGetWithHttpInfo(String apiVersion, String subscriptionId, String budgetName) throws ApiException {
        okhttp3.Call localVarCall = budgetsGetValidateBeforeCall(apiVersion, subscriptionId, budgetName, null);
        Type localVarReturnType = new TypeToken<Budget>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the budget for a subscription by budget name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param budgetName Budget Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsGetAsync(String apiVersion, String subscriptionId, String budgetName, final ApiCallback<Budget> _callback) throws ApiException {

        okhttp3.Call localVarCall = budgetsGetValidateBeforeCall(apiVersion, subscriptionId, budgetName, _callback);
        Type localVarReturnType = new TypeToken<Budget>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for budgetsGetByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param budgetName Budget Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsGetByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Consumption/budgets/{budgetName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "budgetName" + "}", localVarApiClient.escapeString(budgetName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call budgetsGetByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling budgetsGetByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling budgetsGetByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling budgetsGetByResourceGroupName(Async)");
        }

        // verify the required parameter 'budgetName' is set
        if (budgetName == null) {
            throw new ApiException("Missing the required parameter 'budgetName' when calling budgetsGetByResourceGroupName(Async)");
        }

        return budgetsGetByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, budgetName, _callback);

    }

    /**
     * 
     * Gets the budget for a resource group under a subscription by budget name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param budgetName Budget Name. (required)
     * @return Budget
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public Budget budgetsGetByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName) throws ApiException {
        ApiResponse<Budget> localVarResp = budgetsGetByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, budgetName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the budget for a resource group under a subscription by budget name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param budgetName Budget Name. (required)
     * @return ApiResponse&lt;Budget&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<Budget> budgetsGetByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName) throws ApiException {
        okhttp3.Call localVarCall = budgetsGetByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, budgetName, null);
        Type localVarReturnType = new TypeToken<Budget>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the budget for a resource group under a subscription by budget name.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param budgetName Budget Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsGetByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, String budgetName, final ApiCallback<Budget> _callback) throws ApiException {

        okhttp3.Call localVarCall = budgetsGetByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, budgetName, _callback);
        Type localVarReturnType = new TypeToken<Budget>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for budgetsList
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsListCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/budgets"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call budgetsListValidateBeforeCall(String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling budgetsList(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling budgetsList(Async)");
        }

        return budgetsListCall(apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Lists all budgets for a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @return BudgetsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public BudgetsListResult budgetsList(String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<BudgetsListResult> localVarResp = budgetsListWithHttpInfo(apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all budgets for a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @return ApiResponse&lt;BudgetsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<BudgetsListResult> budgetsListWithHttpInfo(String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = budgetsListValidateBeforeCall(apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<BudgetsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all budgets for a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsListAsync(String apiVersion, String subscriptionId, final ApiCallback<BudgetsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = budgetsListValidateBeforeCall(apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<BudgetsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for budgetsListByResourceGroupName
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsListByResourceGroupNameCall(String apiVersion, String subscriptionId, String resourceGroupName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Consumption/budgets"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call budgetsListByResourceGroupNameValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling budgetsListByResourceGroupName(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling budgetsListByResourceGroupName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling budgetsListByResourceGroupName(Async)");
        }

        return budgetsListByResourceGroupNameCall(apiVersion, subscriptionId, resourceGroupName, _callback);

    }

    /**
     * 
     * Lists all budgets for a resource group under a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @return BudgetsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public BudgetsListResult budgetsListByResourceGroupName(String apiVersion, String subscriptionId, String resourceGroupName) throws ApiException {
        ApiResponse<BudgetsListResult> localVarResp = budgetsListByResourceGroupNameWithHttpInfo(apiVersion, subscriptionId, resourceGroupName);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all budgets for a resource group under a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @return ApiResponse&lt;BudgetsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<BudgetsListResult> budgetsListByResourceGroupNameWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName) throws ApiException {
        okhttp3.Call localVarCall = budgetsListByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, null);
        Type localVarReturnType = new TypeToken<BudgetsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all budgets for a resource group under a subscription.
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName Azure Resource Group Name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call budgetsListByResourceGroupNameAsync(String apiVersion, String subscriptionId, String resourceGroupName, final ApiCallback<BudgetsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = budgetsListByResourceGroupNameValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, _callback);
        Type localVarReturnType = new TypeToken<BudgetsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
