/*
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-06-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ReservationDetailsListResult;
import org.openapitools.client.model.ReservationSummariesListResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ReservedInstancesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ReservedInstancesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ReservedInstancesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for reservationsDetailsListByReservationOrder
     * @param reservationOrderId Order Id of the reservation (required)
     * @param $filter Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39;  (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call reservationsDetailsListByReservationOrderCall(String reservationOrderId, String $filter, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationDetails"
            .replace("{" + "reservationOrderId" + "}", localVarApiClient.escapeString(reservationOrderId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reservationsDetailsListByReservationOrderValidateBeforeCall(String reservationOrderId, String $filter, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'reservationOrderId' is set
        if (reservationOrderId == null) {
            throw new ApiException("Missing the required parameter 'reservationOrderId' when calling reservationsDetailsListByReservationOrder(Async)");
        }

        // verify the required parameter '$filter' is set
        if ($filter == null) {
            throw new ApiException("Missing the required parameter '$filter' when calling reservationsDetailsListByReservationOrder(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reservationsDetailsListByReservationOrder(Async)");
        }

        return reservationsDetailsListByReservationOrderCall(reservationOrderId, $filter, apiVersion, _callback);

    }

    /**
     * 
     * Lists the reservations details for provided date range.
     * @param reservationOrderId Order Id of the reservation (required)
     * @param $filter Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39;  (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @return ReservationDetailsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ReservationDetailsListResult reservationsDetailsListByReservationOrder(String reservationOrderId, String $filter, String apiVersion) throws ApiException {
        ApiResponse<ReservationDetailsListResult> localVarResp = reservationsDetailsListByReservationOrderWithHttpInfo(reservationOrderId, $filter, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the reservations details for provided date range.
     * @param reservationOrderId Order Id of the reservation (required)
     * @param $filter Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39;  (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @return ApiResponse&lt;ReservationDetailsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<ReservationDetailsListResult> reservationsDetailsListByReservationOrderWithHttpInfo(String reservationOrderId, String $filter, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = reservationsDetailsListByReservationOrderValidateBeforeCall(reservationOrderId, $filter, apiVersion, null);
        Type localVarReturnType = new TypeToken<ReservationDetailsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the reservations details for provided date range.
     * @param reservationOrderId Order Id of the reservation (required)
     * @param $filter Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39;  (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call reservationsDetailsListByReservationOrderAsync(String reservationOrderId, String $filter, String apiVersion, final ApiCallback<ReservationDetailsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reservationsDetailsListByReservationOrderValidateBeforeCall(reservationOrderId, $filter, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<ReservationDetailsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reservationsDetailsListByReservationOrderAndReservation
     * @param reservationOrderId Order Id of the reservation (required)
     * @param reservationId Id of the reservation (required)
     * @param $filter Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39;  (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call reservationsDetailsListByReservationOrderAndReservationCall(String reservationOrderId, String reservationId, String $filter, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationDetails"
            .replace("{" + "reservationOrderId" + "}", localVarApiClient.escapeString(reservationOrderId.toString()))
            .replace("{" + "reservationId" + "}", localVarApiClient.escapeString(reservationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reservationsDetailsListByReservationOrderAndReservationValidateBeforeCall(String reservationOrderId, String reservationId, String $filter, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'reservationOrderId' is set
        if (reservationOrderId == null) {
            throw new ApiException("Missing the required parameter 'reservationOrderId' when calling reservationsDetailsListByReservationOrderAndReservation(Async)");
        }

        // verify the required parameter 'reservationId' is set
        if (reservationId == null) {
            throw new ApiException("Missing the required parameter 'reservationId' when calling reservationsDetailsListByReservationOrderAndReservation(Async)");
        }

        // verify the required parameter '$filter' is set
        if ($filter == null) {
            throw new ApiException("Missing the required parameter '$filter' when calling reservationsDetailsListByReservationOrderAndReservation(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reservationsDetailsListByReservationOrderAndReservation(Async)");
        }

        return reservationsDetailsListByReservationOrderAndReservationCall(reservationOrderId, reservationId, $filter, apiVersion, _callback);

    }

    /**
     * 
     * Lists the reservations details for provided date range.
     * @param reservationOrderId Order Id of the reservation (required)
     * @param reservationId Id of the reservation (required)
     * @param $filter Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39;  (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @return ReservationDetailsListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ReservationDetailsListResult reservationsDetailsListByReservationOrderAndReservation(String reservationOrderId, String reservationId, String $filter, String apiVersion) throws ApiException {
        ApiResponse<ReservationDetailsListResult> localVarResp = reservationsDetailsListByReservationOrderAndReservationWithHttpInfo(reservationOrderId, reservationId, $filter, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the reservations details for provided date range.
     * @param reservationOrderId Order Id of the reservation (required)
     * @param reservationId Id of the reservation (required)
     * @param $filter Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39;  (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @return ApiResponse&lt;ReservationDetailsListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<ReservationDetailsListResult> reservationsDetailsListByReservationOrderAndReservationWithHttpInfo(String reservationOrderId, String reservationId, String $filter, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = reservationsDetailsListByReservationOrderAndReservationValidateBeforeCall(reservationOrderId, reservationId, $filter, apiVersion, null);
        Type localVarReturnType = new TypeToken<ReservationDetailsListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the reservations details for provided date range.
     * @param reservationOrderId Order Id of the reservation (required)
     * @param reservationId Id of the reservation (required)
     * @param $filter Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39;  (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call reservationsDetailsListByReservationOrderAndReservationAsync(String reservationOrderId, String reservationId, String $filter, String apiVersion, final ApiCallback<ReservationDetailsListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reservationsDetailsListByReservationOrderAndReservationValidateBeforeCall(reservationOrderId, reservationId, $filter, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<ReservationDetailsListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reservationsSummariesListByReservationOrder
     * @param reservationOrderId Order Id of the reservation (required)
     * @param grain Can be daily or monthly (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param $filter Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call reservationsSummariesListByReservationOrderCall(String reservationOrderId, String grain, String apiVersion, String $filter, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationSummaries"
            .replace("{" + "reservationOrderId" + "}", localVarApiClient.escapeString(reservationOrderId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (grain != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("grain", grain));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reservationsSummariesListByReservationOrderValidateBeforeCall(String reservationOrderId, String grain, String apiVersion, String $filter, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'reservationOrderId' is set
        if (reservationOrderId == null) {
            throw new ApiException("Missing the required parameter 'reservationOrderId' when calling reservationsSummariesListByReservationOrder(Async)");
        }

        // verify the required parameter 'grain' is set
        if (grain == null) {
            throw new ApiException("Missing the required parameter 'grain' when calling reservationsSummariesListByReservationOrder(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reservationsSummariesListByReservationOrder(Async)");
        }

        return reservationsSummariesListByReservationOrderCall(reservationOrderId, grain, apiVersion, $filter, _callback);

    }

    /**
     * 
     * Lists the reservations summaries for daily or monthly grain.
     * @param reservationOrderId Order Id of the reservation (required)
     * @param grain Can be daily or monthly (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param $filter Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39; (optional)
     * @return ReservationSummariesListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ReservationSummariesListResult reservationsSummariesListByReservationOrder(String reservationOrderId, String grain, String apiVersion, String $filter) throws ApiException {
        ApiResponse<ReservationSummariesListResult> localVarResp = reservationsSummariesListByReservationOrderWithHttpInfo(reservationOrderId, grain, apiVersion, $filter);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the reservations summaries for daily or monthly grain.
     * @param reservationOrderId Order Id of the reservation (required)
     * @param grain Can be daily or monthly (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param $filter Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39; (optional)
     * @return ApiResponse&lt;ReservationSummariesListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<ReservationSummariesListResult> reservationsSummariesListByReservationOrderWithHttpInfo(String reservationOrderId, String grain, String apiVersion, String $filter) throws ApiException {
        okhttp3.Call localVarCall = reservationsSummariesListByReservationOrderValidateBeforeCall(reservationOrderId, grain, apiVersion, $filter, null);
        Type localVarReturnType = new TypeToken<ReservationSummariesListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the reservations summaries for daily or monthly grain.
     * @param reservationOrderId Order Id of the reservation (required)
     * @param grain Can be daily or monthly (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param $filter Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call reservationsSummariesListByReservationOrderAsync(String reservationOrderId, String grain, String apiVersion, String $filter, final ApiCallback<ReservationSummariesListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reservationsSummariesListByReservationOrderValidateBeforeCall(reservationOrderId, grain, apiVersion, $filter, _callback);
        Type localVarReturnType = new TypeToken<ReservationSummariesListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for reservationsSummariesListByReservationOrderAndReservation
     * @param reservationOrderId Order Id of the reservation (required)
     * @param reservationId Id of the reservation (required)
     * @param grain Can be daily or monthly (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param $filter Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call reservationsSummariesListByReservationOrderAndReservationCall(String reservationOrderId, String reservationId, String grain, String apiVersion, String $filter, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationSummaries"
            .replace("{" + "reservationOrderId" + "}", localVarApiClient.escapeString(reservationOrderId.toString()))
            .replace("{" + "reservationId" + "}", localVarApiClient.escapeString(reservationId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (grain != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("grain", grain));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call reservationsSummariesListByReservationOrderAndReservationValidateBeforeCall(String reservationOrderId, String reservationId, String grain, String apiVersion, String $filter, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'reservationOrderId' is set
        if (reservationOrderId == null) {
            throw new ApiException("Missing the required parameter 'reservationOrderId' when calling reservationsSummariesListByReservationOrderAndReservation(Async)");
        }

        // verify the required parameter 'reservationId' is set
        if (reservationId == null) {
            throw new ApiException("Missing the required parameter 'reservationId' when calling reservationsSummariesListByReservationOrderAndReservation(Async)");
        }

        // verify the required parameter 'grain' is set
        if (grain == null) {
            throw new ApiException("Missing the required parameter 'grain' when calling reservationsSummariesListByReservationOrderAndReservation(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling reservationsSummariesListByReservationOrderAndReservation(Async)");
        }

        return reservationsSummariesListByReservationOrderAndReservationCall(reservationOrderId, reservationId, grain, apiVersion, $filter, _callback);

    }

    /**
     * 
     * Lists the reservations summaries for daily or monthly grain.
     * @param reservationOrderId Order Id of the reservation (required)
     * @param reservationId Id of the reservation (required)
     * @param grain Can be daily or monthly (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param $filter Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39; (optional)
     * @return ReservationSummariesListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ReservationSummariesListResult reservationsSummariesListByReservationOrderAndReservation(String reservationOrderId, String reservationId, String grain, String apiVersion, String $filter) throws ApiException {
        ApiResponse<ReservationSummariesListResult> localVarResp = reservationsSummariesListByReservationOrderAndReservationWithHttpInfo(reservationOrderId, reservationId, grain, apiVersion, $filter);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the reservations summaries for daily or monthly grain.
     * @param reservationOrderId Order Id of the reservation (required)
     * @param reservationId Id of the reservation (required)
     * @param grain Can be daily or monthly (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param $filter Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39; (optional)
     * @return ApiResponse&lt;ReservationSummariesListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public ApiResponse<ReservationSummariesListResult> reservationsSummariesListByReservationOrderAndReservationWithHttpInfo(String reservationOrderId, String reservationId, String grain, String apiVersion, String $filter) throws ApiException {
        okhttp3.Call localVarCall = reservationsSummariesListByReservationOrderAndReservationValidateBeforeCall(reservationOrderId, reservationId, grain, apiVersion, $filter, null);
        Type localVarReturnType = new TypeToken<ReservationSummariesListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the reservations summaries for daily or monthly grain.
     * @param reservationOrderId Order Id of the reservation (required)
     * @param reservationId Id of the reservation (required)
     * @param grain Can be daily or monthly (required)
     * @param apiVersion Version of the API to be used with the client request. The current version is 2018-06-30. (required)
     * @param $filter Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports &#39;le&#39; and  &#39;ge&#39; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     * 
     * @see <a href="https://docs.microsoft.com/en-us/rest/api/consumption/"> Documentation</a>
     */
    public okhttp3.Call reservationsSummariesListByReservationOrderAndReservationAsync(String reservationOrderId, String reservationId, String grain, String apiVersion, String $filter, final ApiCallback<ReservationSummariesListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = reservationsSummariesListByReservationOrderAndReservationValidateBeforeCall(reservationOrderId, reservationId, grain, apiVersion, $filter, _callback);
        Type localVarReturnType = new TypeToken<ReservationSummariesListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
