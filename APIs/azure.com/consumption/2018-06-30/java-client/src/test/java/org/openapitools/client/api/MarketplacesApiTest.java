/*
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2018-06-30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.MarketplacesListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MarketplacesApi
 */
@Disabled
public class MarketplacesApiTest {

    private final MarketplacesApi api = new MarketplacesApi();

    /**
     * Lists the marketplaces for a scope by subscriptionId and current billing period. Marketplaces are available via this API only for May 1, 2014 or later.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplacesListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String $filter = null;
        Integer $top = null;
        String $skiptoken = null;
        MarketplacesListResult response = api.marketplacesList(apiVersion, subscriptionId, $filter, $top, $skiptoken);
        // TODO: test validations
    }

    /**
     * Lists the marketplaces for a scope by billingAccountId and current billing period. Marketplaces are available via this API only for May 1, 2014 or later.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplacesListByBillingAccountTest() throws ApiException {
        String apiVersion = null;
        String billingAccountId = null;
        String $filter = null;
        Integer $top = null;
        String $skiptoken = null;
        MarketplacesListResult response = api.marketplacesListByBillingAccount(apiVersion, billingAccountId, $filter, $top, $skiptoken);
        // TODO: test validations
    }

    /**
     * Lists the marketplaces for a scope by billing period and subscriptionId. Marketplaces are available via this API only for May 1, 2014 or later.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplacesListByBillingPeriodTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String billingPeriodName = null;
        String $filter = null;
        Integer $top = null;
        String $skiptoken = null;
        MarketplacesListResult response = api.marketplacesListByBillingPeriod(apiVersion, subscriptionId, billingPeriodName, $filter, $top, $skiptoken);
        // TODO: test validations
    }

    /**
     * Lists the marketplaces for a scope by departmentId and current billing period. Marketplaces are available via this API only for May 1, 2014 or later.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplacesListByDepartmentTest() throws ApiException {
        String apiVersion = null;
        String departmentId = null;
        String $filter = null;
        Integer $top = null;
        String $skiptoken = null;
        MarketplacesListResult response = api.marketplacesListByDepartment(apiVersion, departmentId, $filter, $top, $skiptoken);
        // TODO: test validations
    }

    /**
     * Lists the marketplaces for a scope by enrollmentAccountId and current billing period. Marketplaces are available via this API only for May 1, 2014 or later.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplacesListByEnrollmentAccountTest() throws ApiException {
        String apiVersion = null;
        String enrollmentAccountId = null;
        String $filter = null;
        Integer $top = null;
        String $skiptoken = null;
        MarketplacesListResult response = api.marketplacesListByEnrollmentAccount(apiVersion, enrollmentAccountId, $filter, $top, $skiptoken);
        // TODO: test validations
    }

    /**
     * Lists the marketplaces for a scope by billing period and billingAccountId. Marketplaces are available via this API only for May 1, 2014 or later.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplacesListForBillingPeriodByBillingAccountTest() throws ApiException {
        String apiVersion = null;
        String billingAccountId = null;
        String billingPeriodName = null;
        String $filter = null;
        Integer $top = null;
        String $skiptoken = null;
        MarketplacesListResult response = api.marketplacesListForBillingPeriodByBillingAccount(apiVersion, billingAccountId, billingPeriodName, $filter, $top, $skiptoken);
        // TODO: test validations
    }

    /**
     * Lists the marketplaces for a scope by billing period and departmentId. Marketplaces are available via this API only for May 1, 2014 or later.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplacesListForBillingPeriodByDepartmentTest() throws ApiException {
        String apiVersion = null;
        String departmentId = null;
        String billingPeriodName = null;
        String $filter = null;
        Integer $top = null;
        String $skiptoken = null;
        MarketplacesListResult response = api.marketplacesListForBillingPeriodByDepartment(apiVersion, departmentId, billingPeriodName, $filter, $top, $skiptoken);
        // TODO: test validations
    }

    /**
     * Lists the marketplaces for a scope by billing period and enrollmentAccountId. Marketplaces are available via this API only for May 1, 2014 or later.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplacesListForBillingPeriodByEnrollmentAccountTest() throws ApiException {
        String apiVersion = null;
        String enrollmentAccountId = null;
        String billingPeriodName = null;
        String $filter = null;
        Integer $top = null;
        String $skiptoken = null;
        MarketplacesListResult response = api.marketplacesListForBillingPeriodByEnrollmentAccount(apiVersion, enrollmentAccountId, billingPeriodName, $filter, $top, $skiptoken);
        // TODO: test validations
    }

}
