/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ManagementGroupAggregatedCostResult from './ManagementGroupAggregatedCostResult';

/**
 * The ManagementGroupAggregatedCostProperties model module.
 * @module model/ManagementGroupAggregatedCostProperties
 * @version 2019-01-01
 */
class ManagementGroupAggregatedCostProperties {
    /**
     * Constructs a new <code>ManagementGroupAggregatedCostProperties</code>.
     * The properties of the Management Group Aggregated Cost.
     * @alias module:model/ManagementGroupAggregatedCostProperties
     */
    constructor() { 
        
        ManagementGroupAggregatedCostProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagementGroupAggregatedCostProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagementGroupAggregatedCostProperties} obj Optional instance to populate.
     * @return {module:model/ManagementGroupAggregatedCostProperties} The populated <code>ManagementGroupAggregatedCostProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagementGroupAggregatedCostProperties();

            if (data.hasOwnProperty('azureCharges')) {
                obj['azureCharges'] = ApiClient.convertToType(data['azureCharges'], 'Number');
            }
            if (data.hasOwnProperty('billingPeriodId')) {
                obj['billingPeriodId'] = ApiClient.convertToType(data['billingPeriodId'], 'String');
            }
            if (data.hasOwnProperty('chargesBilledSeparately')) {
                obj['chargesBilledSeparately'] = ApiClient.convertToType(data['chargesBilledSeparately'], 'Number');
            }
            if (data.hasOwnProperty('children')) {
                obj['children'] = ApiClient.convertToType(data['children'], [ManagementGroupAggregatedCostResult]);
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('excludedSubscriptions')) {
                obj['excludedSubscriptions'] = ApiClient.convertToType(data['excludedSubscriptions'], ['String']);
            }
            if (data.hasOwnProperty('includedSubscriptions')) {
                obj['includedSubscriptions'] = ApiClient.convertToType(data['includedSubscriptions'], ['String']);
            }
            if (data.hasOwnProperty('marketplaceCharges')) {
                obj['marketplaceCharges'] = ApiClient.convertToType(data['marketplaceCharges'], 'Number');
            }
            if (data.hasOwnProperty('usageEnd')) {
                obj['usageEnd'] = ApiClient.convertToType(data['usageEnd'], 'Date');
            }
            if (data.hasOwnProperty('usageStart')) {
                obj['usageStart'] = ApiClient.convertToType(data['usageStart'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagementGroupAggregatedCostProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagementGroupAggregatedCostProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['billingPeriodId'] && !(typeof data['billingPeriodId'] === 'string' || data['billingPeriodId'] instanceof String)) {
            throw new Error("Expected the field `billingPeriodId` to be a primitive type in the JSON string but got " + data['billingPeriodId']);
        }
        if (data['children']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['children'])) {
                throw new Error("Expected the field `children` to be an array in the JSON data but got " + data['children']);
            }
            // validate the optional field `children` (array)
            for (const item of data['children']) {
                ManagementGroupAggregatedCostResult.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['excludedSubscriptions'])) {
            throw new Error("Expected the field `excludedSubscriptions` to be an array in the JSON data but got " + data['excludedSubscriptions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includedSubscriptions'])) {
            throw new Error("Expected the field `includedSubscriptions` to be an array in the JSON data but got " + data['includedSubscriptions']);
        }

        return true;
    }


}



/**
 * Azure Charges.
 * @member {Number} azureCharges
 */
ManagementGroupAggregatedCostProperties.prototype['azureCharges'] = undefined;

/**
 * The id of the billing period resource that the aggregated cost belongs to.
 * @member {String} billingPeriodId
 */
ManagementGroupAggregatedCostProperties.prototype['billingPeriodId'] = undefined;

/**
 * Charges Billed Separately.
 * @member {Number} chargesBilledSeparately
 */
ManagementGroupAggregatedCostProperties.prototype['chargesBilledSeparately'] = undefined;

/**
 * Children of a management group
 * @member {Array.<module:model/ManagementGroupAggregatedCostResult>} children
 */
ManagementGroupAggregatedCostProperties.prototype['children'] = undefined;

/**
 * The ISO currency in which the meter is charged, for example, USD.
 * @member {String} currency
 */
ManagementGroupAggregatedCostProperties.prototype['currency'] = undefined;

/**
 * List of subscription Guids excluded from the calculation of aggregated cost
 * @member {Array.<String>} excludedSubscriptions
 */
ManagementGroupAggregatedCostProperties.prototype['excludedSubscriptions'] = undefined;

/**
 * List of subscription Guids included in the calculation of aggregated cost
 * @member {Array.<String>} includedSubscriptions
 */
ManagementGroupAggregatedCostProperties.prototype['includedSubscriptions'] = undefined;

/**
 * Marketplace Charges.
 * @member {Number} marketplaceCharges
 */
ManagementGroupAggregatedCostProperties.prototype['marketplaceCharges'] = undefined;

/**
 * The end of the date time range covered by the aggregated cost.
 * @member {Date} usageEnd
 */
ManagementGroupAggregatedCostProperties.prototype['usageEnd'] = undefined;

/**
 * The start of the date time range covered by aggregated cost.
 * @member {Date} usageStart
 */
ManagementGroupAggregatedCostProperties.prototype['usageStart'] = undefined;






export default ManagementGroupAggregatedCostProperties;

