/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ConsumptionManagementClient);
  }
}(this, function(expect, ConsumptionManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ConsumptionManagementClient.ReservationTransactionProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReservationTransactionProperties', function() {
    it('should create an instance of ReservationTransactionProperties', function() {
      // uncomment below and update the code to test ReservationTransactionProperties
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be.a(ConsumptionManagementClient.ReservationTransactionProperties);
    });

    it('should have the property accountName (base name: "accountName")', function() {
      // uncomment below and update the code to test the property accountName
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property accountOwnerEmail (base name: "accountOwnerEmail")', function() {
      // uncomment below and update the code to test the property accountOwnerEmail
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property armSkuName (base name: "armSkuName")', function() {
      // uncomment below and update the code to test the property armSkuName
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property costCenter (base name: "costCenter")', function() {
      // uncomment below and update the code to test the property costCenter
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property currentEnrollment (base name: "currentEnrollment")', function() {
      // uncomment below and update the code to test the property currentEnrollment
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property departmentName (base name: "departmentName")', function() {
      // uncomment below and update the code to test the property departmentName
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property eventDate (base name: "eventDate")', function() {
      // uncomment below and update the code to test the property eventDate
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property eventType (base name: "eventType")', function() {
      // uncomment below and update the code to test the property eventType
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property purchasingEnrollment (base name: "purchasingEnrollment")', function() {
      // uncomment below and update the code to test the property purchasingEnrollment
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property purchasingSubscriptionGuid (base name: "purchasingSubscriptionGuid")', function() {
      // uncomment below and update the code to test the property purchasingSubscriptionGuid
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property purchasingSubscriptionName (base name: "purchasingSubscriptionName")', function() {
      // uncomment below and update the code to test the property purchasingSubscriptionName
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property reservationOrderId (base name: "reservationOrderId")', function() {
      // uncomment below and update the code to test the property reservationOrderId
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property reservationOrderName (base name: "reservationOrderName")', function() {
      // uncomment below and update the code to test the property reservationOrderName
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

    it('should have the property term (base name: "term")', function() {
      // uncomment below and update the code to test the property term
      //var instance = new ConsumptionManagementClient.ReservationTransactionProperties();
      //expect(instance).to.be();
    });

  });

}));
