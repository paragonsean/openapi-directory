/**
 * ConsumptionManagementClient
 * Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ReservationRecommendationsListResult from '../model/ReservationRecommendationsListResult';

/**
* ReservationRecommendations service.
* @module api/ReservationRecommendationsApi
* @version 2019-06-01
*/
export default class ReservationRecommendationsApi {

    /**
    * Constructs a new ReservationRecommendationsApi. 
    * @alias module:api/ReservationRecommendationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the reservationRecommendationsList operation.
     * @callback module:api/ReservationRecommendationsApi~reservationRecommendationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationRecommendationsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of recommendations for purchasing reserved instances.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-06-01.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter reservationRecommendations by properties/scope and properties/lookBackPeriod.
     * @param {module:api/ReservationRecommendationsApi~reservationRecommendationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationRecommendationsListResult}
     */
    reservationRecommendationsList(apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationRecommendationsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling reservationRecommendationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$filter': opts['filter'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReservationRecommendationsListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/reservationRecommendations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reservationRecommendationsListByBillingAccountId operation.
     * @callback module:api/ReservationRecommendationsApi~reservationRecommendationsListByBillingAccountIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationRecommendationsListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of recommendations for purchasing reserved instances on billing account scope
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2019-06-01.
     * @param {String} billingAccountId BillingAccount ID
     * @param {Object} opts Optional parameters
     * @param {String} [filter] May be used to filter reservationRecommendations by properties/scope and properties/lookBackPeriod.
     * @param {module:api/ReservationRecommendationsApi~reservationRecommendationsListByBillingAccountIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationRecommendationsListResult}
     */
    reservationRecommendationsListByBillingAccountId(apiVersion, billingAccountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationRecommendationsListByBillingAccountId");
      }
      // verify the required parameter 'billingAccountId' is set
      if (billingAccountId === undefined || billingAccountId === null) {
        throw new Error("Missing the required parameter 'billingAccountId' when calling reservationRecommendationsListByBillingAccountId");
      }

      let pathParams = {
        'billingAccountId': billingAccountId
      };
      let queryParams = {
        '$filter': opts['filter'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReservationRecommendationsListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/microsoft.consumption/ReservationRecommendations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
