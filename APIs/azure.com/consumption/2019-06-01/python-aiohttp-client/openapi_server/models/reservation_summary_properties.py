# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReservationSummaryProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avg_utilization_percentage: float=None, kind: str=None, max_utilization_percentage: float=None, min_utilization_percentage: float=None, purchased_quantity: float=None, remaining_quantity: float=None, reservation_id: str=None, reservation_order_id: str=None, reserved_hours: float=None, sku_name: str=None, total_reserved_quantity: float=None, usage_date: datetime=None, used_hours: float=None, used_quantity: float=None, utilized_percentage: float=None):
        """ReservationSummaryProperties - a model defined in OpenAPI

        :param avg_utilization_percentage: The avg_utilization_percentage of this ReservationSummaryProperties.
        :param kind: The kind of this ReservationSummaryProperties.
        :param max_utilization_percentage: The max_utilization_percentage of this ReservationSummaryProperties.
        :param min_utilization_percentage: The min_utilization_percentage of this ReservationSummaryProperties.
        :param purchased_quantity: The purchased_quantity of this ReservationSummaryProperties.
        :param remaining_quantity: The remaining_quantity of this ReservationSummaryProperties.
        :param reservation_id: The reservation_id of this ReservationSummaryProperties.
        :param reservation_order_id: The reservation_order_id of this ReservationSummaryProperties.
        :param reserved_hours: The reserved_hours of this ReservationSummaryProperties.
        :param sku_name: The sku_name of this ReservationSummaryProperties.
        :param total_reserved_quantity: The total_reserved_quantity of this ReservationSummaryProperties.
        :param usage_date: The usage_date of this ReservationSummaryProperties.
        :param used_hours: The used_hours of this ReservationSummaryProperties.
        :param used_quantity: The used_quantity of this ReservationSummaryProperties.
        :param utilized_percentage: The utilized_percentage of this ReservationSummaryProperties.
        """
        self.openapi_types = {
            'avg_utilization_percentage': float,
            'kind': str,
            'max_utilization_percentage': float,
            'min_utilization_percentage': float,
            'purchased_quantity': float,
            'remaining_quantity': float,
            'reservation_id': str,
            'reservation_order_id': str,
            'reserved_hours': float,
            'sku_name': str,
            'total_reserved_quantity': float,
            'usage_date': datetime,
            'used_hours': float,
            'used_quantity': float,
            'utilized_percentage': float
        }

        self.attribute_map = {
            'avg_utilization_percentage': 'avgUtilizationPercentage',
            'kind': 'kind',
            'max_utilization_percentage': 'maxUtilizationPercentage',
            'min_utilization_percentage': 'minUtilizationPercentage',
            'purchased_quantity': 'purchasedQuantity',
            'remaining_quantity': 'remainingQuantity',
            'reservation_id': 'reservationId',
            'reservation_order_id': 'reservationOrderId',
            'reserved_hours': 'reservedHours',
            'sku_name': 'skuName',
            'total_reserved_quantity': 'totalReservedQuantity',
            'usage_date': 'usageDate',
            'used_hours': 'usedHours',
            'used_quantity': 'usedQuantity',
            'utilized_percentage': 'utilizedPercentage'
        }

        self._avg_utilization_percentage = avg_utilization_percentage
        self._kind = kind
        self._max_utilization_percentage = max_utilization_percentage
        self._min_utilization_percentage = min_utilization_percentage
        self._purchased_quantity = purchased_quantity
        self._remaining_quantity = remaining_quantity
        self._reservation_id = reservation_id
        self._reservation_order_id = reservation_order_id
        self._reserved_hours = reserved_hours
        self._sku_name = sku_name
        self._total_reserved_quantity = total_reserved_quantity
        self._usage_date = usage_date
        self._used_hours = used_hours
        self._used_quantity = used_quantity
        self._utilized_percentage = utilized_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReservationSummaryProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReservationSummaryProperties of this ReservationSummaryProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avg_utilization_percentage(self):
        """Gets the avg_utilization_percentage of this ReservationSummaryProperties.

        This is average utilization for the entire time range. (day or month depending on the grain)

        :return: The avg_utilization_percentage of this ReservationSummaryProperties.
        :rtype: float
        """
        return self._avg_utilization_percentage

    @avg_utilization_percentage.setter
    def avg_utilization_percentage(self, avg_utilization_percentage):
        """Sets the avg_utilization_percentage of this ReservationSummaryProperties.

        This is average utilization for the entire time range. (day or month depending on the grain)

        :param avg_utilization_percentage: The avg_utilization_percentage of this ReservationSummaryProperties.
        :type avg_utilization_percentage: float
        """

        self._avg_utilization_percentage = avg_utilization_percentage

    @property
    def kind(self):
        """Gets the kind of this ReservationSummaryProperties.

        The reservation kind.

        :return: The kind of this ReservationSummaryProperties.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ReservationSummaryProperties.

        The reservation kind.

        :param kind: The kind of this ReservationSummaryProperties.
        :type kind: str
        """

        self._kind = kind

    @property
    def max_utilization_percentage(self):
        """Gets the max_utilization_percentage of this ReservationSummaryProperties.

        This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 100%, this field will return 100% for that day.

        :return: The max_utilization_percentage of this ReservationSummaryProperties.
        :rtype: float
        """
        return self._max_utilization_percentage

    @max_utilization_percentage.setter
    def max_utilization_percentage(self, max_utilization_percentage):
        """Sets the max_utilization_percentage of this ReservationSummaryProperties.

        This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 100%, this field will return 100% for that day.

        :param max_utilization_percentage: The max_utilization_percentage of this ReservationSummaryProperties.
        :type max_utilization_percentage: float
        """

        self._max_utilization_percentage = max_utilization_percentage

    @property
    def min_utilization_percentage(self):
        """Gets the min_utilization_percentage of this ReservationSummaryProperties.

        This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 10%, this field will return 10% for that day

        :return: The min_utilization_percentage of this ReservationSummaryProperties.
        :rtype: float
        """
        return self._min_utilization_percentage

    @min_utilization_percentage.setter
    def min_utilization_percentage(self, min_utilization_percentage):
        """Sets the min_utilization_percentage of this ReservationSummaryProperties.

        This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 10%, this field will return 10% for that day

        :param min_utilization_percentage: The min_utilization_percentage of this ReservationSummaryProperties.
        :type min_utilization_percentage: float
        """

        self._min_utilization_percentage = min_utilization_percentage

    @property
    def purchased_quantity(self):
        """Gets the purchased_quantity of this ReservationSummaryProperties.

        This is the purchased quantity for the reservationId.

        :return: The purchased_quantity of this ReservationSummaryProperties.
        :rtype: float
        """
        return self._purchased_quantity

    @purchased_quantity.setter
    def purchased_quantity(self, purchased_quantity):
        """Sets the purchased_quantity of this ReservationSummaryProperties.

        This is the purchased quantity for the reservationId.

        :param purchased_quantity: The purchased_quantity of this ReservationSummaryProperties.
        :type purchased_quantity: float
        """

        self._purchased_quantity = purchased_quantity

    @property
    def remaining_quantity(self):
        """Gets the remaining_quantity of this ReservationSummaryProperties.

        This is the remaining quantity for the reservationId.

        :return: The remaining_quantity of this ReservationSummaryProperties.
        :rtype: float
        """
        return self._remaining_quantity

    @remaining_quantity.setter
    def remaining_quantity(self, remaining_quantity):
        """Sets the remaining_quantity of this ReservationSummaryProperties.

        This is the remaining quantity for the reservationId.

        :param remaining_quantity: The remaining_quantity of this ReservationSummaryProperties.
        :type remaining_quantity: float
        """

        self._remaining_quantity = remaining_quantity

    @property
    def reservation_id(self):
        """Gets the reservation_id of this ReservationSummaryProperties.

        The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.

        :return: The reservation_id of this ReservationSummaryProperties.
        :rtype: str
        """
        return self._reservation_id

    @reservation_id.setter
    def reservation_id(self, reservation_id):
        """Sets the reservation_id of this ReservationSummaryProperties.

        The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.

        :param reservation_id: The reservation_id of this ReservationSummaryProperties.
        :type reservation_id: str
        """

        self._reservation_id = reservation_id

    @property
    def reservation_order_id(self):
        """Gets the reservation_order_id of this ReservationSummaryProperties.

        The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.

        :return: The reservation_order_id of this ReservationSummaryProperties.
        :rtype: str
        """
        return self._reservation_order_id

    @reservation_order_id.setter
    def reservation_order_id(self, reservation_order_id):
        """Sets the reservation_order_id of this ReservationSummaryProperties.

        The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.

        :param reservation_order_id: The reservation_order_id of this ReservationSummaryProperties.
        :type reservation_order_id: str
        """

        self._reservation_order_id = reservation_order_id

    @property
    def reserved_hours(self):
        """Gets the reserved_hours of this ReservationSummaryProperties.

        This is the total hours reserved. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days

        :return: The reserved_hours of this ReservationSummaryProperties.
        :rtype: float
        """
        return self._reserved_hours

    @reserved_hours.setter
    def reserved_hours(self, reserved_hours):
        """Sets the reserved_hours of this ReservationSummaryProperties.

        This is the total hours reserved. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days

        :param reserved_hours: The reserved_hours of this ReservationSummaryProperties.
        :type reserved_hours: float
        """

        self._reserved_hours = reserved_hours

    @property
    def sku_name(self):
        """Gets the sku_name of this ReservationSummaryProperties.

        This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.

        :return: The sku_name of this ReservationSummaryProperties.
        :rtype: str
        """
        return self._sku_name

    @sku_name.setter
    def sku_name(self, sku_name):
        """Sets the sku_name of this ReservationSummaryProperties.

        This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.

        :param sku_name: The sku_name of this ReservationSummaryProperties.
        :type sku_name: str
        """

        self._sku_name = sku_name

    @property
    def total_reserved_quantity(self):
        """Gets the total_reserved_quantity of this ReservationSummaryProperties.

        This is the total count of instances that are reserved for the reservationId.

        :return: The total_reserved_quantity of this ReservationSummaryProperties.
        :rtype: float
        """
        return self._total_reserved_quantity

    @total_reserved_quantity.setter
    def total_reserved_quantity(self, total_reserved_quantity):
        """Sets the total_reserved_quantity of this ReservationSummaryProperties.

        This is the total count of instances that are reserved for the reservationId.

        :param total_reserved_quantity: The total_reserved_quantity of this ReservationSummaryProperties.
        :type total_reserved_quantity: float
        """

        self._total_reserved_quantity = total_reserved_quantity

    @property
    def usage_date(self):
        """Gets the usage_date of this ReservationSummaryProperties.

        Data corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.

        :return: The usage_date of this ReservationSummaryProperties.
        :rtype: datetime
        """
        return self._usage_date

    @usage_date.setter
    def usage_date(self, usage_date):
        """Sets the usage_date of this ReservationSummaryProperties.

        Data corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.

        :param usage_date: The usage_date of this ReservationSummaryProperties.
        :type usage_date: datetime
        """

        self._usage_date = usage_date

    @property
    def used_hours(self):
        """Gets the used_hours of this ReservationSummaryProperties.

        Total used hours by the reservation

        :return: The used_hours of this ReservationSummaryProperties.
        :rtype: float
        """
        return self._used_hours

    @used_hours.setter
    def used_hours(self, used_hours):
        """Sets the used_hours of this ReservationSummaryProperties.

        Total used hours by the reservation

        :param used_hours: The used_hours of this ReservationSummaryProperties.
        :type used_hours: float
        """

        self._used_hours = used_hours

    @property
    def used_quantity(self):
        """Gets the used_quantity of this ReservationSummaryProperties.

        This is the used quantity for the reservationId.

        :return: The used_quantity of this ReservationSummaryProperties.
        :rtype: float
        """
        return self._used_quantity

    @used_quantity.setter
    def used_quantity(self, used_quantity):
        """Sets the used_quantity of this ReservationSummaryProperties.

        This is the used quantity for the reservationId.

        :param used_quantity: The used_quantity of this ReservationSummaryProperties.
        :type used_quantity: float
        """

        self._used_quantity = used_quantity

    @property
    def utilized_percentage(self):
        """Gets the utilized_percentage of this ReservationSummaryProperties.

        This is the utilized percentage for the reservation Id.

        :return: The utilized_percentage of this ReservationSummaryProperties.
        :rtype: float
        """
        return self._utilized_percentage

    @utilized_percentage.setter
    def utilized_percentage(self, utilized_percentage):
        """Sets the utilized_percentage of this ReservationSummaryProperties.

        This is the utilized percentage for the reservation Id.

        :param utilized_percentage: The utilized_percentage of this ReservationSummaryProperties.
        :type utilized_percentage: float
        """

        self._utilized_percentage = utilized_percentage
