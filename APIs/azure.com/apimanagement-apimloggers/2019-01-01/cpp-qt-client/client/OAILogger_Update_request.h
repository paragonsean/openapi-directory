/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on logger entity Azure API Management deployment.The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure EventHub.
 *
 * The version of the OpenAPI document: 2019-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogger_Update_request.h
 *
 * Logger update contract.
 */

#ifndef OAILogger_Update_request_H
#define OAILogger_Update_request_H

#include <QJsonObject>

#include "OAILogger_Update_request_properties.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogger_Update_request_properties;

class OAILogger_Update_request : public OAIObject {
public:
    OAILogger_Update_request();
    OAILogger_Update_request(QString json);
    ~OAILogger_Update_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILogger_Update_request_properties getProperties() const;
    void setProperties(const OAILogger_Update_request_properties &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILogger_Update_request_properties m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogger_Update_request)

#endif // OAILogger_Update_request_H
