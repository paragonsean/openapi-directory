/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on logger entity Azure API Management deployment.The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure EventHub.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogger_ListByService_default_response.h
 *
 * Error Response.
 */

#ifndef OAILogger_ListByService_default_response_H
#define OAILogger_ListByService_default_response_H

#include <QJsonObject>

#include "OAILogger_ListByService_default_response_error.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogger_ListByService_default_response_error;

class OAILogger_ListByService_default_response : public OAIObject {
public:
    OAILogger_ListByService_default_response();
    OAILogger_ListByService_default_response(QString json);
    ~OAILogger_ListByService_default_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILogger_ListByService_default_response_error getError() const;
    void setError(const OAILogger_ListByService_default_response_error &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILogger_ListByService_default_response_error m_error;
    bool m_error_isSet;
    bool m_error_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogger_ListByService_default_response)

#endif // OAILogger_ListByService_default_response_H
