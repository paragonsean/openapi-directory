openapi: 3.0.1
info:
  description: Use these REST APIs for performing operations on logger entity Azure
    API Management deployment.The Logger entity in API Management represents an event
    sink that you can use to log API Management events. Currently the Logger entity
    supports logging API Management events to Azure EventHub.
  title: ApiManagementClient
  version: 2019-12-01-preview
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2019-12-01-preview/apimloggers.json
    version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: apimanagement-apimloggers
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers
  : get:
      description: Lists a collection of loggers in the specified service instance.
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-log-event-hubs
      operationId: Logger_ListByService
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the API Management service.
        in: path
        name: serviceName
        required: true
        schema:
          maxLength: 50
          minLength: 1
          pattern: "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "|   Field     |     Usage     |     Supported operators    \
          \ |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>|\
          \ name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith,\
          \ endswith | </br>| description | filter | ge, le, eq, ne, gt, lt | substringof,\
          \ contains, startswith, endswith | </br>| loggerType | filter | eq |   \
          \  | </br>| resourceId | filter | ge, le, eq, ne, gt, lt | substringof,\
          \ contains, startswith, endswith | </br>"
        in: query
        name: $filter
        schema:
          type: string
      - description: Number of records to return.
        in: query
        name: $top
        schema:
          format: int32
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Number of records to skip.
        in: query
        name: $skip
        schema:
          format: int32
          minimum: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logger_ListByService_200_response'
          description: Lists a collection of Logger entities.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logger_ListByService_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Logger
      x-ms-examples:
        ApiManagementListLoggers:
          parameters:
            api-version: 2019-12-01-preview
            resourceGroupName: rg1
            serviceName: apimService1
            subscriptionId: subid
          responses:
            "200":
              body:
                nextLink: ""
                value:
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/buffered111
                  name: buffered111
                  properties:
                    credentials:
                      connectionString: Endpoint=sb://apimaccounts.servicebus.windows.net/;SharedAccessKeyName=Send;SharedAccessKey=*******************h=****
                    description: Sample description
                    isBuffered: true
                    loggerType: azureEventHub
                    resourceId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.EventHub/namespaces/apimaccounts
                  type: Microsoft.ApiManagement/service/loggers
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/loggerId
                  name: loggerId
                  properties:
                    credentials:
                      connectionString: "{{Logger-Credentials-59544ef2e4bbd50d9468c618}}"
                      name: hydraeventhub
                    description: adding a new logger
                    isBuffered: true
                    loggerType: azureEventHub
                    resourceId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.EventHub/namespaces/hydraeventhub-ns
                  type: Microsoft.ApiManagement/service/loggers
      x-ms-odata: ./definitions.json#/definitions/LoggerContract
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerId}
  : delete:
      description: Deletes the specified logger.
      operationId: Logger_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the API Management service.
        in: path
        name: serviceName
        required: true
        schema:
          maxLength: 50
          minLength: 1
          pattern: "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Logger identifier. Must be unique in the API Management service
          instance.
        in: path
        name: loggerId
        required: true
        schema:
          maxLength: 256
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: ETag of the Entity. ETag should match the current entity state
          from the header response of the GET request or it should be * for unconditional
          update.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Force deletion even if diagnostic is attached.
        in: query
        name: force
        schema:
          type: boolean
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The logger was successfully deleted.
        "204":
          content: {}
          description: The logger was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logger_ListByService_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Logger
      x-ms-examples:
        ApiManagementDeleteLogger:
          parameters:
            If-Match: '*'
            api-version: 2019-12-01-preview
            loggerId: loggerId
            resourceGroupName: rg1
            serviceName: apimService1
            subscriptionId: subid
          responses:
            "200": {}
            "204": {}
      x-accepts:
      - application/json
    get:
      description: Gets the details of the logger specified by its identifier.
      operationId: Logger_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the API Management service.
        in: path
        name: serviceName
        required: true
        schema:
          maxLength: 50
          minLength: 1
          pattern: "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Logger identifier. Must be unique in the API Management service
          instance.
        in: path
        name: loggerId
        required: true
        schema:
          maxLength: 256
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logger_Get_200_response'
          description: The response body contains the specified Logger entity.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logger_ListByService_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Logger
      x-ms-examples:
        ApiManagementGetLogger:
          parameters:
            api-version: 2019-12-01-preview
            loggerId: templateLogger
            resourceGroupName: rg1
            serviceName: apimService1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/kloudapilogger1
                name: kloudapilogger1
                properties:
                  credentials:
                    connectionString: Endpoint=sb://eventhubapim.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=************
                    name: testeventhub4
                  description: testeventhub3again
                  isBuffered: true
                  loggerType: azureEventHub
                  resourceId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.EventHub/namespaces/eventhubapim
                type: Microsoft.ApiManagement/service/loggers
      x-accepts:
      - application/json
    head:
      description: Gets the entity state (Etag) version of the logger specified by
        its identifier.
      operationId: Logger_GetEntityTag
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the API Management service.
        in: path
        name: serviceName
        required: true
        schema:
          maxLength: 50
          minLength: 1
          pattern: "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Logger identifier. Must be unique in the API Management service
          instance.
        in: path
        name: loggerId
        required: true
        schema:
          maxLength: 256
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Specified logger entity exists and current entity state version
            is present in the ETag header.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logger_ListByService_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Logger
      x-ms-examples:
        ApiManagementHeadLogger:
          parameters:
            api-version: 2019-12-01-preview
            loggerId: templateLogger
            resourceGroupName: rg1
            serviceName: apimService1
            subscriptionId: subid
          responses:
            "200":
              headers:
                etag: AAAAAAAAAAa=
      x-accepts:
      - application/json
    patch:
      description: Updates an existing logger.
      operationId: Logger_Update
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the API Management service.
        in: path
        name: serviceName
        required: true
        schema:
          maxLength: 50
          minLength: 1
          pattern: "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Logger identifier. Must be unique in the API Management service
          instance.
        in: path
        name: loggerId
        required: true
        schema:
          maxLength: 256
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: ETag of the Entity. ETag should match the current entity state
          from the header response of the GET request or it should be * for unconditional
          update.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logger_Update_request'
        description: Update parameters.
        required: true
      responses:
        "204":
          content: {}
          description: The existing logger was successfully updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logger_ListByService_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Logger
      x-ms-examples:
        ApiManagementUpdateLogger:
          parameters:
            If-Match: '*'
            api-version: 2019-12-01-preview
            loggerId: loggerId
            parameters:
              properties:
                credentials:
                  connectionString: Endpoint=sb://hydraeventhub-ns.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=********=
                  name: hydraeventhub
            resourceGroupName: rg1
            serviceName: apimService1
            subscriptionId: subid
          responses:
            "204": {}
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Creates or Updates a logger.
      operationId: Logger_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the API Management service.
        in: path
        name: serviceName
        required: true
        schema:
          maxLength: 50
          minLength: 1
          pattern: "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Logger identifier. Must be unique in the API Management service
          instance.
        in: path
        name: loggerId
        required: true
        schema:
          maxLength: 256
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "ETag of the Entity. Not required when creating an entity, but\
          \ required when updating an entity."
        in: header
        name: If-Match
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logger_Get_200_response'
        description: Create parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logger_Get_200_response'
          description: The existing logger was successfully updated.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              schema:
                type: string
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logger_Get_200_response'
          description: Logger was successfully created.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logger_ListByService_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Logger
      x-ms-examples:
        ApiManagementCreateAILogger:
          parameters:
            api-version: 2019-12-01-preview
            loggerId: loggerId
            parameters:
              properties:
                credentials:
                  instrumentationKey: 11................a1
                description: adding a new logger
                loggerType: applicationInsights
            resourceGroupName: rg1
            serviceName: apimService1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/loggerId
                name: loggerId
                properties:
                  credentials:
                    instrumentationKey: "{{5a.......2a}}"
                  isBuffered: false
                  loggerType: applicationInsights
                type: Microsoft.ApiManagement/service/loggers
            "201":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/loggerId
                name: loggerId
                properties:
                  credentials:
                    instrumentationKey: "{{5a.......2a}}"
                  isBuffered: false
                  loggerType: applicationInsights
                  resourceId: /subscriptions/subid/resourceGroups/rg1/providers/microsoft.insights/components/airesource
                type: Microsoft.ApiManagement/service/loggers
        ApiManagementCreateEHLogger:
          parameters:
            api-version: 2019-12-01-preview
            loggerId: loggerId
            parameters:
              properties:
                credentials:
                  connectionString: Endpoint=sb://hydraeventhub-ns.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=********=
                  name: hydraeventhub
                description: adding a new logger
                loggerType: azureEventHub
            resourceGroupName: rg1
            serviceName: apimService1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/loggerId
                name: loggerId
                properties:
                  credentials:
                    connectionString: "{{59544ef2e4bbd50d9468c617}}"
                    name: hydraeventhub
                  description: adding a new logger
                  isBuffered: true
                  loggerType: azureEventHub
                  resourceId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.EventHub/namespaces/hydraeventhub-ns
                type: Microsoft.ApiManagement/service/loggers
            "201":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/loggers/loggerId
                name: loggerId
                properties:
                  credentials:
                    connectionString: "{{59544ef2e4bbd50d9468c617}}"
                    name: hydraeventhub
                  description: adding a new logger
                  isBuffered: true
                  loggerType: azureEventHub
                  resourceId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.EventHub/namespaces/hydraeventhub-ns
                type: Microsoft.ApiManagement/service/loggers
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  schemas:
    Logger_Update_request_properties:
      description: Parameters supplied to the Update Logger operation.
      properties:
        credentials:
          additionalProperties:
            type: string
          description: Logger credentials.
          type: object
        description:
          description: Logger description.
          type: string
        isBuffered:
          description: Whether records are buffered in the logger before publishing.
            Default is assumed to be true.
          type: boolean
        loggerType:
          description: Logger type.
          enum:
          - azureEventHub
          - applicationInsights
          type: string
          x-ms-enum:
            modelAsString: true
            name: LoggerType
            values:
            - description: Azure Event Hub as log destination.
              value: azureEventHub
            - description: Azure Application Insights as log destination.
              value: applicationInsights
      type: object
    Logger_ListByService_200_response_value_inner:
      description: Logger details.
      example:
        properties:
          loggerType: azureEventHub
          resourceId: resourceId
          credentials:
            connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
            name: apim
          isBuffered: true
          description: description
      properties:
        properties:
          $ref: '#/components/schemas/Logger_ListByService_200_response_value_inner_properties'
      type: object
    Logger_Get_200_response:
      allOf:
      - description: The Resource definition.
        properties:
          id:
            description: Resource ID.
            readOnly: true
            type: string
          name:
            description: Resource name.
            readOnly: true
            type: string
          type:
            description: Resource type for API Management resource.
            readOnly: true
            type: string
        type: object
        x-ms-azure-resource: true
      description: Logger details.
      example:
        properties:
          loggerType: azureEventHub
          resourceId: resourceId
          credentials:
            connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
            name: apim
          isBuffered: true
          description: description
      properties:
        properties:
          $ref: '#/components/schemas/Logger_ListByService_200_response_value_inner_properties'
    Logger_ListByService_default_response_error_details_inner:
      description: Error Field contract.
      example:
        code: code
        message: message
        target: target
      properties:
        code:
          description: Property level error code.
          type: string
        message:
          description: Human-readable representation of property-level error.
          type: string
        target:
          description: Property name.
          type: string
      type: object
    Logger_Update_request:
      description: Logger update contract.
      properties:
        properties:
          $ref: '#/components/schemas/Logger_Update_request_properties'
      type: object
    Logger_ListByService_200_response:
      description: Paged Logger list representation.
      example:
        count: 0
        value:
        - properties:
            loggerType: azureEventHub
            resourceId: resourceId
            credentials:
              connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
              name: apim
            isBuffered: true
            description: description
        - properties:
            loggerType: azureEventHub
            resourceId: resourceId
            credentials:
              connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
              name: apim
            isBuffered: true
            description: description
        nextLink: nextLink
      properties:
        count:
          description: Total record count number across all pages.
          format: int64
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Logger values.
          items:
            $ref: '#/components/schemas/Logger_ListByService_200_response_value_inner'
          type: array
      type: object
    Logger_ListByService_default_response:
      description: Error Response.
      example:
        error:
          code: code
          details:
          - code: code
            message: message
            target: target
          - code: code
            message: message
            target: target
          message: message
      properties:
        error:
          $ref: '#/components/schemas/Logger_ListByService_default_response_error'
      type: object
    Logger_ListByService_default_response_error:
      description: Error Body contract.
      example:
        code: code
        details:
        - code: code
          message: message
          target: target
        - code: code
          message: message
          target: target
        message: message
      properties:
        code:
          description: Service-defined error code. This code serves as a sub-status
            for the HTTP error code specified in the response.
          type: string
        details:
          description: "The list of invalid fields send in request, in case of validation\
            \ error."
          items:
            $ref: '#/components/schemas/Logger_ListByService_default_response_error_details_inner'
          type: array
        message:
          description: Human-readable representation of the error.
          type: string
      type: object
    Logger_ListByService_200_response_value_inner_properties:
      description: The Logger entity in API Management represents an event sink that
        you can use to log API Management events. Currently the Logger entity supports
        logging API Management events to Azure Event Hubs.
      example:
        loggerType: azureEventHub
        resourceId: resourceId
        credentials:
          connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
          name: apim
        isBuffered: true
        description: description
      properties:
        credentials:
          additionalProperties:
            type: string
          description: |-
            The name and SendRule connection string of the event hub for azureEventHub logger.
            Instrumentation key for applicationInsights logger.
          example:
            connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
            name: apim
          type: object
        description:
          description: Logger description.
          maxLength: 256
          type: string
        isBuffered:
          description: Whether records are buffered in the logger before publishing.
            Default is assumed to be true.
          type: boolean
        loggerType:
          description: Logger type.
          enum:
          - azureEventHub
          - applicationInsights
          type: string
          x-ms-enum:
            modelAsString: true
            name: LoggerType
            values:
            - description: Azure Event Hub as log destination.
              value: azureEventHub
            - description: Azure Application Insights as log destination.
              value: applicationInsights
        resourceId:
          description: Azure Resource Id of a log target (either Azure Event Hub resource
            or Azure Application Insights resource).
          type: string
      required:
      - credentials
      - loggerType
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

