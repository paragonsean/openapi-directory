/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on logger entity Azure API Management deployment.The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure EventHub.
 *
 * The version of the OpenAPI document: 2016-10-10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoggerUpdateParameters.h
 *
 * Parameters supplied to the Update Logger operation.
 */

#ifndef OAILoggerUpdateParameters_H
#define OAILoggerUpdateParameters_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILoggerUpdateParameters : public OAIObject {
public:
    OAILoggerUpdateParameters();
    OAILoggerUpdateParameters(QString json);
    ~OAILoggerUpdateParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getCredentials() const;
    void setCredentials(const QMap<QString, QString> &credentials);
    bool is_credentials_Set() const;
    bool is_credentials_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isIsBuffered() const;
    void setIsBuffered(const bool &is_buffered);
    bool is_is_buffered_Set() const;
    bool is_is_buffered_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_credentials;
    bool m_credentials_isSet;
    bool m_credentials_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_is_buffered;
    bool m_is_buffered_isSet;
    bool m_is_buffered_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoggerUpdateParameters)

#endif // OAILoggerUpdateParameters_H
