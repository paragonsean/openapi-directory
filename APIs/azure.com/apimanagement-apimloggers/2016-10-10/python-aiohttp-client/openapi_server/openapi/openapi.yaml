openapi: 3.0.1
info:
  description: Use these REST APIs for performing operations on logger entity Azure
    API Management deployment.The Logger entity in API Management represents an event
    sink that you can use to log API Management events. Currently the Logger entity
    supports logging API Management events to Azure EventHub.
  title: ApiManagementClient
  version: 2016-10-10
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2016-10-10/apimloggers.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: apimanagement-apimloggers
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers
  : get:
      description: Lists a collection of loggers in the specified service instance.
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/azure/mt592020.aspx
      operationId: loggers_list_by_service
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the API Management service.
        in: path
        name: serviceName
        required: true
        schema:
          maxLength: 50
          minLength: 1
          pattern: "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |-
          | Field | Supported operators    | Supported functions                         |
          |-------|------------------------|---------------------------------------------|
          | id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          | type  | eq                     |                                             |
        in: query
        name: $filter
        schema:
          type: string
      - description: Number of records to return.
        in: query
        name: $top
        schema:
          format: int32
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Number of records to skip.
        in: query
        name: $skip
        schema:
          format: int32
          minimum: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggerCollection'
          description: Lists a collection of Logger entities.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loggers_ListByService_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Loggers
      x-ms-odata: '#/definitions/LoggerResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.loggers_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}
  : delete:
      description: Deletes the specified logger.
      operationId: loggers_delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the API Management service.
        in: path
        name: serviceName
        required: true
        schema:
          maxLength: 50
          minLength: 1
          pattern: "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Logger identifier. Must be unique in the API Management service
          instance.
        in: path
        name: loggerid
        required: true
        schema:
          maxLength: 256
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The entity state (Etag) version of the logger to delete. A value
          of "*" can be used for If-Match to unconditionally apply the operation.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The logger was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loggers_ListByService_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Loggers
      x-openapi-router-controller: openapi_server.controllers.loggers_controller
    get:
      description: Gets the details of the logger specified by its identifier.
      operationId: loggers_get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the API Management service.
        in: path
        name: serviceName
        required: true
        schema:
          maxLength: 50
          minLength: 1
          pattern: "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Logger identifier. Must be unique in the API Management service
          instance.
        in: path
        name: loggerid
        required: true
        schema:
          maxLength: 256
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggerResponse'
          description: The response body contains the specified Logger entity.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loggers_ListByService_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Loggers
      x-openapi-router-controller: openapi_server.controllers.loggers_controller
    patch:
      description: Updates an existing logger.
      operationId: loggers_update
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the API Management service.
        in: path
        name: serviceName
        required: true
        schema:
          maxLength: 50
          minLength: 1
          pattern: "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Logger identifier. Must be unique in the API Management service
          instance.
        in: path
        name: loggerid
        required: true
        schema:
          maxLength: 256
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The entity state (Etag) version of the logger to update. A value
          of "*" can be used for If-Match to unconditionally apply the operation.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggerUpdateParameters'
        description: Update parameters.
        required: true
        x-body-name: parameters
      responses:
        "204":
          content: {}
          description: The existing logger was successfully updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loggers_ListByService_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Loggers
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.loggers_controller
    put:
      description: Creates or Updates a logger.
      operationId: loggers_create_or_update
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The name of the API Management service.
        in: path
        name: serviceName
        required: true
        schema:
          maxLength: 50
          minLength: 1
          pattern: "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Logger identifier. Must be unique in the API Management service
          instance.
        in: path
        name: loggerid
        required: true
        schema:
          maxLength: 256
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggerCreateParameters'
        description: Create parameters.
        required: true
        x-body-name: parameters
      responses:
        "201":
          content: {}
          description: Logger was successfully created.
        "204":
          content: {}
          description: The existing logger was successfully updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loggers_ListByService_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Loggers
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.loggers_controller
components:
  parameters:
    LoggerIdParameter:
      description: Logger identifier. Must be unique in the API Management service
        instance.
      in: path
      name: loggerid
      required: true
      schema:
        maxLength: 256
        pattern: "^[^*#&+:<>?]+$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  schemas:
    LoggerCollection:
      description: Paged Logger list representation.
      example:
        count: 0
        value:
        - credentials:
            connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
            name: apim
          isBuffered: true
          description: description
          id: id
          type: AzureEventHub
        - credentials:
            connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
            name: apim
          isBuffered: true
          description: description
          id: id
          type: AzureEventHub
        nextLink: nextLink
      properties:
        count:
          description: Total record count number across all pages.
          format: int64
          title: count
          type: integer
        nextLink:
          description: Next page link if any.
          title: nextLink
          type: string
        value:
          description: Logger values.
          items:
            $ref: '#/components/schemas/LoggerResponse'
          title: value
          type: array
      title: LoggerCollection
      type: object
    LoggerCreateParameters:
      description: Parameters supplied to the Create Logger operation.
      example:
        credentials:
          connectionString: Endpoint=endpoint and key from Azure classic portal. This
            property in credentials is must.
          name: Event hub name. This is optional.
        isBuffered: true
        description: description
        type: AzureEventHub
      properties:
        credentials:
          additionalProperties:
            type: string
          description: The name and SendRule connection string of the event hub.
          example:
            connectionString: Endpoint=endpoint and key from Azure classic portal.
              This property in credentials is must.
            name: Event hub name. This is optional.
          title: credentials
          type: object
        description:
          description: Logger description.
          title: description
          type: string
        isBuffered:
          description: Whether records are buffered in the logger before publishing.
            Default is assumed to be true.
          title: isBuffered
          type: boolean
        type:
          description: Logger type.
          enum:
          - AzureEventHub
          title: type
          type: string
          x-ms-enum:
            modelAsString: false
            name: LoggerTypeContract
      required:
      - credentials
      - type
      title: LoggerCreateParameters
      type: object
    LoggerResponse:
      description: The Logger entity in API Management represents an event sink that
        you can use to log API Management events. Currently the Logger entity supports
        logging API Management events to Azure Event Hubs.
      example:
        credentials:
          connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
          name: apim
        isBuffered: true
        description: description
        id: id
        type: AzureEventHub
      properties:
        credentials:
          additionalProperties:
            type: string
          description: The name and SendRule connection string of the event hub.
          example:
            connectionString: Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
            name: apim
          title: credentials
          type: object
        description:
          description: Logger description.
          maxLength: 256
          title: description
          type: string
        id:
          description: "Uniquely identifies the logger within the current API Management\
            \ service instance. The value is a valid relative URL in the format of\
            \ /loggers/{loggerId} where {loggerId} is a logger identifier."
          readOnly: true
          title: id
          type: string
        isBuffered:
          default: true
          description: Whether records are buffered in the logger before publishing.
            Default is assumed to be true.
          title: isBuffered
          type: boolean
        type:
          description: Logger type.
          enum:
          - AzureEventHub
          title: type
          type: string
          x-ms-enum:
            modelAsString: false
            name: LoggerTypeContract
      required:
      - credentials
      - type
      title: LoggerResponse
      type: object
    LoggerUpdateParameters:
      description: Parameters supplied to the Update Logger operation.
      example:
        credentials:
          key: credentials
        isBuffered: true
        description: description
        type: AzureEventHub
      properties:
        credentials:
          additionalProperties:
            type: string
          description: Logger credentials.
          title: credentials
          type: object
        description:
          description: Logger description.
          title: description
          type: string
        isBuffered:
          description: whether records are buffered in the logger before publishing.
            Default is assumed to be true.
          title: isBuffered
          type: boolean
        type:
          description: Logger type.
          enum:
          - AzureEventHub
          title: type
          type: string
          x-ms-enum:
            modelAsString: false
            name: LoggerTypeContract
      required:
      - type
      title: LoggerUpdateParameters
      type: object
    Loggers_ListByService_default_response_details_inner:
      description: Error Field contract.
      example:
        code: code
        message: message
        target: target
      properties:
        code:
          description: Property level error code.
          title: code
          type: string
        message:
          description: Human-readable representation of property-level error.
          title: message
          type: string
        target:
          description: Property name.
          title: target
          type: string
      title: Loggers_ListByService_default_response_details_inner
      type: object
    Loggers_ListByService_default_response:
      description: Error Body contract.
      example:
        code: code
        details:
        - code: code
          message: message
          target: target
        - code: code
          message: message
          target: target
        message: message
      properties:
        code:
          description: Service-defined error code. This code serves as a sub-status
            for the HTTP error code specified in the response.
          title: code
          type: string
        details:
          description: "The list of invalid fields send in request, in case of validation\
            \ error."
          items:
            $ref: '#/components/schemas/Loggers_ListByService_default_response_details_inner'
          title: details
          type: array
        message:
          description: Human-readable representation of the error.
          title: message
          type: string
      title: Loggers_ListByService_default_response
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_azure_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_azure_auth
x-original-swagger-version: "2.0"
