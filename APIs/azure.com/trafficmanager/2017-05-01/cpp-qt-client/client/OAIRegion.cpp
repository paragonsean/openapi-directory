/**
 * TrafficManagerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegion::OAIRegion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegion::OAIRegion() {
    this->initializeModel();
}

OAIRegion::~OAIRegion() {}

void OAIRegion::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_regions_isSet = false;
    m_regions_isValid = false;
}

void OAIRegion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegion::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_regions_isValid = ::OpenAPI::fromJsonValue(m_regions, json[QString("regions")]);
    m_regions_isSet = !json[QString("regions")].isNull() && m_regions_isValid;
}

QString OAIRegion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegion::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_regions.size() > 0) {
        obj.insert(QString("regions"), ::OpenAPI::toJsonValue(m_regions));
    }
    return obj;
}

QString OAIRegion::getCode() const {
    return m_code;
}
void OAIRegion::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIRegion::is_code_Set() const{
    return m_code_isSet;
}

bool OAIRegion::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIRegion::getName() const {
    return m_name;
}
void OAIRegion::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRegion::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRegion::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIRegion> OAIRegion::getRegions() const {
    return m_regions;
}
void OAIRegion::setRegions(const QList<OAIRegion> &regions) {
    m_regions = regions;
    m_regions_isSet = true;
}

bool OAIRegion::is_regions_Set() const{
    return m_regions_isSet;
}

bool OAIRegion::is_regions_Valid() const{
    return m_regions_isValid;
}

bool OAIRegion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_regions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
