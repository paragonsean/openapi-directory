/**
 * TrafficManagerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMonitorConfig.h
 *
 * Class containing endpoint monitoring settings in a Traffic Manager profile.
 */

#ifndef OAIMonitorConfig_H
#define OAIMonitorConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMonitorConfig : public OAIObject {
public:
    OAIMonitorConfig();
    OAIMonitorConfig(QString json);
    ~OAIMonitorConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getIntervalInSeconds() const;
    void setIntervalInSeconds(const qint64 &interval_in_seconds);
    bool is_interval_in_seconds_Set() const;
    bool is_interval_in_seconds_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    qint64 getPort() const;
    void setPort(const qint64 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    QString getProfileMonitorStatus() const;
    void setProfileMonitorStatus(const QString &profile_monitor_status);
    bool is_profile_monitor_status_Set() const;
    bool is_profile_monitor_status_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    qint64 getTimeoutInSeconds() const;
    void setTimeoutInSeconds(const qint64 &timeout_in_seconds);
    bool is_timeout_in_seconds_Set() const;
    bool is_timeout_in_seconds_Valid() const;

    qint64 getToleratedNumberOfFailures() const;
    void setToleratedNumberOfFailures(const qint64 &tolerated_number_of_failures);
    bool is_tolerated_number_of_failures_Set() const;
    bool is_tolerated_number_of_failures_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_interval_in_seconds;
    bool m_interval_in_seconds_isSet;
    bool m_interval_in_seconds_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    qint64 m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    QString m_profile_monitor_status;
    bool m_profile_monitor_status_isSet;
    bool m_profile_monitor_status_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    qint64 m_timeout_in_seconds;
    bool m_timeout_in_seconds_isSet;
    bool m_timeout_in_seconds_isValid;

    qint64 m_tolerated_number_of_failures;
    bool m_tolerated_number_of_failures_isSet;
    bool m_tolerated_number_of_failures_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMonitorConfig)

#endif // OAIMonitorConfig_H
