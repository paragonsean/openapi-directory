/**
 * TrafficManagerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEndpointProperties.h
 *
 * Class representing a Traffic Manager endpoint properties.
 */

#ifndef OAIEndpointProperties_H
#define OAIEndpointProperties_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEndpointProperties : public OAIObject {
public:
    OAIEndpointProperties();
    OAIEndpointProperties(QString json);
    ~OAIEndpointProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndpointLocation() const;
    void setEndpointLocation(const QString &endpoint_location);
    bool is_endpoint_location_Set() const;
    bool is_endpoint_location_Valid() const;

    QString getEndpointMonitorStatus() const;
    void setEndpointMonitorStatus(const QString &endpoint_monitor_status);
    bool is_endpoint_monitor_status_Set() const;
    bool is_endpoint_monitor_status_Valid() const;

    QString getEndpointStatus() const;
    void setEndpointStatus(const QString &endpoint_status);
    bool is_endpoint_status_Set() const;
    bool is_endpoint_status_Valid() const;

    QList<QString> getGeoMapping() const;
    void setGeoMapping(const QList<QString> &geo_mapping);
    bool is_geo_mapping_Set() const;
    bool is_geo_mapping_Valid() const;

    qint64 getMinChildEndpoints() const;
    void setMinChildEndpoints(const qint64 &min_child_endpoints);
    bool is_min_child_endpoints_Set() const;
    bool is_min_child_endpoints_Valid() const;

    qint64 getPriority() const;
    void setPriority(const qint64 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getTarget() const;
    void setTarget(const QString &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    QString getTargetResourceId() const;
    void setTargetResourceId(const QString &target_resource_id);
    bool is_target_resource_id_Set() const;
    bool is_target_resource_id_Valid() const;

    qint64 getWeight() const;
    void setWeight(const qint64 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_endpoint_location;
    bool m_endpoint_location_isSet;
    bool m_endpoint_location_isValid;

    QString m_endpoint_monitor_status;
    bool m_endpoint_monitor_status_isSet;
    bool m_endpoint_monitor_status_isValid;

    QString m_endpoint_status;
    bool m_endpoint_status_isSet;
    bool m_endpoint_status_isValid;

    QList<QString> m_geo_mapping;
    bool m_geo_mapping_isSet;
    bool m_geo_mapping_isValid;

    qint64 m_min_child_endpoints;
    bool m_min_child_endpoints_isSet;
    bool m_min_child_endpoints_isValid;

    qint64 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    QString m_target_resource_id;
    bool m_target_resource_id_isSet;
    bool m_target_resource_id_isValid;

    qint64 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEndpointProperties)

#endif // OAIEndpointProperties_H
