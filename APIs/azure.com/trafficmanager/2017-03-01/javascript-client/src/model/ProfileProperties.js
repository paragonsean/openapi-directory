/**
 * TrafficManagerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DnsConfig from './DnsConfig';
import Endpoint from './Endpoint';
import MonitorConfig from './MonitorConfig';

/**
 * The ProfileProperties model module.
 * @module model/ProfileProperties
 * @version 2017-03-01
 */
class ProfileProperties {
    /**
     * Constructs a new <code>ProfileProperties</code>.
     * Class representing the Traffic Manager profile properties.
     * @alias module:model/ProfileProperties
     */
    constructor() { 
        
        ProfileProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProfileProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProfileProperties} obj Optional instance to populate.
     * @return {module:model/ProfileProperties} The populated <code>ProfileProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProfileProperties();

            if (data.hasOwnProperty('dnsConfig')) {
                obj['dnsConfig'] = DnsConfig.constructFromObject(data['dnsConfig']);
            }
            if (data.hasOwnProperty('endpoints')) {
                obj['endpoints'] = ApiClient.convertToType(data['endpoints'], [Endpoint]);
            }
            if (data.hasOwnProperty('monitorConfig')) {
                obj['monitorConfig'] = MonitorConfig.constructFromObject(data['monitorConfig']);
            }
            if (data.hasOwnProperty('profileStatus')) {
                obj['profileStatus'] = ApiClient.convertToType(data['profileStatus'], 'String');
            }
            if (data.hasOwnProperty('trafficRoutingMethod')) {
                obj['trafficRoutingMethod'] = ApiClient.convertToType(data['trafficRoutingMethod'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProfileProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProfileProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dnsConfig`
        if (data['dnsConfig']) { // data not null
          DnsConfig.validateJSON(data['dnsConfig']);
        }
        if (data['endpoints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['endpoints'])) {
                throw new Error("Expected the field `endpoints` to be an array in the JSON data but got " + data['endpoints']);
            }
            // validate the optional field `endpoints` (array)
            for (const item of data['endpoints']) {
                Endpoint.validateJSON(item);
            };
        }
        // validate the optional field `monitorConfig`
        if (data['monitorConfig']) { // data not null
          MonitorConfig.validateJSON(data['monitorConfig']);
        }
        // ensure the json data is a string
        if (data['profileStatus'] && !(typeof data['profileStatus'] === 'string' || data['profileStatus'] instanceof String)) {
            throw new Error("Expected the field `profileStatus` to be a primitive type in the JSON string but got " + data['profileStatus']);
        }
        // ensure the json data is a string
        if (data['trafficRoutingMethod'] && !(typeof data['trafficRoutingMethod'] === 'string' || data['trafficRoutingMethod'] instanceof String)) {
            throw new Error("Expected the field `trafficRoutingMethod` to be a primitive type in the JSON string but got " + data['trafficRoutingMethod']);
        }

        return true;
    }


}



/**
 * @member {module:model/DnsConfig} dnsConfig
 */
ProfileProperties.prototype['dnsConfig'] = undefined;

/**
 * Gets or sets the list of endpoints in the Traffic Manager profile.
 * @member {Array.<module:model/Endpoint>} endpoints
 */
ProfileProperties.prototype['endpoints'] = undefined;

/**
 * @member {module:model/MonitorConfig} monitorConfig
 */
ProfileProperties.prototype['monitorConfig'] = undefined;

/**
 * Gets or sets the status of the Traffic Manager profile.  Possible values are 'Enabled' and 'Disabled'.
 * @member {String} profileStatus
 */
ProfileProperties.prototype['profileStatus'] = undefined;

/**
 * Gets or sets the traffic routing method of the Traffic Manager profile.  Possible values are 'Performance', 'Weighted', 'Priority' or 'Geographic'.
 * @member {String} trafficRoutingMethod
 */
ProfileProperties.prototype['trafficRoutingMethod'] = undefined;






export default ProfileProperties;

