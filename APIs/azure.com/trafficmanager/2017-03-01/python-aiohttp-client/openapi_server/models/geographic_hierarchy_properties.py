# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.region import Region
from openapi_server import util


class GeographicHierarchyProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, geographic_hierarchy: Region=None):
        """GeographicHierarchyProperties - a model defined in OpenAPI

        :param geographic_hierarchy: The geographic_hierarchy of this GeographicHierarchyProperties.
        """
        self.openapi_types = {
            'geographic_hierarchy': Region
        }

        self.attribute_map = {
            'geographic_hierarchy': 'geographicHierarchy'
        }

        self._geographic_hierarchy = geographic_hierarchy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GeographicHierarchyProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GeographicHierarchyProperties of this GeographicHierarchyProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def geographic_hierarchy(self):
        """Gets the geographic_hierarchy of this GeographicHierarchyProperties.


        :return: The geographic_hierarchy of this GeographicHierarchyProperties.
        :rtype: Region
        """
        return self._geographic_hierarchy

    @geographic_hierarchy.setter
    def geographic_hierarchy(self, geographic_hierarchy):
        """Sets the geographic_hierarchy of this GeographicHierarchyProperties.


        :param geographic_hierarchy: The geographic_hierarchy of this GeographicHierarchyProperties.
        :type geographic_hierarchy: Region
        """

        self._geographic_hierarchy = geographic_hierarchy
