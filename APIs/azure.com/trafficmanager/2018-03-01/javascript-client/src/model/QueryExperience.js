/**
 * TrafficManagerManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueryExperience model module.
 * @module model/QueryExperience
 * @version 2018-03-01
 */
class QueryExperience {
    /**
     * Constructs a new <code>QueryExperience</code>.
     * Class representing a Traffic Manager HeatMap query experience properties.
     * @alias module:model/QueryExperience
     * @param endpointId {Number} The id of the endpoint from the 'endpoints' array which these queries were routed to.
     * @param queryCount {Number} The number of queries originating from this location.
     */
    constructor(endpointId, queryCount) { 
        
        QueryExperience.initialize(this, endpointId, queryCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endpointId, queryCount) { 
        obj['endpointId'] = endpointId;
        obj['queryCount'] = queryCount;
    }

    /**
     * Constructs a <code>QueryExperience</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryExperience} obj Optional instance to populate.
     * @return {module:model/QueryExperience} The populated <code>QueryExperience</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryExperience();

            if (data.hasOwnProperty('endpointId')) {
                obj['endpointId'] = ApiClient.convertToType(data['endpointId'], 'Number');
            }
            if (data.hasOwnProperty('latency')) {
                obj['latency'] = ApiClient.convertToType(data['latency'], 'Number');
            }
            if (data.hasOwnProperty('queryCount')) {
                obj['queryCount'] = ApiClient.convertToType(data['queryCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryExperience</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryExperience</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QueryExperience.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

QueryExperience.RequiredProperties = ["endpointId", "queryCount"];

/**
 * The id of the endpoint from the 'endpoints' array which these queries were routed to.
 * @member {Number} endpointId
 */
QueryExperience.prototype['endpointId'] = undefined;

/**
 * The latency experienced by queries originating from this location.
 * @member {Number} latency
 */
QueryExperience.prototype['latency'] = undefined;

/**
 * The number of queries originating from this location.
 * @member {Number} queryCount
 */
QueryExperience.prototype['queryCount'] = undefined;






export default QueryExperience;

