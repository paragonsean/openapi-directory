# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.query_experience import QueryExperience
from openapi_server import util


class TrafficFlow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, latitude: float=None, longitude: float=None, query_experiences: List[QueryExperience]=None, source_ip: str=None):
        """TrafficFlow - a model defined in OpenAPI

        :param latitude: The latitude of this TrafficFlow.
        :param longitude: The longitude of this TrafficFlow.
        :param query_experiences: The query_experiences of this TrafficFlow.
        :param source_ip: The source_ip of this TrafficFlow.
        """
        self.openapi_types = {
            'latitude': float,
            'longitude': float,
            'query_experiences': List[QueryExperience],
            'source_ip': str
        }

        self.attribute_map = {
            'latitude': 'latitude',
            'longitude': 'longitude',
            'query_experiences': 'queryExperiences',
            'source_ip': 'sourceIp'
        }

        self._latitude = latitude
        self._longitude = longitude
        self._query_experiences = query_experiences
        self._source_ip = source_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrafficFlow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrafficFlow of this TrafficFlow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def latitude(self):
        """Gets the latitude of this TrafficFlow.

        The approximate latitude that these queries originated from.

        :return: The latitude of this TrafficFlow.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this TrafficFlow.

        The approximate latitude that these queries originated from.

        :param latitude: The latitude of this TrafficFlow.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this TrafficFlow.

        The approximate longitude that these queries originated from.

        :return: The longitude of this TrafficFlow.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this TrafficFlow.

        The approximate longitude that these queries originated from.

        :param longitude: The longitude of this TrafficFlow.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def query_experiences(self):
        """Gets the query_experiences of this TrafficFlow.

        The query experiences produced in this HeatMap calculation.

        :return: The query_experiences of this TrafficFlow.
        :rtype: List[QueryExperience]
        """
        return self._query_experiences

    @query_experiences.setter
    def query_experiences(self, query_experiences):
        """Sets the query_experiences of this TrafficFlow.

        The query experiences produced in this HeatMap calculation.

        :param query_experiences: The query_experiences of this TrafficFlow.
        :type query_experiences: List[QueryExperience]
        """

        self._query_experiences = query_experiences

    @property
    def source_ip(self):
        """Gets the source_ip of this TrafficFlow.

        The IP address that this query experience originated from.

        :return: The source_ip of this TrafficFlow.
        :rtype: str
        """
        return self._source_ip

    @source_ip.setter
    def source_ip(self, source_ip):
        """Sets the source_ip of this TrafficFlow.

        The IP address that this query experience originated from.

        :param source_ip: The source_ip of this TrafficFlow.
        :type source_ip: str
        """

        self._source_ip = source_ip
