# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.container_service_vm_diagnostics import ContainerServiceVMDiagnostics
from openapi_server import util


class ContainerServiceDiagnosticsProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vm_diagnostics: ContainerServiceVMDiagnostics=None):
        """ContainerServiceDiagnosticsProfile - a model defined in OpenAPI

        :param vm_diagnostics: The vm_diagnostics of this ContainerServiceDiagnosticsProfile.
        """
        self.openapi_types = {
            'vm_diagnostics': ContainerServiceVMDiagnostics
        }

        self.attribute_map = {
            'vm_diagnostics': 'vmDiagnostics'
        }

        self._vm_diagnostics = vm_diagnostics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerServiceDiagnosticsProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerServiceDiagnosticsProfile of this ContainerServiceDiagnosticsProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vm_diagnostics(self):
        """Gets the vm_diagnostics of this ContainerServiceDiagnosticsProfile.


        :return: The vm_diagnostics of this ContainerServiceDiagnosticsProfile.
        :rtype: ContainerServiceVMDiagnostics
        """
        return self._vm_diagnostics

    @vm_diagnostics.setter
    def vm_diagnostics(self, vm_diagnostics):
        """Sets the vm_diagnostics of this ContainerServiceDiagnosticsProfile.


        :param vm_diagnostics: The vm_diagnostics of this ContainerServiceDiagnosticsProfile.
        :type vm_diagnostics: ContainerServiceVMDiagnostics
        """

        self._vm_diagnostics = vm_diagnostics
