# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContainerServiceSshPublicKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_data: str=None):
        """ContainerServiceSshPublicKey - a model defined in OpenAPI

        :param key_data: The key_data of this ContainerServiceSshPublicKey.
        """
        self.openapi_types = {
            'key_data': str
        }

        self.attribute_map = {
            'key_data': 'keyData'
        }

        self._key_data = key_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerServiceSshPublicKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerServiceSshPublicKey of this ContainerServiceSshPublicKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_data(self):
        """Gets the key_data of this ContainerServiceSshPublicKey.

        Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.

        :return: The key_data of this ContainerServiceSshPublicKey.
        :rtype: str
        """
        return self._key_data

    @key_data.setter
    def key_data(self, key_data):
        """Sets the key_data of this ContainerServiceSshPublicKey.

        Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.

        :param key_data: The key_data of this ContainerServiceSshPublicKey.
        :type key_data: str
        """
        if key_data is None:
            raise ValueError("Invalid value for `key_data`, must not be `None`")

        self._key_data = key_data
