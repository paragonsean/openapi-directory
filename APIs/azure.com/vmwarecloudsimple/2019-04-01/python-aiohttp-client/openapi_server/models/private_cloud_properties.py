# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_pool import ResourcePool
from openapi_server.models.virtual_machine_template import VirtualMachineTemplate
from openapi_server.models.virtual_network import VirtualNetwork
from openapi_server import util


class PrivateCloudProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability_zone_id: str=None, availability_zone_name: str=None, clusters_number: int=None, created_by: str=None, created_on: datetime=None, dns_servers: List[str]=None, expires: str=None, nsx_type: str=None, placement_group_id: str=None, placement_group_name: str=None, private_cloud_id: str=None, resource_pools: List[ResourcePool]=None, state: str=None, total_cpu_cores: int=None, total_nodes: int=None, total_ram: int=None, total_storage: float=None, type: str=None, v_sphere_version: str=None, vcenter_fqdn: str=None, vcenter_refid: str=None, virtual_machine_templates: List[VirtualMachineTemplate]=None, virtual_networks: List[VirtualNetwork]=None, vr_ops_enabled: bool=None):
        """PrivateCloudProperties - a model defined in OpenAPI

        :param availability_zone_id: The availability_zone_id of this PrivateCloudProperties.
        :param availability_zone_name: The availability_zone_name of this PrivateCloudProperties.
        :param clusters_number: The clusters_number of this PrivateCloudProperties.
        :param created_by: The created_by of this PrivateCloudProperties.
        :param created_on: The created_on of this PrivateCloudProperties.
        :param dns_servers: The dns_servers of this PrivateCloudProperties.
        :param expires: The expires of this PrivateCloudProperties.
        :param nsx_type: The nsx_type of this PrivateCloudProperties.
        :param placement_group_id: The placement_group_id of this PrivateCloudProperties.
        :param placement_group_name: The placement_group_name of this PrivateCloudProperties.
        :param private_cloud_id: The private_cloud_id of this PrivateCloudProperties.
        :param resource_pools: The resource_pools of this PrivateCloudProperties.
        :param state: The state of this PrivateCloudProperties.
        :param total_cpu_cores: The total_cpu_cores of this PrivateCloudProperties.
        :param total_nodes: The total_nodes of this PrivateCloudProperties.
        :param total_ram: The total_ram of this PrivateCloudProperties.
        :param total_storage: The total_storage of this PrivateCloudProperties.
        :param type: The type of this PrivateCloudProperties.
        :param v_sphere_version: The v_sphere_version of this PrivateCloudProperties.
        :param vcenter_fqdn: The vcenter_fqdn of this PrivateCloudProperties.
        :param vcenter_refid: The vcenter_refid of this PrivateCloudProperties.
        :param virtual_machine_templates: The virtual_machine_templates of this PrivateCloudProperties.
        :param virtual_networks: The virtual_networks of this PrivateCloudProperties.
        :param vr_ops_enabled: The vr_ops_enabled of this PrivateCloudProperties.
        """
        self.openapi_types = {
            'availability_zone_id': str,
            'availability_zone_name': str,
            'clusters_number': int,
            'created_by': str,
            'created_on': datetime,
            'dns_servers': List[str],
            'expires': str,
            'nsx_type': str,
            'placement_group_id': str,
            'placement_group_name': str,
            'private_cloud_id': str,
            'resource_pools': List[ResourcePool],
            'state': str,
            'total_cpu_cores': int,
            'total_nodes': int,
            'total_ram': int,
            'total_storage': float,
            'type': str,
            'v_sphere_version': str,
            'vcenter_fqdn': str,
            'vcenter_refid': str,
            'virtual_machine_templates': List[VirtualMachineTemplate],
            'virtual_networks': List[VirtualNetwork],
            'vr_ops_enabled': bool
        }

        self.attribute_map = {
            'availability_zone_id': 'availabilityZoneId',
            'availability_zone_name': 'availabilityZoneName',
            'clusters_number': 'clustersNumber',
            'created_by': 'createdBy',
            'created_on': 'createdOn',
            'dns_servers': 'dnsServers',
            'expires': 'expires',
            'nsx_type': 'nsxType',
            'placement_group_id': 'placementGroupId',
            'placement_group_name': 'placementGroupName',
            'private_cloud_id': 'privateCloudId',
            'resource_pools': 'resourcePools',
            'state': 'state',
            'total_cpu_cores': 'totalCpuCores',
            'total_nodes': 'totalNodes',
            'total_ram': 'totalRam',
            'total_storage': 'totalStorage',
            'type': 'type',
            'v_sphere_version': 'vSphereVersion',
            'vcenter_fqdn': 'vcenterFqdn',
            'vcenter_refid': 'vcenterRefid',
            'virtual_machine_templates': 'virtualMachineTemplates',
            'virtual_networks': 'virtualNetworks',
            'vr_ops_enabled': 'vrOpsEnabled'
        }

        self._availability_zone_id = availability_zone_id
        self._availability_zone_name = availability_zone_name
        self._clusters_number = clusters_number
        self._created_by = created_by
        self._created_on = created_on
        self._dns_servers = dns_servers
        self._expires = expires
        self._nsx_type = nsx_type
        self._placement_group_id = placement_group_id
        self._placement_group_name = placement_group_name
        self._private_cloud_id = private_cloud_id
        self._resource_pools = resource_pools
        self._state = state
        self._total_cpu_cores = total_cpu_cores
        self._total_nodes = total_nodes
        self._total_ram = total_ram
        self._total_storage = total_storage
        self._type = type
        self._v_sphere_version = v_sphere_version
        self._vcenter_fqdn = vcenter_fqdn
        self._vcenter_refid = vcenter_refid
        self._virtual_machine_templates = virtual_machine_templates
        self._virtual_networks = virtual_networks
        self._vr_ops_enabled = vr_ops_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrivateCloudProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrivateCloudProperties of this PrivateCloudProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability_zone_id(self):
        """Gets the availability_zone_id of this PrivateCloudProperties.

        Availability Zone id, e.g. \"az1\"

        :return: The availability_zone_id of this PrivateCloudProperties.
        :rtype: str
        """
        return self._availability_zone_id

    @availability_zone_id.setter
    def availability_zone_id(self, availability_zone_id):
        """Sets the availability_zone_id of this PrivateCloudProperties.

        Availability Zone id, e.g. \"az1\"

        :param availability_zone_id: The availability_zone_id of this PrivateCloudProperties.
        :type availability_zone_id: str
        """

        self._availability_zone_id = availability_zone_id

    @property
    def availability_zone_name(self):
        """Gets the availability_zone_name of this PrivateCloudProperties.

        Availability Zone name, e.g. \"Availability Zone 1\"

        :return: The availability_zone_name of this PrivateCloudProperties.
        :rtype: str
        """
        return self._availability_zone_name

    @availability_zone_name.setter
    def availability_zone_name(self, availability_zone_name):
        """Sets the availability_zone_name of this PrivateCloudProperties.

        Availability Zone name, e.g. \"Availability Zone 1\"

        :param availability_zone_name: The availability_zone_name of this PrivateCloudProperties.
        :type availability_zone_name: str
        """

        self._availability_zone_name = availability_zone_name

    @property
    def clusters_number(self):
        """Gets the clusters_number of this PrivateCloudProperties.

        Number of clusters

        :return: The clusters_number of this PrivateCloudProperties.
        :rtype: int
        """
        return self._clusters_number

    @clusters_number.setter
    def clusters_number(self, clusters_number):
        """Sets the clusters_number of this PrivateCloudProperties.

        Number of clusters

        :param clusters_number: The clusters_number of this PrivateCloudProperties.
        :type clusters_number: int
        """

        self._clusters_number = clusters_number

    @property
    def created_by(self):
        """Gets the created_by of this PrivateCloudProperties.

        User's emails who created cloud

        :return: The created_by of this PrivateCloudProperties.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this PrivateCloudProperties.

        User's emails who created cloud

        :param created_by: The created_by of this PrivateCloudProperties.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def created_on(self):
        """Gets the created_on of this PrivateCloudProperties.

        When private cloud was created

        :return: The created_on of this PrivateCloudProperties.
        :rtype: datetime
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this PrivateCloudProperties.

        When private cloud was created

        :param created_on: The created_on of this PrivateCloudProperties.
        :type created_on: datetime
        """

        self._created_on = created_on

    @property
    def dns_servers(self):
        """Gets the dns_servers of this PrivateCloudProperties.

        Array of DNS servers

        :return: The dns_servers of this PrivateCloudProperties.
        :rtype: List[str]
        """
        return self._dns_servers

    @dns_servers.setter
    def dns_servers(self, dns_servers):
        """Sets the dns_servers of this PrivateCloudProperties.

        Array of DNS servers

        :param dns_servers: The dns_servers of this PrivateCloudProperties.
        :type dns_servers: List[str]
        """

        self._dns_servers = dns_servers

    @property
    def expires(self):
        """Gets the expires of this PrivateCloudProperties.

        Expiration date of PC

        :return: The expires of this PrivateCloudProperties.
        :rtype: str
        """
        return self._expires

    @expires.setter
    def expires(self, expires):
        """Sets the expires of this PrivateCloudProperties.

        Expiration date of PC

        :param expires: The expires of this PrivateCloudProperties.
        :type expires: str
        """

        self._expires = expires

    @property
    def nsx_type(self):
        """Gets the nsx_type of this PrivateCloudProperties.

        Nsx Type, e.g. \"Advanced\"

        :return: The nsx_type of this PrivateCloudProperties.
        :rtype: str
        """
        return self._nsx_type

    @nsx_type.setter
    def nsx_type(self, nsx_type):
        """Sets the nsx_type of this PrivateCloudProperties.

        Nsx Type, e.g. \"Advanced\"

        :param nsx_type: The nsx_type of this PrivateCloudProperties.
        :type nsx_type: str
        """

        self._nsx_type = nsx_type

    @property
    def placement_group_id(self):
        """Gets the placement_group_id of this PrivateCloudProperties.

        Placement Group id, e.g. \"n1\"

        :return: The placement_group_id of this PrivateCloudProperties.
        :rtype: str
        """
        return self._placement_group_id

    @placement_group_id.setter
    def placement_group_id(self, placement_group_id):
        """Sets the placement_group_id of this PrivateCloudProperties.

        Placement Group id, e.g. \"n1\"

        :param placement_group_id: The placement_group_id of this PrivateCloudProperties.
        :type placement_group_id: str
        """

        self._placement_group_id = placement_group_id

    @property
    def placement_group_name(self):
        """Gets the placement_group_name of this PrivateCloudProperties.

        Placement Group name

        :return: The placement_group_name of this PrivateCloudProperties.
        :rtype: str
        """
        return self._placement_group_name

    @placement_group_name.setter
    def placement_group_name(self, placement_group_name):
        """Sets the placement_group_name of this PrivateCloudProperties.

        Placement Group name

        :param placement_group_name: The placement_group_name of this PrivateCloudProperties.
        :type placement_group_name: str
        """

        self._placement_group_name = placement_group_name

    @property
    def private_cloud_id(self):
        """Gets the private_cloud_id of this PrivateCloudProperties.

        Id of a private cloud

        :return: The private_cloud_id of this PrivateCloudProperties.
        :rtype: str
        """
        return self._private_cloud_id

    @private_cloud_id.setter
    def private_cloud_id(self, private_cloud_id):
        """Sets the private_cloud_id of this PrivateCloudProperties.

        Id of a private cloud

        :param private_cloud_id: The private_cloud_id of this PrivateCloudProperties.
        :type private_cloud_id: str
        """

        self._private_cloud_id = private_cloud_id

    @property
    def resource_pools(self):
        """Gets the resource_pools of this PrivateCloudProperties.

        The list of Resource Pools

        :return: The resource_pools of this PrivateCloudProperties.
        :rtype: List[ResourcePool]
        """
        return self._resource_pools

    @resource_pools.setter
    def resource_pools(self, resource_pools):
        """Sets the resource_pools of this PrivateCloudProperties.

        The list of Resource Pools

        :param resource_pools: The resource_pools of this PrivateCloudProperties.
        :type resource_pools: List[ResourcePool]
        """

        self._resource_pools = resource_pools

    @property
    def state(self):
        """Gets the state of this PrivateCloudProperties.

        Private Cloud state, e.g. \"operational\"

        :return: The state of this PrivateCloudProperties.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this PrivateCloudProperties.

        Private Cloud state, e.g. \"operational\"

        :param state: The state of this PrivateCloudProperties.
        :type state: str
        """

        self._state = state

    @property
    def total_cpu_cores(self):
        """Gets the total_cpu_cores of this PrivateCloudProperties.

        Number of cores

        :return: The total_cpu_cores of this PrivateCloudProperties.
        :rtype: int
        """
        return self._total_cpu_cores

    @total_cpu_cores.setter
    def total_cpu_cores(self, total_cpu_cores):
        """Sets the total_cpu_cores of this PrivateCloudProperties.

        Number of cores

        :param total_cpu_cores: The total_cpu_cores of this PrivateCloudProperties.
        :type total_cpu_cores: int
        """

        self._total_cpu_cores = total_cpu_cores

    @property
    def total_nodes(self):
        """Gets the total_nodes of this PrivateCloudProperties.

        Number of nodes

        :return: The total_nodes of this PrivateCloudProperties.
        :rtype: int
        """
        return self._total_nodes

    @total_nodes.setter
    def total_nodes(self, total_nodes):
        """Sets the total_nodes of this PrivateCloudProperties.

        Number of nodes

        :param total_nodes: The total_nodes of this PrivateCloudProperties.
        :type total_nodes: int
        """

        self._total_nodes = total_nodes

    @property
    def total_ram(self):
        """Gets the total_ram of this PrivateCloudProperties.

        Memory size

        :return: The total_ram of this PrivateCloudProperties.
        :rtype: int
        """
        return self._total_ram

    @total_ram.setter
    def total_ram(self, total_ram):
        """Sets the total_ram of this PrivateCloudProperties.

        Memory size

        :param total_ram: The total_ram of this PrivateCloudProperties.
        :type total_ram: int
        """

        self._total_ram = total_ram

    @property
    def total_storage(self):
        """Gets the total_storage of this PrivateCloudProperties.

        Disk space in TB

        :return: The total_storage of this PrivateCloudProperties.
        :rtype: float
        """
        return self._total_storage

    @total_storage.setter
    def total_storage(self, total_storage):
        """Sets the total_storage of this PrivateCloudProperties.

        Disk space in TB

        :param total_storage: The total_storage of this PrivateCloudProperties.
        :type total_storage: float
        """

        self._total_storage = total_storage

    @property
    def type(self):
        """Gets the type of this PrivateCloudProperties.

        Virtualization type e.g. \"vSphere\"

        :return: The type of this PrivateCloudProperties.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PrivateCloudProperties.

        Virtualization type e.g. \"vSphere\"

        :param type: The type of this PrivateCloudProperties.
        :type type: str
        """

        self._type = type

    @property
    def v_sphere_version(self):
        """Gets the v_sphere_version of this PrivateCloudProperties.

        e.g. \"6.5u2\"

        :return: The v_sphere_version of this PrivateCloudProperties.
        :rtype: str
        """
        return self._v_sphere_version

    @v_sphere_version.setter
    def v_sphere_version(self, v_sphere_version):
        """Sets the v_sphere_version of this PrivateCloudProperties.

        e.g. \"6.5u2\"

        :param v_sphere_version: The v_sphere_version of this PrivateCloudProperties.
        :type v_sphere_version: str
        """

        self._v_sphere_version = v_sphere_version

    @property
    def vcenter_fqdn(self):
        """Gets the vcenter_fqdn of this PrivateCloudProperties.

        FQDN for vcenter access

        :return: The vcenter_fqdn of this PrivateCloudProperties.
        :rtype: str
        """
        return self._vcenter_fqdn

    @vcenter_fqdn.setter
    def vcenter_fqdn(self, vcenter_fqdn):
        """Sets the vcenter_fqdn of this PrivateCloudProperties.

        FQDN for vcenter access

        :param vcenter_fqdn: The vcenter_fqdn of this PrivateCloudProperties.
        :type vcenter_fqdn: str
        """

        self._vcenter_fqdn = vcenter_fqdn

    @property
    def vcenter_refid(self):
        """Gets the vcenter_refid of this PrivateCloudProperties.

        Vcenter ip address

        :return: The vcenter_refid of this PrivateCloudProperties.
        :rtype: str
        """
        return self._vcenter_refid

    @vcenter_refid.setter
    def vcenter_refid(self, vcenter_refid):
        """Sets the vcenter_refid of this PrivateCloudProperties.

        Vcenter ip address

        :param vcenter_refid: The vcenter_refid of this PrivateCloudProperties.
        :type vcenter_refid: str
        """

        self._vcenter_refid = vcenter_refid

    @property
    def virtual_machine_templates(self):
        """Gets the virtual_machine_templates of this PrivateCloudProperties.

        The list of Virtual Machine Templates

        :return: The virtual_machine_templates of this PrivateCloudProperties.
        :rtype: List[VirtualMachineTemplate]
        """
        return self._virtual_machine_templates

    @virtual_machine_templates.setter
    def virtual_machine_templates(self, virtual_machine_templates):
        """Sets the virtual_machine_templates of this PrivateCloudProperties.

        The list of Virtual Machine Templates

        :param virtual_machine_templates: The virtual_machine_templates of this PrivateCloudProperties.
        :type virtual_machine_templates: List[VirtualMachineTemplate]
        """

        self._virtual_machine_templates = virtual_machine_templates

    @property
    def virtual_networks(self):
        """Gets the virtual_networks of this PrivateCloudProperties.

        The list of Virtual Networks

        :return: The virtual_networks of this PrivateCloudProperties.
        :rtype: List[VirtualNetwork]
        """
        return self._virtual_networks

    @virtual_networks.setter
    def virtual_networks(self, virtual_networks):
        """Sets the virtual_networks of this PrivateCloudProperties.

        The list of Virtual Networks

        :param virtual_networks: The virtual_networks of this PrivateCloudProperties.
        :type virtual_networks: List[VirtualNetwork]
        """

        self._virtual_networks = virtual_networks

    @property
    def vr_ops_enabled(self):
        """Gets the vr_ops_enabled of this PrivateCloudProperties.

        Is Vrops enabled/disabled

        :return: The vr_ops_enabled of this PrivateCloudProperties.
        :rtype: bool
        """
        return self._vr_ops_enabled

    @vr_ops_enabled.setter
    def vr_ops_enabled(self, vr_ops_enabled):
        """Sets the vr_ops_enabled of this PrivateCloudProperties.

        Is Vrops enabled/disabled

        :param vr_ops_enabled: The vr_ops_enabled of this PrivateCloudProperties.
        :type vr_ops_enabled: bool
        """

        self._vr_ops_enabled = vr_ops_enabled
