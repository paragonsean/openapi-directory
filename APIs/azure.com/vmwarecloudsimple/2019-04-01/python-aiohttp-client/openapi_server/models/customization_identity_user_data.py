# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomizationIdentityUserData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_password_predefined: bool=False):
        """CustomizationIdentityUserData - a model defined in OpenAPI

        :param is_password_predefined: The is_password_predefined of this CustomizationIdentityUserData.
        """
        self.openapi_types = {
            'is_password_predefined': bool
        }

        self.attribute_map = {
            'is_password_predefined': 'isPasswordPredefined'
        }

        self._is_password_predefined = is_password_predefined

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomizationIdentityUserData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomizationIdentity_userData of this CustomizationIdentityUserData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_password_predefined(self):
        """Gets the is_password_predefined of this CustomizationIdentityUserData.

        Is password predefined in customization policy

        :return: The is_password_predefined of this CustomizationIdentityUserData.
        :rtype: bool
        """
        return self._is_password_predefined

    @is_password_predefined.setter
    def is_password_predefined(self, is_password_predefined):
        """Sets the is_password_predefined of this CustomizationIdentityUserData.

        Is password predefined in customization policy

        :param is_password_predefined: The is_password_predefined of this CustomizationIdentityUserData.
        :type is_password_predefined: bool
        """

        self._is_password_predefined = is_password_predefined
