# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sku_description import SkuDescription
from openapi_server import util


class DedicatedCloudNodeProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability_zone_id: str=None, availability_zone_name: str=None, cloud_rack_name: str=None, created: object=None, nodes_count: int=None, placement_group_id: str=None, placement_group_name: str=None, private_cloud_id: str=None, private_cloud_name: str=None, provisioning_state: str=None, purchase_id: str=None, sku_description: SkuDescription=None, status: str=None, vmware_cluster_name: str=None):
        """DedicatedCloudNodeProperties - a model defined in OpenAPI

        :param availability_zone_id: The availability_zone_id of this DedicatedCloudNodeProperties.
        :param availability_zone_name: The availability_zone_name of this DedicatedCloudNodeProperties.
        :param cloud_rack_name: The cloud_rack_name of this DedicatedCloudNodeProperties.
        :param created: The created of this DedicatedCloudNodeProperties.
        :param nodes_count: The nodes_count of this DedicatedCloudNodeProperties.
        :param placement_group_id: The placement_group_id of this DedicatedCloudNodeProperties.
        :param placement_group_name: The placement_group_name of this DedicatedCloudNodeProperties.
        :param private_cloud_id: The private_cloud_id of this DedicatedCloudNodeProperties.
        :param private_cloud_name: The private_cloud_name of this DedicatedCloudNodeProperties.
        :param provisioning_state: The provisioning_state of this DedicatedCloudNodeProperties.
        :param purchase_id: The purchase_id of this DedicatedCloudNodeProperties.
        :param sku_description: The sku_description of this DedicatedCloudNodeProperties.
        :param status: The status of this DedicatedCloudNodeProperties.
        :param vmware_cluster_name: The vmware_cluster_name of this DedicatedCloudNodeProperties.
        """
        self.openapi_types = {
            'availability_zone_id': str,
            'availability_zone_name': str,
            'cloud_rack_name': str,
            'created': object,
            'nodes_count': int,
            'placement_group_id': str,
            'placement_group_name': str,
            'private_cloud_id': str,
            'private_cloud_name': str,
            'provisioning_state': str,
            'purchase_id': str,
            'sku_description': SkuDescription,
            'status': str,
            'vmware_cluster_name': str
        }

        self.attribute_map = {
            'availability_zone_id': 'availabilityZoneId',
            'availability_zone_name': 'availabilityZoneName',
            'cloud_rack_name': 'cloudRackName',
            'created': 'created',
            'nodes_count': 'nodesCount',
            'placement_group_id': 'placementGroupId',
            'placement_group_name': 'placementGroupName',
            'private_cloud_id': 'privateCloudId',
            'private_cloud_name': 'privateCloudName',
            'provisioning_state': 'provisioningState',
            'purchase_id': 'purchaseId',
            'sku_description': 'skuDescription',
            'status': 'status',
            'vmware_cluster_name': 'vmwareClusterName'
        }

        self._availability_zone_id = availability_zone_id
        self._availability_zone_name = availability_zone_name
        self._cloud_rack_name = cloud_rack_name
        self._created = created
        self._nodes_count = nodes_count
        self._placement_group_id = placement_group_id
        self._placement_group_name = placement_group_name
        self._private_cloud_id = private_cloud_id
        self._private_cloud_name = private_cloud_name
        self._provisioning_state = provisioning_state
        self._purchase_id = purchase_id
        self._sku_description = sku_description
        self._status = status
        self._vmware_cluster_name = vmware_cluster_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DedicatedCloudNodeProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DedicatedCloudNodeProperties of this DedicatedCloudNodeProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability_zone_id(self):
        """Gets the availability_zone_id of this DedicatedCloudNodeProperties.

        Availability Zone id, e.g. \"az1\"

        :return: The availability_zone_id of this DedicatedCloudNodeProperties.
        :rtype: str
        """
        return self._availability_zone_id

    @availability_zone_id.setter
    def availability_zone_id(self, availability_zone_id):
        """Sets the availability_zone_id of this DedicatedCloudNodeProperties.

        Availability Zone id, e.g. \"az1\"

        :param availability_zone_id: The availability_zone_id of this DedicatedCloudNodeProperties.
        :type availability_zone_id: str
        """
        if availability_zone_id is None:
            raise ValueError("Invalid value for `availability_zone_id`, must not be `None`")

        self._availability_zone_id = availability_zone_id

    @property
    def availability_zone_name(self):
        """Gets the availability_zone_name of this DedicatedCloudNodeProperties.

        Availability Zone name, e.g. \"Availability Zone 1\"

        :return: The availability_zone_name of this DedicatedCloudNodeProperties.
        :rtype: str
        """
        return self._availability_zone_name

    @availability_zone_name.setter
    def availability_zone_name(self, availability_zone_name):
        """Sets the availability_zone_name of this DedicatedCloudNodeProperties.

        Availability Zone name, e.g. \"Availability Zone 1\"

        :param availability_zone_name: The availability_zone_name of this DedicatedCloudNodeProperties.
        :type availability_zone_name: str
        """

        self._availability_zone_name = availability_zone_name

    @property
    def cloud_rack_name(self):
        """Gets the cloud_rack_name of this DedicatedCloudNodeProperties.

        VMWare Cloud Rack Name

        :return: The cloud_rack_name of this DedicatedCloudNodeProperties.
        :rtype: str
        """
        return self._cloud_rack_name

    @cloud_rack_name.setter
    def cloud_rack_name(self, cloud_rack_name):
        """Sets the cloud_rack_name of this DedicatedCloudNodeProperties.

        VMWare Cloud Rack Name

        :param cloud_rack_name: The cloud_rack_name of this DedicatedCloudNodeProperties.
        :type cloud_rack_name: str
        """

        self._cloud_rack_name = cloud_rack_name

    @property
    def created(self):
        """Gets the created of this DedicatedCloudNodeProperties.

        date time the resource was created

        :return: The created of this DedicatedCloudNodeProperties.
        :rtype: object
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this DedicatedCloudNodeProperties.

        date time the resource was created

        :param created: The created of this DedicatedCloudNodeProperties.
        :type created: object
        """

        self._created = created

    @property
    def nodes_count(self):
        """Gets the nodes_count of this DedicatedCloudNodeProperties.

        count of nodes to create

        :return: The nodes_count of this DedicatedCloudNodeProperties.
        :rtype: int
        """
        return self._nodes_count

    @nodes_count.setter
    def nodes_count(self, nodes_count):
        """Sets the nodes_count of this DedicatedCloudNodeProperties.

        count of nodes to create

        :param nodes_count: The nodes_count of this DedicatedCloudNodeProperties.
        :type nodes_count: int
        """
        if nodes_count is None:
            raise ValueError("Invalid value for `nodes_count`, must not be `None`")

        self._nodes_count = nodes_count

    @property
    def placement_group_id(self):
        """Gets the placement_group_id of this DedicatedCloudNodeProperties.

        Placement Group id, e.g. \"n1\"

        :return: The placement_group_id of this DedicatedCloudNodeProperties.
        :rtype: str
        """
        return self._placement_group_id

    @placement_group_id.setter
    def placement_group_id(self, placement_group_id):
        """Sets the placement_group_id of this DedicatedCloudNodeProperties.

        Placement Group id, e.g. \"n1\"

        :param placement_group_id: The placement_group_id of this DedicatedCloudNodeProperties.
        :type placement_group_id: str
        """
        if placement_group_id is None:
            raise ValueError("Invalid value for `placement_group_id`, must not be `None`")

        self._placement_group_id = placement_group_id

    @property
    def placement_group_name(self):
        """Gets the placement_group_name of this DedicatedCloudNodeProperties.

        Placement Name, e.g. \"Placement Group 1\"

        :return: The placement_group_name of this DedicatedCloudNodeProperties.
        :rtype: str
        """
        return self._placement_group_name

    @placement_group_name.setter
    def placement_group_name(self, placement_group_name):
        """Sets the placement_group_name of this DedicatedCloudNodeProperties.

        Placement Name, e.g. \"Placement Group 1\"

        :param placement_group_name: The placement_group_name of this DedicatedCloudNodeProperties.
        :type placement_group_name: str
        """

        self._placement_group_name = placement_group_name

    @property
    def private_cloud_id(self):
        """Gets the private_cloud_id of this DedicatedCloudNodeProperties.

        Private Cloud Id

        :return: The private_cloud_id of this DedicatedCloudNodeProperties.
        :rtype: str
        """
        return self._private_cloud_id

    @private_cloud_id.setter
    def private_cloud_id(self, private_cloud_id):
        """Sets the private_cloud_id of this DedicatedCloudNodeProperties.

        Private Cloud Id

        :param private_cloud_id: The private_cloud_id of this DedicatedCloudNodeProperties.
        :type private_cloud_id: str
        """

        self._private_cloud_id = private_cloud_id

    @property
    def private_cloud_name(self):
        """Gets the private_cloud_name of this DedicatedCloudNodeProperties.

        Resource Pool Name

        :return: The private_cloud_name of this DedicatedCloudNodeProperties.
        :rtype: str
        """
        return self._private_cloud_name

    @private_cloud_name.setter
    def private_cloud_name(self, private_cloud_name):
        """Sets the private_cloud_name of this DedicatedCloudNodeProperties.

        Resource Pool Name

        :param private_cloud_name: The private_cloud_name of this DedicatedCloudNodeProperties.
        :type private_cloud_name: str
        """

        self._private_cloud_name = private_cloud_name

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this DedicatedCloudNodeProperties.

        The provisioning status of the resource

        :return: The provisioning_state of this DedicatedCloudNodeProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this DedicatedCloudNodeProperties.

        The provisioning status of the resource

        :param provisioning_state: The provisioning_state of this DedicatedCloudNodeProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def purchase_id(self):
        """Gets the purchase_id of this DedicatedCloudNodeProperties.

        purchase id

        :return: The purchase_id of this DedicatedCloudNodeProperties.
        :rtype: str
        """
        return self._purchase_id

    @purchase_id.setter
    def purchase_id(self, purchase_id):
        """Sets the purchase_id of this DedicatedCloudNodeProperties.

        purchase id

        :param purchase_id: The purchase_id of this DedicatedCloudNodeProperties.
        :type purchase_id: str
        """
        if purchase_id is None:
            raise ValueError("Invalid value for `purchase_id`, must not be `None`")

        self._purchase_id = purchase_id

    @property
    def sku_description(self):
        """Gets the sku_description of this DedicatedCloudNodeProperties.


        :return: The sku_description of this DedicatedCloudNodeProperties.
        :rtype: SkuDescription
        """
        return self._sku_description

    @sku_description.setter
    def sku_description(self, sku_description):
        """Sets the sku_description of this DedicatedCloudNodeProperties.


        :param sku_description: The sku_description of this DedicatedCloudNodeProperties.
        :type sku_description: SkuDescription
        """

        self._sku_description = sku_description

    @property
    def status(self):
        """Gets the status of this DedicatedCloudNodeProperties.

        Node status, indicates is private cloud set up on this node or not

        :return: The status of this DedicatedCloudNodeProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DedicatedCloudNodeProperties.

        Node status, indicates is private cloud set up on this node or not

        :param status: The status of this DedicatedCloudNodeProperties.
        :type status: str
        """
        allowed_values = ["unused", "used"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def vmware_cluster_name(self):
        """Gets the vmware_cluster_name of this DedicatedCloudNodeProperties.

        VMWare Cluster Name

        :return: The vmware_cluster_name of this DedicatedCloudNodeProperties.
        :rtype: str
        """
        return self._vmware_cluster_name

    @vmware_cluster_name.setter
    def vmware_cluster_name(self, vmware_cluster_name):
        """Sets the vmware_cluster_name of this DedicatedCloudNodeProperties.

        VMWare Cluster Name

        :param vmware_cluster_name: The vmware_cluster_name of this DedicatedCloudNodeProperties.
        :type vmware_cluster_name: str
        """

        self._vmware_cluster_name = vmware_cluster_name
