# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customization_ip_settings import CustomizationIPSettings
from openapi_server import util


class CustomizationNicSetting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adapter: CustomizationIPSettings=None, mac_address: str=None):
        """CustomizationNicSetting - a model defined in OpenAPI

        :param adapter: The adapter of this CustomizationNicSetting.
        :param mac_address: The mac_address of this CustomizationNicSetting.
        """
        self.openapi_types = {
            'adapter': CustomizationIPSettings,
            'mac_address': str
        }

        self.attribute_map = {
            'adapter': 'adapter',
            'mac_address': 'macAddress'
        }

        self._adapter = adapter
        self._mac_address = mac_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomizationNicSetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomizationNicSetting of this CustomizationNicSetting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adapter(self):
        """Gets the adapter of this CustomizationNicSetting.


        :return: The adapter of this CustomizationNicSetting.
        :rtype: CustomizationIPSettings
        """
        return self._adapter

    @adapter.setter
    def adapter(self, adapter):
        """Sets the adapter of this CustomizationNicSetting.


        :param adapter: The adapter of this CustomizationNicSetting.
        :type adapter: CustomizationIPSettings
        """

        self._adapter = adapter

    @property
    def mac_address(self):
        """Gets the mac_address of this CustomizationNicSetting.

        NIC mac address

        :return: The mac_address of this CustomizationNicSetting.
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this CustomizationNicSetting.

        NIC mac address

        :param mac_address: The mac_address of this CustomizationNicSetting.
        :type mac_address: str
        """

        self._mac_address = mac_address
