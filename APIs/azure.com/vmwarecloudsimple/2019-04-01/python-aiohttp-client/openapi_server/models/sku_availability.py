# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SkuAvailability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dedicated_availability_zone_id: str=None, dedicated_availability_zone_name: str=None, dedicated_placement_group_id: str=None, dedicated_placement_group_name: str=None, limit: int=None, resource_type: str=None, sku_id: str=None, sku_name: str=None):
        """SkuAvailability - a model defined in OpenAPI

        :param dedicated_availability_zone_id: The dedicated_availability_zone_id of this SkuAvailability.
        :param dedicated_availability_zone_name: The dedicated_availability_zone_name of this SkuAvailability.
        :param dedicated_placement_group_id: The dedicated_placement_group_id of this SkuAvailability.
        :param dedicated_placement_group_name: The dedicated_placement_group_name of this SkuAvailability.
        :param limit: The limit of this SkuAvailability.
        :param resource_type: The resource_type of this SkuAvailability.
        :param sku_id: The sku_id of this SkuAvailability.
        :param sku_name: The sku_name of this SkuAvailability.
        """
        self.openapi_types = {
            'dedicated_availability_zone_id': str,
            'dedicated_availability_zone_name': str,
            'dedicated_placement_group_id': str,
            'dedicated_placement_group_name': str,
            'limit': int,
            'resource_type': str,
            'sku_id': str,
            'sku_name': str
        }

        self.attribute_map = {
            'dedicated_availability_zone_id': 'dedicatedAvailabilityZoneId',
            'dedicated_availability_zone_name': 'dedicatedAvailabilityZoneName',
            'dedicated_placement_group_id': 'dedicatedPlacementGroupId',
            'dedicated_placement_group_name': 'dedicatedPlacementGroupName',
            'limit': 'limit',
            'resource_type': 'resourceType',
            'sku_id': 'skuId',
            'sku_name': 'skuName'
        }

        self._dedicated_availability_zone_id = dedicated_availability_zone_id
        self._dedicated_availability_zone_name = dedicated_availability_zone_name
        self._dedicated_placement_group_id = dedicated_placement_group_id
        self._dedicated_placement_group_name = dedicated_placement_group_name
        self._limit = limit
        self._resource_type = resource_type
        self._sku_id = sku_id
        self._sku_name = sku_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SkuAvailability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SkuAvailability of this SkuAvailability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dedicated_availability_zone_id(self):
        """Gets the dedicated_availability_zone_id of this SkuAvailability.

        CloudSimple Availability Zone id

        :return: The dedicated_availability_zone_id of this SkuAvailability.
        :rtype: str
        """
        return self._dedicated_availability_zone_id

    @dedicated_availability_zone_id.setter
    def dedicated_availability_zone_id(self, dedicated_availability_zone_id):
        """Sets the dedicated_availability_zone_id of this SkuAvailability.

        CloudSimple Availability Zone id

        :param dedicated_availability_zone_id: The dedicated_availability_zone_id of this SkuAvailability.
        :type dedicated_availability_zone_id: str
        """

        self._dedicated_availability_zone_id = dedicated_availability_zone_id

    @property
    def dedicated_availability_zone_name(self):
        """Gets the dedicated_availability_zone_name of this SkuAvailability.

        CloudSimple Availability Zone Name

        :return: The dedicated_availability_zone_name of this SkuAvailability.
        :rtype: str
        """
        return self._dedicated_availability_zone_name

    @dedicated_availability_zone_name.setter
    def dedicated_availability_zone_name(self, dedicated_availability_zone_name):
        """Sets the dedicated_availability_zone_name of this SkuAvailability.

        CloudSimple Availability Zone Name

        :param dedicated_availability_zone_name: The dedicated_availability_zone_name of this SkuAvailability.
        :type dedicated_availability_zone_name: str
        """

        self._dedicated_availability_zone_name = dedicated_availability_zone_name

    @property
    def dedicated_placement_group_id(self):
        """Gets the dedicated_placement_group_id of this SkuAvailability.

        CloudSimple Placement Group Id

        :return: The dedicated_placement_group_id of this SkuAvailability.
        :rtype: str
        """
        return self._dedicated_placement_group_id

    @dedicated_placement_group_id.setter
    def dedicated_placement_group_id(self, dedicated_placement_group_id):
        """Sets the dedicated_placement_group_id of this SkuAvailability.

        CloudSimple Placement Group Id

        :param dedicated_placement_group_id: The dedicated_placement_group_id of this SkuAvailability.
        :type dedicated_placement_group_id: str
        """

        self._dedicated_placement_group_id = dedicated_placement_group_id

    @property
    def dedicated_placement_group_name(self):
        """Gets the dedicated_placement_group_name of this SkuAvailability.

        CloudSimple Placement Group name

        :return: The dedicated_placement_group_name of this SkuAvailability.
        :rtype: str
        """
        return self._dedicated_placement_group_name

    @dedicated_placement_group_name.setter
    def dedicated_placement_group_name(self, dedicated_placement_group_name):
        """Sets the dedicated_placement_group_name of this SkuAvailability.

        CloudSimple Placement Group name

        :param dedicated_placement_group_name: The dedicated_placement_group_name of this SkuAvailability.
        :type dedicated_placement_group_name: str
        """

        self._dedicated_placement_group_name = dedicated_placement_group_name

    @property
    def limit(self):
        """Gets the limit of this SkuAvailability.

        indicates how many resources of a given SKU is available in a AZ->PG

        :return: The limit of this SkuAvailability.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this SkuAvailability.

        indicates how many resources of a given SKU is available in a AZ->PG

        :param limit: The limit of this SkuAvailability.
        :type limit: int
        """
        if limit is None:
            raise ValueError("Invalid value for `limit`, must not be `None`")

        self._limit = limit

    @property
    def resource_type(self):
        """Gets the resource_type of this SkuAvailability.

        resource type e.g. DedicatedCloudNodes

        :return: The resource_type of this SkuAvailability.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this SkuAvailability.

        resource type e.g. DedicatedCloudNodes

        :param resource_type: The resource_type of this SkuAvailability.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def sku_id(self):
        """Gets the sku_id of this SkuAvailability.

        sku id

        :return: The sku_id of this SkuAvailability.
        :rtype: str
        """
        return self._sku_id

    @sku_id.setter
    def sku_id(self, sku_id):
        """Sets the sku_id of this SkuAvailability.

        sku id

        :param sku_id: The sku_id of this SkuAvailability.
        :type sku_id: str
        """

        self._sku_id = sku_id

    @property
    def sku_name(self):
        """Gets the sku_name of this SkuAvailability.

        sku name

        :return: The sku_name of this SkuAvailability.
        :rtype: str
        """
        return self._sku_name

    @sku_name.setter
    def sku_name(self, sku_name):
        """Sets the sku_name of this SkuAvailability.

        sku name

        :param sku_name: The sku_name of this SkuAvailability.
        :type sku_name: str
        """

        self._sku_name = sku_name
