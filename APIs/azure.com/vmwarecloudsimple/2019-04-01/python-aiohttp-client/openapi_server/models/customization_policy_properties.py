# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customization_specification import CustomizationSpecification
from openapi_server import util


class CustomizationPolicyProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, private_cloud_id: str=None, specification: CustomizationSpecification=None, type: str=None, version: str=None):
        """CustomizationPolicyProperties - a model defined in OpenAPI

        :param description: The description of this CustomizationPolicyProperties.
        :param private_cloud_id: The private_cloud_id of this CustomizationPolicyProperties.
        :param specification: The specification of this CustomizationPolicyProperties.
        :param type: The type of this CustomizationPolicyProperties.
        :param version: The version of this CustomizationPolicyProperties.
        """
        self.openapi_types = {
            'description': str,
            'private_cloud_id': str,
            'specification': CustomizationSpecification,
            'type': str,
            'version': str
        }

        self.attribute_map = {
            'description': 'description',
            'private_cloud_id': 'privateCloudId',
            'specification': 'specification',
            'type': 'type',
            'version': 'version'
        }

        self._description = description
        self._private_cloud_id = private_cloud_id
        self._specification = specification
        self._type = type
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomizationPolicyProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomizationPolicyProperties of this CustomizationPolicyProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this CustomizationPolicyProperties.

        Policy description

        :return: The description of this CustomizationPolicyProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CustomizationPolicyProperties.

        Policy description

        :param description: The description of this CustomizationPolicyProperties.
        :type description: str
        """

        self._description = description

    @property
    def private_cloud_id(self):
        """Gets the private_cloud_id of this CustomizationPolicyProperties.

        The Private cloud id

        :return: The private_cloud_id of this CustomizationPolicyProperties.
        :rtype: str
        """
        return self._private_cloud_id

    @private_cloud_id.setter
    def private_cloud_id(self, private_cloud_id):
        """Sets the private_cloud_id of this CustomizationPolicyProperties.

        The Private cloud id

        :param private_cloud_id: The private_cloud_id of this CustomizationPolicyProperties.
        :type private_cloud_id: str
        """

        self._private_cloud_id = private_cloud_id

    @property
    def specification(self):
        """Gets the specification of this CustomizationPolicyProperties.


        :return: The specification of this CustomizationPolicyProperties.
        :rtype: CustomizationSpecification
        """
        return self._specification

    @specification.setter
    def specification(self, specification):
        """Sets the specification of this CustomizationPolicyProperties.


        :param specification: The specification of this CustomizationPolicyProperties.
        :type specification: CustomizationSpecification
        """

        self._specification = specification

    @property
    def type(self):
        """Gets the type of this CustomizationPolicyProperties.

        The type of customization (Linux or Windows)

        :return: The type of this CustomizationPolicyProperties.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CustomizationPolicyProperties.

        The type of customization (Linux or Windows)

        :param type: The type of this CustomizationPolicyProperties.
        :type type: str
        """
        allowed_values = ["LINUX", "WINDOWS"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def version(self):
        """Gets the version of this CustomizationPolicyProperties.

        Policy version

        :return: The version of this CustomizationPolicyProperties.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this CustomizationPolicyProperties.

        Policy version

        :param version: The version of this CustomizationPolicyProperties.
        :type version: str
        """

        self._version = version
