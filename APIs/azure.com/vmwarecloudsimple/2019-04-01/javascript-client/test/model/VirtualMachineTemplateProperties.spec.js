/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VMwareCloudSimple);
  }
}(this, function(expect, VMwareCloudSimple) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VirtualMachineTemplateProperties', function() {
    it('should create an instance of VirtualMachineTemplateProperties', function() {
      // uncomment below and update the code to test VirtualMachineTemplateProperties
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be.a(VMwareCloudSimple.VirtualMachineTemplateProperties);
    });

    it('should have the property amountOfRam (base name: "amountOfRam")', function() {
      // uncomment below and update the code to test the property amountOfRam
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property controllers (base name: "controllers")', function() {
      // uncomment below and update the code to test the property controllers
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property disks (base name: "disks")', function() {
      // uncomment below and update the code to test the property disks
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property exposeToGuestVM (base name: "exposeToGuestVM")', function() {
      // uncomment below and update the code to test the property exposeToGuestVM
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property guestOS (base name: "guestOS")', function() {
      // uncomment below and update the code to test the property guestOS
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property guestOSType (base name: "guestOSType")', function() {
      // uncomment below and update the code to test the property guestOSType
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property nics (base name: "nics")', function() {
      // uncomment below and update the code to test the property nics
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property numberOfCores (base name: "numberOfCores")', function() {
      // uncomment below and update the code to test the property numberOfCores
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property privateCloudId (base name: "privateCloudId")', function() {
      // uncomment below and update the code to test the property privateCloudId
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property vSphereNetworks (base name: "vSphereNetworks")', function() {
      // uncomment below and update the code to test the property vSphereNetworks
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property vSphereTags (base name: "vSphereTags")', function() {
      // uncomment below and update the code to test the property vSphereTags
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

    it('should have the property vmwaretools (base name: "vmwaretools")', function() {
      // uncomment below and update the code to test the property vmwaretools
      //var instance = new VMwareCloudSimple.VirtualMachineTemplateProperties();
      //expect(instance).to.be();
    });

  });

}));
