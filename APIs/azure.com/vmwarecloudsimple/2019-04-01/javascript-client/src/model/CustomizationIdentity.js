/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomizationHostName from './CustomizationHostName';
import CustomizationIdentityUserData from './CustomizationIdentityUserData';

/**
 * The CustomizationIdentity model module.
 * @module model/CustomizationIdentity
 * @version 2019-04-01
 */
class CustomizationIdentity {
    /**
     * Constructs a new <code>CustomizationIdentity</code>.
     * @alias module:model/CustomizationIdentity
     */
    constructor() { 
        
        CustomizationIdentity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomizationIdentity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomizationIdentity} obj Optional instance to populate.
     * @return {module:model/CustomizationIdentity} The populated <code>CustomizationIdentity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomizationIdentity();

            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'String');
            }
            if (data.hasOwnProperty('hostName')) {
                obj['hostName'] = CustomizationHostName.constructFromObject(data['hostName']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('userData')) {
                obj['userData'] = CustomizationIdentityUserData.constructFromObject(data['userData']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomizationIdentity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomizationIdentity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['data'] && !(typeof data['data'] === 'string' || data['data'] instanceof String)) {
            throw new Error("Expected the field `data` to be a primitive type in the JSON string but got " + data['data']);
        }
        // validate the optional field `hostName`
        if (data['hostName']) { // data not null
          CustomizationHostName.validateJSON(data['hostName']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // validate the optional field `userData`
        if (data['userData']) { // data not null
          CustomizationIdentityUserData.validateJSON(data['userData']);
        }

        return true;
    }


}



/**
 * Windows Text Identity. Prepared data
 * @member {String} data
 */
CustomizationIdentity.prototype['data'] = undefined;

/**
 * @member {module:model/CustomizationHostName} hostName
 */
CustomizationIdentity.prototype['hostName'] = undefined;

/**
 * Identity type
 * @member {module:model/CustomizationIdentity.TypeEnum} type
 */
CustomizationIdentity.prototype['type'] = undefined;

/**
 * @member {module:model/CustomizationIdentityUserData} userData
 */
CustomizationIdentity.prototype['userData'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CustomizationIdentity['TypeEnum'] = {

    /**
     * value: "WINDOWS_TEXT"
     * @const
     */
    "WINDOWS_TEXT": "WINDOWS_TEXT",

    /**
     * value: "WINDOWS"
     * @const
     */
    "WINDOWS": "WINDOWS",

    /**
     * value: "LINUX"
     * @const
     */
    "LINUX": "LINUX"
};



export default CustomizationIdentity;

