/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AvailableOperationDisplay from './AvailableOperationDisplay';
import AvailableOperationDisplayPropertyServiceSpecification from './AvailableOperationDisplayPropertyServiceSpecification';

/**
 * The AvailableOperation model module.
 * @module model/AvailableOperation
 * @version 2019-04-01
 */
class AvailableOperation {
    /**
     * Constructs a new <code>AvailableOperation</code>.
     * Resource provider available operation model
     * @alias module:model/AvailableOperation
     */
    constructor() { 
        
        AvailableOperation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['isDataAction'] = false;
    }

    /**
     * Constructs a <code>AvailableOperation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvailableOperation} obj Optional instance to populate.
     * @return {module:model/AvailableOperation} The populated <code>AvailableOperation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailableOperation();

            if (data.hasOwnProperty('display')) {
                obj['display'] = AvailableOperationDisplay.constructFromObject(data['display']);
            }
            if (data.hasOwnProperty('isDataAction')) {
                obj['isDataAction'] = ApiClient.convertToType(data['isDataAction'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = ApiClient.convertToType(data['origin'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = AvailableOperationDisplayPropertyServiceSpecification.constructFromObject(data['properties']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvailableOperation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvailableOperation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `display`
        if (data['display']) { // data not null
          AvailableOperationDisplay.validateJSON(data['display']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['origin'] && !(typeof data['origin'] === 'string' || data['origin'] instanceof String)) {
            throw new Error("Expected the field `origin` to be a primitive type in the JSON string but got " + data['origin']);
        }
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          AvailableOperationDisplayPropertyServiceSpecification.validateJSON(data['properties']);
        }

        return true;
    }


}



/**
 * @member {module:model/AvailableOperationDisplay} display
 */
AvailableOperation.prototype['display'] = undefined;

/**
 * Indicating whether the operation is a data action or not
 * @member {Boolean} isDataAction
 * @default false
 */
AvailableOperation.prototype['isDataAction'] = false;

/**
 * {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}
 * @member {String} name
 */
AvailableOperation.prototype['name'] = undefined;

/**
 * The origin of operation
 * @member {module:model/AvailableOperation.OriginEnum} origin
 */
AvailableOperation.prototype['origin'] = undefined;

/**
 * @member {module:model/AvailableOperationDisplayPropertyServiceSpecification} properties
 */
AvailableOperation.prototype['properties'] = undefined;





/**
 * Allowed values for the <code>origin</code> property.
 * @enum {String}
 * @readonly
 */
AvailableOperation['OriginEnum'] = {

    /**
     * value: "user"
     * @const
     */
    "user": "user",

    /**
     * value: "system"
     * @const
     */
    "system": "system",

    /**
     * value: "user,system"
     * @const
     */
    "user,system": "user,system"
};



export default AvailableOperation;

