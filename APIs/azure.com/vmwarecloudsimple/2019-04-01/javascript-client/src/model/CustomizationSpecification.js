/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomizationIdentity from './CustomizationIdentity';
import CustomizationNicSetting from './CustomizationNicSetting';

/**
 * The CustomizationSpecification model module.
 * @module model/CustomizationSpecification
 * @version 2019-04-01
 */
class CustomizationSpecification {
    /**
     * Constructs a new <code>CustomizationSpecification</code>.
     * The specification for Customization Policy
     * @alias module:model/CustomizationSpecification
     */
    constructor() { 
        
        CustomizationSpecification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomizationSpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomizationSpecification} obj Optional instance to populate.
     * @return {module:model/CustomizationSpecification} The populated <code>CustomizationSpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomizationSpecification();

            if (data.hasOwnProperty('identity')) {
                obj['identity'] = CustomizationIdentity.constructFromObject(data['identity']);
            }
            if (data.hasOwnProperty('nicSettings')) {
                obj['nicSettings'] = ApiClient.convertToType(data['nicSettings'], [CustomizationNicSetting]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomizationSpecification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomizationSpecification</code>.
     */
    static validateJSON(data) {
        // validate the optional field `identity`
        if (data['identity']) { // data not null
          CustomizationIdentity.validateJSON(data['identity']);
        }
        if (data['nicSettings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nicSettings'])) {
                throw new Error("Expected the field `nicSettings` to be an array in the JSON data but got " + data['nicSettings']);
            }
            // validate the optional field `nicSettings` (array)
            for (const item of data['nicSettings']) {
                CustomizationNicSetting.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/CustomizationIdentity} identity
 */
CustomizationSpecification.prototype['identity'] = undefined;

/**
 * Network interface settings
 * @member {Array.<module:model/CustomizationNicSetting>} nicSettings
 */
CustomizationSpecification.prototype['nicSettings'] = undefined;






export default CustomizationSpecification;

