/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DedicatedCloudServiceProperties model module.
 * @module model/DedicatedCloudServiceProperties
 * @version 2019-04-01
 */
class DedicatedCloudServiceProperties {
    /**
     * Constructs a new <code>DedicatedCloudServiceProperties</code>.
     * Properties of dedicated cloud service
     * @alias module:model/DedicatedCloudServiceProperties
     * @param gatewaySubnet {String} gateway Subnet for the account. It will collect the subnet address and always treat it as /28
     */
    constructor(gatewaySubnet) { 
        
        DedicatedCloudServiceProperties.initialize(this, gatewaySubnet);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, gatewaySubnet) { 
        obj['gatewaySubnet'] = gatewaySubnet;
    }

    /**
     * Constructs a <code>DedicatedCloudServiceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DedicatedCloudServiceProperties} obj Optional instance to populate.
     * @return {module:model/DedicatedCloudServiceProperties} The populated <code>DedicatedCloudServiceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DedicatedCloudServiceProperties();

            if (data.hasOwnProperty('gatewaySubnet')) {
                obj['gatewaySubnet'] = ApiClient.convertToType(data['gatewaySubnet'], 'String');
            }
            if (data.hasOwnProperty('isAccountOnboarded')) {
                obj['isAccountOnboarded'] = ApiClient.convertToType(data['isAccountOnboarded'], 'String');
            }
            if (data.hasOwnProperty('nodes')) {
                obj['nodes'] = ApiClient.convertToType(data['nodes'], 'Number');
            }
            if (data.hasOwnProperty('serviceURL')) {
                obj['serviceURL'] = ApiClient.convertToType(data['serviceURL'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DedicatedCloudServiceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DedicatedCloudServiceProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DedicatedCloudServiceProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['gatewaySubnet'] && !(typeof data['gatewaySubnet'] === 'string' || data['gatewaySubnet'] instanceof String)) {
            throw new Error("Expected the field `gatewaySubnet` to be a primitive type in the JSON string but got " + data['gatewaySubnet']);
        }
        // ensure the json data is a string
        if (data['isAccountOnboarded'] && !(typeof data['isAccountOnboarded'] === 'string' || data['isAccountOnboarded'] instanceof String)) {
            throw new Error("Expected the field `isAccountOnboarded` to be a primitive type in the JSON string but got " + data['isAccountOnboarded']);
        }
        // ensure the json data is a string
        if (data['serviceURL'] && !(typeof data['serviceURL'] === 'string' || data['serviceURL'] instanceof String)) {
            throw new Error("Expected the field `serviceURL` to be a primitive type in the JSON string but got " + data['serviceURL']);
        }

        return true;
    }


}

DedicatedCloudServiceProperties.RequiredProperties = ["gatewaySubnet"];

/**
 * gateway Subnet for the account. It will collect the subnet address and always treat it as /28
 * @member {String} gatewaySubnet
 */
DedicatedCloudServiceProperties.prototype['gatewaySubnet'] = undefined;

/**
 * indicates whether account onboarded or not in a given region
 * @member {module:model/DedicatedCloudServiceProperties.IsAccountOnboardedEnum} isAccountOnboarded
 */
DedicatedCloudServiceProperties.prototype['isAccountOnboarded'] = undefined;

/**
 * total nodes purchased
 * @member {Number} nodes
 */
DedicatedCloudServiceProperties.prototype['nodes'] = undefined;

/**
 * link to a service management web portal
 * @member {String} serviceURL
 */
DedicatedCloudServiceProperties.prototype['serviceURL'] = undefined;





/**
 * Allowed values for the <code>isAccountOnboarded</code> property.
 * @enum {String}
 * @readonly
 */
DedicatedCloudServiceProperties['IsAccountOnboardedEnum'] = {

    /**
     * value: "notOnBoarded"
     * @const
     */
    "notOnBoarded": "notOnBoarded",

    /**
     * value: "onBoarded"
     * @const
     */
    "onBoarded": "onBoarded",

    /**
     * value: "onBoardingFailed"
     * @const
     */
    "onBoardingFailed": "onBoardingFailed",

    /**
     * value: "onBoarding"
     * @const
     */
    "onBoarding": "onBoarding"
};



export default DedicatedCloudServiceProperties;

