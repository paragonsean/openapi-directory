/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomizationSpecification from './CustomizationSpecification';

/**
 * The CustomizationPolicyProperties model module.
 * @module model/CustomizationPolicyProperties
 * @version 2019-04-01
 */
class CustomizationPolicyProperties {
    /**
     * Constructs a new <code>CustomizationPolicyProperties</code>.
     * The properties of Customization policy
     * @alias module:model/CustomizationPolicyProperties
     */
    constructor() { 
        
        CustomizationPolicyProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomizationPolicyProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomizationPolicyProperties} obj Optional instance to populate.
     * @return {module:model/CustomizationPolicyProperties} The populated <code>CustomizationPolicyProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomizationPolicyProperties();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('privateCloudId')) {
                obj['privateCloudId'] = ApiClient.convertToType(data['privateCloudId'], 'String');
            }
            if (data.hasOwnProperty('specification')) {
                obj['specification'] = CustomizationSpecification.constructFromObject(data['specification']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomizationPolicyProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomizationPolicyProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['privateCloudId'] && !(typeof data['privateCloudId'] === 'string' || data['privateCloudId'] instanceof String)) {
            throw new Error("Expected the field `privateCloudId` to be a primitive type in the JSON string but got " + data['privateCloudId']);
        }
        // validate the optional field `specification`
        if (data['specification']) { // data not null
          CustomizationSpecification.validateJSON(data['specification']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * Policy description
 * @member {String} description
 */
CustomizationPolicyProperties.prototype['description'] = undefined;

/**
 * The Private cloud id
 * @member {String} privateCloudId
 */
CustomizationPolicyProperties.prototype['privateCloudId'] = undefined;

/**
 * @member {module:model/CustomizationSpecification} specification
 */
CustomizationPolicyProperties.prototype['specification'] = undefined;

/**
 * The type of customization (Linux or Windows)
 * @member {module:model/CustomizationPolicyProperties.TypeEnum} type
 */
CustomizationPolicyProperties.prototype['type'] = undefined;

/**
 * Policy version
 * @member {String} version
 */
CustomizationPolicyProperties.prototype['version'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CustomizationPolicyProperties['TypeEnum'] = {

    /**
     * value: "LINUX"
     * @const
     */
    "LINUX": "LINUX",

    /**
     * value: "WINDOWS"
     * @const
     */
    "WINDOWS": "WINDOWS"
};



export default CustomizationPolicyProperties;

