/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GuestOSNICCustomization model module.
 * @module model/GuestOSNICCustomization
 * @version 2019-04-01
 */
class GuestOSNICCustomization {
    /**
     * Constructs a new <code>GuestOSNICCustomization</code>.
     * Guest OS nic customization
     * @alias module:model/GuestOSNICCustomization
     */
    constructor() { 
        
        GuestOSNICCustomization.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GuestOSNICCustomization</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GuestOSNICCustomization} obj Optional instance to populate.
     * @return {module:model/GuestOSNICCustomization} The populated <code>GuestOSNICCustomization</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GuestOSNICCustomization();

            if (data.hasOwnProperty('allocation')) {
                obj['allocation'] = ApiClient.convertToType(data['allocation'], 'String');
            }
            if (data.hasOwnProperty('dnsServers')) {
                obj['dnsServers'] = ApiClient.convertToType(data['dnsServers'], ['String']);
            }
            if (data.hasOwnProperty('gateway')) {
                obj['gateway'] = ApiClient.convertToType(data['gateway'], ['String']);
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('mask')) {
                obj['mask'] = ApiClient.convertToType(data['mask'], 'String');
            }
            if (data.hasOwnProperty('primaryWinsServer')) {
                obj['primaryWinsServer'] = ApiClient.convertToType(data['primaryWinsServer'], 'String');
            }
            if (data.hasOwnProperty('secondaryWinsServer')) {
                obj['secondaryWinsServer'] = ApiClient.convertToType(data['secondaryWinsServer'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GuestOSNICCustomization</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GuestOSNICCustomization</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['allocation'] && !(typeof data['allocation'] === 'string' || data['allocation'] instanceof String)) {
            throw new Error("Expected the field `allocation` to be a primitive type in the JSON string but got " + data['allocation']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dnsServers'])) {
            throw new Error("Expected the field `dnsServers` to be an array in the JSON data but got " + data['dnsServers']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['gateway'])) {
            throw new Error("Expected the field `gateway` to be an array in the JSON data but got " + data['gateway']);
        }
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // ensure the json data is a string
        if (data['mask'] && !(typeof data['mask'] === 'string' || data['mask'] instanceof String)) {
            throw new Error("Expected the field `mask` to be a primitive type in the JSON string but got " + data['mask']);
        }
        // ensure the json data is a string
        if (data['primaryWinsServer'] && !(typeof data['primaryWinsServer'] === 'string' || data['primaryWinsServer'] instanceof String)) {
            throw new Error("Expected the field `primaryWinsServer` to be a primitive type in the JSON string but got " + data['primaryWinsServer']);
        }
        // ensure the json data is a string
        if (data['secondaryWinsServer'] && !(typeof data['secondaryWinsServer'] === 'string' || data['secondaryWinsServer'] instanceof String)) {
            throw new Error("Expected the field `secondaryWinsServer` to be a primitive type in the JSON string but got " + data['secondaryWinsServer']);
        }

        return true;
    }


}



/**
 * IP address allocation method
 * @member {module:model/GuestOSNICCustomization.AllocationEnum} allocation
 */
GuestOSNICCustomization.prototype['allocation'] = undefined;

/**
 * List of dns servers to use
 * @member {Array.<String>} dnsServers
 */
GuestOSNICCustomization.prototype['dnsServers'] = undefined;

/**
 * Gateway addresses assigned to nic
 * @member {Array.<String>} gateway
 */
GuestOSNICCustomization.prototype['gateway'] = undefined;

/**
 * @member {String} ipAddress
 */
GuestOSNICCustomization.prototype['ipAddress'] = undefined;

/**
 * @member {String} mask
 */
GuestOSNICCustomization.prototype['mask'] = undefined;

/**
 * @member {String} primaryWinsServer
 */
GuestOSNICCustomization.prototype['primaryWinsServer'] = undefined;

/**
 * @member {String} secondaryWinsServer
 */
GuestOSNICCustomization.prototype['secondaryWinsServer'] = undefined;





/**
 * Allowed values for the <code>allocation</code> property.
 * @enum {String}
 * @readonly
 */
GuestOSNICCustomization['AllocationEnum'] = {

    /**
     * value: "static"
     * @const
     */
    "static": "static",

    /**
     * value: "dynamic"
     * @const
     */
    "dynamic": "dynamic"
};



export default GuestOSNICCustomization;

