/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SkuAvailability model module.
 * @module model/SkuAvailability
 * @version 2019-04-01
 */
class SkuAvailability {
    /**
     * Constructs a new <code>SkuAvailability</code>.
     * SKU availability model
     * @alias module:model/SkuAvailability
     * @param limit {Number} indicates how many resources of a given SKU is available in a AZ->PG
     */
    constructor(limit) { 
        
        SkuAvailability.initialize(this, limit);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, limit) { 
        obj['limit'] = limit;
    }

    /**
     * Constructs a <code>SkuAvailability</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SkuAvailability} obj Optional instance to populate.
     * @return {module:model/SkuAvailability} The populated <code>SkuAvailability</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SkuAvailability();

            if (data.hasOwnProperty('dedicatedAvailabilityZoneId')) {
                obj['dedicatedAvailabilityZoneId'] = ApiClient.convertToType(data['dedicatedAvailabilityZoneId'], 'String');
            }
            if (data.hasOwnProperty('dedicatedAvailabilityZoneName')) {
                obj['dedicatedAvailabilityZoneName'] = ApiClient.convertToType(data['dedicatedAvailabilityZoneName'], 'String');
            }
            if (data.hasOwnProperty('dedicatedPlacementGroupId')) {
                obj['dedicatedPlacementGroupId'] = ApiClient.convertToType(data['dedicatedPlacementGroupId'], 'String');
            }
            if (data.hasOwnProperty('dedicatedPlacementGroupName')) {
                obj['dedicatedPlacementGroupName'] = ApiClient.convertToType(data['dedicatedPlacementGroupName'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], 'String');
            }
            if (data.hasOwnProperty('skuId')) {
                obj['skuId'] = ApiClient.convertToType(data['skuId'], 'String');
            }
            if (data.hasOwnProperty('skuName')) {
                obj['skuName'] = ApiClient.convertToType(data['skuName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SkuAvailability</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SkuAvailability</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SkuAvailability.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dedicatedAvailabilityZoneId'] && !(typeof data['dedicatedAvailabilityZoneId'] === 'string' || data['dedicatedAvailabilityZoneId'] instanceof String)) {
            throw new Error("Expected the field `dedicatedAvailabilityZoneId` to be a primitive type in the JSON string but got " + data['dedicatedAvailabilityZoneId']);
        }
        // ensure the json data is a string
        if (data['dedicatedAvailabilityZoneName'] && !(typeof data['dedicatedAvailabilityZoneName'] === 'string' || data['dedicatedAvailabilityZoneName'] instanceof String)) {
            throw new Error("Expected the field `dedicatedAvailabilityZoneName` to be a primitive type in the JSON string but got " + data['dedicatedAvailabilityZoneName']);
        }
        // ensure the json data is a string
        if (data['dedicatedPlacementGroupId'] && !(typeof data['dedicatedPlacementGroupId'] === 'string' || data['dedicatedPlacementGroupId'] instanceof String)) {
            throw new Error("Expected the field `dedicatedPlacementGroupId` to be a primitive type in the JSON string but got " + data['dedicatedPlacementGroupId']);
        }
        // ensure the json data is a string
        if (data['dedicatedPlacementGroupName'] && !(typeof data['dedicatedPlacementGroupName'] === 'string' || data['dedicatedPlacementGroupName'] instanceof String)) {
            throw new Error("Expected the field `dedicatedPlacementGroupName` to be a primitive type in the JSON string but got " + data['dedicatedPlacementGroupName']);
        }
        // ensure the json data is a string
        if (data['resourceType'] && !(typeof data['resourceType'] === 'string' || data['resourceType'] instanceof String)) {
            throw new Error("Expected the field `resourceType` to be a primitive type in the JSON string but got " + data['resourceType']);
        }
        // ensure the json data is a string
        if (data['skuId'] && !(typeof data['skuId'] === 'string' || data['skuId'] instanceof String)) {
            throw new Error("Expected the field `skuId` to be a primitive type in the JSON string but got " + data['skuId']);
        }
        // ensure the json data is a string
        if (data['skuName'] && !(typeof data['skuName'] === 'string' || data['skuName'] instanceof String)) {
            throw new Error("Expected the field `skuName` to be a primitive type in the JSON string but got " + data['skuName']);
        }

        return true;
    }


}

SkuAvailability.RequiredProperties = ["limit"];

/**
 * CloudSimple Availability Zone id
 * @member {String} dedicatedAvailabilityZoneId
 */
SkuAvailability.prototype['dedicatedAvailabilityZoneId'] = undefined;

/**
 * CloudSimple Availability Zone Name
 * @member {String} dedicatedAvailabilityZoneName
 */
SkuAvailability.prototype['dedicatedAvailabilityZoneName'] = undefined;

/**
 * CloudSimple Placement Group Id
 * @member {String} dedicatedPlacementGroupId
 */
SkuAvailability.prototype['dedicatedPlacementGroupId'] = undefined;

/**
 * CloudSimple Placement Group name
 * @member {String} dedicatedPlacementGroupName
 */
SkuAvailability.prototype['dedicatedPlacementGroupName'] = undefined;

/**
 * indicates how many resources of a given SKU is available in a AZ->PG
 * @member {Number} limit
 */
SkuAvailability.prototype['limit'] = undefined;

/**
 * resource type e.g. DedicatedCloudNodes
 * @member {String} resourceType
 */
SkuAvailability.prototype['resourceType'] = undefined;

/**
 * sku id
 * @member {String} skuId
 */
SkuAvailability.prototype['skuId'] = undefined;

/**
 * sku name
 * @member {String} skuName
 */
SkuAvailability.prototype['skuName'] = undefined;






export default SkuAvailability;

