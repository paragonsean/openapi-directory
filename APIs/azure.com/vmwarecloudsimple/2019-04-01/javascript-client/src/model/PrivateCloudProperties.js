/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResourcePool from './ResourcePool';
import VirtualMachineTemplate from './VirtualMachineTemplate';
import VirtualNetwork from './VirtualNetwork';

/**
 * The PrivateCloudProperties model module.
 * @module model/PrivateCloudProperties
 * @version 2019-04-01
 */
class PrivateCloudProperties {
    /**
     * Constructs a new <code>PrivateCloudProperties</code>.
     * Properties of private
     * @alias module:model/PrivateCloudProperties
     */
    constructor() { 
        
        PrivateCloudProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PrivateCloudProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrivateCloudProperties} obj Optional instance to populate.
     * @return {module:model/PrivateCloudProperties} The populated <code>PrivateCloudProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrivateCloudProperties();

            if (data.hasOwnProperty('availabilityZoneId')) {
                obj['availabilityZoneId'] = ApiClient.convertToType(data['availabilityZoneId'], 'String');
            }
            if (data.hasOwnProperty('availabilityZoneName')) {
                obj['availabilityZoneName'] = ApiClient.convertToType(data['availabilityZoneName'], 'String');
            }
            if (data.hasOwnProperty('clustersNumber')) {
                obj['clustersNumber'] = ApiClient.convertToType(data['clustersNumber'], 'Number');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'Date');
            }
            if (data.hasOwnProperty('dnsServers')) {
                obj['dnsServers'] = ApiClient.convertToType(data['dnsServers'], ['String']);
            }
            if (data.hasOwnProperty('expires')) {
                obj['expires'] = ApiClient.convertToType(data['expires'], 'String');
            }
            if (data.hasOwnProperty('nsxType')) {
                obj['nsxType'] = ApiClient.convertToType(data['nsxType'], 'String');
            }
            if (data.hasOwnProperty('placementGroupId')) {
                obj['placementGroupId'] = ApiClient.convertToType(data['placementGroupId'], 'String');
            }
            if (data.hasOwnProperty('placementGroupName')) {
                obj['placementGroupName'] = ApiClient.convertToType(data['placementGroupName'], 'String');
            }
            if (data.hasOwnProperty('privateCloudId')) {
                obj['privateCloudId'] = ApiClient.convertToType(data['privateCloudId'], 'String');
            }
            if (data.hasOwnProperty('resourcePools')) {
                obj['resourcePools'] = ApiClient.convertToType(data['resourcePools'], [ResourcePool]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('totalCpuCores')) {
                obj['totalCpuCores'] = ApiClient.convertToType(data['totalCpuCores'], 'Number');
            }
            if (data.hasOwnProperty('totalNodes')) {
                obj['totalNodes'] = ApiClient.convertToType(data['totalNodes'], 'Number');
            }
            if (data.hasOwnProperty('totalRam')) {
                obj['totalRam'] = ApiClient.convertToType(data['totalRam'], 'Number');
            }
            if (data.hasOwnProperty('totalStorage')) {
                obj['totalStorage'] = ApiClient.convertToType(data['totalStorage'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('vSphereVersion')) {
                obj['vSphereVersion'] = ApiClient.convertToType(data['vSphereVersion'], 'String');
            }
            if (data.hasOwnProperty('vcenterFqdn')) {
                obj['vcenterFqdn'] = ApiClient.convertToType(data['vcenterFqdn'], 'String');
            }
            if (data.hasOwnProperty('vcenterRefid')) {
                obj['vcenterRefid'] = ApiClient.convertToType(data['vcenterRefid'], 'String');
            }
            if (data.hasOwnProperty('virtualMachineTemplates')) {
                obj['virtualMachineTemplates'] = ApiClient.convertToType(data['virtualMachineTemplates'], [VirtualMachineTemplate]);
            }
            if (data.hasOwnProperty('virtualNetworks')) {
                obj['virtualNetworks'] = ApiClient.convertToType(data['virtualNetworks'], [VirtualNetwork]);
            }
            if (data.hasOwnProperty('vrOpsEnabled')) {
                obj['vrOpsEnabled'] = ApiClient.convertToType(data['vrOpsEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PrivateCloudProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PrivateCloudProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['availabilityZoneId'] && !(typeof data['availabilityZoneId'] === 'string' || data['availabilityZoneId'] instanceof String)) {
            throw new Error("Expected the field `availabilityZoneId` to be a primitive type in the JSON string but got " + data['availabilityZoneId']);
        }
        // ensure the json data is a string
        if (data['availabilityZoneName'] && !(typeof data['availabilityZoneName'] === 'string' || data['availabilityZoneName'] instanceof String)) {
            throw new Error("Expected the field `availabilityZoneName` to be a primitive type in the JSON string but got " + data['availabilityZoneName']);
        }
        // ensure the json data is a string
        if (data['createdBy'] && !(typeof data['createdBy'] === 'string' || data['createdBy'] instanceof String)) {
            throw new Error("Expected the field `createdBy` to be a primitive type in the JSON string but got " + data['createdBy']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dnsServers'])) {
            throw new Error("Expected the field `dnsServers` to be an array in the JSON data but got " + data['dnsServers']);
        }
        // ensure the json data is a string
        if (data['expires'] && !(typeof data['expires'] === 'string' || data['expires'] instanceof String)) {
            throw new Error("Expected the field `expires` to be a primitive type in the JSON string but got " + data['expires']);
        }
        // ensure the json data is a string
        if (data['nsxType'] && !(typeof data['nsxType'] === 'string' || data['nsxType'] instanceof String)) {
            throw new Error("Expected the field `nsxType` to be a primitive type in the JSON string but got " + data['nsxType']);
        }
        // ensure the json data is a string
        if (data['placementGroupId'] && !(typeof data['placementGroupId'] === 'string' || data['placementGroupId'] instanceof String)) {
            throw new Error("Expected the field `placementGroupId` to be a primitive type in the JSON string but got " + data['placementGroupId']);
        }
        // ensure the json data is a string
        if (data['placementGroupName'] && !(typeof data['placementGroupName'] === 'string' || data['placementGroupName'] instanceof String)) {
            throw new Error("Expected the field `placementGroupName` to be a primitive type in the JSON string but got " + data['placementGroupName']);
        }
        // ensure the json data is a string
        if (data['privateCloudId'] && !(typeof data['privateCloudId'] === 'string' || data['privateCloudId'] instanceof String)) {
            throw new Error("Expected the field `privateCloudId` to be a primitive type in the JSON string but got " + data['privateCloudId']);
        }
        if (data['resourcePools']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['resourcePools'])) {
                throw new Error("Expected the field `resourcePools` to be an array in the JSON data but got " + data['resourcePools']);
            }
            // validate the optional field `resourcePools` (array)
            for (const item of data['resourcePools']) {
                ResourcePool.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['vSphereVersion'] && !(typeof data['vSphereVersion'] === 'string' || data['vSphereVersion'] instanceof String)) {
            throw new Error("Expected the field `vSphereVersion` to be a primitive type in the JSON string but got " + data['vSphereVersion']);
        }
        // ensure the json data is a string
        if (data['vcenterFqdn'] && !(typeof data['vcenterFqdn'] === 'string' || data['vcenterFqdn'] instanceof String)) {
            throw new Error("Expected the field `vcenterFqdn` to be a primitive type in the JSON string but got " + data['vcenterFqdn']);
        }
        // ensure the json data is a string
        if (data['vcenterRefid'] && !(typeof data['vcenterRefid'] === 'string' || data['vcenterRefid'] instanceof String)) {
            throw new Error("Expected the field `vcenterRefid` to be a primitive type in the JSON string but got " + data['vcenterRefid']);
        }
        if (data['virtualMachineTemplates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['virtualMachineTemplates'])) {
                throw new Error("Expected the field `virtualMachineTemplates` to be an array in the JSON data but got " + data['virtualMachineTemplates']);
            }
            // validate the optional field `virtualMachineTemplates` (array)
            for (const item of data['virtualMachineTemplates']) {
                VirtualMachineTemplate.validateJSON(item);
            };
        }
        if (data['virtualNetworks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['virtualNetworks'])) {
                throw new Error("Expected the field `virtualNetworks` to be an array in the JSON data but got " + data['virtualNetworks']);
            }
            // validate the optional field `virtualNetworks` (array)
            for (const item of data['virtualNetworks']) {
                VirtualNetwork.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Availability Zone id, e.g. \"az1\"
 * @member {String} availabilityZoneId
 */
PrivateCloudProperties.prototype['availabilityZoneId'] = undefined;

/**
 * Availability Zone name, e.g. \"Availability Zone 1\"
 * @member {String} availabilityZoneName
 */
PrivateCloudProperties.prototype['availabilityZoneName'] = undefined;

/**
 * Number of clusters
 * @member {Number} clustersNumber
 */
PrivateCloudProperties.prototype['clustersNumber'] = undefined;

/**
 * User's emails who created cloud
 * @member {String} createdBy
 */
PrivateCloudProperties.prototype['createdBy'] = undefined;

/**
 * When private cloud was created
 * @member {Date} createdOn
 */
PrivateCloudProperties.prototype['createdOn'] = undefined;

/**
 * Array of DNS servers
 * @member {Array.<String>} dnsServers
 */
PrivateCloudProperties.prototype['dnsServers'] = undefined;

/**
 * Expiration date of PC
 * @member {String} expires
 */
PrivateCloudProperties.prototype['expires'] = undefined;

/**
 * Nsx Type, e.g. \"Advanced\"
 * @member {String} nsxType
 */
PrivateCloudProperties.prototype['nsxType'] = undefined;

/**
 * Placement Group id, e.g. \"n1\"
 * @member {String} placementGroupId
 */
PrivateCloudProperties.prototype['placementGroupId'] = undefined;

/**
 * Placement Group name
 * @member {String} placementGroupName
 */
PrivateCloudProperties.prototype['placementGroupName'] = undefined;

/**
 * Id of a private cloud
 * @member {String} privateCloudId
 */
PrivateCloudProperties.prototype['privateCloudId'] = undefined;

/**
 * The list of Resource Pools
 * @member {Array.<module:model/ResourcePool>} resourcePools
 */
PrivateCloudProperties.prototype['resourcePools'] = undefined;

/**
 * Private Cloud state, e.g. \"operational\"
 * @member {String} state
 */
PrivateCloudProperties.prototype['state'] = undefined;

/**
 * Number of cores
 * @member {Number} totalCpuCores
 */
PrivateCloudProperties.prototype['totalCpuCores'] = undefined;

/**
 * Number of nodes
 * @member {Number} totalNodes
 */
PrivateCloudProperties.prototype['totalNodes'] = undefined;

/**
 * Memory size
 * @member {Number} totalRam
 */
PrivateCloudProperties.prototype['totalRam'] = undefined;

/**
 * Disk space in TB
 * @member {Number} totalStorage
 */
PrivateCloudProperties.prototype['totalStorage'] = undefined;

/**
 * Virtualization type e.g. \"vSphere\"
 * @member {String} type
 */
PrivateCloudProperties.prototype['type'] = undefined;

/**
 * e.g. \"6.5u2\"
 * @member {String} vSphereVersion
 */
PrivateCloudProperties.prototype['vSphereVersion'] = undefined;

/**
 * FQDN for vcenter access
 * @member {String} vcenterFqdn
 */
PrivateCloudProperties.prototype['vcenterFqdn'] = undefined;

/**
 * Vcenter ip address
 * @member {String} vcenterRefid
 */
PrivateCloudProperties.prototype['vcenterRefid'] = undefined;

/**
 * The list of Virtual Machine Templates
 * @member {Array.<module:model/VirtualMachineTemplate>} virtualMachineTemplates
 */
PrivateCloudProperties.prototype['virtualMachineTemplates'] = undefined;

/**
 * The list of Virtual Networks
 * @member {Array.<module:model/VirtualNetwork>} virtualNetworks
 */
PrivateCloudProperties.prototype['virtualNetworks'] = undefined;

/**
 * Is Vrops enabled/disabled
 * @member {Boolean} vrOpsEnabled
 */
PrivateCloudProperties.prototype['vrOpsEnabled'] = undefined;






export default PrivateCloudProperties;

