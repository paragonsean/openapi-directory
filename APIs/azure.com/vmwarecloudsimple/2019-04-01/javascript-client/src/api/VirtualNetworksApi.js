/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CSRPError from '../model/CSRPError';
import VirtualNetwork from '../model/VirtualNetwork';
import VirtualNetworkListResponse from '../model/VirtualNetworkListResponse';

/**
* VirtualNetworks service.
* @module api/VirtualNetworksApi
* @version 2019-04-01
*/
export default class VirtualNetworksApi {

    /**
    * Constructs a new VirtualNetworksApi. 
    * @alias module:api/VirtualNetworksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualNetworksGet operation.
     * @callback module:api/VirtualNetworksApi~virtualNetworksGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetwork} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Implements virtual network GET method
     * Return virtual network by its name
     * @param {String} subscriptionId The subscription ID.
     * @param {String} regionId The region Id (westus, eastus)
     * @param {String} pcName The private cloud name
     * @param {String} virtualNetworkName virtual network id (vsphereId)
     * @param {String} apiVersion Client API version.
     * @param {module:api/VirtualNetworksApi~virtualNetworksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetwork}
     */
    virtualNetworksGet(subscriptionId, regionId, pcName, virtualNetworkName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworksGet");
      }
      // verify the required parameter 'regionId' is set
      if (regionId === undefined || regionId === null) {
        throw new Error("Missing the required parameter 'regionId' when calling virtualNetworksGet");
      }
      // verify the required parameter 'pcName' is set
      if (pcName === undefined || pcName === null) {
        throw new Error("Missing the required parameter 'pcName' when calling virtualNetworksGet");
      }
      // verify the required parameter 'virtualNetworkName' is set
      if (virtualNetworkName === undefined || virtualNetworkName === null) {
        throw new Error("Missing the required parameter 'virtualNetworkName' when calling virtualNetworksGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworksGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'regionId': regionId,
        'pcName': pcName,
        'virtualNetworkName': virtualNetworkName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualNetwork;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/virtualNetworks/{virtualNetworkName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualNetworksList operation.
     * @callback module:api/VirtualNetworksApi~virtualNetworksListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualNetworkListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Implements list available virtual networks within a subscription method
     * Return list of virtual networks in location for private cloud
     * @param {String} subscriptionId The subscription ID.
     * @param {String} regionId The region Id (westus, eastus)
     * @param {String} pcName The private cloud name
     * @param {String} apiVersion Client API version.
     * @param {String} resourcePoolName Resource pool used to derive vSphere cluster which contains virtual networks
     * @param {module:api/VirtualNetworksApi~virtualNetworksListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualNetworkListResponse}
     */
    virtualNetworksList(subscriptionId, regionId, pcName, apiVersion, resourcePoolName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualNetworksList");
      }
      // verify the required parameter 'regionId' is set
      if (regionId === undefined || regionId === null) {
        throw new Error("Missing the required parameter 'regionId' when calling virtualNetworksList");
      }
      // verify the required parameter 'pcName' is set
      if (pcName === undefined || pcName === null) {
        throw new Error("Missing the required parameter 'pcName' when calling virtualNetworksList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualNetworksList");
      }
      // verify the required parameter 'resourcePoolName' is set
      if (resourcePoolName === undefined || resourcePoolName === null) {
        throw new Error("Missing the required parameter 'resourcePoolName' when calling virtualNetworksList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'regionId': regionId,
        'pcName': pcName
      };
      let queryParams = {
        'api-version': apiVersion,
        'resourcePoolName': resourcePoolName
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualNetworkListResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/virtualNetworks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
