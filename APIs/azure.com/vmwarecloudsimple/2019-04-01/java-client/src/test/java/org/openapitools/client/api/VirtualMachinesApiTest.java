/*
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CSRPError;
import org.openapitools.client.model.PatchPayload;
import org.openapitools.client.model.VirtualMachine;
import org.openapitools.client.model.VirtualMachineListResponse;
import org.openapitools.client.model.VirtualMachineStopMode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VirtualMachinesApi
 */
@Disabled
public class VirtualMachinesApiTest {

    private final VirtualMachinesApi api = new VirtualMachinesApi();

    /**
     * Implements virtual machine PUT method
     *
     * Create Or Update Virtual Machine
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String referer = null;
        String virtualMachineName = null;
        String apiVersion = null;
        VirtualMachine virtualMachineRequest = null;
        VirtualMachine response = api.virtualMachinesCreateOrUpdate(subscriptionId, resourceGroupName, referer, virtualMachineName, apiVersion, virtualMachineRequest);
        // TODO: test validations
    }

    /**
     * Implements virtual machine DELETE method
     *
     * Delete virtual machine
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String referer = null;
        String virtualMachineName = null;
        String apiVersion = null;
        api.virtualMachinesDelete(subscriptionId, resourceGroupName, referer, virtualMachineName, apiVersion);
        // TODO: test validations
    }

    /**
     * Implements virtual machine GET method
     *
     * Get virtual machine
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String virtualMachineName = null;
        String apiVersion = null;
        VirtualMachine response = api.virtualMachinesGet(subscriptionId, resourceGroupName, virtualMachineName, apiVersion);
        // TODO: test validations
    }

    /**
     * Implements list virtual machine within RG method
     *
     * Returns list of virtual machine within resource group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        String $skipToken = null;
        VirtualMachineListResponse response = api.virtualMachinesListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, $filter, $top, $skipToken);
        // TODO: test validations
    }

    /**
     * Implements list virtual machine within subscription method
     *
     * Returns list virtual machine within subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        String $skipToken = null;
        VirtualMachineListResponse response = api.virtualMachinesListBySubscription(subscriptionId, apiVersion, $filter, $top, $skipToken);
        // TODO: test validations
    }

    /**
     * Implements a start method for a virtual machine
     *
     * Power on virtual machine
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesStartTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String referer = null;
        String virtualMachineName = null;
        String apiVersion = null;
        api.virtualMachinesStart(subscriptionId, resourceGroupName, referer, virtualMachineName, apiVersion);
        // TODO: test validations
    }

    /**
     * Implements shutdown, poweroff, and suspend method for a virtual machine
     *
     * Power off virtual machine, options: shutdown, poweroff, and suspend
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesStopTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String referer = null;
        String virtualMachineName = null;
        String apiVersion = null;
        String mode = null;
        VirtualMachineStopMode m = null;
        api.virtualMachinesStop(subscriptionId, resourceGroupName, referer, virtualMachineName, apiVersion, mode, m);
        // TODO: test validations
    }

    /**
     * Implements virtual machine PATCH method
     *
     * Patch virtual machine properties
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualMachinesUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String virtualMachineName = null;
        String apiVersion = null;
        PatchPayload virtualMachineRequest = null;
        VirtualMachine response = api.virtualMachinesUpdate(subscriptionId, resourceGroupName, virtualMachineName, apiVersion, virtualMachineRequest);
        // TODO: test validations
    }

}
