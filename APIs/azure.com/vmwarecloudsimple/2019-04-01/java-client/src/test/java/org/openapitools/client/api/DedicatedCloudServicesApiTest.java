/*
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CSRPError;
import org.openapitools.client.model.DedicatedCloudService;
import org.openapitools.client.model.DedicatedCloudServiceListResponse;
import org.openapitools.client.model.PatchPayload;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DedicatedCloudServicesApi
 */
@Disabled
public class DedicatedCloudServicesApiTest {

    private final DedicatedCloudServicesApi api = new DedicatedCloudServicesApi();

    /**
     * Implements dedicated cloud service PUT method
     *
     * Create dedicate cloud service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dedicatedCloudServicesCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String dedicatedCloudServiceName = null;
        String apiVersion = null;
        DedicatedCloudService dedicatedCloudServiceRequest = null;
        DedicatedCloudService response = api.dedicatedCloudServicesCreateOrUpdate(subscriptionId, resourceGroupName, dedicatedCloudServiceName, apiVersion, dedicatedCloudServiceRequest);
        // TODO: test validations
    }

    /**
     * Implements dedicatedCloudService DELETE method
     *
     * Delete dedicate cloud service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dedicatedCloudServicesDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String dedicatedCloudServiceName = null;
        String apiVersion = null;
        api.dedicatedCloudServicesDelete(subscriptionId, resourceGroupName, dedicatedCloudServiceName, apiVersion);
        // TODO: test validations
    }

    /**
     * Implements dedicatedCloudService GET method
     *
     * Returns Dedicate Cloud Service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dedicatedCloudServicesGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String dedicatedCloudServiceName = null;
        String apiVersion = null;
        DedicatedCloudService response = api.dedicatedCloudServicesGet(subscriptionId, resourceGroupName, dedicatedCloudServiceName, apiVersion);
        // TODO: test validations
    }

    /**
     * Implements list of dedicatedCloudService objects within RG method
     *
     * Returns list of dedicated cloud services within a resource group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dedicatedCloudServicesListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        String $skipToken = null;
        DedicatedCloudServiceListResponse response = api.dedicatedCloudServicesListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, $filter, $top, $skipToken);
        // TODO: test validations
    }

    /**
     * Implements list of dedicatedCloudService objects within subscription method
     *
     * Returns list of dedicated cloud services within a subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dedicatedCloudServicesListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        String $skipToken = null;
        DedicatedCloudServiceListResponse response = api.dedicatedCloudServicesListBySubscription(subscriptionId, apiVersion, $filter, $top, $skipToken);
        // TODO: test validations
    }

    /**
     * Implements dedicatedCloudService PATCH method
     *
     * Patch dedicated cloud service&#39;s properties
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dedicatedCloudServicesUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String dedicatedCloudServiceName = null;
        String apiVersion = null;
        PatchPayload dedicatedCloudServiceRequest = null;
        DedicatedCloudService response = api.dedicatedCloudServicesUpdate(subscriptionId, resourceGroupName, dedicatedCloudServiceName, apiVersion, dedicatedCloudServiceRequest);
        // TODO: test validations
    }

}
