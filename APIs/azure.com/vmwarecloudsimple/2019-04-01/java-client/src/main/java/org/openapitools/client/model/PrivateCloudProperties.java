/*
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.ResourcePool;
import org.openapitools.client.model.VirtualMachineTemplate;
import org.openapitools.client.model.VirtualNetwork;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Properties of private
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:00:07.139333-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PrivateCloudProperties {
  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE_ID = "availabilityZoneId";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE_ID)
  private String availabilityZoneId;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE_NAME = "availabilityZoneName";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE_NAME)
  private String availabilityZoneName;

  public static final String SERIALIZED_NAME_CLUSTERS_NUMBER = "clustersNumber";
  @SerializedName(SERIALIZED_NAME_CLUSTERS_NUMBER)
  private Integer clustersNumber;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_CREATED_ON = "createdOn";
  @SerializedName(SERIALIZED_NAME_CREATED_ON)
  private OffsetDateTime createdOn;

  public static final String SERIALIZED_NAME_DNS_SERVERS = "dnsServers";
  @SerializedName(SERIALIZED_NAME_DNS_SERVERS)
  private List<String> dnsServers = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXPIRES = "expires";
  @SerializedName(SERIALIZED_NAME_EXPIRES)
  private String expires;

  public static final String SERIALIZED_NAME_NSX_TYPE = "nsxType";
  @SerializedName(SERIALIZED_NAME_NSX_TYPE)
  private String nsxType;

  public static final String SERIALIZED_NAME_PLACEMENT_GROUP_ID = "placementGroupId";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_GROUP_ID)
  private String placementGroupId;

  public static final String SERIALIZED_NAME_PLACEMENT_GROUP_NAME = "placementGroupName";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_GROUP_NAME)
  private String placementGroupName;

  public static final String SERIALIZED_NAME_PRIVATE_CLOUD_ID = "privateCloudId";
  @SerializedName(SERIALIZED_NAME_PRIVATE_CLOUD_ID)
  private UUID privateCloudId;

  public static final String SERIALIZED_NAME_RESOURCE_POOLS = "resourcePools";
  @SerializedName(SERIALIZED_NAME_RESOURCE_POOLS)
  private List<ResourcePool> resourcePools = new ArrayList<>();

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_TOTAL_CPU_CORES = "totalCpuCores";
  @SerializedName(SERIALIZED_NAME_TOTAL_CPU_CORES)
  private Integer totalCpuCores;

  public static final String SERIALIZED_NAME_TOTAL_NODES = "totalNodes";
  @SerializedName(SERIALIZED_NAME_TOTAL_NODES)
  private Integer totalNodes;

  public static final String SERIALIZED_NAME_TOTAL_RAM = "totalRam";
  @SerializedName(SERIALIZED_NAME_TOTAL_RAM)
  private Integer totalRam;

  public static final String SERIALIZED_NAME_TOTAL_STORAGE = "totalStorage";
  @SerializedName(SERIALIZED_NAME_TOTAL_STORAGE)
  private BigDecimal totalStorage;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_V_SPHERE_VERSION = "vSphereVersion";
  @SerializedName(SERIALIZED_NAME_V_SPHERE_VERSION)
  private String vSphereVersion;

  public static final String SERIALIZED_NAME_VCENTER_FQDN = "vcenterFqdn";
  @SerializedName(SERIALIZED_NAME_VCENTER_FQDN)
  private String vcenterFqdn;

  public static final String SERIALIZED_NAME_VCENTER_REFID = "vcenterRefid";
  @SerializedName(SERIALIZED_NAME_VCENTER_REFID)
  private String vcenterRefid;

  public static final String SERIALIZED_NAME_VIRTUAL_MACHINE_TEMPLATES = "virtualMachineTemplates";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_MACHINE_TEMPLATES)
  private List<VirtualMachineTemplate> virtualMachineTemplates = new ArrayList<>();

  public static final String SERIALIZED_NAME_VIRTUAL_NETWORKS = "virtualNetworks";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_NETWORKS)
  private List<VirtualNetwork> virtualNetworks = new ArrayList<>();

  public static final String SERIALIZED_NAME_VR_OPS_ENABLED = "vrOpsEnabled";
  @SerializedName(SERIALIZED_NAME_VR_OPS_ENABLED)
  private Boolean vrOpsEnabled;

  public PrivateCloudProperties() {
  }

  public PrivateCloudProperties availabilityZoneId(String availabilityZoneId) {
    this.availabilityZoneId = availabilityZoneId;
    return this;
  }

  /**
   * Availability Zone id, e.g. \&quot;az1\&quot;
   * @return availabilityZoneId
   */
  @javax.annotation.Nullable
  public String getAvailabilityZoneId() {
    return availabilityZoneId;
  }

  public void setAvailabilityZoneId(String availabilityZoneId) {
    this.availabilityZoneId = availabilityZoneId;
  }


  public PrivateCloudProperties availabilityZoneName(String availabilityZoneName) {
    this.availabilityZoneName = availabilityZoneName;
    return this;
  }

  /**
   * Availability Zone name, e.g. \&quot;Availability Zone 1\&quot;
   * @return availabilityZoneName
   */
  @javax.annotation.Nullable
  public String getAvailabilityZoneName() {
    return availabilityZoneName;
  }

  public void setAvailabilityZoneName(String availabilityZoneName) {
    this.availabilityZoneName = availabilityZoneName;
  }


  public PrivateCloudProperties clustersNumber(Integer clustersNumber) {
    this.clustersNumber = clustersNumber;
    return this;
  }

  /**
   * Number of clusters
   * @return clustersNumber
   */
  @javax.annotation.Nullable
  public Integer getClustersNumber() {
    return clustersNumber;
  }

  public void setClustersNumber(Integer clustersNumber) {
    this.clustersNumber = clustersNumber;
  }


  public PrivateCloudProperties createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * User&#39;s emails who created cloud
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public PrivateCloudProperties createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

  /**
   * When private cloud was created
   * @return createdOn
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }


  public PrivateCloudProperties dnsServers(List<String> dnsServers) {
    this.dnsServers = dnsServers;
    return this;
  }

  public PrivateCloudProperties addDnsServersItem(String dnsServersItem) {
    if (this.dnsServers == null) {
      this.dnsServers = new ArrayList<>();
    }
    this.dnsServers.add(dnsServersItem);
    return this;
  }

  /**
   * Array of DNS servers
   * @return dnsServers
   */
  @javax.annotation.Nullable
  public List<String> getDnsServers() {
    return dnsServers;
  }

  public void setDnsServers(List<String> dnsServers) {
    this.dnsServers = dnsServers;
  }


  public PrivateCloudProperties expires(String expires) {
    this.expires = expires;
    return this;
  }

  /**
   * Expiration date of PC
   * @return expires
   */
  @javax.annotation.Nullable
  public String getExpires() {
    return expires;
  }

  public void setExpires(String expires) {
    this.expires = expires;
  }


  public PrivateCloudProperties nsxType(String nsxType) {
    this.nsxType = nsxType;
    return this;
  }

  /**
   * Nsx Type, e.g. \&quot;Advanced\&quot;
   * @return nsxType
   */
  @javax.annotation.Nullable
  public String getNsxType() {
    return nsxType;
  }

  public void setNsxType(String nsxType) {
    this.nsxType = nsxType;
  }


  public PrivateCloudProperties placementGroupId(String placementGroupId) {
    this.placementGroupId = placementGroupId;
    return this;
  }

  /**
   * Placement Group id, e.g. \&quot;n1\&quot;
   * @return placementGroupId
   */
  @javax.annotation.Nullable
  public String getPlacementGroupId() {
    return placementGroupId;
  }

  public void setPlacementGroupId(String placementGroupId) {
    this.placementGroupId = placementGroupId;
  }


  public PrivateCloudProperties placementGroupName(String placementGroupName) {
    this.placementGroupName = placementGroupName;
    return this;
  }

  /**
   * Placement Group name
   * @return placementGroupName
   */
  @javax.annotation.Nullable
  public String getPlacementGroupName() {
    return placementGroupName;
  }

  public void setPlacementGroupName(String placementGroupName) {
    this.placementGroupName = placementGroupName;
  }


  public PrivateCloudProperties privateCloudId(UUID privateCloudId) {
    this.privateCloudId = privateCloudId;
    return this;
  }

  /**
   * Id of a private cloud
   * @return privateCloudId
   */
  @javax.annotation.Nullable
  public UUID getPrivateCloudId() {
    return privateCloudId;
  }

  public void setPrivateCloudId(UUID privateCloudId) {
    this.privateCloudId = privateCloudId;
  }


  public PrivateCloudProperties resourcePools(List<ResourcePool> resourcePools) {
    this.resourcePools = resourcePools;
    return this;
  }

  public PrivateCloudProperties addResourcePoolsItem(ResourcePool resourcePoolsItem) {
    if (this.resourcePools == null) {
      this.resourcePools = new ArrayList<>();
    }
    this.resourcePools.add(resourcePoolsItem);
    return this;
  }

  /**
   * The list of Resource Pools
   * @return resourcePools
   */
  @javax.annotation.Nullable
  public List<ResourcePool> getResourcePools() {
    return resourcePools;
  }

  public void setResourcePools(List<ResourcePool> resourcePools) {
    this.resourcePools = resourcePools;
  }


  public PrivateCloudProperties state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Private Cloud state, e.g. \&quot;operational\&quot;
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public PrivateCloudProperties totalCpuCores(Integer totalCpuCores) {
    this.totalCpuCores = totalCpuCores;
    return this;
  }

  /**
   * Number of cores
   * @return totalCpuCores
   */
  @javax.annotation.Nullable
  public Integer getTotalCpuCores() {
    return totalCpuCores;
  }

  public void setTotalCpuCores(Integer totalCpuCores) {
    this.totalCpuCores = totalCpuCores;
  }


  public PrivateCloudProperties totalNodes(Integer totalNodes) {
    this.totalNodes = totalNodes;
    return this;
  }

  /**
   * Number of nodes
   * @return totalNodes
   */
  @javax.annotation.Nullable
  public Integer getTotalNodes() {
    return totalNodes;
  }

  public void setTotalNodes(Integer totalNodes) {
    this.totalNodes = totalNodes;
  }


  public PrivateCloudProperties totalRam(Integer totalRam) {
    this.totalRam = totalRam;
    return this;
  }

  /**
   * Memory size
   * @return totalRam
   */
  @javax.annotation.Nullable
  public Integer getTotalRam() {
    return totalRam;
  }

  public void setTotalRam(Integer totalRam) {
    this.totalRam = totalRam;
  }


  public PrivateCloudProperties totalStorage(BigDecimal totalStorage) {
    this.totalStorage = totalStorage;
    return this;
  }

  /**
   * Disk space in TB
   * @return totalStorage
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalStorage() {
    return totalStorage;
  }

  public void setTotalStorage(BigDecimal totalStorage) {
    this.totalStorage = totalStorage;
  }


  public PrivateCloudProperties type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Virtualization type e.g. \&quot;vSphere\&quot;
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public PrivateCloudProperties vSphereVersion(String vSphereVersion) {
    this.vSphereVersion = vSphereVersion;
    return this;
  }

  /**
   * e.g. \&quot;6.5u2\&quot;
   * @return vSphereVersion
   */
  @javax.annotation.Nullable
  public String getvSphereVersion() {
    return vSphereVersion;
  }

  public void setvSphereVersion(String vSphereVersion) {
    this.vSphereVersion = vSphereVersion;
  }


  public PrivateCloudProperties vcenterFqdn(String vcenterFqdn) {
    this.vcenterFqdn = vcenterFqdn;
    return this;
  }

  /**
   * FQDN for vcenter access
   * @return vcenterFqdn
   */
  @javax.annotation.Nullable
  public String getVcenterFqdn() {
    return vcenterFqdn;
  }

  public void setVcenterFqdn(String vcenterFqdn) {
    this.vcenterFqdn = vcenterFqdn;
  }


  public PrivateCloudProperties vcenterRefid(String vcenterRefid) {
    this.vcenterRefid = vcenterRefid;
    return this;
  }

  /**
   * Vcenter ip address
   * @return vcenterRefid
   */
  @javax.annotation.Nullable
  public String getVcenterRefid() {
    return vcenterRefid;
  }

  public void setVcenterRefid(String vcenterRefid) {
    this.vcenterRefid = vcenterRefid;
  }


  public PrivateCloudProperties virtualMachineTemplates(List<VirtualMachineTemplate> virtualMachineTemplates) {
    this.virtualMachineTemplates = virtualMachineTemplates;
    return this;
  }

  public PrivateCloudProperties addVirtualMachineTemplatesItem(VirtualMachineTemplate virtualMachineTemplatesItem) {
    if (this.virtualMachineTemplates == null) {
      this.virtualMachineTemplates = new ArrayList<>();
    }
    this.virtualMachineTemplates.add(virtualMachineTemplatesItem);
    return this;
  }

  /**
   * The list of Virtual Machine Templates
   * @return virtualMachineTemplates
   */
  @javax.annotation.Nullable
  public List<VirtualMachineTemplate> getVirtualMachineTemplates() {
    return virtualMachineTemplates;
  }

  public void setVirtualMachineTemplates(List<VirtualMachineTemplate> virtualMachineTemplates) {
    this.virtualMachineTemplates = virtualMachineTemplates;
  }


  public PrivateCloudProperties virtualNetworks(List<VirtualNetwork> virtualNetworks) {
    this.virtualNetworks = virtualNetworks;
    return this;
  }

  public PrivateCloudProperties addVirtualNetworksItem(VirtualNetwork virtualNetworksItem) {
    if (this.virtualNetworks == null) {
      this.virtualNetworks = new ArrayList<>();
    }
    this.virtualNetworks.add(virtualNetworksItem);
    return this;
  }

  /**
   * The list of Virtual Networks
   * @return virtualNetworks
   */
  @javax.annotation.Nullable
  public List<VirtualNetwork> getVirtualNetworks() {
    return virtualNetworks;
  }

  public void setVirtualNetworks(List<VirtualNetwork> virtualNetworks) {
    this.virtualNetworks = virtualNetworks;
  }


  public PrivateCloudProperties vrOpsEnabled(Boolean vrOpsEnabled) {
    this.vrOpsEnabled = vrOpsEnabled;
    return this;
  }

  /**
   * Is Vrops enabled/disabled
   * @return vrOpsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getVrOpsEnabled() {
    return vrOpsEnabled;
  }

  public void setVrOpsEnabled(Boolean vrOpsEnabled) {
    this.vrOpsEnabled = vrOpsEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrivateCloudProperties privateCloudProperties = (PrivateCloudProperties) o;
    return Objects.equals(this.availabilityZoneId, privateCloudProperties.availabilityZoneId) &&
        Objects.equals(this.availabilityZoneName, privateCloudProperties.availabilityZoneName) &&
        Objects.equals(this.clustersNumber, privateCloudProperties.clustersNumber) &&
        Objects.equals(this.createdBy, privateCloudProperties.createdBy) &&
        Objects.equals(this.createdOn, privateCloudProperties.createdOn) &&
        Objects.equals(this.dnsServers, privateCloudProperties.dnsServers) &&
        Objects.equals(this.expires, privateCloudProperties.expires) &&
        Objects.equals(this.nsxType, privateCloudProperties.nsxType) &&
        Objects.equals(this.placementGroupId, privateCloudProperties.placementGroupId) &&
        Objects.equals(this.placementGroupName, privateCloudProperties.placementGroupName) &&
        Objects.equals(this.privateCloudId, privateCloudProperties.privateCloudId) &&
        Objects.equals(this.resourcePools, privateCloudProperties.resourcePools) &&
        Objects.equals(this.state, privateCloudProperties.state) &&
        Objects.equals(this.totalCpuCores, privateCloudProperties.totalCpuCores) &&
        Objects.equals(this.totalNodes, privateCloudProperties.totalNodes) &&
        Objects.equals(this.totalRam, privateCloudProperties.totalRam) &&
        Objects.equals(this.totalStorage, privateCloudProperties.totalStorage) &&
        Objects.equals(this.type, privateCloudProperties.type) &&
        Objects.equals(this.vSphereVersion, privateCloudProperties.vSphereVersion) &&
        Objects.equals(this.vcenterFqdn, privateCloudProperties.vcenterFqdn) &&
        Objects.equals(this.vcenterRefid, privateCloudProperties.vcenterRefid) &&
        Objects.equals(this.virtualMachineTemplates, privateCloudProperties.virtualMachineTemplates) &&
        Objects.equals(this.virtualNetworks, privateCloudProperties.virtualNetworks) &&
        Objects.equals(this.vrOpsEnabled, privateCloudProperties.vrOpsEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityZoneId, availabilityZoneName, clustersNumber, createdBy, createdOn, dnsServers, expires, nsxType, placementGroupId, placementGroupName, privateCloudId, resourcePools, state, totalCpuCores, totalNodes, totalRam, totalStorage, type, vSphereVersion, vcenterFqdn, vcenterRefid, virtualMachineTemplates, virtualNetworks, vrOpsEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrivateCloudProperties {\n");
    sb.append("    availabilityZoneId: ").append(toIndentedString(availabilityZoneId)).append("\n");
    sb.append("    availabilityZoneName: ").append(toIndentedString(availabilityZoneName)).append("\n");
    sb.append("    clustersNumber: ").append(toIndentedString(clustersNumber)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    dnsServers: ").append(toIndentedString(dnsServers)).append("\n");
    sb.append("    expires: ").append(toIndentedString(expires)).append("\n");
    sb.append("    nsxType: ").append(toIndentedString(nsxType)).append("\n");
    sb.append("    placementGroupId: ").append(toIndentedString(placementGroupId)).append("\n");
    sb.append("    placementGroupName: ").append(toIndentedString(placementGroupName)).append("\n");
    sb.append("    privateCloudId: ").append(toIndentedString(privateCloudId)).append("\n");
    sb.append("    resourcePools: ").append(toIndentedString(resourcePools)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    totalCpuCores: ").append(toIndentedString(totalCpuCores)).append("\n");
    sb.append("    totalNodes: ").append(toIndentedString(totalNodes)).append("\n");
    sb.append("    totalRam: ").append(toIndentedString(totalRam)).append("\n");
    sb.append("    totalStorage: ").append(toIndentedString(totalStorage)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vSphereVersion: ").append(toIndentedString(vSphereVersion)).append("\n");
    sb.append("    vcenterFqdn: ").append(toIndentedString(vcenterFqdn)).append("\n");
    sb.append("    vcenterRefid: ").append(toIndentedString(vcenterRefid)).append("\n");
    sb.append("    virtualMachineTemplates: ").append(toIndentedString(virtualMachineTemplates)).append("\n");
    sb.append("    virtualNetworks: ").append(toIndentedString(virtualNetworks)).append("\n");
    sb.append("    vrOpsEnabled: ").append(toIndentedString(vrOpsEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("availabilityZoneId");
    openapiFields.add("availabilityZoneName");
    openapiFields.add("clustersNumber");
    openapiFields.add("createdBy");
    openapiFields.add("createdOn");
    openapiFields.add("dnsServers");
    openapiFields.add("expires");
    openapiFields.add("nsxType");
    openapiFields.add("placementGroupId");
    openapiFields.add("placementGroupName");
    openapiFields.add("privateCloudId");
    openapiFields.add("resourcePools");
    openapiFields.add("state");
    openapiFields.add("totalCpuCores");
    openapiFields.add("totalNodes");
    openapiFields.add("totalRam");
    openapiFields.add("totalStorage");
    openapiFields.add("type");
    openapiFields.add("vSphereVersion");
    openapiFields.add("vcenterFqdn");
    openapiFields.add("vcenterRefid");
    openapiFields.add("virtualMachineTemplates");
    openapiFields.add("virtualNetworks");
    openapiFields.add("vrOpsEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PrivateCloudProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PrivateCloudProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PrivateCloudProperties is not found in the empty JSON string", PrivateCloudProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PrivateCloudProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PrivateCloudProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("availabilityZoneId") != null && !jsonObj.get("availabilityZoneId").isJsonNull()) && !jsonObj.get("availabilityZoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `availabilityZoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("availabilityZoneId").toString()));
      }
      if ((jsonObj.get("availabilityZoneName") != null && !jsonObj.get("availabilityZoneName").isJsonNull()) && !jsonObj.get("availabilityZoneName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `availabilityZoneName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("availabilityZoneName").toString()));
      }
      if ((jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) && !jsonObj.get("createdBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdBy").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("dnsServers") != null && !jsonObj.get("dnsServers").isJsonNull() && !jsonObj.get("dnsServers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dnsServers` to be an array in the JSON string but got `%s`", jsonObj.get("dnsServers").toString()));
      }
      if ((jsonObj.get("expires") != null && !jsonObj.get("expires").isJsonNull()) && !jsonObj.get("expires").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expires` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expires").toString()));
      }
      if ((jsonObj.get("nsxType") != null && !jsonObj.get("nsxType").isJsonNull()) && !jsonObj.get("nsxType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nsxType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nsxType").toString()));
      }
      if ((jsonObj.get("placementGroupId") != null && !jsonObj.get("placementGroupId").isJsonNull()) && !jsonObj.get("placementGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `placementGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("placementGroupId").toString()));
      }
      if ((jsonObj.get("placementGroupName") != null && !jsonObj.get("placementGroupName").isJsonNull()) && !jsonObj.get("placementGroupName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `placementGroupName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("placementGroupName").toString()));
      }
      if ((jsonObj.get("privateCloudId") != null && !jsonObj.get("privateCloudId").isJsonNull()) && !jsonObj.get("privateCloudId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privateCloudId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privateCloudId").toString()));
      }
      if (jsonObj.get("resourcePools") != null && !jsonObj.get("resourcePools").isJsonNull()) {
        JsonArray jsonArrayresourcePools = jsonObj.getAsJsonArray("resourcePools");
        if (jsonArrayresourcePools != null) {
          // ensure the json data is an array
          if (!jsonObj.get("resourcePools").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `resourcePools` to be an array in the JSON string but got `%s`", jsonObj.get("resourcePools").toString()));
          }

          // validate the optional field `resourcePools` (array)
          for (int i = 0; i < jsonArrayresourcePools.size(); i++) {
            ResourcePool.validateJsonElement(jsonArrayresourcePools.get(i));
          };
        }
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("vSphereVersion") != null && !jsonObj.get("vSphereVersion").isJsonNull()) && !jsonObj.get("vSphereVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vSphereVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vSphereVersion").toString()));
      }
      if ((jsonObj.get("vcenterFqdn") != null && !jsonObj.get("vcenterFqdn").isJsonNull()) && !jsonObj.get("vcenterFqdn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vcenterFqdn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vcenterFqdn").toString()));
      }
      if ((jsonObj.get("vcenterRefid") != null && !jsonObj.get("vcenterRefid").isJsonNull()) && !jsonObj.get("vcenterRefid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vcenterRefid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vcenterRefid").toString()));
      }
      if (jsonObj.get("virtualMachineTemplates") != null && !jsonObj.get("virtualMachineTemplates").isJsonNull()) {
        JsonArray jsonArrayvirtualMachineTemplates = jsonObj.getAsJsonArray("virtualMachineTemplates");
        if (jsonArrayvirtualMachineTemplates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("virtualMachineTemplates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `virtualMachineTemplates` to be an array in the JSON string but got `%s`", jsonObj.get("virtualMachineTemplates").toString()));
          }

          // validate the optional field `virtualMachineTemplates` (array)
          for (int i = 0; i < jsonArrayvirtualMachineTemplates.size(); i++) {
            VirtualMachineTemplate.validateJsonElement(jsonArrayvirtualMachineTemplates.get(i));
          };
        }
      }
      if (jsonObj.get("virtualNetworks") != null && !jsonObj.get("virtualNetworks").isJsonNull()) {
        JsonArray jsonArrayvirtualNetworks = jsonObj.getAsJsonArray("virtualNetworks");
        if (jsonArrayvirtualNetworks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("virtualNetworks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `virtualNetworks` to be an array in the JSON string but got `%s`", jsonObj.get("virtualNetworks").toString()));
          }

          // validate the optional field `virtualNetworks` (array)
          for (int i = 0; i < jsonArrayvirtualNetworks.size(); i++) {
            VirtualNetwork.validateJsonElement(jsonArrayvirtualNetworks.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PrivateCloudProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PrivateCloudProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PrivateCloudProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PrivateCloudProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<PrivateCloudProperties>() {
           @Override
           public void write(JsonWriter out, PrivateCloudProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PrivateCloudProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PrivateCloudProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PrivateCloudProperties
   * @throws IOException if the JSON string is invalid with respect to PrivateCloudProperties
   */
  public static PrivateCloudProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PrivateCloudProperties.class);
  }

  /**
   * Convert an instance of PrivateCloudProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

