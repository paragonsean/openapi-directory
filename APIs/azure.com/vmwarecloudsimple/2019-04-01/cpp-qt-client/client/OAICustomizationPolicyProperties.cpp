/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomizationPolicyProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomizationPolicyProperties::OAICustomizationPolicyProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomizationPolicyProperties::OAICustomizationPolicyProperties() {
    this->initializeModel();
}

OAICustomizationPolicyProperties::~OAICustomizationPolicyProperties() {}

void OAICustomizationPolicyProperties::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_private_cloud_id_isSet = false;
    m_private_cloud_id_isValid = false;

    m_specification_isSet = false;
    m_specification_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAICustomizationPolicyProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomizationPolicyProperties::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_private_cloud_id_isValid = ::OpenAPI::fromJsonValue(m_private_cloud_id, json[QString("privateCloudId")]);
    m_private_cloud_id_isSet = !json[QString("privateCloudId")].isNull() && m_private_cloud_id_isValid;

    m_specification_isValid = ::OpenAPI::fromJsonValue(m_specification, json[QString("specification")]);
    m_specification_isSet = !json[QString("specification")].isNull() && m_specification_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAICustomizationPolicyProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomizationPolicyProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_private_cloud_id_isSet) {
        obj.insert(QString("privateCloudId"), ::OpenAPI::toJsonValue(m_private_cloud_id));
    }
    if (m_specification.isSet()) {
        obj.insert(QString("specification"), ::OpenAPI::toJsonValue(m_specification));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAICustomizationPolicyProperties::getDescription() const {
    return m_description;
}
void OAICustomizationPolicyProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICustomizationPolicyProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAICustomizationPolicyProperties::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICustomizationPolicyProperties::getPrivateCloudId() const {
    return m_private_cloud_id;
}
void OAICustomizationPolicyProperties::setPrivateCloudId(const QString &private_cloud_id) {
    m_private_cloud_id = private_cloud_id;
    m_private_cloud_id_isSet = true;
}

bool OAICustomizationPolicyProperties::is_private_cloud_id_Set() const{
    return m_private_cloud_id_isSet;
}

bool OAICustomizationPolicyProperties::is_private_cloud_id_Valid() const{
    return m_private_cloud_id_isValid;
}

OAICustomizationSpecification OAICustomizationPolicyProperties::getSpecification() const {
    return m_specification;
}
void OAICustomizationPolicyProperties::setSpecification(const OAICustomizationSpecification &specification) {
    m_specification = specification;
    m_specification_isSet = true;
}

bool OAICustomizationPolicyProperties::is_specification_Set() const{
    return m_specification_isSet;
}

bool OAICustomizationPolicyProperties::is_specification_Valid() const{
    return m_specification_isValid;
}

QString OAICustomizationPolicyProperties::getType() const {
    return m_type;
}
void OAICustomizationPolicyProperties::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICustomizationPolicyProperties::is_type_Set() const{
    return m_type_isSet;
}

bool OAICustomizationPolicyProperties::is_type_Valid() const{
    return m_type_isValid;
}

QString OAICustomizationPolicyProperties::getVersion() const {
    return m_version;
}
void OAICustomizationPolicyProperties::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAICustomizationPolicyProperties::is_version_Set() const{
    return m_version_isSet;
}

bool OAICustomizationPolicyProperties::is_version_Valid() const{
    return m_version_isValid;
}

bool OAICustomizationPolicyProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_cloud_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomizationPolicyProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
