/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGuestOSNICCustomization.h
 *
 * Guest OS nic customization
 */

#ifndef OAIGuestOSNICCustomization_H
#define OAIGuestOSNICCustomization_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGuestOSNICCustomization : public OAIObject {
public:
    OAIGuestOSNICCustomization();
    OAIGuestOSNICCustomization(QString json);
    ~OAIGuestOSNICCustomization() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAllocation() const;
    void setAllocation(const QString &allocation);
    bool is_allocation_Set() const;
    bool is_allocation_Valid() const;

    QList<QString> getDnsServers() const;
    void setDnsServers(const QList<QString> &dns_servers);
    bool is_dns_servers_Set() const;
    bool is_dns_servers_Valid() const;

    QList<QString> getGateway() const;
    void setGateway(const QList<QString> &gateway);
    bool is_gateway_Set() const;
    bool is_gateway_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    QString getMask() const;
    void setMask(const QString &mask);
    bool is_mask_Set() const;
    bool is_mask_Valid() const;

    QString getPrimaryWinsServer() const;
    void setPrimaryWinsServer(const QString &primary_wins_server);
    bool is_primary_wins_server_Set() const;
    bool is_primary_wins_server_Valid() const;

    QString getSecondaryWinsServer() const;
    void setSecondaryWinsServer(const QString &secondary_wins_server);
    bool is_secondary_wins_server_Set() const;
    bool is_secondary_wins_server_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_allocation;
    bool m_allocation_isSet;
    bool m_allocation_isValid;

    QList<QString> m_dns_servers;
    bool m_dns_servers_isSet;
    bool m_dns_servers_isValid;

    QList<QString> m_gateway;
    bool m_gateway_isSet;
    bool m_gateway_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    QString m_mask;
    bool m_mask_isSet;
    bool m_mask_isValid;

    QString m_primary_wins_server;
    bool m_primary_wins_server_isSet;
    bool m_primary_wins_server_isValid;

    QString m_secondary_wins_server;
    bool m_secondary_wins_server_isSet;
    bool m_secondary_wins_server_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGuestOSNICCustomization)

#endif // OAIGuestOSNICCustomization_H
