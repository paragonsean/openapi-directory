/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualMachineProperties.h
 *
 * Properties of virtual machine
 */

#ifndef OAIVirtualMachineProperties_H
#define OAIVirtualMachineProperties_H

#include <QJsonObject>

#include "OAIGuestOSCustomization.h"
#include "OAIResourcePool.h"
#include "OAIVirtualDisk.h"
#include "OAIVirtualDiskController.h"
#include "OAIVirtualNic.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVirtualDiskController;
class OAIGuestOSCustomization;
class OAIVirtualDisk;
class OAIVirtualNic;
class OAIResourcePool;

class OAIVirtualMachineProperties : public OAIObject {
public:
    OAIVirtualMachineProperties();
    OAIVirtualMachineProperties(QString json);
    ~OAIVirtualMachineProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAmountOfRam() const;
    void setAmountOfRam(const qint32 &amount_of_ram);
    bool is_amount_of_ram_Set() const;
    bool is_amount_of_ram_Valid() const;

    QList<OAIVirtualDiskController> getControllers() const;
    void setControllers(const QList<OAIVirtualDiskController> &controllers);
    bool is_controllers_Set() const;
    bool is_controllers_Valid() const;

    OAIGuestOSCustomization getCustomization() const;
    void setCustomization(const OAIGuestOSCustomization &customization);
    bool is_customization_Set() const;
    bool is_customization_Valid() const;

    QList<OAIVirtualDisk> getDisks() const;
    void setDisks(const QList<OAIVirtualDisk> &disks);
    bool is_disks_Set() const;
    bool is_disks_Valid() const;

    QString getDnsname() const;
    void setDnsname(const QString &dnsname);
    bool is_dnsname_Set() const;
    bool is_dnsname_Valid() const;

    bool isExposeToGuestVm() const;
    void setExposeToGuestVm(const bool &expose_to_guest_vm);
    bool is_expose_to_guest_vm_Set() const;
    bool is_expose_to_guest_vm_Valid() const;

    QString getFolder() const;
    void setFolder(const QString &folder);
    bool is_folder_Set() const;
    bool is_folder_Valid() const;

    QString getGuestOs() const;
    void setGuestOs(const QString &guest_os);
    bool is_guest_os_Set() const;
    bool is_guest_os_Valid() const;

    QString getGuestOsType() const;
    void setGuestOsType(const QString &guest_os_type);
    bool is_guest_os_type_Set() const;
    bool is_guest_os_type_Valid() const;

    QList<OAIVirtualNic> getNics() const;
    void setNics(const QList<OAIVirtualNic> &nics);
    bool is_nics_Set() const;
    bool is_nics_Valid() const;

    qint32 getNumberOfCores() const;
    void setNumberOfCores(const qint32 &number_of_cores);
    bool is_number_of_cores_Set() const;
    bool is_number_of_cores_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getPrivateCloudId() const;
    void setPrivateCloudId(const QString &private_cloud_id);
    bool is_private_cloud_id_Set() const;
    bool is_private_cloud_id_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getPublicIp() const;
    void setPublicIp(const QString &public_ip);
    bool is_public_ip_Set() const;
    bool is_public_ip_Valid() const;

    OAIResourcePool getResourcePool() const;
    void setResourcePool(const OAIResourcePool &resource_pool);
    bool is_resource_pool_Set() const;
    bool is_resource_pool_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTemplateId() const;
    void setTemplateId(const QString &template_id);
    bool is_template_id_Set() const;
    bool is_template_id_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QList<QString> getVSphereNetworks() const;
    void setVSphereNetworks(const QList<QString> &v_sphere_networks);
    bool is_v_sphere_networks_Set() const;
    bool is_v_sphere_networks_Valid() const;

    QString getVmId() const;
    void setVmId(const QString &vm_id);
    bool is_vm_id_Set() const;
    bool is_vm_id_Valid() const;

    QString getVmwaretools() const;
    void setVmwaretools(const QString &vmwaretools);
    bool is_vmwaretools_Set() const;
    bool is_vmwaretools_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_amount_of_ram;
    bool m_amount_of_ram_isSet;
    bool m_amount_of_ram_isValid;

    QList<OAIVirtualDiskController> m_controllers;
    bool m_controllers_isSet;
    bool m_controllers_isValid;

    OAIGuestOSCustomization m_customization;
    bool m_customization_isSet;
    bool m_customization_isValid;

    QList<OAIVirtualDisk> m_disks;
    bool m_disks_isSet;
    bool m_disks_isValid;

    QString m_dnsname;
    bool m_dnsname_isSet;
    bool m_dnsname_isValid;

    bool m_expose_to_guest_vm;
    bool m_expose_to_guest_vm_isSet;
    bool m_expose_to_guest_vm_isValid;

    QString m_folder;
    bool m_folder_isSet;
    bool m_folder_isValid;

    QString m_guest_os;
    bool m_guest_os_isSet;
    bool m_guest_os_isValid;

    QString m_guest_os_type;
    bool m_guest_os_type_isSet;
    bool m_guest_os_type_isValid;

    QList<OAIVirtualNic> m_nics;
    bool m_nics_isSet;
    bool m_nics_isValid;

    qint32 m_number_of_cores;
    bool m_number_of_cores_isSet;
    bool m_number_of_cores_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_private_cloud_id;
    bool m_private_cloud_id_isSet;
    bool m_private_cloud_id_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_public_ip;
    bool m_public_ip_isSet;
    bool m_public_ip_isValid;

    OAIResourcePool m_resource_pool;
    bool m_resource_pool_isSet;
    bool m_resource_pool_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_template_id;
    bool m_template_id_isSet;
    bool m_template_id_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QList<QString> m_v_sphere_networks;
    bool m_v_sphere_networks_isSet;
    bool m_v_sphere_networks_isValid;

    QString m_vm_id;
    bool m_vm_id_isSet;
    bool m_vm_id_isValid;

    QString m_vmwaretools;
    bool m_vmwaretools_isSet;
    bool m_vmwaretools_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualMachineProperties)

#endif // OAIVirtualMachineProperties_H
