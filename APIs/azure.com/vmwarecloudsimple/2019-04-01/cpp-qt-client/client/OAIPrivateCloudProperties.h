/**
 * VMwareCloudSimple
 * Description of the new service
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPrivateCloudProperties.h
 *
 * Properties of private
 */

#ifndef OAIPrivateCloudProperties_H
#define OAIPrivateCloudProperties_H

#include <QJsonObject>

#include "OAIResourcePool.h"
#include "OAIVirtualMachineTemplate.h"
#include "OAIVirtualNetwork.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourcePool;
class OAIVirtualMachineTemplate;
class OAIVirtualNetwork;

class OAIPrivateCloudProperties : public OAIObject {
public:
    OAIPrivateCloudProperties();
    OAIPrivateCloudProperties(QString json);
    ~OAIPrivateCloudProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvailabilityZoneId() const;
    void setAvailabilityZoneId(const QString &availability_zone_id);
    bool is_availability_zone_id_Set() const;
    bool is_availability_zone_id_Valid() const;

    QString getAvailabilityZoneName() const;
    void setAvailabilityZoneName(const QString &availability_zone_name);
    bool is_availability_zone_name_Set() const;
    bool is_availability_zone_name_Valid() const;

    qint32 getClustersNumber() const;
    void setClustersNumber(const qint32 &clusters_number);
    bool is_clusters_number_Set() const;
    bool is_clusters_number_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QDateTime getCreatedOn() const;
    void setCreatedOn(const QDateTime &created_on);
    bool is_created_on_Set() const;
    bool is_created_on_Valid() const;

    QList<QString> getDnsServers() const;
    void setDnsServers(const QList<QString> &dns_servers);
    bool is_dns_servers_Set() const;
    bool is_dns_servers_Valid() const;

    QString getExpires() const;
    void setExpires(const QString &expires);
    bool is_expires_Set() const;
    bool is_expires_Valid() const;

    QString getNsxType() const;
    void setNsxType(const QString &nsx_type);
    bool is_nsx_type_Set() const;
    bool is_nsx_type_Valid() const;

    QString getPlacementGroupId() const;
    void setPlacementGroupId(const QString &placement_group_id);
    bool is_placement_group_id_Set() const;
    bool is_placement_group_id_Valid() const;

    QString getPlacementGroupName() const;
    void setPlacementGroupName(const QString &placement_group_name);
    bool is_placement_group_name_Set() const;
    bool is_placement_group_name_Valid() const;

    QString getPrivateCloudId() const;
    void setPrivateCloudId(const QString &private_cloud_id);
    bool is_private_cloud_id_Set() const;
    bool is_private_cloud_id_Valid() const;

    QList<OAIResourcePool> getResourcePools() const;
    void setResourcePools(const QList<OAIResourcePool> &resource_pools);
    bool is_resource_pools_Set() const;
    bool is_resource_pools_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    qint32 getTotalCpuCores() const;
    void setTotalCpuCores(const qint32 &total_cpu_cores);
    bool is_total_cpu_cores_Set() const;
    bool is_total_cpu_cores_Valid() const;

    qint32 getTotalNodes() const;
    void setTotalNodes(const qint32 &total_nodes);
    bool is_total_nodes_Set() const;
    bool is_total_nodes_Valid() const;

    qint32 getTotalRam() const;
    void setTotalRam(const qint32 &total_ram);
    bool is_total_ram_Set() const;
    bool is_total_ram_Valid() const;

    double getTotalStorage() const;
    void setTotalStorage(const double &total_storage);
    bool is_total_storage_Set() const;
    bool is_total_storage_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getVSphereVersion() const;
    void setVSphereVersion(const QString &v_sphere_version);
    bool is_v_sphere_version_Set() const;
    bool is_v_sphere_version_Valid() const;

    QString getVcenterFqdn() const;
    void setVcenterFqdn(const QString &vcenter_fqdn);
    bool is_vcenter_fqdn_Set() const;
    bool is_vcenter_fqdn_Valid() const;

    QString getVcenterRefid() const;
    void setVcenterRefid(const QString &vcenter_refid);
    bool is_vcenter_refid_Set() const;
    bool is_vcenter_refid_Valid() const;

    QList<OAIVirtualMachineTemplate> getVirtualMachineTemplates() const;
    void setVirtualMachineTemplates(const QList<OAIVirtualMachineTemplate> &virtual_machine_templates);
    bool is_virtual_machine_templates_Set() const;
    bool is_virtual_machine_templates_Valid() const;

    QList<OAIVirtualNetwork> getVirtualNetworks() const;
    void setVirtualNetworks(const QList<OAIVirtualNetwork> &virtual_networks);
    bool is_virtual_networks_Set() const;
    bool is_virtual_networks_Valid() const;

    bool isVrOpsEnabled() const;
    void setVrOpsEnabled(const bool &vr_ops_enabled);
    bool is_vr_ops_enabled_Set() const;
    bool is_vr_ops_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_availability_zone_id;
    bool m_availability_zone_id_isSet;
    bool m_availability_zone_id_isValid;

    QString m_availability_zone_name;
    bool m_availability_zone_name_isSet;
    bool m_availability_zone_name_isValid;

    qint32 m_clusters_number;
    bool m_clusters_number_isSet;
    bool m_clusters_number_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QDateTime m_created_on;
    bool m_created_on_isSet;
    bool m_created_on_isValid;

    QList<QString> m_dns_servers;
    bool m_dns_servers_isSet;
    bool m_dns_servers_isValid;

    QString m_expires;
    bool m_expires_isSet;
    bool m_expires_isValid;

    QString m_nsx_type;
    bool m_nsx_type_isSet;
    bool m_nsx_type_isValid;

    QString m_placement_group_id;
    bool m_placement_group_id_isSet;
    bool m_placement_group_id_isValid;

    QString m_placement_group_name;
    bool m_placement_group_name_isSet;
    bool m_placement_group_name_isValid;

    QString m_private_cloud_id;
    bool m_private_cloud_id_isSet;
    bool m_private_cloud_id_isValid;

    QList<OAIResourcePool> m_resource_pools;
    bool m_resource_pools_isSet;
    bool m_resource_pools_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    qint32 m_total_cpu_cores;
    bool m_total_cpu_cores_isSet;
    bool m_total_cpu_cores_isValid;

    qint32 m_total_nodes;
    bool m_total_nodes_isSet;
    bool m_total_nodes_isValid;

    qint32 m_total_ram;
    bool m_total_ram_isSet;
    bool m_total_ram_isValid;

    double m_total_storage;
    bool m_total_storage_isSet;
    bool m_total_storage_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_v_sphere_version;
    bool m_v_sphere_version_isSet;
    bool m_v_sphere_version_isValid;

    QString m_vcenter_fqdn;
    bool m_vcenter_fqdn_isSet;
    bool m_vcenter_fqdn_isValid;

    QString m_vcenter_refid;
    bool m_vcenter_refid_isSet;
    bool m_vcenter_refid_isValid;

    QList<OAIVirtualMachineTemplate> m_virtual_machine_templates;
    bool m_virtual_machine_templates_isSet;
    bool m_virtual_machine_templates_isValid;

    QList<OAIVirtualNetwork> m_virtual_networks;
    bool m_virtual_networks_isSet;
    bool m_virtual_networks_isValid;

    bool m_vr_ops_enabled;
    bool m_vr_ops_enabled_isSet;
    bool m_vr_ops_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPrivateCloudProperties)

#endif // OAIPrivateCloudProperties_H
