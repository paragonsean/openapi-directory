/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Email Templates associated with your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner from './EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner';

/**
 * The EmailTemplateListByService200ResponseValueInnerProperties model module.
 * @module model/EmailTemplateListByService200ResponseValueInnerProperties
 * @version 2019-01-01
 */
class EmailTemplateListByService200ResponseValueInnerProperties {
    /**
     * Constructs a new <code>EmailTemplateListByService200ResponseValueInnerProperties</code>.
     * Email Template Contract properties.
     * @alias module:model/EmailTemplateListByService200ResponseValueInnerProperties
     * @param body {String} Email Template Body. This should be a valid XDocument
     * @param subject {String} Subject of the Template.
     */
    constructor(body, subject) { 
        
        EmailTemplateListByService200ResponseValueInnerProperties.initialize(this, body, subject);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, body, subject) { 
        obj['body'] = body;
        obj['subject'] = subject;
    }

    /**
     * Constructs a <code>EmailTemplateListByService200ResponseValueInnerProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmailTemplateListByService200ResponseValueInnerProperties} obj Optional instance to populate.
     * @return {module:model/EmailTemplateListByService200ResponseValueInnerProperties} The populated <code>EmailTemplateListByService200ResponseValueInnerProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmailTemplateListByService200ResponseValueInnerProperties();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isDefault')) {
                obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner]);
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmailTemplateListByService200ResponseValueInnerProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmailTemplateListByService200ResponseValueInnerProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EmailTemplateListByService200ResponseValueInnerProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

EmailTemplateListByService200ResponseValueInnerProperties.RequiredProperties = ["body", "subject"];

/**
 * Email Template Body. This should be a valid XDocument
 * @member {String} body
 */
EmailTemplateListByService200ResponseValueInnerProperties.prototype['body'] = undefined;

/**
 * Description of the Email Template.
 * @member {String} description
 */
EmailTemplateListByService200ResponseValueInnerProperties.prototype['description'] = undefined;

/**
 * Whether the template is the default template provided by Api Management or has been edited.
 * @member {Boolean} isDefault
 */
EmailTemplateListByService200ResponseValueInnerProperties.prototype['isDefault'] = undefined;

/**
 * Email Template Parameter values.
 * @member {Array.<module:model/EmailTemplateListByService200ResponseValueInnerPropertiesParametersInner>} parameters
 */
EmailTemplateListByService200ResponseValueInnerProperties.prototype['parameters'] = undefined;

/**
 * Subject of the Template.
 * @member {String} subject
 */
EmailTemplateListByService200ResponseValueInnerProperties.prototype['subject'] = undefined;

/**
 * Title of the Template.
 * @member {String} title
 */
EmailTemplateListByService200ResponseValueInnerProperties.prototype['title'] = undefined;






export default EmailTemplateListByService200ResponseValueInnerProperties;

