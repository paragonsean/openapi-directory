/**
 * Azure IoT Central
 * Azure IoT Central is a service that makes it easy to connect, monitor, and manage your IoT devices at scale.
 *
 * The version of the OpenAPI document: preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceTemplate.h
 *
 * 
 */

#ifndef OAIDeviceTemplate_H
#define OAIDeviceTemplate_H

#include <QJsonObject>

#include "OAICapabilityModel.h"
#include "OAISolutionModel.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICapabilityModel;
class OAISolutionModel;

class OAIDeviceTemplate : public OAIObject {
public:
    OAIDeviceTemplate();
    OAIDeviceTemplate(QString json);
    ~OAIDeviceTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICapabilityModel getCapabilityModel() const;
    void setCapabilityModel(const OAICapabilityModel &capability_model);
    bool is_capability_model_Set() const;
    bool is_capability_model_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAISolutionModel getSolutionModel() const;
    void setSolutionModel(const OAISolutionModel &solution_model);
    bool is_solution_model_Set() const;
    bool is_solution_model_Valid() const;

    QList<QString> getTypes() const;
    void setTypes(const QList<QString> &types);
    bool is_types_Set() const;
    bool is_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICapabilityModel m_capability_model;
    bool m_capability_model_isSet;
    bool m_capability_model_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAISolutionModel m_solution_model;
    bool m_solution_model_isSet;
    bool m_solution_model_isValid;

    QList<QString> m_types;
    bool m_types_isSet;
    bool m_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceTemplate)

#endif // OAIDeviceTemplate_H
