/**
 * Azure IoT Central
 * Azure IoT Central is a service that makes it easy to connect, monitor, and manage your IoT devices at scale.
 *
 * The version of the OpenAPI document: preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISolutionModel.h
 *
 * 
 */

#ifndef OAISolutionModel_H
#define OAISolutionModel_H

#include <QJsonObject>

#include "OAICapability.h"
#include "OAIInitialValue.h"
#include "OAIObject.h"
#include "OAIOverride.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICapability;
class OAIInitialValue;
class OAIOverride;

class OAISolutionModel : public OAIObject {
public:
    OAISolutionModel();
    OAISolutionModel(QString json);
    ~OAISolutionModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getContext() const;
    void setContext(const OAIObject &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getType() const;
    void setType(const QList<QString> &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<OAICapability> getCloudProperties() const;
    void setCloudProperties(const QList<OAICapability> &cloud_properties);
    bool is_cloud_properties_Set() const;
    bool is_cloud_properties_Valid() const;

    QList<OAIInitialValue> getInitialValues() const;
    void setInitialValues(const QList<OAIInitialValue> &initial_values);
    bool is_initial_values_Set() const;
    bool is_initial_values_Valid() const;

    QList<OAIOverride> getOverrides() const;
    void setOverrides(const QList<OAIOverride> &overrides);
    bool is_overrides_Set() const;
    bool is_overrides_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<OAICapability> m_cloud_properties;
    bool m_cloud_properties_isSet;
    bool m_cloud_properties_isValid;

    QList<OAIInitialValue> m_initial_values;
    bool m_initial_values_isSet;
    bool m_initial_values_isValid;

    QList<OAIOverride> m_overrides;
    bool m_overrides_isSet;
    bool m_overrides_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISolutionModel)

#endif // OAISolutionModel_H
