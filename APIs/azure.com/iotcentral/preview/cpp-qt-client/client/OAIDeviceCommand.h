/**
 * Azure IoT Central
 * Azure IoT Central is a service that makes it easy to connect, monitor, and manage your IoT devices at scale.
 *
 * The version of the OpenAPI document: preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceCommand.h
 *
 * 
 */

#ifndef OAIDeviceCommand_H
#define OAIDeviceCommand_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeviceCommand : public OAIObject {
public:
    OAIDeviceCommand();
    OAIDeviceCommand(QString json);
    ~OAIDeviceCommand() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIObject getRequest() const;
    void setRequest(const OAIObject &request);
    bool is_request_Set() const;
    bool is_request_Valid() const;

    OAIObject getResponse() const;
    void setResponse(const OAIObject &response);
    bool is_response_Set() const;
    bool is_response_Valid() const;

    double getResponseCode() const;
    void setResponseCode(const double &response_code);
    bool is_response_code_Set() const;
    bool is_response_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIObject m_request;
    bool m_request_isSet;
    bool m_request_isValid;

    OAIObject m_response;
    bool m_response_isSet;
    bool m_response_isValid;

    double m_response_code;
    bool m_response_code_isSet;
    bool m_response_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceCommand)

#endif // OAIDeviceCommand_H
