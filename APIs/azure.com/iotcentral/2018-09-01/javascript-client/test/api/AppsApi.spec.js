/**
 * IotCentralClient
 * Use this API to manage IoT Central Applications in your Azure subscription.
 *
 * The version of the OpenAPI document: 2018-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IotCentralClient);
  }
}(this, function(expect, IotCentralClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IotCentralClient.AppsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AppsApi', function() {
    describe('appsCheckNameAvailability', function() {
      it('should call appsCheckNameAvailability successfully', function(done) {
        //uncomment below and update the code to test appsCheckNameAvailability
        //instance.appsCheckNameAvailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsCheckSubdomainAvailability', function() {
      it('should call appsCheckSubdomainAvailability successfully', function(done) {
        //uncomment below and update the code to test appsCheckSubdomainAvailability
        //instance.appsCheckSubdomainAvailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsCreateOrUpdate', function() {
      it('should call appsCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test appsCreateOrUpdate
        //instance.appsCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsDelete', function() {
      it('should call appsDelete successfully', function(done) {
        //uncomment below and update the code to test appsDelete
        //instance.appsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsGet', function() {
      it('should call appsGet successfully', function(done) {
        //uncomment below and update the code to test appsGet
        //instance.appsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsListByResourceGroup', function() {
      it('should call appsListByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test appsListByResourceGroup
        //instance.appsListByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsListBySubscription', function() {
      it('should call appsListBySubscription successfully', function(done) {
        //uncomment below and update the code to test appsListBySubscription
        //instance.appsListBySubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsListTemplates', function() {
      it('should call appsListTemplates successfully', function(done) {
        //uncomment below and update the code to test appsListTemplates
        //instance.appsListTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appsUpdate', function() {
      it('should call appsUpdate successfully', function(done) {
        //uncomment below and update the code to test appsUpdate
        //instance.appsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
