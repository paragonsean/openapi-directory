/**
 * IotCentralClient
 * Use this API to manage IoT Central Applications in your Azure subscription.
 *
 * The version of the OpenAPI document: 2018-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppSkuInfo model module.
 * @module model/AppSkuInfo
 * @version 2018-09-01
 */
class AppSkuInfo {
    /**
     * Constructs a new <code>AppSkuInfo</code>.
     * Information about the SKU of the IoT Central application.
     * @alias module:model/AppSkuInfo
     * @param name {module:model/AppSkuInfo.NameEnum} The name of the SKU.
     */
    constructor(name) { 
        
        AppSkuInfo.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>AppSkuInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppSkuInfo} obj Optional instance to populate.
     * @return {module:model/AppSkuInfo} The populated <code>AppSkuInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppSkuInfo();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppSkuInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppSkuInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppSkuInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

AppSkuInfo.RequiredProperties = ["name"];

/**
 * The name of the SKU.
 * @member {module:model/AppSkuInfo.NameEnum} name
 */
AppSkuInfo.prototype['name'] = undefined;





/**
 * Allowed values for the <code>name</code> property.
 * @enum {String}
 * @readonly
 */
AppSkuInfo['NameEnum'] = {

    /**
     * value: "F1"
     * @const
     */
    "F1": "F1",

    /**
     * value: "S1"
     * @const
     */
    "S1": "S1",

    /**
     * value: "ST0"
     * @const
     */
    "ST0": "ST0",

    /**
     * value: "ST1"
     * @const
     */
    "ST1": "ST1",

    /**
     * value: "ST2"
     * @const
     */
    "ST2": "ST2"
};



export default AppSkuInfo;

