/**
 * IotCentralClient
 * Use this API to manage IoT Central Applications in your Azure subscription.
 *
 * The version of the OpenAPI document: 2017-07-01-privatepreview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import App from './model/App';
import AppListResult from './model/AppListResult';
import AppNameAvailabilityInfo from './model/AppNameAvailabilityInfo';
import AppPatch from './model/AppPatch';
import AppProperties from './model/AppProperties';
import AppSkuInfo from './model/AppSkuInfo';
import ErrorDetails from './model/ErrorDetails';
import Operation from './model/Operation';
import OperationDisplay from './model/OperationDisplay';
import OperationInputs from './model/OperationInputs';
import OperationListResult from './model/OperationListResult';
import Resource from './model/Resource';
import AppsApi from './api/AppsApi';
import OperationsApi from './api/OperationsApi';


/**
* Use this API to manage IoT Central Applications in your Azure subscription..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var IotCentralClient = require('index'); // See note below*.
* var xxxSvc = new IotCentralClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new IotCentralClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new IotCentralClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new IotCentralClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-07-01-privatepreview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The App model constructor.
     * @property {module:model/App}
     */
    App,

    /**
     * The AppListResult model constructor.
     * @property {module:model/AppListResult}
     */
    AppListResult,

    /**
     * The AppNameAvailabilityInfo model constructor.
     * @property {module:model/AppNameAvailabilityInfo}
     */
    AppNameAvailabilityInfo,

    /**
     * The AppPatch model constructor.
     * @property {module:model/AppPatch}
     */
    AppPatch,

    /**
     * The AppProperties model constructor.
     * @property {module:model/AppProperties}
     */
    AppProperties,

    /**
     * The AppSkuInfo model constructor.
     * @property {module:model/AppSkuInfo}
     */
    AppSkuInfo,

    /**
     * The ErrorDetails model constructor.
     * @property {module:model/ErrorDetails}
     */
    ErrorDetails,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The OperationInputs model constructor.
     * @property {module:model/OperationInputs}
     */
    OperationInputs,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
    * The AppsApi service constructor.
    * @property {module:api/AppsApi}
    */
    AppsApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi
};
