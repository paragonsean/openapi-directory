# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LogSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob_duration: str=None, display_name: str=None, name: str=None):
        """LogSpecification - a model defined in OpenAPI

        :param blob_duration: The blob_duration of this LogSpecification.
        :param display_name: The display_name of this LogSpecification.
        :param name: The name of this LogSpecification.
        """
        self.openapi_types = {
            'blob_duration': str,
            'display_name': str,
            'name': str
        }

        self.attribute_map = {
            'blob_duration': 'blobDuration',
            'display_name': 'displayName',
            'name': 'name'
        }

        self._blob_duration = blob_duration
        self._display_name = display_name
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogSpecification of this LogSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_duration(self):
        """Gets the blob_duration of this LogSpecification.


        :return: The blob_duration of this LogSpecification.
        :rtype: str
        """
        return self._blob_duration

    @blob_duration.setter
    def blob_duration(self, blob_duration):
        """Sets the blob_duration of this LogSpecification.


        :param blob_duration: The blob_duration of this LogSpecification.
        :type blob_duration: str
        """

        self._blob_duration = blob_duration

    @property
    def display_name(self):
        """Gets the display_name of this LogSpecification.


        :return: The display_name of this LogSpecification.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this LogSpecification.


        :param display_name: The display_name of this LogSpecification.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this LogSpecification.


        :return: The name of this LogSpecification.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LogSpecification.


        :param name: The name of this LogSpecification.
        :type name: str
        """

        self._name = name
