/**
 * Dynamics Telemetry
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-01-24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Display from './model/Display';
import LogSpecification from './model/LogSpecification';
import Operation from './model/Operation';
import Properties from './model/Properties';
import ServiceSpecification from './model/ServiceSpecification';
import OperationsApi from './api/OperationsApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var DynamicsTelemetry = require('index'); // See note below*.
* var xxxSvc = new DynamicsTelemetry.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new DynamicsTelemetry.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new DynamicsTelemetry.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new DynamicsTelemetry.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-01-24
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Display model constructor.
     * @property {module:model/Display}
     */
    Display,

    /**
     * The LogSpecification model constructor.
     * @property {module:model/LogSpecification}
     */
    LogSpecification,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The Properties model constructor.
     * @property {module:model/Properties}
     */
    Properties,

    /**
     * The ServiceSpecification model constructor.
     * @property {module:model/ServiceSpecification}
     */
    ServiceSpecification,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi
};
