/*
 * FeatureClient
 * Azure Feature Exposure Control (AFEC) provides a mechanism for the resource providers to control feature exposure to users. Resource providers typically use this mechanism to provide public/private preview for new features prior to making them generally available. Users need to explicitly register for AFEC features to get access to such functionality.
 *
 * The version of the OpenAPI document: 2015-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.FeatureOperationsListResult;
import org.openapitools.client.model.FeatureResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FeaturesApi
 */
@Disabled
public class FeaturesApiTest {

    private final FeaturesApi api = new FeaturesApi();

    /**
     * Gets the preview feature with the specified name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void featuresGetTest() throws ApiException {
        String resourceProviderNamespace = null;
        String featureName = null;
        String apiVersion = null;
        String subscriptionId = null;
        FeatureResult response = api.featuresGet(resourceProviderNamespace, featureName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the preview features in a provider namespace that are available through AFEC for the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void featuresListTest() throws ApiException {
        String resourceProviderNamespace = null;
        String apiVersion = null;
        String subscriptionId = null;
        FeatureOperationsListResult response = api.featuresList(resourceProviderNamespace, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all the preview features that are available through AFEC for the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void featuresListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        FeatureOperationsListResult response = api.featuresListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Registers the preview feature for the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void featuresRegisterTest() throws ApiException {
        String resourceProviderNamespace = null;
        String featureName = null;
        String apiVersion = null;
        String subscriptionId = null;
        FeatureResult response = api.featuresRegister(resourceProviderNamespace, featureName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
