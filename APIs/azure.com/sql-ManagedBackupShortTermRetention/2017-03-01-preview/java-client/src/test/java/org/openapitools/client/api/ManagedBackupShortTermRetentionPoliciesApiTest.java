/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ManagedBackupShortTermRetentionPolicy;
import org.openapitools.client.model.ManagedBackupShortTermRetentionPolicyListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagedBackupShortTermRetentionPoliciesApi
 */
@Disabled
public class ManagedBackupShortTermRetentionPoliciesApiTest {

    private final ManagedBackupShortTermRetentionPoliciesApi api = new ManagedBackupShortTermRetentionPoliciesApi();

    /**
     * Updates a managed database&#39;s short term retention policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBackupShortTermRetentionPoliciesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String databaseName = null;
        String policyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ManagedBackupShortTermRetentionPolicy parameters = null;
        ManagedBackupShortTermRetentionPolicy response = api.managedBackupShortTermRetentionPoliciesCreateOrUpdate(resourceGroupName, managedInstanceName, databaseName, policyName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Gets a managed database&#39;s short term retention policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBackupShortTermRetentionPoliciesGetTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String databaseName = null;
        String policyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ManagedBackupShortTermRetentionPolicy response = api.managedBackupShortTermRetentionPoliciesGet(resourceGroupName, managedInstanceName, databaseName, policyName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a managed database&#39;s short term retention policy list.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBackupShortTermRetentionPoliciesListByDatabaseTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String databaseName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ManagedBackupShortTermRetentionPolicyListResult response = api.managedBackupShortTermRetentionPoliciesListByDatabase(resourceGroupName, managedInstanceName, databaseName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates a managed database&#39;s short term retention policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBackupShortTermRetentionPoliciesUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String managedInstanceName = null;
        String databaseName = null;
        String policyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ManagedBackupShortTermRetentionPolicy parameters = null;
        ManagedBackupShortTermRetentionPolicy response = api.managedBackupShortTermRetentionPoliciesUpdate(resourceGroupName, managedInstanceName, databaseName, policyName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
