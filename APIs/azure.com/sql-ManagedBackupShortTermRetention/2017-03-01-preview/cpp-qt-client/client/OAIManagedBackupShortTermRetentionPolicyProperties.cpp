/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedBackupShortTermRetentionPolicyProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedBackupShortTermRetentionPolicyProperties::OAIManagedBackupShortTermRetentionPolicyProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedBackupShortTermRetentionPolicyProperties::OAIManagedBackupShortTermRetentionPolicyProperties() {
    this->initializeModel();
}

OAIManagedBackupShortTermRetentionPolicyProperties::~OAIManagedBackupShortTermRetentionPolicyProperties() {}

void OAIManagedBackupShortTermRetentionPolicyProperties::initializeModel() {

    m_retention_days_isSet = false;
    m_retention_days_isValid = false;
}

void OAIManagedBackupShortTermRetentionPolicyProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedBackupShortTermRetentionPolicyProperties::fromJsonObject(QJsonObject json) {

    m_retention_days_isValid = ::OpenAPI::fromJsonValue(m_retention_days, json[QString("retentionDays")]);
    m_retention_days_isSet = !json[QString("retentionDays")].isNull() && m_retention_days_isValid;
}

QString OAIManagedBackupShortTermRetentionPolicyProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedBackupShortTermRetentionPolicyProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_retention_days_isSet) {
        obj.insert(QString("retentionDays"), ::OpenAPI::toJsonValue(m_retention_days));
    }
    return obj;
}

qint32 OAIManagedBackupShortTermRetentionPolicyProperties::getRetentionDays() const {
    return m_retention_days;
}
void OAIManagedBackupShortTermRetentionPolicyProperties::setRetentionDays(const qint32 &retention_days) {
    m_retention_days = retention_days;
    m_retention_days_isSet = true;
}

bool OAIManagedBackupShortTermRetentionPolicyProperties::is_retention_days_Set() const{
    return m_retention_days_isSet;
}

bool OAIManagedBackupShortTermRetentionPolicyProperties::is_retention_days_Valid() const{
    return m_retention_days_isValid;
}

bool OAIManagedBackupShortTermRetentionPolicyProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_retention_days_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedBackupShortTermRetentionPolicyProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
