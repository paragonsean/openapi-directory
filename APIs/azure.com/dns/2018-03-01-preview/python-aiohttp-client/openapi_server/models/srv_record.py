# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SrvRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, port: int=None, priority: int=None, target: str=None, weight: int=None):
        """SrvRecord - a model defined in OpenAPI

        :param port: The port of this SrvRecord.
        :param priority: The priority of this SrvRecord.
        :param target: The target of this SrvRecord.
        :param weight: The weight of this SrvRecord.
        """
        self.openapi_types = {
            'port': int,
            'priority': int,
            'target': str,
            'weight': int
        }

        self.attribute_map = {
            'port': 'port',
            'priority': 'priority',
            'target': 'target',
            'weight': 'weight'
        }

        self._port = port
        self._priority = priority
        self._target = target
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SrvRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SrvRecord of this SrvRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def port(self):
        """Gets the port of this SrvRecord.

        The port value for this SRV record.

        :return: The port of this SrvRecord.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this SrvRecord.

        The port value for this SRV record.

        :param port: The port of this SrvRecord.
        :type port: int
        """

        self._port = port

    @property
    def priority(self):
        """Gets the priority of this SrvRecord.

        The priority value for this SRV record.

        :return: The priority of this SrvRecord.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this SrvRecord.

        The priority value for this SRV record.

        :param priority: The priority of this SrvRecord.
        :type priority: int
        """

        self._priority = priority

    @property
    def target(self):
        """Gets the target of this SrvRecord.

        The target domain name for this SRV record.

        :return: The target of this SrvRecord.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this SrvRecord.

        The target domain name for this SRV record.

        :param target: The target of this SrvRecord.
        :type target: str
        """

        self._target = target

    @property
    def weight(self):
        """Gets the weight of this SrvRecord.

        The weight value for this SRV record.

        :return: The weight of this SrvRecord.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this SrvRecord.

        The weight value for this SRV record.

        :param weight: The weight of this SrvRecord.
        :type weight: int
        """

        self._weight = weight
