# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.record_set import RecordSet
from openapi_server import util


class RecordSetUpdateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, record_set: RecordSet=None):
        """RecordSetUpdateParameters - a model defined in OpenAPI

        :param record_set: The record_set of this RecordSetUpdateParameters.
        """
        self.openapi_types = {
            'record_set': RecordSet
        }

        self.attribute_map = {
            'record_set': 'RecordSet'
        }

        self._record_set = record_set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecordSetUpdateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecordSetUpdateParameters of this RecordSetUpdateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def record_set(self):
        """Gets the record_set of this RecordSetUpdateParameters.


        :return: The record_set of this RecordSetUpdateParameters.
        :rtype: RecordSet
        """
        return self._record_set

    @record_set.setter
    def record_set(self, record_set):
        """Sets the record_set of this RecordSetUpdateParameters.


        :param record_set: The record_set of this RecordSetUpdateParameters.
        :type record_set: RecordSet
        """

        self._record_set = record_set
