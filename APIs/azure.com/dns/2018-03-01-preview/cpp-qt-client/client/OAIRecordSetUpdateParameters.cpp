/**
 * DnsManagementClient
 * The DNS Management Client.
 *
 * The version of the OpenAPI document: 2018-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecordSetUpdateParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecordSetUpdateParameters::OAIRecordSetUpdateParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecordSetUpdateParameters::OAIRecordSetUpdateParameters() {
    this->initializeModel();
}

OAIRecordSetUpdateParameters::~OAIRecordSetUpdateParameters() {}

void OAIRecordSetUpdateParameters::initializeModel() {

    m_record_set_isSet = false;
    m_record_set_isValid = false;
}

void OAIRecordSetUpdateParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecordSetUpdateParameters::fromJsonObject(QJsonObject json) {

    m_record_set_isValid = ::OpenAPI::fromJsonValue(m_record_set, json[QString("RecordSet")]);
    m_record_set_isSet = !json[QString("RecordSet")].isNull() && m_record_set_isValid;
}

QString OAIRecordSetUpdateParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecordSetUpdateParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_record_set.isSet()) {
        obj.insert(QString("RecordSet"), ::OpenAPI::toJsonValue(m_record_set));
    }
    return obj;
}

OAIRecordSet OAIRecordSetUpdateParameters::getRecordSet() const {
    return m_record_set;
}
void OAIRecordSetUpdateParameters::setRecordSet(const OAIRecordSet &record_set) {
    m_record_set = record_set;
    m_record_set_isSet = true;
}

bool OAIRecordSetUpdateParameters::is_record_set_Set() const{
    return m_record_set_isSet;
}

bool OAIRecordSetUpdateParameters::is_record_set_Valid() const{
    return m_record_set_isValid;
}

bool OAIRecordSetUpdateParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_record_set.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecordSetUpdateParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
