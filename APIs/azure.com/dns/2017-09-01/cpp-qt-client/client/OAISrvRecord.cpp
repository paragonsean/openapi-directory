/**
 * DnsManagementClient
 * The DNS Management Client.
 *
 * The version of the OpenAPI document: 2017-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISrvRecord.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISrvRecord::OAISrvRecord(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISrvRecord::OAISrvRecord() {
    this->initializeModel();
}

OAISrvRecord::~OAISrvRecord() {}

void OAISrvRecord::initializeModel() {

    m_port_isSet = false;
    m_port_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_target_isSet = false;
    m_target_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAISrvRecord::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISrvRecord::fromJsonObject(QJsonObject json) {

    m_port_isValid = ::OpenAPI::fromJsonValue(m_port, json[QString("port")]);
    m_port_isSet = !json[QString("port")].isNull() && m_port_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;

    m_target_isValid = ::OpenAPI::fromJsonValue(m_target, json[QString("target")]);
    m_target_isSet = !json[QString("target")].isNull() && m_target_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAISrvRecord::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISrvRecord::asJsonObject() const {
    QJsonObject obj;
    if (m_port_isSet) {
        obj.insert(QString("port"), ::OpenAPI::toJsonValue(m_port));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_target_isSet) {
        obj.insert(QString("target"), ::OpenAPI::toJsonValue(m_target));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

qint32 OAISrvRecord::getPort() const {
    return m_port;
}
void OAISrvRecord::setPort(const qint32 &port) {
    m_port = port;
    m_port_isSet = true;
}

bool OAISrvRecord::is_port_Set() const{
    return m_port_isSet;
}

bool OAISrvRecord::is_port_Valid() const{
    return m_port_isValid;
}

qint32 OAISrvRecord::getPriority() const {
    return m_priority;
}
void OAISrvRecord::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAISrvRecord::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAISrvRecord::is_priority_Valid() const{
    return m_priority_isValid;
}

QString OAISrvRecord::getTarget() const {
    return m_target;
}
void OAISrvRecord::setTarget(const QString &target) {
    m_target = target;
    m_target_isSet = true;
}

bool OAISrvRecord::is_target_Set() const{
    return m_target_isSet;
}

bool OAISrvRecord::is_target_Valid() const{
    return m_target_isValid;
}

qint32 OAISrvRecord::getWeight() const {
    return m_weight;
}
void OAISrvRecord::setWeight(const qint32 &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAISrvRecord::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAISrvRecord::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAISrvRecord::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_port_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISrvRecord::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
