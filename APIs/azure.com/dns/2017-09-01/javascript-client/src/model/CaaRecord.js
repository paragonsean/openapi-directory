/**
 * DnsManagementClient
 * The DNS Management Client.
 *
 * The version of the OpenAPI document: 2017-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CaaRecord model module.
 * @module model/CaaRecord
 * @version 2017-09-01
 */
class CaaRecord {
    /**
     * Constructs a new <code>CaaRecord</code>.
     * A CAA record.
     * @alias module:model/CaaRecord
     */
    constructor() { 
        
        CaaRecord.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CaaRecord</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CaaRecord} obj Optional instance to populate.
     * @return {module:model/CaaRecord} The populated <code>CaaRecord</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CaaRecord();

            if (data.hasOwnProperty('flags')) {
                obj['flags'] = ApiClient.convertToType(data['flags'], 'Number');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CaaRecord</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CaaRecord</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * The flags for this CAA record as an integer between 0 and 255.
 * @member {Number} flags
 */
CaaRecord.prototype['flags'] = undefined;

/**
 * The tag for this CAA record.
 * @member {String} tag
 */
CaaRecord.prototype['tag'] = undefined;

/**
 * The value for this CAA record.
 * @member {String} value
 */
CaaRecord.prototype['value'] = undefined;






export default CaaRecord;

