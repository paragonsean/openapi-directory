/*
 * DnsManagementClient
 * The DNS Management Client.
 *
 * The version of the OpenAPI document: 2017-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.Zone;
import org.openapitools.client.model.ZoneListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ZonesApi
 */
@Disabled
public class ZonesApiTest {

    private final ZonesApi api = new ZonesApi();

    /**
     * Creates or updates a DNS zone. Does not modify DNS records within the zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zonesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String zoneName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Zone parameters = null;
        String ifMatch = null;
        String ifNoneMatch = null;
        Zone response = api.zonesCreateOrUpdate(resourceGroupName, zoneName, apiVersion, subscriptionId, parameters, ifMatch, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * Deletes a DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be undone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zonesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String zoneName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String ifMatch = null;
        api.zonesDelete(resourceGroupName, zoneName, apiVersion, subscriptionId, ifMatch);
        // TODO: test validations
    }

    /**
     * Gets a DNS zone. Retrieves the zone properties, but not the record sets within the zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zonesGetTest() throws ApiException {
        String resourceGroupName = null;
        String zoneName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Zone response = api.zonesGet(resourceGroupName, zoneName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists the DNS zones in all resource groups in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zonesListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        Integer $top = null;
        ZoneListResult response = api.zonesList(apiVersion, subscriptionId, $top);
        // TODO: test validations
    }

    /**
     * Lists the DNS zones within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void zonesListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Integer $top = null;
        ZoneListResult response = api.zonesListByResourceGroup(resourceGroupName, apiVersion, subscriptionId, $top);
        // TODO: test validations
    }

}
