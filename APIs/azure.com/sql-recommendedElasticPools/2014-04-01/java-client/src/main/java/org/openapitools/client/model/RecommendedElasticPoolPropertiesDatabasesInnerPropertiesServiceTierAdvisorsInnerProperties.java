/*
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database resources including recommendations and operations.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the properties of a Service Tier Advisor.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:32:09.213257-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties {
  public static final String SERIALIZED_NAME_ACTIVE_TIME_RATIO = "activeTimeRatio";
  @SerializedName(SERIALIZED_NAME_ACTIVE_TIME_RATIO)
  private Double activeTimeRatio;

  public static final String SERIALIZED_NAME_AVG_DTU = "avgDtu";
  @SerializedName(SERIALIZED_NAME_AVG_DTU)
  private Double avgDtu;

  public static final String SERIALIZED_NAME_CONFIDENCE = "confidence";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE)
  private Double confidence;

  public static final String SERIALIZED_NAME_CURRENT_SERVICE_LEVEL_OBJECTIVE = "currentServiceLevelObjective";
  @SerializedName(SERIALIZED_NAME_CURRENT_SERVICE_LEVEL_OBJECTIVE)
  private String currentServiceLevelObjective;

  public static final String SERIALIZED_NAME_CURRENT_SERVICE_LEVEL_OBJECTIVE_ID = "currentServiceLevelObjectiveId";
  @SerializedName(SERIALIZED_NAME_CURRENT_SERVICE_LEVEL_OBJECTIVE_ID)
  private UUID currentServiceLevelObjectiveId;

  public static final String SERIALIZED_NAME_DATABASE_SIZE_BASED_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE = "databaseSizeBasedRecommendationServiceLevelObjective";
  @SerializedName(SERIALIZED_NAME_DATABASE_SIZE_BASED_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE)
  private String databaseSizeBasedRecommendationServiceLevelObjective;

  public static final String SERIALIZED_NAME_DATABASE_SIZE_BASED_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE_ID = "databaseSizeBasedRecommendationServiceLevelObjectiveId";
  @SerializedName(SERIALIZED_NAME_DATABASE_SIZE_BASED_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE_ID)
  private UUID databaseSizeBasedRecommendationServiceLevelObjectiveId;

  public static final String SERIALIZED_NAME_DISASTER_PLAN_BASED_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE = "disasterPlanBasedRecommendationServiceLevelObjective";
  @SerializedName(SERIALIZED_NAME_DISASTER_PLAN_BASED_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE)
  private String disasterPlanBasedRecommendationServiceLevelObjective;

  public static final String SERIALIZED_NAME_DISASTER_PLAN_BASED_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE_ID = "disasterPlanBasedRecommendationServiceLevelObjectiveId";
  @SerializedName(SERIALIZED_NAME_DISASTER_PLAN_BASED_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE_ID)
  private UUID disasterPlanBasedRecommendationServiceLevelObjectiveId;

  public static final String SERIALIZED_NAME_MAX_DTU = "maxDtu";
  @SerializedName(SERIALIZED_NAME_MAX_DTU)
  private Double maxDtu;

  public static final String SERIALIZED_NAME_MAX_SIZE_IN_G_B = "maxSizeInGB";
  @SerializedName(SERIALIZED_NAME_MAX_SIZE_IN_G_B)
  private Double maxSizeInGB;

  public static final String SERIALIZED_NAME_MIN_DTU = "minDtu";
  @SerializedName(SERIALIZED_NAME_MIN_DTU)
  private Double minDtu;

  public static final String SERIALIZED_NAME_OBSERVATION_PERIOD_END = "observationPeriodEnd";
  @SerializedName(SERIALIZED_NAME_OBSERVATION_PERIOD_END)
  private OffsetDateTime observationPeriodEnd;

  public static final String SERIALIZED_NAME_OBSERVATION_PERIOD_START = "observationPeriodStart";
  @SerializedName(SERIALIZED_NAME_OBSERVATION_PERIOD_START)
  private OffsetDateTime observationPeriodStart;

  public static final String SERIALIZED_NAME_OVERALL_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE = "overallRecommendationServiceLevelObjective";
  @SerializedName(SERIALIZED_NAME_OVERALL_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE)
  private String overallRecommendationServiceLevelObjective;

  public static final String SERIALIZED_NAME_OVERALL_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE_ID = "overallRecommendationServiceLevelObjectiveId";
  @SerializedName(SERIALIZED_NAME_OVERALL_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE_ID)
  private UUID overallRecommendationServiceLevelObjectiveId;

  public static final String SERIALIZED_NAME_SERVICE_LEVEL_OBJECTIVE_USAGE_METRICS = "serviceLevelObjectiveUsageMetrics";
  @SerializedName(SERIALIZED_NAME_SERVICE_LEVEL_OBJECTIVE_USAGE_METRICS)
  private List<RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner> serviceLevelObjectiveUsageMetrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_USAGE_BASED_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE = "usageBasedRecommendationServiceLevelObjective";
  @SerializedName(SERIALIZED_NAME_USAGE_BASED_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE)
  private String usageBasedRecommendationServiceLevelObjective;

  public static final String SERIALIZED_NAME_USAGE_BASED_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE_ID = "usageBasedRecommendationServiceLevelObjectiveId";
  @SerializedName(SERIALIZED_NAME_USAGE_BASED_RECOMMENDATION_SERVICE_LEVEL_OBJECTIVE_ID)
  private UUID usageBasedRecommendationServiceLevelObjectiveId;

  public RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties() {
  }

  public RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties(
     Double activeTimeRatio, 
     Double avgDtu, 
     Double confidence, 
     String currentServiceLevelObjective, 
     UUID currentServiceLevelObjectiveId, 
     String databaseSizeBasedRecommendationServiceLevelObjective, 
     UUID databaseSizeBasedRecommendationServiceLevelObjectiveId, 
     String disasterPlanBasedRecommendationServiceLevelObjective, 
     UUID disasterPlanBasedRecommendationServiceLevelObjectiveId, 
     Double maxDtu, 
     Double maxSizeInGB, 
     Double minDtu, 
     OffsetDateTime observationPeriodEnd, 
     OffsetDateTime observationPeriodStart, 
     String overallRecommendationServiceLevelObjective, 
     UUID overallRecommendationServiceLevelObjectiveId, 
     List<RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner> serviceLevelObjectiveUsageMetrics, 
     String usageBasedRecommendationServiceLevelObjective, 
     UUID usageBasedRecommendationServiceLevelObjectiveId
  ) {
    this();
    this.activeTimeRatio = activeTimeRatio;
    this.avgDtu = avgDtu;
    this.confidence = confidence;
    this.currentServiceLevelObjective = currentServiceLevelObjective;
    this.currentServiceLevelObjectiveId = currentServiceLevelObjectiveId;
    this.databaseSizeBasedRecommendationServiceLevelObjective = databaseSizeBasedRecommendationServiceLevelObjective;
    this.databaseSizeBasedRecommendationServiceLevelObjectiveId = databaseSizeBasedRecommendationServiceLevelObjectiveId;
    this.disasterPlanBasedRecommendationServiceLevelObjective = disasterPlanBasedRecommendationServiceLevelObjective;
    this.disasterPlanBasedRecommendationServiceLevelObjectiveId = disasterPlanBasedRecommendationServiceLevelObjectiveId;
    this.maxDtu = maxDtu;
    this.maxSizeInGB = maxSizeInGB;
    this.minDtu = minDtu;
    this.observationPeriodEnd = observationPeriodEnd;
    this.observationPeriodStart = observationPeriodStart;
    this.overallRecommendationServiceLevelObjective = overallRecommendationServiceLevelObjective;
    this.overallRecommendationServiceLevelObjectiveId = overallRecommendationServiceLevelObjectiveId;
    this.serviceLevelObjectiveUsageMetrics = serviceLevelObjectiveUsageMetrics;
    this.usageBasedRecommendationServiceLevelObjective = usageBasedRecommendationServiceLevelObjective;
    this.usageBasedRecommendationServiceLevelObjectiveId = usageBasedRecommendationServiceLevelObjectiveId;
  }

  /**
   * The activeTimeRatio for service tier advisor.
   * @return activeTimeRatio
   */
  @javax.annotation.Nullable
  public Double getActiveTimeRatio() {
    return activeTimeRatio;
  }



  /**
   * Gets or sets avgDtu for service tier advisor.
   * @return avgDtu
   */
  @javax.annotation.Nullable
  public Double getAvgDtu() {
    return avgDtu;
  }



  /**
   * Gets or sets confidence for service tier advisor.
   * @return confidence
   */
  @javax.annotation.Nullable
  public Double getConfidence() {
    return confidence;
  }



  /**
   * Gets or sets currentServiceLevelObjective for service tier advisor.
   * @return currentServiceLevelObjective
   */
  @javax.annotation.Nullable
  public String getCurrentServiceLevelObjective() {
    return currentServiceLevelObjective;
  }



  /**
   * Gets or sets currentServiceLevelObjectiveId for service tier advisor.
   * @return currentServiceLevelObjectiveId
   */
  @javax.annotation.Nullable
  public UUID getCurrentServiceLevelObjectiveId() {
    return currentServiceLevelObjectiveId;
  }



  /**
   * Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for service tier advisor.
   * @return databaseSizeBasedRecommendationServiceLevelObjective
   */
  @javax.annotation.Nullable
  public String getDatabaseSizeBasedRecommendationServiceLevelObjective() {
    return databaseSizeBasedRecommendationServiceLevelObjective;
  }



  /**
   * Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for service tier advisor.
   * @return databaseSizeBasedRecommendationServiceLevelObjectiveId
   */
  @javax.annotation.Nullable
  public UUID getDatabaseSizeBasedRecommendationServiceLevelObjectiveId() {
    return databaseSizeBasedRecommendationServiceLevelObjectiveId;
  }



  /**
   * Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for service tier advisor.
   * @return disasterPlanBasedRecommendationServiceLevelObjective
   */
  @javax.annotation.Nullable
  public String getDisasterPlanBasedRecommendationServiceLevelObjective() {
    return disasterPlanBasedRecommendationServiceLevelObjective;
  }



  /**
   * Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for service tier advisor.
   * @return disasterPlanBasedRecommendationServiceLevelObjectiveId
   */
  @javax.annotation.Nullable
  public UUID getDisasterPlanBasedRecommendationServiceLevelObjectiveId() {
    return disasterPlanBasedRecommendationServiceLevelObjectiveId;
  }



  /**
   * Gets or sets maxDtu for service tier advisor.
   * @return maxDtu
   */
  @javax.annotation.Nullable
  public Double getMaxDtu() {
    return maxDtu;
  }



  /**
   * Gets or sets maxSizeInGB for service tier advisor.
   * @return maxSizeInGB
   */
  @javax.annotation.Nullable
  public Double getMaxSizeInGB() {
    return maxSizeInGB;
  }



  /**
   * Gets or sets minDtu for service tier advisor.
   * @return minDtu
   */
  @javax.annotation.Nullable
  public Double getMinDtu() {
    return minDtu;
  }



  /**
   * The observation period start (ISO8601 format).
   * @return observationPeriodEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getObservationPeriodEnd() {
    return observationPeriodEnd;
  }



  /**
   * The observation period start (ISO8601 format).
   * @return observationPeriodStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getObservationPeriodStart() {
    return observationPeriodStart;
  }



  /**
   * Gets or sets overallRecommendationServiceLevelObjective for service tier advisor.
   * @return overallRecommendationServiceLevelObjective
   */
  @javax.annotation.Nullable
  public String getOverallRecommendationServiceLevelObjective() {
    return overallRecommendationServiceLevelObjective;
  }



  /**
   * Gets or sets overallRecommendationServiceLevelObjectiveId for service tier advisor.
   * @return overallRecommendationServiceLevelObjectiveId
   */
  @javax.annotation.Nullable
  public UUID getOverallRecommendationServiceLevelObjectiveId() {
    return overallRecommendationServiceLevelObjectiveId;
  }



  /**
   * Gets or sets serviceLevelObjectiveUsageMetrics for the service tier advisor.
   * @return serviceLevelObjectiveUsageMetrics
   */
  @javax.annotation.Nullable
  public List<RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner> getServiceLevelObjectiveUsageMetrics() {
    return serviceLevelObjectiveUsageMetrics;
  }



  /**
   * Gets or sets usageBasedRecommendationServiceLevelObjective for service tier advisor.
   * @return usageBasedRecommendationServiceLevelObjective
   */
  @javax.annotation.Nullable
  public String getUsageBasedRecommendationServiceLevelObjective() {
    return usageBasedRecommendationServiceLevelObjective;
  }



  /**
   * Gets or sets usageBasedRecommendationServiceLevelObjectiveId for service tier advisor.
   * @return usageBasedRecommendationServiceLevelObjectiveId
   */
  @javax.annotation.Nullable
  public UUID getUsageBasedRecommendationServiceLevelObjectiveId() {
    return usageBasedRecommendationServiceLevelObjectiveId;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties = (RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties) o;
    return Objects.equals(this.activeTimeRatio, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.activeTimeRatio) &&
        Objects.equals(this.avgDtu, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.avgDtu) &&
        Objects.equals(this.confidence, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.confidence) &&
        Objects.equals(this.currentServiceLevelObjective, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.currentServiceLevelObjective) &&
        Objects.equals(this.currentServiceLevelObjectiveId, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.currentServiceLevelObjectiveId) &&
        Objects.equals(this.databaseSizeBasedRecommendationServiceLevelObjective, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.databaseSizeBasedRecommendationServiceLevelObjective) &&
        Objects.equals(this.databaseSizeBasedRecommendationServiceLevelObjectiveId, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.databaseSizeBasedRecommendationServiceLevelObjectiveId) &&
        Objects.equals(this.disasterPlanBasedRecommendationServiceLevelObjective, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.disasterPlanBasedRecommendationServiceLevelObjective) &&
        Objects.equals(this.disasterPlanBasedRecommendationServiceLevelObjectiveId, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.disasterPlanBasedRecommendationServiceLevelObjectiveId) &&
        Objects.equals(this.maxDtu, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.maxDtu) &&
        Objects.equals(this.maxSizeInGB, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.maxSizeInGB) &&
        Objects.equals(this.minDtu, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.minDtu) &&
        Objects.equals(this.observationPeriodEnd, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.observationPeriodEnd) &&
        Objects.equals(this.observationPeriodStart, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.observationPeriodStart) &&
        Objects.equals(this.overallRecommendationServiceLevelObjective, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.overallRecommendationServiceLevelObjective) &&
        Objects.equals(this.overallRecommendationServiceLevelObjectiveId, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.overallRecommendationServiceLevelObjectiveId) &&
        Objects.equals(this.serviceLevelObjectiveUsageMetrics, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.serviceLevelObjectiveUsageMetrics) &&
        Objects.equals(this.usageBasedRecommendationServiceLevelObjective, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.usageBasedRecommendationServiceLevelObjective) &&
        Objects.equals(this.usageBasedRecommendationServiceLevelObjectiveId, recommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.usageBasedRecommendationServiceLevelObjectiveId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeTimeRatio, avgDtu, confidence, currentServiceLevelObjective, currentServiceLevelObjectiveId, databaseSizeBasedRecommendationServiceLevelObjective, databaseSizeBasedRecommendationServiceLevelObjectiveId, disasterPlanBasedRecommendationServiceLevelObjective, disasterPlanBasedRecommendationServiceLevelObjectiveId, maxDtu, maxSizeInGB, minDtu, observationPeriodEnd, observationPeriodStart, overallRecommendationServiceLevelObjective, overallRecommendationServiceLevelObjectiveId, serviceLevelObjectiveUsageMetrics, usageBasedRecommendationServiceLevelObjective, usageBasedRecommendationServiceLevelObjectiveId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties {\n");
    sb.append("    activeTimeRatio: ").append(toIndentedString(activeTimeRatio)).append("\n");
    sb.append("    avgDtu: ").append(toIndentedString(avgDtu)).append("\n");
    sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
    sb.append("    currentServiceLevelObjective: ").append(toIndentedString(currentServiceLevelObjective)).append("\n");
    sb.append("    currentServiceLevelObjectiveId: ").append(toIndentedString(currentServiceLevelObjectiveId)).append("\n");
    sb.append("    databaseSizeBasedRecommendationServiceLevelObjective: ").append(toIndentedString(databaseSizeBasedRecommendationServiceLevelObjective)).append("\n");
    sb.append("    databaseSizeBasedRecommendationServiceLevelObjectiveId: ").append(toIndentedString(databaseSizeBasedRecommendationServiceLevelObjectiveId)).append("\n");
    sb.append("    disasterPlanBasedRecommendationServiceLevelObjective: ").append(toIndentedString(disasterPlanBasedRecommendationServiceLevelObjective)).append("\n");
    sb.append("    disasterPlanBasedRecommendationServiceLevelObjectiveId: ").append(toIndentedString(disasterPlanBasedRecommendationServiceLevelObjectiveId)).append("\n");
    sb.append("    maxDtu: ").append(toIndentedString(maxDtu)).append("\n");
    sb.append("    maxSizeInGB: ").append(toIndentedString(maxSizeInGB)).append("\n");
    sb.append("    minDtu: ").append(toIndentedString(minDtu)).append("\n");
    sb.append("    observationPeriodEnd: ").append(toIndentedString(observationPeriodEnd)).append("\n");
    sb.append("    observationPeriodStart: ").append(toIndentedString(observationPeriodStart)).append("\n");
    sb.append("    overallRecommendationServiceLevelObjective: ").append(toIndentedString(overallRecommendationServiceLevelObjective)).append("\n");
    sb.append("    overallRecommendationServiceLevelObjectiveId: ").append(toIndentedString(overallRecommendationServiceLevelObjectiveId)).append("\n");
    sb.append("    serviceLevelObjectiveUsageMetrics: ").append(toIndentedString(serviceLevelObjectiveUsageMetrics)).append("\n");
    sb.append("    usageBasedRecommendationServiceLevelObjective: ").append(toIndentedString(usageBasedRecommendationServiceLevelObjective)).append("\n");
    sb.append("    usageBasedRecommendationServiceLevelObjectiveId: ").append(toIndentedString(usageBasedRecommendationServiceLevelObjectiveId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activeTimeRatio");
    openapiFields.add("avgDtu");
    openapiFields.add("confidence");
    openapiFields.add("currentServiceLevelObjective");
    openapiFields.add("currentServiceLevelObjectiveId");
    openapiFields.add("databaseSizeBasedRecommendationServiceLevelObjective");
    openapiFields.add("databaseSizeBasedRecommendationServiceLevelObjectiveId");
    openapiFields.add("disasterPlanBasedRecommendationServiceLevelObjective");
    openapiFields.add("disasterPlanBasedRecommendationServiceLevelObjectiveId");
    openapiFields.add("maxDtu");
    openapiFields.add("maxSizeInGB");
    openapiFields.add("minDtu");
    openapiFields.add("observationPeriodEnd");
    openapiFields.add("observationPeriodStart");
    openapiFields.add("overallRecommendationServiceLevelObjective");
    openapiFields.add("overallRecommendationServiceLevelObjectiveId");
    openapiFields.add("serviceLevelObjectiveUsageMetrics");
    openapiFields.add("usageBasedRecommendationServiceLevelObjective");
    openapiFields.add("usageBasedRecommendationServiceLevelObjectiveId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties is not found in the empty JSON string", RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("currentServiceLevelObjective") != null && !jsonObj.get("currentServiceLevelObjective").isJsonNull()) && !jsonObj.get("currentServiceLevelObjective").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currentServiceLevelObjective` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currentServiceLevelObjective").toString()));
      }
      if ((jsonObj.get("currentServiceLevelObjectiveId") != null && !jsonObj.get("currentServiceLevelObjectiveId").isJsonNull()) && !jsonObj.get("currentServiceLevelObjectiveId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currentServiceLevelObjectiveId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currentServiceLevelObjectiveId").toString()));
      }
      if ((jsonObj.get("databaseSizeBasedRecommendationServiceLevelObjective") != null && !jsonObj.get("databaseSizeBasedRecommendationServiceLevelObjective").isJsonNull()) && !jsonObj.get("databaseSizeBasedRecommendationServiceLevelObjective").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `databaseSizeBasedRecommendationServiceLevelObjective` to be a primitive type in the JSON string but got `%s`", jsonObj.get("databaseSizeBasedRecommendationServiceLevelObjective").toString()));
      }
      if ((jsonObj.get("databaseSizeBasedRecommendationServiceLevelObjectiveId") != null && !jsonObj.get("databaseSizeBasedRecommendationServiceLevelObjectiveId").isJsonNull()) && !jsonObj.get("databaseSizeBasedRecommendationServiceLevelObjectiveId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `databaseSizeBasedRecommendationServiceLevelObjectiveId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("databaseSizeBasedRecommendationServiceLevelObjectiveId").toString()));
      }
      if ((jsonObj.get("disasterPlanBasedRecommendationServiceLevelObjective") != null && !jsonObj.get("disasterPlanBasedRecommendationServiceLevelObjective").isJsonNull()) && !jsonObj.get("disasterPlanBasedRecommendationServiceLevelObjective").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disasterPlanBasedRecommendationServiceLevelObjective` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disasterPlanBasedRecommendationServiceLevelObjective").toString()));
      }
      if ((jsonObj.get("disasterPlanBasedRecommendationServiceLevelObjectiveId") != null && !jsonObj.get("disasterPlanBasedRecommendationServiceLevelObjectiveId").isJsonNull()) && !jsonObj.get("disasterPlanBasedRecommendationServiceLevelObjectiveId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disasterPlanBasedRecommendationServiceLevelObjectiveId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disasterPlanBasedRecommendationServiceLevelObjectiveId").toString()));
      }
      if ((jsonObj.get("overallRecommendationServiceLevelObjective") != null && !jsonObj.get("overallRecommendationServiceLevelObjective").isJsonNull()) && !jsonObj.get("overallRecommendationServiceLevelObjective").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `overallRecommendationServiceLevelObjective` to be a primitive type in the JSON string but got `%s`", jsonObj.get("overallRecommendationServiceLevelObjective").toString()));
      }
      if ((jsonObj.get("overallRecommendationServiceLevelObjectiveId") != null && !jsonObj.get("overallRecommendationServiceLevelObjectiveId").isJsonNull()) && !jsonObj.get("overallRecommendationServiceLevelObjectiveId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `overallRecommendationServiceLevelObjectiveId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("overallRecommendationServiceLevelObjectiveId").toString()));
      }
      if (jsonObj.get("serviceLevelObjectiveUsageMetrics") != null && !jsonObj.get("serviceLevelObjectiveUsageMetrics").isJsonNull()) {
        JsonArray jsonArrayserviceLevelObjectiveUsageMetrics = jsonObj.getAsJsonArray("serviceLevelObjectiveUsageMetrics");
        if (jsonArrayserviceLevelObjectiveUsageMetrics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("serviceLevelObjectiveUsageMetrics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `serviceLevelObjectiveUsageMetrics` to be an array in the JSON string but got `%s`", jsonObj.get("serviceLevelObjectiveUsageMetrics").toString()));
          }

          // validate the optional field `serviceLevelObjectiveUsageMetrics` (array)
          for (int i = 0; i < jsonArrayserviceLevelObjectiveUsageMetrics.size(); i++) {
            RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.validateJsonElement(jsonArrayserviceLevelObjectiveUsageMetrics.get(i));
          };
        }
      }
      if ((jsonObj.get("usageBasedRecommendationServiceLevelObjective") != null && !jsonObj.get("usageBasedRecommendationServiceLevelObjective").isJsonNull()) && !jsonObj.get("usageBasedRecommendationServiceLevelObjective").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `usageBasedRecommendationServiceLevelObjective` to be a primitive type in the JSON string but got `%s`", jsonObj.get("usageBasedRecommendationServiceLevelObjective").toString()));
      }
      if ((jsonObj.get("usageBasedRecommendationServiceLevelObjectiveId") != null && !jsonObj.get("usageBasedRecommendationServiceLevelObjectiveId").isJsonNull()) && !jsonObj.get("usageBasedRecommendationServiceLevelObjectiveId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `usageBasedRecommendationServiceLevelObjectiveId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("usageBasedRecommendationServiceLevelObjectiveId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties>() {
           @Override
           public void write(JsonWriter out, RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties
   * @throws IOException if the JSON string is invalid with respect to RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties
   */
  public static RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties.class);
  }

  /**
   * Convert an instance of RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

