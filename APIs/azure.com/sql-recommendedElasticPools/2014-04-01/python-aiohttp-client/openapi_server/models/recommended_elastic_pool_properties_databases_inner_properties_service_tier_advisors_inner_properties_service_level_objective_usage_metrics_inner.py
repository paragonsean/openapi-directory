# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, in_range_time_ratio: float=None, service_level_objective: str=None, service_level_objective_id: str=None):
        """RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner - a model defined in OpenAPI

        :param in_range_time_ratio: The in_range_time_ratio of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.
        :param service_level_objective: The service_level_objective of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.
        :param service_level_objective_id: The service_level_objective_id of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.
        """
        self.openapi_types = {
            'in_range_time_ratio': float,
            'service_level_objective': str,
            'service_level_objective_id': str
        }

        self.attribute_map = {
            'in_range_time_ratio': 'inRangeTimeRatio',
            'service_level_objective': 'serviceLevelObjective',
            'service_level_objective_id': 'serviceLevelObjectiveId'
        }

        self._in_range_time_ratio = in_range_time_ratio
        self._service_level_objective = service_level_objective
        self._service_level_objective_id = service_level_objective_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendedElasticPoolProperties_databases_inner_properties_serviceTierAdvisors_inner_properties_serviceLevelObjectiveUsageMetrics_inner of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def in_range_time_ratio(self):
        """Gets the in_range_time_ratio of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.

        Gets or sets inRangeTimeRatio for SLO usage metric.

        :return: The in_range_time_ratio of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.
        :rtype: float
        """
        return self._in_range_time_ratio

    @in_range_time_ratio.setter
    def in_range_time_ratio(self, in_range_time_ratio):
        """Sets the in_range_time_ratio of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.

        Gets or sets inRangeTimeRatio for SLO usage metric.

        :param in_range_time_ratio: The in_range_time_ratio of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.
        :type in_range_time_ratio: float
        """

        self._in_range_time_ratio = in_range_time_ratio

    @property
    def service_level_objective(self):
        """Gets the service_level_objective of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.

        The serviceLevelObjective for SLO usage metric.

        :return: The service_level_objective of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.
        :rtype: str
        """
        return self._service_level_objective

    @service_level_objective.setter
    def service_level_objective(self, service_level_objective):
        """Sets the service_level_objective of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.

        The serviceLevelObjective for SLO usage metric.

        :param service_level_objective: The service_level_objective of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.
        :type service_level_objective: str
        """
        allowed_values = ["System", "System0", "System1", "System2", "System3", "System4", "System2L", "System3L", "System4L", "Free", "Basic", "S0", "S1", "S2", "S3", "S4", "S6", "S7", "S9", "S12", "P1", "P2", "P3", "P4", "P6", "P11", "P15", "PRS1", "PRS2", "PRS4", "PRS6", "DW100", "DW200", "DW300", "DW400", "DW500", "DW600", "DW1000", "DW1200", "DW1000c", "DW1500", "DW1500c", "DW2000", "DW2000c", "DW3000", "DW2500c", "DW3000c", "DW6000", "DW5000c", "DW6000c", "DW7500c", "DW10000c", "DW15000c", "DW30000c", "DS100", "DS200", "DS300", "DS400", "DS500", "DS600", "DS1000", "DS1200", "DS1500", "DS2000", "ElasticPool"]  # noqa: E501
        if service_level_objective not in allowed_values:
            raise ValueError(
                "Invalid value for `service_level_objective` ({0}), must be one of {1}"
                .format(service_level_objective, allowed_values)
            )

        self._service_level_objective = service_level_objective

    @property
    def service_level_objective_id(self):
        """Gets the service_level_objective_id of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.

        The serviceLevelObjectiveId for SLO usage metric.

        :return: The service_level_objective_id of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.
        :rtype: str
        """
        return self._service_level_objective_id

    @service_level_objective_id.setter
    def service_level_objective_id(self, service_level_objective_id):
        """Sets the service_level_objective_id of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.

        The serviceLevelObjectiveId for SLO usage metric.

        :param service_level_objective_id: The service_level_objective_id of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner.
        :type service_level_objective_id: str
        """

        self._service_level_objective_id = service_level_objective_id
