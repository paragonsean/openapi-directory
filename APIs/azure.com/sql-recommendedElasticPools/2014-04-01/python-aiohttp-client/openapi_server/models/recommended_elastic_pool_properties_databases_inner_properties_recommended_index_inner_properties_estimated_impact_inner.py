# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, change_value_absolute: float=None, change_value_relative: float=None, name: str=None, unit: str=None):
        """RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner - a model defined in OpenAPI

        :param change_value_absolute: The change_value_absolute of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        :param change_value_relative: The change_value_relative of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        :param name: The name of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        :param unit: The unit of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        """
        self.openapi_types = {
            'change_value_absolute': float,
            'change_value_relative': float,
            'name': str,
            'unit': str
        }

        self.attribute_map = {
            'change_value_absolute': 'changeValueAbsolute',
            'change_value_relative': 'changeValueRelative',
            'name': 'name',
            'unit': 'unit'
        }

        self._change_value_absolute = change_value_absolute
        self._change_value_relative = change_value_relative
        self._name = name
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def change_value_absolute(self):
        """Gets the change_value_absolute of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.

        The absolute impact to dimension.

        :return: The change_value_absolute of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        :rtype: float
        """
        return self._change_value_absolute

    @change_value_absolute.setter
    def change_value_absolute(self, change_value_absolute):
        """Sets the change_value_absolute of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.

        The absolute impact to dimension.

        :param change_value_absolute: The change_value_absolute of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        :type change_value_absolute: float
        """

        self._change_value_absolute = change_value_absolute

    @property
    def change_value_relative(self):
        """Gets the change_value_relative of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.

        The relative impact to dimension (null if not applicable)

        :return: The change_value_relative of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        :rtype: float
        """
        return self._change_value_relative

    @change_value_relative.setter
    def change_value_relative(self, change_value_relative):
        """Sets the change_value_relative of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.

        The relative impact to dimension (null if not applicable)

        :param change_value_relative: The change_value_relative of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        :type change_value_relative: float
        """

        self._change_value_relative = change_value_relative

    @property
    def name(self):
        """Gets the name of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.

        The name of the impact dimension.

        :return: The name of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.

        The name of the impact dimension.

        :param name: The name of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        :type name: str
        """

        self._name = name

    @property
    def unit(self):
        """Gets the unit of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.

        The unit in which estimated impact to dimension is measured.

        :return: The unit of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.

        The unit in which estimated impact to dimension is measured.

        :param unit: The unit of this RecommendedElasticPoolPropertiesDatabasesInnerPropertiesRecommendedIndexInnerPropertiesEstimatedImpactInner.
        :type unit: str
        """

        self._unit = unit
