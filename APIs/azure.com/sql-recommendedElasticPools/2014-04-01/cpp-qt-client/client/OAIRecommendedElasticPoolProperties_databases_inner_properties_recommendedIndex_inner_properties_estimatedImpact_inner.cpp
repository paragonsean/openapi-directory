/**
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database resources including recommendations and operations.
 *
 * The version of the OpenAPI document: 2014-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner() {
    this->initializeModel();
}

OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::~OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner() {}

void OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::initializeModel() {

    m_change_value_absolute_isSet = false;
    m_change_value_absolute_isValid = false;

    m_change_value_relative_isSet = false;
    m_change_value_relative_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_unit_isSet = false;
    m_unit_isValid = false;
}

void OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::fromJsonObject(QJsonObject json) {

    m_change_value_absolute_isValid = ::OpenAPI::fromJsonValue(m_change_value_absolute, json[QString("changeValueAbsolute")]);
    m_change_value_absolute_isSet = !json[QString("changeValueAbsolute")].isNull() && m_change_value_absolute_isValid;

    m_change_value_relative_isValid = ::OpenAPI::fromJsonValue(m_change_value_relative, json[QString("changeValueRelative")]);
    m_change_value_relative_isSet = !json[QString("changeValueRelative")].isNull() && m_change_value_relative_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_unit_isValid = ::OpenAPI::fromJsonValue(m_unit, json[QString("unit")]);
    m_unit_isSet = !json[QString("unit")].isNull() && m_unit_isValid;
}

QString OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_change_value_absolute_isSet) {
        obj.insert(QString("changeValueAbsolute"), ::OpenAPI::toJsonValue(m_change_value_absolute));
    }
    if (m_change_value_relative_isSet) {
        obj.insert(QString("changeValueRelative"), ::OpenAPI::toJsonValue(m_change_value_relative));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_unit_isSet) {
        obj.insert(QString("unit"), ::OpenAPI::toJsonValue(m_unit));
    }
    return obj;
}

double OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::getChangeValueAbsolute() const {
    return m_change_value_absolute;
}
void OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::setChangeValueAbsolute(const double &change_value_absolute) {
    m_change_value_absolute = change_value_absolute;
    m_change_value_absolute_isSet = true;
}

bool OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::is_change_value_absolute_Set() const{
    return m_change_value_absolute_isSet;
}

bool OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::is_change_value_absolute_Valid() const{
    return m_change_value_absolute_isValid;
}

double OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::getChangeValueRelative() const {
    return m_change_value_relative;
}
void OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::setChangeValueRelative(const double &change_value_relative) {
    m_change_value_relative = change_value_relative;
    m_change_value_relative_isSet = true;
}

bool OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::is_change_value_relative_Set() const{
    return m_change_value_relative_isSet;
}

bool OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::is_change_value_relative_Valid() const{
    return m_change_value_relative_isValid;
}

QString OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::getName() const {
    return m_name;
}
void OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::getUnit() const {
    return m_unit;
}
void OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::setUnit(const QString &unit) {
    m_unit = unit;
    m_unit_isSet = true;
}

bool OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::is_unit_Set() const{
    return m_unit_isSet;
}

bool OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::is_unit_Valid() const{
    return m_unit_isValid;
}

bool OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_value_absolute_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_value_relative_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
