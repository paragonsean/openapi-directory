/**
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database resources including recommendations and operations.
 *
 * The version of the OpenAPI document: 2014-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecommendedElasticPoolProperties.h
 *
 * Represents the properties of a recommended elastic pool.
 */

#ifndef OAIRecommendedElasticPoolProperties_H
#define OAIRecommendedElasticPoolProperties_H

#include <QJsonObject>

#include "OAIRecommendedElasticPoolMetric.h"
#include "OAIRecommendedElasticPoolProperties_databases_inner.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecommendedElasticPoolProperties_databases_inner;
class OAIRecommendedElasticPoolMetric;

class OAIRecommendedElasticPoolProperties : public OAIObject {
public:
    OAIRecommendedElasticPoolProperties();
    OAIRecommendedElasticPoolProperties(QString json);
    ~OAIRecommendedElasticPoolProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getDatabaseDtuMax() const;
    void setDatabaseDtuMax(const double &database_dtu_max);
    bool is_database_dtu_max_Set() const;
    bool is_database_dtu_max_Valid() const;

    double getDatabaseDtuMin() const;
    void setDatabaseDtuMin(const double &database_dtu_min);
    bool is_database_dtu_min_Set() const;
    bool is_database_dtu_min_Valid() const;

    QString getDatabaseEdition() const;
    void setDatabaseEdition(const QString &database_edition);
    bool is_database_edition_Set() const;
    bool is_database_edition_Valid() const;

    QList<OAIRecommendedElasticPoolProperties_databases_inner> getDatabases() const;
    void setDatabases(const QList<OAIRecommendedElasticPoolProperties_databases_inner> &databases);
    bool is_databases_Set() const;
    bool is_databases_Valid() const;

    double getDtu() const;
    void setDtu(const double &dtu);
    bool is_dtu_Set() const;
    bool is_dtu_Valid() const;

    double getMaxObservedDtu() const;
    void setMaxObservedDtu(const double &max_observed_dtu);
    bool is_max_observed_dtu_Set() const;
    bool is_max_observed_dtu_Valid() const;

    double getMaxObservedStorageMb() const;
    void setMaxObservedStorageMb(const double &max_observed_storage_mb);
    bool is_max_observed_storage_mb_Set() const;
    bool is_max_observed_storage_mb_Valid() const;

    QList<OAIRecommendedElasticPoolMetric> getMetrics() const;
    void setMetrics(const QList<OAIRecommendedElasticPoolMetric> &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    QDateTime getObservationPeriodEnd() const;
    void setObservationPeriodEnd(const QDateTime &observation_period_end);
    bool is_observation_period_end_Set() const;
    bool is_observation_period_end_Valid() const;

    QDateTime getObservationPeriodStart() const;
    void setObservationPeriodStart(const QDateTime &observation_period_start);
    bool is_observation_period_start_Set() const;
    bool is_observation_period_start_Valid() const;

    double getStorageMb() const;
    void setStorageMb(const double &storage_mb);
    bool is_storage_mb_Set() const;
    bool is_storage_mb_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_database_dtu_max;
    bool m_database_dtu_max_isSet;
    bool m_database_dtu_max_isValid;

    double m_database_dtu_min;
    bool m_database_dtu_min_isSet;
    bool m_database_dtu_min_isValid;

    QString m_database_edition;
    bool m_database_edition_isSet;
    bool m_database_edition_isValid;

    QList<OAIRecommendedElasticPoolProperties_databases_inner> m_databases;
    bool m_databases_isSet;
    bool m_databases_isValid;

    double m_dtu;
    bool m_dtu_isSet;
    bool m_dtu_isValid;

    double m_max_observed_dtu;
    bool m_max_observed_dtu_isSet;
    bool m_max_observed_dtu_isValid;

    double m_max_observed_storage_mb;
    bool m_max_observed_storage_mb_isSet;
    bool m_max_observed_storage_mb_isValid;

    QList<OAIRecommendedElasticPoolMetric> m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    QDateTime m_observation_period_end;
    bool m_observation_period_end_isSet;
    bool m_observation_period_end_isValid;

    QDateTime m_observation_period_start;
    bool m_observation_period_start_isSet;
    bool m_observation_period_start_isValid;

    double m_storage_mb;
    bool m_storage_mb_isSet;
    bool m_storage_mb_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecommendedElasticPoolProperties)

#endif // OAIRecommendedElasticPoolProperties_H
