/**
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database resources including recommendations and operations.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RecommendedElasticPoolMetric from './RecommendedElasticPoolMetric';
import RecommendedElasticPoolPropertiesDatabasesInner from './RecommendedElasticPoolPropertiesDatabasesInner';

/**
 * The RecommendedElasticPoolProperties model module.
 * @module model/RecommendedElasticPoolProperties
 * @version 2014-04-01
 */
class RecommendedElasticPoolProperties {
    /**
     * Constructs a new <code>RecommendedElasticPoolProperties</code>.
     * Represents the properties of a recommended elastic pool.
     * @alias module:model/RecommendedElasticPoolProperties
     */
    constructor() { 
        
        RecommendedElasticPoolProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RecommendedElasticPoolProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RecommendedElasticPoolProperties} obj Optional instance to populate.
     * @return {module:model/RecommendedElasticPoolProperties} The populated <code>RecommendedElasticPoolProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecommendedElasticPoolProperties();

            if (data.hasOwnProperty('databaseDtuMax')) {
                obj['databaseDtuMax'] = ApiClient.convertToType(data['databaseDtuMax'], 'Number');
            }
            if (data.hasOwnProperty('databaseDtuMin')) {
                obj['databaseDtuMin'] = ApiClient.convertToType(data['databaseDtuMin'], 'Number');
            }
            if (data.hasOwnProperty('databaseEdition')) {
                obj['databaseEdition'] = ApiClient.convertToType(data['databaseEdition'], 'String');
            }
            if (data.hasOwnProperty('databases')) {
                obj['databases'] = ApiClient.convertToType(data['databases'], [RecommendedElasticPoolPropertiesDatabasesInner]);
            }
            if (data.hasOwnProperty('dtu')) {
                obj['dtu'] = ApiClient.convertToType(data['dtu'], 'Number');
            }
            if (data.hasOwnProperty('maxObservedDtu')) {
                obj['maxObservedDtu'] = ApiClient.convertToType(data['maxObservedDtu'], 'Number');
            }
            if (data.hasOwnProperty('maxObservedStorageMB')) {
                obj['maxObservedStorageMB'] = ApiClient.convertToType(data['maxObservedStorageMB'], 'Number');
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], [RecommendedElasticPoolMetric]);
            }
            if (data.hasOwnProperty('observationPeriodEnd')) {
                obj['observationPeriodEnd'] = ApiClient.convertToType(data['observationPeriodEnd'], 'Date');
            }
            if (data.hasOwnProperty('observationPeriodStart')) {
                obj['observationPeriodStart'] = ApiClient.convertToType(data['observationPeriodStart'], 'Date');
            }
            if (data.hasOwnProperty('storageMB')) {
                obj['storageMB'] = ApiClient.convertToType(data['storageMB'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RecommendedElasticPoolProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RecommendedElasticPoolProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['databaseEdition'] && !(typeof data['databaseEdition'] === 'string' || data['databaseEdition'] instanceof String)) {
            throw new Error("Expected the field `databaseEdition` to be a primitive type in the JSON string but got " + data['databaseEdition']);
        }
        if (data['databases']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['databases'])) {
                throw new Error("Expected the field `databases` to be an array in the JSON data but got " + data['databases']);
            }
            // validate the optional field `databases` (array)
            for (const item of data['databases']) {
                RecommendedElasticPoolPropertiesDatabasesInner.validateJSON(item);
            };
        }
        if (data['metrics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metrics'])) {
                throw new Error("Expected the field `metrics` to be an array in the JSON data but got " + data['metrics']);
            }
            // validate the optional field `metrics` (array)
            for (const item of data['metrics']) {
                RecommendedElasticPoolMetric.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The maximum DTU for the database.
 * @member {Number} databaseDtuMax
 */
RecommendedElasticPoolProperties.prototype['databaseDtuMax'] = undefined;

/**
 * The minimum DTU for the database.
 * @member {Number} databaseDtuMin
 */
RecommendedElasticPoolProperties.prototype['databaseDtuMin'] = undefined;

/**
 * The edition of the recommended elastic pool. The ElasticPoolEdition enumeration contains all the valid editions.
 * @member {module:model/RecommendedElasticPoolProperties.DatabaseEditionEnum} databaseEdition
 */
RecommendedElasticPoolProperties.prototype['databaseEdition'] = undefined;

/**
 * The list of databases in this pool. Expanded property
 * @member {Array.<module:model/RecommendedElasticPoolPropertiesDatabasesInner>} databases
 */
RecommendedElasticPoolProperties.prototype['databases'] = undefined;

/**
 * The DTU for the recommended elastic pool.
 * @member {Number} dtu
 */
RecommendedElasticPoolProperties.prototype['dtu'] = undefined;

/**
 * Gets maximum observed DTU.
 * @member {Number} maxObservedDtu
 */
RecommendedElasticPoolProperties.prototype['maxObservedDtu'] = undefined;

/**
 * Gets maximum observed storage in megabytes.
 * @member {Number} maxObservedStorageMB
 */
RecommendedElasticPoolProperties.prototype['maxObservedStorageMB'] = undefined;

/**
 * The list of databases housed in the server. Expanded property
 * @member {Array.<module:model/RecommendedElasticPoolMetric>} metrics
 */
RecommendedElasticPoolProperties.prototype['metrics'] = undefined;

/**
 * The observation period start (ISO8601 format).
 * @member {Date} observationPeriodEnd
 */
RecommendedElasticPoolProperties.prototype['observationPeriodEnd'] = undefined;

/**
 * The observation period start (ISO8601 format).
 * @member {Date} observationPeriodStart
 */
RecommendedElasticPoolProperties.prototype['observationPeriodStart'] = undefined;

/**
 * Gets storage size in megabytes.
 * @member {Number} storageMB
 */
RecommendedElasticPoolProperties.prototype['storageMB'] = undefined;





/**
 * Allowed values for the <code>databaseEdition</code> property.
 * @enum {String}
 * @readonly
 */
RecommendedElasticPoolProperties['DatabaseEditionEnum'] = {

    /**
     * value: "Basic"
     * @const
     */
    "Basic": "Basic",

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard",

    /**
     * value: "Premium"
     * @const
     */
    "Premium": "Premium",

    /**
     * value: "GeneralPurpose"
     * @const
     */
    "GeneralPurpose": "GeneralPurpose",

    /**
     * value: "BusinessCritical"
     * @const
     */
    "BusinessCritical": "BusinessCritical"
};



export default RecommendedElasticPoolProperties;

