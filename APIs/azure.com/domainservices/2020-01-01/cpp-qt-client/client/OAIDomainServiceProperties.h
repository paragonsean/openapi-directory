/**
 * Domain Services Resource Provider
 * The AAD Domain Services API.
 *
 * The version of the OpenAPI document: 2020-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDomainServiceProperties.h
 *
 * Properties of the Domain Service.
 */

#ifndef OAIDomainServiceProperties_H
#define OAIDomainServiceProperties_H

#include <QJsonObject>

#include "OAIDomainSecuritySettings.h"
#include "OAILdapsSettings.h"
#include "OAINotificationSettings.h"
#include "OAIReplicaSet.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDomainSecuritySettings;
class OAILdapsSettings;
class OAINotificationSettings;
class OAIReplicaSet;

class OAIDomainServiceProperties : public OAIObject {
public:
    OAIDomainServiceProperties();
    OAIDomainServiceProperties(QString json);
    ~OAIDomainServiceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeploymentId() const;
    void setDeploymentId(const QString &deployment_id);
    bool is_deployment_id_Set() const;
    bool is_deployment_id_Valid() const;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    OAIDomainSecuritySettings getDomainSecuritySettings() const;
    void setDomainSecuritySettings(const OAIDomainSecuritySettings &domain_security_settings);
    bool is_domain_security_settings_Set() const;
    bool is_domain_security_settings_Valid() const;

    QString getFilteredSync() const;
    void setFilteredSync(const QString &filtered_sync);
    bool is_filtered_sync_Set() const;
    bool is_filtered_sync_Valid() const;

    OAILdapsSettings getLdapsSettings() const;
    void setLdapsSettings(const OAILdapsSettings &ldaps_settings);
    bool is_ldaps_settings_Set() const;
    bool is_ldaps_settings_Valid() const;

    OAINotificationSettings getNotificationSettings() const;
    void setNotificationSettings(const OAINotificationSettings &notification_settings);
    bool is_notification_settings_Set() const;
    bool is_notification_settings_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QList<OAIReplicaSet> getReplicaSets() const;
    void setReplicaSets(const QList<OAIReplicaSet> &replica_sets);
    bool is_replica_sets_Set() const;
    bool is_replica_sets_Valid() const;

    QString getSyncOwner() const;
    void setSyncOwner(const QString &sync_owner);
    bool is_sync_owner_Set() const;
    bool is_sync_owner_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_deployment_id;
    bool m_deployment_id_isSet;
    bool m_deployment_id_isValid;

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    OAIDomainSecuritySettings m_domain_security_settings;
    bool m_domain_security_settings_isSet;
    bool m_domain_security_settings_isValid;

    QString m_filtered_sync;
    bool m_filtered_sync_isSet;
    bool m_filtered_sync_isValid;

    OAILdapsSettings m_ldaps_settings;
    bool m_ldaps_settings_isSet;
    bool m_ldaps_settings_isValid;

    OAINotificationSettings m_notification_settings;
    bool m_notification_settings_isSet;
    bool m_notification_settings_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QList<OAIReplicaSet> m_replica_sets;
    bool m_replica_sets_isSet;
    bool m_replica_sets_isValid;

    QString m_sync_owner;
    bool m_sync_owner_isSet;
    bool m_sync_owner_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDomainServiceProperties)

#endif // OAIDomainServiceProperties_H
