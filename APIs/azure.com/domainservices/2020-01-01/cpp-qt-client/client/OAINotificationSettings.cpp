/**
 * Domain Services Resource Provider
 * The AAD Domain Services API.
 *
 * The version of the OpenAPI document: 2020-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINotificationSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINotificationSettings::OAINotificationSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINotificationSettings::OAINotificationSettings() {
    this->initializeModel();
}

OAINotificationSettings::~OAINotificationSettings() {}

void OAINotificationSettings::initializeModel() {

    m_additional_recipients_isSet = false;
    m_additional_recipients_isValid = false;

    m_notify_dc_admins_isSet = false;
    m_notify_dc_admins_isValid = false;

    m_notify_global_admins_isSet = false;
    m_notify_global_admins_isValid = false;
}

void OAINotificationSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINotificationSettings::fromJsonObject(QJsonObject json) {

    m_additional_recipients_isValid = ::OpenAPI::fromJsonValue(m_additional_recipients, json[QString("additionalRecipients")]);
    m_additional_recipients_isSet = !json[QString("additionalRecipients")].isNull() && m_additional_recipients_isValid;

    m_notify_dc_admins_isValid = ::OpenAPI::fromJsonValue(m_notify_dc_admins, json[QString("notifyDcAdmins")]);
    m_notify_dc_admins_isSet = !json[QString("notifyDcAdmins")].isNull() && m_notify_dc_admins_isValid;

    m_notify_global_admins_isValid = ::OpenAPI::fromJsonValue(m_notify_global_admins, json[QString("notifyGlobalAdmins")]);
    m_notify_global_admins_isSet = !json[QString("notifyGlobalAdmins")].isNull() && m_notify_global_admins_isValid;
}

QString OAINotificationSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINotificationSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_recipients.size() > 0) {
        obj.insert(QString("additionalRecipients"), ::OpenAPI::toJsonValue(m_additional_recipients));
    }
    if (m_notify_dc_admins_isSet) {
        obj.insert(QString("notifyDcAdmins"), ::OpenAPI::toJsonValue(m_notify_dc_admins));
    }
    if (m_notify_global_admins_isSet) {
        obj.insert(QString("notifyGlobalAdmins"), ::OpenAPI::toJsonValue(m_notify_global_admins));
    }
    return obj;
}

QList<QString> OAINotificationSettings::getAdditionalRecipients() const {
    return m_additional_recipients;
}
void OAINotificationSettings::setAdditionalRecipients(const QList<QString> &additional_recipients) {
    m_additional_recipients = additional_recipients;
    m_additional_recipients_isSet = true;
}

bool OAINotificationSettings::is_additional_recipients_Set() const{
    return m_additional_recipients_isSet;
}

bool OAINotificationSettings::is_additional_recipients_Valid() const{
    return m_additional_recipients_isValid;
}

QString OAINotificationSettings::getNotifyDcAdmins() const {
    return m_notify_dc_admins;
}
void OAINotificationSettings::setNotifyDcAdmins(const QString &notify_dc_admins) {
    m_notify_dc_admins = notify_dc_admins;
    m_notify_dc_admins_isSet = true;
}

bool OAINotificationSettings::is_notify_dc_admins_Set() const{
    return m_notify_dc_admins_isSet;
}

bool OAINotificationSettings::is_notify_dc_admins_Valid() const{
    return m_notify_dc_admins_isValid;
}

QString OAINotificationSettings::getNotifyGlobalAdmins() const {
    return m_notify_global_admins;
}
void OAINotificationSettings::setNotifyGlobalAdmins(const QString &notify_global_admins) {
    m_notify_global_admins = notify_global_admins;
    m_notify_global_admins_isSet = true;
}

bool OAINotificationSettings::is_notify_global_admins_Set() const{
    return m_notify_global_admins_isSet;
}

bool OAINotificationSettings::is_notify_global_admins_Valid() const{
    return m_notify_global_admins_isValid;
}

bool OAINotificationSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_recipients.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_notify_dc_admins_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notify_global_admins_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINotificationSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
