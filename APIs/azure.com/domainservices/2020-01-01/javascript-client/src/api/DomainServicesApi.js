/**
 * Domain Services Resource Provider
 * The AAD Domain Services API.
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import DomainService from '../model/DomainService';
import DomainServiceListResult from '../model/DomainServiceListResult';
import OperationEntityListResult from '../model/OperationEntityListResult';

/**
* DomainServices service.
* @module api/DomainServicesApi
* @version 2020-01-01
*/
export default class DomainServicesApi {

    /**
    * Constructs a new DomainServicesApi. 
    * @alias module:api/DomainServicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the domainServiceOperationsList operation.
     * @callback module:api/DomainServicesApi~domainServiceOperationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationEntityListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the available Domain Services operations.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/DomainServicesApi~domainServiceOperationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationEntityListResult}
     */
    domainServiceOperationsList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainServiceOperationsList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationEntityListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.AAD/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainServicesCreateOrUpdate operation.
     * @callback module:api/DomainServicesApi~domainServicesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or Update Domain Service (PUT Resource)
     * The Create Domain Service operation creates a new domain service with the specified parameters. If the specific service already exists, then any patchable properties will be updated and any immutable properties will remain unchanged.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} domainServiceName The name of the domain service.
     * @param {module:model/DomainService} domainService Properties supplied to the Create or Update a Domain Service operation.
     * @param {module:api/DomainServicesApi~domainServicesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainService}
     */
    domainServicesCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, domainServiceName, domainService, callback) {
      let postBody = domainService;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainServicesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainServicesCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainServicesCreateOrUpdate");
      }
      // verify the required parameter 'domainServiceName' is set
      if (domainServiceName === undefined || domainServiceName === null) {
        throw new Error("Missing the required parameter 'domainServiceName' when calling domainServicesCreateOrUpdate");
      }
      // verify the required parameter 'domainService' is set
      if (domainService === undefined || domainService === null) {
        throw new Error("Missing the required parameter 'domainService' when calling domainServicesCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'domainServiceName': domainServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DomainService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainServicesDelete operation.
     * @callback module:api/DomainServicesApi~domainServicesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Domain Service (DELETE Resource)
     * The Delete Domain Service operation deletes an existing Domain Service.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} domainServiceName The name of the domain service.
     * @param {module:api/DomainServicesApi~domainServicesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    domainServicesDelete(apiVersion, subscriptionId, resourceGroupName, domainServiceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainServicesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainServicesDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainServicesDelete");
      }
      // verify the required parameter 'domainServiceName' is set
      if (domainServiceName === undefined || domainServiceName === null) {
        throw new Error("Missing the required parameter 'domainServiceName' when calling domainServicesDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'domainServiceName': domainServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainServicesGet operation.
     * @callback module:api/DomainServicesApi~domainServicesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Domain Service
     * The Get Domain Service operation retrieves a json representation of the Domain Service.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} domainServiceName The name of the domain service.
     * @param {module:api/DomainServicesApi~domainServicesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainService}
     */
    domainServicesGet(apiVersion, subscriptionId, resourceGroupName, domainServiceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainServicesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainServicesGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainServicesGet");
      }
      // verify the required parameter 'domainServiceName' is set
      if (domainServiceName === undefined || domainServiceName === null) {
        throw new Error("Missing the required parameter 'domainServiceName' when calling domainServicesGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'domainServiceName': domainServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainServicesList operation.
     * @callback module:api/DomainServicesApi~domainServicesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainServiceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Domain Services in Subscription
     * The List Domain Services in Subscription operation lists all the domain services available under the given subscription (and across all resource groups within that subscription).
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/DomainServicesApi~domainServicesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainServiceListResult}
     */
    domainServicesList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainServicesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainServicesList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainServiceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.AAD/domainServices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainServicesListByResourceGroup operation.
     * @callback module:api/DomainServicesApi~domainServicesListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainServiceListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Domain Services in Resource Group
     * The List Domain Services in Resource Group operation lists all the domain services available under the given resource group.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {module:api/DomainServicesApi~domainServicesListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainServiceListResult}
     */
    domainServicesListByResourceGroup(apiVersion, subscriptionId, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainServicesListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainServicesListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainServicesListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DomainServiceListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the domainServicesUpdate operation.
     * @callback module:api/DomainServicesApi~domainServicesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DomainService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Domain Service (PATCH Resource)
     * The Update Domain Service operation can be used to update the existing deployment. The update call only supports the properties listed in the PATCH body.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} domainServiceName The name of the domain service.
     * @param {module:model/DomainService} domainService Properties supplied to the Update a Domain Service operation.
     * @param {module:api/DomainServicesApi~domainServicesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DomainService}
     */
    domainServicesUpdate(apiVersion, subscriptionId, resourceGroupName, domainServiceName, domainService, callback) {
      let postBody = domainService;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling domainServicesUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling domainServicesUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling domainServicesUpdate");
      }
      // verify the required parameter 'domainServiceName' is set
      if (domainServiceName === undefined || domainServiceName === null) {
        throw new Error("Missing the required parameter 'domainServiceName' when calling domainServicesUpdate");
      }
      // verify the required parameter 'domainService' is set
      if (domainService === undefined || domainService === null) {
        throw new Error("Missing the required parameter 'domainService' when calling domainServicesUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'domainServiceName': domainServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DomainService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
