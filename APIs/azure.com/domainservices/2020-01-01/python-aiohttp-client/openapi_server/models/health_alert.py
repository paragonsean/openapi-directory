# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HealthAlert(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, issue: str=None, last_detected: datetime=None, name: str=None, raised: datetime=None, resolution_uri: str=None, severity: str=None):
        """HealthAlert - a model defined in OpenAPI

        :param id: The id of this HealthAlert.
        :param issue: The issue of this HealthAlert.
        :param last_detected: The last_detected of this HealthAlert.
        :param name: The name of this HealthAlert.
        :param raised: The raised of this HealthAlert.
        :param resolution_uri: The resolution_uri of this HealthAlert.
        :param severity: The severity of this HealthAlert.
        """
        self.openapi_types = {
            'id': str,
            'issue': str,
            'last_detected': datetime,
            'name': str,
            'raised': datetime,
            'resolution_uri': str,
            'severity': str
        }

        self.attribute_map = {
            'id': 'id',
            'issue': 'issue',
            'last_detected': 'lastDetected',
            'name': 'name',
            'raised': 'raised',
            'resolution_uri': 'resolutionUri',
            'severity': 'severity'
        }

        self._id = id
        self._issue = issue
        self._last_detected = last_detected
        self._name = name
        self._raised = raised
        self._resolution_uri = resolution_uri
        self._severity = severity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HealthAlert':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HealthAlert of this HealthAlert.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this HealthAlert.

        Health Alert Id

        :return: The id of this HealthAlert.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this HealthAlert.

        Health Alert Id

        :param id: The id of this HealthAlert.
        :type id: str
        """

        self._id = id

    @property
    def issue(self):
        """Gets the issue of this HealthAlert.

        Health Alert Issue

        :return: The issue of this HealthAlert.
        :rtype: str
        """
        return self._issue

    @issue.setter
    def issue(self, issue):
        """Sets the issue of this HealthAlert.

        Health Alert Issue

        :param issue: The issue of this HealthAlert.
        :type issue: str
        """

        self._issue = issue

    @property
    def last_detected(self):
        """Gets the last_detected of this HealthAlert.

        Health Alert Last Detected DateTime

        :return: The last_detected of this HealthAlert.
        :rtype: datetime
        """
        return self._last_detected

    @last_detected.setter
    def last_detected(self, last_detected):
        """Sets the last_detected of this HealthAlert.

        Health Alert Last Detected DateTime

        :param last_detected: The last_detected of this HealthAlert.
        :type last_detected: datetime
        """

        self._last_detected = last_detected

    @property
    def name(self):
        """Gets the name of this HealthAlert.

        Health Alert Name

        :return: The name of this HealthAlert.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this HealthAlert.

        Health Alert Name

        :param name: The name of this HealthAlert.
        :type name: str
        """

        self._name = name

    @property
    def raised(self):
        """Gets the raised of this HealthAlert.

        Health Alert Raised DateTime

        :return: The raised of this HealthAlert.
        :rtype: datetime
        """
        return self._raised

    @raised.setter
    def raised(self, raised):
        """Sets the raised of this HealthAlert.

        Health Alert Raised DateTime

        :param raised: The raised of this HealthAlert.
        :type raised: datetime
        """

        self._raised = raised

    @property
    def resolution_uri(self):
        """Gets the resolution_uri of this HealthAlert.

        Health Alert TSG Link

        :return: The resolution_uri of this HealthAlert.
        :rtype: str
        """
        return self._resolution_uri

    @resolution_uri.setter
    def resolution_uri(self, resolution_uri):
        """Sets the resolution_uri of this HealthAlert.

        Health Alert TSG Link

        :param resolution_uri: The resolution_uri of this HealthAlert.
        :type resolution_uri: str
        """

        self._resolution_uri = resolution_uri

    @property
    def severity(self):
        """Gets the severity of this HealthAlert.

        Health Alert Severity

        :return: The severity of this HealthAlert.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this HealthAlert.

        Health Alert Severity

        :param severity: The severity of this HealthAlert.
        :type severity: str
        """

        self._severity = severity
