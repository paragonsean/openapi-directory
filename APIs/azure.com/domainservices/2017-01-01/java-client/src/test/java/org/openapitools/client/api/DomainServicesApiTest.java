/*
 * Domain Services Resource Provider
 * The AAD Domain Services API.
 *
 * The version of the OpenAPI document: 2017-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DomainService;
import org.openapitools.client.model.DomainServiceListResult;
import org.openapitools.client.model.OperationEntityListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DomainServicesApi
 */
@Disabled
public class DomainServicesApiTest {

    private final DomainServicesApi api = new DomainServicesApi();

    /**
     * Lists all the available Domain Services operations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainServiceOperationsListTest() throws ApiException {
        String apiVersion = null;
        OperationEntityListResult response = api.domainServiceOperationsList(apiVersion);
        // TODO: test validations
    }

    /**
     * Create or Update Domain Service (PUT Resource)
     *
     * The Create Domain Service operation creates a new domain service with the specified parameters. If the specific service already exists, then any patchable properties will be updated and any immutable properties will remain unchanged.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainServicesCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String domainServiceName = null;
        DomainService domainService = null;
        DomainService response = api.domainServicesCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, domainServiceName, domainService);
        // TODO: test validations
    }

    /**
     * Delete Domain Service (DELETE Resource)
     *
     * The Delete Domain Service operation deletes an existing Domain Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainServicesDeleteTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String domainServiceName = null;
        api.domainServicesDelete(apiVersion, subscriptionId, resourceGroupName, domainServiceName);
        // TODO: test validations
    }

    /**
     * Get Domain Service (GET Resources)
     *
     * The Get Domain Service operation retrieves a json representation of the Domain Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainServicesGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String domainServiceName = null;
        DomainService response = api.domainServicesGet(apiVersion, subscriptionId, resourceGroupName, domainServiceName);
        // TODO: test validations
    }

    /**
     * List Domain Services in Subscription (GET Resources)
     *
     * The List Domain Services in Subscription operation lists all the domain services available under the given subscription (and across all resource groups within that subscription).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainServicesListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        DomainServiceListResult response = api.domainServicesList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * List Domain Services in Resource Group (GET Resources)
     *
     * The List Domain Services in Resource Group operation lists all the domain services available under the given resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainServicesListByResourceGroupTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        DomainServiceListResult response = api.domainServicesListByResourceGroup(apiVersion, subscriptionId, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Update Domain Service (PATCH Resource)
     *
     * The Update Domain Service operation can be used to update the existing deployment. The update call only supports the properties listed in the PATCH body.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainServicesUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String domainServiceName = null;
        DomainService domainService = null;
        DomainService response = api.domainServicesUpdate(apiVersion, subscriptionId, resourceGroupName, domainServiceName, domainService);
        // TODO: test validations
    }

}
