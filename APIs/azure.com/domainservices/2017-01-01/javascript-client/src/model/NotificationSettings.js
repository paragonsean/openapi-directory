/**
 * Domain Services Resource Provider
 * The AAD Domain Services API.
 *
 * The version of the OpenAPI document: 2017-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NotificationSettings model module.
 * @module model/NotificationSettings
 * @version 2017-01-01
 */
class NotificationSettings {
    /**
     * Constructs a new <code>NotificationSettings</code>.
     * Settings for notification
     * @alias module:model/NotificationSettings
     */
    constructor() { 
        
        NotificationSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NotificationSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationSettings} obj Optional instance to populate.
     * @return {module:model/NotificationSettings} The populated <code>NotificationSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationSettings();

            if (data.hasOwnProperty('additionalRecipients')) {
                obj['additionalRecipients'] = ApiClient.convertToType(data['additionalRecipients'], ['String']);
            }
            if (data.hasOwnProperty('notifyDcAdmins')) {
                obj['notifyDcAdmins'] = ApiClient.convertToType(data['notifyDcAdmins'], 'String');
            }
            if (data.hasOwnProperty('notifyGlobalAdmins')) {
                obj['notifyGlobalAdmins'] = ApiClient.convertToType(data['notifyGlobalAdmins'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['additionalRecipients'])) {
            throw new Error("Expected the field `additionalRecipients` to be an array in the JSON data but got " + data['additionalRecipients']);
        }
        // ensure the json data is a string
        if (data['notifyDcAdmins'] && !(typeof data['notifyDcAdmins'] === 'string' || data['notifyDcAdmins'] instanceof String)) {
            throw new Error("Expected the field `notifyDcAdmins` to be a primitive type in the JSON string but got " + data['notifyDcAdmins']);
        }
        // ensure the json data is a string
        if (data['notifyGlobalAdmins'] && !(typeof data['notifyGlobalAdmins'] === 'string' || data['notifyGlobalAdmins'] instanceof String)) {
            throw new Error("Expected the field `notifyGlobalAdmins` to be a primitive type in the JSON string but got " + data['notifyGlobalAdmins']);
        }

        return true;
    }


}



/**
 * The list of additional recipients
 * @member {Array.<String>} additionalRecipients
 */
NotificationSettings.prototype['additionalRecipients'] = undefined;

/**
 * Should domain controller admins be notified
 * @member {module:model/NotificationSettings.NotifyDcAdminsEnum} notifyDcAdmins
 */
NotificationSettings.prototype['notifyDcAdmins'] = undefined;

/**
 * Should global admins be notified
 * @member {module:model/NotificationSettings.NotifyGlobalAdminsEnum} notifyGlobalAdmins
 */
NotificationSettings.prototype['notifyGlobalAdmins'] = undefined;





/**
 * Allowed values for the <code>notifyDcAdmins</code> property.
 * @enum {String}
 * @readonly
 */
NotificationSettings['NotifyDcAdminsEnum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};


/**
 * Allowed values for the <code>notifyGlobalAdmins</code> property.
 * @enum {String}
 * @readonly
 */
NotificationSettings['NotifyGlobalAdminsEnum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};



export default NotificationSettings;

