/**
 * Domain Services Resource Provider
 * The AAD Domain Services API.
 *
 * The version of the OpenAPI document: 2017-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDomainSecuritySettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDomainSecuritySettings::OAIDomainSecuritySettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDomainSecuritySettings::OAIDomainSecuritySettings() {
    this->initializeModel();
}

OAIDomainSecuritySettings::~OAIDomainSecuritySettings() {}

void OAIDomainSecuritySettings::initializeModel() {

    m_ntlm_v1_isSet = false;
    m_ntlm_v1_isValid = false;

    m_sync_ntlm_passwords_isSet = false;
    m_sync_ntlm_passwords_isValid = false;

    m_tls_v1_isSet = false;
    m_tls_v1_isValid = false;
}

void OAIDomainSecuritySettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDomainSecuritySettings::fromJsonObject(QJsonObject json) {

    m_ntlm_v1_isValid = ::OpenAPI::fromJsonValue(m_ntlm_v1, json[QString("ntlmV1")]);
    m_ntlm_v1_isSet = !json[QString("ntlmV1")].isNull() && m_ntlm_v1_isValid;

    m_sync_ntlm_passwords_isValid = ::OpenAPI::fromJsonValue(m_sync_ntlm_passwords, json[QString("syncNtlmPasswords")]);
    m_sync_ntlm_passwords_isSet = !json[QString("syncNtlmPasswords")].isNull() && m_sync_ntlm_passwords_isValid;

    m_tls_v1_isValid = ::OpenAPI::fromJsonValue(m_tls_v1, json[QString("tlsV1")]);
    m_tls_v1_isSet = !json[QString("tlsV1")].isNull() && m_tls_v1_isValid;
}

QString OAIDomainSecuritySettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDomainSecuritySettings::asJsonObject() const {
    QJsonObject obj;
    if (m_ntlm_v1_isSet) {
        obj.insert(QString("ntlmV1"), ::OpenAPI::toJsonValue(m_ntlm_v1));
    }
    if (m_sync_ntlm_passwords_isSet) {
        obj.insert(QString("syncNtlmPasswords"), ::OpenAPI::toJsonValue(m_sync_ntlm_passwords));
    }
    if (m_tls_v1_isSet) {
        obj.insert(QString("tlsV1"), ::OpenAPI::toJsonValue(m_tls_v1));
    }
    return obj;
}

QString OAIDomainSecuritySettings::getNtlmV1() const {
    return m_ntlm_v1;
}
void OAIDomainSecuritySettings::setNtlmV1(const QString &ntlm_v1) {
    m_ntlm_v1 = ntlm_v1;
    m_ntlm_v1_isSet = true;
}

bool OAIDomainSecuritySettings::is_ntlm_v1_Set() const{
    return m_ntlm_v1_isSet;
}

bool OAIDomainSecuritySettings::is_ntlm_v1_Valid() const{
    return m_ntlm_v1_isValid;
}

QString OAIDomainSecuritySettings::getSyncNtlmPasswords() const {
    return m_sync_ntlm_passwords;
}
void OAIDomainSecuritySettings::setSyncNtlmPasswords(const QString &sync_ntlm_passwords) {
    m_sync_ntlm_passwords = sync_ntlm_passwords;
    m_sync_ntlm_passwords_isSet = true;
}

bool OAIDomainSecuritySettings::is_sync_ntlm_passwords_Set() const{
    return m_sync_ntlm_passwords_isSet;
}

bool OAIDomainSecuritySettings::is_sync_ntlm_passwords_Valid() const{
    return m_sync_ntlm_passwords_isValid;
}

QString OAIDomainSecuritySettings::getTlsV1() const {
    return m_tls_v1;
}
void OAIDomainSecuritySettings::setTlsV1(const QString &tls_v1) {
    m_tls_v1 = tls_v1;
    m_tls_v1_isSet = true;
}

bool OAIDomainSecuritySettings::is_tls_v1_Set() const{
    return m_tls_v1_isSet;
}

bool OAIDomainSecuritySettings::is_tls_v1_Valid() const{
    return m_tls_v1_isValid;
}

bool OAIDomainSecuritySettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ntlm_v1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sync_ntlm_passwords_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tls_v1_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDomainSecuritySettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
