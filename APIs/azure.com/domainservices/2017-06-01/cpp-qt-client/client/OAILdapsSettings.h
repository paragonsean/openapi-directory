/**
 * Domain Services Resource Provider
 * The AAD Domain Services API.
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILdapsSettings.h
 *
 * Secure LDAP Settings
 */

#ifndef OAILdapsSettings_H
#define OAILdapsSettings_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILdapsSettings : public OAIObject {
public:
    OAILdapsSettings();
    OAILdapsSettings(QString json);
    ~OAILdapsSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCertificateNotAfter() const;
    void setCertificateNotAfter(const QDateTime &certificate_not_after);
    bool is_certificate_not_after_Set() const;
    bool is_certificate_not_after_Valid() const;

    QString getCertificateThumbprint() const;
    void setCertificateThumbprint(const QString &certificate_thumbprint);
    bool is_certificate_thumbprint_Set() const;
    bool is_certificate_thumbprint_Valid() const;

    QString getExternalAccess() const;
    void setExternalAccess(const QString &external_access);
    bool is_external_access_Set() const;
    bool is_external_access_Valid() const;

    QString getExternalAccessIpAddress() const;
    void setExternalAccessIpAddress(const QString &external_access_ip_address);
    bool is_external_access_ip_address_Set() const;
    bool is_external_access_ip_address_Valid() const;

    QString getLdaps() const;
    void setLdaps(const QString &ldaps);
    bool is_ldaps_Set() const;
    bool is_ldaps_Valid() const;

    QString getPfxCertificate() const;
    void setPfxCertificate(const QString &pfx_certificate);
    bool is_pfx_certificate_Set() const;
    bool is_pfx_certificate_Valid() const;

    QString getPfxCertificatePassword() const;
    void setPfxCertificatePassword(const QString &pfx_certificate_password);
    bool is_pfx_certificate_password_Set() const;
    bool is_pfx_certificate_password_Valid() const;

    QString getPublicCertificate() const;
    void setPublicCertificate(const QString &public_certificate);
    bool is_public_certificate_Set() const;
    bool is_public_certificate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_certificate_not_after;
    bool m_certificate_not_after_isSet;
    bool m_certificate_not_after_isValid;

    QString m_certificate_thumbprint;
    bool m_certificate_thumbprint_isSet;
    bool m_certificate_thumbprint_isValid;

    QString m_external_access;
    bool m_external_access_isSet;
    bool m_external_access_isValid;

    QString m_external_access_ip_address;
    bool m_external_access_ip_address_isSet;
    bool m_external_access_ip_address_isValid;

    QString m_ldaps;
    bool m_ldaps_isSet;
    bool m_ldaps_isValid;

    QString m_pfx_certificate;
    bool m_pfx_certificate_isSet;
    bool m_pfx_certificate_isValid;

    QString m_pfx_certificate_password;
    bool m_pfx_certificate_password_isSet;
    bool m_pfx_certificate_password_isValid;

    QString m_public_certificate;
    bool m_public_certificate_isSet;
    bool m_public_certificate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILdapsSettings)

#endif // OAILdapsSettings_H
