/**
 * Domain Services Resource Provider
 * The AAD Domain Services API.
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DomainSecuritySettings model module.
 * @module model/DomainSecuritySettings
 * @version 2017-06-01
 */
class DomainSecuritySettings {
    /**
     * Constructs a new <code>DomainSecuritySettings</code>.
     * Domain Security Settings
     * @alias module:model/DomainSecuritySettings
     */
    constructor() { 
        
        DomainSecuritySettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DomainSecuritySettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DomainSecuritySettings} obj Optional instance to populate.
     * @return {module:model/DomainSecuritySettings} The populated <code>DomainSecuritySettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DomainSecuritySettings();

            if (data.hasOwnProperty('ntlmV1')) {
                obj['ntlmV1'] = ApiClient.convertToType(data['ntlmV1'], 'String');
            }
            if (data.hasOwnProperty('syncNtlmPasswords')) {
                obj['syncNtlmPasswords'] = ApiClient.convertToType(data['syncNtlmPasswords'], 'String');
            }
            if (data.hasOwnProperty('tlsV1')) {
                obj['tlsV1'] = ApiClient.convertToType(data['tlsV1'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DomainSecuritySettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DomainSecuritySettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ntlmV1'] && !(typeof data['ntlmV1'] === 'string' || data['ntlmV1'] instanceof String)) {
            throw new Error("Expected the field `ntlmV1` to be a primitive type in the JSON string but got " + data['ntlmV1']);
        }
        // ensure the json data is a string
        if (data['syncNtlmPasswords'] && !(typeof data['syncNtlmPasswords'] === 'string' || data['syncNtlmPasswords'] instanceof String)) {
            throw new Error("Expected the field `syncNtlmPasswords` to be a primitive type in the JSON string but got " + data['syncNtlmPasswords']);
        }
        // ensure the json data is a string
        if (data['tlsV1'] && !(typeof data['tlsV1'] === 'string' || data['tlsV1'] instanceof String)) {
            throw new Error("Expected the field `tlsV1` to be a primitive type in the JSON string but got " + data['tlsV1']);
        }

        return true;
    }


}



/**
 * A flag to determine whether or not NtlmV1 is enabled or disabled.
 * @member {module:model/DomainSecuritySettings.NtlmV1Enum} ntlmV1
 */
DomainSecuritySettings.prototype['ntlmV1'] = undefined;

/**
 * A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
 * @member {module:model/DomainSecuritySettings.SyncNtlmPasswordsEnum} syncNtlmPasswords
 */
DomainSecuritySettings.prototype['syncNtlmPasswords'] = undefined;

/**
 * A flag to determine whether or not TlsV1 is enabled or disabled.
 * @member {module:model/DomainSecuritySettings.TlsV1Enum} tlsV1
 */
DomainSecuritySettings.prototype['tlsV1'] = undefined;





/**
 * Allowed values for the <code>ntlmV1</code> property.
 * @enum {String}
 * @readonly
 */
DomainSecuritySettings['NtlmV1Enum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};


/**
 * Allowed values for the <code>syncNtlmPasswords</code> property.
 * @enum {String}
 * @readonly
 */
DomainSecuritySettings['SyncNtlmPasswordsEnum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};


/**
 * Allowed values for the <code>tlsV1</code> property.
 * @enum {String}
 * @readonly
 */
DomainSecuritySettings['TlsV1Enum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};



export default DomainSecuritySettings;

