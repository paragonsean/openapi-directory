/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUsage.h
 *
 * Describes network resource usage.
 */

#ifndef OAIUsage_H
#define OAIUsage_H

#include <QJsonObject>

#include "OAIUsageName.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUsageName;

class OAIUsage : public OAIObject {
public:
    OAIUsage();
    OAIUsage(QString json);
    ~OAIUsage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCurrentValue() const;
    void setCurrentValue(const qint64 &current_value);
    bool is_current_value_Set() const;
    bool is_current_value_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint64 getLimit() const;
    void setLimit(const qint64 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    OAIUsageName getName() const;
    void setName(const OAIUsageName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_current_value;
    bool m_current_value_isSet;
    bool m_current_value_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint64 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    OAIUsageName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUsage)

#endif // OAIUsage_H
