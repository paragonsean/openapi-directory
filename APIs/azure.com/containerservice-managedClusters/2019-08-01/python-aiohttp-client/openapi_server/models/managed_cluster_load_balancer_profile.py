# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.managed_cluster_load_balancer_profile_managed_outbound_ips import ManagedClusterLoadBalancerProfileManagedOutboundIPs
from openapi_server.models.managed_cluster_load_balancer_profile_outbound_ip_prefixes import ManagedClusterLoadBalancerProfileOutboundIPPrefixes
from openapi_server.models.managed_cluster_load_balancer_profile_outbound_ips import ManagedClusterLoadBalancerProfileOutboundIPs
from openapi_server.models.resource_reference import ResourceReference
from openapi_server import util


class ManagedClusterLoadBalancerProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, effective_outbound_ips: List[ResourceReference]=None, managed_outbound_ips: ManagedClusterLoadBalancerProfileManagedOutboundIPs=None, outbound_ip_prefixes: ManagedClusterLoadBalancerProfileOutboundIPPrefixes=None, outbound_ips: ManagedClusterLoadBalancerProfileOutboundIPs=None):
        """ManagedClusterLoadBalancerProfile - a model defined in OpenAPI

        :param effective_outbound_ips: The effective_outbound_ips of this ManagedClusterLoadBalancerProfile.
        :param managed_outbound_ips: The managed_outbound_ips of this ManagedClusterLoadBalancerProfile.
        :param outbound_ip_prefixes: The outbound_ip_prefixes of this ManagedClusterLoadBalancerProfile.
        :param outbound_ips: The outbound_ips of this ManagedClusterLoadBalancerProfile.
        """
        self.openapi_types = {
            'effective_outbound_ips': List[ResourceReference],
            'managed_outbound_ips': ManagedClusterLoadBalancerProfileManagedOutboundIPs,
            'outbound_ip_prefixes': ManagedClusterLoadBalancerProfileOutboundIPPrefixes,
            'outbound_ips': ManagedClusterLoadBalancerProfileOutboundIPs
        }

        self.attribute_map = {
            'effective_outbound_ips': 'effectiveOutboundIPs',
            'managed_outbound_ips': 'managedOutboundIPs',
            'outbound_ip_prefixes': 'outboundIPPrefixes',
            'outbound_ips': 'outboundIPs'
        }

        self._effective_outbound_ips = effective_outbound_ips
        self._managed_outbound_ips = managed_outbound_ips
        self._outbound_ip_prefixes = outbound_ip_prefixes
        self._outbound_ips = outbound_ips

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedClusterLoadBalancerProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedClusterLoadBalancerProfile of this ManagedClusterLoadBalancerProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def effective_outbound_ips(self):
        """Gets the effective_outbound_ips of this ManagedClusterLoadBalancerProfile.

        The effective outbound IP resources of the cluster load balancer.

        :return: The effective_outbound_ips of this ManagedClusterLoadBalancerProfile.
        :rtype: List[ResourceReference]
        """
        return self._effective_outbound_ips

    @effective_outbound_ips.setter
    def effective_outbound_ips(self, effective_outbound_ips):
        """Sets the effective_outbound_ips of this ManagedClusterLoadBalancerProfile.

        The effective outbound IP resources of the cluster load balancer.

        :param effective_outbound_ips: The effective_outbound_ips of this ManagedClusterLoadBalancerProfile.
        :type effective_outbound_ips: List[ResourceReference]
        """

        self._effective_outbound_ips = effective_outbound_ips

    @property
    def managed_outbound_ips(self):
        """Gets the managed_outbound_ips of this ManagedClusterLoadBalancerProfile.


        :return: The managed_outbound_ips of this ManagedClusterLoadBalancerProfile.
        :rtype: ManagedClusterLoadBalancerProfileManagedOutboundIPs
        """
        return self._managed_outbound_ips

    @managed_outbound_ips.setter
    def managed_outbound_ips(self, managed_outbound_ips):
        """Sets the managed_outbound_ips of this ManagedClusterLoadBalancerProfile.


        :param managed_outbound_ips: The managed_outbound_ips of this ManagedClusterLoadBalancerProfile.
        :type managed_outbound_ips: ManagedClusterLoadBalancerProfileManagedOutboundIPs
        """

        self._managed_outbound_ips = managed_outbound_ips

    @property
    def outbound_ip_prefixes(self):
        """Gets the outbound_ip_prefixes of this ManagedClusterLoadBalancerProfile.


        :return: The outbound_ip_prefixes of this ManagedClusterLoadBalancerProfile.
        :rtype: ManagedClusterLoadBalancerProfileOutboundIPPrefixes
        """
        return self._outbound_ip_prefixes

    @outbound_ip_prefixes.setter
    def outbound_ip_prefixes(self, outbound_ip_prefixes):
        """Sets the outbound_ip_prefixes of this ManagedClusterLoadBalancerProfile.


        :param outbound_ip_prefixes: The outbound_ip_prefixes of this ManagedClusterLoadBalancerProfile.
        :type outbound_ip_prefixes: ManagedClusterLoadBalancerProfileOutboundIPPrefixes
        """

        self._outbound_ip_prefixes = outbound_ip_prefixes

    @property
    def outbound_ips(self):
        """Gets the outbound_ips of this ManagedClusterLoadBalancerProfile.


        :return: The outbound_ips of this ManagedClusterLoadBalancerProfile.
        :rtype: ManagedClusterLoadBalancerProfileOutboundIPs
        """
        return self._outbound_ips

    @outbound_ips.setter
    def outbound_ips(self, outbound_ips):
        """Sets the outbound_ips of this ManagedClusterLoadBalancerProfile.


        :param outbound_ips: The outbound_ips of this ManagedClusterLoadBalancerProfile.
        :type outbound_ips: ManagedClusterLoadBalancerProfileOutboundIPs
        """

        self._outbound_ips = outbound_ips
