/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerServiceStorageProfile.h
 *
 * Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice.
 */

#ifndef OAIContainerServiceStorageProfile_H
#define OAIContainerServiceStorageProfile_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContainerServiceStorageProfile : public OAIEnum {
public:
    OAIContainerServiceStorageProfile();
    OAIContainerServiceStorageProfile(QString json);
    ~OAIContainerServiceStorageProfile() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIContainerServiceStorageProfile {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        STORAGEACCOUNT, 
        MANAGEDDISKS
    };
    OAIContainerServiceStorageProfile::eOAIContainerServiceStorageProfile getValue() const;
    void setValue(const OAIContainerServiceStorageProfile::eOAIContainerServiceStorageProfile& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIContainerServiceStorageProfile m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerServiceStorageProfile)

#endif // OAIContainerServiceStorageProfile_H
