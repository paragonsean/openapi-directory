/*
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2017-08-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ManagedCluster;
import org.openapitools.client.model.ManagedClusterAccessProfile;
import org.openapitools.client.model.ManagedClusterListResult;
import org.openapitools.client.model.ManagedClusterUpgradeProfile;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagedClustersApi
 */
@Disabled
public class ManagedClustersApiTest {

    private final ManagedClustersApi api = new ManagedClustersApi();

    /**
     * Creates or updates a managed cluster.
     *
     * Creates or updates a managed cluster with the specified configuration for agents and Kubernetes version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedClustersCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        ManagedCluster parameters = null;
        ManagedCluster response = api.managedClustersCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a managed cluster.
     *
     * Deletes the managed cluster with a specified resource group and name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedClustersDeleteTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        api.managedClustersDelete(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

    /**
     * Gets a managed cluster.
     *
     * Gets the details of the managed cluster with a specified resource group and name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedClustersGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        ManagedCluster response = api.managedClustersGet(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

    /**
     * Gets an access profile of a managed cluster.
     *
     * Gets the accessProfile for the specified role name of the managed cluster with a specified resource group and name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedClustersGetAccessProfileTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        String roleName = null;
        ManagedClusterAccessProfile response = api.managedClustersGetAccessProfile(apiVersion, subscriptionId, resourceGroupName, resourceName, roleName);
        // TODO: test validations
    }

    /**
     * Gets access profile of a managed cluster.
     *
     * Use ManagedClusters_GetAccessProfile instead.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedClustersGetAccessProfilesTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        String roleName = null;
        ManagedClusterAccessProfile response = api.managedClustersGetAccessProfiles(apiVersion, subscriptionId, resourceGroupName, resourceName, roleName);
        // TODO: test validations
    }

    /**
     * Gets upgrade profile for a managed cluster.
     *
     * Gets the details of the upgrade profile for a managed cluster with a specified resource group and name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedClustersGetUpgradeProfileTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String resourceName = null;
        ManagedClusterUpgradeProfile response = api.managedClustersGetUpgradeProfile(apiVersion, subscriptionId, resourceGroupName, resourceName);
        // TODO: test validations
    }

    /**
     * Gets a list of managed clusters in the specified subscription.
     *
     * Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedClustersListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        ManagedClusterListResult response = api.managedClustersList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists managed clusters in the specified subscription and resource group.
     *
     * Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedClustersListByResourceGroupTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        ManagedClusterListResult response = api.managedClustersListByResourceGroup(apiVersion, subscriptionId, resourceGroupName);
        // TODO: test validations
    }

}
