/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedClusterWindowsProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedClusterWindowsProfile::OAIManagedClusterWindowsProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedClusterWindowsProfile::OAIManagedClusterWindowsProfile() {
    this->initializeModel();
}

OAIManagedClusterWindowsProfile::~OAIManagedClusterWindowsProfile() {}

void OAIManagedClusterWindowsProfile::initializeModel() {

    m_admin_password_isSet = false;
    m_admin_password_isValid = false;

    m_admin_username_isSet = false;
    m_admin_username_isValid = false;
}

void OAIManagedClusterWindowsProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedClusterWindowsProfile::fromJsonObject(QJsonObject json) {

    m_admin_password_isValid = ::OpenAPI::fromJsonValue(m_admin_password, json[QString("adminPassword")]);
    m_admin_password_isSet = !json[QString("adminPassword")].isNull() && m_admin_password_isValid;

    m_admin_username_isValid = ::OpenAPI::fromJsonValue(m_admin_username, json[QString("adminUsername")]);
    m_admin_username_isSet = !json[QString("adminUsername")].isNull() && m_admin_username_isValid;
}

QString OAIManagedClusterWindowsProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedClusterWindowsProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_password_isSet) {
        obj.insert(QString("adminPassword"), ::OpenAPI::toJsonValue(m_admin_password));
    }
    if (m_admin_username_isSet) {
        obj.insert(QString("adminUsername"), ::OpenAPI::toJsonValue(m_admin_username));
    }
    return obj;
}

QString OAIManagedClusterWindowsProfile::getAdminPassword() const {
    return m_admin_password;
}
void OAIManagedClusterWindowsProfile::setAdminPassword(const QString &admin_password) {
    m_admin_password = admin_password;
    m_admin_password_isSet = true;
}

bool OAIManagedClusterWindowsProfile::is_admin_password_Set() const{
    return m_admin_password_isSet;
}

bool OAIManagedClusterWindowsProfile::is_admin_password_Valid() const{
    return m_admin_password_isValid;
}

QString OAIManagedClusterWindowsProfile::getAdminUsername() const {
    return m_admin_username;
}
void OAIManagedClusterWindowsProfile::setAdminUsername(const QString &admin_username) {
    m_admin_username = admin_username;
    m_admin_username_isSet = true;
}

bool OAIManagedClusterWindowsProfile::is_admin_username_Set() const{
    return m_admin_username_isSet;
}

bool OAIManagedClusterWindowsProfile::is_admin_username_Valid() const{
    return m_admin_username_isValid;
}

bool OAIManagedClusterWindowsProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_admin_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedClusterWindowsProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_admin_username_isValid && true;
}

} // namespace OpenAPI
