/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedClusterLoadBalancerProfile_outboundIPs.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedClusterLoadBalancerProfile_outboundIPs::OAIManagedClusterLoadBalancerProfile_outboundIPs(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedClusterLoadBalancerProfile_outboundIPs::OAIManagedClusterLoadBalancerProfile_outboundIPs() {
    this->initializeModel();
}

OAIManagedClusterLoadBalancerProfile_outboundIPs::~OAIManagedClusterLoadBalancerProfile_outboundIPs() {}

void OAIManagedClusterLoadBalancerProfile_outboundIPs::initializeModel() {

    m_public_ips_isSet = false;
    m_public_ips_isValid = false;
}

void OAIManagedClusterLoadBalancerProfile_outboundIPs::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedClusterLoadBalancerProfile_outboundIPs::fromJsonObject(QJsonObject json) {

    m_public_ips_isValid = ::OpenAPI::fromJsonValue(m_public_ips, json[QString("publicIPs")]);
    m_public_ips_isSet = !json[QString("publicIPs")].isNull() && m_public_ips_isValid;
}

QString OAIManagedClusterLoadBalancerProfile_outboundIPs::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedClusterLoadBalancerProfile_outboundIPs::asJsonObject() const {
    QJsonObject obj;
    if (m_public_ips.size() > 0) {
        obj.insert(QString("publicIPs"), ::OpenAPI::toJsonValue(m_public_ips));
    }
    return obj;
}

QList<OAIResourceReference> OAIManagedClusterLoadBalancerProfile_outboundIPs::getPublicIps() const {
    return m_public_ips;
}
void OAIManagedClusterLoadBalancerProfile_outboundIPs::setPublicIps(const QList<OAIResourceReference> &public_ips) {
    m_public_ips = public_ips;
    m_public_ips_isSet = true;
}

bool OAIManagedClusterLoadBalancerProfile_outboundIPs::is_public_ips_Set() const{
    return m_public_ips_isSet;
}

bool OAIManagedClusterLoadBalancerProfile_outboundIPs::is_public_ips_Valid() const{
    return m_public_ips_isValid;
}

bool OAIManagedClusterLoadBalancerProfile_outboundIPs::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_public_ips.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedClusterLoadBalancerProfile_outboundIPs::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
