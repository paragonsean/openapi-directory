/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2018-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManagedClusterAgentPoolProfile.h
 *
 * Profile for the container service agent pool.
 */

#ifndef OAIManagedClusterAgentPoolProfile_H
#define OAIManagedClusterAgentPoolProfile_H

#include <QJsonObject>

#include "OAIAgentPoolType.h"
#include "OAIContainerServiceVMSize.h"
#include "OAIOSType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIManagedClusterAgentPoolProfile : public OAIObject {
public:
    OAIManagedClusterAgentPoolProfile();
    OAIManagedClusterAgentPoolProfile(QString json);
    ~OAIManagedClusterAgentPoolProfile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    bool isEnableAutoScaling() const;
    void setEnableAutoScaling(const bool &enable_auto_scaling);
    bool is_enable_auto_scaling_Set() const;
    bool is_enable_auto_scaling_Valid() const;

    qint32 getMaxCount() const;
    void setMaxCount(const qint32 &max_count);
    bool is_max_count_Set() const;
    bool is_max_count_Valid() const;

    qint32 getMaxPods() const;
    void setMaxPods(const qint32 &max_pods);
    bool is_max_pods_Set() const;
    bool is_max_pods_Valid() const;

    qint32 getMinCount() const;
    void setMinCount(const qint32 &min_count);
    bool is_min_count_Set() const;
    bool is_min_count_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getOsDiskSizeGb() const;
    void setOsDiskSizeGb(const qint32 &os_disk_size_gb);
    bool is_os_disk_size_gb_Set() const;
    bool is_os_disk_size_gb_Valid() const;

    OAIOSType getOsType() const;
    void setOsType(const OAIOSType &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    OAIAgentPoolType getType() const;
    void setType(const OAIAgentPoolType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIContainerServiceVMSize getVmSize() const;
    void setVmSize(const OAIContainerServiceVMSize &vm_size);
    bool is_vm_size_Set() const;
    bool is_vm_size_Valid() const;

    QString getVnetSubnetId() const;
    void setVnetSubnetId(const QString &vnet_subnet_id);
    bool is_vnet_subnet_id_Set() const;
    bool is_vnet_subnet_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    bool m_enable_auto_scaling;
    bool m_enable_auto_scaling_isSet;
    bool m_enable_auto_scaling_isValid;

    qint32 m_max_count;
    bool m_max_count_isSet;
    bool m_max_count_isValid;

    qint32 m_max_pods;
    bool m_max_pods_isSet;
    bool m_max_pods_isValid;

    qint32 m_min_count;
    bool m_min_count_isSet;
    bool m_min_count_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_os_disk_size_gb;
    bool m_os_disk_size_gb_isSet;
    bool m_os_disk_size_gb_isValid;

    OAIOSType m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;

    OAIAgentPoolType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIContainerServiceVMSize m_vm_size;
    bool m_vm_size_isSet;
    bool m_vm_size_isValid;

    QString m_vnet_subnet_id;
    bool m_vnet_subnet_id_isSet;
    bool m_vnet_subnet_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManagedClusterAgentPoolProfile)

#endif // OAIManagedClusterAgentPoolProfile_H
