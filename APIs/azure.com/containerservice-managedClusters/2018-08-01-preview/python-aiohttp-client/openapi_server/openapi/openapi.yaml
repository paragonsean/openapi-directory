openapi: 3.0.1
info:
  description: The Container Service Client.
  title: ContainerServiceClient
  version: 2018-08-01-preview
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerservice/resource-manager/Microsoft.ContainerService/preview/2018-08-01-preview/managedClusters.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: containerservice-managedClusters
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /providers/Microsoft.ContainerService/operations:
    get:
      description: Gets a list of compute operations.
      operationId: operations_list
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
          description: OK
      tags:
      - managedClusters
      x-ms-pageable: {}
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/managedClusters:
    get:
      description: Gets a list of managed clusters in the specified subscription.
        The operation returns properties of each managed cluster.
      operationId: managed_clusters_list
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClusterListResult'
          description: OK
      summary: Gets a list of managed clusters in the specified subscription.
      tags:
      - ManagedClusters
      x-ms-examples:
        List Managed Clusters:
          parameters:
            api-version: 2018-08-01-preview
            subscriptionId: subid1
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subid1/providers/Microsoft.ContainerService/managedClusters
                  location: location1
                  name: clustername1
                  properties:
                    agentPoolProfiles:
                    - count: 3
                      maxPods: 110
                      name: nodepool1
                      osType: Linux
                      vmSize: Standard_DS1_v2
                    dnsPrefix: dnsprefix1
                    enableRBAC: false
                    fqdn: dnsprefix1-abcd1234.hcp.eastus.azmk8s.io
                    kubernetesVersion: 1.9.6
                    linuxProfile:
                      adminUsername: azureuser
                      ssh:
                        publicKeys:
                        - keyData: keydata
                    networkProfile:
                      dnsServiceIP: 10.0.0.10
                      dockerBridgeCidr: 172.17.0.1/16
                      networkPlugin: kubenet
                      podCidr: 10.244.0.0/16
                      serviceCidr: 10.0.0.0/16
                    nodeResourceGroup: MC_rg1_clustername1_location1
                    provisioningState: Succeeded
                    servicePrincipalProfile:
                      clientId: clientid
                  tags:
                    archv2: ""
                    tier: production
                  type: Microsoft.ContainerService/ManagedClusters
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters:
    get:
      description: Lists managed clusters in the specified subscription and resource
        group. The operation returns properties of each managed cluster.
      operationId: managed_clusters_list_by_resource_group
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClusterListResult'
          description: OK
      summary: Lists managed clusters in the specified subscription and resource group.
      tags:
      - ManagedClusters
      x-ms-examples:
        Get Managed Clusters by Resource Group:
          parameters:
            api-version: 2018-08-01-preview
            resourceGroupName: rg1
            subscriptionId: subid1
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters
                  location: location1
                  name: clustername1
                  properties:
                    agentPoolProfiles:
                    - count: 3
                      maxPods: 110
                      name: nodepool1
                      osType: Linux
                      vmSize: Standard_DS1_v2
                    dnsPrefix: dnsprefix1
                    enableRBAC: false
                    fqdn: dnsprefix1-abcd1234.hcp.eastus.azmk8s.io
                    kubernetesVersion: 1.9.6
                    linuxProfile:
                      adminUsername: azureuser
                      ssh:
                        publicKeys:
                        - keyData: keydata
                    networkProfile:
                      dnsServiceIP: 10.0.0.10
                      dockerBridgeCidr: 172.17.0.1/16
                      networkPlugin: kubenet
                      podCidr: 10.244.0.0/16
                      serviceCidr: 10.0.0.0/16
                    nodeResourceGroup: MC_rg1_clustername1_location1
                    provisioningState: Succeeded
                    servicePrincipalProfile:
                      clientId: clientid
                  tags:
                    archv2: ""
                    tier: production
                  type: Microsoft.ContainerService/ManagedClusters
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}
  : delete:
      description: Deletes the managed cluster with a specified resource group and
        name.
      operationId: managed_clusters_delete
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
      - description: The name of the managed cluster resource.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: Accepted
        "204":
          content: {}
          description: NoContent
      summary: Deletes a managed cluster.
      tags:
      - ManagedClusters
      x-ms-examples:
        Delete Managed Cluster:
          parameters:
            api-version: 2018-08-01-preview
            resourceGroupName: rg1
            resourceName: clustername1
            subscriptionId: subid1
          responses:
            "202": {}
            "204": {}
      x-ms-long-running-operation: true
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
    get:
      description: Gets the details of the managed cluster with a specified resource
        group and name.
      operationId: managed_clusters_get
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
      - description: The name of the managed cluster resource.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCluster'
          description: OK
      summary: Gets a managed cluster.
      tags:
      - ManagedClusters
      x-ms-examples:
        Get Managed Cluster:
          parameters:
            api-version: 2018-08-01-preview
            resourceGroupName: rg1
            resourceName: clustername1
            subscriptionId: subid1
          responses:
            "200":
              body:
                id: /subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1
                location: location1
                name: clustername1
                properties:
                  agentPoolProfiles:
                  - count: 3
                    maxPods: 110
                    name: nodepool1
                    osType: Linux
                    vmSize: Standard_DS1_v2
                  dnsPrefix: dnsprefix1
                  enableRBAC: false
                  fqdn: dnsprefix1-abcd1234.hcp.eastus.azmk8s.io
                  kubernetesVersion: 1.9.6
                  linuxProfile:
                    adminUsername: azureuser
                    ssh:
                      publicKeys:
                      - keyData: keydata
                  networkProfile:
                    dnsServiceIP: 10.0.0.10
                    dockerBridgeCidr: 172.17.0.1/16
                    networkPlugin: kubenet
                    podCidr: 10.244.0.0/16
                    serviceCidr: 10.0.0.0/16
                  nodeResourceGroup: MC_rg1_clustername1_location1
                  provisioningState: Succeeded
                  servicePrincipalProfile:
                    clientId: clientid
                tags:
                  archv2: ""
                  tier: production
                type: Microsoft.ContainerService/ManagedClusters
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
    patch:
      description: Updates a managed cluster with the specified tags.
      operationId: managed_clusters_update_tags
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
      - description: The name of the managed cluster resource.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
        description: Parameters supplied to the Update Managed Cluster Tags operation.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCluster'
          description: OK
      summary: Updates tags on a managed cluster.
      tags:
      - ManagedClusters
      x-ms-examples:
        Update Managed Cluster Tags:
          parameters:
            api-version: 2018-08-01-preview
            parameters:
              tags:
                archv3: ""
                tier: testing
            resourceGroupName: rg1
            resourceName: clustername1
            subscriptionId: subid1
          responses:
            "200":
              body:
                id: /subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1
                location: location1
                name: clustername1
                properties:
                  agentPoolProfiles:
                  - count: 3
                    maxPods: 110
                    name: nodepool1
                    osType: Linux
                    vmSize: Standard_DS1_v2
                  dnsPrefix: dnsprefix1
                  enableRBAC: false
                  fqdn: dnsprefix1-abcd1234.hcp.eastus.azmk8s.io
                  kubernetesVersion: 1.9.6
                  linuxProfile:
                    adminUsername: azureuser
                    ssh:
                      publicKeys:
                      - keyData: keydata
                  networkProfile:
                    dnsServiceIP: 10.0.0.10
                    dockerBridgeCidr: 172.17.0.1/16
                    networkPlugin: kubenet
                    podCidr: 10.244.0.0/16
                    serviceCidr: 10.0.0.0/16
                  nodeResourceGroup: MC_rg1_clustername1_location1
                  provisioningState: Succeeded
                  servicePrincipalProfile:
                    clientId: clientid
                tags:
                  archv3: ""
                  tier: testing
                type: Microsoft.ContainerService/ManagedClusters
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
    put:
      description: Creates or updates a managed cluster with the specified configuration
        for agents and Kubernetes version.
      operationId: managed_clusters_create_or_update
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
      - description: The name of the managed cluster resource.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedCluster'
        description: Parameters supplied to the Create or Update a Managed Cluster
          operation.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCluster'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCluster'
          description: Created
      summary: Creates or updates a managed cluster.
      tags:
      - ManagedClusters
      x-ms-examples:
        Create/Update Managed Cluster:
          parameters:
            api-version: 2018-08-01-preview
            parameters:
              location: location1
              properties:
                addonProfiles: {}
                agentPoolProfiles:
                - count: 3
                  name: nodepool1
                  osType: Linux
                  vmSize: Standard_DS1_v2
                dnsPrefix: dnsprefix1
                enableRBAC: false
                kubernetesVersion: ""
                linuxProfile:
                  adminUsername: azureuser
                  ssh:
                    publicKeys:
                    - keyData: keydata
                servicePrincipalProfile:
                  clientId: clientid
                  secret: secret
              tags:
                archv2: ""
                tier: production
            resourceGroupName: rg1
            resourceName: clustername1
            subscriptionId: subid1
          responses:
            "200":
              body:
                id: /subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1
                location: location1
                name: clustername1
                properties:
                  agentPoolProfiles:
                  - count: 3
                    maxPods: 110
                    name: nodepool1
                    osType: Linux
                    vmSize: Standard_DS1_v2
                  dnsPrefix: dnsprefix1
                  enableRBAC: false
                  fqdn: dnsprefix1-abcd1234.hcp.eastus.azmk8s.io
                  kubernetesVersion: 1.9.6
                  linuxProfile:
                    adminUsername: azureuser
                    ssh:
                      publicKeys:
                      - keyData: keydata
                  networkProfile:
                    dnsServiceIP: 10.0.0.10
                    dockerBridgeCidr: 172.17.0.1/16
                    networkPlugin: kubenet
                    podCidr: 10.244.0.0/16
                    serviceCidr: 10.0.0.0/16
                  nodeResourceGroup: MC_rg1_clustername1_location1
                  provisioningState: Succeeded
                  servicePrincipalProfile:
                    clientId: clientid
                tags:
                  archv2: ""
                  tier: production
                type: Microsoft.ContainerService/ManagedClusters
            "201":
              body:
                id: /subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1
                location: location1
                name: clustername1
                properties:
                  agentPoolProfiles:
                  - count: 3
                    maxPods: 110
                    name: nodepool1
                    osType: Linux
                    vmSize: Standard_DS1_v2
                  dnsPrefix: dnsprefix1
                  enableRBAC: false
                  kubernetesVersion: 1.9.6
                  linuxProfile:
                    adminUsername: azureuser
                    ssh:
                      publicKeys:
                      - keyData: keydata
                  networkProfile:
                    dnsServiceIP: 10.0.0.10
                    dockerBridgeCidr: 172.17.0.1/16
                    networkPlugin: kubenet
                    podCidr: 10.244.0.0/16
                    serviceCidr: 10.0.0.0/16
                  nodeResourceGroup: MC_rg1_clustername1_location1
                  provisioningState: Creating
                  servicePrincipalProfile:
                    clientId: clientid
                tags:
                  archv2: ""
                  tier: production
                type: Microsoft.ContainerService/ManagedClusters
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/accessProfiles/{roleName}/listCredential
  : post:
      description: Gets the accessProfile for the specified role name of the managed
        cluster with a specified resource group and name.
      operationId: managed_clusters_get_access_profile
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
      - description: The name of the managed cluster resource.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      - description: The name of the role for managed cluster accessProfile resource.
        in: path
        name: roleName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClusterAccessProfile'
          description: OK
      summary: Gets an access profile of a managed cluster.
      tags:
      - ManagedClusters
      x-ms-examples:
        Get Managed Cluster:
          parameters:
            api-version: 2018-08-01-preview
            resourceGroupName: rg1
            resourceName: clustername1
            roleName: clusterUser
            subscriptionId: subid1
          responses:
            "200":
              body:
                id: /subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/accessProfiles/clusterUser
                location: location1
                name: clusterUser
                properties:
                  kubeConfig: kubeConfig1
                type: Microsoft.ContainerService/ManagedClusters/AccessProfiles
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/listClusterAdminCredential
  : post:
      description: Gets cluster admin credential of the managed cluster with a specified
        resource group and name.
      operationId: managed_clusters_list_cluster_admin_credentials
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
      - description: The name of the managed cluster resource.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResults'
          description: OK
      summary: Gets cluster admin credential of a managed cluster.
      tags:
      - ManagedClusters
      x-ms-examples:
        Get Managed Cluster:
          parameters:
            api-version: 2018-08-01-preview
            resourceGroupName: rg1
            resourceName: clustername1
            subscriptionId: subid1
          responses:
            "200":
              body:
                kubeconfigs:
                - name: credentialName1
                  value: credentialValue1
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/listClusterUserCredential
  : post:
      description: Gets cluster user credential of the managed cluster with a specified
        resource group and name.
      operationId: managed_clusters_list_cluster_user_credentials
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
      - description: The name of the managed cluster resource.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResults'
          description: OK
      summary: Gets cluster user credential of a managed cluster.
      tags:
      - ManagedClusters
      x-ms-examples:
        Get Managed Cluster:
          parameters:
            api-version: 2018-08-01-preview
            resourceGroupName: rg1
            resourceName: clustername1
            subscriptionId: subid1
          responses:
            "200":
              body:
                kubeconfigs:
                - name: credentialName1
                  value: credentialValue1
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/resetAADProfile
  : post:
      description: Update the AAD Profile for a managed cluster.
      operationId: managed_clusters_reset_aad_profile
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
      - description: The name of the managed cluster resource.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedClusterAADProfile'
        description: Parameters supplied to the Reset AAD Profile operation for a
          Managed Cluster.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content: {}
          description: OK
        "202":
          content: {}
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: "Error response describing why the operation failed. If the\
            \ cluster doesn't exist, 404 (Not found) is returned."
      summary: Reset AAD Profile of a managed cluster.
      tags:
      - ManagedClusters
      x-ms-examples:
        Reset AAD Profile:
          parameters:
            api-version: 2018-08-01-preview
            parameters:
              clientAppID: clientappid
              serverAppID: serverappid
              serverAppSecret: serverappsecret
              tenantID: tenantid
            resourceGroupName: rg1
            resourceName: clustername1
            subscriptionId: subid1
          responses:
            "200": {}
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/resetServicePrincipalProfile
  : post:
      description: Update the service principal Profile for a managed cluster.
      operationId: managed_clusters_reset_service_principal_profile
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
      - description: The name of the managed cluster resource.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedClusterServicePrincipalProfile'
        description: Parameters supplied to the Reset Service Principal Profile operation
          for a Managed Cluster.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content: {}
          description: OK
        "202":
          content: {}
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: "Error response describing why the operation failed. If the\
            \ cluster doesn't exist, 404 (Not found) is returned."
      summary: Reset Service Principal Profile of a managed cluster.
      tags:
      - ManagedClusters
      x-ms-examples:
        Reset Service Principal Profile:
          parameters:
            api-version: 2018-08-01-preview
            parameters:
              clientId: clientid
              secret: secret
            resourceGroupName: rg1
            resourceName: clustername1
            subscriptionId: subid1
          responses:
            "200": {}
            "202": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/upgradeProfiles/default
  : get:
      description: Gets the details of the upgrade profile for a managed cluster with
        a specified resource group and name.
      operationId: managed_clusters_get_upgrade_profile
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: Subscription credentials which uniquely identify Microsoft Azure
          subscription. The subscription ID forms part of the URI for every service
          call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
          x-ms-parameter-location: client
        x-ms-parameter-location: client
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          minLength: 1
          type: string
      - description: The name of the managed cluster resource.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClusterUpgradeProfile'
          description: OK
      summary: Gets upgrade profile for a managed cluster.
      tags:
      - ManagedClusters
      x-ms-examples:
        Get Upgrade Profile for Managed Cluster:
          parameters:
            api-version: 2018-08-01-preview
            resourceGroupName: rg1
            resourceName: clustername1
            subscriptionId: subid1
          responses:
            "200":
              body:
                id: /subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/upgradeprofiles/default
                name: default
                properties:
                  agentPoolProfiles:
                  - kubernetesVersion: 1.7.7
                    name: agent
                    osType: Linux
                    upgrades:
                    - 1.8.1
                  controlPlaneProfile:
                    kubernetesVersion: 1.7.7
                    name: master
                    osType: Linux
                    upgrades:
                    - 1.8.1
                type: Microsoft.ContainerService/managedClusters/upgradeprofiles
      x-openapi-router-controller: openapi_server.controllers.managed_clusters_controller
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
        x-ms-parameter-location: client
      x-ms-parameter-location: client
    SubscriptionIdParameter:
      description: Subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every service
        call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
        x-ms-parameter-location: client
      x-ms-parameter-location: client
  schemas:
    AccessProfile:
      description: Profile for enabling a user to access a managed cluster.
      example:
        kubeConfig: kubeConfig
      properties:
        kubeConfig:
          description: Base64-encoded Kubernetes configuration file.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          title: kubeConfig
          type: string
      title: AccessProfile
      type: object
    AgentPoolType:
      description: AgentPoolType represents types of an agent pool
      enum:
      - VirtualMachineScaleSets
      - AvailabilitySet
      title: AgentPoolType
      type: string
      x-ms-enum:
        modelAsString: true
        name: AgentPoolType
    CloudError:
      description: An error response from the Container service.
      example:
        error:
          code: code
          details:
          - null
          - null
          message: message
          target: target
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
      title: CloudError
      type: object
      x-ms-external: true
    CloudErrorBody:
      description: An error response from the Container service.
      example:
        code: code
        details:
        - null
        - null
        message: message
        target: target
      properties:
        code:
          description: An identifier for the error. Codes are invariant and are intended
            to be consumed programmatically.
          title: code
          type: string
        details:
          description: A list of additional details about the error.
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          title: details
          type: array
        message:
          description: "A message describing the error, intended to be suitable for\
            \ display in a user interface."
          title: message
          type: string
        target:
          description: "The target of the particular error. For example, the name\
            \ of the property in error."
          title: target
          type: string
      title: CloudErrorBody
      type: object
      x-ms-external: true
    ContainerServiceDiagnosticsProfile:
      description: Profile for diagnostics on the container service cluster.
      properties:
        vmDiagnostics:
          $ref: '#/components/schemas/ContainerServiceVMDiagnostics'
      required:
      - vmDiagnostics
      type: object
    ContainerServiceLinuxProfile:
      description: Profile for Linux VMs in the container service cluster.
      example:
        adminUsername: adminUsername
        ssh:
          publicKeys:
          - keyData: keyData
          - keyData: keyData
      properties:
        adminUsername:
          description: The administrator username to use for Linux VMs.
          pattern: "^[A-Za-z][-A-Za-z0-9_]*$"
          title: adminUsername
          type: string
        ssh:
          $ref: '#/components/schemas/ContainerServiceSshConfiguration'
      required:
      - adminUsername
      - ssh
      title: ContainerServiceLinuxProfile
      type: object
    ContainerServiceMasterProfile:
      description: Profile for the container service master.
      properties:
        count:
          default: 1
          description: "Number of masters (VMs) in the container service cluster.\
            \ Allowed values are 1, 3, and 5. The default value is 1."
          enum:
          - 1
          - 3
          - 5
          format: int32
          type: integer
          x-ms-enum:
            modelAsString: false
            name: Count
        dnsPrefix:
          description: DNS prefix to be used to create the FQDN for the master pool.
          type: string
        firstConsecutiveStaticIP:
          default: 10.240.255.5
          description: FirstConsecutiveStaticIP used to specify the first static ip
            of masters.
          type: string
        fqdn:
          description: FQDN for the master pool.
          readOnly: true
          type: string
        osDiskSizeGB:
          description: "OS Disk Size in GB to be used to specify the disk size for\
            \ every machine in this master/agent pool. If you specify 0, it will apply\
            \ the default osDisk size according to the vmSize specified."
          format: int32
          maximum: 1023
          minimum: 0
          title: ContainerServiceOSDisk
          type: integer
        storageProfile:
          $ref: '#/components/schemas/ContainerServiceStorageProfile'
        vmSize:
          $ref: '#/components/schemas/ContainerServiceVMSize'
        vnetSubnetID:
          description: VNet SubnetID specifies the VNet's subnet identifier.
          title: ContainerServiceVnetSubnetID
          type: string
      required:
      - dnsPrefix
      - vmSize
      type: object
    ContainerServiceNetworkProfile:
      description: Profile of network configuration.
      example:
        networkPlugin: kubenet
        dockerBridgeCidr: 172.17.0.1/16
        dnsServiceIP: 10.0.0.10
        networkPolicy: calico
        podCidr: 10.244.0.0/16
        serviceCidr: 10.0.0.0/16
      properties:
        dnsServiceIP:
          default: 10.0.0.10
          description: An IP address assigned to the Kubernetes DNS service. It must
            be within the Kubernetes service address range specified in serviceCidr.
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
          title: dnsServiceIP
          type: string
        dockerBridgeCidr:
          default: 172.17.0.1/16
          description: A CIDR notation IP range assigned to the Docker bridge network.
            It must not overlap with any Subnet IP ranges or the Kubernetes service
            address range.
          pattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
          title: dockerBridgeCidr
          type: string
        networkPlugin:
          default: kubenet
          description: Network plugin used for building Kubernetes network.
          enum:
          - azure
          - kubenet
          title: networkPlugin
          type: string
          x-ms-enum:
            modelAsString: true
            name: NetworkPlugin
        networkPolicy:
          description: Network policy used for building Kubernetes network.
          enum:
          - calico
          title: networkPolicy
          type: string
          x-ms-enum:
            modelAsString: true
            name: NetworkPolicy
        podCidr:
          default: 10.244.0.0/16
          description: A CIDR notation IP range from which to assign pod IPs when
            kubenet is used.
          pattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
          title: podCidr
          type: string
        serviceCidr:
          default: 10.0.0.0/16
          description: A CIDR notation IP range from which to assign service cluster
            IPs. It must not overlap with any Subnet IP ranges.
          pattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
          title: serviceCidr
          type: string
      title: ContainerServiceNetworkProfile
      type: object
    ContainerServiceOSDisk:
      description: "OS Disk Size in GB to be used to specify the disk size for every\
        \ machine in this master/agent pool. If you specify 0, it will apply the default\
        \ osDisk size according to the vmSize specified."
      format: int32
      maximum: 1023
      minimum: 0
      title: ContainerServiceOSDisk
      type: integer
    ContainerServiceSshConfiguration:
      description: SSH configuration for Linux-based VMs running on Azure.
      example:
        publicKeys:
        - keyData: keyData
        - keyData: keyData
      properties:
        publicKeys:
          description: The list of SSH public keys used to authenticate with Linux-based
            VMs. Only expect one key specified.
          items:
            $ref: '#/components/schemas/ContainerServiceSshPublicKey'
          title: publicKeys
          type: array
      required:
      - publicKeys
      title: ContainerServiceSshConfiguration
      type: object
    ContainerServiceSshPublicKey:
      description: Contains information about SSH certificate public key data.
      example:
        keyData: keyData
      properties:
        keyData:
          description: Certificate public key used to authenticate with VMs through
            SSH. The certificate must be in PEM format with or without headers.
          title: keyData
          type: string
      required:
      - keyData
      title: ContainerServiceSshPublicKey
      type: object
    ContainerServiceStorageProfile:
      description: "Storage profile specifies what kind of storage used. Choose from\
        \ StorageAccount and ManagedDisks. Leave it empty, we will choose for you\
        \ based on the orchestrator choice."
      enum:
      - StorageAccount
      - ManagedDisks
      title: ContainerServiceStorageProfile
      type: string
      x-ms-enum:
        modelAsString: true
        name: ContainerServiceStorageProfileTypes
    ContainerServiceVMDiagnostics:
      description: Profile for diagnostics on the container service VMs.
      properties:
        enabled:
          description: Whether the VM diagnostic agent is provisioned on the VM.
          title: enabled
          type: boolean
        storageUri:
          description: The URI of the storage account where diagnostics are stored.
          readOnly: true
          title: storageUri
          type: string
      required:
      - enabled
      title: ContainerServiceVMDiagnostics
      type: object
    ContainerServiceVMSize:
      description: Size of agent VMs.
      enum:
      - Standard_A1
      - Standard_A10
      - Standard_A11
      - Standard_A1_v2
      - Standard_A2
      - Standard_A2_v2
      - Standard_A2m_v2
      - Standard_A3
      - Standard_A4
      - Standard_A4_v2
      - Standard_A4m_v2
      - Standard_A5
      - Standard_A6
      - Standard_A7
      - Standard_A8
      - Standard_A8_v2
      - Standard_A8m_v2
      - Standard_A9
      - Standard_B2ms
      - Standard_B2s
      - Standard_B4ms
      - Standard_B8ms
      - Standard_D1
      - Standard_D11
      - Standard_D11_v2
      - Standard_D11_v2_Promo
      - Standard_D12
      - Standard_D12_v2
      - Standard_D12_v2_Promo
      - Standard_D13
      - Standard_D13_v2
      - Standard_D13_v2_Promo
      - Standard_D14
      - Standard_D14_v2
      - Standard_D14_v2_Promo
      - Standard_D15_v2
      - Standard_D16_v3
      - Standard_D16s_v3
      - Standard_D1_v2
      - Standard_D2
      - Standard_D2_v2
      - Standard_D2_v2_Promo
      - Standard_D2_v3
      - Standard_D2s_v3
      - Standard_D3
      - Standard_D32_v3
      - Standard_D32s_v3
      - Standard_D3_v2
      - Standard_D3_v2_Promo
      - Standard_D4
      - Standard_D4_v2
      - Standard_D4_v2_Promo
      - Standard_D4_v3
      - Standard_D4s_v3
      - Standard_D5_v2
      - Standard_D5_v2_Promo
      - Standard_D64_v3
      - Standard_D64s_v3
      - Standard_D8_v3
      - Standard_D8s_v3
      - Standard_DS1
      - Standard_DS11
      - Standard_DS11_v2
      - Standard_DS11_v2_Promo
      - Standard_DS12
      - Standard_DS12_v2
      - Standard_DS12_v2_Promo
      - Standard_DS13
      - Standard_DS13-2_v2
      - Standard_DS13-4_v2
      - Standard_DS13_v2
      - Standard_DS13_v2_Promo
      - Standard_DS14
      - Standard_DS14-4_v2
      - Standard_DS14-8_v2
      - Standard_DS14_v2
      - Standard_DS14_v2_Promo
      - Standard_DS15_v2
      - Standard_DS1_v2
      - Standard_DS2
      - Standard_DS2_v2
      - Standard_DS2_v2_Promo
      - Standard_DS3
      - Standard_DS3_v2
      - Standard_DS3_v2_Promo
      - Standard_DS4
      - Standard_DS4_v2
      - Standard_DS4_v2_Promo
      - Standard_DS5_v2
      - Standard_DS5_v2_Promo
      - Standard_E16_v3
      - Standard_E16s_v3
      - Standard_E2_v3
      - Standard_E2s_v3
      - Standard_E32-16s_v3
      - Standard_E32-8s_v3
      - Standard_E32_v3
      - Standard_E32s_v3
      - Standard_E4_v3
      - Standard_E4s_v3
      - Standard_E64-16s_v3
      - Standard_E64-32s_v3
      - Standard_E64_v3
      - Standard_E64s_v3
      - Standard_E8_v3
      - Standard_E8s_v3
      - Standard_F1
      - Standard_F16
      - Standard_F16s
      - Standard_F16s_v2
      - Standard_F1s
      - Standard_F2
      - Standard_F2s
      - Standard_F2s_v2
      - Standard_F32s_v2
      - Standard_F4
      - Standard_F4s
      - Standard_F4s_v2
      - Standard_F64s_v2
      - Standard_F72s_v2
      - Standard_F8
      - Standard_F8s
      - Standard_F8s_v2
      - Standard_G1
      - Standard_G2
      - Standard_G3
      - Standard_G4
      - Standard_G5
      - Standard_GS1
      - Standard_GS2
      - Standard_GS3
      - Standard_GS4
      - Standard_GS4-4
      - Standard_GS4-8
      - Standard_GS5
      - Standard_GS5-16
      - Standard_GS5-8
      - Standard_H16
      - Standard_H16m
      - Standard_H16mr
      - Standard_H16r
      - Standard_H8
      - Standard_H8m
      - Standard_L16s
      - Standard_L32s
      - Standard_L4s
      - Standard_L8s
      - Standard_M128-32ms
      - Standard_M128-64ms
      - Standard_M128ms
      - Standard_M128s
      - Standard_M64-16ms
      - Standard_M64-32ms
      - Standard_M64ms
      - Standard_M64s
      - Standard_NC12
      - Standard_NC12s_v2
      - Standard_NC12s_v3
      - Standard_NC24
      - Standard_NC24r
      - Standard_NC24rs_v2
      - Standard_NC24rs_v3
      - Standard_NC24s_v2
      - Standard_NC24s_v3
      - Standard_NC6
      - Standard_NC6s_v2
      - Standard_NC6s_v3
      - Standard_ND12s
      - Standard_ND24rs
      - Standard_ND24s
      - Standard_ND6s
      - Standard_NV12
      - Standard_NV24
      - Standard_NV6
      title: ContainerServiceVMSize
      type: string
      x-ms-enum:
        modelAsString: true
        name: ContainerServiceVMSizeTypes
    ContainerServiceVnetSubnetID:
      description: VNet SubnetID specifies the VNet's subnet identifier.
      title: ContainerServiceVnetSubnetID
      type: string
    ContainerServiceWindowsProfile:
      description: Profile for Windows VMs in the container service cluster.
      properties:
        adminPassword:
          description: The administrator password to use for Windows VMs.
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%\\^&\\*\\(\\)])[a-zA-Z\\d!@#$%\\\
            ^&\\*\\(\\)]{12,123}$"
          type: string
        adminUsername:
          description: The administrator username to use for Windows VMs.
          pattern: "^[a-zA-Z0-9]+([._]?[a-zA-Z0-9]+)*$"
          type: string
      required:
      - adminPassword
      - adminUsername
      type: object
    CredentialResult:
      description: The credential result response.
      example:
        name: name
        value: value
      properties:
        name:
          description: The name of the credential.
          readOnly: true
          title: name
          type: string
        value:
          description: Base64-encoded Kubernetes configuration file.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          readOnly: true
          title: value
          type: string
      title: CredentialResult
      type: object
    CredentialResults:
      description: The list of credential result response.
      example:
        kubeconfigs:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        kubeconfigs:
          description: Base64-encoded Kubernetes configuration file.
          items:
            $ref: '#/components/schemas/CredentialResult'
          readOnly: true
          title: kubeconfigs
          type: array
      title: CredentialResults
      type: object
    ManagedCluster:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - properties:
          properties:
            $ref: '#/components/schemas/ManagedClusterProperties'
        type: object
      description: Managed cluster.
      example:
        name: name
        location: location
        id: id
        type: type
        properties:
          agentPoolProfiles:
          - osDiskSizeGB: 576
            count: 8
            name: name
            osType: Linux
            vnetSubnetID: vnetSubnetID
            minCount: 5
            enableAutoScaling: true
            vmSize: Standard_A1
            maxPods: 1
            type: VirtualMachineScaleSets
            maxCount: 6
          - osDiskSizeGB: 576
            count: 8
            name: name
            osType: Linux
            vnetSubnetID: vnetSubnetID
            minCount: 5
            enableAutoScaling: true
            vmSize: Standard_A1
            maxPods: 1
            type: VirtualMachineScaleSets
            maxCount: 6
          enableRBAC: true
          fqdn: fqdn
          addonProfiles: "{}"
          servicePrincipalProfile:
            clientId: clientId
            secret: secret
          dnsPrefix: dnsPrefix
          networkProfile:
            networkPlugin: kubenet
            dockerBridgeCidr: 172.17.0.1/16
            dnsServiceIP: 10.0.0.10
            networkPolicy: calico
            podCidr: 10.244.0.0/16
            serviceCidr: 10.0.0.0/16
          aadProfile:
            serverAppSecret: serverAppSecret
            tenantID: tenantID
            serverAppID: serverAppID
            clientAppID: clientAppID
          provisioningState: provisioningState
          linuxProfile:
            adminUsername: adminUsername
            ssh:
              publicKeys:
              - keyData: keyData
              - keyData: keyData
          nodeResourceGroup: nodeResourceGroup
          kubernetesVersion: kubernetesVersion
        tags:
          key: tags
      title: ManagedCluster
    ManagedClusterAADProfile:
      description: AADProfile specifies attributes for Azure Active Directory integration.
      example:
        serverAppSecret: serverAppSecret
        tenantID: tenantID
        serverAppID: serverAppID
        clientAppID: clientAppID
      properties:
        clientAppID:
          description: The client AAD application ID.
          title: clientAppID
          type: string
        serverAppID:
          description: The server AAD application ID.
          title: serverAppID
          type: string
        serverAppSecret:
          description: The server AAD application secret.
          title: serverAppSecret
          type: string
        tenantID:
          description: "The AAD tenant ID to use for authentication. If not specified,\
            \ will use the tenant of the deployment subscription."
          title: tenantID
          type: string
      required:
      - clientAppID
      - serverAppID
      title: ManagedClusterAADProfile
      type: object
    ManagedClusterAccessProfile:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - properties:
          properties:
            $ref: '#/components/schemas/AccessProfile'
        type: object
      description: Managed cluster Access Profile.
      example:
        name: name
        location: location
        id: id
        type: type
        properties:
          kubeConfig: kubeConfig
        tags:
          key: tags
      title: ManagedClusterAccessProfile
      x-ms-azure-resource: false
    ManagedClusterAddonProfile:
      description: A Kubernetes add-on profile for a managed cluster.
      properties:
        config:
          description: Key-value pairs for configuring an add-on.
          type: object
        enabled:
          description: Whether the add-on is enabled or not.
          type: boolean
      required:
      - enabled
      type: object
    ManagedClusterAgentPoolProfile:
      description: Profile for the container service agent pool.
      example:
        osDiskSizeGB: 576
        count: 8
        name: name
        osType: Linux
        vnetSubnetID: vnetSubnetID
        minCount: 5
        enableAutoScaling: true
        vmSize: Standard_A1
        maxPods: 1
        type: VirtualMachineScaleSets
        maxCount: 6
      properties:
        count:
          default: 1
          description: 'Number of agents (VMs) to host docker containers. Allowed
            values must be in the range of 1 to 100 (inclusive). The default value
            is 1. '
          format: int32
          maximum: 100
          minimum: 1
          title: count
          type: integer
        enableAutoScaling:
          description: Whether to enable auto-scaler
          title: enableAutoScaling
          type: boolean
        maxCount:
          description: Maximum number of nodes for auto-scaling
          format: int32
          title: maxCount
          type: integer
        maxPods:
          description: Maximum number of pods that can run on a node.
          format: int32
          title: maxPods
          type: integer
        minCount:
          description: Minimum number of nodes for auto-scaling
          format: int32
          title: minCount
          type: integer
        name:
          description: Unique name of the agent pool profile in the context of the
            subscription and resource group.
          title: name
          type: string
        osDiskSizeGB:
          description: "OS Disk Size in GB to be used to specify the disk size for\
            \ every machine in this master/agent pool. If you specify 0, it will apply\
            \ the default osDisk size according to the vmSize specified."
          format: int32
          maximum: 1023
          minimum: 0
          title: ContainerServiceOSDisk
          type: integer
        osType:
          $ref: '#/components/schemas/OSType'
        type:
          $ref: '#/components/schemas/AgentPoolType'
        vmSize:
          $ref: '#/components/schemas/ContainerServiceVMSize'
        vnetSubnetID:
          description: VNet SubnetID specifies the VNet's subnet identifier.
          title: ContainerServiceVnetSubnetID
          type: string
      required:
      - count
      - name
      - vmSize
      title: ManagedClusterAgentPoolProfile
      type: object
    ManagedClusterListResult:
      description: The response from the List Managed Clusters operation.
      example:
        value:
        - name: name
          location: location
          id: id
          type: type
          properties:
            agentPoolProfiles:
            - osDiskSizeGB: 576
              count: 8
              name: name
              osType: Linux
              vnetSubnetID: vnetSubnetID
              minCount: 5
              enableAutoScaling: true
              vmSize: Standard_A1
              maxPods: 1
              type: VirtualMachineScaleSets
              maxCount: 6
            - osDiskSizeGB: 576
              count: 8
              name: name
              osType: Linux
              vnetSubnetID: vnetSubnetID
              minCount: 5
              enableAutoScaling: true
              vmSize: Standard_A1
              maxPods: 1
              type: VirtualMachineScaleSets
              maxCount: 6
            enableRBAC: true
            fqdn: fqdn
            addonProfiles: "{}"
            servicePrincipalProfile:
              clientId: clientId
              secret: secret
            dnsPrefix: dnsPrefix
            networkProfile:
              networkPlugin: kubenet
              dockerBridgeCidr: 172.17.0.1/16
              dnsServiceIP: 10.0.0.10
              networkPolicy: calico
              podCidr: 10.244.0.0/16
              serviceCidr: 10.0.0.0/16
            aadProfile:
              serverAppSecret: serverAppSecret
              tenantID: tenantID
              serverAppID: serverAppID
              clientAppID: clientAppID
            provisioningState: provisioningState
            linuxProfile:
              adminUsername: adminUsername
              ssh:
                publicKeys:
                - keyData: keyData
                - keyData: keyData
            nodeResourceGroup: nodeResourceGroup
            kubernetesVersion: kubernetesVersion
          tags:
            key: tags
        - name: name
          location: location
          id: id
          type: type
          properties:
            agentPoolProfiles:
            - osDiskSizeGB: 576
              count: 8
              name: name
              osType: Linux
              vnetSubnetID: vnetSubnetID
              minCount: 5
              enableAutoScaling: true
              vmSize: Standard_A1
              maxPods: 1
              type: VirtualMachineScaleSets
              maxCount: 6
            - osDiskSizeGB: 576
              count: 8
              name: name
              osType: Linux
              vnetSubnetID: vnetSubnetID
              minCount: 5
              enableAutoScaling: true
              vmSize: Standard_A1
              maxPods: 1
              type: VirtualMachineScaleSets
              maxCount: 6
            enableRBAC: true
            fqdn: fqdn
            addonProfiles: "{}"
            servicePrincipalProfile:
              clientId: clientId
              secret: secret
            dnsPrefix: dnsPrefix
            networkProfile:
              networkPlugin: kubenet
              dockerBridgeCidr: 172.17.0.1/16
              dnsServiceIP: 10.0.0.10
              networkPolicy: calico
              podCidr: 10.244.0.0/16
              serviceCidr: 10.0.0.0/16
            aadProfile:
              serverAppSecret: serverAppSecret
              tenantID: tenantID
              serverAppID: serverAppID
              clientAppID: clientAppID
            provisioningState: provisioningState
            linuxProfile:
              adminUsername: adminUsername
              ssh:
                publicKeys:
                - keyData: keyData
                - keyData: keyData
            nodeResourceGroup: nodeResourceGroup
            kubernetesVersion: kubernetesVersion
          tags:
            key: tags
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to get the next set of managed cluster results.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: The list of managed clusters.
          items:
            $ref: '#/components/schemas/ManagedCluster'
          title: value
          type: array
      title: ManagedClusterListResult
      type: object
    ManagedClusterPoolUpgradeProfile:
      description: The list of available upgrade versions.
      example:
        name: name
        osType: Linux
        upgrades:
        - upgrades
        - upgrades
        kubernetesVersion: kubernetesVersion
      properties:
        kubernetesVersion:
          description: "Kubernetes version (major, minor, patch)."
          title: kubernetesVersion
          type: string
        name:
          description: Pool name.
          title: name
          type: string
        osType:
          $ref: '#/components/schemas/OSType'
        upgrades:
          description: List of orchestrator types and versions available for upgrade.
          items:
            type: string
          title: upgrades
          type: array
      required:
      - kubernetesVersion
      - osType
      title: ManagedClusterPoolUpgradeProfile
      type: object
    ManagedClusterProperties:
      description: Properties of the managed cluster.
      example:
        agentPoolProfiles:
        - osDiskSizeGB: 576
          count: 8
          name: name
          osType: Linux
          vnetSubnetID: vnetSubnetID
          minCount: 5
          enableAutoScaling: true
          vmSize: Standard_A1
          maxPods: 1
          type: VirtualMachineScaleSets
          maxCount: 6
        - osDiskSizeGB: 576
          count: 8
          name: name
          osType: Linux
          vnetSubnetID: vnetSubnetID
          minCount: 5
          enableAutoScaling: true
          vmSize: Standard_A1
          maxPods: 1
          type: VirtualMachineScaleSets
          maxCount: 6
        enableRBAC: true
        fqdn: fqdn
        addonProfiles: "{}"
        servicePrincipalProfile:
          clientId: clientId
          secret: secret
        dnsPrefix: dnsPrefix
        networkProfile:
          networkPlugin: kubenet
          dockerBridgeCidr: 172.17.0.1/16
          dnsServiceIP: 10.0.0.10
          networkPolicy: calico
          podCidr: 10.244.0.0/16
          serviceCidr: 10.0.0.0/16
        aadProfile:
          serverAppSecret: serverAppSecret
          tenantID: tenantID
          serverAppID: serverAppID
          clientAppID: clientAppID
        provisioningState: provisioningState
        linuxProfile:
          adminUsername: adminUsername
          ssh:
            publicKeys:
            - keyData: keyData
            - keyData: keyData
        nodeResourceGroup: nodeResourceGroup
        kubernetesVersion: kubernetesVersion
      properties:
        aadProfile:
          $ref: '#/components/schemas/ManagedClusterAADProfile'
        addonProfiles:
          description: Profile of managed cluster add-on.
          title: addonProfiles
          type: object
        agentPoolProfiles:
          description: Properties of the agent pool.
          items:
            $ref: '#/components/schemas/ManagedClusterAgentPoolProfile'
          title: agentPoolProfiles
          type: array
        dnsPrefix:
          description: DNS prefix specified when creating the managed cluster.
          title: dnsPrefix
          type: string
        enableRBAC:
          description: Whether to enable Kubernetes Role-Based Access Control.
          title: enableRBAC
          type: boolean
        fqdn:
          description: FQDN for the master pool.
          readOnly: true
          title: fqdn
          type: string
        kubernetesVersion:
          description: Version of Kubernetes specified when creating the managed cluster.
          title: kubernetesVersion
          type: string
        linuxProfile:
          $ref: '#/components/schemas/ContainerServiceLinuxProfile'
        networkProfile:
          $ref: '#/components/schemas/ContainerServiceNetworkProfile'
        nodeResourceGroup:
          description: Name of the resource group containing agent pool nodes.
          readOnly: true
          title: nodeResourceGroup
          type: string
        provisioningState:
          description: "The current deployment or provisioning state, which only appears\
            \ in the response."
          readOnly: true
          title: provisioningState
          type: string
        servicePrincipalProfile:
          $ref: '#/components/schemas/ManagedClusterServicePrincipalProfile'
      title: ManagedClusterProperties
      type: object
    ManagedClusterServicePrincipalProfile:
      description: Information about a service principal identity for the cluster
        to use for manipulating Azure APIs.
      example:
        clientId: clientId
        secret: secret
      properties:
        clientId:
          description: The ID for the service principal.
          title: clientId
          type: string
        secret:
          description: The secret password associated with the service principal in
            plain text.
          title: secret
          type: string
      required:
      - clientId
      title: ManagedClusterServicePrincipalProfile
      type: object
    ManagedClusterUpgradeProfile:
      description: The list of available upgrades for compute pools.
      example:
        name: name
        id: id
        type: type
        properties:
          agentPoolProfiles:
          - name: name
            osType: Linux
            upgrades:
            - upgrades
            - upgrades
            kubernetesVersion: kubernetesVersion
          - name: name
            osType: Linux
            upgrades:
            - upgrades
            - upgrades
            kubernetesVersion: kubernetesVersion
          controlPlaneProfile:
            name: name
            osType: Linux
            upgrades:
            - upgrades
            - upgrades
            kubernetesVersion: kubernetesVersion
      properties:
        id:
          description: Id of upgrade profile.
          readOnly: true
          title: id
          type: string
        name:
          description: Name of upgrade profile.
          readOnly: true
          title: name
          type: string
        properties:
          $ref: '#/components/schemas/ManagedClusterUpgradeProfileProperties'
        type:
          description: Type of upgrade profile.
          readOnly: true
          title: type
          type: string
      required:
      - properties
      title: ManagedClusterUpgradeProfile
      type: object
    ManagedClusterUpgradeProfileProperties:
      description: Control plane and agent pool upgrade profiles.
      example:
        agentPoolProfiles:
        - name: name
          osType: Linux
          upgrades:
          - upgrades
          - upgrades
          kubernetesVersion: kubernetesVersion
        - name: name
          osType: Linux
          upgrades:
          - upgrades
          - upgrades
          kubernetesVersion: kubernetesVersion
        controlPlaneProfile:
          name: name
          osType: Linux
          upgrades:
          - upgrades
          - upgrades
          kubernetesVersion: kubernetesVersion
      properties:
        agentPoolProfiles:
          description: The list of available upgrade versions for agent pools.
          items:
            $ref: '#/components/schemas/ManagedClusterPoolUpgradeProfile'
          title: agentPoolProfiles
          type: array
        controlPlaneProfile:
          $ref: '#/components/schemas/ManagedClusterPoolUpgradeProfile'
      required:
      - agentPoolProfiles
      - controlPlaneProfile
      title: ManagedClusterUpgradeProfileProperties
      type: object
    OSType:
      default: Linux
      description: OsType to be used to specify os type. Choose from Linux and Windows.
        Default to Linux.
      enum:
      - Linux
      - Windows
      title: OSType
      type: string
      x-ms-enum:
        modelAsString: true
        name: OSType
    OperationListResult:
      description: The List Compute Operation operation response.
      example:
        value:
        - display:
            provider: provider
            resource: resource
            description: description
            operation: operation
          origin: origin
          name: name
        - display:
            provider: provider
            resource: resource
            description: description
            operation: operation
          origin: origin
          name: name
      properties:
        value:
          description: The list of compute operations
          items:
            $ref: '#/components/schemas/OperationValue'
          readOnly: true
          title: value
          type: array
      title: OperationListResult
      type: object
    OperationValue:
      description: Describes the properties of a Compute Operation value.
      example:
        display:
          provider: provider
          resource: resource
          description: description
          operation: operation
        origin: origin
        name: name
      properties:
        display:
          $ref: '#/components/schemas/OperationValueDisplay'
        name:
          description: The name of the compute operation.
          readOnly: true
          title: name
          type: string
        origin:
          description: The origin of the compute operation.
          readOnly: true
          title: origin
          type: string
      title: OperationValue
      type: object
    OperationValueDisplay:
      description: Describes the properties of a Compute Operation Value Display.
      example:
        provider: provider
        resource: resource
        description: description
        operation: operation
      properties:
        description:
          description: The description of the operation.
          readOnly: true
          title: description
          type: string
        operation:
          description: The display name of the compute operation.
          readOnly: true
          title: operation
          type: string
        provider:
          description: The resource provider for the operation.
          readOnly: true
          title: provider
          type: string
        resource:
          description: The display name of the resource the operation applies to.
          readOnly: true
          title: resource
          type: string
      title: OperationValueDisplay
      type: object
    OrchestratorProfile:
      description: Contains information about orchestrator.
      properties:
        orchestratorType:
          description: Orchestrator type.
          type: string
        orchestratorVersion:
          description: "Orchestrator version (major, minor, patch)."
          type: string
      required:
      - orchestratorType
      - orchestratorVersion
      type: object
    Resource:
      description: The Resource model definition.
      properties:
        id:
          description: Resource Id
          readOnly: true
          title: id
          type: string
        location:
          description: Resource location
          title: location
          type: string
          x-ms-mutability:
          - read
          - create
        name:
          description: Resource name
          readOnly: true
          title: name
          type: string
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          title: tags
          type: object
        type:
          description: Resource type
          readOnly: true
          title: type
          type: string
      required:
      - location
      title: Resource
      type: object
      x-ms-azure-resource: true
    TagsObject:
      description: Tags object for patch operations.
      example:
        tags:
          key: tags
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          title: tags
          type: object
      title: TagsObject
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_azure_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_azure_auth
x-original-swagger-version: "2.0"
