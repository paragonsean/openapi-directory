/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2020-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedClusterAddonProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedClusterAddonProfile::OAIManagedClusterAddonProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedClusterAddonProfile::OAIManagedClusterAddonProfile() {
    this->initializeModel();
}

OAIManagedClusterAddonProfile::~OAIManagedClusterAddonProfile() {}

void OAIManagedClusterAddonProfile::initializeModel() {

    m_config_isSet = false;
    m_config_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_identity_isSet = false;
    m_identity_isValid = false;
}

void OAIManagedClusterAddonProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedClusterAddonProfile::fromJsonObject(QJsonObject json) {

    m_config_isValid = ::OpenAPI::fromJsonValue(m_config, json[QString("config")]);
    m_config_isSet = !json[QString("config")].isNull() && m_config_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_identity_isValid = ::OpenAPI::fromJsonValue(m_identity, json[QString("identity")]);
    m_identity_isSet = !json[QString("identity")].isNull() && m_identity_isValid;
}

QString OAIManagedClusterAddonProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedClusterAddonProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_config_isSet) {
        obj.insert(QString("config"), ::OpenAPI::toJsonValue(m_config));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_identity.isSet()) {
        obj.insert(QString("identity"), ::OpenAPI::toJsonValue(m_identity));
    }
    return obj;
}

OAIObject OAIManagedClusterAddonProfile::getConfig() const {
    return m_config;
}
void OAIManagedClusterAddonProfile::setConfig(const OAIObject &config) {
    m_config = config;
    m_config_isSet = true;
}

bool OAIManagedClusterAddonProfile::is_config_Set() const{
    return m_config_isSet;
}

bool OAIManagedClusterAddonProfile::is_config_Valid() const{
    return m_config_isValid;
}

bool OAIManagedClusterAddonProfile::isEnabled() const {
    return m_enabled;
}
void OAIManagedClusterAddonProfile::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIManagedClusterAddonProfile::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIManagedClusterAddonProfile::is_enabled_Valid() const{
    return m_enabled_isValid;
}

OAIUserAssignedIdentity OAIManagedClusterAddonProfile::getIdentity() const {
    return m_identity;
}
void OAIManagedClusterAddonProfile::setIdentity(const OAIUserAssignedIdentity &identity) {
    m_identity = identity;
    m_identity_isSet = true;
}

bool OAIManagedClusterAddonProfile::is_identity_Set() const{
    return m_identity_isSet;
}

bool OAIManagedClusterAddonProfile::is_identity_Valid() const{
    return m_identity_isValid;
}

bool OAIManagedClusterAddonProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_config_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identity.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedClusterAddonProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enabled_isValid && true;
}

} // namespace OpenAPI
