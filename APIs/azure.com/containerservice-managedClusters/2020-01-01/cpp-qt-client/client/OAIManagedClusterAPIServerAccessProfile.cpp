/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2020-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedClusterAPIServerAccessProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedClusterAPIServerAccessProfile::OAIManagedClusterAPIServerAccessProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedClusterAPIServerAccessProfile::OAIManagedClusterAPIServerAccessProfile() {
    this->initializeModel();
}

OAIManagedClusterAPIServerAccessProfile::~OAIManagedClusterAPIServerAccessProfile() {}

void OAIManagedClusterAPIServerAccessProfile::initializeModel() {

    m_authorized_ip_ranges_isSet = false;
    m_authorized_ip_ranges_isValid = false;

    m_enable_private_cluster_isSet = false;
    m_enable_private_cluster_isValid = false;
}

void OAIManagedClusterAPIServerAccessProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedClusterAPIServerAccessProfile::fromJsonObject(QJsonObject json) {

    m_authorized_ip_ranges_isValid = ::OpenAPI::fromJsonValue(m_authorized_ip_ranges, json[QString("authorizedIPRanges")]);
    m_authorized_ip_ranges_isSet = !json[QString("authorizedIPRanges")].isNull() && m_authorized_ip_ranges_isValid;

    m_enable_private_cluster_isValid = ::OpenAPI::fromJsonValue(m_enable_private_cluster, json[QString("enablePrivateCluster")]);
    m_enable_private_cluster_isSet = !json[QString("enablePrivateCluster")].isNull() && m_enable_private_cluster_isValid;
}

QString OAIManagedClusterAPIServerAccessProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedClusterAPIServerAccessProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_authorized_ip_ranges.size() > 0) {
        obj.insert(QString("authorizedIPRanges"), ::OpenAPI::toJsonValue(m_authorized_ip_ranges));
    }
    if (m_enable_private_cluster_isSet) {
        obj.insert(QString("enablePrivateCluster"), ::OpenAPI::toJsonValue(m_enable_private_cluster));
    }
    return obj;
}

QList<QString> OAIManagedClusterAPIServerAccessProfile::getAuthorizedIpRanges() const {
    return m_authorized_ip_ranges;
}
void OAIManagedClusterAPIServerAccessProfile::setAuthorizedIpRanges(const QList<QString> &authorized_ip_ranges) {
    m_authorized_ip_ranges = authorized_ip_ranges;
    m_authorized_ip_ranges_isSet = true;
}

bool OAIManagedClusterAPIServerAccessProfile::is_authorized_ip_ranges_Set() const{
    return m_authorized_ip_ranges_isSet;
}

bool OAIManagedClusterAPIServerAccessProfile::is_authorized_ip_ranges_Valid() const{
    return m_authorized_ip_ranges_isValid;
}

bool OAIManagedClusterAPIServerAccessProfile::isEnablePrivateCluster() const {
    return m_enable_private_cluster;
}
void OAIManagedClusterAPIServerAccessProfile::setEnablePrivateCluster(const bool &enable_private_cluster) {
    m_enable_private_cluster = enable_private_cluster;
    m_enable_private_cluster_isSet = true;
}

bool OAIManagedClusterAPIServerAccessProfile::is_enable_private_cluster_Set() const{
    return m_enable_private_cluster_isSet;
}

bool OAIManagedClusterAPIServerAccessProfile::is_enable_private_cluster_Valid() const{
    return m_enable_private_cluster_isValid;
}

bool OAIManagedClusterAPIServerAccessProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_authorized_ip_ranges.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_private_cluster_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedClusterAPIServerAccessProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
