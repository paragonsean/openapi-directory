/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2020-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAgentPoolUpgradeProfileProperties_upgrades_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAgentPoolUpgradeProfileProperties_upgrades_inner::OAIAgentPoolUpgradeProfileProperties_upgrades_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAgentPoolUpgradeProfileProperties_upgrades_inner::OAIAgentPoolUpgradeProfileProperties_upgrades_inner() {
    this->initializeModel();
}

OAIAgentPoolUpgradeProfileProperties_upgrades_inner::~OAIAgentPoolUpgradeProfileProperties_upgrades_inner() {}

void OAIAgentPoolUpgradeProfileProperties_upgrades_inner::initializeModel() {

    m_is_preview_isSet = false;
    m_is_preview_isValid = false;

    m_kubernetes_version_isSet = false;
    m_kubernetes_version_isValid = false;
}

void OAIAgentPoolUpgradeProfileProperties_upgrades_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAgentPoolUpgradeProfileProperties_upgrades_inner::fromJsonObject(QJsonObject json) {

    m_is_preview_isValid = ::OpenAPI::fromJsonValue(m_is_preview, json[QString("isPreview")]);
    m_is_preview_isSet = !json[QString("isPreview")].isNull() && m_is_preview_isValid;

    m_kubernetes_version_isValid = ::OpenAPI::fromJsonValue(m_kubernetes_version, json[QString("kubernetesVersion")]);
    m_kubernetes_version_isSet = !json[QString("kubernetesVersion")].isNull() && m_kubernetes_version_isValid;
}

QString OAIAgentPoolUpgradeProfileProperties_upgrades_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAgentPoolUpgradeProfileProperties_upgrades_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_is_preview_isSet) {
        obj.insert(QString("isPreview"), ::OpenAPI::toJsonValue(m_is_preview));
    }
    if (m_kubernetes_version_isSet) {
        obj.insert(QString("kubernetesVersion"), ::OpenAPI::toJsonValue(m_kubernetes_version));
    }
    return obj;
}

bool OAIAgentPoolUpgradeProfileProperties_upgrades_inner::isIsPreview() const {
    return m_is_preview;
}
void OAIAgentPoolUpgradeProfileProperties_upgrades_inner::setIsPreview(const bool &is_preview) {
    m_is_preview = is_preview;
    m_is_preview_isSet = true;
}

bool OAIAgentPoolUpgradeProfileProperties_upgrades_inner::is_is_preview_Set() const{
    return m_is_preview_isSet;
}

bool OAIAgentPoolUpgradeProfileProperties_upgrades_inner::is_is_preview_Valid() const{
    return m_is_preview_isValid;
}

QString OAIAgentPoolUpgradeProfileProperties_upgrades_inner::getKubernetesVersion() const {
    return m_kubernetes_version;
}
void OAIAgentPoolUpgradeProfileProperties_upgrades_inner::setKubernetesVersion(const QString &kubernetes_version) {
    m_kubernetes_version = kubernetes_version;
    m_kubernetes_version_isSet = true;
}

bool OAIAgentPoolUpgradeProfileProperties_upgrades_inner::is_kubernetes_version_Set() const{
    return m_kubernetes_version_isSet;
}

bool OAIAgentPoolUpgradeProfileProperties_upgrades_inner::is_kubernetes_version_Valid() const{
    return m_kubernetes_version_isValid;
}

bool OAIAgentPoolUpgradeProfileProperties_upgrades_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_preview_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kubernetes_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAgentPoolUpgradeProfileProperties_upgrades_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
