# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_reference import ResourceReference
from openapi_server import util


class ManagedClusterLoadBalancerProfileOutboundIPs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, public_ips: List[ResourceReference]=None):
        """ManagedClusterLoadBalancerProfileOutboundIPs - a model defined in OpenAPI

        :param public_ips: The public_ips of this ManagedClusterLoadBalancerProfileOutboundIPs.
        """
        self.openapi_types = {
            'public_ips': List[ResourceReference]
        }

        self.attribute_map = {
            'public_ips': 'publicIPs'
        }

        self._public_ips = public_ips

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedClusterLoadBalancerProfileOutboundIPs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedClusterLoadBalancerProfile_outboundIPs of this ManagedClusterLoadBalancerProfileOutboundIPs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def public_ips(self):
        """Gets the public_ips of this ManagedClusterLoadBalancerProfileOutboundIPs.

        A list of public IP resources.

        :return: The public_ips of this ManagedClusterLoadBalancerProfileOutboundIPs.
        :rtype: List[ResourceReference]
        """
        return self._public_ips

    @public_ips.setter
    def public_ips(self, public_ips):
        """Sets the public_ips of this ManagedClusterLoadBalancerProfileOutboundIPs.

        A list of public IP resources.

        :param public_ips: The public_ips of this ManagedClusterLoadBalancerProfileOutboundIPs.
        :type public_ips: List[ResourceReference]
        """

        self._public_ips = public_ips
