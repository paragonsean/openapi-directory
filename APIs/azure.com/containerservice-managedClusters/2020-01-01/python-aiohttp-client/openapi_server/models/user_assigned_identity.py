# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserAssignedIdentity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, object_id: str=None, resource_id: str=None):
        """UserAssignedIdentity - a model defined in OpenAPI

        :param client_id: The client_id of this UserAssignedIdentity.
        :param object_id: The object_id of this UserAssignedIdentity.
        :param resource_id: The resource_id of this UserAssignedIdentity.
        """
        self.openapi_types = {
            'client_id': str,
            'object_id': str,
            'resource_id': str
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'object_id': 'objectId',
            'resource_id': 'resourceId'
        }

        self._client_id = client_id
        self._object_id = object_id
        self._resource_id = resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserAssignedIdentity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserAssignedIdentity of this UserAssignedIdentity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this UserAssignedIdentity.

        The client id of the user assigned identity.

        :return: The client_id of this UserAssignedIdentity.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this UserAssignedIdentity.

        The client id of the user assigned identity.

        :param client_id: The client_id of this UserAssignedIdentity.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def object_id(self):
        """Gets the object_id of this UserAssignedIdentity.

        The object id of the user assigned identity.

        :return: The object_id of this UserAssignedIdentity.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this UserAssignedIdentity.

        The object id of the user assigned identity.

        :param object_id: The object_id of this UserAssignedIdentity.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def resource_id(self):
        """Gets the resource_id of this UserAssignedIdentity.

        The resource id of the user assigned identity.

        :return: The resource_id of this UserAssignedIdentity.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this UserAssignedIdentity.

        The resource id of the user assigned identity.

        :param resource_id: The resource_id of this UserAssignedIdentity.
        :type resource_id: str
        """

        self._resource_id = resource_id
