/*
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2020-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ContainerServiceLinuxProfile;
import org.openapitools.client.model.ContainerServiceNetworkProfile;
import org.openapitools.client.model.ManagedClusterAADProfile;
import org.openapitools.client.model.ManagedClusterAPIServerAccessProfile;
import org.openapitools.client.model.ManagedClusterAgentPoolProfile;
import org.openapitools.client.model.ManagedClusterServicePrincipalProfile;
import org.openapitools.client.model.ManagedClusterWindowsProfile;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Properties of the managed cluster.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:05:39.072658-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ManagedClusterProperties {
  public static final String SERIALIZED_NAME_AAD_PROFILE = "aadProfile";
  @SerializedName(SERIALIZED_NAME_AAD_PROFILE)
  private ManagedClusterAADProfile aadProfile;

  public static final String SERIALIZED_NAME_ADDON_PROFILES = "addonProfiles";
  @SerializedName(SERIALIZED_NAME_ADDON_PROFILES)
  private Object addonProfiles;

  public static final String SERIALIZED_NAME_AGENT_POOL_PROFILES = "agentPoolProfiles";
  @SerializedName(SERIALIZED_NAME_AGENT_POOL_PROFILES)
  private List<ManagedClusterAgentPoolProfile> agentPoolProfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_API_SERVER_ACCESS_PROFILE = "apiServerAccessProfile";
  @SerializedName(SERIALIZED_NAME_API_SERVER_ACCESS_PROFILE)
  private ManagedClusterAPIServerAccessProfile apiServerAccessProfile;

  public static final String SERIALIZED_NAME_DISK_ENCRYPTION_SET_I_D = "diskEncryptionSetID";
  @SerializedName(SERIALIZED_NAME_DISK_ENCRYPTION_SET_I_D)
  private String diskEncryptionSetID;

  public static final String SERIALIZED_NAME_DNS_PREFIX = "dnsPrefix";
  @SerializedName(SERIALIZED_NAME_DNS_PREFIX)
  private String dnsPrefix;

  public static final String SERIALIZED_NAME_ENABLE_POD_SECURITY_POLICY = "enablePodSecurityPolicy";
  @SerializedName(SERIALIZED_NAME_ENABLE_POD_SECURITY_POLICY)
  private Boolean enablePodSecurityPolicy;

  public static final String SERIALIZED_NAME_ENABLE_R_B_A_C = "enableRBAC";
  @SerializedName(SERIALIZED_NAME_ENABLE_R_B_A_C)
  private Boolean enableRBAC;

  public static final String SERIALIZED_NAME_FQDN = "fqdn";
  @SerializedName(SERIALIZED_NAME_FQDN)
  private String fqdn;

  public static final String SERIALIZED_NAME_IDENTITY_PROFILE = "identityProfile";
  @SerializedName(SERIALIZED_NAME_IDENTITY_PROFILE)
  private Object identityProfile;

  public static final String SERIALIZED_NAME_KUBERNETES_VERSION = "kubernetesVersion";
  @SerializedName(SERIALIZED_NAME_KUBERNETES_VERSION)
  private String kubernetesVersion;

  public static final String SERIALIZED_NAME_LINUX_PROFILE = "linuxProfile";
  @SerializedName(SERIALIZED_NAME_LINUX_PROFILE)
  private ContainerServiceLinuxProfile linuxProfile;

  public static final String SERIALIZED_NAME_MAX_AGENT_POOLS = "maxAgentPools";
  @SerializedName(SERIALIZED_NAME_MAX_AGENT_POOLS)
  private Integer maxAgentPools;

  public static final String SERIALIZED_NAME_NETWORK_PROFILE = "networkProfile";
  @SerializedName(SERIALIZED_NAME_NETWORK_PROFILE)
  private ContainerServiceNetworkProfile networkProfile;

  public static final String SERIALIZED_NAME_NODE_RESOURCE_GROUP = "nodeResourceGroup";
  @SerializedName(SERIALIZED_NAME_NODE_RESOURCE_GROUP)
  private String nodeResourceGroup;

  public static final String SERIALIZED_NAME_PRIVATE_F_Q_D_N = "privateFQDN";
  @SerializedName(SERIALIZED_NAME_PRIVATE_F_Q_D_N)
  private String privateFQDN;

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private String provisioningState;

  public static final String SERIALIZED_NAME_SERVICE_PRINCIPAL_PROFILE = "servicePrincipalProfile";
  @SerializedName(SERIALIZED_NAME_SERVICE_PRINCIPAL_PROFILE)
  private ManagedClusterServicePrincipalProfile servicePrincipalProfile;

  public static final String SERIALIZED_NAME_WINDOWS_PROFILE = "windowsProfile";
  @SerializedName(SERIALIZED_NAME_WINDOWS_PROFILE)
  private ManagedClusterWindowsProfile windowsProfile;

  public ManagedClusterProperties() {
  }

  public ManagedClusterProperties(
     String fqdn, 
     Integer maxAgentPools, 
     String privateFQDN, 
     String provisioningState
  ) {
    this();
    this.fqdn = fqdn;
    this.maxAgentPools = maxAgentPools;
    this.privateFQDN = privateFQDN;
    this.provisioningState = provisioningState;
  }

  public ManagedClusterProperties aadProfile(ManagedClusterAADProfile aadProfile) {
    this.aadProfile = aadProfile;
    return this;
  }

  /**
   * Get aadProfile
   * @return aadProfile
   */
  @javax.annotation.Nullable
  public ManagedClusterAADProfile getAadProfile() {
    return aadProfile;
  }

  public void setAadProfile(ManagedClusterAADProfile aadProfile) {
    this.aadProfile = aadProfile;
  }


  public ManagedClusterProperties addonProfiles(Object addonProfiles) {
    this.addonProfiles = addonProfiles;
    return this;
  }

  /**
   * Profile of managed cluster add-on.
   * @return addonProfiles
   */
  @javax.annotation.Nullable
  public Object getAddonProfiles() {
    return addonProfiles;
  }

  public void setAddonProfiles(Object addonProfiles) {
    this.addonProfiles = addonProfiles;
  }


  public ManagedClusterProperties agentPoolProfiles(List<ManagedClusterAgentPoolProfile> agentPoolProfiles) {
    this.agentPoolProfiles = agentPoolProfiles;
    return this;
  }

  public ManagedClusterProperties addAgentPoolProfilesItem(ManagedClusterAgentPoolProfile agentPoolProfilesItem) {
    if (this.agentPoolProfiles == null) {
      this.agentPoolProfiles = new ArrayList<>();
    }
    this.agentPoolProfiles.add(agentPoolProfilesItem);
    return this;
  }

  /**
   * Properties of the agent pool.
   * @return agentPoolProfiles
   */
  @javax.annotation.Nullable
  public List<ManagedClusterAgentPoolProfile> getAgentPoolProfiles() {
    return agentPoolProfiles;
  }

  public void setAgentPoolProfiles(List<ManagedClusterAgentPoolProfile> agentPoolProfiles) {
    this.agentPoolProfiles = agentPoolProfiles;
  }


  public ManagedClusterProperties apiServerAccessProfile(ManagedClusterAPIServerAccessProfile apiServerAccessProfile) {
    this.apiServerAccessProfile = apiServerAccessProfile;
    return this;
  }

  /**
   * Get apiServerAccessProfile
   * @return apiServerAccessProfile
   */
  @javax.annotation.Nullable
  public ManagedClusterAPIServerAccessProfile getApiServerAccessProfile() {
    return apiServerAccessProfile;
  }

  public void setApiServerAccessProfile(ManagedClusterAPIServerAccessProfile apiServerAccessProfile) {
    this.apiServerAccessProfile = apiServerAccessProfile;
  }


  public ManagedClusterProperties diskEncryptionSetID(String diskEncryptionSetID) {
    this.diskEncryptionSetID = diskEncryptionSetID;
    return this;
  }

  /**
   * ResourceId of the disk encryption set to use for enabling encryption at rest.
   * @return diskEncryptionSetID
   */
  @javax.annotation.Nullable
  public String getDiskEncryptionSetID() {
    return diskEncryptionSetID;
  }

  public void setDiskEncryptionSetID(String diskEncryptionSetID) {
    this.diskEncryptionSetID = diskEncryptionSetID;
  }


  public ManagedClusterProperties dnsPrefix(String dnsPrefix) {
    this.dnsPrefix = dnsPrefix;
    return this;
  }

  /**
   * DNS prefix specified when creating the managed cluster.
   * @return dnsPrefix
   */
  @javax.annotation.Nullable
  public String getDnsPrefix() {
    return dnsPrefix;
  }

  public void setDnsPrefix(String dnsPrefix) {
    this.dnsPrefix = dnsPrefix;
  }


  public ManagedClusterProperties enablePodSecurityPolicy(Boolean enablePodSecurityPolicy) {
    this.enablePodSecurityPolicy = enablePodSecurityPolicy;
    return this;
  }

  /**
   * (PREVIEW) Whether to enable Kubernetes Pod security policy.
   * @return enablePodSecurityPolicy
   */
  @javax.annotation.Nullable
  public Boolean getEnablePodSecurityPolicy() {
    return enablePodSecurityPolicy;
  }

  public void setEnablePodSecurityPolicy(Boolean enablePodSecurityPolicy) {
    this.enablePodSecurityPolicy = enablePodSecurityPolicy;
  }


  public ManagedClusterProperties enableRBAC(Boolean enableRBAC) {
    this.enableRBAC = enableRBAC;
    return this;
  }

  /**
   * Whether to enable Kubernetes Role-Based Access Control.
   * @return enableRBAC
   */
  @javax.annotation.Nullable
  public Boolean getEnableRBAC() {
    return enableRBAC;
  }

  public void setEnableRBAC(Boolean enableRBAC) {
    this.enableRBAC = enableRBAC;
  }


  /**
   * FQDN for the master pool.
   * @return fqdn
   */
  @javax.annotation.Nullable
  public String getFqdn() {
    return fqdn;
  }



  public ManagedClusterProperties identityProfile(Object identityProfile) {
    this.identityProfile = identityProfile;
    return this;
  }

  /**
   * Identities associated with the cluster.
   * @return identityProfile
   */
  @javax.annotation.Nullable
  public Object getIdentityProfile() {
    return identityProfile;
  }

  public void setIdentityProfile(Object identityProfile) {
    this.identityProfile = identityProfile;
  }


  public ManagedClusterProperties kubernetesVersion(String kubernetesVersion) {
    this.kubernetesVersion = kubernetesVersion;
    return this;
  }

  /**
   * Version of Kubernetes specified when creating the managed cluster.
   * @return kubernetesVersion
   */
  @javax.annotation.Nullable
  public String getKubernetesVersion() {
    return kubernetesVersion;
  }

  public void setKubernetesVersion(String kubernetesVersion) {
    this.kubernetesVersion = kubernetesVersion;
  }


  public ManagedClusterProperties linuxProfile(ContainerServiceLinuxProfile linuxProfile) {
    this.linuxProfile = linuxProfile;
    return this;
  }

  /**
   * Get linuxProfile
   * @return linuxProfile
   */
  @javax.annotation.Nullable
  public ContainerServiceLinuxProfile getLinuxProfile() {
    return linuxProfile;
  }

  public void setLinuxProfile(ContainerServiceLinuxProfile linuxProfile) {
    this.linuxProfile = linuxProfile;
  }


  /**
   * The max number of agent pools for the managed cluster.
   * @return maxAgentPools
   */
  @javax.annotation.Nullable
  public Integer getMaxAgentPools() {
    return maxAgentPools;
  }



  public ManagedClusterProperties networkProfile(ContainerServiceNetworkProfile networkProfile) {
    this.networkProfile = networkProfile;
    return this;
  }

  /**
   * Get networkProfile
   * @return networkProfile
   */
  @javax.annotation.Nullable
  public ContainerServiceNetworkProfile getNetworkProfile() {
    return networkProfile;
  }

  public void setNetworkProfile(ContainerServiceNetworkProfile networkProfile) {
    this.networkProfile = networkProfile;
  }


  public ManagedClusterProperties nodeResourceGroup(String nodeResourceGroup) {
    this.nodeResourceGroup = nodeResourceGroup;
    return this;
  }

  /**
   * Name of the resource group containing agent pool nodes.
   * @return nodeResourceGroup
   */
  @javax.annotation.Nullable
  public String getNodeResourceGroup() {
    return nodeResourceGroup;
  }

  public void setNodeResourceGroup(String nodeResourceGroup) {
    this.nodeResourceGroup = nodeResourceGroup;
  }


  /**
   * FQDN of private cluster.
   * @return privateFQDN
   */
  @javax.annotation.Nullable
  public String getPrivateFQDN() {
    return privateFQDN;
  }



  /**
   * The current deployment or provisioning state, which only appears in the response.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public String getProvisioningState() {
    return provisioningState;
  }



  public ManagedClusterProperties servicePrincipalProfile(ManagedClusterServicePrincipalProfile servicePrincipalProfile) {
    this.servicePrincipalProfile = servicePrincipalProfile;
    return this;
  }

  /**
   * Get servicePrincipalProfile
   * @return servicePrincipalProfile
   */
  @javax.annotation.Nullable
  public ManagedClusterServicePrincipalProfile getServicePrincipalProfile() {
    return servicePrincipalProfile;
  }

  public void setServicePrincipalProfile(ManagedClusterServicePrincipalProfile servicePrincipalProfile) {
    this.servicePrincipalProfile = servicePrincipalProfile;
  }


  public ManagedClusterProperties windowsProfile(ManagedClusterWindowsProfile windowsProfile) {
    this.windowsProfile = windowsProfile;
    return this;
  }

  /**
   * Get windowsProfile
   * @return windowsProfile
   */
  @javax.annotation.Nullable
  public ManagedClusterWindowsProfile getWindowsProfile() {
    return windowsProfile;
  }

  public void setWindowsProfile(ManagedClusterWindowsProfile windowsProfile) {
    this.windowsProfile = windowsProfile;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagedClusterProperties managedClusterProperties = (ManagedClusterProperties) o;
    return Objects.equals(this.aadProfile, managedClusterProperties.aadProfile) &&
        Objects.equals(this.addonProfiles, managedClusterProperties.addonProfiles) &&
        Objects.equals(this.agentPoolProfiles, managedClusterProperties.agentPoolProfiles) &&
        Objects.equals(this.apiServerAccessProfile, managedClusterProperties.apiServerAccessProfile) &&
        Objects.equals(this.diskEncryptionSetID, managedClusterProperties.diskEncryptionSetID) &&
        Objects.equals(this.dnsPrefix, managedClusterProperties.dnsPrefix) &&
        Objects.equals(this.enablePodSecurityPolicy, managedClusterProperties.enablePodSecurityPolicy) &&
        Objects.equals(this.enableRBAC, managedClusterProperties.enableRBAC) &&
        Objects.equals(this.fqdn, managedClusterProperties.fqdn) &&
        Objects.equals(this.identityProfile, managedClusterProperties.identityProfile) &&
        Objects.equals(this.kubernetesVersion, managedClusterProperties.kubernetesVersion) &&
        Objects.equals(this.linuxProfile, managedClusterProperties.linuxProfile) &&
        Objects.equals(this.maxAgentPools, managedClusterProperties.maxAgentPools) &&
        Objects.equals(this.networkProfile, managedClusterProperties.networkProfile) &&
        Objects.equals(this.nodeResourceGroup, managedClusterProperties.nodeResourceGroup) &&
        Objects.equals(this.privateFQDN, managedClusterProperties.privateFQDN) &&
        Objects.equals(this.provisioningState, managedClusterProperties.provisioningState) &&
        Objects.equals(this.servicePrincipalProfile, managedClusterProperties.servicePrincipalProfile) &&
        Objects.equals(this.windowsProfile, managedClusterProperties.windowsProfile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aadProfile, addonProfiles, agentPoolProfiles, apiServerAccessProfile, diskEncryptionSetID, dnsPrefix, enablePodSecurityPolicy, enableRBAC, fqdn, identityProfile, kubernetesVersion, linuxProfile, maxAgentPools, networkProfile, nodeResourceGroup, privateFQDN, provisioningState, servicePrincipalProfile, windowsProfile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagedClusterProperties {\n");
    sb.append("    aadProfile: ").append(toIndentedString(aadProfile)).append("\n");
    sb.append("    addonProfiles: ").append(toIndentedString(addonProfiles)).append("\n");
    sb.append("    agentPoolProfiles: ").append(toIndentedString(agentPoolProfiles)).append("\n");
    sb.append("    apiServerAccessProfile: ").append(toIndentedString(apiServerAccessProfile)).append("\n");
    sb.append("    diskEncryptionSetID: ").append(toIndentedString(diskEncryptionSetID)).append("\n");
    sb.append("    dnsPrefix: ").append(toIndentedString(dnsPrefix)).append("\n");
    sb.append("    enablePodSecurityPolicy: ").append(toIndentedString(enablePodSecurityPolicy)).append("\n");
    sb.append("    enableRBAC: ").append(toIndentedString(enableRBAC)).append("\n");
    sb.append("    fqdn: ").append(toIndentedString(fqdn)).append("\n");
    sb.append("    identityProfile: ").append(toIndentedString(identityProfile)).append("\n");
    sb.append("    kubernetesVersion: ").append(toIndentedString(kubernetesVersion)).append("\n");
    sb.append("    linuxProfile: ").append(toIndentedString(linuxProfile)).append("\n");
    sb.append("    maxAgentPools: ").append(toIndentedString(maxAgentPools)).append("\n");
    sb.append("    networkProfile: ").append(toIndentedString(networkProfile)).append("\n");
    sb.append("    nodeResourceGroup: ").append(toIndentedString(nodeResourceGroup)).append("\n");
    sb.append("    privateFQDN: ").append(toIndentedString(privateFQDN)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    servicePrincipalProfile: ").append(toIndentedString(servicePrincipalProfile)).append("\n");
    sb.append("    windowsProfile: ").append(toIndentedString(windowsProfile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aadProfile");
    openapiFields.add("addonProfiles");
    openapiFields.add("agentPoolProfiles");
    openapiFields.add("apiServerAccessProfile");
    openapiFields.add("diskEncryptionSetID");
    openapiFields.add("dnsPrefix");
    openapiFields.add("enablePodSecurityPolicy");
    openapiFields.add("enableRBAC");
    openapiFields.add("fqdn");
    openapiFields.add("identityProfile");
    openapiFields.add("kubernetesVersion");
    openapiFields.add("linuxProfile");
    openapiFields.add("maxAgentPools");
    openapiFields.add("networkProfile");
    openapiFields.add("nodeResourceGroup");
    openapiFields.add("privateFQDN");
    openapiFields.add("provisioningState");
    openapiFields.add("servicePrincipalProfile");
    openapiFields.add("windowsProfile");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ManagedClusterProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ManagedClusterProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ManagedClusterProperties is not found in the empty JSON string", ManagedClusterProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ManagedClusterProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ManagedClusterProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `aadProfile`
      if (jsonObj.get("aadProfile") != null && !jsonObj.get("aadProfile").isJsonNull()) {
        ManagedClusterAADProfile.validateJsonElement(jsonObj.get("aadProfile"));
      }
      if (jsonObj.get("agentPoolProfiles") != null && !jsonObj.get("agentPoolProfiles").isJsonNull()) {
        JsonArray jsonArrayagentPoolProfiles = jsonObj.getAsJsonArray("agentPoolProfiles");
        if (jsonArrayagentPoolProfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("agentPoolProfiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `agentPoolProfiles` to be an array in the JSON string but got `%s`", jsonObj.get("agentPoolProfiles").toString()));
          }

          // validate the optional field `agentPoolProfiles` (array)
          for (int i = 0; i < jsonArrayagentPoolProfiles.size(); i++) {
            ManagedClusterAgentPoolProfile.validateJsonElement(jsonArrayagentPoolProfiles.get(i));
          };
        }
      }
      // validate the optional field `apiServerAccessProfile`
      if (jsonObj.get("apiServerAccessProfile") != null && !jsonObj.get("apiServerAccessProfile").isJsonNull()) {
        ManagedClusterAPIServerAccessProfile.validateJsonElement(jsonObj.get("apiServerAccessProfile"));
      }
      if ((jsonObj.get("diskEncryptionSetID") != null && !jsonObj.get("diskEncryptionSetID").isJsonNull()) && !jsonObj.get("diskEncryptionSetID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `diskEncryptionSetID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("diskEncryptionSetID").toString()));
      }
      if ((jsonObj.get("dnsPrefix") != null && !jsonObj.get("dnsPrefix").isJsonNull()) && !jsonObj.get("dnsPrefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dnsPrefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dnsPrefix").toString()));
      }
      if ((jsonObj.get("fqdn") != null && !jsonObj.get("fqdn").isJsonNull()) && !jsonObj.get("fqdn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fqdn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fqdn").toString()));
      }
      if ((jsonObj.get("kubernetesVersion") != null && !jsonObj.get("kubernetesVersion").isJsonNull()) && !jsonObj.get("kubernetesVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kubernetesVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kubernetesVersion").toString()));
      }
      // validate the optional field `linuxProfile`
      if (jsonObj.get("linuxProfile") != null && !jsonObj.get("linuxProfile").isJsonNull()) {
        ContainerServiceLinuxProfile.validateJsonElement(jsonObj.get("linuxProfile"));
      }
      // validate the optional field `networkProfile`
      if (jsonObj.get("networkProfile") != null && !jsonObj.get("networkProfile").isJsonNull()) {
        ContainerServiceNetworkProfile.validateJsonElement(jsonObj.get("networkProfile"));
      }
      if ((jsonObj.get("nodeResourceGroup") != null && !jsonObj.get("nodeResourceGroup").isJsonNull()) && !jsonObj.get("nodeResourceGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nodeResourceGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nodeResourceGroup").toString()));
      }
      if ((jsonObj.get("privateFQDN") != null && !jsonObj.get("privateFQDN").isJsonNull()) && !jsonObj.get("privateFQDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privateFQDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privateFQDN").toString()));
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      // validate the optional field `servicePrincipalProfile`
      if (jsonObj.get("servicePrincipalProfile") != null && !jsonObj.get("servicePrincipalProfile").isJsonNull()) {
        ManagedClusterServicePrincipalProfile.validateJsonElement(jsonObj.get("servicePrincipalProfile"));
      }
      // validate the optional field `windowsProfile`
      if (jsonObj.get("windowsProfile") != null && !jsonObj.get("windowsProfile").isJsonNull()) {
        ManagedClusterWindowsProfile.validateJsonElement(jsonObj.get("windowsProfile"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ManagedClusterProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ManagedClusterProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ManagedClusterProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ManagedClusterProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ManagedClusterProperties>() {
           @Override
           public void write(JsonWriter out, ManagedClusterProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ManagedClusterProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ManagedClusterProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ManagedClusterProperties
   * @throws IOException if the JSON string is invalid with respect to ManagedClusterProperties
   */
  public static ManagedClusterProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ManagedClusterProperties.class);
  }

  /**
   * Convert an instance of ManagedClusterProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

