/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedClusterAADProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedClusterAADProfile::OAIManagedClusterAADProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedClusterAADProfile::OAIManagedClusterAADProfile() {
    this->initializeModel();
}

OAIManagedClusterAADProfile::~OAIManagedClusterAADProfile() {}

void OAIManagedClusterAADProfile::initializeModel() {

    m_client_app_id_isSet = false;
    m_client_app_id_isValid = false;

    m_server_app_id_isSet = false;
    m_server_app_id_isValid = false;

    m_server_app_secret_isSet = false;
    m_server_app_secret_isValid = false;

    m_tenant_id_isSet = false;
    m_tenant_id_isValid = false;
}

void OAIManagedClusterAADProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedClusterAADProfile::fromJsonObject(QJsonObject json) {

    m_client_app_id_isValid = ::OpenAPI::fromJsonValue(m_client_app_id, json[QString("clientAppID")]);
    m_client_app_id_isSet = !json[QString("clientAppID")].isNull() && m_client_app_id_isValid;

    m_server_app_id_isValid = ::OpenAPI::fromJsonValue(m_server_app_id, json[QString("serverAppID")]);
    m_server_app_id_isSet = !json[QString("serverAppID")].isNull() && m_server_app_id_isValid;

    m_server_app_secret_isValid = ::OpenAPI::fromJsonValue(m_server_app_secret, json[QString("serverAppSecret")]);
    m_server_app_secret_isSet = !json[QString("serverAppSecret")].isNull() && m_server_app_secret_isValid;

    m_tenant_id_isValid = ::OpenAPI::fromJsonValue(m_tenant_id, json[QString("tenantID")]);
    m_tenant_id_isSet = !json[QString("tenantID")].isNull() && m_tenant_id_isValid;
}

QString OAIManagedClusterAADProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedClusterAADProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_client_app_id_isSet) {
        obj.insert(QString("clientAppID"), ::OpenAPI::toJsonValue(m_client_app_id));
    }
    if (m_server_app_id_isSet) {
        obj.insert(QString("serverAppID"), ::OpenAPI::toJsonValue(m_server_app_id));
    }
    if (m_server_app_secret_isSet) {
        obj.insert(QString("serverAppSecret"), ::OpenAPI::toJsonValue(m_server_app_secret));
    }
    if (m_tenant_id_isSet) {
        obj.insert(QString("tenantID"), ::OpenAPI::toJsonValue(m_tenant_id));
    }
    return obj;
}

QString OAIManagedClusterAADProfile::getClientAppId() const {
    return m_client_app_id;
}
void OAIManagedClusterAADProfile::setClientAppId(const QString &client_app_id) {
    m_client_app_id = client_app_id;
    m_client_app_id_isSet = true;
}

bool OAIManagedClusterAADProfile::is_client_app_id_Set() const{
    return m_client_app_id_isSet;
}

bool OAIManagedClusterAADProfile::is_client_app_id_Valid() const{
    return m_client_app_id_isValid;
}

QString OAIManagedClusterAADProfile::getServerAppId() const {
    return m_server_app_id;
}
void OAIManagedClusterAADProfile::setServerAppId(const QString &server_app_id) {
    m_server_app_id = server_app_id;
    m_server_app_id_isSet = true;
}

bool OAIManagedClusterAADProfile::is_server_app_id_Set() const{
    return m_server_app_id_isSet;
}

bool OAIManagedClusterAADProfile::is_server_app_id_Valid() const{
    return m_server_app_id_isValid;
}

QString OAIManagedClusterAADProfile::getServerAppSecret() const {
    return m_server_app_secret;
}
void OAIManagedClusterAADProfile::setServerAppSecret(const QString &server_app_secret) {
    m_server_app_secret = server_app_secret;
    m_server_app_secret_isSet = true;
}

bool OAIManagedClusterAADProfile::is_server_app_secret_Set() const{
    return m_server_app_secret_isSet;
}

bool OAIManagedClusterAADProfile::is_server_app_secret_Valid() const{
    return m_server_app_secret_isValid;
}

QString OAIManagedClusterAADProfile::getTenantId() const {
    return m_tenant_id;
}
void OAIManagedClusterAADProfile::setTenantId(const QString &tenant_id) {
    m_tenant_id = tenant_id;
    m_tenant_id_isSet = true;
}

bool OAIManagedClusterAADProfile::is_tenant_id_Set() const{
    return m_tenant_id_isSet;
}

bool OAIManagedClusterAADProfile::is_tenant_id_Valid() const{
    return m_tenant_id_isValid;
}

bool OAIManagedClusterAADProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_server_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_server_app_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tenant_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedClusterAADProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_client_app_id_isValid && m_server_app_id_isValid && true;
}

} // namespace OpenAPI
