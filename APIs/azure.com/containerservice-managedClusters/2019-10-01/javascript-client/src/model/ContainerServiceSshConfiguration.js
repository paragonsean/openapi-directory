/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContainerServiceSshPublicKey from './ContainerServiceSshPublicKey';

/**
 * The ContainerServiceSshConfiguration model module.
 * @module model/ContainerServiceSshConfiguration
 * @version 2019-10-01
 */
class ContainerServiceSshConfiguration {
    /**
     * Constructs a new <code>ContainerServiceSshConfiguration</code>.
     * SSH configuration for Linux-based VMs running on Azure.
     * @alias module:model/ContainerServiceSshConfiguration
     * @param publicKeys {Array.<module:model/ContainerServiceSshPublicKey>} The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
     */
    constructor(publicKeys) { 
        
        ContainerServiceSshConfiguration.initialize(this, publicKeys);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, publicKeys) { 
        obj['publicKeys'] = publicKeys;
    }

    /**
     * Constructs a <code>ContainerServiceSshConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContainerServiceSshConfiguration} obj Optional instance to populate.
     * @return {module:model/ContainerServiceSshConfiguration} The populated <code>ContainerServiceSshConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerServiceSshConfiguration();

            if (data.hasOwnProperty('publicKeys')) {
                obj['publicKeys'] = ApiClient.convertToType(data['publicKeys'], [ContainerServiceSshPublicKey]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContainerServiceSshConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContainerServiceSshConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContainerServiceSshConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['publicKeys']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['publicKeys'])) {
                throw new Error("Expected the field `publicKeys` to be an array in the JSON data but got " + data['publicKeys']);
            }
            // validate the optional field `publicKeys` (array)
            for (const item of data['publicKeys']) {
                ContainerServiceSshPublicKey.validateJSON(item);
            };
        }

        return true;
    }


}

ContainerServiceSshConfiguration.RequiredProperties = ["publicKeys"];

/**
 * The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
 * @member {Array.<module:model/ContainerServiceSshPublicKey>} publicKeys
 */
ContainerServiceSshConfiguration.prototype['publicKeys'] = undefined;






export default ContainerServiceSshConfiguration;

