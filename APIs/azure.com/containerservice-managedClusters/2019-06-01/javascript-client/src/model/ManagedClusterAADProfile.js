/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ManagedClusterAADProfile model module.
 * @module model/ManagedClusterAADProfile
 * @version 2019-06-01
 */
class ManagedClusterAADProfile {
    /**
     * Constructs a new <code>ManagedClusterAADProfile</code>.
     * AADProfile specifies attributes for Azure Active Directory integration.
     * @alias module:model/ManagedClusterAADProfile
     * @param clientAppID {String} The client AAD application ID.
     * @param serverAppID {String} The server AAD application ID.
     */
    constructor(clientAppID, serverAppID) { 
        
        ManagedClusterAADProfile.initialize(this, clientAppID, serverAppID);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientAppID, serverAppID) { 
        obj['clientAppID'] = clientAppID;
        obj['serverAppID'] = serverAppID;
    }

    /**
     * Constructs a <code>ManagedClusterAADProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagedClusterAADProfile} obj Optional instance to populate.
     * @return {module:model/ManagedClusterAADProfile} The populated <code>ManagedClusterAADProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagedClusterAADProfile();

            if (data.hasOwnProperty('clientAppID')) {
                obj['clientAppID'] = ApiClient.convertToType(data['clientAppID'], 'String');
            }
            if (data.hasOwnProperty('serverAppID')) {
                obj['serverAppID'] = ApiClient.convertToType(data['serverAppID'], 'String');
            }
            if (data.hasOwnProperty('serverAppSecret')) {
                obj['serverAppSecret'] = ApiClient.convertToType(data['serverAppSecret'], 'String');
            }
            if (data.hasOwnProperty('tenantID')) {
                obj['tenantID'] = ApiClient.convertToType(data['tenantID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagedClusterAADProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagedClusterAADProfile</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ManagedClusterAADProfile.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['clientAppID'] && !(typeof data['clientAppID'] === 'string' || data['clientAppID'] instanceof String)) {
            throw new Error("Expected the field `clientAppID` to be a primitive type in the JSON string but got " + data['clientAppID']);
        }
        // ensure the json data is a string
        if (data['serverAppID'] && !(typeof data['serverAppID'] === 'string' || data['serverAppID'] instanceof String)) {
            throw new Error("Expected the field `serverAppID` to be a primitive type in the JSON string but got " + data['serverAppID']);
        }
        // ensure the json data is a string
        if (data['serverAppSecret'] && !(typeof data['serverAppSecret'] === 'string' || data['serverAppSecret'] instanceof String)) {
            throw new Error("Expected the field `serverAppSecret` to be a primitive type in the JSON string but got " + data['serverAppSecret']);
        }
        // ensure the json data is a string
        if (data['tenantID'] && !(typeof data['tenantID'] === 'string' || data['tenantID'] instanceof String)) {
            throw new Error("Expected the field `tenantID` to be a primitive type in the JSON string but got " + data['tenantID']);
        }

        return true;
    }


}

ManagedClusterAADProfile.RequiredProperties = ["clientAppID", "serverAppID"];

/**
 * The client AAD application ID.
 * @member {String} clientAppID
 */
ManagedClusterAADProfile.prototype['clientAppID'] = undefined;

/**
 * The server AAD application ID.
 * @member {String} serverAppID
 */
ManagedClusterAADProfile.prototype['serverAppID'] = undefined;

/**
 * The server AAD application secret.
 * @member {String} serverAppSecret
 */
ManagedClusterAADProfile.prototype['serverAppSecret'] = undefined;

/**
 * The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
 * @member {String} tenantID
 */
ManagedClusterAADProfile.prototype['tenantID'] = undefined;






export default ManagedClusterAADProfile;

