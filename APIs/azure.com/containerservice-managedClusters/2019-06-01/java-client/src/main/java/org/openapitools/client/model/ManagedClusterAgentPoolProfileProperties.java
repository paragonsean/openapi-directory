/*
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AgentPoolType;
import org.openapitools.client.model.ContainerServiceVMSize;
import org.openapitools.client.model.OSType;
import org.openapitools.client.model.ScaleSetEvictionPolicy;
import org.openapitools.client.model.ScaleSetPriority;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Properties for the container service agent pool profile.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:05:42.780551-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ManagedClusterAgentPoolProfileProperties {
  public static final String SERIALIZED_NAME_AVAILABILITY_ZONES = "availabilityZones";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONES)
  private List<String> availabilityZones = new ArrayList<>();

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Integer count;

  public static final String SERIALIZED_NAME_ENABLE_AUTO_SCALING = "enableAutoScaling";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUTO_SCALING)
  private Boolean enableAutoScaling;

  public static final String SERIALIZED_NAME_ENABLE_NODE_PUBLIC_I_P = "enableNodePublicIP";
  @SerializedName(SERIALIZED_NAME_ENABLE_NODE_PUBLIC_I_P)
  private Boolean enableNodePublicIP;

  public static final String SERIALIZED_NAME_MAX_COUNT = "maxCount";
  @SerializedName(SERIALIZED_NAME_MAX_COUNT)
  private Integer maxCount;

  public static final String SERIALIZED_NAME_MAX_PODS = "maxPods";
  @SerializedName(SERIALIZED_NAME_MAX_PODS)
  private Integer maxPods;

  public static final String SERIALIZED_NAME_MIN_COUNT = "minCount";
  @SerializedName(SERIALIZED_NAME_MIN_COUNT)
  private Integer minCount;

  public static final String SERIALIZED_NAME_NODE_TAINTS = "nodeTaints";
  @SerializedName(SERIALIZED_NAME_NODE_TAINTS)
  private List<String> nodeTaints = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORCHESTRATOR_VERSION = "orchestratorVersion";
  @SerializedName(SERIALIZED_NAME_ORCHESTRATOR_VERSION)
  private String orchestratorVersion;

  public static final String SERIALIZED_NAME_OS_DISK_SIZE_G_B = "osDiskSizeGB";
  @SerializedName(SERIALIZED_NAME_OS_DISK_SIZE_G_B)
  private Integer osDiskSizeGB;

  public static final String SERIALIZED_NAME_OS_TYPE = "osType";
  @SerializedName(SERIALIZED_NAME_OS_TYPE)
  private OSType osType = OSType.LINUX;

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private String provisioningState;

  public static final String SERIALIZED_NAME_SCALE_SET_EVICTION_POLICY = "scaleSetEvictionPolicy";
  @SerializedName(SERIALIZED_NAME_SCALE_SET_EVICTION_POLICY)
  private ScaleSetEvictionPolicy scaleSetEvictionPolicy = ScaleSetEvictionPolicy.DELETE;

  public static final String SERIALIZED_NAME_SCALE_SET_PRIORITY = "scaleSetPriority";
  @SerializedName(SERIALIZED_NAME_SCALE_SET_PRIORITY)
  private ScaleSetPriority scaleSetPriority = ScaleSetPriority.REGULAR;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private AgentPoolType type;

  public static final String SERIALIZED_NAME_VM_SIZE = "vmSize";
  @SerializedName(SERIALIZED_NAME_VM_SIZE)
  private ContainerServiceVMSize vmSize;

  public static final String SERIALIZED_NAME_VNET_SUBNET_I_D = "vnetSubnetID";
  @SerializedName(SERIALIZED_NAME_VNET_SUBNET_I_D)
  private String vnetSubnetID;

  public ManagedClusterAgentPoolProfileProperties() {
  }

  public ManagedClusterAgentPoolProfileProperties(
     String provisioningState
  ) {
    this();
    this.provisioningState = provisioningState;
  }

  public ManagedClusterAgentPoolProfileProperties availabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  public ManagedClusterAgentPoolProfileProperties addAvailabilityZonesItem(String availabilityZonesItem) {
    if (this.availabilityZones == null) {
      this.availabilityZones = new ArrayList<>();
    }
    this.availabilityZones.add(availabilityZonesItem);
    return this;
  }

  /**
   * (PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
   * @return availabilityZones
   */
  @javax.annotation.Nullable
  public List<String> getAvailabilityZones() {
    return availabilityZones;
  }

  public void setAvailabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
  }


  public ManagedClusterAgentPoolProfileProperties count(Integer count) {
    this.count = count;
    return this;
  }

  /**
   * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
   * @return count
   */
  @javax.annotation.Nullable
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }


  public ManagedClusterAgentPoolProfileProperties enableAutoScaling(Boolean enableAutoScaling) {
    this.enableAutoScaling = enableAutoScaling;
    return this;
  }

  /**
   * Whether to enable auto-scaler
   * @return enableAutoScaling
   */
  @javax.annotation.Nullable
  public Boolean getEnableAutoScaling() {
    return enableAutoScaling;
  }

  public void setEnableAutoScaling(Boolean enableAutoScaling) {
    this.enableAutoScaling = enableAutoScaling;
  }


  public ManagedClusterAgentPoolProfileProperties enableNodePublicIP(Boolean enableNodePublicIP) {
    this.enableNodePublicIP = enableNodePublicIP;
    return this;
  }

  /**
   * Enable public IP for nodes
   * @return enableNodePublicIP
   */
  @javax.annotation.Nullable
  public Boolean getEnableNodePublicIP() {
    return enableNodePublicIP;
  }

  public void setEnableNodePublicIP(Boolean enableNodePublicIP) {
    this.enableNodePublicIP = enableNodePublicIP;
  }


  public ManagedClusterAgentPoolProfileProperties maxCount(Integer maxCount) {
    this.maxCount = maxCount;
    return this;
  }

  /**
   * Maximum number of nodes for auto-scaling
   * @return maxCount
   */
  @javax.annotation.Nullable
  public Integer getMaxCount() {
    return maxCount;
  }

  public void setMaxCount(Integer maxCount) {
    this.maxCount = maxCount;
  }


  public ManagedClusterAgentPoolProfileProperties maxPods(Integer maxPods) {
    this.maxPods = maxPods;
    return this;
  }

  /**
   * Maximum number of pods that can run on a node.
   * @return maxPods
   */
  @javax.annotation.Nullable
  public Integer getMaxPods() {
    return maxPods;
  }

  public void setMaxPods(Integer maxPods) {
    this.maxPods = maxPods;
  }


  public ManagedClusterAgentPoolProfileProperties minCount(Integer minCount) {
    this.minCount = minCount;
    return this;
  }

  /**
   * Minimum number of nodes for auto-scaling
   * @return minCount
   */
  @javax.annotation.Nullable
  public Integer getMinCount() {
    return minCount;
  }

  public void setMinCount(Integer minCount) {
    this.minCount = minCount;
  }


  public ManagedClusterAgentPoolProfileProperties nodeTaints(List<String> nodeTaints) {
    this.nodeTaints = nodeTaints;
    return this;
  }

  public ManagedClusterAgentPoolProfileProperties addNodeTaintsItem(String nodeTaintsItem) {
    if (this.nodeTaints == null) {
      this.nodeTaints = new ArrayList<>();
    }
    this.nodeTaints.add(nodeTaintsItem);
    return this;
  }

  /**
   * Taints added to new nodes during node pool create and scale. For example, key&#x3D;value:NoSchedule.
   * @return nodeTaints
   */
  @javax.annotation.Nullable
  public List<String> getNodeTaints() {
    return nodeTaints;
  }

  public void setNodeTaints(List<String> nodeTaints) {
    this.nodeTaints = nodeTaints;
  }


  public ManagedClusterAgentPoolProfileProperties orchestratorVersion(String orchestratorVersion) {
    this.orchestratorVersion = orchestratorVersion;
    return this;
  }

  /**
   * Version of orchestrator specified when creating the managed cluster.
   * @return orchestratorVersion
   */
  @javax.annotation.Nullable
  public String getOrchestratorVersion() {
    return orchestratorVersion;
  }

  public void setOrchestratorVersion(String orchestratorVersion) {
    this.orchestratorVersion = orchestratorVersion;
  }


  public ManagedClusterAgentPoolProfileProperties osDiskSizeGB(Integer osDiskSizeGB) {
    this.osDiskSizeGB = osDiskSizeGB;
    return this;
  }

  /**
   * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
   * minimum: 0
   * maximum: 1023
   * @return osDiskSizeGB
   */
  @javax.annotation.Nullable
  public Integer getOsDiskSizeGB() {
    return osDiskSizeGB;
  }

  public void setOsDiskSizeGB(Integer osDiskSizeGB) {
    this.osDiskSizeGB = osDiskSizeGB;
  }


  public ManagedClusterAgentPoolProfileProperties osType(OSType osType) {
    this.osType = osType;
    return this;
  }

  /**
   * Get osType
   * @return osType
   */
  @javax.annotation.Nullable
  public OSType getOsType() {
    return osType;
  }

  public void setOsType(OSType osType) {
    this.osType = osType;
  }


  /**
   * The current deployment or provisioning state, which only appears in the response.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public String getProvisioningState() {
    return provisioningState;
  }



  public ManagedClusterAgentPoolProfileProperties scaleSetEvictionPolicy(ScaleSetEvictionPolicy scaleSetEvictionPolicy) {
    this.scaleSetEvictionPolicy = scaleSetEvictionPolicy;
    return this;
  }

  /**
   * Get scaleSetEvictionPolicy
   * @return scaleSetEvictionPolicy
   */
  @javax.annotation.Nullable
  public ScaleSetEvictionPolicy getScaleSetEvictionPolicy() {
    return scaleSetEvictionPolicy;
  }

  public void setScaleSetEvictionPolicy(ScaleSetEvictionPolicy scaleSetEvictionPolicy) {
    this.scaleSetEvictionPolicy = scaleSetEvictionPolicy;
  }


  public ManagedClusterAgentPoolProfileProperties scaleSetPriority(ScaleSetPriority scaleSetPriority) {
    this.scaleSetPriority = scaleSetPriority;
    return this;
  }

  /**
   * Get scaleSetPriority
   * @return scaleSetPriority
   */
  @javax.annotation.Nullable
  public ScaleSetPriority getScaleSetPriority() {
    return scaleSetPriority;
  }

  public void setScaleSetPriority(ScaleSetPriority scaleSetPriority) {
    this.scaleSetPriority = scaleSetPriority;
  }


  public ManagedClusterAgentPoolProfileProperties type(AgentPoolType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public AgentPoolType getType() {
    return type;
  }

  public void setType(AgentPoolType type) {
    this.type = type;
  }


  public ManagedClusterAgentPoolProfileProperties vmSize(ContainerServiceVMSize vmSize) {
    this.vmSize = vmSize;
    return this;
  }

  /**
   * Get vmSize
   * @return vmSize
   */
  @javax.annotation.Nullable
  public ContainerServiceVMSize getVmSize() {
    return vmSize;
  }

  public void setVmSize(ContainerServiceVMSize vmSize) {
    this.vmSize = vmSize;
  }


  public ManagedClusterAgentPoolProfileProperties vnetSubnetID(String vnetSubnetID) {
    this.vnetSubnetID = vnetSubnetID;
    return this;
  }

  /**
   * VNet SubnetID specifies the VNet&#39;s subnet identifier.
   * @return vnetSubnetID
   */
  @javax.annotation.Nullable
  public String getVnetSubnetID() {
    return vnetSubnetID;
  }

  public void setVnetSubnetID(String vnetSubnetID) {
    this.vnetSubnetID = vnetSubnetID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagedClusterAgentPoolProfileProperties managedClusterAgentPoolProfileProperties = (ManagedClusterAgentPoolProfileProperties) o;
    return Objects.equals(this.availabilityZones, managedClusterAgentPoolProfileProperties.availabilityZones) &&
        Objects.equals(this.count, managedClusterAgentPoolProfileProperties.count) &&
        Objects.equals(this.enableAutoScaling, managedClusterAgentPoolProfileProperties.enableAutoScaling) &&
        Objects.equals(this.enableNodePublicIP, managedClusterAgentPoolProfileProperties.enableNodePublicIP) &&
        Objects.equals(this.maxCount, managedClusterAgentPoolProfileProperties.maxCount) &&
        Objects.equals(this.maxPods, managedClusterAgentPoolProfileProperties.maxPods) &&
        Objects.equals(this.minCount, managedClusterAgentPoolProfileProperties.minCount) &&
        Objects.equals(this.nodeTaints, managedClusterAgentPoolProfileProperties.nodeTaints) &&
        Objects.equals(this.orchestratorVersion, managedClusterAgentPoolProfileProperties.orchestratorVersion) &&
        Objects.equals(this.osDiskSizeGB, managedClusterAgentPoolProfileProperties.osDiskSizeGB) &&
        Objects.equals(this.osType, managedClusterAgentPoolProfileProperties.osType) &&
        Objects.equals(this.provisioningState, managedClusterAgentPoolProfileProperties.provisioningState) &&
        Objects.equals(this.scaleSetEvictionPolicy, managedClusterAgentPoolProfileProperties.scaleSetEvictionPolicy) &&
        Objects.equals(this.scaleSetPriority, managedClusterAgentPoolProfileProperties.scaleSetPriority) &&
        Objects.equals(this.type, managedClusterAgentPoolProfileProperties.type) &&
        Objects.equals(this.vmSize, managedClusterAgentPoolProfileProperties.vmSize) &&
        Objects.equals(this.vnetSubnetID, managedClusterAgentPoolProfileProperties.vnetSubnetID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityZones, count, enableAutoScaling, enableNodePublicIP, maxCount, maxPods, minCount, nodeTaints, orchestratorVersion, osDiskSizeGB, osType, provisioningState, scaleSetEvictionPolicy, scaleSetPriority, type, vmSize, vnetSubnetID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagedClusterAgentPoolProfileProperties {\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    enableAutoScaling: ").append(toIndentedString(enableAutoScaling)).append("\n");
    sb.append("    enableNodePublicIP: ").append(toIndentedString(enableNodePublicIP)).append("\n");
    sb.append("    maxCount: ").append(toIndentedString(maxCount)).append("\n");
    sb.append("    maxPods: ").append(toIndentedString(maxPods)).append("\n");
    sb.append("    minCount: ").append(toIndentedString(minCount)).append("\n");
    sb.append("    nodeTaints: ").append(toIndentedString(nodeTaints)).append("\n");
    sb.append("    orchestratorVersion: ").append(toIndentedString(orchestratorVersion)).append("\n");
    sb.append("    osDiskSizeGB: ").append(toIndentedString(osDiskSizeGB)).append("\n");
    sb.append("    osType: ").append(toIndentedString(osType)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    scaleSetEvictionPolicy: ").append(toIndentedString(scaleSetEvictionPolicy)).append("\n");
    sb.append("    scaleSetPriority: ").append(toIndentedString(scaleSetPriority)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vmSize: ").append(toIndentedString(vmSize)).append("\n");
    sb.append("    vnetSubnetID: ").append(toIndentedString(vnetSubnetID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("availabilityZones");
    openapiFields.add("count");
    openapiFields.add("enableAutoScaling");
    openapiFields.add("enableNodePublicIP");
    openapiFields.add("maxCount");
    openapiFields.add("maxPods");
    openapiFields.add("minCount");
    openapiFields.add("nodeTaints");
    openapiFields.add("orchestratorVersion");
    openapiFields.add("osDiskSizeGB");
    openapiFields.add("osType");
    openapiFields.add("provisioningState");
    openapiFields.add("scaleSetEvictionPolicy");
    openapiFields.add("scaleSetPriority");
    openapiFields.add("type");
    openapiFields.add("vmSize");
    openapiFields.add("vnetSubnetID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ManagedClusterAgentPoolProfileProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ManagedClusterAgentPoolProfileProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ManagedClusterAgentPoolProfileProperties is not found in the empty JSON string", ManagedClusterAgentPoolProfileProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ManagedClusterAgentPoolProfileProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ManagedClusterAgentPoolProfileProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("availabilityZones") != null && !jsonObj.get("availabilityZones").isJsonNull() && !jsonObj.get("availabilityZones").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `availabilityZones` to be an array in the JSON string but got `%s`", jsonObj.get("availabilityZones").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("nodeTaints") != null && !jsonObj.get("nodeTaints").isJsonNull() && !jsonObj.get("nodeTaints").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `nodeTaints` to be an array in the JSON string but got `%s`", jsonObj.get("nodeTaints").toString()));
      }
      if ((jsonObj.get("orchestratorVersion") != null && !jsonObj.get("orchestratorVersion").isJsonNull()) && !jsonObj.get("orchestratorVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orchestratorVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orchestratorVersion").toString()));
      }
      // validate the optional field `osType`
      if (jsonObj.get("osType") != null && !jsonObj.get("osType").isJsonNull()) {
        OSType.validateJsonElement(jsonObj.get("osType"));
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      // validate the optional field `scaleSetEvictionPolicy`
      if (jsonObj.get("scaleSetEvictionPolicy") != null && !jsonObj.get("scaleSetEvictionPolicy").isJsonNull()) {
        ScaleSetEvictionPolicy.validateJsonElement(jsonObj.get("scaleSetEvictionPolicy"));
      }
      // validate the optional field `scaleSetPriority`
      if (jsonObj.get("scaleSetPriority") != null && !jsonObj.get("scaleSetPriority").isJsonNull()) {
        ScaleSetPriority.validateJsonElement(jsonObj.get("scaleSetPriority"));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        AgentPoolType.validateJsonElement(jsonObj.get("type"));
      }
      // validate the optional field `vmSize`
      if (jsonObj.get("vmSize") != null && !jsonObj.get("vmSize").isJsonNull()) {
        ContainerServiceVMSize.validateJsonElement(jsonObj.get("vmSize"));
      }
      if ((jsonObj.get("vnetSubnetID") != null && !jsonObj.get("vnetSubnetID").isJsonNull()) && !jsonObj.get("vnetSubnetID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vnetSubnetID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vnetSubnetID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ManagedClusterAgentPoolProfileProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ManagedClusterAgentPoolProfileProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ManagedClusterAgentPoolProfileProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ManagedClusterAgentPoolProfileProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ManagedClusterAgentPoolProfileProperties>() {
           @Override
           public void write(JsonWriter out, ManagedClusterAgentPoolProfileProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ManagedClusterAgentPoolProfileProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ManagedClusterAgentPoolProfileProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ManagedClusterAgentPoolProfileProperties
   * @throws IOException if the JSON string is invalid with respect to ManagedClusterAgentPoolProfileProperties
   */
  public static ManagedClusterAgentPoolProfileProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ManagedClusterAgentPoolProfileProperties.class);
  }

  /**
   * Convert an instance of ManagedClusterAgentPoolProfileProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

