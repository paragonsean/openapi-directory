/**
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import CredentialResults from '../model/CredentialResults';
import ManagedCluster from '../model/ManagedCluster';
import ManagedClusterAADProfile from '../model/ManagedClusterAADProfile';
import ManagedClusterAccessProfile from '../model/ManagedClusterAccessProfile';
import ManagedClusterListResult from '../model/ManagedClusterListResult';
import ManagedClusterServicePrincipalProfile from '../model/ManagedClusterServicePrincipalProfile';
import ManagedClusterUpgradeProfile from '../model/ManagedClusterUpgradeProfile';
import OperationListResult from '../model/OperationListResult';
import TagsObject from '../model/TagsObject';

/**
* ManagedClusters service.
* @module api/ManagedClustersApi
* @version 2019-02-01
*/
export default class ManagedClustersApi {

    /**
    * Constructs a new ManagedClustersApi. 
    * @alias module:api/ManagedClustersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the managedClustersCreateOrUpdate operation.
     * @callback module:api/ManagedClustersApi~managedClustersCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ManagedCluster} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a managed cluster.
     * Creates or updates a managed cluster with the specified configuration for agents and Kubernetes version.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceName The name of the managed cluster resource.
     * @param {module:model/ManagedCluster} parameters Parameters supplied to the Create or Update a Managed Cluster operation.
     * @param {module:api/ManagedClustersApi~managedClustersCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ManagedCluster}
     */
    managedClustersCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedClustersCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedClustersCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedClustersCreateOrUpdate");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling managedClustersCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling managedClustersCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ManagedCluster;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedClustersDelete operation.
     * @callback module:api/ManagedClustersApi~managedClustersDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a managed cluster.
     * Deletes the managed cluster with a specified resource group and name.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceName The name of the managed cluster resource.
     * @param {module:api/ManagedClustersApi~managedClustersDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    managedClustersDelete(apiVersion, subscriptionId, resourceGroupName, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedClustersDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedClustersDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedClustersDelete");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling managedClustersDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedClustersGet operation.
     * @callback module:api/ManagedClustersApi~managedClustersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ManagedCluster} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a managed cluster.
     * Gets the details of the managed cluster with a specified resource group and name.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceName The name of the managed cluster resource.
     * @param {module:api/ManagedClustersApi~managedClustersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ManagedCluster}
     */
    managedClustersGet(apiVersion, subscriptionId, resourceGroupName, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedClustersGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedClustersGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedClustersGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling managedClustersGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ManagedCluster;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedClustersGetAccessProfile operation.
     * @callback module:api/ManagedClustersApi~managedClustersGetAccessProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ManagedClusterAccessProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an access profile of a managed cluster.
     * Gets the accessProfile for the specified role name of the managed cluster with a specified resource group and name.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceName The name of the managed cluster resource.
     * @param {String} roleName The name of the role for managed cluster accessProfile resource.
     * @param {module:api/ManagedClustersApi~managedClustersGetAccessProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ManagedClusterAccessProfile}
     */
    managedClustersGetAccessProfile(apiVersion, subscriptionId, resourceGroupName, resourceName, roleName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedClustersGetAccessProfile");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedClustersGetAccessProfile");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedClustersGetAccessProfile");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling managedClustersGetAccessProfile");
      }
      // verify the required parameter 'roleName' is set
      if (roleName === undefined || roleName === null) {
        throw new Error("Missing the required parameter 'roleName' when calling managedClustersGetAccessProfile");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName,
        'roleName': roleName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ManagedClusterAccessProfile;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/accessProfiles/{roleName}/listCredential', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedClustersGetUpgradeProfile operation.
     * @callback module:api/ManagedClustersApi~managedClustersGetUpgradeProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ManagedClusterUpgradeProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets upgrade profile for a managed cluster.
     * Gets the details of the upgrade profile for a managed cluster with a specified resource group and name.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceName The name of the managed cluster resource.
     * @param {module:api/ManagedClustersApi~managedClustersGetUpgradeProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ManagedClusterUpgradeProfile}
     */
    managedClustersGetUpgradeProfile(apiVersion, subscriptionId, resourceGroupName, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedClustersGetUpgradeProfile");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedClustersGetUpgradeProfile");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedClustersGetUpgradeProfile");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling managedClustersGetUpgradeProfile");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ManagedClusterUpgradeProfile;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/upgradeProfiles/default', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedClustersList operation.
     * @callback module:api/ManagedClustersApi~managedClustersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ManagedClusterListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of managed clusters in the specified subscription.
     * Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/ManagedClustersApi~managedClustersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ManagedClusterListResult}
     */
    managedClustersList(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedClustersList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedClustersList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ManagedClusterListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/managedClusters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedClustersListByResourceGroup operation.
     * @callback module:api/ManagedClustersApi~managedClustersListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ManagedClusterListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists managed clusters in the specified subscription and resource group.
     * Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {module:api/ManagedClustersApi~managedClustersListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ManagedClusterListResult}
     */
    managedClustersListByResourceGroup(apiVersion, subscriptionId, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedClustersListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedClustersListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedClustersListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ManagedClusterListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedClustersListClusterAdminCredentials operation.
     * @callback module:api/ManagedClustersApi~managedClustersListClusterAdminCredentialsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CredentialResults} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets cluster admin credential of a managed cluster.
     * Gets cluster admin credential of the managed cluster with a specified resource group and name.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceName The name of the managed cluster resource.
     * @param {module:api/ManagedClustersApi~managedClustersListClusterAdminCredentialsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CredentialResults}
     */
    managedClustersListClusterAdminCredentials(apiVersion, subscriptionId, resourceGroupName, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedClustersListClusterAdminCredentials");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedClustersListClusterAdminCredentials");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedClustersListClusterAdminCredentials");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling managedClustersListClusterAdminCredentials");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CredentialResults;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/listClusterAdminCredential', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedClustersListClusterUserCredentials operation.
     * @callback module:api/ManagedClustersApi~managedClustersListClusterUserCredentialsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CredentialResults} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets cluster user credential of a managed cluster.
     * Gets cluster user credential of the managed cluster with a specified resource group and name.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceName The name of the managed cluster resource.
     * @param {module:api/ManagedClustersApi~managedClustersListClusterUserCredentialsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CredentialResults}
     */
    managedClustersListClusterUserCredentials(apiVersion, subscriptionId, resourceGroupName, resourceName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedClustersListClusterUserCredentials");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedClustersListClusterUserCredentials");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedClustersListClusterUserCredentials");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling managedClustersListClusterUserCredentials");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CredentialResults;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/listClusterUserCredential', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedClustersResetAADProfile operation.
     * @callback module:api/ManagedClustersApi~managedClustersResetAADProfileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset AAD Profile of a managed cluster.
     * Update the AAD Profile for a managed cluster.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceName The name of the managed cluster resource.
     * @param {module:model/ManagedClusterAADProfile} parameters Parameters supplied to the Reset AAD Profile operation for a Managed Cluster.
     * @param {module:api/ManagedClustersApi~managedClustersResetAADProfileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    managedClustersResetAADProfile(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedClustersResetAADProfile");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedClustersResetAADProfile");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedClustersResetAADProfile");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling managedClustersResetAADProfile");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling managedClustersResetAADProfile");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/resetAADProfile', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedClustersResetServicePrincipalProfile operation.
     * @callback module:api/ManagedClustersApi~managedClustersResetServicePrincipalProfileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset Service Principal Profile of a managed cluster.
     * Update the service principal Profile for a managed cluster.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceName The name of the managed cluster resource.
     * @param {module:model/ManagedClusterServicePrincipalProfile} parameters Parameters supplied to the Reset Service Principal Profile operation for a Managed Cluster.
     * @param {module:api/ManagedClustersApi~managedClustersResetServicePrincipalProfileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    managedClustersResetServicePrincipalProfile(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedClustersResetServicePrincipalProfile");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedClustersResetServicePrincipalProfile");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedClustersResetServicePrincipalProfile");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling managedClustersResetServicePrincipalProfile");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling managedClustersResetServicePrincipalProfile");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/resetServicePrincipalProfile', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the managedClustersUpdateTags operation.
     * @callback module:api/ManagedClustersApi~managedClustersUpdateTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ManagedCluster} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates tags on a managed cluster.
     * Updates a managed cluster with the specified tags.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} resourceName The name of the managed cluster resource.
     * @param {module:model/TagsObject} parameters Parameters supplied to the Update Managed Cluster Tags operation.
     * @param {module:api/ManagedClustersApi~managedClustersUpdateTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ManagedCluster}
     */
    managedClustersUpdateTags(apiVersion, subscriptionId, resourceGroupName, resourceName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling managedClustersUpdateTags");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling managedClustersUpdateTags");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling managedClustersUpdateTags");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling managedClustersUpdateTags");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling managedClustersUpdateTags");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ManagedCluster;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the operationsList operation.
     * @callback module:api/ManagedClustersApi~operationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of compute operations.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/ManagedClustersApi~operationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationListResult}
     */
    operationsList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationsList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.ContainerService/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
