/*
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AgentPoolType;
import org.openapitools.client.model.ContainerServiceVMSize;
import org.openapitools.client.model.OSType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Profile for the container service agent pool.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:05:54.676455-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ManagedClusterAgentPoolProfile {
  public static final String SERIALIZED_NAME_AVAILABILITY_ZONES = "availabilityZones";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONES)
  private List<String> availabilityZones = new ArrayList<>();

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Integer count = 1;

  public static final String SERIALIZED_NAME_ENABLE_AUTO_SCALING = "enableAutoScaling";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUTO_SCALING)
  private Boolean enableAutoScaling;

  public static final String SERIALIZED_NAME_MAX_COUNT = "maxCount";
  @SerializedName(SERIALIZED_NAME_MAX_COUNT)
  private Integer maxCount;

  public static final String SERIALIZED_NAME_MAX_PODS = "maxPods";
  @SerializedName(SERIALIZED_NAME_MAX_PODS)
  private Integer maxPods;

  public static final String SERIALIZED_NAME_MIN_COUNT = "minCount";
  @SerializedName(SERIALIZED_NAME_MIN_COUNT)
  private Integer minCount;

  public static final String SERIALIZED_NAME_ORCHESTRATOR_VERSION = "orchestratorVersion";
  @SerializedName(SERIALIZED_NAME_ORCHESTRATOR_VERSION)
  private String orchestratorVersion;

  public static final String SERIALIZED_NAME_OS_DISK_SIZE_G_B = "osDiskSizeGB";
  @SerializedName(SERIALIZED_NAME_OS_DISK_SIZE_G_B)
  private Integer osDiskSizeGB;

  public static final String SERIALIZED_NAME_OS_TYPE = "osType";
  @SerializedName(SERIALIZED_NAME_OS_TYPE)
  private OSType osType = OSType.LINUX;

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private String provisioningState;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private AgentPoolType type;

  public static final String SERIALIZED_NAME_VM_SIZE = "vmSize";
  @SerializedName(SERIALIZED_NAME_VM_SIZE)
  private ContainerServiceVMSize vmSize;

  public static final String SERIALIZED_NAME_VNET_SUBNET_I_D = "vnetSubnetID";
  @SerializedName(SERIALIZED_NAME_VNET_SUBNET_I_D)
  private String vnetSubnetID;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public ManagedClusterAgentPoolProfile() {
  }

  public ManagedClusterAgentPoolProfile(
     String provisioningState
  ) {
    this();
    this.provisioningState = provisioningState;
  }

  public ManagedClusterAgentPoolProfile availabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  public ManagedClusterAgentPoolProfile addAvailabilityZonesItem(String availabilityZonesItem) {
    if (this.availabilityZones == null) {
      this.availabilityZones = new ArrayList<>();
    }
    this.availabilityZones.add(availabilityZonesItem);
    return this;
  }

  /**
   * (PREVIEW) Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
   * @return availabilityZones
   */
  @javax.annotation.Nullable
  public List<String> getAvailabilityZones() {
    return availabilityZones;
  }

  public void setAvailabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
  }


  public ManagedClusterAgentPoolProfile count(Integer count) {
    this.count = count;
    return this;
  }

  /**
   * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. 
   * minimum: 1
   * maximum: 100
   * @return count
   */
  @javax.annotation.Nonnull
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }


  public ManagedClusterAgentPoolProfile enableAutoScaling(Boolean enableAutoScaling) {
    this.enableAutoScaling = enableAutoScaling;
    return this;
  }

  /**
   * Whether to enable auto-scaler
   * @return enableAutoScaling
   */
  @javax.annotation.Nullable
  public Boolean getEnableAutoScaling() {
    return enableAutoScaling;
  }

  public void setEnableAutoScaling(Boolean enableAutoScaling) {
    this.enableAutoScaling = enableAutoScaling;
  }


  public ManagedClusterAgentPoolProfile maxCount(Integer maxCount) {
    this.maxCount = maxCount;
    return this;
  }

  /**
   * Maximum number of nodes for auto-scaling
   * @return maxCount
   */
  @javax.annotation.Nullable
  public Integer getMaxCount() {
    return maxCount;
  }

  public void setMaxCount(Integer maxCount) {
    this.maxCount = maxCount;
  }


  public ManagedClusterAgentPoolProfile maxPods(Integer maxPods) {
    this.maxPods = maxPods;
    return this;
  }

  /**
   * Maximum number of pods that can run on a node.
   * @return maxPods
   */
  @javax.annotation.Nullable
  public Integer getMaxPods() {
    return maxPods;
  }

  public void setMaxPods(Integer maxPods) {
    this.maxPods = maxPods;
  }


  public ManagedClusterAgentPoolProfile minCount(Integer minCount) {
    this.minCount = minCount;
    return this;
  }

  /**
   * Minimum number of nodes for auto-scaling
   * @return minCount
   */
  @javax.annotation.Nullable
  public Integer getMinCount() {
    return minCount;
  }

  public void setMinCount(Integer minCount) {
    this.minCount = minCount;
  }


  public ManagedClusterAgentPoolProfile orchestratorVersion(String orchestratorVersion) {
    this.orchestratorVersion = orchestratorVersion;
    return this;
  }

  /**
   * Version of orchestrator specified when creating the managed cluster.
   * @return orchestratorVersion
   */
  @javax.annotation.Nullable
  public String getOrchestratorVersion() {
    return orchestratorVersion;
  }

  public void setOrchestratorVersion(String orchestratorVersion) {
    this.orchestratorVersion = orchestratorVersion;
  }


  public ManagedClusterAgentPoolProfile osDiskSizeGB(Integer osDiskSizeGB) {
    this.osDiskSizeGB = osDiskSizeGB;
    return this;
  }

  /**
   * OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
   * minimum: 0
   * maximum: 1023
   * @return osDiskSizeGB
   */
  @javax.annotation.Nullable
  public Integer getOsDiskSizeGB() {
    return osDiskSizeGB;
  }

  public void setOsDiskSizeGB(Integer osDiskSizeGB) {
    this.osDiskSizeGB = osDiskSizeGB;
  }


  public ManagedClusterAgentPoolProfile osType(OSType osType) {
    this.osType = osType;
    return this;
  }

  /**
   * Get osType
   * @return osType
   */
  @javax.annotation.Nullable
  public OSType getOsType() {
    return osType;
  }

  public void setOsType(OSType osType) {
    this.osType = osType;
  }


  /**
   * The current deployment or provisioning state, which only appears in the response.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public String getProvisioningState() {
    return provisioningState;
  }



  public ManagedClusterAgentPoolProfile type(AgentPoolType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public AgentPoolType getType() {
    return type;
  }

  public void setType(AgentPoolType type) {
    this.type = type;
  }


  public ManagedClusterAgentPoolProfile vmSize(ContainerServiceVMSize vmSize) {
    this.vmSize = vmSize;
    return this;
  }

  /**
   * Get vmSize
   * @return vmSize
   */
  @javax.annotation.Nonnull
  public ContainerServiceVMSize getVmSize() {
    return vmSize;
  }

  public void setVmSize(ContainerServiceVMSize vmSize) {
    this.vmSize = vmSize;
  }


  public ManagedClusterAgentPoolProfile vnetSubnetID(String vnetSubnetID) {
    this.vnetSubnetID = vnetSubnetID;
    return this;
  }

  /**
   * VNet SubnetID specifies the VNet&#39;s subnet identifier.
   * @return vnetSubnetID
   */
  @javax.annotation.Nullable
  public String getVnetSubnetID() {
    return vnetSubnetID;
  }

  public void setVnetSubnetID(String vnetSubnetID) {
    this.vnetSubnetID = vnetSubnetID;
  }


  public ManagedClusterAgentPoolProfile name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Unique name of the agent pool profile in the context of the subscription and resource group.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagedClusterAgentPoolProfile managedClusterAgentPoolProfile = (ManagedClusterAgentPoolProfile) o;
    return Objects.equals(this.availabilityZones, managedClusterAgentPoolProfile.availabilityZones) &&
        Objects.equals(this.count, managedClusterAgentPoolProfile.count) &&
        Objects.equals(this.enableAutoScaling, managedClusterAgentPoolProfile.enableAutoScaling) &&
        Objects.equals(this.maxCount, managedClusterAgentPoolProfile.maxCount) &&
        Objects.equals(this.maxPods, managedClusterAgentPoolProfile.maxPods) &&
        Objects.equals(this.minCount, managedClusterAgentPoolProfile.minCount) &&
        Objects.equals(this.orchestratorVersion, managedClusterAgentPoolProfile.orchestratorVersion) &&
        Objects.equals(this.osDiskSizeGB, managedClusterAgentPoolProfile.osDiskSizeGB) &&
        Objects.equals(this.osType, managedClusterAgentPoolProfile.osType) &&
        Objects.equals(this.provisioningState, managedClusterAgentPoolProfile.provisioningState) &&
        Objects.equals(this.type, managedClusterAgentPoolProfile.type) &&
        Objects.equals(this.vmSize, managedClusterAgentPoolProfile.vmSize) &&
        Objects.equals(this.vnetSubnetID, managedClusterAgentPoolProfile.vnetSubnetID) &&
        Objects.equals(this.name, managedClusterAgentPoolProfile.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityZones, count, enableAutoScaling, maxCount, maxPods, minCount, orchestratorVersion, osDiskSizeGB, osType, provisioningState, type, vmSize, vnetSubnetID, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagedClusterAgentPoolProfile {\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    enableAutoScaling: ").append(toIndentedString(enableAutoScaling)).append("\n");
    sb.append("    maxCount: ").append(toIndentedString(maxCount)).append("\n");
    sb.append("    maxPods: ").append(toIndentedString(maxPods)).append("\n");
    sb.append("    minCount: ").append(toIndentedString(minCount)).append("\n");
    sb.append("    orchestratorVersion: ").append(toIndentedString(orchestratorVersion)).append("\n");
    sb.append("    osDiskSizeGB: ").append(toIndentedString(osDiskSizeGB)).append("\n");
    sb.append("    osType: ").append(toIndentedString(osType)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vmSize: ").append(toIndentedString(vmSize)).append("\n");
    sb.append("    vnetSubnetID: ").append(toIndentedString(vnetSubnetID)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("availabilityZones");
    openapiFields.add("count");
    openapiFields.add("enableAutoScaling");
    openapiFields.add("maxCount");
    openapiFields.add("maxPods");
    openapiFields.add("minCount");
    openapiFields.add("orchestratorVersion");
    openapiFields.add("osDiskSizeGB");
    openapiFields.add("osType");
    openapiFields.add("provisioningState");
    openapiFields.add("type");
    openapiFields.add("vmSize");
    openapiFields.add("vnetSubnetID");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("count");
    openapiRequiredFields.add("vmSize");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ManagedClusterAgentPoolProfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ManagedClusterAgentPoolProfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ManagedClusterAgentPoolProfile is not found in the empty JSON string", ManagedClusterAgentPoolProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ManagedClusterAgentPoolProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ManagedClusterAgentPoolProfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ManagedClusterAgentPoolProfile.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("availabilityZones") != null && !jsonObj.get("availabilityZones").isJsonNull() && !jsonObj.get("availabilityZones").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `availabilityZones` to be an array in the JSON string but got `%s`", jsonObj.get("availabilityZones").toString()));
      }
      if ((jsonObj.get("orchestratorVersion") != null && !jsonObj.get("orchestratorVersion").isJsonNull()) && !jsonObj.get("orchestratorVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orchestratorVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orchestratorVersion").toString()));
      }
      // validate the optional field `osType`
      if (jsonObj.get("osType") != null && !jsonObj.get("osType").isJsonNull()) {
        OSType.validateJsonElement(jsonObj.get("osType"));
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        AgentPoolType.validateJsonElement(jsonObj.get("type"));
      }
      // validate the required field `vmSize`
      ContainerServiceVMSize.validateJsonElement(jsonObj.get("vmSize"));
      if ((jsonObj.get("vnetSubnetID") != null && !jsonObj.get("vnetSubnetID").isJsonNull()) && !jsonObj.get("vnetSubnetID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vnetSubnetID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vnetSubnetID").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ManagedClusterAgentPoolProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ManagedClusterAgentPoolProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ManagedClusterAgentPoolProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ManagedClusterAgentPoolProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<ManagedClusterAgentPoolProfile>() {
           @Override
           public void write(JsonWriter out, ManagedClusterAgentPoolProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ManagedClusterAgentPoolProfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ManagedClusterAgentPoolProfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ManagedClusterAgentPoolProfile
   * @throws IOException if the JSON string is invalid with respect to ManagedClusterAgentPoolProfile
   */
  public static ManagedClusterAgentPoolProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ManagedClusterAgentPoolProfile.class);
  }

  /**
   * Convert an instance of ManagedClusterAgentPoolProfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

