/*
 * ContainerServiceClient
 * The Container Service Client.
 *
 * The version of the OpenAPI document: 2019-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AADProfile specifies attributes for Azure Active Directory integration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:05:54.676455-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ManagedClusterAADProfile {
  public static final String SERIALIZED_NAME_CLIENT_APP_I_D = "clientAppID";
  @SerializedName(SERIALIZED_NAME_CLIENT_APP_I_D)
  private String clientAppID;

  public static final String SERIALIZED_NAME_SERVER_APP_I_D = "serverAppID";
  @SerializedName(SERIALIZED_NAME_SERVER_APP_I_D)
  private String serverAppID;

  public static final String SERIALIZED_NAME_SERVER_APP_SECRET = "serverAppSecret";
  @SerializedName(SERIALIZED_NAME_SERVER_APP_SECRET)
  private String serverAppSecret;

  public static final String SERIALIZED_NAME_TENANT_I_D = "tenantID";
  @SerializedName(SERIALIZED_NAME_TENANT_I_D)
  private String tenantID;

  public ManagedClusterAADProfile() {
  }

  public ManagedClusterAADProfile clientAppID(String clientAppID) {
    this.clientAppID = clientAppID;
    return this;
  }

  /**
   * The client AAD application ID.
   * @return clientAppID
   */
  @javax.annotation.Nonnull
  public String getClientAppID() {
    return clientAppID;
  }

  public void setClientAppID(String clientAppID) {
    this.clientAppID = clientAppID;
  }


  public ManagedClusterAADProfile serverAppID(String serverAppID) {
    this.serverAppID = serverAppID;
    return this;
  }

  /**
   * The server AAD application ID.
   * @return serverAppID
   */
  @javax.annotation.Nonnull
  public String getServerAppID() {
    return serverAppID;
  }

  public void setServerAppID(String serverAppID) {
    this.serverAppID = serverAppID;
  }


  public ManagedClusterAADProfile serverAppSecret(String serverAppSecret) {
    this.serverAppSecret = serverAppSecret;
    return this;
  }

  /**
   * The server AAD application secret.
   * @return serverAppSecret
   */
  @javax.annotation.Nullable
  public String getServerAppSecret() {
    return serverAppSecret;
  }

  public void setServerAppSecret(String serverAppSecret) {
    this.serverAppSecret = serverAppSecret;
  }


  public ManagedClusterAADProfile tenantID(String tenantID) {
    this.tenantID = tenantID;
    return this;
  }

  /**
   * The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
   * @return tenantID
   */
  @javax.annotation.Nullable
  public String getTenantID() {
    return tenantID;
  }

  public void setTenantID(String tenantID) {
    this.tenantID = tenantID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagedClusterAADProfile managedClusterAADProfile = (ManagedClusterAADProfile) o;
    return Objects.equals(this.clientAppID, managedClusterAADProfile.clientAppID) &&
        Objects.equals(this.serverAppID, managedClusterAADProfile.serverAppID) &&
        Objects.equals(this.serverAppSecret, managedClusterAADProfile.serverAppSecret) &&
        Objects.equals(this.tenantID, managedClusterAADProfile.tenantID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientAppID, serverAppID, serverAppSecret, tenantID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagedClusterAADProfile {\n");
    sb.append("    clientAppID: ").append(toIndentedString(clientAppID)).append("\n");
    sb.append("    serverAppID: ").append(toIndentedString(serverAppID)).append("\n");
    sb.append("    serverAppSecret: ").append(toIndentedString(serverAppSecret)).append("\n");
    sb.append("    tenantID: ").append(toIndentedString(tenantID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clientAppID");
    openapiFields.add("serverAppID");
    openapiFields.add("serverAppSecret");
    openapiFields.add("tenantID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("clientAppID");
    openapiRequiredFields.add("serverAppID");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ManagedClusterAADProfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ManagedClusterAADProfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ManagedClusterAADProfile is not found in the empty JSON string", ManagedClusterAADProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ManagedClusterAADProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ManagedClusterAADProfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ManagedClusterAADProfile.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("clientAppID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientAppID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientAppID").toString()));
      }
      if (!jsonObj.get("serverAppID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverAppID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverAppID").toString()));
      }
      if ((jsonObj.get("serverAppSecret") != null && !jsonObj.get("serverAppSecret").isJsonNull()) && !jsonObj.get("serverAppSecret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverAppSecret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverAppSecret").toString()));
      }
      if ((jsonObj.get("tenantID") != null && !jsonObj.get("tenantID").isJsonNull()) && !jsonObj.get("tenantID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ManagedClusterAADProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ManagedClusterAADProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ManagedClusterAADProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ManagedClusterAADProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<ManagedClusterAADProfile>() {
           @Override
           public void write(JsonWriter out, ManagedClusterAADProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ManagedClusterAADProfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ManagedClusterAADProfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ManagedClusterAADProfile
   * @throws IOException if the JSON string is invalid with respect to ManagedClusterAADProfile
   */
  public static ManagedClusterAADProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ManagedClusterAADProfile.class);
  }

  /**
   * Convert an instance of ManagedClusterAADProfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

