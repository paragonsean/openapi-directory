/**
 * SearchManagementClient
 * Client that can be used to manage Azure Search services and API keys.
 *
 * The version of the OpenAPI document: 2015-02-28
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdminKeyResult from './model/AdminKeyResult';
import ListQueryKeysResult from './model/ListQueryKeysResult';
import QueryKey from './model/QueryKey';
import Resource from './model/Resource';
import SearchServiceCreateOrUpdateParameters from './model/SearchServiceCreateOrUpdateParameters';
import SearchServiceListResult from './model/SearchServiceListResult';
import SearchServiceProperties from './model/SearchServiceProperties';
import SearchServiceReadableProperties from './model/SearchServiceReadableProperties';
import SearchServiceResource from './model/SearchServiceResource';
import Sku from './model/Sku';
import SubResource from './model/SubResource';
import AdminKeysApi from './api/AdminKeysApi';
import QueryKeysApi from './api/QueryKeysApi';
import ServicesApi from './api/ServicesApi';


/**
* Client that can be used to manage Azure Search services and API keys..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SearchManagementClient = require('index'); // See note below*.
* var xxxSvc = new SearchManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SearchManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SearchManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SearchManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-02-28
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdminKeyResult model constructor.
     * @property {module:model/AdminKeyResult}
     */
    AdminKeyResult,

    /**
     * The ListQueryKeysResult model constructor.
     * @property {module:model/ListQueryKeysResult}
     */
    ListQueryKeysResult,

    /**
     * The QueryKey model constructor.
     * @property {module:model/QueryKey}
     */
    QueryKey,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The SearchServiceCreateOrUpdateParameters model constructor.
     * @property {module:model/SearchServiceCreateOrUpdateParameters}
     */
    SearchServiceCreateOrUpdateParameters,

    /**
     * The SearchServiceListResult model constructor.
     * @property {module:model/SearchServiceListResult}
     */
    SearchServiceListResult,

    /**
     * The SearchServiceProperties model constructor.
     * @property {module:model/SearchServiceProperties}
     */
    SearchServiceProperties,

    /**
     * The SearchServiceReadableProperties model constructor.
     * @property {module:model/SearchServiceReadableProperties}
     */
    SearchServiceReadableProperties,

    /**
     * The SearchServiceResource model constructor.
     * @property {module:model/SearchServiceResource}
     */
    SearchServiceResource,

    /**
     * The Sku model constructor.
     * @property {module:model/Sku}
     */
    Sku,

    /**
     * The SubResource model constructor.
     * @property {module:model/SubResource}
     */
    SubResource,

    /**
    * The AdminKeysApi service constructor.
    * @property {module:api/AdminKeysApi}
    */
    AdminKeysApi,

    /**
    * The QueryKeysApi service constructor.
    * @property {module:api/QueryKeysApi}
    */
    QueryKeysApi,

    /**
    * The ServicesApi service constructor.
    * @property {module:api/ServicesApi}
    */
    ServicesApi
};
