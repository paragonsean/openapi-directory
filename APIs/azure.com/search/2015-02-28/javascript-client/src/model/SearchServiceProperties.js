/**
 * SearchManagementClient
 * Client that can be used to manage Azure Search services and API keys.
 *
 * The version of the OpenAPI document: 2015-02-28
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Sku from './Sku';

/**
 * The SearchServiceProperties model module.
 * @module model/SearchServiceProperties
 * @version 2015-02-28
 */
class SearchServiceProperties {
    /**
     * Constructs a new <code>SearchServiceProperties</code>.
     * Defines properties of an Azure Search service that can be modified.
     * @alias module:model/SearchServiceProperties
     */
    constructor() { 
        
        SearchServiceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchServiceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchServiceProperties} obj Optional instance to populate.
     * @return {module:model/SearchServiceProperties} The populated <code>SearchServiceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchServiceProperties();

            if (data.hasOwnProperty('partitionCount')) {
                obj['partitionCount'] = ApiClient.convertToType(data['partitionCount'], 'Number');
            }
            if (data.hasOwnProperty('replicaCount')) {
                obj['replicaCount'] = ApiClient.convertToType(data['replicaCount'], 'Number');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = Sku.constructFromObject(data['sku']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchServiceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchServiceProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `sku`
        if (data['sku']) { // data not null
          Sku.validateJSON(data['sku']);
        }

        return true;
    }


}



/**
 * The number of partitions in the Search service; if specified, it can be 1, 2, 3, 4, 6, or 12.
 * @member {Number} partitionCount
 */
SearchServiceProperties.prototype['partitionCount'] = undefined;

/**
 * The number of replicas in the Search service. If specified, it must be a value between 1 and 6 inclusive.
 * @member {Number} replicaCount
 */
SearchServiceProperties.prototype['replicaCount'] = undefined;

/**
 * @member {module:model/Sku} sku
 */
SearchServiceProperties.prototype['sku'] = undefined;






export default SearchServiceProperties;

