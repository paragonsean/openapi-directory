/*
 * SearchManagementClient
 * Client that can be used to manage Azure Search services and API keys.
 *
 * The version of the OpenAPI document: 2015-02-28
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SearchServiceCreateOrUpdateParameters;
import org.openapitools.client.model.SearchServiceListResult;
import org.openapitools.client.model.SearchServiceResource;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServicesApi
 */
@Disabled
public class ServicesApiTest {

    private final ServicesApi api = new ServicesApi();

    /**
     * Creates or updates a Search service in the given resource group. If the Search service already exists, all properties will be updated with the given values.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        SearchServiceCreateOrUpdateParameters parameters = null;
        SearchServiceResource response = api.servicesCreateOrUpdate(resourceGroupName, serviceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a Search service in the given resource group, along with its associated resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serviceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.servicesDelete(resourceGroupName, serviceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Returns a list of all Search services in the given resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicesListTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        SearchServiceListResult response = api.servicesList(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
