/**
 * RecoveryServicesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpgradeDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpgradeDetails::OAIUpgradeDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpgradeDetails::OAIUpgradeDetails() {
    this->initializeModel();
}

OAIUpgradeDetails::~OAIUpgradeDetails() {}

void OAIUpgradeDetails::initializeModel() {

    m_end_time_utc_isSet = false;
    m_end_time_utc_isValid = false;

    m_last_updated_time_utc_isSet = false;
    m_last_updated_time_utc_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_operation_id_isSet = false;
    m_operation_id_isValid = false;

    m_previous_resource_id_isSet = false;
    m_previous_resource_id_isValid = false;

    m_start_time_utc_isSet = false;
    m_start_time_utc_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_trigger_type_isSet = false;
    m_trigger_type_isValid = false;

    m_upgraded_resource_id_isSet = false;
    m_upgraded_resource_id_isValid = false;
}

void OAIUpgradeDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpgradeDetails::fromJsonObject(QJsonObject json) {

    m_end_time_utc_isValid = ::OpenAPI::fromJsonValue(m_end_time_utc, json[QString("endTimeUtc")]);
    m_end_time_utc_isSet = !json[QString("endTimeUtc")].isNull() && m_end_time_utc_isValid;

    m_last_updated_time_utc_isValid = ::OpenAPI::fromJsonValue(m_last_updated_time_utc, json[QString("lastUpdatedTimeUtc")]);
    m_last_updated_time_utc_isSet = !json[QString("lastUpdatedTimeUtc")].isNull() && m_last_updated_time_utc_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_operation_id_isValid = ::OpenAPI::fromJsonValue(m_operation_id, json[QString("operationId")]);
    m_operation_id_isSet = !json[QString("operationId")].isNull() && m_operation_id_isValid;

    m_previous_resource_id_isValid = ::OpenAPI::fromJsonValue(m_previous_resource_id, json[QString("previousResourceId")]);
    m_previous_resource_id_isSet = !json[QString("previousResourceId")].isNull() && m_previous_resource_id_isValid;

    m_start_time_utc_isValid = ::OpenAPI::fromJsonValue(m_start_time_utc, json[QString("startTimeUtc")]);
    m_start_time_utc_isSet = !json[QString("startTimeUtc")].isNull() && m_start_time_utc_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_trigger_type_isValid = ::OpenAPI::fromJsonValue(m_trigger_type, json[QString("triggerType")]);
    m_trigger_type_isSet = !json[QString("triggerType")].isNull() && m_trigger_type_isValid;

    m_upgraded_resource_id_isValid = ::OpenAPI::fromJsonValue(m_upgraded_resource_id, json[QString("upgradedResourceId")]);
    m_upgraded_resource_id_isSet = !json[QString("upgradedResourceId")].isNull() && m_upgraded_resource_id_isValid;
}

QString OAIUpgradeDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpgradeDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_utc_isSet) {
        obj.insert(QString("endTimeUtc"), ::OpenAPI::toJsonValue(m_end_time_utc));
    }
    if (m_last_updated_time_utc_isSet) {
        obj.insert(QString("lastUpdatedTimeUtc"), ::OpenAPI::toJsonValue(m_last_updated_time_utc));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_operation_id_isSet) {
        obj.insert(QString("operationId"), ::OpenAPI::toJsonValue(m_operation_id));
    }
    if (m_previous_resource_id_isSet) {
        obj.insert(QString("previousResourceId"), ::OpenAPI::toJsonValue(m_previous_resource_id));
    }
    if (m_start_time_utc_isSet) {
        obj.insert(QString("startTimeUtc"), ::OpenAPI::toJsonValue(m_start_time_utc));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_trigger_type_isSet) {
        obj.insert(QString("triggerType"), ::OpenAPI::toJsonValue(m_trigger_type));
    }
    if (m_upgraded_resource_id_isSet) {
        obj.insert(QString("upgradedResourceId"), ::OpenAPI::toJsonValue(m_upgraded_resource_id));
    }
    return obj;
}

QDateTime OAIUpgradeDetails::getEndTimeUtc() const {
    return m_end_time_utc;
}
void OAIUpgradeDetails::setEndTimeUtc(const QDateTime &end_time_utc) {
    m_end_time_utc = end_time_utc;
    m_end_time_utc_isSet = true;
}

bool OAIUpgradeDetails::is_end_time_utc_Set() const{
    return m_end_time_utc_isSet;
}

bool OAIUpgradeDetails::is_end_time_utc_Valid() const{
    return m_end_time_utc_isValid;
}

QDateTime OAIUpgradeDetails::getLastUpdatedTimeUtc() const {
    return m_last_updated_time_utc;
}
void OAIUpgradeDetails::setLastUpdatedTimeUtc(const QDateTime &last_updated_time_utc) {
    m_last_updated_time_utc = last_updated_time_utc;
    m_last_updated_time_utc_isSet = true;
}

bool OAIUpgradeDetails::is_last_updated_time_utc_Set() const{
    return m_last_updated_time_utc_isSet;
}

bool OAIUpgradeDetails::is_last_updated_time_utc_Valid() const{
    return m_last_updated_time_utc_isValid;
}

QString OAIUpgradeDetails::getMessage() const {
    return m_message;
}
void OAIUpgradeDetails::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIUpgradeDetails::is_message_Set() const{
    return m_message_isSet;
}

bool OAIUpgradeDetails::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIUpgradeDetails::getOperationId() const {
    return m_operation_id;
}
void OAIUpgradeDetails::setOperationId(const QString &operation_id) {
    m_operation_id = operation_id;
    m_operation_id_isSet = true;
}

bool OAIUpgradeDetails::is_operation_id_Set() const{
    return m_operation_id_isSet;
}

bool OAIUpgradeDetails::is_operation_id_Valid() const{
    return m_operation_id_isValid;
}

QString OAIUpgradeDetails::getPreviousResourceId() const {
    return m_previous_resource_id;
}
void OAIUpgradeDetails::setPreviousResourceId(const QString &previous_resource_id) {
    m_previous_resource_id = previous_resource_id;
    m_previous_resource_id_isSet = true;
}

bool OAIUpgradeDetails::is_previous_resource_id_Set() const{
    return m_previous_resource_id_isSet;
}

bool OAIUpgradeDetails::is_previous_resource_id_Valid() const{
    return m_previous_resource_id_isValid;
}

QDateTime OAIUpgradeDetails::getStartTimeUtc() const {
    return m_start_time_utc;
}
void OAIUpgradeDetails::setStartTimeUtc(const QDateTime &start_time_utc) {
    m_start_time_utc = start_time_utc;
    m_start_time_utc_isSet = true;
}

bool OAIUpgradeDetails::is_start_time_utc_Set() const{
    return m_start_time_utc_isSet;
}

bool OAIUpgradeDetails::is_start_time_utc_Valid() const{
    return m_start_time_utc_isValid;
}

QString OAIUpgradeDetails::getStatus() const {
    return m_status;
}
void OAIUpgradeDetails::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUpgradeDetails::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpgradeDetails::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIUpgradeDetails::getTriggerType() const {
    return m_trigger_type;
}
void OAIUpgradeDetails::setTriggerType(const QString &trigger_type) {
    m_trigger_type = trigger_type;
    m_trigger_type_isSet = true;
}

bool OAIUpgradeDetails::is_trigger_type_Set() const{
    return m_trigger_type_isSet;
}

bool OAIUpgradeDetails::is_trigger_type_Valid() const{
    return m_trigger_type_isValid;
}

QString OAIUpgradeDetails::getUpgradedResourceId() const {
    return m_upgraded_resource_id;
}
void OAIUpgradeDetails::setUpgradedResourceId(const QString &upgraded_resource_id) {
    m_upgraded_resource_id = upgraded_resource_id;
    m_upgraded_resource_id_isSet = true;
}

bool OAIUpgradeDetails::is_upgraded_resource_id_Set() const{
    return m_upgraded_resource_id_isSet;
}

bool OAIUpgradeDetails::is_upgraded_resource_id_Valid() const{
    return m_upgraded_resource_id_isValid;
}

bool OAIUpgradeDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upgraded_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpgradeDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
