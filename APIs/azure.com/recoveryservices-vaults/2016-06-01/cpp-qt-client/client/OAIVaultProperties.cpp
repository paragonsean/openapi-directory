/**
 * RecoveryServicesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVaultProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVaultProperties::OAIVaultProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVaultProperties::OAIVaultProperties() {
    this->initializeModel();
}

OAIVaultProperties::~OAIVaultProperties() {}

void OAIVaultProperties::initializeModel() {

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_upgrade_details_isSet = false;
    m_upgrade_details_isValid = false;
}

void OAIVaultProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVaultProperties::fromJsonObject(QJsonObject json) {

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_upgrade_details_isValid = ::OpenAPI::fromJsonValue(m_upgrade_details, json[QString("upgradeDetails")]);
    m_upgrade_details_isSet = !json[QString("upgradeDetails")].isNull() && m_upgrade_details_isValid;
}

QString OAIVaultProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVaultProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_upgrade_details.isSet()) {
        obj.insert(QString("upgradeDetails"), ::OpenAPI::toJsonValue(m_upgrade_details));
    }
    return obj;
}

QString OAIVaultProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIVaultProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIVaultProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIVaultProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

OAIUpgradeDetails OAIVaultProperties::getUpgradeDetails() const {
    return m_upgrade_details;
}
void OAIVaultProperties::setUpgradeDetails(const OAIUpgradeDetails &upgrade_details) {
    m_upgrade_details = upgrade_details;
    m_upgrade_details_isSet = true;
}

bool OAIVaultProperties::is_upgrade_details_Set() const{
    return m_upgrade_details_isSet;
}

bool OAIVaultProperties::is_upgrade_details_Valid() const{
    return m_upgrade_details_isValid;
}

bool OAIVaultProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upgrade_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVaultProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
