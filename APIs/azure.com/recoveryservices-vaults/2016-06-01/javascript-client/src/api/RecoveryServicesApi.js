/**
 * RecoveryServicesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CheckNameAvailabilityParameters from '../model/CheckNameAvailabilityParameters';
import CheckNameAvailabilityResultResource from '../model/CheckNameAvailabilityResultResource';

/**
* RecoveryServices service.
* @module api/RecoveryServicesApi
* @version 2016-06-01
*/
export default class RecoveryServicesApi {

    /**
    * Constructs a new RecoveryServicesApi. 
    * @alias module:api/RecoveryServicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the recoveryServicesCheckNameAvailability operation.
     * @callback module:api/RecoveryServicesApi~recoveryServicesCheckNameAvailabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CheckNameAvailabilityResultResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * API to check for resource name availability.  A name is available if no other resource exists that has the same SubscriptionId, Resource Name and Type  or if one or more such resources exist, each of these must be GC'd and their time of deletion be more than 24 Hours Ago
     * @param {String} subscriptionId The subscription Id.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} apiVersion Client Api Version.
     * @param {String} location Location of the resource
     * @param {module:model/CheckNameAvailabilityParameters} input Contains information about Resource type and Resource name
     * @param {module:api/RecoveryServicesApi~recoveryServicesCheckNameAvailabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CheckNameAvailabilityResultResource}
     */
    recoveryServicesCheckNameAvailability(subscriptionId, resourceGroupName, apiVersion, location, input, callback) {
      let postBody = input;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling recoveryServicesCheckNameAvailability");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling recoveryServicesCheckNameAvailability");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling recoveryServicesCheckNameAvailability");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling recoveryServicesCheckNameAvailability");
      }
      // verify the required parameter 'input' is set
      if (input === undefined || input === null) {
        throw new Error("Missing the required parameter 'input' when calling recoveryServicesCheckNameAvailability");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CheckNameAvailabilityResultResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/locations/{location}/checkNameAvailability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
