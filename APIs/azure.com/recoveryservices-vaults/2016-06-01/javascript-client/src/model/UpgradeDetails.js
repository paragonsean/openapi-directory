/**
 * RecoveryServicesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpgradeDetails model module.
 * @module model/UpgradeDetails
 * @version 2016-06-01
 */
class UpgradeDetails {
    /**
     * Constructs a new <code>UpgradeDetails</code>.
     * Details for upgrading vault.
     * @alias module:model/UpgradeDetails
     */
    constructor() { 
        
        UpgradeDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpgradeDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpgradeDetails} obj Optional instance to populate.
     * @return {module:model/UpgradeDetails} The populated <code>UpgradeDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpgradeDetails();

            if (data.hasOwnProperty('endTimeUtc')) {
                obj['endTimeUtc'] = ApiClient.convertToType(data['endTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdatedTimeUtc')) {
                obj['lastUpdatedTimeUtc'] = ApiClient.convertToType(data['lastUpdatedTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('operationId')) {
                obj['operationId'] = ApiClient.convertToType(data['operationId'], 'String');
            }
            if (data.hasOwnProperty('previousResourceId')) {
                obj['previousResourceId'] = ApiClient.convertToType(data['previousResourceId'], 'String');
            }
            if (data.hasOwnProperty('startTimeUtc')) {
                obj['startTimeUtc'] = ApiClient.convertToType(data['startTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('triggerType')) {
                obj['triggerType'] = ApiClient.convertToType(data['triggerType'], 'String');
            }
            if (data.hasOwnProperty('upgradedResourceId')) {
                obj['upgradedResourceId'] = ApiClient.convertToType(data['upgradedResourceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpgradeDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpgradeDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['operationId'] && !(typeof data['operationId'] === 'string' || data['operationId'] instanceof String)) {
            throw new Error("Expected the field `operationId` to be a primitive type in the JSON string but got " + data['operationId']);
        }
        // ensure the json data is a string
        if (data['previousResourceId'] && !(typeof data['previousResourceId'] === 'string' || data['previousResourceId'] instanceof String)) {
            throw new Error("Expected the field `previousResourceId` to be a primitive type in the JSON string but got " + data['previousResourceId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['triggerType'] && !(typeof data['triggerType'] === 'string' || data['triggerType'] instanceof String)) {
            throw new Error("Expected the field `triggerType` to be a primitive type in the JSON string but got " + data['triggerType']);
        }
        // ensure the json data is a string
        if (data['upgradedResourceId'] && !(typeof data['upgradedResourceId'] === 'string' || data['upgradedResourceId'] instanceof String)) {
            throw new Error("Expected the field `upgradedResourceId` to be a primitive type in the JSON string but got " + data['upgradedResourceId']);
        }

        return true;
    }


}



/**
 * UTC time at which the upgrade operation has ended.
 * @member {Date} endTimeUtc
 */
UpgradeDetails.prototype['endTimeUtc'] = undefined;

/**
 * UTC time at which the upgrade operation status was last updated.
 * @member {Date} lastUpdatedTimeUtc
 */
UpgradeDetails.prototype['lastUpdatedTimeUtc'] = undefined;

/**
 * Message to the user containing information about the upgrade operation.
 * @member {String} message
 */
UpgradeDetails.prototype['message'] = undefined;

/**
 * ID of the vault upgrade operation.
 * @member {String} operationId
 */
UpgradeDetails.prototype['operationId'] = undefined;

/**
 * Resource ID of the vault before the upgrade.
 * @member {String} previousResourceId
 */
UpgradeDetails.prototype['previousResourceId'] = undefined;

/**
 * UTC time at which the upgrade operation has started.
 * @member {Date} startTimeUtc
 */
UpgradeDetails.prototype['startTimeUtc'] = undefined;

/**
 * Status of the vault upgrade operation.
 * @member {module:model/UpgradeDetails.StatusEnum} status
 */
UpgradeDetails.prototype['status'] = undefined;

/**
 * The way the vault upgrade was triggered.
 * @member {module:model/UpgradeDetails.TriggerTypeEnum} triggerType
 */
UpgradeDetails.prototype['triggerType'] = undefined;

/**
 * Resource ID of the upgraded vault.
 * @member {String} upgradedResourceId
 */
UpgradeDetails.prototype['upgradedResourceId'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
UpgradeDetails['StatusEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Upgraded"
     * @const
     */
    "Upgraded": "Upgraded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed"
};


/**
 * Allowed values for the <code>triggerType</code> property.
 * @enum {String}
 * @readonly
 */
UpgradeDetails['TriggerTypeEnum'] = {

    /**
     * value: "UserTriggered"
     * @const
     */
    "UserTriggered": "UserTriggered",

    /**
     * value: "ForcedUpgrade"
     * @const
     */
    "ForcedUpgrade": "ForcedUpgrade"
};



export default UpgradeDetails;

