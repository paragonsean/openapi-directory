/**
 * RecoveryServicesClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VaultExtendedInfo model module.
 * @module model/VaultExtendedInfo
 * @version 2016-06-01
 */
class VaultExtendedInfo {
    /**
     * Constructs a new <code>VaultExtendedInfo</code>.
     * Vault extended information.
     * @alias module:model/VaultExtendedInfo
     */
    constructor() { 
        
        VaultExtendedInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VaultExtendedInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VaultExtendedInfo} obj Optional instance to populate.
     * @return {module:model/VaultExtendedInfo} The populated <code>VaultExtendedInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VaultExtendedInfo();

            if (data.hasOwnProperty('algorithm')) {
                obj['algorithm'] = ApiClient.convertToType(data['algorithm'], 'String');
            }
            if (data.hasOwnProperty('encryptionKey')) {
                obj['encryptionKey'] = ApiClient.convertToType(data['encryptionKey'], 'String');
            }
            if (data.hasOwnProperty('encryptionKeyThumbprint')) {
                obj['encryptionKeyThumbprint'] = ApiClient.convertToType(data['encryptionKeyThumbprint'], 'String');
            }
            if (data.hasOwnProperty('integrityKey')) {
                obj['integrityKey'] = ApiClient.convertToType(data['integrityKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VaultExtendedInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VaultExtendedInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['algorithm'] && !(typeof data['algorithm'] === 'string' || data['algorithm'] instanceof String)) {
            throw new Error("Expected the field `algorithm` to be a primitive type in the JSON string but got " + data['algorithm']);
        }
        // ensure the json data is a string
        if (data['encryptionKey'] && !(typeof data['encryptionKey'] === 'string' || data['encryptionKey'] instanceof String)) {
            throw new Error("Expected the field `encryptionKey` to be a primitive type in the JSON string but got " + data['encryptionKey']);
        }
        // ensure the json data is a string
        if (data['encryptionKeyThumbprint'] && !(typeof data['encryptionKeyThumbprint'] === 'string' || data['encryptionKeyThumbprint'] instanceof String)) {
            throw new Error("Expected the field `encryptionKeyThumbprint` to be a primitive type in the JSON string but got " + data['encryptionKeyThumbprint']);
        }
        // ensure the json data is a string
        if (data['integrityKey'] && !(typeof data['integrityKey'] === 'string' || data['integrityKey'] instanceof String)) {
            throw new Error("Expected the field `integrityKey` to be a primitive type in the JSON string but got " + data['integrityKey']);
        }

        return true;
    }


}



/**
 * Algorithm for Vault ExtendedInfo
 * @member {String} algorithm
 */
VaultExtendedInfo.prototype['algorithm'] = undefined;

/**
 * Encryption key.
 * @member {String} encryptionKey
 */
VaultExtendedInfo.prototype['encryptionKey'] = undefined;

/**
 * Encryption key thumbprint.
 * @member {String} encryptionKeyThumbprint
 */
VaultExtendedInfo.prototype['encryptionKeyThumbprint'] = undefined;

/**
 * Integrity key.
 * @member {String} integrityKey
 */
VaultExtendedInfo.prototype['integrityKey'] = undefined;






export default VaultExtendedInfo;

