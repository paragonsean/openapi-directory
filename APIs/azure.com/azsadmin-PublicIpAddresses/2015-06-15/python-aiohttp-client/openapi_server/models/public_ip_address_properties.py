# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PublicIPAddressProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allocation_method: str=None, ip_address: str=None, ip_pool: str=None, provisioning_state: str=None, subscription_id: str=None, tenant_resource_uri: str=None):
        """PublicIPAddressProperties - a model defined in OpenAPI

        :param allocation_method: The allocation_method of this PublicIPAddressProperties.
        :param ip_address: The ip_address of this PublicIPAddressProperties.
        :param ip_pool: The ip_pool of this PublicIPAddressProperties.
        :param provisioning_state: The provisioning_state of this PublicIPAddressProperties.
        :param subscription_id: The subscription_id of this PublicIPAddressProperties.
        :param tenant_resource_uri: The tenant_resource_uri of this PublicIPAddressProperties.
        """
        self.openapi_types = {
            'allocation_method': str,
            'ip_address': str,
            'ip_pool': str,
            'provisioning_state': str,
            'subscription_id': str,
            'tenant_resource_uri': str
        }

        self.attribute_map = {
            'allocation_method': 'allocationMethod',
            'ip_address': 'ipAddress',
            'ip_pool': 'ipPool',
            'provisioning_state': 'provisioningState',
            'subscription_id': 'subscriptionId',
            'tenant_resource_uri': 'tenantResourceUri'
        }

        self._allocation_method = allocation_method
        self._ip_address = ip_address
        self._ip_pool = ip_pool
        self._provisioning_state = provisioning_state
        self._subscription_id = subscription_id
        self._tenant_resource_uri = tenant_resource_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublicIPAddressProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublicIPAddressProperties of this PublicIPAddressProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allocation_method(self):
        """Gets the allocation_method of this PublicIPAddressProperties.

        The allocation method.

        :return: The allocation_method of this PublicIPAddressProperties.
        :rtype: str
        """
        return self._allocation_method

    @allocation_method.setter
    def allocation_method(self, allocation_method):
        """Sets the allocation_method of this PublicIPAddressProperties.

        The allocation method.

        :param allocation_method: The allocation_method of this PublicIPAddressProperties.
        :type allocation_method: str
        """
        allowed_values = ["Dynamic", "Static"]  # noqa: E501
        if allocation_method not in allowed_values:
            raise ValueError(
                "Invalid value for `allocation_method` ({0}), must be one of {1}"
                .format(allocation_method, allowed_values)
            )

        self._allocation_method = allocation_method

    @property
    def ip_address(self):
        """Gets the ip_address of this PublicIPAddressProperties.

        The IP address.

        :return: The ip_address of this PublicIPAddressProperties.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this PublicIPAddressProperties.

        The IP address.

        :param ip_address: The ip_address of this PublicIPAddressProperties.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def ip_pool(self):
        """Gets the ip_pool of this PublicIPAddressProperties.

        The IP pool.

        :return: The ip_pool of this PublicIPAddressProperties.
        :rtype: str
        """
        return self._ip_pool

    @ip_pool.setter
    def ip_pool(self, ip_pool):
        """Sets the ip_pool of this PublicIPAddressProperties.

        The IP pool.

        :param ip_pool: The ip_pool of this PublicIPAddressProperties.
        :type ip_pool: str
        """

        self._ip_pool = ip_pool

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this PublicIPAddressProperties.

        The provisioning state.

        :return: The provisioning_state of this PublicIPAddressProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this PublicIPAddressProperties.

        The provisioning state.

        :param provisioning_state: The provisioning_state of this PublicIPAddressProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def subscription_id(self):
        """Gets the subscription_id of this PublicIPAddressProperties.

        The subscription ID.

        :return: The subscription_id of this PublicIPAddressProperties.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this PublicIPAddressProperties.

        The subscription ID.

        :param subscription_id: The subscription_id of this PublicIPAddressProperties.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def tenant_resource_uri(self):
        """Gets the tenant_resource_uri of this PublicIPAddressProperties.

        The tenant resource URI.

        :return: The tenant_resource_uri of this PublicIPAddressProperties.
        :rtype: str
        """
        return self._tenant_resource_uri

    @tenant_resource_uri.setter
    def tenant_resource_uri(self, tenant_resource_uri):
        """Sets the tenant_resource_uri of this PublicIPAddressProperties.

        The tenant resource URI.

        :param tenant_resource_uri: The tenant_resource_uri of this PublicIPAddressProperties.
        :type tenant_resource_uri: str
        """

        self._tenant_resource_uri = tenant_resource_uri
