/**
 * AzureAnalysisServices
 * The Azure Analysis Services Web API provides a RESTful set of web services that enables users to create, retrieve, update, and delete Analysis Services servers
 *
 * The version of the OpenAPI document: 2016-05-16
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AnalysisServicesServer from './model/AnalysisServicesServer';
import AnalysisServicesServerMutableProperties from './model/AnalysisServicesServerMutableProperties';
import AnalysisServicesServerProperties from './model/AnalysisServicesServerProperties';
import AnalysisServicesServerUpdateParameters from './model/AnalysisServicesServerUpdateParameters';
import AnalysisServicesServers from './model/AnalysisServicesServers';
import CheckServerNameAvailabilityParameters from './model/CheckServerNameAvailabilityParameters';
import CheckServerNameAvailabilityResult from './model/CheckServerNameAvailabilityResult';
import ErrorResponse from './model/ErrorResponse';
import OperationStatus from './model/OperationStatus';
import Resource from './model/Resource';
import ResourceSku from './model/ResourceSku';
import ServerAdministrators from './model/ServerAdministrators';
import SkuDetailsForExistingResource from './model/SkuDetailsForExistingResource';
import SkuEnumerationForExistingResourceResult from './model/SkuEnumerationForExistingResourceResult';
import SkuEnumerationForNewResourceResult from './model/SkuEnumerationForNewResourceResult';
import DefaultApi from './api/DefaultApi';
import ServersApi from './api/ServersApi';


/**
* The Azure Analysis Services Web API provides a RESTful set of web services that enables users to create, retrieve, update, and delete Analysis Services servers.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AzureAnalysisServices = require('index'); // See note below*.
* var xxxSvc = new AzureAnalysisServices.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AzureAnalysisServices.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AzureAnalysisServices.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AzureAnalysisServices.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2016-05-16
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AnalysisServicesServer model constructor.
     * @property {module:model/AnalysisServicesServer}
     */
    AnalysisServicesServer,

    /**
     * The AnalysisServicesServerMutableProperties model constructor.
     * @property {module:model/AnalysisServicesServerMutableProperties}
     */
    AnalysisServicesServerMutableProperties,

    /**
     * The AnalysisServicesServerProperties model constructor.
     * @property {module:model/AnalysisServicesServerProperties}
     */
    AnalysisServicesServerProperties,

    /**
     * The AnalysisServicesServerUpdateParameters model constructor.
     * @property {module:model/AnalysisServicesServerUpdateParameters}
     */
    AnalysisServicesServerUpdateParameters,

    /**
     * The AnalysisServicesServers model constructor.
     * @property {module:model/AnalysisServicesServers}
     */
    AnalysisServicesServers,

    /**
     * The CheckServerNameAvailabilityParameters model constructor.
     * @property {module:model/CheckServerNameAvailabilityParameters}
     */
    CheckServerNameAvailabilityParameters,

    /**
     * The CheckServerNameAvailabilityResult model constructor.
     * @property {module:model/CheckServerNameAvailabilityResult}
     */
    CheckServerNameAvailabilityResult,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The OperationStatus model constructor.
     * @property {module:model/OperationStatus}
     */
    OperationStatus,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ResourceSku model constructor.
     * @property {module:model/ResourceSku}
     */
    ResourceSku,

    /**
     * The ServerAdministrators model constructor.
     * @property {module:model/ServerAdministrators}
     */
    ServerAdministrators,

    /**
     * The SkuDetailsForExistingResource model constructor.
     * @property {module:model/SkuDetailsForExistingResource}
     */
    SkuDetailsForExistingResource,

    /**
     * The SkuEnumerationForExistingResourceResult model constructor.
     * @property {module:model/SkuEnumerationForExistingResourceResult}
     */
    SkuEnumerationForExistingResourceResult,

    /**
     * The SkuEnumerationForNewResourceResult model constructor.
     * @property {module:model/SkuEnumerationForNewResourceResult}
     */
    SkuEnumerationForNewResourceResult,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi,

    /**
    * The ServersApi service constructor.
    * @property {module:api/ServersApi}
    */
    ServersApi
};
