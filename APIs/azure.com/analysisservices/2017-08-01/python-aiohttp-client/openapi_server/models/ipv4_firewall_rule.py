# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IPv4FirewallRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, firewall_rule_name: str=None, range_end: str=None, range_start: str=None):
        """IPv4FirewallRule - a model defined in OpenAPI

        :param firewall_rule_name: The firewall_rule_name of this IPv4FirewallRule.
        :param range_end: The range_end of this IPv4FirewallRule.
        :param range_start: The range_start of this IPv4FirewallRule.
        """
        self.openapi_types = {
            'firewall_rule_name': str,
            'range_end': str,
            'range_start': str
        }

        self.attribute_map = {
            'firewall_rule_name': 'firewallRuleName',
            'range_end': 'rangeEnd',
            'range_start': 'rangeStart'
        }

        self._firewall_rule_name = firewall_rule_name
        self._range_end = range_end
        self._range_start = range_start

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IPv4FirewallRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IPv4FirewallRule of this IPv4FirewallRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def firewall_rule_name(self):
        """Gets the firewall_rule_name of this IPv4FirewallRule.

        The rule name.

        :return: The firewall_rule_name of this IPv4FirewallRule.
        :rtype: str
        """
        return self._firewall_rule_name

    @firewall_rule_name.setter
    def firewall_rule_name(self, firewall_rule_name):
        """Sets the firewall_rule_name of this IPv4FirewallRule.

        The rule name.

        :param firewall_rule_name: The firewall_rule_name of this IPv4FirewallRule.
        :type firewall_rule_name: str
        """

        self._firewall_rule_name = firewall_rule_name

    @property
    def range_end(self):
        """Gets the range_end of this IPv4FirewallRule.

        The end range of IPv4.

        :return: The range_end of this IPv4FirewallRule.
        :rtype: str
        """
        return self._range_end

    @range_end.setter
    def range_end(self, range_end):
        """Sets the range_end of this IPv4FirewallRule.

        The end range of IPv4.

        :param range_end: The range_end of this IPv4FirewallRule.
        :type range_end: str
        """

        self._range_end = range_end

    @property
    def range_start(self):
        """Gets the range_start of this IPv4FirewallRule.

        The start range of IPv4.

        :return: The range_start of this IPv4FirewallRule.
        :rtype: str
        """
        return self._range_start

    @range_start.setter
    def range_start(self, range_start):
        """Sets the range_start of this IPv4FirewallRule.

        The start range of IPv4.

        :param range_start: The range_start of this IPv4FirewallRule.
        :type range_start: str
        """

        self._range_start = range_start
