# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ipv4_firewall_rule import IPv4FirewallRule
from openapi_server import util


class IPv4FirewallSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_power_bi_service: bool=None, firewall_rules: List[IPv4FirewallRule]=None):
        """IPv4FirewallSettings - a model defined in OpenAPI

        :param enable_power_bi_service: The enable_power_bi_service of this IPv4FirewallSettings.
        :param firewall_rules: The firewall_rules of this IPv4FirewallSettings.
        """
        self.openapi_types = {
            'enable_power_bi_service': bool,
            'firewall_rules': List[IPv4FirewallRule]
        }

        self.attribute_map = {
            'enable_power_bi_service': 'enablePowerBIService',
            'firewall_rules': 'firewallRules'
        }

        self._enable_power_bi_service = enable_power_bi_service
        self._firewall_rules = firewall_rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IPv4FirewallSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IPv4FirewallSettings of this IPv4FirewallSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_power_bi_service(self):
        """Gets the enable_power_bi_service of this IPv4FirewallSettings.

        The indicator of enabling PBI service.

        :return: The enable_power_bi_service of this IPv4FirewallSettings.
        :rtype: bool
        """
        return self._enable_power_bi_service

    @enable_power_bi_service.setter
    def enable_power_bi_service(self, enable_power_bi_service):
        """Sets the enable_power_bi_service of this IPv4FirewallSettings.

        The indicator of enabling PBI service.

        :param enable_power_bi_service: The enable_power_bi_service of this IPv4FirewallSettings.
        :type enable_power_bi_service: bool
        """

        self._enable_power_bi_service = enable_power_bi_service

    @property
    def firewall_rules(self):
        """Gets the firewall_rules of this IPv4FirewallSettings.

        An array of firewall rules.

        :return: The firewall_rules of this IPv4FirewallSettings.
        :rtype: List[IPv4FirewallRule]
        """
        return self._firewall_rules

    @firewall_rules.setter
    def firewall_rules(self, firewall_rules):
        """Sets the firewall_rules of this IPv4FirewallSettings.

        An array of firewall rules.

        :param firewall_rules: The firewall_rules of this IPv4FirewallSettings.
        :type firewall_rules: List[IPv4FirewallRule]
        """

        self._firewall_rules = firewall_rules
