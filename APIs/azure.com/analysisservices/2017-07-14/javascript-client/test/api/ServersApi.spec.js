/**
 * AzureAnalysisServices
 * The Azure Analysis Services Web API provides a RESTful set of web services that enables users to create, retrieve, update, and delete Analysis Services servers
 *
 * The version of the OpenAPI document: 2017-07-14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureAnalysisServices);
  }
}(this, function(expect, AzureAnalysisServices) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureAnalysisServices.ServersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ServersApi', function() {
    describe('serversCheckNameAvailability', function() {
      it('should call serversCheckNameAvailability successfully', function(done) {
        //uncomment below and update the code to test serversCheckNameAvailability
        //instance.serversCheckNameAvailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversCreate', function() {
      it('should call serversCreate successfully', function(done) {
        //uncomment below and update the code to test serversCreate
        //instance.serversCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversDelete', function() {
      it('should call serversDelete successfully', function(done) {
        //uncomment below and update the code to test serversDelete
        //instance.serversDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversDissociateGateway', function() {
      it('should call serversDissociateGateway successfully', function(done) {
        //uncomment below and update the code to test serversDissociateGateway
        //instance.serversDissociateGateway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversGetDetails', function() {
      it('should call serversGetDetails successfully', function(done) {
        //uncomment below and update the code to test serversGetDetails
        //instance.serversGetDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversList', function() {
      it('should call serversList successfully', function(done) {
        //uncomment below and update the code to test serversList
        //instance.serversList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversListByResourceGroup', function() {
      it('should call serversListByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test serversListByResourceGroup
        //instance.serversListByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversListGatewayStatus', function() {
      it('should call serversListGatewayStatus successfully', function(done) {
        //uncomment below and update the code to test serversListGatewayStatus
        //instance.serversListGatewayStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversListOperationResults', function() {
      it('should call serversListOperationResults successfully', function(done) {
        //uncomment below and update the code to test serversListOperationResults
        //instance.serversListOperationResults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversListOperationStatuses', function() {
      it('should call serversListOperationStatuses successfully', function(done) {
        //uncomment below and update the code to test serversListOperationStatuses
        //instance.serversListOperationStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversListSkusForExisting', function() {
      it('should call serversListSkusForExisting successfully', function(done) {
        //uncomment below and update the code to test serversListSkusForExisting
        //instance.serversListSkusForExisting(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversResume', function() {
      it('should call serversResume successfully', function(done) {
        //uncomment below and update the code to test serversResume
        //instance.serversResume(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversSuspend', function() {
      it('should call serversSuspend successfully', function(done) {
        //uncomment below and update the code to test serversSuspend
        //instance.serversSuspend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serversUpdate', function() {
      it('should call serversUpdate successfully', function(done) {
        //uncomment below and update the code to test serversUpdate
        //instance.serversUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
