/**
 * AzureAnalysisServices
 * The Azure Analysis Services Web API provides a RESTful set of web services that enables users to create, retrieve, update, and delete Analysis Services servers
 *
 * The version of the OpenAPI document: 2017-07-14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GatewayDetails model module.
 * @module model/GatewayDetails
 * @version 2017-07-14
 */
class GatewayDetails {
    /**
     * Constructs a new <code>GatewayDetails</code>.
     * The gateway details.
     * @alias module:model/GatewayDetails
     */
    constructor() { 
        
        GatewayDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GatewayDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GatewayDetails} obj Optional instance to populate.
     * @return {module:model/GatewayDetails} The populated <code>GatewayDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GatewayDetails();

            if (data.hasOwnProperty('dmtsClusterUri')) {
                obj['dmtsClusterUri'] = ApiClient.convertToType(data['dmtsClusterUri'], 'String');
            }
            if (data.hasOwnProperty('gatewayObjectId')) {
                obj['gatewayObjectId'] = ApiClient.convertToType(data['gatewayObjectId'], 'String');
            }
            if (data.hasOwnProperty('gatewayResourceId')) {
                obj['gatewayResourceId'] = ApiClient.convertToType(data['gatewayResourceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GatewayDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GatewayDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dmtsClusterUri'] && !(typeof data['dmtsClusterUri'] === 'string' || data['dmtsClusterUri'] instanceof String)) {
            throw new Error("Expected the field `dmtsClusterUri` to be a primitive type in the JSON string but got " + data['dmtsClusterUri']);
        }
        // ensure the json data is a string
        if (data['gatewayObjectId'] && !(typeof data['gatewayObjectId'] === 'string' || data['gatewayObjectId'] instanceof String)) {
            throw new Error("Expected the field `gatewayObjectId` to be a primitive type in the JSON string but got " + data['gatewayObjectId']);
        }
        // ensure the json data is a string
        if (data['gatewayResourceId'] && !(typeof data['gatewayResourceId'] === 'string' || data['gatewayResourceId'] instanceof String)) {
            throw new Error("Expected the field `gatewayResourceId` to be a primitive type in the JSON string but got " + data['gatewayResourceId']);
        }

        return true;
    }


}



/**
 * Uri of the DMTS cluster.
 * @member {String} dmtsClusterUri
 */
GatewayDetails.prototype['dmtsClusterUri'] = undefined;

/**
 * Gateway object id from in the DMTS cluster for the gateway resource.
 * @member {String} gatewayObjectId
 */
GatewayDetails.prototype['gatewayObjectId'] = undefined;

/**
 * Gateway resource to be associated with the server.
 * @member {String} gatewayResourceId
 */
GatewayDetails.prototype['gatewayResourceId'] = undefined;






export default GatewayDetails;

