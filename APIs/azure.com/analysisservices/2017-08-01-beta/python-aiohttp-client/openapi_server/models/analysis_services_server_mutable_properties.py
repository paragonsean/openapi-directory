# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gateway_details import GatewayDetails
from openapi_server.models.ipv4_firewall_settings import IPv4FirewallSettings
from openapi_server.models.server_administrators import ServerAdministrators
from openapi_server import util


class AnalysisServicesServerMutableProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, as_administrators: ServerAdministrators=None, backup_blob_container_uri: str=None, gateway_details: GatewayDetails=None, ip_v4_firewall_settings: IPv4FirewallSettings=None, querypool_connection_mode: str='All'):
        """AnalysisServicesServerMutableProperties - a model defined in OpenAPI

        :param as_administrators: The as_administrators of this AnalysisServicesServerMutableProperties.
        :param backup_blob_container_uri: The backup_blob_container_uri of this AnalysisServicesServerMutableProperties.
        :param gateway_details: The gateway_details of this AnalysisServicesServerMutableProperties.
        :param ip_v4_firewall_settings: The ip_v4_firewall_settings of this AnalysisServicesServerMutableProperties.
        :param querypool_connection_mode: The querypool_connection_mode of this AnalysisServicesServerMutableProperties.
        """
        self.openapi_types = {
            'as_administrators': ServerAdministrators,
            'backup_blob_container_uri': str,
            'gateway_details': GatewayDetails,
            'ip_v4_firewall_settings': IPv4FirewallSettings,
            'querypool_connection_mode': str
        }

        self.attribute_map = {
            'as_administrators': 'asAdministrators',
            'backup_blob_container_uri': 'backupBlobContainerUri',
            'gateway_details': 'gatewayDetails',
            'ip_v4_firewall_settings': 'ipV4FirewallSettings',
            'querypool_connection_mode': 'querypoolConnectionMode'
        }

        self._as_administrators = as_administrators
        self._backup_blob_container_uri = backup_blob_container_uri
        self._gateway_details = gateway_details
        self._ip_v4_firewall_settings = ip_v4_firewall_settings
        self._querypool_connection_mode = querypool_connection_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalysisServicesServerMutableProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalysisServicesServerMutableProperties of this AnalysisServicesServerMutableProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def as_administrators(self):
        """Gets the as_administrators of this AnalysisServicesServerMutableProperties.


        :return: The as_administrators of this AnalysisServicesServerMutableProperties.
        :rtype: ServerAdministrators
        """
        return self._as_administrators

    @as_administrators.setter
    def as_administrators(self, as_administrators):
        """Sets the as_administrators of this AnalysisServicesServerMutableProperties.


        :param as_administrators: The as_administrators of this AnalysisServicesServerMutableProperties.
        :type as_administrators: ServerAdministrators
        """

        self._as_administrators = as_administrators

    @property
    def backup_blob_container_uri(self):
        """Gets the backup_blob_container_uri of this AnalysisServicesServerMutableProperties.

        The SAS container URI to the backup container.

        :return: The backup_blob_container_uri of this AnalysisServicesServerMutableProperties.
        :rtype: str
        """
        return self._backup_blob_container_uri

    @backup_blob_container_uri.setter
    def backup_blob_container_uri(self, backup_blob_container_uri):
        """Sets the backup_blob_container_uri of this AnalysisServicesServerMutableProperties.

        The SAS container URI to the backup container.

        :param backup_blob_container_uri: The backup_blob_container_uri of this AnalysisServicesServerMutableProperties.
        :type backup_blob_container_uri: str
        """

        self._backup_blob_container_uri = backup_blob_container_uri

    @property
    def gateway_details(self):
        """Gets the gateway_details of this AnalysisServicesServerMutableProperties.


        :return: The gateway_details of this AnalysisServicesServerMutableProperties.
        :rtype: GatewayDetails
        """
        return self._gateway_details

    @gateway_details.setter
    def gateway_details(self, gateway_details):
        """Sets the gateway_details of this AnalysisServicesServerMutableProperties.


        :param gateway_details: The gateway_details of this AnalysisServicesServerMutableProperties.
        :type gateway_details: GatewayDetails
        """

        self._gateway_details = gateway_details

    @property
    def ip_v4_firewall_settings(self):
        """Gets the ip_v4_firewall_settings of this AnalysisServicesServerMutableProperties.


        :return: The ip_v4_firewall_settings of this AnalysisServicesServerMutableProperties.
        :rtype: IPv4FirewallSettings
        """
        return self._ip_v4_firewall_settings

    @ip_v4_firewall_settings.setter
    def ip_v4_firewall_settings(self, ip_v4_firewall_settings):
        """Sets the ip_v4_firewall_settings of this AnalysisServicesServerMutableProperties.


        :param ip_v4_firewall_settings: The ip_v4_firewall_settings of this AnalysisServicesServerMutableProperties.
        :type ip_v4_firewall_settings: IPv4FirewallSettings
        """

        self._ip_v4_firewall_settings = ip_v4_firewall_settings

    @property
    def querypool_connection_mode(self):
        """Gets the querypool_connection_mode of this AnalysisServicesServerMutableProperties.

        How the read-write server's participation in the query pool is controlled.<br/>It can have the following values: <ul><li>readOnly - indicates that the read-write server is intended not to participate in query operations</li><li>all - indicates that the read-write server can participate in query operations</li></ul>Specifying readOnly when capacity is 1 results in error.

        :return: The querypool_connection_mode of this AnalysisServicesServerMutableProperties.
        :rtype: str
        """
        return self._querypool_connection_mode

    @querypool_connection_mode.setter
    def querypool_connection_mode(self, querypool_connection_mode):
        """Sets the querypool_connection_mode of this AnalysisServicesServerMutableProperties.

        How the read-write server's participation in the query pool is controlled.<br/>It can have the following values: <ul><li>readOnly - indicates that the read-write server is intended not to participate in query operations</li><li>all - indicates that the read-write server can participate in query operations</li></ul>Specifying readOnly when capacity is 1 results in error.

        :param querypool_connection_mode: The querypool_connection_mode of this AnalysisServicesServerMutableProperties.
        :type querypool_connection_mode: str
        """
        allowed_values = ["All", "ReadOnly"]  # noqa: E501
        if querypool_connection_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `querypool_connection_mode` ({0}), must be one of {1}"
                .format(querypool_connection_mode, allowed_values)
            )

        self._querypool_connection_mode = querypool_connection_mode
