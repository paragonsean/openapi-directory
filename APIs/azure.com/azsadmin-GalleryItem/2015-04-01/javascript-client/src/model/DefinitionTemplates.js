/**
 * GalleryManagementClient
 * The Admin Gallery Management Client.
 *
 * The version of the OpenAPI document: 2015-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DefinitionTemplates model module.
 * @module model/DefinitionTemplates
 * @version 2015-04-01
 */
class DefinitionTemplates {
    /**
     * Constructs a new <code>DefinitionTemplates</code>.
     * Holds UI definition file Uri and deployment template file URIs.
     * @alias module:model/DefinitionTemplates
     */
    constructor() { 
        
        DefinitionTemplates.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DefinitionTemplates</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DefinitionTemplates} obj Optional instance to populate.
     * @return {module:model/DefinitionTemplates} The populated <code>DefinitionTemplates</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DefinitionTemplates();

            if (data.hasOwnProperty('defaultDeploymentTemplateId')) {
                obj['defaultDeploymentTemplateId'] = ApiClient.convertToType(data['defaultDeploymentTemplateId'], 'String');
            }
            if (data.hasOwnProperty('deploymentFragmentFileUris')) {
                obj['deploymentFragmentFileUris'] = ApiClient.convertToType(data['deploymentFragmentFileUris'], {'String': 'String'});
            }
            if (data.hasOwnProperty('deploymentTemplateFileUris')) {
                obj['deploymentTemplateFileUris'] = ApiClient.convertToType(data['deploymentTemplateFileUris'], {'String': 'String'});
            }
            if (data.hasOwnProperty('uiDefinitionFileUri')) {
                obj['uiDefinitionFileUri'] = ApiClient.convertToType(data['uiDefinitionFileUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DefinitionTemplates</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DefinitionTemplates</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['defaultDeploymentTemplateId'] && !(typeof data['defaultDeploymentTemplateId'] === 'string' || data['defaultDeploymentTemplateId'] instanceof String)) {
            throw new Error("Expected the field `defaultDeploymentTemplateId` to be a primitive type in the JSON string but got " + data['defaultDeploymentTemplateId']);
        }
        // ensure the json data is a string
        if (data['uiDefinitionFileUri'] && !(typeof data['uiDefinitionFileUri'] === 'string' || data['uiDefinitionFileUri'] instanceof String)) {
            throw new Error("Expected the field `uiDefinitionFileUri` to be a primitive type in the JSON string but got " + data['uiDefinitionFileUri']);
        }

        return true;
    }


}



/**
 * Default deployment template ID.
 * @member {String} defaultDeploymentTemplateId
 */
DefinitionTemplates.prototype['defaultDeploymentTemplateId'] = undefined;

/**
 * List of key-value pairs containing the deployment fragment file IDs defined in the package manifest.
 * @member {Object.<String, String>} deploymentFragmentFileUris
 */
DefinitionTemplates.prototype['deploymentFragmentFileUris'] = undefined;

/**
 * List of key-value containing the deployment template file IDs defined in the package manifest.
 * @member {Object.<String, String>} deploymentTemplateFileUris
 */
DefinitionTemplates.prototype['deploymentTemplateFileUris'] = undefined;

/**
 * UI definition file URI.
 * @member {String} uiDefinitionFileUri
 */
DefinitionTemplates.prototype['uiDefinitionFileUri'] = undefined;






export default DefinitionTemplates;

