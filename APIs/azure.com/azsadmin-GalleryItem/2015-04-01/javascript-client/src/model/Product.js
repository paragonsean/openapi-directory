/**
 * GalleryManagementClient
 * The Admin Gallery Management Client.
 *
 * The version of the OpenAPI document: 2015-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OfferDetails from './OfferDetails';

/**
 * The Product model module.
 * @module model/Product
 * @version 2015-04-01
 */
class Product {
    /**
     * Constructs a new <code>Product</code>.
     * Represents a product item read from the gallery item package.
     * @alias module:model/Product
     */
    constructor() { 
        
        Product.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Product</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Product} obj Optional instance to populate.
     * @return {module:model/Product} The populated <code>Product</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Product();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('legalTerms')) {
                obj['legalTerms'] = ApiClient.convertToType(data['legalTerms'], 'String');
            }
            if (data.hasOwnProperty('legalTermsUri')) {
                obj['legalTermsUri'] = ApiClient.convertToType(data['legalTermsUri'], 'String');
            }
            if (data.hasOwnProperty('offerDetails')) {
                obj['offerDetails'] = OfferDetails.constructFromObject(data['offerDetails']);
            }
            if (data.hasOwnProperty('pricingDetailsUri')) {
                obj['pricingDetailsUri'] = ApiClient.convertToType(data['pricingDetailsUri'], 'String');
            }
            if (data.hasOwnProperty('privacyPolicy')) {
                obj['privacyPolicy'] = ApiClient.convertToType(data['privacyPolicy'], 'String');
            }
            if (data.hasOwnProperty('privacyPolicyUri')) {
                obj['privacyPolicyUri'] = ApiClient.convertToType(data['privacyPolicyUri'], 'String');
            }
            if (data.hasOwnProperty('publisherDisplayName')) {
                obj['publisherDisplayName'] = ApiClient.convertToType(data['publisherDisplayName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Product</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Product</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['legalTerms'] && !(typeof data['legalTerms'] === 'string' || data['legalTerms'] instanceof String)) {
            throw new Error("Expected the field `legalTerms` to be a primitive type in the JSON string but got " + data['legalTerms']);
        }
        // ensure the json data is a string
        if (data['legalTermsUri'] && !(typeof data['legalTermsUri'] === 'string' || data['legalTermsUri'] instanceof String)) {
            throw new Error("Expected the field `legalTermsUri` to be a primitive type in the JSON string but got " + data['legalTermsUri']);
        }
        // validate the optional field `offerDetails`
        if (data['offerDetails']) { // data not null
          OfferDetails.validateJSON(data['offerDetails']);
        }
        // ensure the json data is a string
        if (data['pricingDetailsUri'] && !(typeof data['pricingDetailsUri'] === 'string' || data['pricingDetailsUri'] instanceof String)) {
            throw new Error("Expected the field `pricingDetailsUri` to be a primitive type in the JSON string but got " + data['pricingDetailsUri']);
        }
        // ensure the json data is a string
        if (data['privacyPolicy'] && !(typeof data['privacyPolicy'] === 'string' || data['privacyPolicy'] instanceof String)) {
            throw new Error("Expected the field `privacyPolicy` to be a primitive type in the JSON string but got " + data['privacyPolicy']);
        }
        // ensure the json data is a string
        if (data['privacyPolicyUri'] && !(typeof data['privacyPolicyUri'] === 'string' || data['privacyPolicyUri'] instanceof String)) {
            throw new Error("Expected the field `privacyPolicyUri` to be a primitive type in the JSON string but got " + data['privacyPolicyUri']);
        }
        // ensure the json data is a string
        if (data['publisherDisplayName'] && !(typeof data['publisherDisplayName'] === 'string' || data['publisherDisplayName'] instanceof String)) {
            throw new Error("Expected the field `publisherDisplayName` to be a primitive type in the JSON string but got " + data['publisherDisplayName']);
        }

        return true;
    }


}



/**
 * Display name of the product.
 * @member {String} displayName
 */
Product.prototype['displayName'] = undefined;

/**
 * Legal terms of the product.
 * @member {String} legalTerms
 */
Product.prototype['legalTerms'] = undefined;

/**
 * URI to the legal terms of the product.
 * @member {String} legalTermsUri
 */
Product.prototype['legalTermsUri'] = undefined;

/**
 * @member {module:model/OfferDetails} offerDetails
 */
Product.prototype['offerDetails'] = undefined;

/**
 * URI to the pricing details of the product.
 * @member {String} pricingDetailsUri
 */
Product.prototype['pricingDetailsUri'] = undefined;

/**
 * Privacy policy of the product.
 * @member {String} privacyPolicy
 */
Product.prototype['privacyPolicy'] = undefined;

/**
 * URI to the privacy policy of the product.
 * @member {String} privacyPolicyUri
 */
Product.prototype['privacyPolicyUri'] = undefined;

/**
 * Publisher display name of the product.
 * @member {String} publisherDisplayName
 */
Product.prototype['publisherDisplayName'] = undefined;






export default Product;

