# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Plan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, display_name: str=None, plan_id: str=None, summary: str=None):
        """Plan - a model defined in OpenAPI

        :param description: The description of this Plan.
        :param display_name: The display_name of this Plan.
        :param plan_id: The plan_id of this Plan.
        :param summary: The summary of this Plan.
        """
        self.openapi_types = {
            'description': str,
            'display_name': str,
            'plan_id': str,
            'summary': str
        }

        self.attribute_map = {
            'description': 'description',
            'display_name': 'displayName',
            'plan_id': 'planId',
            'summary': 'summary'
        }

        self._description = description
        self._display_name = display_name
        self._plan_id = plan_id
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Plan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Plan of this Plan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this Plan.

        Description of the plan.

        :return: The description of this Plan.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Plan.

        Description of the plan.

        :param description: The description of this Plan.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this Plan.

        Display name of the plan.

        :return: The display_name of this Plan.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this Plan.

        Display name of the plan.

        :param display_name: The display_name of this Plan.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def plan_id(self):
        """Gets the plan_id of this Plan.

        Plan identifier.

        :return: The plan_id of this Plan.
        :rtype: str
        """
        return self._plan_id

    @plan_id.setter
    def plan_id(self, plan_id):
        """Sets the plan_id of this Plan.

        Plan identifier.

        :param plan_id: The plan_id of this Plan.
        :type plan_id: str
        """

        self._plan_id = plan_id

    @property
    def summary(self):
        """Gets the summary of this Plan.

        Summary of the plan.

        :return: The summary of this Plan.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this Plan.

        Summary of the plan.

        :param summary: The summary of this Plan.
        :type summary: str
        """

        self._summary = summary
