# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.plan import Plan
from openapi_server import util


class OfferDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offer_id: str=None, plans: List[Plan]=None, publisher_id: str=None):
        """OfferDetails - a model defined in OpenAPI

        :param offer_id: The offer_id of this OfferDetails.
        :param plans: The plans of this OfferDetails.
        :param publisher_id: The publisher_id of this OfferDetails.
        """
        self.openapi_types = {
            'offer_id': str,
            'plans': List[Plan],
            'publisher_id': str
        }

        self.attribute_map = {
            'offer_id': 'offerId',
            'plans': 'plans',
            'publisher_id': 'publisherId'
        }

        self._offer_id = offer_id
        self._plans = plans
        self._publisher_id = publisher_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OfferDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OfferDetails of this OfferDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offer_id(self):
        """Gets the offer_id of this OfferDetails.

        Offer identifier.

        :return: The offer_id of this OfferDetails.
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this OfferDetails.

        Offer identifier.

        :param offer_id: The offer_id of this OfferDetails.
        :type offer_id: str
        """

        self._offer_id = offer_id

    @property
    def plans(self):
        """Gets the plans of this OfferDetails.

        List of plans available for the offer.

        :return: The plans of this OfferDetails.
        :rtype: List[Plan]
        """
        return self._plans

    @plans.setter
    def plans(self, plans):
        """Sets the plans of this OfferDetails.

        List of plans available for the offer.

        :param plans: The plans of this OfferDetails.
        :type plans: List[Plan]
        """

        self._plans = plans

    @property
    def publisher_id(self):
        """Gets the publisher_id of this OfferDetails.

        Publisher identifier.

        :return: The publisher_id of this OfferDetails.
        :rtype: str
        """
        return self._publisher_id

    @publisher_id.setter
    def publisher_id(self, publisher_id):
        """Sets the publisher_id of this OfferDetails.

        Publisher identifier.

        :param publisher_id: The publisher_id of this OfferDetails.
        :type publisher_id: str
        """

        self._publisher_id = publisher_id
