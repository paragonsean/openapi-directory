/**
 * GalleryManagementClient
 * The Admin Gallery Management Client.
 *
 * The version of the OpenAPI document: 2015-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDefinitionTemplates.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDefinitionTemplates::OAIDefinitionTemplates(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDefinitionTemplates::OAIDefinitionTemplates() {
    this->initializeModel();
}

OAIDefinitionTemplates::~OAIDefinitionTemplates() {}

void OAIDefinitionTemplates::initializeModel() {

    m_default_deployment_template_id_isSet = false;
    m_default_deployment_template_id_isValid = false;

    m_deployment_fragment_file_uris_isSet = false;
    m_deployment_fragment_file_uris_isValid = false;

    m_deployment_template_file_uris_isSet = false;
    m_deployment_template_file_uris_isValid = false;

    m_ui_definition_file_uri_isSet = false;
    m_ui_definition_file_uri_isValid = false;
}

void OAIDefinitionTemplates::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDefinitionTemplates::fromJsonObject(QJsonObject json) {

    m_default_deployment_template_id_isValid = ::OpenAPI::fromJsonValue(m_default_deployment_template_id, json[QString("defaultDeploymentTemplateId")]);
    m_default_deployment_template_id_isSet = !json[QString("defaultDeploymentTemplateId")].isNull() && m_default_deployment_template_id_isValid;

    m_deployment_fragment_file_uris_isValid = ::OpenAPI::fromJsonValue(m_deployment_fragment_file_uris, json[QString("deploymentFragmentFileUris")]);
    m_deployment_fragment_file_uris_isSet = !json[QString("deploymentFragmentFileUris")].isNull() && m_deployment_fragment_file_uris_isValid;

    m_deployment_template_file_uris_isValid = ::OpenAPI::fromJsonValue(m_deployment_template_file_uris, json[QString("deploymentTemplateFileUris")]);
    m_deployment_template_file_uris_isSet = !json[QString("deploymentTemplateFileUris")].isNull() && m_deployment_template_file_uris_isValid;

    m_ui_definition_file_uri_isValid = ::OpenAPI::fromJsonValue(m_ui_definition_file_uri, json[QString("uiDefinitionFileUri")]);
    m_ui_definition_file_uri_isSet = !json[QString("uiDefinitionFileUri")].isNull() && m_ui_definition_file_uri_isValid;
}

QString OAIDefinitionTemplates::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDefinitionTemplates::asJsonObject() const {
    QJsonObject obj;
    if (m_default_deployment_template_id_isSet) {
        obj.insert(QString("defaultDeploymentTemplateId"), ::OpenAPI::toJsonValue(m_default_deployment_template_id));
    }
    if (m_deployment_fragment_file_uris.size() > 0) {
        obj.insert(QString("deploymentFragmentFileUris"), ::OpenAPI::toJsonValue(m_deployment_fragment_file_uris));
    }
    if (m_deployment_template_file_uris.size() > 0) {
        obj.insert(QString("deploymentTemplateFileUris"), ::OpenAPI::toJsonValue(m_deployment_template_file_uris));
    }
    if (m_ui_definition_file_uri_isSet) {
        obj.insert(QString("uiDefinitionFileUri"), ::OpenAPI::toJsonValue(m_ui_definition_file_uri));
    }
    return obj;
}

QString OAIDefinitionTemplates::getDefaultDeploymentTemplateId() const {
    return m_default_deployment_template_id;
}
void OAIDefinitionTemplates::setDefaultDeploymentTemplateId(const QString &default_deployment_template_id) {
    m_default_deployment_template_id = default_deployment_template_id;
    m_default_deployment_template_id_isSet = true;
}

bool OAIDefinitionTemplates::is_default_deployment_template_id_Set() const{
    return m_default_deployment_template_id_isSet;
}

bool OAIDefinitionTemplates::is_default_deployment_template_id_Valid() const{
    return m_default_deployment_template_id_isValid;
}

QMap<QString, QString> OAIDefinitionTemplates::getDeploymentFragmentFileUris() const {
    return m_deployment_fragment_file_uris;
}
void OAIDefinitionTemplates::setDeploymentFragmentFileUris(const QMap<QString, QString> &deployment_fragment_file_uris) {
    m_deployment_fragment_file_uris = deployment_fragment_file_uris;
    m_deployment_fragment_file_uris_isSet = true;
}

bool OAIDefinitionTemplates::is_deployment_fragment_file_uris_Set() const{
    return m_deployment_fragment_file_uris_isSet;
}

bool OAIDefinitionTemplates::is_deployment_fragment_file_uris_Valid() const{
    return m_deployment_fragment_file_uris_isValid;
}

QMap<QString, QString> OAIDefinitionTemplates::getDeploymentTemplateFileUris() const {
    return m_deployment_template_file_uris;
}
void OAIDefinitionTemplates::setDeploymentTemplateFileUris(const QMap<QString, QString> &deployment_template_file_uris) {
    m_deployment_template_file_uris = deployment_template_file_uris;
    m_deployment_template_file_uris_isSet = true;
}

bool OAIDefinitionTemplates::is_deployment_template_file_uris_Set() const{
    return m_deployment_template_file_uris_isSet;
}

bool OAIDefinitionTemplates::is_deployment_template_file_uris_Valid() const{
    return m_deployment_template_file_uris_isValid;
}

QString OAIDefinitionTemplates::getUiDefinitionFileUri() const {
    return m_ui_definition_file_uri;
}
void OAIDefinitionTemplates::setUiDefinitionFileUri(const QString &ui_definition_file_uri) {
    m_ui_definition_file_uri = ui_definition_file_uri;
    m_ui_definition_file_uri_isSet = true;
}

bool OAIDefinitionTemplates::is_ui_definition_file_uri_Set() const{
    return m_ui_definition_file_uri_isSet;
}

bool OAIDefinitionTemplates::is_ui_definition_file_uri_Valid() const{
    return m_ui_definition_file_uri_isValid;
}

bool OAIDefinitionTemplates::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_deployment_template_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_fragment_file_uris.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_template_file_uris.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ui_definition_file_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDefinitionTemplates::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
