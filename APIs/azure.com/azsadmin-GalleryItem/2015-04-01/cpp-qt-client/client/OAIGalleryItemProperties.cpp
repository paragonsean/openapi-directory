/**
 * GalleryManagementClient
 * The Admin Gallery Management Client.
 *
 * The version of the OpenAPI document: 2015-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGalleryItemProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGalleryItemProperties::OAIGalleryItemProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGalleryItemProperties::OAIGalleryItemProperties() {
    this->initializeModel();
}

OAIGalleryItemProperties::~OAIGalleryItemProperties() {}

void OAIGalleryItemProperties::initializeModel() {

    m_additional_properties_isSet = false;
    m_additional_properties_isValid = false;

    m_artifacts_isSet = false;
    m_artifacts_isValid = false;

    m_category_ids_isSet = false;
    m_category_ids_isValid = false;

    m_changed_time_isSet = false;
    m_changed_time_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_definition_templates_isSet = false;
    m_definition_templates_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_filters_isSet = false;
    m_filters_isValid = false;

    m_icon_file_uris_isSet = false;
    m_icon_file_uris_isValid = false;

    m_identity_isSet = false;
    m_identity_isValid = false;

    m_images_isSet = false;
    m_images_isValid = false;

    m_item_display_name_isSet = false;
    m_item_display_name_isValid = false;

    m_item_name_isSet = false;
    m_item_name_isValid = false;

    m_item_type_isSet = false;
    m_item_type_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;

    m_long_summary_isSet = false;
    m_long_summary_isValid = false;

    m_marketing_material_isSet = false;
    m_marketing_material_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_products_isSet = false;
    m_products_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_publisher_isSet = false;
    m_publisher_isValid = false;

    m_publisher_display_name_isSet = false;
    m_publisher_display_name_isValid = false;

    m_resource_group_name_isSet = false;
    m_resource_group_name_isValid = false;

    m_screenshot_uris_isSet = false;
    m_screenshot_uris_isValid = false;

    m_summary_isSet = false;
    m_summary_isValid = false;

    m_ui_definition_uri_isSet = false;
    m_ui_definition_uri_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIGalleryItemProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGalleryItemProperties::fromJsonObject(QJsonObject json) {

    m_additional_properties_isValid = ::OpenAPI::fromJsonValue(m_additional_properties, json[QString("additionalProperties")]);
    m_additional_properties_isSet = !json[QString("additionalProperties")].isNull() && m_additional_properties_isValid;

    m_artifacts_isValid = ::OpenAPI::fromJsonValue(m_artifacts, json[QString("artifacts")]);
    m_artifacts_isSet = !json[QString("artifacts")].isNull() && m_artifacts_isValid;

    m_category_ids_isValid = ::OpenAPI::fromJsonValue(m_category_ids, json[QString("categoryIds")]);
    m_category_ids_isSet = !json[QString("categoryIds")].isNull() && m_category_ids_isValid;

    m_changed_time_isValid = ::OpenAPI::fromJsonValue(m_changed_time, json[QString("changedTime")]);
    m_changed_time_isSet = !json[QString("changedTime")].isNull() && m_changed_time_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("createdTime")]);
    m_created_time_isSet = !json[QString("createdTime")].isNull() && m_created_time_isValid;

    m_definition_templates_isValid = ::OpenAPI::fromJsonValue(m_definition_templates, json[QString("definitionTemplates")]);
    m_definition_templates_isSet = !json[QString("definitionTemplates")].isNull() && m_definition_templates_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_filters_isValid = ::OpenAPI::fromJsonValue(m_filters, json[QString("filters")]);
    m_filters_isSet = !json[QString("filters")].isNull() && m_filters_isValid;

    m_icon_file_uris_isValid = ::OpenAPI::fromJsonValue(m_icon_file_uris, json[QString("iconFileUris")]);
    m_icon_file_uris_isSet = !json[QString("iconFileUris")].isNull() && m_icon_file_uris_isValid;

    m_identity_isValid = ::OpenAPI::fromJsonValue(m_identity, json[QString("identity")]);
    m_identity_isSet = !json[QString("identity")].isNull() && m_identity_isValid;

    m_images_isValid = ::OpenAPI::fromJsonValue(m_images, json[QString("images")]);
    m_images_isSet = !json[QString("images")].isNull() && m_images_isValid;

    m_item_display_name_isValid = ::OpenAPI::fromJsonValue(m_item_display_name, json[QString("itemDisplayName")]);
    m_item_display_name_isSet = !json[QString("itemDisplayName")].isNull() && m_item_display_name_isValid;

    m_item_name_isValid = ::OpenAPI::fromJsonValue(m_item_name, json[QString("itemName")]);
    m_item_name_isSet = !json[QString("itemName")].isNull() && m_item_name_isValid;

    m_item_type_isValid = ::OpenAPI::fromJsonValue(m_item_type, json[QString("itemType")]);
    m_item_type_isSet = !json[QString("itemType")].isNull() && m_item_type_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_long_summary_isValid = ::OpenAPI::fromJsonValue(m_long_summary, json[QString("longSummary")]);
    m_long_summary_isSet = !json[QString("longSummary")].isNull() && m_long_summary_isValid;

    m_marketing_material_isValid = ::OpenAPI::fromJsonValue(m_marketing_material, json[QString("marketingMaterial")]);
    m_marketing_material_isSet = !json[QString("marketingMaterial")].isNull() && m_marketing_material_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_products_isValid = ::OpenAPI::fromJsonValue(m_products, json[QString("products")]);
    m_products_isSet = !json[QString("products")].isNull() && m_products_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_publisher_isValid = ::OpenAPI::fromJsonValue(m_publisher, json[QString("publisher")]);
    m_publisher_isSet = !json[QString("publisher")].isNull() && m_publisher_isValid;

    m_publisher_display_name_isValid = ::OpenAPI::fromJsonValue(m_publisher_display_name, json[QString("publisherDisplayName")]);
    m_publisher_display_name_isSet = !json[QString("publisherDisplayName")].isNull() && m_publisher_display_name_isValid;

    m_resource_group_name_isValid = ::OpenAPI::fromJsonValue(m_resource_group_name, json[QString("resourceGroupName")]);
    m_resource_group_name_isSet = !json[QString("resourceGroupName")].isNull() && m_resource_group_name_isValid;

    m_screenshot_uris_isValid = ::OpenAPI::fromJsonValue(m_screenshot_uris, json[QString("screenshotUris")]);
    m_screenshot_uris_isSet = !json[QString("screenshotUris")].isNull() && m_screenshot_uris_isValid;

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("summary")]);
    m_summary_isSet = !json[QString("summary")].isNull() && m_summary_isValid;

    m_ui_definition_uri_isValid = ::OpenAPI::fromJsonValue(m_ui_definition_uri, json[QString("uiDefinitionUri")]);
    m_ui_definition_uri_isSet = !json[QString("uiDefinitionUri")].isNull() && m_ui_definition_uri_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIGalleryItemProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGalleryItemProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_properties.size() > 0) {
        obj.insert(QString("additionalProperties"), ::OpenAPI::toJsonValue(m_additional_properties));
    }
    if (m_artifacts.size() > 0) {
        obj.insert(QString("artifacts"), ::OpenAPI::toJsonValue(m_artifacts));
    }
    if (m_category_ids.size() > 0) {
        obj.insert(QString("categoryIds"), ::OpenAPI::toJsonValue(m_category_ids));
    }
    if (m_changed_time_isSet) {
        obj.insert(QString("changedTime"), ::OpenAPI::toJsonValue(m_changed_time));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("createdTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_definition_templates.isSet()) {
        obj.insert(QString("definitionTemplates"), ::OpenAPI::toJsonValue(m_definition_templates));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_filters.size() > 0) {
        obj.insert(QString("filters"), ::OpenAPI::toJsonValue(m_filters));
    }
    if (m_icon_file_uris.isSet()) {
        obj.insert(QString("iconFileUris"), ::OpenAPI::toJsonValue(m_icon_file_uris));
    }
    if (m_identity_isSet) {
        obj.insert(QString("identity"), ::OpenAPI::toJsonValue(m_identity));
    }
    if (m_images.size() > 0) {
        obj.insert(QString("images"), ::OpenAPI::toJsonValue(m_images));
    }
    if (m_item_display_name_isSet) {
        obj.insert(QString("itemDisplayName"), ::OpenAPI::toJsonValue(m_item_display_name));
    }
    if (m_item_name_isSet) {
        obj.insert(QString("itemName"), ::OpenAPI::toJsonValue(m_item_name));
    }
    if (m_item_type_isSet) {
        obj.insert(QString("itemType"), ::OpenAPI::toJsonValue(m_item_type));
    }
    if (m_links.size() > 0) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_long_summary_isSet) {
        obj.insert(QString("longSummary"), ::OpenAPI::toJsonValue(m_long_summary));
    }
    if (m_marketing_material.isSet()) {
        obj.insert(QString("marketingMaterial"), ::OpenAPI::toJsonValue(m_marketing_material));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_products.size() > 0) {
        obj.insert(QString("products"), ::OpenAPI::toJsonValue(m_products));
    }
    if (m_properties.size() > 0) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_publisher_isSet) {
        obj.insert(QString("publisher"), ::OpenAPI::toJsonValue(m_publisher));
    }
    if (m_publisher_display_name_isSet) {
        obj.insert(QString("publisherDisplayName"), ::OpenAPI::toJsonValue(m_publisher_display_name));
    }
    if (m_resource_group_name_isSet) {
        obj.insert(QString("resourceGroupName"), ::OpenAPI::toJsonValue(m_resource_group_name));
    }
    if (m_screenshot_uris.size() > 0) {
        obj.insert(QString("screenshotUris"), ::OpenAPI::toJsonValue(m_screenshot_uris));
    }
    if (m_summary_isSet) {
        obj.insert(QString("summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    if (m_ui_definition_uri_isSet) {
        obj.insert(QString("uiDefinitionUri"), ::OpenAPI::toJsonValue(m_ui_definition_uri));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QMap<QString, QString> OAIGalleryItemProperties::getAdditionalProperties() const {
    return m_additional_properties;
}
void OAIGalleryItemProperties::setAdditionalProperties(const QMap<QString, QString> &additional_properties) {
    m_additional_properties = additional_properties;
    m_additional_properties_isSet = true;
}

bool OAIGalleryItemProperties::is_additional_properties_Set() const{
    return m_additional_properties_isSet;
}

bool OAIGalleryItemProperties::is_additional_properties_Valid() const{
    return m_additional_properties_isValid;
}

QList<OAIArtifact> OAIGalleryItemProperties::getArtifacts() const {
    return m_artifacts;
}
void OAIGalleryItemProperties::setArtifacts(const QList<OAIArtifact> &artifacts) {
    m_artifacts = artifacts;
    m_artifacts_isSet = true;
}

bool OAIGalleryItemProperties::is_artifacts_Set() const{
    return m_artifacts_isSet;
}

bool OAIGalleryItemProperties::is_artifacts_Valid() const{
    return m_artifacts_isValid;
}

QList<QString> OAIGalleryItemProperties::getCategoryIds() const {
    return m_category_ids;
}
void OAIGalleryItemProperties::setCategoryIds(const QList<QString> &category_ids) {
    m_category_ids = category_ids;
    m_category_ids_isSet = true;
}

bool OAIGalleryItemProperties::is_category_ids_Set() const{
    return m_category_ids_isSet;
}

bool OAIGalleryItemProperties::is_category_ids_Valid() const{
    return m_category_ids_isValid;
}

QDateTime OAIGalleryItemProperties::getChangedTime() const {
    return m_changed_time;
}
void OAIGalleryItemProperties::setChangedTime(const QDateTime &changed_time) {
    m_changed_time = changed_time;
    m_changed_time_isSet = true;
}

bool OAIGalleryItemProperties::is_changed_time_Set() const{
    return m_changed_time_isSet;
}

bool OAIGalleryItemProperties::is_changed_time_Valid() const{
    return m_changed_time_isValid;
}

QDateTime OAIGalleryItemProperties::getCreatedTime() const {
    return m_created_time;
}
void OAIGalleryItemProperties::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIGalleryItemProperties::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIGalleryItemProperties::is_created_time_Valid() const{
    return m_created_time_isValid;
}

OAIDefinitionTemplates OAIGalleryItemProperties::getDefinitionTemplates() const {
    return m_definition_templates;
}
void OAIGalleryItemProperties::setDefinitionTemplates(const OAIDefinitionTemplates &definition_templates) {
    m_definition_templates = definition_templates;
    m_definition_templates_isSet = true;
}

bool OAIGalleryItemProperties::is_definition_templates_Set() const{
    return m_definition_templates_isSet;
}

bool OAIGalleryItemProperties::is_definition_templates_Valid() const{
    return m_definition_templates_isValid;
}

QString OAIGalleryItemProperties::getDescription() const {
    return m_description;
}
void OAIGalleryItemProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGalleryItemProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGalleryItemProperties::is_description_Valid() const{
    return m_description_isValid;
}

QList<OAIFilter> OAIGalleryItemProperties::getFilters() const {
    return m_filters;
}
void OAIGalleryItemProperties::setFilters(const QList<OAIFilter> &filters) {
    m_filters = filters;
    m_filters_isSet = true;
}

bool OAIGalleryItemProperties::is_filters_Set() const{
    return m_filters_isSet;
}

bool OAIGalleryItemProperties::is_filters_Valid() const{
    return m_filters_isValid;
}

OAIGalleryItemProperties_iconFileUris OAIGalleryItemProperties::getIconFileUris() const {
    return m_icon_file_uris;
}
void OAIGalleryItemProperties::setIconFileUris(const OAIGalleryItemProperties_iconFileUris &icon_file_uris) {
    m_icon_file_uris = icon_file_uris;
    m_icon_file_uris_isSet = true;
}

bool OAIGalleryItemProperties::is_icon_file_uris_Set() const{
    return m_icon_file_uris_isSet;
}

bool OAIGalleryItemProperties::is_icon_file_uris_Valid() const{
    return m_icon_file_uris_isValid;
}

QString OAIGalleryItemProperties::getIdentity() const {
    return m_identity;
}
void OAIGalleryItemProperties::setIdentity(const QString &identity) {
    m_identity = identity;
    m_identity_isSet = true;
}

bool OAIGalleryItemProperties::is_identity_Set() const{
    return m_identity_isSet;
}

bool OAIGalleryItemProperties::is_identity_Valid() const{
    return m_identity_isValid;
}

QList<OAIImageGroup> OAIGalleryItemProperties::getImages() const {
    return m_images;
}
void OAIGalleryItemProperties::setImages(const QList<OAIImageGroup> &images) {
    m_images = images;
    m_images_isSet = true;
}

bool OAIGalleryItemProperties::is_images_Set() const{
    return m_images_isSet;
}

bool OAIGalleryItemProperties::is_images_Valid() const{
    return m_images_isValid;
}

QString OAIGalleryItemProperties::getItemDisplayName() const {
    return m_item_display_name;
}
void OAIGalleryItemProperties::setItemDisplayName(const QString &item_display_name) {
    m_item_display_name = item_display_name;
    m_item_display_name_isSet = true;
}

bool OAIGalleryItemProperties::is_item_display_name_Set() const{
    return m_item_display_name_isSet;
}

bool OAIGalleryItemProperties::is_item_display_name_Valid() const{
    return m_item_display_name_isValid;
}

QString OAIGalleryItemProperties::getItemName() const {
    return m_item_name;
}
void OAIGalleryItemProperties::setItemName(const QString &item_name) {
    m_item_name = item_name;
    m_item_name_isSet = true;
}

bool OAIGalleryItemProperties::is_item_name_Set() const{
    return m_item_name_isSet;
}

bool OAIGalleryItemProperties::is_item_name_Valid() const{
    return m_item_name_isValid;
}

QString OAIGalleryItemProperties::getItemType() const {
    return m_item_type;
}
void OAIGalleryItemProperties::setItemType(const QString &item_type) {
    m_item_type = item_type;
    m_item_type_isSet = true;
}

bool OAIGalleryItemProperties::is_item_type_Set() const{
    return m_item_type_isSet;
}

bool OAIGalleryItemProperties::is_item_type_Valid() const{
    return m_item_type_isValid;
}

QList<OAILinkProperties> OAIGalleryItemProperties::getLinks() const {
    return m_links;
}
void OAIGalleryItemProperties::setLinks(const QList<OAILinkProperties> &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIGalleryItemProperties::is_links_Set() const{
    return m_links_isSet;
}

bool OAIGalleryItemProperties::is_links_Valid() const{
    return m_links_isValid;
}

QString OAIGalleryItemProperties::getLongSummary() const {
    return m_long_summary;
}
void OAIGalleryItemProperties::setLongSummary(const QString &long_summary) {
    m_long_summary = long_summary;
    m_long_summary_isSet = true;
}

bool OAIGalleryItemProperties::is_long_summary_Set() const{
    return m_long_summary_isSet;
}

bool OAIGalleryItemProperties::is_long_summary_Valid() const{
    return m_long_summary_isValid;
}

OAIMarketingMaterial OAIGalleryItemProperties::getMarketingMaterial() const {
    return m_marketing_material;
}
void OAIGalleryItemProperties::setMarketingMaterial(const OAIMarketingMaterial &marketing_material) {
    m_marketing_material = marketing_material;
    m_marketing_material_isSet = true;
}

bool OAIGalleryItemProperties::is_marketing_material_Set() const{
    return m_marketing_material_isSet;
}

bool OAIGalleryItemProperties::is_marketing_material_Valid() const{
    return m_marketing_material_isValid;
}

OAIOpenProperty OAIGalleryItemProperties::getMetadata() const {
    return m_metadata;
}
void OAIGalleryItemProperties::setMetadata(const OAIOpenProperty &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGalleryItemProperties::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGalleryItemProperties::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QList<OAIProduct> OAIGalleryItemProperties::getProducts() const {
    return m_products;
}
void OAIGalleryItemProperties::setProducts(const QList<OAIProduct> &products) {
    m_products = products;
    m_products_isSet = true;
}

bool OAIGalleryItemProperties::is_products_Set() const{
    return m_products_isSet;
}

bool OAIGalleryItemProperties::is_products_Valid() const{
    return m_products_isValid;
}

QMap<QString, QString> OAIGalleryItemProperties::getProperties() const {
    return m_properties;
}
void OAIGalleryItemProperties::setProperties(const QMap<QString, QString> &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIGalleryItemProperties::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIGalleryItemProperties::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIGalleryItemProperties::getPublisher() const {
    return m_publisher;
}
void OAIGalleryItemProperties::setPublisher(const QString &publisher) {
    m_publisher = publisher;
    m_publisher_isSet = true;
}

bool OAIGalleryItemProperties::is_publisher_Set() const{
    return m_publisher_isSet;
}

bool OAIGalleryItemProperties::is_publisher_Valid() const{
    return m_publisher_isValid;
}

QString OAIGalleryItemProperties::getPublisherDisplayName() const {
    return m_publisher_display_name;
}
void OAIGalleryItemProperties::setPublisherDisplayName(const QString &publisher_display_name) {
    m_publisher_display_name = publisher_display_name;
    m_publisher_display_name_isSet = true;
}

bool OAIGalleryItemProperties::is_publisher_display_name_Set() const{
    return m_publisher_display_name_isSet;
}

bool OAIGalleryItemProperties::is_publisher_display_name_Valid() const{
    return m_publisher_display_name_isValid;
}

QString OAIGalleryItemProperties::getResourceGroupName() const {
    return m_resource_group_name;
}
void OAIGalleryItemProperties::setResourceGroupName(const QString &resource_group_name) {
    m_resource_group_name = resource_group_name;
    m_resource_group_name_isSet = true;
}

bool OAIGalleryItemProperties::is_resource_group_name_Set() const{
    return m_resource_group_name_isSet;
}

bool OAIGalleryItemProperties::is_resource_group_name_Valid() const{
    return m_resource_group_name_isValid;
}

QList<QString> OAIGalleryItemProperties::getScreenshotUris() const {
    return m_screenshot_uris;
}
void OAIGalleryItemProperties::setScreenshotUris(const QList<QString> &screenshot_uris) {
    m_screenshot_uris = screenshot_uris;
    m_screenshot_uris_isSet = true;
}

bool OAIGalleryItemProperties::is_screenshot_uris_Set() const{
    return m_screenshot_uris_isSet;
}

bool OAIGalleryItemProperties::is_screenshot_uris_Valid() const{
    return m_screenshot_uris_isValid;
}

QString OAIGalleryItemProperties::getSummary() const {
    return m_summary;
}
void OAIGalleryItemProperties::setSummary(const QString &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAIGalleryItemProperties::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAIGalleryItemProperties::is_summary_Valid() const{
    return m_summary_isValid;
}

QString OAIGalleryItemProperties::getUiDefinitionUri() const {
    return m_ui_definition_uri;
}
void OAIGalleryItemProperties::setUiDefinitionUri(const QString &ui_definition_uri) {
    m_ui_definition_uri = ui_definition_uri;
    m_ui_definition_uri_isSet = true;
}

bool OAIGalleryItemProperties::is_ui_definition_uri_Set() const{
    return m_ui_definition_uri_isSet;
}

bool OAIGalleryItemProperties::is_ui_definition_uri_Valid() const{
    return m_ui_definition_uri_isValid;
}

QString OAIGalleryItemProperties::getVersion() const {
    return m_version;
}
void OAIGalleryItemProperties::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIGalleryItemProperties::is_version_Set() const{
    return m_version_isSet;
}

bool OAIGalleryItemProperties::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIGalleryItemProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_properties.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_artifacts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition_templates.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_icon_file_uris.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_identity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_images.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_long_summary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketing_material.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_screenshot_uris.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ui_definition_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGalleryItemProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
