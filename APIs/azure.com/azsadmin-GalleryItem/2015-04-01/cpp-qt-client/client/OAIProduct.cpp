/**
 * GalleryManagementClient
 * The Admin Gallery Management Client.
 *
 * The version of the OpenAPI document: 2015-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProduct.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProduct::OAIProduct(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProduct::OAIProduct() {
    this->initializeModel();
}

OAIProduct::~OAIProduct() {}

void OAIProduct::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_legal_terms_isSet = false;
    m_legal_terms_isValid = false;

    m_legal_terms_uri_isSet = false;
    m_legal_terms_uri_isValid = false;

    m_offer_details_isSet = false;
    m_offer_details_isValid = false;

    m_pricing_details_uri_isSet = false;
    m_pricing_details_uri_isValid = false;

    m_privacy_policy_isSet = false;
    m_privacy_policy_isValid = false;

    m_privacy_policy_uri_isSet = false;
    m_privacy_policy_uri_isValid = false;

    m_publisher_display_name_isSet = false;
    m_publisher_display_name_isValid = false;
}

void OAIProduct::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProduct::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_legal_terms_isValid = ::OpenAPI::fromJsonValue(m_legal_terms, json[QString("legalTerms")]);
    m_legal_terms_isSet = !json[QString("legalTerms")].isNull() && m_legal_terms_isValid;

    m_legal_terms_uri_isValid = ::OpenAPI::fromJsonValue(m_legal_terms_uri, json[QString("legalTermsUri")]);
    m_legal_terms_uri_isSet = !json[QString("legalTermsUri")].isNull() && m_legal_terms_uri_isValid;

    m_offer_details_isValid = ::OpenAPI::fromJsonValue(m_offer_details, json[QString("offerDetails")]);
    m_offer_details_isSet = !json[QString("offerDetails")].isNull() && m_offer_details_isValid;

    m_pricing_details_uri_isValid = ::OpenAPI::fromJsonValue(m_pricing_details_uri, json[QString("pricingDetailsUri")]);
    m_pricing_details_uri_isSet = !json[QString("pricingDetailsUri")].isNull() && m_pricing_details_uri_isValid;

    m_privacy_policy_isValid = ::OpenAPI::fromJsonValue(m_privacy_policy, json[QString("privacyPolicy")]);
    m_privacy_policy_isSet = !json[QString("privacyPolicy")].isNull() && m_privacy_policy_isValid;

    m_privacy_policy_uri_isValid = ::OpenAPI::fromJsonValue(m_privacy_policy_uri, json[QString("privacyPolicyUri")]);
    m_privacy_policy_uri_isSet = !json[QString("privacyPolicyUri")].isNull() && m_privacy_policy_uri_isValid;

    m_publisher_display_name_isValid = ::OpenAPI::fromJsonValue(m_publisher_display_name, json[QString("publisherDisplayName")]);
    m_publisher_display_name_isSet = !json[QString("publisherDisplayName")].isNull() && m_publisher_display_name_isValid;
}

QString OAIProduct::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProduct::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_legal_terms_isSet) {
        obj.insert(QString("legalTerms"), ::OpenAPI::toJsonValue(m_legal_terms));
    }
    if (m_legal_terms_uri_isSet) {
        obj.insert(QString("legalTermsUri"), ::OpenAPI::toJsonValue(m_legal_terms_uri));
    }
    if (m_offer_details.isSet()) {
        obj.insert(QString("offerDetails"), ::OpenAPI::toJsonValue(m_offer_details));
    }
    if (m_pricing_details_uri_isSet) {
        obj.insert(QString("pricingDetailsUri"), ::OpenAPI::toJsonValue(m_pricing_details_uri));
    }
    if (m_privacy_policy_isSet) {
        obj.insert(QString("privacyPolicy"), ::OpenAPI::toJsonValue(m_privacy_policy));
    }
    if (m_privacy_policy_uri_isSet) {
        obj.insert(QString("privacyPolicyUri"), ::OpenAPI::toJsonValue(m_privacy_policy_uri));
    }
    if (m_publisher_display_name_isSet) {
        obj.insert(QString("publisherDisplayName"), ::OpenAPI::toJsonValue(m_publisher_display_name));
    }
    return obj;
}

QString OAIProduct::getDisplayName() const {
    return m_display_name;
}
void OAIProduct::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIProduct::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIProduct::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIProduct::getLegalTerms() const {
    return m_legal_terms;
}
void OAIProduct::setLegalTerms(const QString &legal_terms) {
    m_legal_terms = legal_terms;
    m_legal_terms_isSet = true;
}

bool OAIProduct::is_legal_terms_Set() const{
    return m_legal_terms_isSet;
}

bool OAIProduct::is_legal_terms_Valid() const{
    return m_legal_terms_isValid;
}

QString OAIProduct::getLegalTermsUri() const {
    return m_legal_terms_uri;
}
void OAIProduct::setLegalTermsUri(const QString &legal_terms_uri) {
    m_legal_terms_uri = legal_terms_uri;
    m_legal_terms_uri_isSet = true;
}

bool OAIProduct::is_legal_terms_uri_Set() const{
    return m_legal_terms_uri_isSet;
}

bool OAIProduct::is_legal_terms_uri_Valid() const{
    return m_legal_terms_uri_isValid;
}

OAIOfferDetails OAIProduct::getOfferDetails() const {
    return m_offer_details;
}
void OAIProduct::setOfferDetails(const OAIOfferDetails &offer_details) {
    m_offer_details = offer_details;
    m_offer_details_isSet = true;
}

bool OAIProduct::is_offer_details_Set() const{
    return m_offer_details_isSet;
}

bool OAIProduct::is_offer_details_Valid() const{
    return m_offer_details_isValid;
}

QString OAIProduct::getPricingDetailsUri() const {
    return m_pricing_details_uri;
}
void OAIProduct::setPricingDetailsUri(const QString &pricing_details_uri) {
    m_pricing_details_uri = pricing_details_uri;
    m_pricing_details_uri_isSet = true;
}

bool OAIProduct::is_pricing_details_uri_Set() const{
    return m_pricing_details_uri_isSet;
}

bool OAIProduct::is_pricing_details_uri_Valid() const{
    return m_pricing_details_uri_isValid;
}

QString OAIProduct::getPrivacyPolicy() const {
    return m_privacy_policy;
}
void OAIProduct::setPrivacyPolicy(const QString &privacy_policy) {
    m_privacy_policy = privacy_policy;
    m_privacy_policy_isSet = true;
}

bool OAIProduct::is_privacy_policy_Set() const{
    return m_privacy_policy_isSet;
}

bool OAIProduct::is_privacy_policy_Valid() const{
    return m_privacy_policy_isValid;
}

QString OAIProduct::getPrivacyPolicyUri() const {
    return m_privacy_policy_uri;
}
void OAIProduct::setPrivacyPolicyUri(const QString &privacy_policy_uri) {
    m_privacy_policy_uri = privacy_policy_uri;
    m_privacy_policy_uri_isSet = true;
}

bool OAIProduct::is_privacy_policy_uri_Set() const{
    return m_privacy_policy_uri_isSet;
}

bool OAIProduct::is_privacy_policy_uri_Valid() const{
    return m_privacy_policy_uri_isValid;
}

QString OAIProduct::getPublisherDisplayName() const {
    return m_publisher_display_name;
}
void OAIProduct::setPublisherDisplayName(const QString &publisher_display_name) {
    m_publisher_display_name = publisher_display_name;
    m_publisher_display_name_isSet = true;
}

bool OAIProduct::is_publisher_display_name_Set() const{
    return m_publisher_display_name_isSet;
}

bool OAIProduct::is_publisher_display_name_Valid() const{
    return m_publisher_display_name_isValid;
}

bool OAIProduct::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_legal_terms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_legal_terms_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offer_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_details_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_privacy_policy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_privacy_policy_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProduct::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
