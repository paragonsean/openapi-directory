/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComplianceProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComplianceProperties::OAIComplianceProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComplianceProperties::OAIComplianceProperties() {
    this->initializeModel();
}

OAIComplianceProperties::~OAIComplianceProperties() {}

void OAIComplianceProperties::initializeModel() {

    m_assessment_result_isSet = false;
    m_assessment_result_isValid = false;

    m_assessment_timestamp_utc_date_isSet = false;
    m_assessment_timestamp_utc_date_isValid = false;

    m_resource_count_isSet = false;
    m_resource_count_isValid = false;
}

void OAIComplianceProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIComplianceProperties::fromJsonObject(QJsonObject json) {

    m_assessment_result_isValid = ::OpenAPI::fromJsonValue(m_assessment_result, json[QString("assessmentResult")]);
    m_assessment_result_isSet = !json[QString("assessmentResult")].isNull() && m_assessment_result_isValid;

    m_assessment_timestamp_utc_date_isValid = ::OpenAPI::fromJsonValue(m_assessment_timestamp_utc_date, json[QString("assessmentTimestampUtcDate")]);
    m_assessment_timestamp_utc_date_isSet = !json[QString("assessmentTimestampUtcDate")].isNull() && m_assessment_timestamp_utc_date_isValid;

    m_resource_count_isValid = ::OpenAPI::fromJsonValue(m_resource_count, json[QString("resourceCount")]);
    m_resource_count_isSet = !json[QString("resourceCount")].isNull() && m_resource_count_isValid;
}

QString OAIComplianceProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIComplianceProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_assessment_result.size() > 0) {
        obj.insert(QString("assessmentResult"), ::OpenAPI::toJsonValue(m_assessment_result));
    }
    if (m_assessment_timestamp_utc_date_isSet) {
        obj.insert(QString("assessmentTimestampUtcDate"), ::OpenAPI::toJsonValue(m_assessment_timestamp_utc_date));
    }
    if (m_resource_count_isSet) {
        obj.insert(QString("resourceCount"), ::OpenAPI::toJsonValue(m_resource_count));
    }
    return obj;
}

QList<OAIComplianceSegment> OAIComplianceProperties::getAssessmentResult() const {
    return m_assessment_result;
}
void OAIComplianceProperties::setAssessmentResult(const QList<OAIComplianceSegment> &assessment_result) {
    m_assessment_result = assessment_result;
    m_assessment_result_isSet = true;
}

bool OAIComplianceProperties::is_assessment_result_Set() const{
    return m_assessment_result_isSet;
}

bool OAIComplianceProperties::is_assessment_result_Valid() const{
    return m_assessment_result_isValid;
}

QDateTime OAIComplianceProperties::getAssessmentTimestampUtcDate() const {
    return m_assessment_timestamp_utc_date;
}
void OAIComplianceProperties::setAssessmentTimestampUtcDate(const QDateTime &assessment_timestamp_utc_date) {
    m_assessment_timestamp_utc_date = assessment_timestamp_utc_date;
    m_assessment_timestamp_utc_date_isSet = true;
}

bool OAIComplianceProperties::is_assessment_timestamp_utc_date_Set() const{
    return m_assessment_timestamp_utc_date_isSet;
}

bool OAIComplianceProperties::is_assessment_timestamp_utc_date_Valid() const{
    return m_assessment_timestamp_utc_date_isValid;
}

qint32 OAIComplianceProperties::getResourceCount() const {
    return m_resource_count;
}
void OAIComplianceProperties::setResourceCount(const qint32 &resource_count) {
    m_resource_count = resource_count;
    m_resource_count_isSet = true;
}

bool OAIComplianceProperties::is_resource_count_Set() const{
    return m_resource_count_isSet;
}

bool OAIComplianceProperties::is_resource_count_Valid() const{
    return m_resource_count_isValid;
}

bool OAIComplianceProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assessment_result.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_assessment_timestamp_utc_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIComplianceProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
