/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIValidationResponseProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIValidationResponseProperties::OAIValidationResponseProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIValidationResponseProperties::OAIValidationResponseProperties() {
    this->initializeModel();
}

OAIValidationResponseProperties::~OAIValidationResponseProperties() {}

void OAIValidationResponseProperties::initializeModel() {

    m_individual_response_details_isSet = false;
    m_individual_response_details_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIValidationResponseProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIValidationResponseProperties::fromJsonObject(QJsonObject json) {

    m_individual_response_details_isValid = ::OpenAPI::fromJsonValue(m_individual_response_details, json[QString("individualResponseDetails")]);
    m_individual_response_details_isSet = !json[QString("individualResponseDetails")].isNull() && m_individual_response_details_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIValidationResponseProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIValidationResponseProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_individual_response_details.size() > 0) {
        obj.insert(QString("individualResponseDetails"), ::OpenAPI::toJsonValue(m_individual_response_details));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QList<OAIValidationInputResponse> OAIValidationResponseProperties::getIndividualResponseDetails() const {
    return m_individual_response_details;
}
void OAIValidationResponseProperties::setIndividualResponseDetails(const QList<OAIValidationInputResponse> &individual_response_details) {
    m_individual_response_details = individual_response_details;
    m_individual_response_details_isSet = true;
}

bool OAIValidationResponseProperties::is_individual_response_details_Set() const{
    return m_individual_response_details_isSet;
}

bool OAIValidationResponseProperties::is_individual_response_details_Valid() const{
    return m_individual_response_details_isValid;
}

QString OAIValidationResponseProperties::getStatus() const {
    return m_status;
}
void OAIValidationResponseProperties::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIValidationResponseProperties::is_status_Set() const{
    return m_status_isSet;
}

bool OAIValidationResponseProperties::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIValidationResponseProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_individual_response_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIValidationResponseProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
