/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShipmentPickUpResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShipmentPickUpResponse::OAIShipmentPickUpResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShipmentPickUpResponse::OAIShipmentPickUpResponse() {
    this->initializeModel();
}

OAIShipmentPickUpResponse::~OAIShipmentPickUpResponse() {}

void OAIShipmentPickUpResponse::initializeModel() {

    m_confirmation_number_isSet = false;
    m_confirmation_number_isValid = false;

    m_ready_by_time_isSet = false;
    m_ready_by_time_isValid = false;
}

void OAIShipmentPickUpResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShipmentPickUpResponse::fromJsonObject(QJsonObject json) {

    m_confirmation_number_isValid = ::OpenAPI::fromJsonValue(m_confirmation_number, json[QString("confirmationNumber")]);
    m_confirmation_number_isSet = !json[QString("confirmationNumber")].isNull() && m_confirmation_number_isValid;

    m_ready_by_time_isValid = ::OpenAPI::fromJsonValue(m_ready_by_time, json[QString("readyByTime")]);
    m_ready_by_time_isSet = !json[QString("readyByTime")].isNull() && m_ready_by_time_isValid;
}

QString OAIShipmentPickUpResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShipmentPickUpResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_confirmation_number_isSet) {
        obj.insert(QString("confirmationNumber"), ::OpenAPI::toJsonValue(m_confirmation_number));
    }
    if (m_ready_by_time_isSet) {
        obj.insert(QString("readyByTime"), ::OpenAPI::toJsonValue(m_ready_by_time));
    }
    return obj;
}

QString OAIShipmentPickUpResponse::getConfirmationNumber() const {
    return m_confirmation_number;
}
void OAIShipmentPickUpResponse::setConfirmationNumber(const QString &confirmation_number) {
    m_confirmation_number = confirmation_number;
    m_confirmation_number_isSet = true;
}

bool OAIShipmentPickUpResponse::is_confirmation_number_Set() const{
    return m_confirmation_number_isSet;
}

bool OAIShipmentPickUpResponse::is_confirmation_number_Valid() const{
    return m_confirmation_number_isValid;
}

QDateTime OAIShipmentPickUpResponse::getReadyByTime() const {
    return m_ready_by_time;
}
void OAIShipmentPickUpResponse::setReadyByTime(const QDateTime &ready_by_time) {
    m_ready_by_time = ready_by_time;
    m_ready_by_time_isSet = true;
}

bool OAIShipmentPickUpResponse::is_ready_by_time_Set() const{
    return m_ready_by_time_isSet;
}

bool OAIShipmentPickUpResponse::is_ready_by_time_Valid() const{
    return m_ready_by_time_isValid;
}

bool OAIShipmentPickUpResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confirmation_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ready_by_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShipmentPickUpResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
