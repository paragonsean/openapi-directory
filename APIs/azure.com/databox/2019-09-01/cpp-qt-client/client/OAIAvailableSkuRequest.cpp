/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAvailableSkuRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAvailableSkuRequest::OAIAvailableSkuRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAvailableSkuRequest::OAIAvailableSkuRequest() {
    this->initializeModel();
}

OAIAvailableSkuRequest::~OAIAvailableSkuRequest() {}

void OAIAvailableSkuRequest::initializeModel() {

    m_country_isSet = false;
    m_country_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_sku_names_isSet = false;
    m_sku_names_isValid = false;

    m_transfer_type_isSet = false;
    m_transfer_type_isValid = false;
}

void OAIAvailableSkuRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAvailableSkuRequest::fromJsonObject(QJsonObject json) {

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_sku_names_isValid = ::OpenAPI::fromJsonValue(m_sku_names, json[QString("skuNames")]);
    m_sku_names_isSet = !json[QString("skuNames")].isNull() && m_sku_names_isValid;

    m_transfer_type_isValid = ::OpenAPI::fromJsonValue(m_transfer_type, json[QString("transferType")]);
    m_transfer_type_isSet = !json[QString("transferType")].isNull() && m_transfer_type_isValid;
}

QString OAIAvailableSkuRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAvailableSkuRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_sku_names.size() > 0) {
        obj.insert(QString("skuNames"), ::OpenAPI::toJsonValue(m_sku_names));
    }
    if (m_transfer_type_isSet) {
        obj.insert(QString("transferType"), ::OpenAPI::toJsonValue(m_transfer_type));
    }
    return obj;
}

QString OAIAvailableSkuRequest::getCountry() const {
    return m_country;
}
void OAIAvailableSkuRequest::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIAvailableSkuRequest::is_country_Set() const{
    return m_country_isSet;
}

bool OAIAvailableSkuRequest::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIAvailableSkuRequest::getLocation() const {
    return m_location;
}
void OAIAvailableSkuRequest::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIAvailableSkuRequest::is_location_Set() const{
    return m_location_isSet;
}

bool OAIAvailableSkuRequest::is_location_Valid() const{
    return m_location_isValid;
}

QList<QString> OAIAvailableSkuRequest::getSkuNames() const {
    return m_sku_names;
}
void OAIAvailableSkuRequest::setSkuNames(const QList<QString> &sku_names) {
    m_sku_names = sku_names;
    m_sku_names_isSet = true;
}

bool OAIAvailableSkuRequest::is_sku_names_Set() const{
    return m_sku_names_isSet;
}

bool OAIAvailableSkuRequest::is_sku_names_Valid() const{
    return m_sku_names_isValid;
}

QString OAIAvailableSkuRequest::getTransferType() const {
    return m_transfer_type;
}
void OAIAvailableSkuRequest::setTransferType(const QString &transfer_type) {
    m_transfer_type = transfer_type;
    m_transfer_type_isSet = true;
}

bool OAIAvailableSkuRequest::is_transfer_type_Set() const{
    return m_transfer_type_isSet;
}

bool OAIAvailableSkuRequest::is_transfer_type_Valid() const{
    return m_transfer_type_isValid;
}

bool OAIAvailableSkuRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAvailableSkuRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_country_isValid && m_location_isValid && m_transfer_type_isValid && true;
}

} // namespace OpenAPI
