/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestinationToServiceLocationMap.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestinationToServiceLocationMap::OAIDestinationToServiceLocationMap(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestinationToServiceLocationMap::OAIDestinationToServiceLocationMap() {
    this->initializeModel();
}

OAIDestinationToServiceLocationMap::~OAIDestinationToServiceLocationMap() {}

void OAIDestinationToServiceLocationMap::initializeModel() {

    m_destination_location_isSet = false;
    m_destination_location_isValid = false;

    m_service_location_isSet = false;
    m_service_location_isValid = false;
}

void OAIDestinationToServiceLocationMap::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestinationToServiceLocationMap::fromJsonObject(QJsonObject json) {

    m_destination_location_isValid = ::OpenAPI::fromJsonValue(m_destination_location, json[QString("destinationLocation")]);
    m_destination_location_isSet = !json[QString("destinationLocation")].isNull() && m_destination_location_isValid;

    m_service_location_isValid = ::OpenAPI::fromJsonValue(m_service_location, json[QString("serviceLocation")]);
    m_service_location_isSet = !json[QString("serviceLocation")].isNull() && m_service_location_isValid;
}

QString OAIDestinationToServiceLocationMap::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestinationToServiceLocationMap::asJsonObject() const {
    QJsonObject obj;
    if (m_destination_location_isSet) {
        obj.insert(QString("destinationLocation"), ::OpenAPI::toJsonValue(m_destination_location));
    }
    if (m_service_location_isSet) {
        obj.insert(QString("serviceLocation"), ::OpenAPI::toJsonValue(m_service_location));
    }
    return obj;
}

QString OAIDestinationToServiceLocationMap::getDestinationLocation() const {
    return m_destination_location;
}
void OAIDestinationToServiceLocationMap::setDestinationLocation(const QString &destination_location) {
    m_destination_location = destination_location;
    m_destination_location_isSet = true;
}

bool OAIDestinationToServiceLocationMap::is_destination_location_Set() const{
    return m_destination_location_isSet;
}

bool OAIDestinationToServiceLocationMap::is_destination_location_Valid() const{
    return m_destination_location_isValid;
}

QString OAIDestinationToServiceLocationMap::getServiceLocation() const {
    return m_service_location;
}
void OAIDestinationToServiceLocationMap::setServiceLocation(const QString &service_location) {
    m_service_location = service_location;
    m_service_location_isSet = true;
}

bool OAIDestinationToServiceLocationMap::is_service_location_Set() const{
    return m_service_location_isSet;
}

bool OAIDestinationToServiceLocationMap::is_service_location_Valid() const{
    return m_service_location_isValid;
}

bool OAIDestinationToServiceLocationMap::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_location_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestinationToServiceLocationMap::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
