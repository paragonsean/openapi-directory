/*
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ContactDetails;
import org.openapitools.client.model.CopyLogDetails;
import org.openapitools.client.model.DestinationAccountDetails;
import org.openapitools.client.model.JobErrorDetails;
import org.openapitools.client.model.JobStages;
import org.openapitools.client.model.PackageShippingDetails;
import org.openapitools.client.model.Preferences;
import org.openapitools.client.model.ShippingAddress;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Job details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:50:48.970368-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class JobDetails {
  public static final String SERIALIZED_NAME_CHAIN_OF_CUSTODY_SAS_KEY = "chainOfCustodySasKey";
  @SerializedName(SERIALIZED_NAME_CHAIN_OF_CUSTODY_SAS_KEY)
  private String chainOfCustodySasKey;

  public static final String SERIALIZED_NAME_CONTACT_DETAILS = "contactDetails";
  @SerializedName(SERIALIZED_NAME_CONTACT_DETAILS)
  private ContactDetails contactDetails;

  public static final String SERIALIZED_NAME_COPY_LOG_DETAILS = "copyLogDetails";
  @SerializedName(SERIALIZED_NAME_COPY_LOG_DETAILS)
  private List<CopyLogDetails> copyLogDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_DELIVERY_PACKAGE = "deliveryPackage";
  @SerializedName(SERIALIZED_NAME_DELIVERY_PACKAGE)
  private PackageShippingDetails deliveryPackage;

  public static final String SERIALIZED_NAME_DESTINATION_ACCOUNT_DETAILS = "destinationAccountDetails";
  @SerializedName(SERIALIZED_NAME_DESTINATION_ACCOUNT_DETAILS)
  private List<DestinationAccountDetails> destinationAccountDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_ERROR_DETAILS = "errorDetails";
  @SerializedName(SERIALIZED_NAME_ERROR_DETAILS)
  private List<JobErrorDetails> errorDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXPECTED_DATA_SIZE_IN_TERABYTES = "expectedDataSizeInTerabytes";
  @SerializedName(SERIALIZED_NAME_EXPECTED_DATA_SIZE_IN_TERABYTES)
  private Integer expectedDataSizeInTerabytes;

  /**
   * Indicates the type of job details.
   */
  @JsonAdapter(JobDetailsTypeEnum.Adapter.class)
  public enum JobDetailsTypeEnum {
    DATA_BOX("DataBox"),
    
    DATA_BOX_DISK("DataBoxDisk"),
    
    DATA_BOX_HEAVY("DataBoxHeavy");

    private String value;

    JobDetailsTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static JobDetailsTypeEnum fromValue(String value) {
      for (JobDetailsTypeEnum b : JobDetailsTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<JobDetailsTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JobDetailsTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public JobDetailsTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return JobDetailsTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      JobDetailsTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_JOB_DETAILS_TYPE = "jobDetailsType";
  @SerializedName(SERIALIZED_NAME_JOB_DETAILS_TYPE)
  protected JobDetailsTypeEnum jobDetailsType;

  public static final String SERIALIZED_NAME_JOB_STAGES = "jobStages";
  @SerializedName(SERIALIZED_NAME_JOB_STAGES)
  private List<JobStages> jobStages = new ArrayList<>();

  public static final String SERIALIZED_NAME_PREFERENCES = "preferences";
  @SerializedName(SERIALIZED_NAME_PREFERENCES)
  private Preferences preferences;

  public static final String SERIALIZED_NAME_RETURN_PACKAGE = "returnPackage";
  @SerializedName(SERIALIZED_NAME_RETURN_PACKAGE)
  private PackageShippingDetails returnPackage;

  public static final String SERIALIZED_NAME_REVERSE_SHIPMENT_LABEL_SAS_KEY = "reverseShipmentLabelSasKey";
  @SerializedName(SERIALIZED_NAME_REVERSE_SHIPMENT_LABEL_SAS_KEY)
  private String reverseShipmentLabelSasKey;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS = "shippingAddress";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS)
  private ShippingAddress shippingAddress;

  public JobDetails() {
  }

  public JobDetails(
     String chainOfCustodySasKey, 
     List<CopyLogDetails> copyLogDetails, 
     List<JobErrorDetails> errorDetails, 
     List<JobStages> jobStages, 
     String reverseShipmentLabelSasKey
  ) {
    this();
    this.chainOfCustodySasKey = chainOfCustodySasKey;
    this.copyLogDetails = copyLogDetails;
    this.errorDetails = errorDetails;
    this.jobStages = jobStages;
    this.reverseShipmentLabelSasKey = reverseShipmentLabelSasKey;
  }

  /**
   * Shared access key to download the chain of custody logs
   * @return chainOfCustodySasKey
   */
  @javax.annotation.Nullable
  public String getChainOfCustodySasKey() {
    return chainOfCustodySasKey;
  }



  public JobDetails contactDetails(ContactDetails contactDetails) {
    this.contactDetails = contactDetails;
    return this;
  }

  /**
   * Get contactDetails
   * @return contactDetails
   */
  @javax.annotation.Nonnull
  public ContactDetails getContactDetails() {
    return contactDetails;
  }

  public void setContactDetails(ContactDetails contactDetails) {
    this.contactDetails = contactDetails;
  }


  /**
   * List of copy log details.
   * @return copyLogDetails
   */
  @javax.annotation.Nullable
  public List<CopyLogDetails> getCopyLogDetails() {
    return copyLogDetails;
  }



  public JobDetails deliveryPackage(PackageShippingDetails deliveryPackage) {
    this.deliveryPackage = deliveryPackage;
    return this;
  }

  /**
   * Get deliveryPackage
   * @return deliveryPackage
   */
  @javax.annotation.Nullable
  public PackageShippingDetails getDeliveryPackage() {
    return deliveryPackage;
  }

  public void setDeliveryPackage(PackageShippingDetails deliveryPackage) {
    this.deliveryPackage = deliveryPackage;
  }


  public JobDetails destinationAccountDetails(List<DestinationAccountDetails> destinationAccountDetails) {
    this.destinationAccountDetails = destinationAccountDetails;
    return this;
  }

  public JobDetails addDestinationAccountDetailsItem(DestinationAccountDetails destinationAccountDetailsItem) {
    if (this.destinationAccountDetails == null) {
      this.destinationAccountDetails = new ArrayList<>();
    }
    this.destinationAccountDetails.add(destinationAccountDetailsItem);
    return this;
  }

  /**
   * Destination account details.
   * @return destinationAccountDetails
   */
  @javax.annotation.Nonnull
  public List<DestinationAccountDetails> getDestinationAccountDetails() {
    return destinationAccountDetails;
  }

  public void setDestinationAccountDetails(List<DestinationAccountDetails> destinationAccountDetails) {
    this.destinationAccountDetails = destinationAccountDetails;
  }


  /**
   * Error details for failure. This is optional.
   * @return errorDetails
   */
  @javax.annotation.Nullable
  public List<JobErrorDetails> getErrorDetails() {
    return errorDetails;
  }



  public JobDetails expectedDataSizeInTerabytes(Integer expectedDataSizeInTerabytes) {
    this.expectedDataSizeInTerabytes = expectedDataSizeInTerabytes;
    return this;
  }

  /**
   * The expected size of the data, which needs to be transferred in this job, in terabytes.
   * @return expectedDataSizeInTerabytes
   */
  @javax.annotation.Nullable
  public Integer getExpectedDataSizeInTerabytes() {
    return expectedDataSizeInTerabytes;
  }

  public void setExpectedDataSizeInTerabytes(Integer expectedDataSizeInTerabytes) {
    this.expectedDataSizeInTerabytes = expectedDataSizeInTerabytes;
  }


  public JobDetails jobDetailsType(JobDetailsTypeEnum jobDetailsType) {
    this.jobDetailsType = jobDetailsType;
    return this;
  }

  /**
   * Indicates the type of job details.
   * @return jobDetailsType
   */
  @javax.annotation.Nonnull
  public JobDetailsTypeEnum getJobDetailsType() {
    return jobDetailsType;
  }

  public void setJobDetailsType(JobDetailsTypeEnum jobDetailsType) {
    this.jobDetailsType = jobDetailsType;
  }


  /**
   * List of stages that run in the job.
   * @return jobStages
   */
  @javax.annotation.Nullable
  public List<JobStages> getJobStages() {
    return jobStages;
  }



  public JobDetails preferences(Preferences preferences) {
    this.preferences = preferences;
    return this;
  }

  /**
   * Get preferences
   * @return preferences
   */
  @javax.annotation.Nullable
  public Preferences getPreferences() {
    return preferences;
  }

  public void setPreferences(Preferences preferences) {
    this.preferences = preferences;
  }


  public JobDetails returnPackage(PackageShippingDetails returnPackage) {
    this.returnPackage = returnPackage;
    return this;
  }

  /**
   * Get returnPackage
   * @return returnPackage
   */
  @javax.annotation.Nullable
  public PackageShippingDetails getReturnPackage() {
    return returnPackage;
  }

  public void setReturnPackage(PackageShippingDetails returnPackage) {
    this.returnPackage = returnPackage;
  }


  /**
   * Shared access key to download the return shipment label
   * @return reverseShipmentLabelSasKey
   */
  @javax.annotation.Nullable
  public String getReverseShipmentLabelSasKey() {
    return reverseShipmentLabelSasKey;
  }



  public JobDetails shippingAddress(ShippingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

  /**
   * Get shippingAddress
   * @return shippingAddress
   */
  @javax.annotation.Nonnull
  public ShippingAddress getShippingAddress() {
    return shippingAddress;
  }

  public void setShippingAddress(ShippingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobDetails jobDetails = (JobDetails) o;
    return Objects.equals(this.chainOfCustodySasKey, jobDetails.chainOfCustodySasKey) &&
        Objects.equals(this.contactDetails, jobDetails.contactDetails) &&
        Objects.equals(this.copyLogDetails, jobDetails.copyLogDetails) &&
        Objects.equals(this.deliveryPackage, jobDetails.deliveryPackage) &&
        Objects.equals(this.destinationAccountDetails, jobDetails.destinationAccountDetails) &&
        Objects.equals(this.errorDetails, jobDetails.errorDetails) &&
        Objects.equals(this.expectedDataSizeInTerabytes, jobDetails.expectedDataSizeInTerabytes) &&
        Objects.equals(this.jobDetailsType, jobDetails.jobDetailsType) &&
        Objects.equals(this.jobStages, jobDetails.jobStages) &&
        Objects.equals(this.preferences, jobDetails.preferences) &&
        Objects.equals(this.returnPackage, jobDetails.returnPackage) &&
        Objects.equals(this.reverseShipmentLabelSasKey, jobDetails.reverseShipmentLabelSasKey) &&
        Objects.equals(this.shippingAddress, jobDetails.shippingAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chainOfCustodySasKey, contactDetails, copyLogDetails, deliveryPackage, destinationAccountDetails, errorDetails, expectedDataSizeInTerabytes, jobDetailsType, jobStages, preferences, returnPackage, reverseShipmentLabelSasKey, shippingAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobDetails {\n");
    sb.append("    chainOfCustodySasKey: ").append(toIndentedString(chainOfCustodySasKey)).append("\n");
    sb.append("    contactDetails: ").append(toIndentedString(contactDetails)).append("\n");
    sb.append("    copyLogDetails: ").append(toIndentedString(copyLogDetails)).append("\n");
    sb.append("    deliveryPackage: ").append(toIndentedString(deliveryPackage)).append("\n");
    sb.append("    destinationAccountDetails: ").append(toIndentedString(destinationAccountDetails)).append("\n");
    sb.append("    errorDetails: ").append(toIndentedString(errorDetails)).append("\n");
    sb.append("    expectedDataSizeInTerabytes: ").append(toIndentedString(expectedDataSizeInTerabytes)).append("\n");
    sb.append("    jobDetailsType: ").append(toIndentedString(jobDetailsType)).append("\n");
    sb.append("    jobStages: ").append(toIndentedString(jobStages)).append("\n");
    sb.append("    preferences: ").append(toIndentedString(preferences)).append("\n");
    sb.append("    returnPackage: ").append(toIndentedString(returnPackage)).append("\n");
    sb.append("    reverseShipmentLabelSasKey: ").append(toIndentedString(reverseShipmentLabelSasKey)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chainOfCustodySasKey");
    openapiFields.add("contactDetails");
    openapiFields.add("copyLogDetails");
    openapiFields.add("deliveryPackage");
    openapiFields.add("destinationAccountDetails");
    openapiFields.add("errorDetails");
    openapiFields.add("expectedDataSizeInTerabytes");
    openapiFields.add("jobDetailsType");
    openapiFields.add("jobStages");
    openapiFields.add("preferences");
    openapiFields.add("returnPackage");
    openapiFields.add("reverseShipmentLabelSasKey");
    openapiFields.add("shippingAddress");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("contactDetails");
    openapiRequiredFields.add("destinationAccountDetails");
    openapiRequiredFields.add("jobDetailsType");
    openapiRequiredFields.add("shippingAddress");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to JobDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!JobDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobDetails is not found in the empty JSON string", JobDetails.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("jobDetailsType").getAsString();
      switch (discriminatorValue) {
        case "DataBoxDiskJobDetails":
          DataBoxDiskJobDetails.validateJsonElement(jsonElement);
          break;
        case "DataBoxHeavyJobDetails":
          DataBoxHeavyJobDetails.validateJsonElement(jsonElement);
          break;
        case "DataBoxJobDetails":
          DataBoxJobDetails.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `jobDetailsType` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of JobDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of JobDetails
   * @throws IOException if the JSON string is invalid with respect to JobDetails
   */
  public static JobDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobDetails.class);
  }

  /**
   * Convert an instance of JobDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

