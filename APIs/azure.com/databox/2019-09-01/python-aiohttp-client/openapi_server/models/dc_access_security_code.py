# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DcAccessSecurityCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, forward_dc_access_code: str=None, reverse_dc_access_code: str=None):
        """DcAccessSecurityCode - a model defined in OpenAPI

        :param forward_dc_access_code: The forward_dc_access_code of this DcAccessSecurityCode.
        :param reverse_dc_access_code: The reverse_dc_access_code of this DcAccessSecurityCode.
        """
        self.openapi_types = {
            'forward_dc_access_code': str,
            'reverse_dc_access_code': str
        }

        self.attribute_map = {
            'forward_dc_access_code': 'forwardDcAccessCode',
            'reverse_dc_access_code': 'reverseDcAccessCode'
        }

        self._forward_dc_access_code = forward_dc_access_code
        self._reverse_dc_access_code = reverse_dc_access_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DcAccessSecurityCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DcAccessSecurityCode of this DcAccessSecurityCode.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def forward_dc_access_code(self):
        """Gets the forward_dc_access_code of this DcAccessSecurityCode.

        Dc Access Code for dispatching from DC.

        :return: The forward_dc_access_code of this DcAccessSecurityCode.
        :rtype: str
        """
        return self._forward_dc_access_code

    @forward_dc_access_code.setter
    def forward_dc_access_code(self, forward_dc_access_code):
        """Sets the forward_dc_access_code of this DcAccessSecurityCode.

        Dc Access Code for dispatching from DC.

        :param forward_dc_access_code: The forward_dc_access_code of this DcAccessSecurityCode.
        :type forward_dc_access_code: str
        """

        self._forward_dc_access_code = forward_dc_access_code

    @property
    def reverse_dc_access_code(self):
        """Gets the reverse_dc_access_code of this DcAccessSecurityCode.

        Dc Access code for dropping off at DC.

        :return: The reverse_dc_access_code of this DcAccessSecurityCode.
        :rtype: str
        """
        return self._reverse_dc_access_code

    @reverse_dc_access_code.setter
    def reverse_dc_access_code(self, reverse_dc_access_code):
        """Sets the reverse_dc_access_code of this DcAccessSecurityCode.

        Dc Access code for dropping off at DC.

        :param reverse_dc_access_code: The reverse_dc_access_code of this DcAccessSecurityCode.
        :type reverse_dc_access_code: str
        """

        self._reverse_dc_access_code = reverse_dc_access_code
