# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dc_access_security_code import DcAccessSecurityCode
from openapi_server import util


class JobSecrets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dc_access_security_code: DcAccessSecurityCode=None, job_secrets_type: str=None):
        """JobSecrets - a model defined in OpenAPI

        :param dc_access_security_code: The dc_access_security_code of this JobSecrets.
        :param job_secrets_type: The job_secrets_type of this JobSecrets.
        """
        self.openapi_types = {
            'dc_access_security_code': DcAccessSecurityCode,
            'job_secrets_type': str
        }

        self.attribute_map = {
            'dc_access_security_code': 'dcAccessSecurityCode',
            'job_secrets_type': 'jobSecretsType'
        }

        self._dc_access_security_code = dc_access_security_code
        self._job_secrets_type = job_secrets_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobSecrets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobSecrets of this JobSecrets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dc_access_security_code(self):
        """Gets the dc_access_security_code of this JobSecrets.


        :return: The dc_access_security_code of this JobSecrets.
        :rtype: DcAccessSecurityCode
        """
        return self._dc_access_security_code

    @dc_access_security_code.setter
    def dc_access_security_code(self, dc_access_security_code):
        """Sets the dc_access_security_code of this JobSecrets.


        :param dc_access_security_code: The dc_access_security_code of this JobSecrets.
        :type dc_access_security_code: DcAccessSecurityCode
        """

        self._dc_access_security_code = dc_access_security_code

    @property
    def job_secrets_type(self):
        """Gets the job_secrets_type of this JobSecrets.

        Used to indicate what type of job secrets object.

        :return: The job_secrets_type of this JobSecrets.
        :rtype: str
        """
        return self._job_secrets_type

    @job_secrets_type.setter
    def job_secrets_type(self, job_secrets_type):
        """Sets the job_secrets_type of this JobSecrets.

        Used to indicate what type of job secrets object.

        :param job_secrets_type: The job_secrets_type of this JobSecrets.
        :type job_secrets_type: str
        """
        allowed_values = ["DataBox", "DataBoxDisk", "DataBoxHeavy"]  # noqa: E501
        if job_secrets_type not in allowed_values:
            raise ValueError(
                "Invalid value for `job_secrets_type` ({0}), must be one of {1}"
                .format(job_secrets_type, allowed_values)
            )

        self._job_secrets_type = job_secrets_type
