# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sku import Sku
from openapi_server import util


class Resource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location: str=None, sku: Sku=None, tags: Dict[str, str]=None):
        """Resource - a model defined in OpenAPI

        :param location: The location of this Resource.
        :param sku: The sku of this Resource.
        :param tags: The tags of this Resource.
        """
        self.openapi_types = {
            'location': str,
            'sku': Sku,
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'location': 'location',
            'sku': 'sku',
            'tags': 'tags'
        }

        self._location = location
        self._sku = sku
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Resource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Resource of this Resource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location(self):
        """Gets the location of this Resource.

        The location of the resource. This will be one of the supported and registered Azure Regions (e.g. West US, East US, Southeast Asia, etc.). The region of a resource cannot be changed once it is created, but if an identical region is specified on update the request will succeed.

        :return: The location of this Resource.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Resource.

        The location of the resource. This will be one of the supported and registered Azure Regions (e.g. West US, East US, Southeast Asia, etc.). The region of a resource cannot be changed once it is created, but if an identical region is specified on update the request will succeed.

        :param location: The location of this Resource.
        :type location: str
        """
        if location is None:
            raise ValueError("Invalid value for `location`, must not be `None`")

        self._location = location

    @property
    def sku(self):
        """Gets the sku of this Resource.


        :return: The sku of this Resource.
        :rtype: Sku
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this Resource.


        :param sku: The sku of this Resource.
        :type sku: Sku
        """
        if sku is None:
            raise ValueError("Invalid value for `sku`, must not be `None`")

        self._sku = sku

    @property
    def tags(self):
        """Gets the tags of this Resource.

        The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).

        :return: The tags of this Resource.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Resource.

        The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).

        :param tags: The tags of this Resource.
        :type tags: Dict[str, str]
        """

        self._tags = tags
