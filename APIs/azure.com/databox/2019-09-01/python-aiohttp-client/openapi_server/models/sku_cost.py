# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SkuCost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, meter_id: str=None, meter_type: str=None):
        """SkuCost - a model defined in OpenAPI

        :param meter_id: The meter_id of this SkuCost.
        :param meter_type: The meter_type of this SkuCost.
        """
        self.openapi_types = {
            'meter_id': str,
            'meter_type': str
        }

        self.attribute_map = {
            'meter_id': 'meterId',
            'meter_type': 'meterType'
        }

        self._meter_id = meter_id
        self._meter_type = meter_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SkuCost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SkuCost of this SkuCost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def meter_id(self):
        """Gets the meter_id of this SkuCost.

        Meter id of the Sku.

        :return: The meter_id of this SkuCost.
        :rtype: str
        """
        return self._meter_id

    @meter_id.setter
    def meter_id(self, meter_id):
        """Sets the meter_id of this SkuCost.

        Meter id of the Sku.

        :param meter_id: The meter_id of this SkuCost.
        :type meter_id: str
        """

        self._meter_id = meter_id

    @property
    def meter_type(self):
        """Gets the meter_type of this SkuCost.

        The type of the meter.

        :return: The meter_type of this SkuCost.
        :rtype: str
        """
        return self._meter_type

    @meter_type.setter
    def meter_type(self, meter_type):
        """Sets the meter_type of this SkuCost.

        The type of the meter.

        :param meter_type: The meter_type of this SkuCost.
        :type meter_type: str
        """

        self._meter_type = meter_type
