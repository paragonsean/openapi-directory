# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.validation_input_request import ValidationInputRequest
from openapi_server.models.validation_request import ValidationRequest
from openapi_server import util


class CreateJobValidations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, individual_request_details: List[ValidationInputRequest]=None, validation_category: str=None):
        """CreateJobValidations - a model defined in OpenAPI

        :param individual_request_details: The individual_request_details of this CreateJobValidations.
        :param validation_category: The validation_category of this CreateJobValidations.
        """
        self.openapi_types = {
            'individual_request_details': List[ValidationInputRequest],
            'validation_category': str
        }

        self.attribute_map = {
            'individual_request_details': 'individualRequestDetails',
            'validation_category': 'validationCategory'
        }

        self._individual_request_details = individual_request_details
        self._validation_category = validation_category

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateJobValidations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateJobValidations of this CreateJobValidations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def individual_request_details(self):
        """Gets the individual_request_details of this CreateJobValidations.

        List of request details contain validationType and its request as key and value respectively.

        :return: The individual_request_details of this CreateJobValidations.
        :rtype: List[ValidationInputRequest]
        """
        return self._individual_request_details

    @individual_request_details.setter
    def individual_request_details(self, individual_request_details):
        """Sets the individual_request_details of this CreateJobValidations.

        List of request details contain validationType and its request as key and value respectively.

        :param individual_request_details: The individual_request_details of this CreateJobValidations.
        :type individual_request_details: List[ValidationInputRequest]
        """
        if individual_request_details is None:
            raise ValueError("Invalid value for `individual_request_details`, must not be `None`")

        self._individual_request_details = individual_request_details

    @property
    def validation_category(self):
        """Gets the validation_category of this CreateJobValidations.

        Identify the nature of validation.

        :return: The validation_category of this CreateJobValidations.
        :rtype: str
        """
        return self._validation_category

    @validation_category.setter
    def validation_category(self, validation_category):
        """Sets the validation_category of this CreateJobValidations.

        Identify the nature of validation.

        :param validation_category: The validation_category of this CreateJobValidations.
        :type validation_category: str
        """
        allowed_values = ["JobCreationValidation"]  # noqa: E501
        if validation_category not in allowed_values:
            raise ValueError(
                "Invalid value for `validation_category` ({0}), must be one of {1}"
                .format(validation_category, allowed_values)
            )

        self._validation_category = validation_category
