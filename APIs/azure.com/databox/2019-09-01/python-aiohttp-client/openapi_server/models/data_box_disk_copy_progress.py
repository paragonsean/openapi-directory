# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataBoxDiskCopyProgress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bytes_copied: int=None, percent_complete: int=None, serial_number: str=None, status: str=None):
        """DataBoxDiskCopyProgress - a model defined in OpenAPI

        :param bytes_copied: The bytes_copied of this DataBoxDiskCopyProgress.
        :param percent_complete: The percent_complete of this DataBoxDiskCopyProgress.
        :param serial_number: The serial_number of this DataBoxDiskCopyProgress.
        :param status: The status of this DataBoxDiskCopyProgress.
        """
        self.openapi_types = {
            'bytes_copied': int,
            'percent_complete': int,
            'serial_number': str,
            'status': str
        }

        self.attribute_map = {
            'bytes_copied': 'bytesCopied',
            'percent_complete': 'percentComplete',
            'serial_number': 'serialNumber',
            'status': 'status'
        }

        self._bytes_copied = bytes_copied
        self._percent_complete = percent_complete
        self._serial_number = serial_number
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataBoxDiskCopyProgress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataBoxDiskCopyProgress of this DataBoxDiskCopyProgress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bytes_copied(self):
        """Gets the bytes_copied of this DataBoxDiskCopyProgress.

        Bytes copied during the copy of disk.

        :return: The bytes_copied of this DataBoxDiskCopyProgress.
        :rtype: int
        """
        return self._bytes_copied

    @bytes_copied.setter
    def bytes_copied(self, bytes_copied):
        """Sets the bytes_copied of this DataBoxDiskCopyProgress.

        Bytes copied during the copy of disk.

        :param bytes_copied: The bytes_copied of this DataBoxDiskCopyProgress.
        :type bytes_copied: int
        """

        self._bytes_copied = bytes_copied

    @property
    def percent_complete(self):
        """Gets the percent_complete of this DataBoxDiskCopyProgress.

        Indicates the percentage completed for the copy of the disk.

        :return: The percent_complete of this DataBoxDiskCopyProgress.
        :rtype: int
        """
        return self._percent_complete

    @percent_complete.setter
    def percent_complete(self, percent_complete):
        """Sets the percent_complete of this DataBoxDiskCopyProgress.

        Indicates the percentage completed for the copy of the disk.

        :param percent_complete: The percent_complete of this DataBoxDiskCopyProgress.
        :type percent_complete: int
        """

        self._percent_complete = percent_complete

    @property
    def serial_number(self):
        """Gets the serial_number of this DataBoxDiskCopyProgress.

        The serial number of the disk

        :return: The serial_number of this DataBoxDiskCopyProgress.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this DataBoxDiskCopyProgress.

        The serial number of the disk

        :param serial_number: The serial_number of this DataBoxDiskCopyProgress.
        :type serial_number: str
        """

        self._serial_number = serial_number

    @property
    def status(self):
        """Gets the status of this DataBoxDiskCopyProgress.

        The Status of the copy

        :return: The status of this DataBoxDiskCopyProgress.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DataBoxDiskCopyProgress.

        The Status of the copy

        :param status: The status of this DataBoxDiskCopyProgress.
        :type status: str
        """
        allowed_values = ["NotStarted", "InProgress", "Completed", "CompletedWithErrors", "Failed", "NotReturned", "HardwareError", "DeviceFormatted", "DeviceMetadataModified", "StorageAccountNotAccessible", "UnsupportedData"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
