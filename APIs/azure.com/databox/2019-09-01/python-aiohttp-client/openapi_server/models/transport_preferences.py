# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TransportPreferences(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, preferred_shipment_type: str=None):
        """TransportPreferences - a model defined in OpenAPI

        :param preferred_shipment_type: The preferred_shipment_type of this TransportPreferences.
        """
        self.openapi_types = {
            'preferred_shipment_type': str
        }

        self.attribute_map = {
            'preferred_shipment_type': 'preferredShipmentType'
        }

        self._preferred_shipment_type = preferred_shipment_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransportPreferences':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransportPreferences of this TransportPreferences.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def preferred_shipment_type(self):
        """Gets the preferred_shipment_type of this TransportPreferences.

        Indicates Shipment Logistics type that the customer preferred.

        :return: The preferred_shipment_type of this TransportPreferences.
        :rtype: str
        """
        return self._preferred_shipment_type

    @preferred_shipment_type.setter
    def preferred_shipment_type(self, preferred_shipment_type):
        """Sets the preferred_shipment_type of this TransportPreferences.

        Indicates Shipment Logistics type that the customer preferred.

        :param preferred_shipment_type: The preferred_shipment_type of this TransportPreferences.
        :type preferred_shipment_type: str
        """
        allowed_values = ["CustomerManaged", "MicrosoftManaged"]  # noqa: E501
        if preferred_shipment_type not in allowed_values:
            raise ValueError(
                "Invalid value for `preferred_shipment_type` ({0}), must be one of {1}"
                .format(preferred_shipment_type, allowed_values)
            )

        self._preferred_shipment_type = preferred_shipment_type
