# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sku import Sku
from openapi_server.models.sku_properties import SkuProperties
from openapi_server import util


class SkuInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, properties: SkuProperties=None, sku: Sku=None):
        """SkuInformation - a model defined in OpenAPI

        :param enabled: The enabled of this SkuInformation.
        :param properties: The properties of this SkuInformation.
        :param sku: The sku of this SkuInformation.
        """
        self.openapi_types = {
            'enabled': bool,
            'properties': SkuProperties,
            'sku': Sku
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'properties': 'properties',
            'sku': 'sku'
        }

        self._enabled = enabled
        self._properties = properties
        self._sku = sku

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SkuInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SkuInformation of this SkuInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this SkuInformation.

        The sku is enabled or not.

        :return: The enabled of this SkuInformation.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this SkuInformation.

        The sku is enabled or not.

        :param enabled: The enabled of this SkuInformation.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def properties(self):
        """Gets the properties of this SkuInformation.


        :return: The properties of this SkuInformation.
        :rtype: SkuProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this SkuInformation.


        :param properties: The properties of this SkuInformation.
        :type properties: SkuProperties
        """

        self._properties = properties

    @property
    def sku(self):
        """Gets the sku of this SkuInformation.


        :return: The sku of this SkuInformation.
        :rtype: Sku
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this SkuInformation.


        :param sku: The sku of this SkuInformation.
        :type sku: Sku
        """

        self._sku = sku
