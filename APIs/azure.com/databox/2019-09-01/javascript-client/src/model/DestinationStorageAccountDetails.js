/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinationAccountDetails from './DestinationAccountDetails';

/**
 * The DestinationStorageAccountDetails model module.
 * @module model/DestinationStorageAccountDetails
 * @version 2019-09-01
 */
class DestinationStorageAccountDetails {
    /**
     * Constructs a new <code>DestinationStorageAccountDetails</code>.
     * Details for the destination storage account.
     * @alias module:model/DestinationStorageAccountDetails
     * @extends module:model/DestinationAccountDetails
     * @implements module:model/DestinationAccountDetails
     * @param dataDestinationType {module:model/DestinationStorageAccountDetails.DataDestinationTypeEnum} Data Destination Type.
     */
    constructor(dataDestinationType) { 
        DestinationAccountDetails.initialize(this, dataDestinationType);
        DestinationStorageAccountDetails.initialize(this, dataDestinationType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dataDestinationType) { 
        obj['storageAccountId'] = storageAccountId;
    }

    /**
     * Constructs a <code>DestinationStorageAccountDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinationStorageAccountDetails} obj Optional instance to populate.
     * @return {module:model/DestinationStorageAccountDetails} The populated <code>DestinationStorageAccountDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinationStorageAccountDetails();
            DestinationAccountDetails.constructFromObject(data, obj);
            DestinationAccountDetails.constructFromObject(data, obj);

            if (data.hasOwnProperty('storageAccountId')) {
                obj['storageAccountId'] = ApiClient.convertToType(data['storageAccountId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinationStorageAccountDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinationStorageAccountDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DestinationStorageAccountDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['storageAccountId'] && !(typeof data['storageAccountId'] === 'string' || data['storageAccountId'] instanceof String)) {
            throw new Error("Expected the field `storageAccountId` to be a primitive type in the JSON string but got " + data['storageAccountId']);
        }

        return true;
    }


}

DestinationStorageAccountDetails.RequiredProperties = ["storageAccountId", "dataDestinationType"];

/**
 * Destination Storage Account Arm Id.
 * @member {String} storageAccountId
 */
DestinationStorageAccountDetails.prototype['storageAccountId'] = undefined;


// Implement DestinationAccountDetails interface:
/**
 * Arm Id of the destination where the data has to be moved.
 * @member {String} accountId
 */
DestinationAccountDetails.prototype['accountId'] = undefined;
/**
 * Data Destination Type.
 * @member {module:model/DestinationAccountDetails.DataDestinationTypeEnum} dataDestinationType
 */
DestinationAccountDetails.prototype['dataDestinationType'] = undefined;
/**
 * Share password to be shared by all shares in SA.
 * @member {String} sharePassword
 */
DestinationAccountDetails.prototype['sharePassword'] = undefined;




export default DestinationStorageAccountDetails;

