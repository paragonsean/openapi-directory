/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DestinationAccountDetails model module.
 * @module model/DestinationAccountDetails
 * @version 2019-09-01
 */
class DestinationAccountDetails {
    /**
     * Constructs a new <code>DestinationAccountDetails</code>.
     * Details of the destination storage accounts.
     * @alias module:model/DestinationAccountDetails
     * @param dataDestinationType {module:model/DestinationAccountDetails.DataDestinationTypeEnum} Data Destination Type.
     */
    constructor(dataDestinationType) { 
        
        DestinationAccountDetails.initialize(this, dataDestinationType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dataDestinationType) { 
        obj['dataDestinationType'] = dataDestinationType;
    }

    /**
     * Constructs a <code>DestinationAccountDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinationAccountDetails} obj Optional instance to populate.
     * @return {module:model/DestinationAccountDetails} The populated <code>DestinationAccountDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinationAccountDetails();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('dataDestinationType')) {
                obj['dataDestinationType'] = ApiClient.convertToType(data['dataDestinationType'], 'String');
            }
            if (data.hasOwnProperty('sharePassword')) {
                obj['sharePassword'] = ApiClient.convertToType(data['sharePassword'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinationAccountDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinationAccountDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DestinationAccountDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['dataDestinationType'] && !(typeof data['dataDestinationType'] === 'string' || data['dataDestinationType'] instanceof String)) {
            throw new Error("Expected the field `dataDestinationType` to be a primitive type in the JSON string but got " + data['dataDestinationType']);
        }
        // ensure the json data is a string
        if (data['sharePassword'] && !(typeof data['sharePassword'] === 'string' || data['sharePassword'] instanceof String)) {
            throw new Error("Expected the field `sharePassword` to be a primitive type in the JSON string but got " + data['sharePassword']);
        }

        return true;
    }


}

DestinationAccountDetails.RequiredProperties = ["dataDestinationType"];

/**
 * Arm Id of the destination where the data has to be moved.
 * @member {String} accountId
 */
DestinationAccountDetails.prototype['accountId'] = undefined;

/**
 * Data Destination Type.
 * @member {module:model/DestinationAccountDetails.DataDestinationTypeEnum} dataDestinationType
 */
DestinationAccountDetails.prototype['dataDestinationType'] = undefined;

/**
 * Share password to be shared by all shares in SA.
 * @member {String} sharePassword
 */
DestinationAccountDetails.prototype['sharePassword'] = undefined;





/**
 * Allowed values for the <code>dataDestinationType</code> property.
 * @enum {String}
 * @readonly
 */
DestinationAccountDetails['DataDestinationTypeEnum'] = {

    /**
     * value: "StorageAccount"
     * @const
     */
    "StorageAccount": "StorageAccount",

    /**
     * value: "ManagedDisk"
     * @const
     */
    "ManagedDisk": "ManagedDisk"
};



export default DestinationAccountDetails;

