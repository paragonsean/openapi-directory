/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ValidationInputRequest from './ValidationInputRequest';

/**
 * The ValidationRequest model module.
 * @module model/ValidationRequest
 * @version 2019-09-01
 */
class ValidationRequest {
    /**
     * Constructs a new <code>ValidationRequest</code>.
     * Input request for all pre job creation validation.
     * @alias module:model/ValidationRequest
     * @param individualRequestDetails {Array.<module:model/ValidationInputRequest>} List of request details contain validationType and its request as key and value respectively.
     * @param validationCategory {module:model/ValidationRequest.ValidationCategoryEnum} Identify the nature of validation.
     */
    constructor(individualRequestDetails, validationCategory) { 
        
        ValidationRequest.initialize(this, individualRequestDetails, validationCategory);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, individualRequestDetails, validationCategory) { 
        obj['individualRequestDetails'] = individualRequestDetails;
        obj['validationCategory'] = validationCategory;
    }

    /**
     * Constructs a <code>ValidationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidationRequest} obj Optional instance to populate.
     * @return {module:model/ValidationRequest} The populated <code>ValidationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidationRequest();

            if (data.hasOwnProperty('individualRequestDetails')) {
                obj['individualRequestDetails'] = ApiClient.convertToType(data['individualRequestDetails'], [ValidationInputRequest]);
            }
            if (data.hasOwnProperty('validationCategory')) {
                obj['validationCategory'] = ApiClient.convertToType(data['validationCategory'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ValidationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['individualRequestDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['individualRequestDetails'])) {
                throw new Error("Expected the field `individualRequestDetails` to be an array in the JSON data but got " + data['individualRequestDetails']);
            }
            // validate the optional field `individualRequestDetails` (array)
            for (const item of data['individualRequestDetails']) {
                ValidationInputRequest.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['validationCategory'] && !(typeof data['validationCategory'] === 'string' || data['validationCategory'] instanceof String)) {
            throw new Error("Expected the field `validationCategory` to be a primitive type in the JSON string but got " + data['validationCategory']);
        }

        return true;
    }


}

ValidationRequest.RequiredProperties = ["individualRequestDetails", "validationCategory"];

/**
 * List of request details contain validationType and its request as key and value respectively.
 * @member {Array.<module:model/ValidationInputRequest>} individualRequestDetails
 */
ValidationRequest.prototype['individualRequestDetails'] = undefined;

/**
 * Identify the nature of validation.
 * @member {module:model/ValidationRequest.ValidationCategoryEnum} validationCategory
 */
ValidationRequest.prototype['validationCategory'] = undefined;





/**
 * Allowed values for the <code>validationCategory</code> property.
 * @enum {String}
 * @readonly
 */
ValidationRequest['ValidationCategoryEnum'] = {

    /**
     * value: "JobCreationValidation"
     * @const
     */
    "JobCreationValidation": "JobCreationValidation"
};



export default ValidationRequest;

