/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ValidationInputRequest from './ValidationInputRequest';
import ValidationRequest from './ValidationRequest';

/**
 * The CreateJobValidations model module.
 * @module model/CreateJobValidations
 * @version 2019-09-01
 */
class CreateJobValidations {
    /**
     * Constructs a new <code>CreateJobValidations</code>.
     * It does all pre-job creation validations.
     * @alias module:model/CreateJobValidations
     * @extends module:model/ValidationRequest
     * @implements module:model/ValidationRequest
     * @param individualRequestDetails {Array.<module:model/ValidationInputRequest>} List of request details contain validationType and its request as key and value respectively.
     * @param validationCategory {module:model/CreateJobValidations.ValidationCategoryEnum} Identify the nature of validation.
     */
    constructor(individualRequestDetails, validationCategory) { 
        ValidationRequest.initialize(this, individualRequestDetails, validationCategory);
        CreateJobValidations.initialize(this, individualRequestDetails, validationCategory);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, individualRequestDetails, validationCategory) { 
    }

    /**
     * Constructs a <code>CreateJobValidations</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateJobValidations} obj Optional instance to populate.
     * @return {module:model/CreateJobValidations} The populated <code>CreateJobValidations</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateJobValidations();
            ValidationRequest.constructFromObject(data, obj);
            ValidationRequest.constructFromObject(data, obj);

        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateJobValidations</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateJobValidations</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateJobValidations.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

CreateJobValidations.RequiredProperties = ["individualRequestDetails", "validationCategory"];


// Implement ValidationRequest interface:
/**
 * List of request details contain validationType and its request as key and value respectively.
 * @member {Array.<module:model/ValidationInputRequest>} individualRequestDetails
 */
ValidationRequest.prototype['individualRequestDetails'] = undefined;
/**
 * Identify the nature of validation.
 * @member {module:model/ValidationRequest.ValidationCategoryEnum} validationCategory
 */
ValidationRequest.prototype['validationCategory'] = undefined;




export default CreateJobValidations;

