/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScheduleAvailabilityRequest from './ScheduleAvailabilityRequest';

/**
 * The HeavyScheduleAvailabilityRequest model module.
 * @module model/HeavyScheduleAvailabilityRequest
 * @version 2019-09-01
 */
class HeavyScheduleAvailabilityRequest {
    /**
     * Constructs a new <code>HeavyScheduleAvailabilityRequest</code>.
     * Request body to get the availability for scheduling heavy orders.
     * @alias module:model/HeavyScheduleAvailabilityRequest
     * @extends module:model/ScheduleAvailabilityRequest
     * @implements module:model/ScheduleAvailabilityRequest
     * @param skuName {module:model/HeavyScheduleAvailabilityRequest.SkuNameEnum} Sku Name for which the order is to be scheduled.
     * @param storageLocation {String} Location for data transfer.   For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
     */
    constructor(skuName, storageLocation) { 
        ScheduleAvailabilityRequest.initialize(this, skuName, storageLocation);
        HeavyScheduleAvailabilityRequest.initialize(this, skuName, storageLocation);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, skuName, storageLocation) { 
    }

    /**
     * Constructs a <code>HeavyScheduleAvailabilityRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HeavyScheduleAvailabilityRequest} obj Optional instance to populate.
     * @return {module:model/HeavyScheduleAvailabilityRequest} The populated <code>HeavyScheduleAvailabilityRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HeavyScheduleAvailabilityRequest();
            ScheduleAvailabilityRequest.constructFromObject(data, obj);
            ScheduleAvailabilityRequest.constructFromObject(data, obj);

        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HeavyScheduleAvailabilityRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HeavyScheduleAvailabilityRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HeavyScheduleAvailabilityRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

HeavyScheduleAvailabilityRequest.RequiredProperties = ["skuName", "storageLocation"];


// Implement ScheduleAvailabilityRequest interface:
/**
 * Sku Name for which the order is to be scheduled.
 * @member {module:model/ScheduleAvailabilityRequest.SkuNameEnum} skuName
 */
ScheduleAvailabilityRequest.prototype['skuName'] = undefined;
/**
 * Location for data transfer.   For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
 * @member {String} storageLocation
 */
ScheduleAvailabilityRequest.prototype['storageLocation'] = undefined;




export default HeavyScheduleAvailabilityRequest;

