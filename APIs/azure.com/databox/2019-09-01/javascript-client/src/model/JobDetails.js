/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContactDetails from './ContactDetails';
import CopyLogDetails from './CopyLogDetails';
import DestinationAccountDetails from './DestinationAccountDetails';
import JobErrorDetails from './JobErrorDetails';
import JobStages from './JobStages';
import PackageShippingDetails from './PackageShippingDetails';
import Preferences from './Preferences';
import ShippingAddress from './ShippingAddress';

/**
 * The JobDetails model module.
 * @module model/JobDetails
 * @version 2019-09-01
 */
class JobDetails {
    /**
     * Constructs a new <code>JobDetails</code>.
     * Job details.
     * @alias module:model/JobDetails
     * @param contactDetails {module:model/ContactDetails} 
     * @param destinationAccountDetails {Array.<module:model/DestinationAccountDetails>} Destination account details.
     * @param jobDetailsType {module:model/JobDetails.JobDetailsTypeEnum} Indicates the type of job details.
     * @param shippingAddress {module:model/ShippingAddress} 
     */
    constructor(contactDetails, destinationAccountDetails, jobDetailsType, shippingAddress) { 
        
        JobDetails.initialize(this, contactDetails, destinationAccountDetails, jobDetailsType, shippingAddress);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contactDetails, destinationAccountDetails, jobDetailsType, shippingAddress) { 
        obj['contactDetails'] = contactDetails;
        obj['destinationAccountDetails'] = destinationAccountDetails;
        obj['jobDetailsType'] = jobDetailsType;
        obj['shippingAddress'] = shippingAddress;
    }

    /**
     * Constructs a <code>JobDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobDetails} obj Optional instance to populate.
     * @return {module:model/JobDetails} The populated <code>JobDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobDetails();

            if (data.hasOwnProperty('chainOfCustodySasKey')) {
                obj['chainOfCustodySasKey'] = ApiClient.convertToType(data['chainOfCustodySasKey'], 'String');
            }
            if (data.hasOwnProperty('contactDetails')) {
                obj['contactDetails'] = ContactDetails.constructFromObject(data['contactDetails']);
            }
            if (data.hasOwnProperty('copyLogDetails')) {
                obj['copyLogDetails'] = ApiClient.convertToType(data['copyLogDetails'], [CopyLogDetails]);
            }
            if (data.hasOwnProperty('deliveryPackage')) {
                obj['deliveryPackage'] = PackageShippingDetails.constructFromObject(data['deliveryPackage']);
            }
            if (data.hasOwnProperty('destinationAccountDetails')) {
                obj['destinationAccountDetails'] = ApiClient.convertToType(data['destinationAccountDetails'], [DestinationAccountDetails]);
            }
            if (data.hasOwnProperty('errorDetails')) {
                obj['errorDetails'] = ApiClient.convertToType(data['errorDetails'], [JobErrorDetails]);
            }
            if (data.hasOwnProperty('expectedDataSizeInTerabytes')) {
                obj['expectedDataSizeInTerabytes'] = ApiClient.convertToType(data['expectedDataSizeInTerabytes'], 'Number');
            }
            if (data.hasOwnProperty('jobDetailsType')) {
                obj['jobDetailsType'] = ApiClient.convertToType(data['jobDetailsType'], 'String');
            }
            if (data.hasOwnProperty('jobStages')) {
                obj['jobStages'] = ApiClient.convertToType(data['jobStages'], [JobStages]);
            }
            if (data.hasOwnProperty('preferences')) {
                obj['preferences'] = Preferences.constructFromObject(data['preferences']);
            }
            if (data.hasOwnProperty('returnPackage')) {
                obj['returnPackage'] = PackageShippingDetails.constructFromObject(data['returnPackage']);
            }
            if (data.hasOwnProperty('reverseShipmentLabelSasKey')) {
                obj['reverseShipmentLabelSasKey'] = ApiClient.convertToType(data['reverseShipmentLabelSasKey'], 'String');
            }
            if (data.hasOwnProperty('shippingAddress')) {
                obj['shippingAddress'] = ShippingAddress.constructFromObject(data['shippingAddress']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['chainOfCustodySasKey'] && !(typeof data['chainOfCustodySasKey'] === 'string' || data['chainOfCustodySasKey'] instanceof String)) {
            throw new Error("Expected the field `chainOfCustodySasKey` to be a primitive type in the JSON string but got " + data['chainOfCustodySasKey']);
        }
        // validate the optional field `contactDetails`
        if (data['contactDetails']) { // data not null
          ContactDetails.validateJSON(data['contactDetails']);
        }
        if (data['copyLogDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['copyLogDetails'])) {
                throw new Error("Expected the field `copyLogDetails` to be an array in the JSON data but got " + data['copyLogDetails']);
            }
            // validate the optional field `copyLogDetails` (array)
            for (const item of data['copyLogDetails']) {
                CopyLogDetails.validateJSON(item);
            };
        }
        // validate the optional field `deliveryPackage`
        if (data['deliveryPackage']) { // data not null
          PackageShippingDetails.validateJSON(data['deliveryPackage']);
        }
        if (data['destinationAccountDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['destinationAccountDetails'])) {
                throw new Error("Expected the field `destinationAccountDetails` to be an array in the JSON data but got " + data['destinationAccountDetails']);
            }
            // validate the optional field `destinationAccountDetails` (array)
            for (const item of data['destinationAccountDetails']) {
                DestinationAccountDetails.validateJSON(item);
            };
        }
        if (data['errorDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errorDetails'])) {
                throw new Error("Expected the field `errorDetails` to be an array in the JSON data but got " + data['errorDetails']);
            }
            // validate the optional field `errorDetails` (array)
            for (const item of data['errorDetails']) {
                JobErrorDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['jobDetailsType'] && !(typeof data['jobDetailsType'] === 'string' || data['jobDetailsType'] instanceof String)) {
            throw new Error("Expected the field `jobDetailsType` to be a primitive type in the JSON string but got " + data['jobDetailsType']);
        }
        if (data['jobStages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['jobStages'])) {
                throw new Error("Expected the field `jobStages` to be an array in the JSON data but got " + data['jobStages']);
            }
            // validate the optional field `jobStages` (array)
            for (const item of data['jobStages']) {
                JobStages.validateJSON(item);
            };
        }
        // validate the optional field `preferences`
        if (data['preferences']) { // data not null
          Preferences.validateJSON(data['preferences']);
        }
        // validate the optional field `returnPackage`
        if (data['returnPackage']) { // data not null
          PackageShippingDetails.validateJSON(data['returnPackage']);
        }
        // ensure the json data is a string
        if (data['reverseShipmentLabelSasKey'] && !(typeof data['reverseShipmentLabelSasKey'] === 'string' || data['reverseShipmentLabelSasKey'] instanceof String)) {
            throw new Error("Expected the field `reverseShipmentLabelSasKey` to be a primitive type in the JSON string but got " + data['reverseShipmentLabelSasKey']);
        }
        // validate the optional field `shippingAddress`
        if (data['shippingAddress']) { // data not null
          ShippingAddress.validateJSON(data['shippingAddress']);
        }

        return true;
    }


}

JobDetails.RequiredProperties = ["contactDetails", "destinationAccountDetails", "jobDetailsType", "shippingAddress"];

/**
 * Shared access key to download the chain of custody logs
 * @member {String} chainOfCustodySasKey
 */
JobDetails.prototype['chainOfCustodySasKey'] = undefined;

/**
 * @member {module:model/ContactDetails} contactDetails
 */
JobDetails.prototype['contactDetails'] = undefined;

/**
 * List of copy log details.
 * @member {Array.<module:model/CopyLogDetails>} copyLogDetails
 */
JobDetails.prototype['copyLogDetails'] = undefined;

/**
 * @member {module:model/PackageShippingDetails} deliveryPackage
 */
JobDetails.prototype['deliveryPackage'] = undefined;

/**
 * Destination account details.
 * @member {Array.<module:model/DestinationAccountDetails>} destinationAccountDetails
 */
JobDetails.prototype['destinationAccountDetails'] = undefined;

/**
 * Error details for failure. This is optional.
 * @member {Array.<module:model/JobErrorDetails>} errorDetails
 */
JobDetails.prototype['errorDetails'] = undefined;

/**
 * The expected size of the data, which needs to be transferred in this job, in terabytes.
 * @member {Number} expectedDataSizeInTerabytes
 */
JobDetails.prototype['expectedDataSizeInTerabytes'] = undefined;

/**
 * Indicates the type of job details.
 * @member {module:model/JobDetails.JobDetailsTypeEnum} jobDetailsType
 */
JobDetails.prototype['jobDetailsType'] = undefined;

/**
 * List of stages that run in the job.
 * @member {Array.<module:model/JobStages>} jobStages
 */
JobDetails.prototype['jobStages'] = undefined;

/**
 * @member {module:model/Preferences} preferences
 */
JobDetails.prototype['preferences'] = undefined;

/**
 * @member {module:model/PackageShippingDetails} returnPackage
 */
JobDetails.prototype['returnPackage'] = undefined;

/**
 * Shared access key to download the return shipment label
 * @member {String} reverseShipmentLabelSasKey
 */
JobDetails.prototype['reverseShipmentLabelSasKey'] = undefined;

/**
 * @member {module:model/ShippingAddress} shippingAddress
 */
JobDetails.prototype['shippingAddress'] = undefined;





/**
 * Allowed values for the <code>jobDetailsType</code> property.
 * @enum {String}
 * @readonly
 */
JobDetails['JobDetailsTypeEnum'] = {

    /**
     * value: "DataBox"
     * @const
     */
    "DataBox": "DataBox",

    /**
     * value: "DataBoxDisk"
     * @const
     */
    "DataBoxDisk": "DataBoxDisk",

    /**
     * value: "DataBoxHeavy"
     * @const
     */
    "DataBoxHeavy": "DataBoxHeavy"
};



export default JobDetails;

