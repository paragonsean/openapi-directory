/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransportAvailabilityDetails model module.
 * @module model/TransportAvailabilityDetails
 * @version 2019-09-01
 */
class TransportAvailabilityDetails {
    /**
     * Constructs a new <code>TransportAvailabilityDetails</code>.
     * Transport options availability details for given region.
     * @alias module:model/TransportAvailabilityDetails
     */
    constructor() { 
        
        TransportAvailabilityDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransportAvailabilityDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransportAvailabilityDetails} obj Optional instance to populate.
     * @return {module:model/TransportAvailabilityDetails} The populated <code>TransportAvailabilityDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransportAvailabilityDetails();

            if (data.hasOwnProperty('shipmentType')) {
                obj['shipmentType'] = ApiClient.convertToType(data['shipmentType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransportAvailabilityDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransportAvailabilityDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['shipmentType'] && !(typeof data['shipmentType'] === 'string' || data['shipmentType'] instanceof String)) {
            throw new Error("Expected the field `shipmentType` to be a primitive type in the JSON string but got " + data['shipmentType']);
        }

        return true;
    }


}



/**
 * Transport Shipment Type supported for given region.
 * @member {module:model/TransportAvailabilityDetails.ShipmentTypeEnum} shipmentType
 */
TransportAvailabilityDetails.prototype['shipmentType'] = undefined;





/**
 * Allowed values for the <code>shipmentType</code> property.
 * @enum {String}
 * @readonly
 */
TransportAvailabilityDetails['ShipmentTypeEnum'] = {

    /**
     * value: "CustomerManaged"
     * @const
     */
    "CustomerManaged": "CustomerManaged",

    /**
     * value: "MicrosoftManaged"
     * @const
     */
    "MicrosoftManaged": "MicrosoftManaged"
};



export default TransportAvailabilityDetails;

