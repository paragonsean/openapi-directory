/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DcAccessSecurityCode model module.
 * @module model/DcAccessSecurityCode
 * @version 2019-09-01
 */
class DcAccessSecurityCode {
    /**
     * Constructs a new <code>DcAccessSecurityCode</code>.
     * Dc Access Security code for device.
     * @alias module:model/DcAccessSecurityCode
     */
    constructor() { 
        
        DcAccessSecurityCode.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DcAccessSecurityCode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DcAccessSecurityCode} obj Optional instance to populate.
     * @return {module:model/DcAccessSecurityCode} The populated <code>DcAccessSecurityCode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DcAccessSecurityCode();

            if (data.hasOwnProperty('forwardDcAccessCode')) {
                obj['forwardDcAccessCode'] = ApiClient.convertToType(data['forwardDcAccessCode'], 'String');
            }
            if (data.hasOwnProperty('reverseDcAccessCode')) {
                obj['reverseDcAccessCode'] = ApiClient.convertToType(data['reverseDcAccessCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DcAccessSecurityCode</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DcAccessSecurityCode</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['forwardDcAccessCode'] && !(typeof data['forwardDcAccessCode'] === 'string' || data['forwardDcAccessCode'] instanceof String)) {
            throw new Error("Expected the field `forwardDcAccessCode` to be a primitive type in the JSON string but got " + data['forwardDcAccessCode']);
        }
        // ensure the json data is a string
        if (data['reverseDcAccessCode'] && !(typeof data['reverseDcAccessCode'] === 'string' || data['reverseDcAccessCode'] instanceof String)) {
            throw new Error("Expected the field `reverseDcAccessCode` to be a primitive type in the JSON string but got " + data['reverseDcAccessCode']);
        }

        return true;
    }


}



/**
 * Dc Access Code for dispatching from DC.
 * @member {String} forwardDcAccessCode
 */
DcAccessSecurityCode.prototype['forwardDcAccessCode'] = undefined;

/**
 * Dc Access code for dropping off at DC.
 * @member {String} reverseDcAccessCode
 */
DcAccessSecurityCode.prototype['reverseDcAccessCode'] = undefined;






export default DcAccessSecurityCode;

