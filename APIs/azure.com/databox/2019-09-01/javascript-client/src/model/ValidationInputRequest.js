/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ValidationInputRequest model module.
 * @module model/ValidationInputRequest
 * @version 2019-09-01
 */
class ValidationInputRequest {
    /**
     * Constructs a new <code>ValidationInputRequest</code>.
     * Minimum fields that must be present in any type of validation request.
     * @alias module:model/ValidationInputRequest
     * @param validationType {module:model/ValidationInputRequest.ValidationTypeEnum} Identifies the type of validation request.
     */
    constructor(validationType) { 
        
        ValidationInputRequest.initialize(this, validationType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, validationType) { 
        obj['validationType'] = validationType;
    }

    /**
     * Constructs a <code>ValidationInputRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidationInputRequest} obj Optional instance to populate.
     * @return {module:model/ValidationInputRequest} The populated <code>ValidationInputRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidationInputRequest();

            if (data.hasOwnProperty('validationType')) {
                obj['validationType'] = ApiClient.convertToType(data['validationType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidationInputRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidationInputRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ValidationInputRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['validationType'] && !(typeof data['validationType'] === 'string' || data['validationType'] instanceof String)) {
            throw new Error("Expected the field `validationType` to be a primitive type in the JSON string but got " + data['validationType']);
        }

        return true;
    }


}

ValidationInputRequest.RequiredProperties = ["validationType"];

/**
 * Identifies the type of validation request.
 * @member {module:model/ValidationInputRequest.ValidationTypeEnum} validationType
 */
ValidationInputRequest.prototype['validationType'] = undefined;





/**
 * Allowed values for the <code>validationType</code> property.
 * @enum {String}
 * @readonly
 */
ValidationInputRequest['ValidationTypeEnum'] = {

    /**
     * value: "ValidateAddress"
     * @const
     */
    "ValidateAddress": "ValidateAddress",

    /**
     * value: "ValidateDataDestinationDetails"
     * @const
     */
    "ValidateDataDestinationDetails": "ValidateDataDestinationDetails",

    /**
     * value: "ValidateSubscriptionIsAllowedToCreateJob"
     * @const
     */
    "ValidateSubscriptionIsAllowedToCreateJob": "ValidateSubscriptionIsAllowedToCreateJob",

    /**
     * value: "ValidatePreferences"
     * @const
     */
    "ValidatePreferences": "ValidatePreferences",

    /**
     * value: "ValidateCreateOrderLimit"
     * @const
     */
    "ValidateCreateOrderLimit": "ValidateCreateOrderLimit",

    /**
     * value: "ValidateSkuAvailability"
     * @const
     */
    "ValidateSkuAvailability": "ValidateSkuAvailability"
};



export default ValidationInputRequest;

