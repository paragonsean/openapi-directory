/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CopyProgress model module.
 * @module model/CopyProgress
 * @version 2019-09-01
 */
class CopyProgress {
    /**
     * Constructs a new <code>CopyProgress</code>.
     * Copy progress.
     * @alias module:model/CopyProgress
     */
    constructor() { 
        
        CopyProgress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CopyProgress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CopyProgress} obj Optional instance to populate.
     * @return {module:model/CopyProgress} The populated <code>CopyProgress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CopyProgress();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('bytesSentToCloud')) {
                obj['bytesSentToCloud'] = ApiClient.convertToType(data['bytesSentToCloud'], 'Number');
            }
            if (data.hasOwnProperty('dataDestinationType')) {
                obj['dataDestinationType'] = ApiClient.convertToType(data['dataDestinationType'], 'String');
            }
            if (data.hasOwnProperty('filesErroredOut')) {
                obj['filesErroredOut'] = ApiClient.convertToType(data['filesErroredOut'], 'Number');
            }
            if (data.hasOwnProperty('filesProcessed')) {
                obj['filesProcessed'] = ApiClient.convertToType(data['filesProcessed'], 'Number');
            }
            if (data.hasOwnProperty('invalidFileBytesUploaded')) {
                obj['invalidFileBytesUploaded'] = ApiClient.convertToType(data['invalidFileBytesUploaded'], 'Number');
            }
            if (data.hasOwnProperty('invalidFilesProcessed')) {
                obj['invalidFilesProcessed'] = ApiClient.convertToType(data['invalidFilesProcessed'], 'Number');
            }
            if (data.hasOwnProperty('renamedContainerCount')) {
                obj['renamedContainerCount'] = ApiClient.convertToType(data['renamedContainerCount'], 'Number');
            }
            if (data.hasOwnProperty('storageAccountName')) {
                obj['storageAccountName'] = ApiClient.convertToType(data['storageAccountName'], 'String');
            }
            if (data.hasOwnProperty('totalBytesToProcess')) {
                obj['totalBytesToProcess'] = ApiClient.convertToType(data['totalBytesToProcess'], 'Number');
            }
            if (data.hasOwnProperty('totalFilesToProcess')) {
                obj['totalFilesToProcess'] = ApiClient.convertToType(data['totalFilesToProcess'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CopyProgress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CopyProgress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['dataDestinationType'] && !(typeof data['dataDestinationType'] === 'string' || data['dataDestinationType'] instanceof String)) {
            throw new Error("Expected the field `dataDestinationType` to be a primitive type in the JSON string but got " + data['dataDestinationType']);
        }
        // ensure the json data is a string
        if (data['storageAccountName'] && !(typeof data['storageAccountName'] === 'string' || data['storageAccountName'] instanceof String)) {
            throw new Error("Expected the field `storageAccountName` to be a primitive type in the JSON string but got " + data['storageAccountName']);
        }

        return true;
    }


}



/**
 * Id of the account where the data needs to be uploaded.
 * @member {String} accountId
 */
CopyProgress.prototype['accountId'] = undefined;

/**
 * Amount of data uploaded by the job as of now.
 * @member {Number} bytesSentToCloud
 */
CopyProgress.prototype['bytesSentToCloud'] = undefined;

/**
 * Data Destination Type.
 * @member {module:model/CopyProgress.DataDestinationTypeEnum} dataDestinationType
 */
CopyProgress.prototype['dataDestinationType'] = undefined;

/**
 * Number of files which could not be copied
 * @member {Number} filesErroredOut
 */
CopyProgress.prototype['filesErroredOut'] = undefined;

/**
 * Number of files processed by the job as of now.
 * @member {Number} filesProcessed
 */
CopyProgress.prototype['filesProcessed'] = undefined;

/**
 * Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
 * @member {Number} invalidFileBytesUploaded
 */
CopyProgress.prototype['invalidFileBytesUploaded'] = undefined;

/**
 * Number of files not adhering to azure naming conventions which were processed by automatic renaming
 * @member {Number} invalidFilesProcessed
 */
CopyProgress.prototype['invalidFilesProcessed'] = undefined;

/**
 * Number of folders not adhering to azure naming conventions which were processed by automatic renaming
 * @member {Number} renamedContainerCount
 */
CopyProgress.prototype['renamedContainerCount'] = undefined;

/**
 * Name of the storage account where the data needs to be uploaded.
 * @member {String} storageAccountName
 */
CopyProgress.prototype['storageAccountName'] = undefined;

/**
 * Total amount of data to be processed by the job.
 * @member {Number} totalBytesToProcess
 */
CopyProgress.prototype['totalBytesToProcess'] = undefined;

/**
 * Total number of files to be processed by the job.
 * @member {Number} totalFilesToProcess
 */
CopyProgress.prototype['totalFilesToProcess'] = undefined;





/**
 * Allowed values for the <code>dataDestinationType</code> property.
 * @enum {String}
 * @readonly
 */
CopyProgress['DataDestinationTypeEnum'] = {

    /**
     * value: "StorageAccount"
     * @const
     */
    "StorageAccount": "StorageAccount",

    /**
     * value: "ManagedDisk"
     * @const
     */
    "ManagedDisk": "ManagedDisk"
};



export default CopyProgress;

