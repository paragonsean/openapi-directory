/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinationAccountDetails from './DestinationAccountDetails';
import ValidationInputRequest from './ValidationInputRequest';

/**
 * The DataDestinationDetailsValidationRequest model module.
 * @module model/DataDestinationDetailsValidationRequest
 * @version 2019-09-01
 */
class DataDestinationDetailsValidationRequest {
    /**
     * Constructs a new <code>DataDestinationDetailsValidationRequest</code>.
     * Request to validate data destination details.
     * @alias module:model/DataDestinationDetailsValidationRequest
     * @extends module:model/ValidationInputRequest
     * @implements module:model/ValidationInputRequest
     * @param validationType {module:model/DataDestinationDetailsValidationRequest.ValidationTypeEnum} Identifies the type of validation request.
     */
    constructor(validationType) { 
        ValidationInputRequest.initialize(this, validationType);
        DataDestinationDetailsValidationRequest.initialize(this, validationType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, validationType) { 
        obj['destinationAccountDetails'] = destinationAccountDetails;
        obj['location'] = location;
    }

    /**
     * Constructs a <code>DataDestinationDetailsValidationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataDestinationDetailsValidationRequest} obj Optional instance to populate.
     * @return {module:model/DataDestinationDetailsValidationRequest} The populated <code>DataDestinationDetailsValidationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataDestinationDetailsValidationRequest();
            ValidationInputRequest.constructFromObject(data, obj);
            ValidationInputRequest.constructFromObject(data, obj);

            if (data.hasOwnProperty('destinationAccountDetails')) {
                obj['destinationAccountDetails'] = ApiClient.convertToType(data['destinationAccountDetails'], [DestinationAccountDetails]);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataDestinationDetailsValidationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataDestinationDetailsValidationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DataDestinationDetailsValidationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['destinationAccountDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['destinationAccountDetails'])) {
                throw new Error("Expected the field `destinationAccountDetails` to be an array in the JSON data but got " + data['destinationAccountDetails']);
            }
            // validate the optional field `destinationAccountDetails` (array)
            for (const item of data['destinationAccountDetails']) {
                DestinationAccountDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }

        return true;
    }


}

DataDestinationDetailsValidationRequest.RequiredProperties = ["destinationAccountDetails", "location", "validationType"];

/**
 * Destination account details list.
 * @member {Array.<module:model/DestinationAccountDetails>} destinationAccountDetails
 */
DataDestinationDetailsValidationRequest.prototype['destinationAccountDetails'] = undefined;

/**
 * Location of stamp or geo.
 * @member {String} location
 */
DataDestinationDetailsValidationRequest.prototype['location'] = undefined;


// Implement ValidationInputRequest interface:
/**
 * Identifies the type of validation request.
 * @member {module:model/ValidationInputRequest.ValidationTypeEnum} validationType
 */
ValidationInputRequest.prototype['validationType'] = undefined;




export default DataDestinationDetailsValidationRequest;

