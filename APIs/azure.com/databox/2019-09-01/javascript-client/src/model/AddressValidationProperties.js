/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Error from './Error';
import ShippingAddress from './ShippingAddress';
import ValidationInputResponse from './ValidationInputResponse';

/**
 * The AddressValidationProperties model module.
 * @module model/AddressValidationProperties
 * @version 2019-09-01
 */
class AddressValidationProperties {
    /**
     * Constructs a new <code>AddressValidationProperties</code>.
     * The address validation output.
     * @alias module:model/AddressValidationProperties
     * @extends module:model/ValidationInputResponse
     * @implements module:model/ValidationInputResponse
     * @param validationType {module:model/AddressValidationProperties.ValidationTypeEnum} Identifies the type of validation response.
     */
    constructor(validationType) { 
        ValidationInputResponse.initialize(this, validationType);
        AddressValidationProperties.initialize(this, validationType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, validationType) { 
    }

    /**
     * Constructs a <code>AddressValidationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddressValidationProperties} obj Optional instance to populate.
     * @return {module:model/AddressValidationProperties} The populated <code>AddressValidationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddressValidationProperties();
            ValidationInputResponse.constructFromObject(data, obj);
            ValidationInputResponse.constructFromObject(data, obj);

            if (data.hasOwnProperty('alternateAddresses')) {
                obj['alternateAddresses'] = ApiClient.convertToType(data['alternateAddresses'], [ShippingAddress]);
            }
            if (data.hasOwnProperty('validationStatus')) {
                obj['validationStatus'] = ApiClient.convertToType(data['validationStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddressValidationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddressValidationProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddressValidationProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['alternateAddresses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['alternateAddresses'])) {
                throw new Error("Expected the field `alternateAddresses` to be an array in the JSON data but got " + data['alternateAddresses']);
            }
            // validate the optional field `alternateAddresses` (array)
            for (const item of data['alternateAddresses']) {
                ShippingAddress.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['validationStatus'] && !(typeof data['validationStatus'] === 'string' || data['validationStatus'] instanceof String)) {
            throw new Error("Expected the field `validationStatus` to be a primitive type in the JSON string but got " + data['validationStatus']);
        }

        return true;
    }


}

AddressValidationProperties.RequiredProperties = ["validationType"];

/**
 * List of alternate addresses.
 * @member {Array.<module:model/ShippingAddress>} alternateAddresses
 */
AddressValidationProperties.prototype['alternateAddresses'] = undefined;

/**
 * The address validation status.
 * @member {module:model/AddressValidationProperties.ValidationStatusEnum} validationStatus
 */
AddressValidationProperties.prototype['validationStatus'] = undefined;


// Implement ValidationInputResponse interface:
/**
 * @member {module:model/Error} error
 */
ValidationInputResponse.prototype['error'] = undefined;
/**
 * Identifies the type of validation response.
 * @member {module:model/ValidationInputResponse.ValidationTypeEnum} validationType
 */
ValidationInputResponse.prototype['validationType'] = undefined;



/**
 * Allowed values for the <code>validationStatus</code> property.
 * @enum {String}
 * @readonly
 */
AddressValidationProperties['ValidationStatusEnum'] = {

    /**
     * value: "Valid"
     * @const
     */
    "Valid": "Valid",

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Ambiguous"
     * @const
     */
    "Ambiguous": "Ambiguous"
};



export default AddressValidationProperties;

