# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.disk_secret import DiskSecret
from openapi_server.models.job_secrets import JobSecrets
from openapi_server import util


class DataBoxDiskJobSecrets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk_secrets: List[DiskSecret]=None, is_passkey_user_defined: bool=None, pass_key: str=None, job_secrets_type: str=None):
        """DataBoxDiskJobSecrets - a model defined in OpenAPI

        :param disk_secrets: The disk_secrets of this DataBoxDiskJobSecrets.
        :param is_passkey_user_defined: The is_passkey_user_defined of this DataBoxDiskJobSecrets.
        :param pass_key: The pass_key of this DataBoxDiskJobSecrets.
        :param job_secrets_type: The job_secrets_type of this DataBoxDiskJobSecrets.
        """
        self.openapi_types = {
            'disk_secrets': List[DiskSecret],
            'is_passkey_user_defined': bool,
            'pass_key': str,
            'job_secrets_type': str
        }

        self.attribute_map = {
            'disk_secrets': 'diskSecrets',
            'is_passkey_user_defined': 'isPasskeyUserDefined',
            'pass_key': 'passKey',
            'job_secrets_type': 'jobSecretsType'
        }

        self._disk_secrets = disk_secrets
        self._is_passkey_user_defined = is_passkey_user_defined
        self._pass_key = pass_key
        self._job_secrets_type = job_secrets_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataBoxDiskJobSecrets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataBoxDiskJobSecrets of this DataBoxDiskJobSecrets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk_secrets(self):
        """Gets the disk_secrets of this DataBoxDiskJobSecrets.

        Contains the list of secrets object for that device.

        :return: The disk_secrets of this DataBoxDiskJobSecrets.
        :rtype: List[DiskSecret]
        """
        return self._disk_secrets

    @disk_secrets.setter
    def disk_secrets(self, disk_secrets):
        """Sets the disk_secrets of this DataBoxDiskJobSecrets.

        Contains the list of secrets object for that device.

        :param disk_secrets: The disk_secrets of this DataBoxDiskJobSecrets.
        :type disk_secrets: List[DiskSecret]
        """

        self._disk_secrets = disk_secrets

    @property
    def is_passkey_user_defined(self):
        """Gets the is_passkey_user_defined of this DataBoxDiskJobSecrets.

        Whether passkey was provided by user.

        :return: The is_passkey_user_defined of this DataBoxDiskJobSecrets.
        :rtype: bool
        """
        return self._is_passkey_user_defined

    @is_passkey_user_defined.setter
    def is_passkey_user_defined(self, is_passkey_user_defined):
        """Sets the is_passkey_user_defined of this DataBoxDiskJobSecrets.

        Whether passkey was provided by user.

        :param is_passkey_user_defined: The is_passkey_user_defined of this DataBoxDiskJobSecrets.
        :type is_passkey_user_defined: bool
        """

        self._is_passkey_user_defined = is_passkey_user_defined

    @property
    def pass_key(self):
        """Gets the pass_key of this DataBoxDiskJobSecrets.

        PassKey for the disk Job.

        :return: The pass_key of this DataBoxDiskJobSecrets.
        :rtype: str
        """
        return self._pass_key

    @pass_key.setter
    def pass_key(self, pass_key):
        """Sets the pass_key of this DataBoxDiskJobSecrets.

        PassKey for the disk Job.

        :param pass_key: The pass_key of this DataBoxDiskJobSecrets.
        :type pass_key: str
        """

        self._pass_key = pass_key

    @property
    def job_secrets_type(self):
        """Gets the job_secrets_type of this DataBoxDiskJobSecrets.

        Used to indicate what type of job secrets object.

        :return: The job_secrets_type of this DataBoxDiskJobSecrets.
        :rtype: str
        """
        return self._job_secrets_type

    @job_secrets_type.setter
    def job_secrets_type(self, job_secrets_type):
        """Sets the job_secrets_type of this DataBoxDiskJobSecrets.

        Used to indicate what type of job secrets object.

        :param job_secrets_type: The job_secrets_type of this DataBoxDiskJobSecrets.
        :type job_secrets_type: str
        """
        allowed_values = ["DataBox", "DataBoxDisk", "DataBoxHeavy"]  # noqa: E501
        if job_secrets_type not in allowed_values:
            raise ValueError(
                "Invalid value for `job_secrets_type` ({0}), must be one of {1}"
                .format(job_secrets_type, allowed_values)
            )

        self._job_secrets_type = job_secrets_type
