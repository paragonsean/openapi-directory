# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DiskSecret(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bit_locker_key: str=None, disk_serial_number: str=None):
        """DiskSecret - a model defined in OpenAPI

        :param bit_locker_key: The bit_locker_key of this DiskSecret.
        :param disk_serial_number: The disk_serial_number of this DiskSecret.
        """
        self.openapi_types = {
            'bit_locker_key': str,
            'disk_serial_number': str
        }

        self.attribute_map = {
            'bit_locker_key': 'bitLockerKey',
            'disk_serial_number': 'diskSerialNumber'
        }

        self._bit_locker_key = bit_locker_key
        self._disk_serial_number = disk_serial_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiskSecret':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiskSecret of this DiskSecret.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bit_locker_key(self):
        """Gets the bit_locker_key of this DiskSecret.

        Bit Locker key of the disk which can be used to unlock the disk to copy data.

        :return: The bit_locker_key of this DiskSecret.
        :rtype: str
        """
        return self._bit_locker_key

    @bit_locker_key.setter
    def bit_locker_key(self, bit_locker_key):
        """Sets the bit_locker_key of this DiskSecret.

        Bit Locker key of the disk which can be used to unlock the disk to copy data.

        :param bit_locker_key: The bit_locker_key of this DiskSecret.
        :type bit_locker_key: str
        """

        self._bit_locker_key = bit_locker_key

    @property
    def disk_serial_number(self):
        """Gets the disk_serial_number of this DiskSecret.

        Serial number of the assigned disk.

        :return: The disk_serial_number of this DiskSecret.
        :rtype: str
        """
        return self._disk_serial_number

    @disk_serial_number.setter
    def disk_serial_number(self, disk_serial_number):
        """Sets the disk_serial_number of this DiskSecret.

        Serial number of the assigned disk.

        :param disk_serial_number: The disk_serial_number of this DiskSecret.
        :type disk_serial_number: str
        """

        self._disk_serial_number = disk_serial_number
