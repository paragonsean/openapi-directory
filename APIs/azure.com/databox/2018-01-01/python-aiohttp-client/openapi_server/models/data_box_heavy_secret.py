# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_credential_details import AccountCredentialDetails
from openapi_server.models.appliance_network_configuration import ApplianceNetworkConfiguration
from openapi_server import util


class DataBoxHeavySecret(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_credential_details: List[AccountCredentialDetails]=None, device_password: str=None, device_serial_number: str=None, encoded_validation_cert_pub_key: str=None, network_configurations: List[ApplianceNetworkConfiguration]=None):
        """DataBoxHeavySecret - a model defined in OpenAPI

        :param account_credential_details: The account_credential_details of this DataBoxHeavySecret.
        :param device_password: The device_password of this DataBoxHeavySecret.
        :param device_serial_number: The device_serial_number of this DataBoxHeavySecret.
        :param encoded_validation_cert_pub_key: The encoded_validation_cert_pub_key of this DataBoxHeavySecret.
        :param network_configurations: The network_configurations of this DataBoxHeavySecret.
        """
        self.openapi_types = {
            'account_credential_details': List[AccountCredentialDetails],
            'device_password': str,
            'device_serial_number': str,
            'encoded_validation_cert_pub_key': str,
            'network_configurations': List[ApplianceNetworkConfiguration]
        }

        self.attribute_map = {
            'account_credential_details': 'accountCredentialDetails',
            'device_password': 'devicePassword',
            'device_serial_number': 'deviceSerialNumber',
            'encoded_validation_cert_pub_key': 'encodedValidationCertPubKey',
            'network_configurations': 'networkConfigurations'
        }

        self._account_credential_details = account_credential_details
        self._device_password = device_password
        self._device_serial_number = device_serial_number
        self._encoded_validation_cert_pub_key = encoded_validation_cert_pub_key
        self._network_configurations = network_configurations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataBoxHeavySecret':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataBoxHeavySecret of this DataBoxHeavySecret.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_credential_details(self):
        """Gets the account_credential_details of this DataBoxHeavySecret.

        Per account level access credentials.

        :return: The account_credential_details of this DataBoxHeavySecret.
        :rtype: List[AccountCredentialDetails]
        """
        return self._account_credential_details

    @account_credential_details.setter
    def account_credential_details(self, account_credential_details):
        """Sets the account_credential_details of this DataBoxHeavySecret.

        Per account level access credentials.

        :param account_credential_details: The account_credential_details of this DataBoxHeavySecret.
        :type account_credential_details: List[AccountCredentialDetails]
        """

        self._account_credential_details = account_credential_details

    @property
    def device_password(self):
        """Gets the device_password of this DataBoxHeavySecret.

        Password for out of the box experience on device.

        :return: The device_password of this DataBoxHeavySecret.
        :rtype: str
        """
        return self._device_password

    @device_password.setter
    def device_password(self, device_password):
        """Sets the device_password of this DataBoxHeavySecret.

        Password for out of the box experience on device.

        :param device_password: The device_password of this DataBoxHeavySecret.
        :type device_password: str
        """

        self._device_password = device_password

    @property
    def device_serial_number(self):
        """Gets the device_serial_number of this DataBoxHeavySecret.

        Serial number of the assigned device.

        :return: The device_serial_number of this DataBoxHeavySecret.
        :rtype: str
        """
        return self._device_serial_number

    @device_serial_number.setter
    def device_serial_number(self, device_serial_number):
        """Sets the device_serial_number of this DataBoxHeavySecret.

        Serial number of the assigned device.

        :param device_serial_number: The device_serial_number of this DataBoxHeavySecret.
        :type device_serial_number: str
        """

        self._device_serial_number = device_serial_number

    @property
    def encoded_validation_cert_pub_key(self):
        """Gets the encoded_validation_cert_pub_key of this DataBoxHeavySecret.

        The base 64 encoded public key to authenticate with the device

        :return: The encoded_validation_cert_pub_key of this DataBoxHeavySecret.
        :rtype: str
        """
        return self._encoded_validation_cert_pub_key

    @encoded_validation_cert_pub_key.setter
    def encoded_validation_cert_pub_key(self, encoded_validation_cert_pub_key):
        """Sets the encoded_validation_cert_pub_key of this DataBoxHeavySecret.

        The base 64 encoded public key to authenticate with the device

        :param encoded_validation_cert_pub_key: The encoded_validation_cert_pub_key of this DataBoxHeavySecret.
        :type encoded_validation_cert_pub_key: str
        """

        self._encoded_validation_cert_pub_key = encoded_validation_cert_pub_key

    @property
    def network_configurations(self):
        """Gets the network_configurations of this DataBoxHeavySecret.

        Network configuration of the appliance.

        :return: The network_configurations of this DataBoxHeavySecret.
        :rtype: List[ApplianceNetworkConfiguration]
        """
        return self._network_configurations

    @network_configurations.setter
    def network_configurations(self, network_configurations):
        """Sets the network_configurations of this DataBoxHeavySecret.

        Network configuration of the appliance.

        :param network_configurations: The network_configurations of this DataBoxHeavySecret.
        :type network_configurations: List[ApplianceNetworkConfiguration]
        """

        self._network_configurations = network_configurations
