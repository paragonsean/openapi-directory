# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Preferences(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, preferred_data_center_region: List[str]=None):
        """Preferences - a model defined in OpenAPI

        :param preferred_data_center_region: The preferred_data_center_region of this Preferences.
        """
        self.openapi_types = {
            'preferred_data_center_region': List[str]
        }

        self.attribute_map = {
            'preferred_data_center_region': 'preferredDataCenterRegion'
        }

        self._preferred_data_center_region = preferred_data_center_region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Preferences':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Preferences of this Preferences.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def preferred_data_center_region(self):
        """Gets the preferred_data_center_region of this Preferences.


        :return: The preferred_data_center_region of this Preferences.
        :rtype: List[str]
        """
        return self._preferred_data_center_region

    @preferred_data_center_region.setter
    def preferred_data_center_region(self, preferred_data_center_region):
        """Sets the preferred_data_center_region of this Preferences.


        :param preferred_data_center_region: The preferred_data_center_region of this Preferences.
        :type preferred_data_center_region: List[str]
        """

        self._preferred_data_center_region = preferred_data_center_region
