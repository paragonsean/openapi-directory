# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.share_credential_details import ShareCredentialDetails
from openapi_server import util


class AccountCredentialDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_connection_string: str=None, account_name: str=None, share_credential_details: List[ShareCredentialDetails]=None):
        """AccountCredentialDetails - a model defined in OpenAPI

        :param account_connection_string: The account_connection_string of this AccountCredentialDetails.
        :param account_name: The account_name of this AccountCredentialDetails.
        :param share_credential_details: The share_credential_details of this AccountCredentialDetails.
        """
        self.openapi_types = {
            'account_connection_string': str,
            'account_name': str,
            'share_credential_details': List[ShareCredentialDetails]
        }

        self.attribute_map = {
            'account_connection_string': 'accountConnectionString',
            'account_name': 'accountName',
            'share_credential_details': 'shareCredentialDetails'
        }

        self._account_connection_string = account_connection_string
        self._account_name = account_name
        self._share_credential_details = share_credential_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountCredentialDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountCredentialDetails of this AccountCredentialDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_connection_string(self):
        """Gets the account_connection_string of this AccountCredentialDetails.

        Connection string of the account endpoint to use the account as a storage endpoint on the device.

        :return: The account_connection_string of this AccountCredentialDetails.
        :rtype: str
        """
        return self._account_connection_string

    @account_connection_string.setter
    def account_connection_string(self, account_connection_string):
        """Sets the account_connection_string of this AccountCredentialDetails.

        Connection string of the account endpoint to use the account as a storage endpoint on the device.

        :param account_connection_string: The account_connection_string of this AccountCredentialDetails.
        :type account_connection_string: str
        """

        self._account_connection_string = account_connection_string

    @property
    def account_name(self):
        """Gets the account_name of this AccountCredentialDetails.

        Name of the account.

        :return: The account_name of this AccountCredentialDetails.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this AccountCredentialDetails.

        Name of the account.

        :param account_name: The account_name of this AccountCredentialDetails.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def share_credential_details(self):
        """Gets the share_credential_details of this AccountCredentialDetails.

        Per share level unencrypted access credentials.

        :return: The share_credential_details of this AccountCredentialDetails.
        :rtype: List[ShareCredentialDetails]
        """
        return self._share_credential_details

    @share_credential_details.setter
    def share_credential_details(self, share_credential_details):
        """Sets the share_credential_details of this AccountCredentialDetails.

        Per share level unencrypted access credentials.

        :param share_credential_details: The share_credential_details of this AccountCredentialDetails.
        :type share_credential_details: List[ShareCredentialDetails]
        """

        self._share_credential_details = share_credential_details
