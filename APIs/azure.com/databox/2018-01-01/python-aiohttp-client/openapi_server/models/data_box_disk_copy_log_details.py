# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.copy_log_details import CopyLogDetails
from openapi_server import util


class DataBoxDiskCopyLogDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk_serial_number: str=None, error_log_link: str=None, verbose_log_link: str=None, copy_log_details_type: str=None):
        """DataBoxDiskCopyLogDetails - a model defined in OpenAPI

        :param disk_serial_number: The disk_serial_number of this DataBoxDiskCopyLogDetails.
        :param error_log_link: The error_log_link of this DataBoxDiskCopyLogDetails.
        :param verbose_log_link: The verbose_log_link of this DataBoxDiskCopyLogDetails.
        :param copy_log_details_type: The copy_log_details_type of this DataBoxDiskCopyLogDetails.
        """
        self.openapi_types = {
            'disk_serial_number': str,
            'error_log_link': str,
            'verbose_log_link': str,
            'copy_log_details_type': str
        }

        self.attribute_map = {
            'disk_serial_number': 'diskSerialNumber',
            'error_log_link': 'errorLogLink',
            'verbose_log_link': 'verboseLogLink',
            'copy_log_details_type': 'copyLogDetailsType'
        }

        self._disk_serial_number = disk_serial_number
        self._error_log_link = error_log_link
        self._verbose_log_link = verbose_log_link
        self._copy_log_details_type = copy_log_details_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataBoxDiskCopyLogDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataBoxDiskCopyLogDetails of this DataBoxDiskCopyLogDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk_serial_number(self):
        """Gets the disk_serial_number of this DataBoxDiskCopyLogDetails.

        Disk Serial Number.

        :return: The disk_serial_number of this DataBoxDiskCopyLogDetails.
        :rtype: str
        """
        return self._disk_serial_number

    @disk_serial_number.setter
    def disk_serial_number(self, disk_serial_number):
        """Sets the disk_serial_number of this DataBoxDiskCopyLogDetails.

        Disk Serial Number.

        :param disk_serial_number: The disk_serial_number of this DataBoxDiskCopyLogDetails.
        :type disk_serial_number: str
        """

        self._disk_serial_number = disk_serial_number

    @property
    def error_log_link(self):
        """Gets the error_log_link of this DataBoxDiskCopyLogDetails.

        Link for copy error logs.

        :return: The error_log_link of this DataBoxDiskCopyLogDetails.
        :rtype: str
        """
        return self._error_log_link

    @error_log_link.setter
    def error_log_link(self, error_log_link):
        """Sets the error_log_link of this DataBoxDiskCopyLogDetails.

        Link for copy error logs.

        :param error_log_link: The error_log_link of this DataBoxDiskCopyLogDetails.
        :type error_log_link: str
        """

        self._error_log_link = error_log_link

    @property
    def verbose_log_link(self):
        """Gets the verbose_log_link of this DataBoxDiskCopyLogDetails.

        Link for copy verbose logs.

        :return: The verbose_log_link of this DataBoxDiskCopyLogDetails.
        :rtype: str
        """
        return self._verbose_log_link

    @verbose_log_link.setter
    def verbose_log_link(self, verbose_log_link):
        """Sets the verbose_log_link of this DataBoxDiskCopyLogDetails.

        Link for copy verbose logs.

        :param verbose_log_link: The verbose_log_link of this DataBoxDiskCopyLogDetails.
        :type verbose_log_link: str
        """

        self._verbose_log_link = verbose_log_link

    @property
    def copy_log_details_type(self):
        """Gets the copy_log_details_type of this DataBoxDiskCopyLogDetails.

        Indicates the type of job details.

        :return: The copy_log_details_type of this DataBoxDiskCopyLogDetails.
        :rtype: str
        """
        return self._copy_log_details_type

    @copy_log_details_type.setter
    def copy_log_details_type(self, copy_log_details_type):
        """Sets the copy_log_details_type of this DataBoxDiskCopyLogDetails.

        Indicates the type of job details.

        :param copy_log_details_type: The copy_log_details_type of this DataBoxDiskCopyLogDetails.
        :type copy_log_details_type: str
        """
        allowed_values = ["DataBox", "DataBoxDisk", "DataBoxHeavy"]  # noqa: E501
        if copy_log_details_type not in allowed_values:
            raise ValueError(
                "Invalid value for `copy_log_details_type` ({0}), must be one of {1}"
                .format(copy_log_details_type, allowed_values)
            )

        self._copy_log_details_type = copy_log_details_type
