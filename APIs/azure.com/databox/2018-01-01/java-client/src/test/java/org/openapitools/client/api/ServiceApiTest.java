/*
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddressValidationOutput;
import org.openapitools.client.model.AvailableSkuRequest;
import org.openapitools.client.model.AvailableSkusResult;
import org.openapitools.client.model.ValidateAddress;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServiceApi
 */
@Disabled
public class ServiceApiTest {

    private final ServiceApi api = new ServiceApi();

    /**
     * This method provides the list of available skus for the given subscription and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceListAvailableSkusTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String apiVersion = null;
        AvailableSkuRequest availableSkuRequest = null;
        AvailableSkusResult response = api.serviceListAvailableSkus(subscriptionId, location, apiVersion, availableSkuRequest);
        // TODO: test validations
    }

    /**
     * This method validates the customer shipping address and provide alternate addresses if any.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serviceValidateAddressTest() throws ApiException {
        String subscriptionId = null;
        String location = null;
        String apiVersion = null;
        ValidateAddress validateAddress = null;
        AddressValidationOutput response = api.serviceValidateAddress(subscriptionId, location, apiVersion, validateAddress);
        // TODO: test validations
    }

}
