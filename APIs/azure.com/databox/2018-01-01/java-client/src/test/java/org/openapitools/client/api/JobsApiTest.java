/*
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CancellationReason;
import org.openapitools.client.model.JobResource;
import org.openapitools.client.model.JobResourceList;
import org.openapitools.client.model.JobResourceUpdateParameter;
import org.openapitools.client.model.ShipmentPickUpRequest;
import org.openapitools.client.model.ShipmentPickUpResponse;
import org.openapitools.client.model.UnencryptedCredentialsList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobsApi
 */
@Disabled
public class JobsApiTest {

    private final JobsApi api = new JobsApi();

    /**
     * Book shipment pick up.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsBookShipmentPickUpTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String apiVersion = null;
        ShipmentPickUpRequest shipmentPickUpRequest = null;
        ShipmentPickUpResponse response = api.jobsBookShipmentPickUp(subscriptionId, resourceGroupName, jobName, apiVersion, shipmentPickUpRequest);
        // TODO: test validations
    }

    /**
     * CancelJob.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsCancelTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String apiVersion = null;
        CancellationReason cancellationReason = null;
        api.jobsCancel(subscriptionId, resourceGroupName, jobName, apiVersion, cancellationReason);
        // TODO: test validations
    }

    /**
     * Creates a new job with the specified parameters. Existing job cannot be updated with this API and should instead be updated with the Update job API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String apiVersion = null;
        JobResource jobResource = null;
        JobResource response = api.jobsCreate(subscriptionId, resourceGroupName, jobName, apiVersion, jobResource);
        // TODO: test validations
    }

    /**
     * Deletes a job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String apiVersion = null;
        api.jobsDelete(subscriptionId, resourceGroupName, jobName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets information about the specified job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String apiVersion = null;
        String $expand = null;
        JobResource response = api.jobsGet(subscriptionId, resourceGroupName, jobName, apiVersion, $expand);
        // TODO: test validations
    }

    /**
     * Lists all the jobs available under the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String $skipToken = null;
        JobResourceList response = api.jobsList(subscriptionId, apiVersion, $skipToken);
        // TODO: test validations
    }

    /**
     * Lists all the jobs available under the given resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        String $skipToken = null;
        JobResourceList response = api.jobsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, $skipToken);
        // TODO: test validations
    }

    /**
     * This method gets the unencrypted secrets related to the job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsListCredentialsTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String apiVersion = null;
        UnencryptedCredentialsList response = api.jobsListCredentials(subscriptionId, resourceGroupName, jobName, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates the properties of an existing job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String apiVersion = null;
        JobResourceUpdateParameter jobResourceUpdateParameter = null;
        String ifMatch = null;
        JobResource response = api.jobsUpdate(subscriptionId, resourceGroupName, jobName, apiVersion, jobResourceUpdateParameter, ifMatch);
        // TODO: test validations
    }

}
