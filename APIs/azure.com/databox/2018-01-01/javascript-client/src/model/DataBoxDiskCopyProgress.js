/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DataBoxDiskCopyProgress model module.
 * @module model/DataBoxDiskCopyProgress
 * @version 2018-01-01
 */
class DataBoxDiskCopyProgress {
    /**
     * Constructs a new <code>DataBoxDiskCopyProgress</code>.
     * DataBox Disk Copy Progress
     * @alias module:model/DataBoxDiskCopyProgress
     */
    constructor() { 
        
        DataBoxDiskCopyProgress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataBoxDiskCopyProgress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataBoxDiskCopyProgress} obj Optional instance to populate.
     * @return {module:model/DataBoxDiskCopyProgress} The populated <code>DataBoxDiskCopyProgress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataBoxDiskCopyProgress();

            if (data.hasOwnProperty('bytesCopied')) {
                obj['bytesCopied'] = ApiClient.convertToType(data['bytesCopied'], 'Number');
            }
            if (data.hasOwnProperty('percentComplete')) {
                obj['percentComplete'] = ApiClient.convertToType(data['percentComplete'], 'Number');
            }
            if (data.hasOwnProperty('serialNumber')) {
                obj['serialNumber'] = ApiClient.convertToType(data['serialNumber'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataBoxDiskCopyProgress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataBoxDiskCopyProgress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['serialNumber'] && !(typeof data['serialNumber'] === 'string' || data['serialNumber'] instanceof String)) {
            throw new Error("Expected the field `serialNumber` to be a primitive type in the JSON string but got " + data['serialNumber']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Bytes copied during the copy of disk.
 * @member {Number} bytesCopied
 */
DataBoxDiskCopyProgress.prototype['bytesCopied'] = undefined;

/**
 * Indicates the percentage completed for the copy of the disk.
 * @member {Number} percentComplete
 */
DataBoxDiskCopyProgress.prototype['percentComplete'] = undefined;

/**
 * The serial number of the disk
 * @member {String} serialNumber
 */
DataBoxDiskCopyProgress.prototype['serialNumber'] = undefined;

/**
 * The Status of the copy
 * @member {module:model/DataBoxDiskCopyProgress.StatusEnum} status
 */
DataBoxDiskCopyProgress.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
DataBoxDiskCopyProgress['StatusEnum'] = {

    /**
     * value: "NotStarted"
     * @const
     */
    "NotStarted": "NotStarted",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed",

    /**
     * value: "CompletedWithErrors"
     * @const
     */
    "CompletedWithErrors": "CompletedWithErrors",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "NotReturned"
     * @const
     */
    "NotReturned": "NotReturned"
};



export default DataBoxDiskCopyProgress;

