/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShareCredentialDetails model module.
 * @module model/ShareCredentialDetails
 * @version 2018-01-01
 */
class ShareCredentialDetails {
    /**
     * Constructs a new <code>ShareCredentialDetails</code>.
     * Credential details of the shares in account.
     * @alias module:model/ShareCredentialDetails
     */
    constructor() { 
        
        ShareCredentialDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShareCredentialDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShareCredentialDetails} obj Optional instance to populate.
     * @return {module:model/ShareCredentialDetails} The populated <code>ShareCredentialDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShareCredentialDetails();

            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('shareName')) {
                obj['shareName'] = ApiClient.convertToType(data['shareName'], 'String');
            }
            if (data.hasOwnProperty('shareType')) {
                obj['shareType'] = ApiClient.convertToType(data['shareType'], 'String');
            }
            if (data.hasOwnProperty('supportedAccessProtocols')) {
                obj['supportedAccessProtocols'] = ApiClient.convertToType(data['supportedAccessProtocols'], ['String']);
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShareCredentialDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShareCredentialDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['shareName'] && !(typeof data['shareName'] === 'string' || data['shareName'] instanceof String)) {
            throw new Error("Expected the field `shareName` to be a primitive type in the JSON string but got " + data['shareName']);
        }
        // ensure the json data is a string
        if (data['shareType'] && !(typeof data['shareType'] === 'string' || data['shareType'] instanceof String)) {
            throw new Error("Expected the field `shareType` to be a primitive type in the JSON string but got " + data['shareType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supportedAccessProtocols'])) {
            throw new Error("Expected the field `supportedAccessProtocols` to be an array in the JSON data but got " + data['supportedAccessProtocols']);
        }
        // ensure the json data is a string
        if (data['userName'] && !(typeof data['userName'] === 'string' || data['userName'] instanceof String)) {
            throw new Error("Expected the field `userName` to be a primitive type in the JSON string but got " + data['userName']);
        }

        return true;
    }


}



/**
 * Password for the share.
 * @member {String} password
 */
ShareCredentialDetails.prototype['password'] = undefined;

/**
 * Name of the share.
 * @member {String} shareName
 */
ShareCredentialDetails.prototype['shareName'] = undefined;

/**
 * Type of the share.
 * @member {module:model/ShareCredentialDetails.ShareTypeEnum} shareType
 */
ShareCredentialDetails.prototype['shareType'] = undefined;

/**
 * Access protocols supported on the device.
 * @member {Array.<module:model/ShareCredentialDetails.SupportedAccessProtocolsEnum>} supportedAccessProtocols
 */
ShareCredentialDetails.prototype['supportedAccessProtocols'] = undefined;

/**
 * User name for the share.
 * @member {String} userName
 */
ShareCredentialDetails.prototype['userName'] = undefined;





/**
 * Allowed values for the <code>shareType</code> property.
 * @enum {String}
 * @readonly
 */
ShareCredentialDetails['ShareTypeEnum'] = {

    /**
     * value: "UnknownType"
     * @const
     */
    "UnknownType": "UnknownType",

    /**
     * value: "HCS"
     * @const
     */
    "HCS": "HCS",

    /**
     * value: "BlockBlob"
     * @const
     */
    "BlockBlob": "BlockBlob",

    /**
     * value: "PageBlob"
     * @const
     */
    "PageBlob": "PageBlob",

    /**
     * value: "AzureFile"
     * @const
     */
    "AzureFile": "AzureFile",

    /**
     * value: "ManagedDisk"
     * @const
     */
    "ManagedDisk": "ManagedDisk"
};


/**
 * Allowed values for the <code>supportedAccessProtocols</code> property.
 * @enum {String}
 * @readonly
 */
ShareCredentialDetails['SupportedAccessProtocolsEnum'] = {

    /**
     * value: "SMB"
     * @const
     */
    "SMB": "SMB",

    /**
     * value: "NFS"
     * @const
     */
    "NFS": "NFS"
};



export default ShareCredentialDetails;

