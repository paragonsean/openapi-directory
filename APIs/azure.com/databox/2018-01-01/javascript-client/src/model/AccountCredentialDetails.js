/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ShareCredentialDetails from './ShareCredentialDetails';

/**
 * The AccountCredentialDetails model module.
 * @module model/AccountCredentialDetails
 * @version 2018-01-01
 */
class AccountCredentialDetails {
    /**
     * Constructs a new <code>AccountCredentialDetails</code>.
     * Credential details of the account.
     * @alias module:model/AccountCredentialDetails
     */
    constructor() { 
        
        AccountCredentialDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountCredentialDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountCredentialDetails} obj Optional instance to populate.
     * @return {module:model/AccountCredentialDetails} The populated <code>AccountCredentialDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountCredentialDetails();

            if (data.hasOwnProperty('accountConnectionString')) {
                obj['accountConnectionString'] = ApiClient.convertToType(data['accountConnectionString'], 'String');
            }
            if (data.hasOwnProperty('accountName')) {
                obj['accountName'] = ApiClient.convertToType(data['accountName'], 'String');
            }
            if (data.hasOwnProperty('shareCredentialDetails')) {
                obj['shareCredentialDetails'] = ApiClient.convertToType(data['shareCredentialDetails'], [ShareCredentialDetails]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountCredentialDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountCredentialDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountConnectionString'] && !(typeof data['accountConnectionString'] === 'string' || data['accountConnectionString'] instanceof String)) {
            throw new Error("Expected the field `accountConnectionString` to be a primitive type in the JSON string but got " + data['accountConnectionString']);
        }
        // ensure the json data is a string
        if (data['accountName'] && !(typeof data['accountName'] === 'string' || data['accountName'] instanceof String)) {
            throw new Error("Expected the field `accountName` to be a primitive type in the JSON string but got " + data['accountName']);
        }
        if (data['shareCredentialDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['shareCredentialDetails'])) {
                throw new Error("Expected the field `shareCredentialDetails` to be an array in the JSON data but got " + data['shareCredentialDetails']);
            }
            // validate the optional field `shareCredentialDetails` (array)
            for (const item of data['shareCredentialDetails']) {
                ShareCredentialDetails.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Connection string of the account endpoint to use the account as a storage endpoint on the device.
 * @member {String} accountConnectionString
 */
AccountCredentialDetails.prototype['accountConnectionString'] = undefined;

/**
 * Name of the account.
 * @member {String} accountName
 */
AccountCredentialDetails.prototype['accountName'] = undefined;

/**
 * Per share level unencrypted access credentials.
 * @member {Array.<module:model/ShareCredentialDetails>} shareCredentialDetails
 */
AccountCredentialDetails.prototype['shareCredentialDetails'] = undefined;






export default AccountCredentialDetails;

