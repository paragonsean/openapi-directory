/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISkuCapacity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISkuCapacity::OAISkuCapacity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISkuCapacity::OAISkuCapacity() {
    this->initializeModel();
}

OAISkuCapacity::~OAISkuCapacity() {}

void OAISkuCapacity::initializeModel() {

    m_maximum_isSet = false;
    m_maximum_isValid = false;

    m_usable_isSet = false;
    m_usable_isValid = false;
}

void OAISkuCapacity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISkuCapacity::fromJsonObject(QJsonObject json) {

    m_maximum_isValid = ::OpenAPI::fromJsonValue(m_maximum, json[QString("maximum")]);
    m_maximum_isSet = !json[QString("maximum")].isNull() && m_maximum_isValid;

    m_usable_isValid = ::OpenAPI::fromJsonValue(m_usable, json[QString("usable")]);
    m_usable_isSet = !json[QString("usable")].isNull() && m_usable_isValid;
}

QString OAISkuCapacity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISkuCapacity::asJsonObject() const {
    QJsonObject obj;
    if (m_maximum_isSet) {
        obj.insert(QString("maximum"), ::OpenAPI::toJsonValue(m_maximum));
    }
    if (m_usable_isSet) {
        obj.insert(QString("usable"), ::OpenAPI::toJsonValue(m_usable));
    }
    return obj;
}

QString OAISkuCapacity::getMaximum() const {
    return m_maximum;
}
void OAISkuCapacity::setMaximum(const QString &maximum) {
    m_maximum = maximum;
    m_maximum_isSet = true;
}

bool OAISkuCapacity::is_maximum_Set() const{
    return m_maximum_isSet;
}

bool OAISkuCapacity::is_maximum_Valid() const{
    return m_maximum_isValid;
}

QString OAISkuCapacity::getUsable() const {
    return m_usable;
}
void OAISkuCapacity::setUsable(const QString &usable) {
    m_usable = usable;
    m_usable_isSet = true;
}

bool OAISkuCapacity::is_usable_Set() const{
    return m_usable_isSet;
}

bool OAISkuCapacity::is_usable_Valid() const{
    return m_usable_isValid;
}

bool OAISkuCapacity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_maximum_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usable_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISkuCapacity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
