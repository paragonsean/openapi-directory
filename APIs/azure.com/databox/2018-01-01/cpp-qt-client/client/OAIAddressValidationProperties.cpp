/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddressValidationProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddressValidationProperties::OAIAddressValidationProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddressValidationProperties::OAIAddressValidationProperties() {
    this->initializeModel();
}

OAIAddressValidationProperties::~OAIAddressValidationProperties() {}

void OAIAddressValidationProperties::initializeModel() {

    m_alternate_addresses_isSet = false;
    m_alternate_addresses_isValid = false;

    m_validation_status_isSet = false;
    m_validation_status_isValid = false;
}

void OAIAddressValidationProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddressValidationProperties::fromJsonObject(QJsonObject json) {

    m_alternate_addresses_isValid = ::OpenAPI::fromJsonValue(m_alternate_addresses, json[QString("alternateAddresses")]);
    m_alternate_addresses_isSet = !json[QString("alternateAddresses")].isNull() && m_alternate_addresses_isValid;

    m_validation_status_isValid = ::OpenAPI::fromJsonValue(m_validation_status, json[QString("validationStatus")]);
    m_validation_status_isSet = !json[QString("validationStatus")].isNull() && m_validation_status_isValid;
}

QString OAIAddressValidationProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddressValidationProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_alternate_addresses.size() > 0) {
        obj.insert(QString("alternateAddresses"), ::OpenAPI::toJsonValue(m_alternate_addresses));
    }
    if (m_validation_status_isSet) {
        obj.insert(QString("validationStatus"), ::OpenAPI::toJsonValue(m_validation_status));
    }
    return obj;
}

QList<OAIShippingAddress> OAIAddressValidationProperties::getAlternateAddresses() const {
    return m_alternate_addresses;
}
void OAIAddressValidationProperties::setAlternateAddresses(const QList<OAIShippingAddress> &alternate_addresses) {
    m_alternate_addresses = alternate_addresses;
    m_alternate_addresses_isSet = true;
}

bool OAIAddressValidationProperties::is_alternate_addresses_Set() const{
    return m_alternate_addresses_isSet;
}

bool OAIAddressValidationProperties::is_alternate_addresses_Valid() const{
    return m_alternate_addresses_isValid;
}

QString OAIAddressValidationProperties::getValidationStatus() const {
    return m_validation_status;
}
void OAIAddressValidationProperties::setValidationStatus(const QString &validation_status) {
    m_validation_status = validation_status;
    m_validation_status_isSet = true;
}

bool OAIAddressValidationProperties::is_validation_status_Set() const{
    return m_validation_status_isSet;
}

bool OAIAddressValidationProperties::is_validation_status_Valid() const{
    return m_validation_status_isValid;
}

bool OAIAddressValidationProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alternate_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_validation_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddressValidationProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
