/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINotificationPreference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINotificationPreference::OAINotificationPreference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINotificationPreference::OAINotificationPreference() {
    this->initializeModel();
}

OAINotificationPreference::~OAINotificationPreference() {}

void OAINotificationPreference::initializeModel() {

    m_send_notification_isSet = false;
    m_send_notification_isValid = false;

    m_stage_name_isSet = false;
    m_stage_name_isValid = false;
}

void OAINotificationPreference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINotificationPreference::fromJsonObject(QJsonObject json) {

    m_send_notification_isValid = ::OpenAPI::fromJsonValue(m_send_notification, json[QString("sendNotification")]);
    m_send_notification_isSet = !json[QString("sendNotification")].isNull() && m_send_notification_isValid;

    m_stage_name_isValid = ::OpenAPI::fromJsonValue(m_stage_name, json[QString("stageName")]);
    m_stage_name_isSet = !json[QString("stageName")].isNull() && m_stage_name_isValid;
}

QString OAINotificationPreference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINotificationPreference::asJsonObject() const {
    QJsonObject obj;
    if (m_send_notification_isSet) {
        obj.insert(QString("sendNotification"), ::OpenAPI::toJsonValue(m_send_notification));
    }
    if (m_stage_name_isSet) {
        obj.insert(QString("stageName"), ::OpenAPI::toJsonValue(m_stage_name));
    }
    return obj;
}

bool OAINotificationPreference::isSendNotification() const {
    return m_send_notification;
}
void OAINotificationPreference::setSendNotification(const bool &send_notification) {
    m_send_notification = send_notification;
    m_send_notification_isSet = true;
}

bool OAINotificationPreference::is_send_notification_Set() const{
    return m_send_notification_isSet;
}

bool OAINotificationPreference::is_send_notification_Valid() const{
    return m_send_notification_isValid;
}

QString OAINotificationPreference::getStageName() const {
    return m_stage_name;
}
void OAINotificationPreference::setStageName(const QString &stage_name) {
    m_stage_name = stage_name;
    m_stage_name_isSet = true;
}

bool OAINotificationPreference::is_stage_name_Set() const{
    return m_stage_name_isSet;
}

bool OAINotificationPreference::is_stage_name_Valid() const{
    return m_stage_name_isValid;
}

bool OAINotificationPreference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_send_notification_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINotificationPreference::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_send_notification_isValid && m_stage_name_isValid && true;
}

} // namespace OpenAPI
