/**
 * DataBoxManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUnencryptedCredentials.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUnencryptedCredentials::OAIUnencryptedCredentials(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUnencryptedCredentials::OAIUnencryptedCredentials() {
    this->initializeModel();
}

OAIUnencryptedCredentials::~OAIUnencryptedCredentials() {}

void OAIUnencryptedCredentials::initializeModel() {

    m_job_name_isSet = false;
    m_job_name_isValid = false;

    m_job_secrets_isSet = false;
    m_job_secrets_isValid = false;
}

void OAIUnencryptedCredentials::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUnencryptedCredentials::fromJsonObject(QJsonObject json) {

    m_job_name_isValid = ::OpenAPI::fromJsonValue(m_job_name, json[QString("jobName")]);
    m_job_name_isSet = !json[QString("jobName")].isNull() && m_job_name_isValid;

    m_job_secrets_isValid = ::OpenAPI::fromJsonValue(m_job_secrets, json[QString("jobSecrets")]);
    m_job_secrets_isSet = !json[QString("jobSecrets")].isNull() && m_job_secrets_isValid;
}

QString OAIUnencryptedCredentials::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUnencryptedCredentials::asJsonObject() const {
    QJsonObject obj;
    if (m_job_name_isSet) {
        obj.insert(QString("jobName"), ::OpenAPI::toJsonValue(m_job_name));
    }
    if (m_job_secrets.isSet()) {
        obj.insert(QString("jobSecrets"), ::OpenAPI::toJsonValue(m_job_secrets));
    }
    return obj;
}

QString OAIUnencryptedCredentials::getJobName() const {
    return m_job_name;
}
void OAIUnencryptedCredentials::setJobName(const QString &job_name) {
    m_job_name = job_name;
    m_job_name_isSet = true;
}

bool OAIUnencryptedCredentials::is_job_name_Set() const{
    return m_job_name_isSet;
}

bool OAIUnencryptedCredentials::is_job_name_Valid() const{
    return m_job_name_isValid;
}

OAIJobSecrets OAIUnencryptedCredentials::getJobSecrets() const {
    return m_job_secrets;
}
void OAIUnencryptedCredentials::setJobSecrets(const OAIJobSecrets &job_secrets) {
    m_job_secrets = job_secrets;
    m_job_secrets_isSet = true;
}

bool OAIUnencryptedCredentials::is_job_secrets_Set() const{
    return m_job_secrets_isSet;
}

bool OAIUnencryptedCredentials::is_job_secrets_Valid() const{
    return m_job_secrets_isValid;
}

bool OAIUnencryptedCredentials::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_secrets.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUnencryptedCredentials::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
