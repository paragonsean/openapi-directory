/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureFirewallApplicationRuleProtocolType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureFirewallApplicationRuleProtocolType::OAIAzureFirewallApplicationRuleProtocolType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureFirewallApplicationRuleProtocolType::OAIAzureFirewallApplicationRuleProtocolType() {
    this->initializeModel();
}

OAIAzureFirewallApplicationRuleProtocolType::~OAIAzureFirewallApplicationRuleProtocolType() {}

void OAIAzureFirewallApplicationRuleProtocolType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAzureFirewallApplicationRuleProtocolType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAzureFirewallApplicationRuleProtocolType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Http", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAzureFirewallApplicationRuleProtocolType::HTTP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Https", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAzureFirewallApplicationRuleProtocolType::HTTPS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAzureFirewallApplicationRuleProtocolType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAzureFirewallApplicationRuleProtocolType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAzureFirewallApplicationRuleProtocolType::HTTP:
            val = "Http";
            break;
        case eOAIAzureFirewallApplicationRuleProtocolType::HTTPS:
            val = "Https";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAzureFirewallApplicationRuleProtocolType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAzureFirewallApplicationRuleProtocolType::eOAIAzureFirewallApplicationRuleProtocolType OAIAzureFirewallApplicationRuleProtocolType::getValue() const {
    return m_value;
}

void OAIAzureFirewallApplicationRuleProtocolType::setValue(const OAIAzureFirewallApplicationRuleProtocolType::eOAIAzureFirewallApplicationRuleProtocolType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAzureFirewallApplicationRuleProtocolType::isSet() const {
    
    return m_value_isSet;
}

bool OAIAzureFirewallApplicationRuleProtocolType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
