/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAzureFirewallApplicationRuleCollectionPropertiesFormat.h
 *
 * Properties of the application rule collection.
 */

#ifndef OAIAzureFirewallApplicationRuleCollectionPropertiesFormat_H
#define OAIAzureFirewallApplicationRuleCollectionPropertiesFormat_H

#include <QJsonObject>

#include "OAIAzureFirewallApplicationRule.h"
#include "OAIAzureFirewallRCAction.h"
#include "OAIProvisioningState.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAzureFirewallRCAction;
class OAIAzureFirewallApplicationRule;

class OAIAzureFirewallApplicationRuleCollectionPropertiesFormat : public OAIObject {
public:
    OAIAzureFirewallApplicationRuleCollectionPropertiesFormat();
    OAIAzureFirewallApplicationRuleCollectionPropertiesFormat(QString json);
    ~OAIAzureFirewallApplicationRuleCollectionPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAzureFirewallRCAction getAction() const;
    void setAction(const OAIAzureFirewallRCAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    OAIProvisioningState getProvisioningState() const;
    void setProvisioningState(const OAIProvisioningState &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QList<OAIAzureFirewallApplicationRule> getRules() const;
    void setRules(const QList<OAIAzureFirewallApplicationRule> &rules);
    bool is_rules_Set() const;
    bool is_rules_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAzureFirewallRCAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    OAIProvisioningState m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QList<OAIAzureFirewallApplicationRule> m_rules;
    bool m_rules_isSet;
    bool m_rules_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAzureFirewallApplicationRuleCollectionPropertiesFormat)

#endif // OAIAzureFirewallApplicationRuleCollectionPropertiesFormat_H
