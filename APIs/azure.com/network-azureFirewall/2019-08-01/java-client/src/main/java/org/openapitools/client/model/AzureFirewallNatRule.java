/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AzureFirewallNetworkRuleProtocol;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Properties of a NAT rule.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:01:52.710494-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AzureFirewallNatRule {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DESTINATION_ADDRESSES = "destinationAddresses";
  @SerializedName(SERIALIZED_NAME_DESTINATION_ADDRESSES)
  private List<String> destinationAddresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESTINATION_PORTS = "destinationPorts";
  @SerializedName(SERIALIZED_NAME_DESTINATION_PORTS)
  private List<String> destinationPorts = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROTOCOLS = "protocols";
  @SerializedName(SERIALIZED_NAME_PROTOCOLS)
  private List<AzureFirewallNetworkRuleProtocol> protocols = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE_ADDRESSES = "sourceAddresses";
  @SerializedName(SERIALIZED_NAME_SOURCE_ADDRESSES)
  private List<String> sourceAddresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRANSLATED_ADDRESS = "translatedAddress";
  @SerializedName(SERIALIZED_NAME_TRANSLATED_ADDRESS)
  private String translatedAddress;

  public static final String SERIALIZED_NAME_TRANSLATED_PORT = "translatedPort";
  @SerializedName(SERIALIZED_NAME_TRANSLATED_PORT)
  private String translatedPort;

  public AzureFirewallNatRule() {
  }

  public AzureFirewallNatRule description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the rule.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public AzureFirewallNatRule destinationAddresses(List<String> destinationAddresses) {
    this.destinationAddresses = destinationAddresses;
    return this;
  }

  public AzureFirewallNatRule addDestinationAddressesItem(String destinationAddressesItem) {
    if (this.destinationAddresses == null) {
      this.destinationAddresses = new ArrayList<>();
    }
    this.destinationAddresses.add(destinationAddressesItem);
    return this;
  }

  /**
   * List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
   * @return destinationAddresses
   */
  @javax.annotation.Nullable
  public List<String> getDestinationAddresses() {
    return destinationAddresses;
  }

  public void setDestinationAddresses(List<String> destinationAddresses) {
    this.destinationAddresses = destinationAddresses;
  }


  public AzureFirewallNatRule destinationPorts(List<String> destinationPorts) {
    this.destinationPorts = destinationPorts;
    return this;
  }

  public AzureFirewallNatRule addDestinationPortsItem(String destinationPortsItem) {
    if (this.destinationPorts == null) {
      this.destinationPorts = new ArrayList<>();
    }
    this.destinationPorts.add(destinationPortsItem);
    return this;
  }

  /**
   * List of destination ports.
   * @return destinationPorts
   */
  @javax.annotation.Nullable
  public List<String> getDestinationPorts() {
    return destinationPorts;
  }

  public void setDestinationPorts(List<String> destinationPorts) {
    this.destinationPorts = destinationPorts;
  }


  public AzureFirewallNatRule name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the NAT rule.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AzureFirewallNatRule protocols(List<AzureFirewallNetworkRuleProtocol> protocols) {
    this.protocols = protocols;
    return this;
  }

  public AzureFirewallNatRule addProtocolsItem(AzureFirewallNetworkRuleProtocol protocolsItem) {
    if (this.protocols == null) {
      this.protocols = new ArrayList<>();
    }
    this.protocols.add(protocolsItem);
    return this;
  }

  /**
   * Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
   * @return protocols
   */
  @javax.annotation.Nullable
  public List<AzureFirewallNetworkRuleProtocol> getProtocols() {
    return protocols;
  }

  public void setProtocols(List<AzureFirewallNetworkRuleProtocol> protocols) {
    this.protocols = protocols;
  }


  public AzureFirewallNatRule sourceAddresses(List<String> sourceAddresses) {
    this.sourceAddresses = sourceAddresses;
    return this;
  }

  public AzureFirewallNatRule addSourceAddressesItem(String sourceAddressesItem) {
    if (this.sourceAddresses == null) {
      this.sourceAddresses = new ArrayList<>();
    }
    this.sourceAddresses.add(sourceAddressesItem);
    return this;
  }

  /**
   * List of source IP addresses for this rule.
   * @return sourceAddresses
   */
  @javax.annotation.Nullable
  public List<String> getSourceAddresses() {
    return sourceAddresses;
  }

  public void setSourceAddresses(List<String> sourceAddresses) {
    this.sourceAddresses = sourceAddresses;
  }


  public AzureFirewallNatRule translatedAddress(String translatedAddress) {
    this.translatedAddress = translatedAddress;
    return this;
  }

  /**
   * The translated address for this NAT rule.
   * @return translatedAddress
   */
  @javax.annotation.Nullable
  public String getTranslatedAddress() {
    return translatedAddress;
  }

  public void setTranslatedAddress(String translatedAddress) {
    this.translatedAddress = translatedAddress;
  }


  public AzureFirewallNatRule translatedPort(String translatedPort) {
    this.translatedPort = translatedPort;
    return this;
  }

  /**
   * The translated port for this NAT rule.
   * @return translatedPort
   */
  @javax.annotation.Nullable
  public String getTranslatedPort() {
    return translatedPort;
  }

  public void setTranslatedPort(String translatedPort) {
    this.translatedPort = translatedPort;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureFirewallNatRule azureFirewallNatRule = (AzureFirewallNatRule) o;
    return Objects.equals(this.description, azureFirewallNatRule.description) &&
        Objects.equals(this.destinationAddresses, azureFirewallNatRule.destinationAddresses) &&
        Objects.equals(this.destinationPorts, azureFirewallNatRule.destinationPorts) &&
        Objects.equals(this.name, azureFirewallNatRule.name) &&
        Objects.equals(this.protocols, azureFirewallNatRule.protocols) &&
        Objects.equals(this.sourceAddresses, azureFirewallNatRule.sourceAddresses) &&
        Objects.equals(this.translatedAddress, azureFirewallNatRule.translatedAddress) &&
        Objects.equals(this.translatedPort, azureFirewallNatRule.translatedPort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, destinationAddresses, destinationPorts, name, protocols, sourceAddresses, translatedAddress, translatedPort);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureFirewallNatRule {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    destinationAddresses: ").append(toIndentedString(destinationAddresses)).append("\n");
    sb.append("    destinationPorts: ").append(toIndentedString(destinationPorts)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    protocols: ").append(toIndentedString(protocols)).append("\n");
    sb.append("    sourceAddresses: ").append(toIndentedString(sourceAddresses)).append("\n");
    sb.append("    translatedAddress: ").append(toIndentedString(translatedAddress)).append("\n");
    sb.append("    translatedPort: ").append(toIndentedString(translatedPort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("destinationAddresses");
    openapiFields.add("destinationPorts");
    openapiFields.add("name");
    openapiFields.add("protocols");
    openapiFields.add("sourceAddresses");
    openapiFields.add("translatedAddress");
    openapiFields.add("translatedPort");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AzureFirewallNatRule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AzureFirewallNatRule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AzureFirewallNatRule is not found in the empty JSON string", AzureFirewallNatRule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AzureFirewallNatRule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AzureFirewallNatRule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("destinationAddresses") != null && !jsonObj.get("destinationAddresses").isJsonNull() && !jsonObj.get("destinationAddresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `destinationAddresses` to be an array in the JSON string but got `%s`", jsonObj.get("destinationAddresses").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("destinationPorts") != null && !jsonObj.get("destinationPorts").isJsonNull() && !jsonObj.get("destinationPorts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `destinationPorts` to be an array in the JSON string but got `%s`", jsonObj.get("destinationPorts").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("protocols") != null && !jsonObj.get("protocols").isJsonNull() && !jsonObj.get("protocols").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `protocols` to be an array in the JSON string but got `%s`", jsonObj.get("protocols").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sourceAddresses") != null && !jsonObj.get("sourceAddresses").isJsonNull() && !jsonObj.get("sourceAddresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceAddresses` to be an array in the JSON string but got `%s`", jsonObj.get("sourceAddresses").toString()));
      }
      if ((jsonObj.get("translatedAddress") != null && !jsonObj.get("translatedAddress").isJsonNull()) && !jsonObj.get("translatedAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `translatedAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("translatedAddress").toString()));
      }
      if ((jsonObj.get("translatedPort") != null && !jsonObj.get("translatedPort").isJsonNull()) && !jsonObj.get("translatedPort").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `translatedPort` to be a primitive type in the JSON string but got `%s`", jsonObj.get("translatedPort").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AzureFirewallNatRule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AzureFirewallNatRule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AzureFirewallNatRule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AzureFirewallNatRule.class));

       return (TypeAdapter<T>) new TypeAdapter<AzureFirewallNatRule>() {
           @Override
           public void write(JsonWriter out, AzureFirewallNatRule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AzureFirewallNatRule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AzureFirewallNatRule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AzureFirewallNatRule
   * @throws IOException if the JSON string is invalid with respect to AzureFirewallNatRule
   */
  public static AzureFirewallNatRule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AzureFirewallNatRule.class);
  }

  /**
   * Convert an instance of AzureFirewallNatRule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

