/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AzureFirewallApplicationRuleCollection;
import org.openapitools.client.model.AzureFirewallIPConfiguration;
import org.openapitools.client.model.AzureFirewallIPConfigurationPropertiesFormatPublicIPAddress;
import org.openapitools.client.model.AzureFirewallNatRuleCollection;
import org.openapitools.client.model.AzureFirewallNetworkRuleCollection;
import org.openapitools.client.model.AzureFirewallThreatIntelMode;
import org.openapitools.client.model.HubIPAddresses;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Properties of the Azure Firewall.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:01:29.759976-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AzureFirewallPropertiesFormat {
  public static final String SERIALIZED_NAME_APPLICATION_RULE_COLLECTIONS = "applicationRuleCollections";
  @SerializedName(SERIALIZED_NAME_APPLICATION_RULE_COLLECTIONS)
  private List<AzureFirewallApplicationRuleCollection> applicationRuleCollections = new ArrayList<>();

  public static final String SERIALIZED_NAME_FIREWALL_POLICY = "firewallPolicy";
  @SerializedName(SERIALIZED_NAME_FIREWALL_POLICY)
  private AzureFirewallIPConfigurationPropertiesFormatPublicIPAddress firewallPolicy;

  public static final String SERIALIZED_NAME_HUB_IP_ADDRESSES = "hubIpAddresses";
  @SerializedName(SERIALIZED_NAME_HUB_IP_ADDRESSES)
  private HubIPAddresses hubIpAddresses;

  public static final String SERIALIZED_NAME_IP_CONFIGURATIONS = "ipConfigurations";
  @SerializedName(SERIALIZED_NAME_IP_CONFIGURATIONS)
  private List<AzureFirewallIPConfiguration> ipConfigurations = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAT_RULE_COLLECTIONS = "natRuleCollections";
  @SerializedName(SERIALIZED_NAME_NAT_RULE_COLLECTIONS)
  private List<AzureFirewallNatRuleCollection> natRuleCollections = new ArrayList<>();

  public static final String SERIALIZED_NAME_NETWORK_RULE_COLLECTIONS = "networkRuleCollections";
  @SerializedName(SERIALIZED_NAME_NETWORK_RULE_COLLECTIONS)
  private List<AzureFirewallNetworkRuleCollection> networkRuleCollections = new ArrayList<>();

  /**
   * The current provisioning state.
   */
  @JsonAdapter(ProvisioningStateEnum.Adapter.class)
  public enum ProvisioningStateEnum {
    SUCCEEDED("Succeeded"),
    
    UPDATING("Updating"),
    
    DELETING("Deleting"),
    
    FAILED("Failed");

    private String value;

    ProvisioningStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProvisioningStateEnum fromValue(String value) {
      for (ProvisioningStateEnum b : ProvisioningStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProvisioningStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProvisioningStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProvisioningStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProvisioningStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProvisioningStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private ProvisioningStateEnum provisioningState;

  public static final String SERIALIZED_NAME_THREAT_INTEL_MODE = "threatIntelMode";
  @SerializedName(SERIALIZED_NAME_THREAT_INTEL_MODE)
  private AzureFirewallThreatIntelMode threatIntelMode;

  public static final String SERIALIZED_NAME_VIRTUAL_HUB = "virtualHub";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_HUB)
  private AzureFirewallIPConfigurationPropertiesFormatPublicIPAddress virtualHub;

  public AzureFirewallPropertiesFormat() {
  }

  public AzureFirewallPropertiesFormat(
     ProvisioningStateEnum provisioningState
  ) {
    this();
    this.provisioningState = provisioningState;
  }

  public AzureFirewallPropertiesFormat applicationRuleCollections(List<AzureFirewallApplicationRuleCollection> applicationRuleCollections) {
    this.applicationRuleCollections = applicationRuleCollections;
    return this;
  }

  public AzureFirewallPropertiesFormat addApplicationRuleCollectionsItem(AzureFirewallApplicationRuleCollection applicationRuleCollectionsItem) {
    if (this.applicationRuleCollections == null) {
      this.applicationRuleCollections = new ArrayList<>();
    }
    this.applicationRuleCollections.add(applicationRuleCollectionsItem);
    return this;
  }

  /**
   * Collection of application rule collections used by Azure Firewall.
   * @return applicationRuleCollections
   */
  @javax.annotation.Nullable
  public List<AzureFirewallApplicationRuleCollection> getApplicationRuleCollections() {
    return applicationRuleCollections;
  }

  public void setApplicationRuleCollections(List<AzureFirewallApplicationRuleCollection> applicationRuleCollections) {
    this.applicationRuleCollections = applicationRuleCollections;
  }


  public AzureFirewallPropertiesFormat firewallPolicy(AzureFirewallIPConfigurationPropertiesFormatPublicIPAddress firewallPolicy) {
    this.firewallPolicy = firewallPolicy;
    return this;
  }

  /**
   * Get firewallPolicy
   * @return firewallPolicy
   */
  @javax.annotation.Nullable
  public AzureFirewallIPConfigurationPropertiesFormatPublicIPAddress getFirewallPolicy() {
    return firewallPolicy;
  }

  public void setFirewallPolicy(AzureFirewallIPConfigurationPropertiesFormatPublicIPAddress firewallPolicy) {
    this.firewallPolicy = firewallPolicy;
  }


  public AzureFirewallPropertiesFormat hubIpAddresses(HubIPAddresses hubIpAddresses) {
    this.hubIpAddresses = hubIpAddresses;
    return this;
  }

  /**
   * Get hubIpAddresses
   * @return hubIpAddresses
   */
  @javax.annotation.Nullable
  public HubIPAddresses getHubIpAddresses() {
    return hubIpAddresses;
  }

  public void setHubIpAddresses(HubIPAddresses hubIpAddresses) {
    this.hubIpAddresses = hubIpAddresses;
  }


  public AzureFirewallPropertiesFormat ipConfigurations(List<AzureFirewallIPConfiguration> ipConfigurations) {
    this.ipConfigurations = ipConfigurations;
    return this;
  }

  public AzureFirewallPropertiesFormat addIpConfigurationsItem(AzureFirewallIPConfiguration ipConfigurationsItem) {
    if (this.ipConfigurations == null) {
      this.ipConfigurations = new ArrayList<>();
    }
    this.ipConfigurations.add(ipConfigurationsItem);
    return this;
  }

  /**
   * IP configuration of the Azure Firewall resource.
   * @return ipConfigurations
   */
  @javax.annotation.Nullable
  public List<AzureFirewallIPConfiguration> getIpConfigurations() {
    return ipConfigurations;
  }

  public void setIpConfigurations(List<AzureFirewallIPConfiguration> ipConfigurations) {
    this.ipConfigurations = ipConfigurations;
  }


  public AzureFirewallPropertiesFormat natRuleCollections(List<AzureFirewallNatRuleCollection> natRuleCollections) {
    this.natRuleCollections = natRuleCollections;
    return this;
  }

  public AzureFirewallPropertiesFormat addNatRuleCollectionsItem(AzureFirewallNatRuleCollection natRuleCollectionsItem) {
    if (this.natRuleCollections == null) {
      this.natRuleCollections = new ArrayList<>();
    }
    this.natRuleCollections.add(natRuleCollectionsItem);
    return this;
  }

  /**
   * Collection of NAT rule collections used by Azure Firewall.
   * @return natRuleCollections
   */
  @javax.annotation.Nullable
  public List<AzureFirewallNatRuleCollection> getNatRuleCollections() {
    return natRuleCollections;
  }

  public void setNatRuleCollections(List<AzureFirewallNatRuleCollection> natRuleCollections) {
    this.natRuleCollections = natRuleCollections;
  }


  public AzureFirewallPropertiesFormat networkRuleCollections(List<AzureFirewallNetworkRuleCollection> networkRuleCollections) {
    this.networkRuleCollections = networkRuleCollections;
    return this;
  }

  public AzureFirewallPropertiesFormat addNetworkRuleCollectionsItem(AzureFirewallNetworkRuleCollection networkRuleCollectionsItem) {
    if (this.networkRuleCollections == null) {
      this.networkRuleCollections = new ArrayList<>();
    }
    this.networkRuleCollections.add(networkRuleCollectionsItem);
    return this;
  }

  /**
   * Collection of network rule collections used by Azure Firewall.
   * @return networkRuleCollections
   */
  @javax.annotation.Nullable
  public List<AzureFirewallNetworkRuleCollection> getNetworkRuleCollections() {
    return networkRuleCollections;
  }

  public void setNetworkRuleCollections(List<AzureFirewallNetworkRuleCollection> networkRuleCollections) {
    this.networkRuleCollections = networkRuleCollections;
  }


  /**
   * The current provisioning state.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public ProvisioningStateEnum getProvisioningState() {
    return provisioningState;
  }



  public AzureFirewallPropertiesFormat threatIntelMode(AzureFirewallThreatIntelMode threatIntelMode) {
    this.threatIntelMode = threatIntelMode;
    return this;
  }

  /**
   * Get threatIntelMode
   * @return threatIntelMode
   */
  @javax.annotation.Nullable
  public AzureFirewallThreatIntelMode getThreatIntelMode() {
    return threatIntelMode;
  }

  public void setThreatIntelMode(AzureFirewallThreatIntelMode threatIntelMode) {
    this.threatIntelMode = threatIntelMode;
  }


  public AzureFirewallPropertiesFormat virtualHub(AzureFirewallIPConfigurationPropertiesFormatPublicIPAddress virtualHub) {
    this.virtualHub = virtualHub;
    return this;
  }

  /**
   * Get virtualHub
   * @return virtualHub
   */
  @javax.annotation.Nullable
  public AzureFirewallIPConfigurationPropertiesFormatPublicIPAddress getVirtualHub() {
    return virtualHub;
  }

  public void setVirtualHub(AzureFirewallIPConfigurationPropertiesFormatPublicIPAddress virtualHub) {
    this.virtualHub = virtualHub;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureFirewallPropertiesFormat azureFirewallPropertiesFormat = (AzureFirewallPropertiesFormat) o;
    return Objects.equals(this.applicationRuleCollections, azureFirewallPropertiesFormat.applicationRuleCollections) &&
        Objects.equals(this.firewallPolicy, azureFirewallPropertiesFormat.firewallPolicy) &&
        Objects.equals(this.hubIpAddresses, azureFirewallPropertiesFormat.hubIpAddresses) &&
        Objects.equals(this.ipConfigurations, azureFirewallPropertiesFormat.ipConfigurations) &&
        Objects.equals(this.natRuleCollections, azureFirewallPropertiesFormat.natRuleCollections) &&
        Objects.equals(this.networkRuleCollections, azureFirewallPropertiesFormat.networkRuleCollections) &&
        Objects.equals(this.provisioningState, azureFirewallPropertiesFormat.provisioningState) &&
        Objects.equals(this.threatIntelMode, azureFirewallPropertiesFormat.threatIntelMode) &&
        Objects.equals(this.virtualHub, azureFirewallPropertiesFormat.virtualHub);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationRuleCollections, firewallPolicy, hubIpAddresses, ipConfigurations, natRuleCollections, networkRuleCollections, provisioningState, threatIntelMode, virtualHub);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureFirewallPropertiesFormat {\n");
    sb.append("    applicationRuleCollections: ").append(toIndentedString(applicationRuleCollections)).append("\n");
    sb.append("    firewallPolicy: ").append(toIndentedString(firewallPolicy)).append("\n");
    sb.append("    hubIpAddresses: ").append(toIndentedString(hubIpAddresses)).append("\n");
    sb.append("    ipConfigurations: ").append(toIndentedString(ipConfigurations)).append("\n");
    sb.append("    natRuleCollections: ").append(toIndentedString(natRuleCollections)).append("\n");
    sb.append("    networkRuleCollections: ").append(toIndentedString(networkRuleCollections)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    threatIntelMode: ").append(toIndentedString(threatIntelMode)).append("\n");
    sb.append("    virtualHub: ").append(toIndentedString(virtualHub)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("applicationRuleCollections");
    openapiFields.add("firewallPolicy");
    openapiFields.add("hubIpAddresses");
    openapiFields.add("ipConfigurations");
    openapiFields.add("natRuleCollections");
    openapiFields.add("networkRuleCollections");
    openapiFields.add("provisioningState");
    openapiFields.add("threatIntelMode");
    openapiFields.add("virtualHub");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AzureFirewallPropertiesFormat
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AzureFirewallPropertiesFormat.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AzureFirewallPropertiesFormat is not found in the empty JSON string", AzureFirewallPropertiesFormat.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AzureFirewallPropertiesFormat.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AzureFirewallPropertiesFormat` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("applicationRuleCollections") != null && !jsonObj.get("applicationRuleCollections").isJsonNull()) {
        JsonArray jsonArrayapplicationRuleCollections = jsonObj.getAsJsonArray("applicationRuleCollections");
        if (jsonArrayapplicationRuleCollections != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicationRuleCollections").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicationRuleCollections` to be an array in the JSON string but got `%s`", jsonObj.get("applicationRuleCollections").toString()));
          }

          // validate the optional field `applicationRuleCollections` (array)
          for (int i = 0; i < jsonArrayapplicationRuleCollections.size(); i++) {
            AzureFirewallApplicationRuleCollection.validateJsonElement(jsonArrayapplicationRuleCollections.get(i));
          };
        }
      }
      // validate the optional field `firewallPolicy`
      if (jsonObj.get("firewallPolicy") != null && !jsonObj.get("firewallPolicy").isJsonNull()) {
        AzureFirewallIPConfigurationPropertiesFormatPublicIPAddress.validateJsonElement(jsonObj.get("firewallPolicy"));
      }
      // validate the optional field `hubIpAddresses`
      if (jsonObj.get("hubIpAddresses") != null && !jsonObj.get("hubIpAddresses").isJsonNull()) {
        HubIPAddresses.validateJsonElement(jsonObj.get("hubIpAddresses"));
      }
      if (jsonObj.get("ipConfigurations") != null && !jsonObj.get("ipConfigurations").isJsonNull()) {
        JsonArray jsonArrayipConfigurations = jsonObj.getAsJsonArray("ipConfigurations");
        if (jsonArrayipConfigurations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ipConfigurations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ipConfigurations` to be an array in the JSON string but got `%s`", jsonObj.get("ipConfigurations").toString()));
          }

          // validate the optional field `ipConfigurations` (array)
          for (int i = 0; i < jsonArrayipConfigurations.size(); i++) {
            AzureFirewallIPConfiguration.validateJsonElement(jsonArrayipConfigurations.get(i));
          };
        }
      }
      if (jsonObj.get("natRuleCollections") != null && !jsonObj.get("natRuleCollections").isJsonNull()) {
        JsonArray jsonArraynatRuleCollections = jsonObj.getAsJsonArray("natRuleCollections");
        if (jsonArraynatRuleCollections != null) {
          // ensure the json data is an array
          if (!jsonObj.get("natRuleCollections").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `natRuleCollections` to be an array in the JSON string but got `%s`", jsonObj.get("natRuleCollections").toString()));
          }

          // validate the optional field `natRuleCollections` (array)
          for (int i = 0; i < jsonArraynatRuleCollections.size(); i++) {
            AzureFirewallNatRuleCollection.validateJsonElement(jsonArraynatRuleCollections.get(i));
          };
        }
      }
      if (jsonObj.get("networkRuleCollections") != null && !jsonObj.get("networkRuleCollections").isJsonNull()) {
        JsonArray jsonArraynetworkRuleCollections = jsonObj.getAsJsonArray("networkRuleCollections");
        if (jsonArraynetworkRuleCollections != null) {
          // ensure the json data is an array
          if (!jsonObj.get("networkRuleCollections").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `networkRuleCollections` to be an array in the JSON string but got `%s`", jsonObj.get("networkRuleCollections").toString()));
          }

          // validate the optional field `networkRuleCollections` (array)
          for (int i = 0; i < jsonArraynetworkRuleCollections.size(); i++) {
            AzureFirewallNetworkRuleCollection.validateJsonElement(jsonArraynetworkRuleCollections.get(i));
          };
        }
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      // validate the optional field `provisioningState`
      if (jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) {
        ProvisioningStateEnum.validateJsonElement(jsonObj.get("provisioningState"));
      }
      // validate the optional field `threatIntelMode`
      if (jsonObj.get("threatIntelMode") != null && !jsonObj.get("threatIntelMode").isJsonNull()) {
        AzureFirewallThreatIntelMode.validateJsonElement(jsonObj.get("threatIntelMode"));
      }
      // validate the optional field `virtualHub`
      if (jsonObj.get("virtualHub") != null && !jsonObj.get("virtualHub").isJsonNull()) {
        AzureFirewallIPConfigurationPropertiesFormatPublicIPAddress.validateJsonElement(jsonObj.get("virtualHub"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AzureFirewallPropertiesFormat.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AzureFirewallPropertiesFormat' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AzureFirewallPropertiesFormat> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AzureFirewallPropertiesFormat.class));

       return (TypeAdapter<T>) new TypeAdapter<AzureFirewallPropertiesFormat>() {
           @Override
           public void write(JsonWriter out, AzureFirewallPropertiesFormat value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AzureFirewallPropertiesFormat read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AzureFirewallPropertiesFormat given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AzureFirewallPropertiesFormat
   * @throws IOException if the JSON string is invalid with respect to AzureFirewallPropertiesFormat
   */
  public static AzureFirewallPropertiesFormat fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AzureFirewallPropertiesFormat.class);
  }

  /**
   * Convert an instance of AzureFirewallPropertiesFormat to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

