/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureFirewallIPConfigurationPropertiesFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureFirewallIPConfigurationPropertiesFormat::OAIAzureFirewallIPConfigurationPropertiesFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureFirewallIPConfigurationPropertiesFormat::OAIAzureFirewallIPConfigurationPropertiesFormat() {
    this->initializeModel();
}

OAIAzureFirewallIPConfigurationPropertiesFormat::~OAIAzureFirewallIPConfigurationPropertiesFormat() {}

void OAIAzureFirewallIPConfigurationPropertiesFormat::initializeModel() {

    m_private_ip_address_isSet = false;
    m_private_ip_address_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_public_ip_address_isSet = false;
    m_public_ip_address_isValid = false;

    m_subnet_isSet = false;
    m_subnet_isValid = false;
}

void OAIAzureFirewallIPConfigurationPropertiesFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureFirewallIPConfigurationPropertiesFormat::fromJsonObject(QJsonObject json) {

    m_private_ip_address_isValid = ::OpenAPI::fromJsonValue(m_private_ip_address, json[QString("privateIPAddress")]);
    m_private_ip_address_isSet = !json[QString("privateIPAddress")].isNull() && m_private_ip_address_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_public_ip_address_isValid = ::OpenAPI::fromJsonValue(m_public_ip_address, json[QString("publicIPAddress")]);
    m_public_ip_address_isSet = !json[QString("publicIPAddress")].isNull() && m_public_ip_address_isValid;

    m_subnet_isValid = ::OpenAPI::fromJsonValue(m_subnet, json[QString("subnet")]);
    m_subnet_isSet = !json[QString("subnet")].isNull() && m_subnet_isValid;
}

QString OAIAzureFirewallIPConfigurationPropertiesFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureFirewallIPConfigurationPropertiesFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_private_ip_address_isSet) {
        obj.insert(QString("privateIPAddress"), ::OpenAPI::toJsonValue(m_private_ip_address));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_public_ip_address.isSet()) {
        obj.insert(QString("publicIPAddress"), ::OpenAPI::toJsonValue(m_public_ip_address));
    }
    if (m_subnet.isSet()) {
        obj.insert(QString("subnet"), ::OpenAPI::toJsonValue(m_subnet));
    }
    return obj;
}

QString OAIAzureFirewallIPConfigurationPropertiesFormat::getPrivateIpAddress() const {
    return m_private_ip_address;
}
void OAIAzureFirewallIPConfigurationPropertiesFormat::setPrivateIpAddress(const QString &private_ip_address) {
    m_private_ip_address = private_ip_address;
    m_private_ip_address_isSet = true;
}

bool OAIAzureFirewallIPConfigurationPropertiesFormat::is_private_ip_address_Set() const{
    return m_private_ip_address_isSet;
}

bool OAIAzureFirewallIPConfigurationPropertiesFormat::is_private_ip_address_Valid() const{
    return m_private_ip_address_isValid;
}

QString OAIAzureFirewallIPConfigurationPropertiesFormat::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIAzureFirewallIPConfigurationPropertiesFormat::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIAzureFirewallIPConfigurationPropertiesFormat::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIAzureFirewallIPConfigurationPropertiesFormat::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

OAIAzureFirewallIPConfigurationPropertiesFormat_publicIPAddress OAIAzureFirewallIPConfigurationPropertiesFormat::getPublicIpAddress() const {
    return m_public_ip_address;
}
void OAIAzureFirewallIPConfigurationPropertiesFormat::setPublicIpAddress(const OAIAzureFirewallIPConfigurationPropertiesFormat_publicIPAddress &public_ip_address) {
    m_public_ip_address = public_ip_address;
    m_public_ip_address_isSet = true;
}

bool OAIAzureFirewallIPConfigurationPropertiesFormat::is_public_ip_address_Set() const{
    return m_public_ip_address_isSet;
}

bool OAIAzureFirewallIPConfigurationPropertiesFormat::is_public_ip_address_Valid() const{
    return m_public_ip_address_isValid;
}

OAIAzureFirewallIPConfigurationPropertiesFormat_publicIPAddress OAIAzureFirewallIPConfigurationPropertiesFormat::getSubnet() const {
    return m_subnet;
}
void OAIAzureFirewallIPConfigurationPropertiesFormat::setSubnet(const OAIAzureFirewallIPConfigurationPropertiesFormat_publicIPAddress &subnet) {
    m_subnet = subnet;
    m_subnet_isSet = true;
}

bool OAIAzureFirewallIPConfigurationPropertiesFormat::is_subnet_Set() const{
    return m_subnet_isSet;
}

bool OAIAzureFirewallIPConfigurationPropertiesFormat::is_subnet_Valid() const{
    return m_subnet_isValid;
}

bool OAIAzureFirewallIPConfigurationPropertiesFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_private_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_ip_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnet.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureFirewallIPConfigurationPropertiesFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
