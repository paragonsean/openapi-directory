# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.azure_firewall_network_rule_protocol import AzureFirewallNetworkRuleProtocol
from openapi_server import util


class AzureFirewallNatRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, destination_addresses: List[str]=None, destination_ports: List[str]=None, name: str=None, protocols: List[AzureFirewallNetworkRuleProtocol]=None, source_addresses: List[str]=None, translated_address: str=None, translated_port: str=None):
        """AzureFirewallNatRule - a model defined in OpenAPI

        :param description: The description of this AzureFirewallNatRule.
        :param destination_addresses: The destination_addresses of this AzureFirewallNatRule.
        :param destination_ports: The destination_ports of this AzureFirewallNatRule.
        :param name: The name of this AzureFirewallNatRule.
        :param protocols: The protocols of this AzureFirewallNatRule.
        :param source_addresses: The source_addresses of this AzureFirewallNatRule.
        :param translated_address: The translated_address of this AzureFirewallNatRule.
        :param translated_port: The translated_port of this AzureFirewallNatRule.
        """
        self.openapi_types = {
            'description': str,
            'destination_addresses': List[str],
            'destination_ports': List[str],
            'name': str,
            'protocols': List[AzureFirewallNetworkRuleProtocol],
            'source_addresses': List[str],
            'translated_address': str,
            'translated_port': str
        }

        self.attribute_map = {
            'description': 'description',
            'destination_addresses': 'destinationAddresses',
            'destination_ports': 'destinationPorts',
            'name': 'name',
            'protocols': 'protocols',
            'source_addresses': 'sourceAddresses',
            'translated_address': 'translatedAddress',
            'translated_port': 'translatedPort'
        }

        self._description = description
        self._destination_addresses = destination_addresses
        self._destination_ports = destination_ports
        self._name = name
        self._protocols = protocols
        self._source_addresses = source_addresses
        self._translated_address = translated_address
        self._translated_port = translated_port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureFirewallNatRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureFirewallNatRule of this AzureFirewallNatRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this AzureFirewallNatRule.

        Description of the rule.

        :return: The description of this AzureFirewallNatRule.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AzureFirewallNatRule.

        Description of the rule.

        :param description: The description of this AzureFirewallNatRule.
        :type description: str
        """

        self._description = description

    @property
    def destination_addresses(self):
        """Gets the destination_addresses of this AzureFirewallNatRule.

        List of destination IP addresses for this rule.

        :return: The destination_addresses of this AzureFirewallNatRule.
        :rtype: List[str]
        """
        return self._destination_addresses

    @destination_addresses.setter
    def destination_addresses(self, destination_addresses):
        """Sets the destination_addresses of this AzureFirewallNatRule.

        List of destination IP addresses for this rule.

        :param destination_addresses: The destination_addresses of this AzureFirewallNatRule.
        :type destination_addresses: List[str]
        """

        self._destination_addresses = destination_addresses

    @property
    def destination_ports(self):
        """Gets the destination_ports of this AzureFirewallNatRule.

        List of destination ports.

        :return: The destination_ports of this AzureFirewallNatRule.
        :rtype: List[str]
        """
        return self._destination_ports

    @destination_ports.setter
    def destination_ports(self, destination_ports):
        """Sets the destination_ports of this AzureFirewallNatRule.

        List of destination ports.

        :param destination_ports: The destination_ports of this AzureFirewallNatRule.
        :type destination_ports: List[str]
        """

        self._destination_ports = destination_ports

    @property
    def name(self):
        """Gets the name of this AzureFirewallNatRule.

        Name of the NAT rule.

        :return: The name of this AzureFirewallNatRule.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AzureFirewallNatRule.

        Name of the NAT rule.

        :param name: The name of this AzureFirewallNatRule.
        :type name: str
        """

        self._name = name

    @property
    def protocols(self):
        """Gets the protocols of this AzureFirewallNatRule.

        Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.

        :return: The protocols of this AzureFirewallNatRule.
        :rtype: List[AzureFirewallNetworkRuleProtocol]
        """
        return self._protocols

    @protocols.setter
    def protocols(self, protocols):
        """Sets the protocols of this AzureFirewallNatRule.

        Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.

        :param protocols: The protocols of this AzureFirewallNatRule.
        :type protocols: List[AzureFirewallNetworkRuleProtocol]
        """

        self._protocols = protocols

    @property
    def source_addresses(self):
        """Gets the source_addresses of this AzureFirewallNatRule.

        List of source IP addresses for this rule.

        :return: The source_addresses of this AzureFirewallNatRule.
        :rtype: List[str]
        """
        return self._source_addresses

    @source_addresses.setter
    def source_addresses(self, source_addresses):
        """Sets the source_addresses of this AzureFirewallNatRule.

        List of source IP addresses for this rule.

        :param source_addresses: The source_addresses of this AzureFirewallNatRule.
        :type source_addresses: List[str]
        """

        self._source_addresses = source_addresses

    @property
    def translated_address(self):
        """Gets the translated_address of this AzureFirewallNatRule.

        The translated address for this NAT rule.

        :return: The translated_address of this AzureFirewallNatRule.
        :rtype: str
        """
        return self._translated_address

    @translated_address.setter
    def translated_address(self, translated_address):
        """Sets the translated_address of this AzureFirewallNatRule.

        The translated address for this NAT rule.

        :param translated_address: The translated_address of this AzureFirewallNatRule.
        :type translated_address: str
        """

        self._translated_address = translated_address

    @property
    def translated_port(self):
        """Gets the translated_port of this AzureFirewallNatRule.

        The translated port for this NAT rule.

        :return: The translated_port of this AzureFirewallNatRule.
        :rtype: str
        """
        return self._translated_port

    @translated_port.setter
    def translated_port(self, translated_port):
        """Sets the translated_port of this AzureFirewallNatRule.

        The translated port for this NAT rule.

        :param translated_port: The translated_port of this AzureFirewallNatRule.
        :type translated_port: str
        """

        self._translated_port = translated_port
