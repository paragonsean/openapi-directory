# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.azure_firewall_application_rule import AzureFirewallApplicationRule
from openapi_server.models.azure_firewall_rc_action import AzureFirewallRCAction
from openapi_server.models.provisioning_state import ProvisioningState
from openapi_server import util


class AzureFirewallApplicationRuleCollectionPropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: AzureFirewallRCAction=None, priority: int=None, provisioning_state: ProvisioningState=None, rules: List[AzureFirewallApplicationRule]=None):
        """AzureFirewallApplicationRuleCollectionPropertiesFormat - a model defined in OpenAPI

        :param action: The action of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        :param priority: The priority of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        :param provisioning_state: The provisioning_state of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        :param rules: The rules of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        """
        self.openapi_types = {
            'action': AzureFirewallRCAction,
            'priority': int,
            'provisioning_state': ProvisioningState,
            'rules': List[AzureFirewallApplicationRule]
        }

        self.attribute_map = {
            'action': 'action',
            'priority': 'priority',
            'provisioning_state': 'provisioningState',
            'rules': 'rules'
        }

        self._action = action
        self._priority = priority
        self._provisioning_state = provisioning_state
        self._rules = rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureFirewallApplicationRuleCollectionPropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureFirewallApplicationRuleCollectionPropertiesFormat of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this AzureFirewallApplicationRuleCollectionPropertiesFormat.


        :return: The action of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        :rtype: AzureFirewallRCAction
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this AzureFirewallApplicationRuleCollectionPropertiesFormat.


        :param action: The action of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        :type action: AzureFirewallRCAction
        """

        self._action = action

    @property
    def priority(self):
        """Gets the priority of this AzureFirewallApplicationRuleCollectionPropertiesFormat.

        Priority of the application rule collection resource.

        :return: The priority of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this AzureFirewallApplicationRuleCollectionPropertiesFormat.

        Priority of the application rule collection resource.

        :param priority: The priority of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        :type priority: int
        """
        if priority is not None and priority > 65000:
            raise ValueError("Invalid value for `priority`, must be a value less than or equal to `65000`")
        if priority is not None and priority < 100:
            raise ValueError("Invalid value for `priority`, must be a value greater than or equal to `100`")

        self._priority = priority

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this AzureFirewallApplicationRuleCollectionPropertiesFormat.


        :return: The provisioning_state of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        :rtype: ProvisioningState
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this AzureFirewallApplicationRuleCollectionPropertiesFormat.


        :param provisioning_state: The provisioning_state of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        :type provisioning_state: ProvisioningState
        """

        self._provisioning_state = provisioning_state

    @property
    def rules(self):
        """Gets the rules of this AzureFirewallApplicationRuleCollectionPropertiesFormat.

        Collection of rules used by a application rule collection.

        :return: The rules of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        :rtype: List[AzureFirewallApplicationRule]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this AzureFirewallApplicationRuleCollectionPropertiesFormat.

        Collection of rules used by a application rule collection.

        :param rules: The rules of this AzureFirewallApplicationRuleCollectionPropertiesFormat.
        :type rules: List[AzureFirewallApplicationRule]
        """

        self._rules = rules
