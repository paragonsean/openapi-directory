/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AzureFirewallApplicationRuleProtocol;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Properties of an application rule.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:01:47.493881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AzureFirewallApplicationRule {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FQDN_TAGS = "fqdnTags";
  @SerializedName(SERIALIZED_NAME_FQDN_TAGS)
  private List<String> fqdnTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROTOCOLS = "protocols";
  @SerializedName(SERIALIZED_NAME_PROTOCOLS)
  private List<AzureFirewallApplicationRuleProtocol> protocols = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE_ADDRESSES = "sourceAddresses";
  @SerializedName(SERIALIZED_NAME_SOURCE_ADDRESSES)
  private List<String> sourceAddresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_TARGET_FQDNS = "targetFqdns";
  @SerializedName(SERIALIZED_NAME_TARGET_FQDNS)
  private List<String> targetFqdns = new ArrayList<>();

  public AzureFirewallApplicationRule() {
  }

  public AzureFirewallApplicationRule description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the rule.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public AzureFirewallApplicationRule fqdnTags(List<String> fqdnTags) {
    this.fqdnTags = fqdnTags;
    return this;
  }

  public AzureFirewallApplicationRule addFqdnTagsItem(String fqdnTagsItem) {
    if (this.fqdnTags == null) {
      this.fqdnTags = new ArrayList<>();
    }
    this.fqdnTags.add(fqdnTagsItem);
    return this;
  }

  /**
   * List of FQDN Tags for this rule.
   * @return fqdnTags
   */
  @javax.annotation.Nullable
  public List<String> getFqdnTags() {
    return fqdnTags;
  }

  public void setFqdnTags(List<String> fqdnTags) {
    this.fqdnTags = fqdnTags;
  }


  public AzureFirewallApplicationRule name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the application rule.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AzureFirewallApplicationRule protocols(List<AzureFirewallApplicationRuleProtocol> protocols) {
    this.protocols = protocols;
    return this;
  }

  public AzureFirewallApplicationRule addProtocolsItem(AzureFirewallApplicationRuleProtocol protocolsItem) {
    if (this.protocols == null) {
      this.protocols = new ArrayList<>();
    }
    this.protocols.add(protocolsItem);
    return this;
  }

  /**
   * Array of ApplicationRuleProtocols.
   * @return protocols
   */
  @javax.annotation.Nullable
  public List<AzureFirewallApplicationRuleProtocol> getProtocols() {
    return protocols;
  }

  public void setProtocols(List<AzureFirewallApplicationRuleProtocol> protocols) {
    this.protocols = protocols;
  }


  public AzureFirewallApplicationRule sourceAddresses(List<String> sourceAddresses) {
    this.sourceAddresses = sourceAddresses;
    return this;
  }

  public AzureFirewallApplicationRule addSourceAddressesItem(String sourceAddressesItem) {
    if (this.sourceAddresses == null) {
      this.sourceAddresses = new ArrayList<>();
    }
    this.sourceAddresses.add(sourceAddressesItem);
    return this;
  }

  /**
   * List of source IP addresses for this rule.
   * @return sourceAddresses
   */
  @javax.annotation.Nullable
  public List<String> getSourceAddresses() {
    return sourceAddresses;
  }

  public void setSourceAddresses(List<String> sourceAddresses) {
    this.sourceAddresses = sourceAddresses;
  }


  public AzureFirewallApplicationRule targetFqdns(List<String> targetFqdns) {
    this.targetFqdns = targetFqdns;
    return this;
  }

  public AzureFirewallApplicationRule addTargetFqdnsItem(String targetFqdnsItem) {
    if (this.targetFqdns == null) {
      this.targetFqdns = new ArrayList<>();
    }
    this.targetFqdns.add(targetFqdnsItem);
    return this;
  }

  /**
   * List of FQDNs for this rule.
   * @return targetFqdns
   */
  @javax.annotation.Nullable
  public List<String> getTargetFqdns() {
    return targetFqdns;
  }

  public void setTargetFqdns(List<String> targetFqdns) {
    this.targetFqdns = targetFqdns;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureFirewallApplicationRule azureFirewallApplicationRule = (AzureFirewallApplicationRule) o;
    return Objects.equals(this.description, azureFirewallApplicationRule.description) &&
        Objects.equals(this.fqdnTags, azureFirewallApplicationRule.fqdnTags) &&
        Objects.equals(this.name, azureFirewallApplicationRule.name) &&
        Objects.equals(this.protocols, azureFirewallApplicationRule.protocols) &&
        Objects.equals(this.sourceAddresses, azureFirewallApplicationRule.sourceAddresses) &&
        Objects.equals(this.targetFqdns, azureFirewallApplicationRule.targetFqdns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, fqdnTags, name, protocols, sourceAddresses, targetFqdns);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureFirewallApplicationRule {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fqdnTags: ").append(toIndentedString(fqdnTags)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    protocols: ").append(toIndentedString(protocols)).append("\n");
    sb.append("    sourceAddresses: ").append(toIndentedString(sourceAddresses)).append("\n");
    sb.append("    targetFqdns: ").append(toIndentedString(targetFqdns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("fqdnTags");
    openapiFields.add("name");
    openapiFields.add("protocols");
    openapiFields.add("sourceAddresses");
    openapiFields.add("targetFqdns");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AzureFirewallApplicationRule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AzureFirewallApplicationRule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AzureFirewallApplicationRule is not found in the empty JSON string", AzureFirewallApplicationRule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AzureFirewallApplicationRule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AzureFirewallApplicationRule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("fqdnTags") != null && !jsonObj.get("fqdnTags").isJsonNull() && !jsonObj.get("fqdnTags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `fqdnTags` to be an array in the JSON string but got `%s`", jsonObj.get("fqdnTags").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("protocols") != null && !jsonObj.get("protocols").isJsonNull()) {
        JsonArray jsonArrayprotocols = jsonObj.getAsJsonArray("protocols");
        if (jsonArrayprotocols != null) {
          // ensure the json data is an array
          if (!jsonObj.get("protocols").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `protocols` to be an array in the JSON string but got `%s`", jsonObj.get("protocols").toString()));
          }

          // validate the optional field `protocols` (array)
          for (int i = 0; i < jsonArrayprotocols.size(); i++) {
            AzureFirewallApplicationRuleProtocol.validateJsonElement(jsonArrayprotocols.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sourceAddresses") != null && !jsonObj.get("sourceAddresses").isJsonNull() && !jsonObj.get("sourceAddresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceAddresses` to be an array in the JSON string but got `%s`", jsonObj.get("sourceAddresses").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("targetFqdns") != null && !jsonObj.get("targetFqdns").isJsonNull() && !jsonObj.get("targetFqdns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetFqdns` to be an array in the JSON string but got `%s`", jsonObj.get("targetFqdns").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AzureFirewallApplicationRule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AzureFirewallApplicationRule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AzureFirewallApplicationRule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AzureFirewallApplicationRule.class));

       return (TypeAdapter<T>) new TypeAdapter<AzureFirewallApplicationRule>() {
           @Override
           public void write(JsonWriter out, AzureFirewallApplicationRule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AzureFirewallApplicationRule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AzureFirewallApplicationRule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AzureFirewallApplicationRule
   * @throws IOException if the JSON string is invalid with respect to AzureFirewallApplicationRule
   */
  public static AzureFirewallApplicationRule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AzureFirewallApplicationRule.class);
  }

  /**
   * Convert an instance of AzureFirewallApplicationRule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

