/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AzureFirewallNetworkRule;
import org.openapitools.client.model.AzureFirewallRCAction;
import org.openapitools.client.model.ProvisioningState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Properties of the network rule collection.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:01:39.369468-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AzureFirewallNetworkRuleCollectionPropertiesFormat {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private AzureFirewallRCAction action;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private ProvisioningState provisioningState;

  public static final String SERIALIZED_NAME_RULES = "rules";
  @SerializedName(SERIALIZED_NAME_RULES)
  private List<AzureFirewallNetworkRule> rules = new ArrayList<>();

  public AzureFirewallNetworkRuleCollectionPropertiesFormat() {
  }

  public AzureFirewallNetworkRuleCollectionPropertiesFormat action(AzureFirewallRCAction action) {
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @javax.annotation.Nullable
  public AzureFirewallRCAction getAction() {
    return action;
  }

  public void setAction(AzureFirewallRCAction action) {
    this.action = action;
  }


  public AzureFirewallNetworkRuleCollectionPropertiesFormat priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Priority of the network rule collection resource.
   * minimum: 100
   * maximum: 65000
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public AzureFirewallNetworkRuleCollectionPropertiesFormat provisioningState(ProvisioningState provisioningState) {
    this.provisioningState = provisioningState;
    return this;
  }

  /**
   * Get provisioningState
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public ProvisioningState getProvisioningState() {
    return provisioningState;
  }

  public void setProvisioningState(ProvisioningState provisioningState) {
    this.provisioningState = provisioningState;
  }


  public AzureFirewallNetworkRuleCollectionPropertiesFormat rules(List<AzureFirewallNetworkRule> rules) {
    this.rules = rules;
    return this;
  }

  public AzureFirewallNetworkRuleCollectionPropertiesFormat addRulesItem(AzureFirewallNetworkRule rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<>();
    }
    this.rules.add(rulesItem);
    return this;
  }

  /**
   * Collection of rules used by a network rule collection.
   * @return rules
   */
  @javax.annotation.Nullable
  public List<AzureFirewallNetworkRule> getRules() {
    return rules;
  }

  public void setRules(List<AzureFirewallNetworkRule> rules) {
    this.rules = rules;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureFirewallNetworkRuleCollectionPropertiesFormat azureFirewallNetworkRuleCollectionPropertiesFormat = (AzureFirewallNetworkRuleCollectionPropertiesFormat) o;
    return Objects.equals(this.action, azureFirewallNetworkRuleCollectionPropertiesFormat.action) &&
        Objects.equals(this.priority, azureFirewallNetworkRuleCollectionPropertiesFormat.priority) &&
        Objects.equals(this.provisioningState, azureFirewallNetworkRuleCollectionPropertiesFormat.provisioningState) &&
        Objects.equals(this.rules, azureFirewallNetworkRuleCollectionPropertiesFormat.rules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, priority, provisioningState, rules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureFirewallNetworkRuleCollectionPropertiesFormat {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("priority");
    openapiFields.add("provisioningState");
    openapiFields.add("rules");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AzureFirewallNetworkRuleCollectionPropertiesFormat
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AzureFirewallNetworkRuleCollectionPropertiesFormat.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AzureFirewallNetworkRuleCollectionPropertiesFormat is not found in the empty JSON string", AzureFirewallNetworkRuleCollectionPropertiesFormat.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AzureFirewallNetworkRuleCollectionPropertiesFormat.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AzureFirewallNetworkRuleCollectionPropertiesFormat` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `action`
      if (jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) {
        AzureFirewallRCAction.validateJsonElement(jsonObj.get("action"));
      }
      // validate the optional field `provisioningState`
      if (jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) {
        ProvisioningState.validateJsonElement(jsonObj.get("provisioningState"));
      }
      if (jsonObj.get("rules") != null && !jsonObj.get("rules").isJsonNull()) {
        JsonArray jsonArrayrules = jsonObj.getAsJsonArray("rules");
        if (jsonArrayrules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("rules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `rules` to be an array in the JSON string but got `%s`", jsonObj.get("rules").toString()));
          }

          // validate the optional field `rules` (array)
          for (int i = 0; i < jsonArrayrules.size(); i++) {
            AzureFirewallNetworkRule.validateJsonElement(jsonArrayrules.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AzureFirewallNetworkRuleCollectionPropertiesFormat.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AzureFirewallNetworkRuleCollectionPropertiesFormat' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AzureFirewallNetworkRuleCollectionPropertiesFormat> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AzureFirewallNetworkRuleCollectionPropertiesFormat.class));

       return (TypeAdapter<T>) new TypeAdapter<AzureFirewallNetworkRuleCollectionPropertiesFormat>() {
           @Override
           public void write(JsonWriter out, AzureFirewallNetworkRuleCollectionPropertiesFormat value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AzureFirewallNetworkRuleCollectionPropertiesFormat read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AzureFirewallNetworkRuleCollectionPropertiesFormat given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AzureFirewallNetworkRuleCollectionPropertiesFormat
   * @throws IOException if the JSON string is invalid with respect to AzureFirewallNetworkRuleCollectionPropertiesFormat
   */
  public static AzureFirewallNetworkRuleCollectionPropertiesFormat fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AzureFirewallNetworkRuleCollectionPropertiesFormat.class);
  }

  /**
   * Convert an instance of AzureFirewallNetworkRuleCollectionPropertiesFormat to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

