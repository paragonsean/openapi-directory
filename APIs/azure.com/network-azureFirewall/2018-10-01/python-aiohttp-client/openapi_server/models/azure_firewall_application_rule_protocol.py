# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.azure_firewall_application_rule_protocol_type import AzureFirewallApplicationRuleProtocolType
from openapi_server import util


class AzureFirewallApplicationRuleProtocol(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, port: int=None, protocol_type: AzureFirewallApplicationRuleProtocolType=None):
        """AzureFirewallApplicationRuleProtocol - a model defined in OpenAPI

        :param port: The port of this AzureFirewallApplicationRuleProtocol.
        :param protocol_type: The protocol_type of this AzureFirewallApplicationRuleProtocol.
        """
        self.openapi_types = {
            'port': int,
            'protocol_type': AzureFirewallApplicationRuleProtocolType
        }

        self.attribute_map = {
            'port': 'port',
            'protocol_type': 'protocolType'
        }

        self._port = port
        self._protocol_type = protocol_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureFirewallApplicationRuleProtocol':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureFirewallApplicationRuleProtocol of this AzureFirewallApplicationRuleProtocol.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def port(self):
        """Gets the port of this AzureFirewallApplicationRuleProtocol.

        Port number for the protocol, cannot be greater than 64000. This field is optional.

        :return: The port of this AzureFirewallApplicationRuleProtocol.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this AzureFirewallApplicationRuleProtocol.

        Port number for the protocol, cannot be greater than 64000. This field is optional.

        :param port: The port of this AzureFirewallApplicationRuleProtocol.
        :type port: int
        """
        if port is not None and port > 64000:
            raise ValueError("Invalid value for `port`, must be a value less than or equal to `64000`")
        if port is not None and port < 0:
            raise ValueError("Invalid value for `port`, must be a value greater than or equal to `0`")

        self._port = port

    @property
    def protocol_type(self):
        """Gets the protocol_type of this AzureFirewallApplicationRuleProtocol.


        :return: The protocol_type of this AzureFirewallApplicationRuleProtocol.
        :rtype: AzureFirewallApplicationRuleProtocolType
        """
        return self._protocol_type

    @protocol_type.setter
    def protocol_type(self, protocol_type):
        """Sets the protocol_type of this AzureFirewallApplicationRuleProtocol.


        :param protocol_type: The protocol_type of this AzureFirewallApplicationRuleProtocol.
        :type protocol_type: AzureFirewallApplicationRuleProtocolType
        """

        self._protocol_type = protocol_type
