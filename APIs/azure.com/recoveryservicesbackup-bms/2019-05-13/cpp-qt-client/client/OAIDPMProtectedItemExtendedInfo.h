/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-05-13
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDPMProtectedItemExtendedInfo.h
 *
 * Additional information of DPM Protected item.
 */

#ifndef OAIDPMProtectedItemExtendedInfo_H
#define OAIDPMProtectedItemExtendedInfo_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDPMProtectedItemExtendedInfo : public OAIObject {
public:
    OAIDPMProtectedItemExtendedInfo();
    OAIDPMProtectedItemExtendedInfo(QString json);
    ~OAIDPMProtectedItemExtendedInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDiskStorageUsedInBytes() const;
    void setDiskStorageUsedInBytes(const QString &disk_storage_used_in_bytes);
    bool is_disk_storage_used_in_bytes_Set() const;
    bool is_disk_storage_used_in_bytes_Valid() const;

    bool isIsCollocated() const;
    void setIsCollocated(const bool &is_collocated);
    bool is_is_collocated_Set() const;
    bool is_is_collocated_Valid() const;

    bool isIsPresentOnCloud() const;
    void setIsPresentOnCloud(const bool &is_present_on_cloud);
    bool is_is_present_on_cloud_Set() const;
    bool is_is_present_on_cloud_Valid() const;

    QString getLastBackupStatus() const;
    void setLastBackupStatus(const QString &last_backup_status);
    bool is_last_backup_status_Set() const;
    bool is_last_backup_status_Valid() const;

    QDateTime getLastRefreshedAt() const;
    void setLastRefreshedAt(const QDateTime &last_refreshed_at);
    bool is_last_refreshed_at_Set() const;
    bool is_last_refreshed_at_Valid() const;

    QDateTime getOldestRecoveryPoint() const;
    void setOldestRecoveryPoint(const QDateTime &oldest_recovery_point);
    bool is_oldest_recovery_point_Set() const;
    bool is_oldest_recovery_point_Valid() const;

    QDateTime getOnPremiseLatestRecoveryPoint() const;
    void setOnPremiseLatestRecoveryPoint(const QDateTime &on_premise_latest_recovery_point);
    bool is_on_premise_latest_recovery_point_Set() const;
    bool is_on_premise_latest_recovery_point_Valid() const;

    QDateTime getOnPremiseOldestRecoveryPoint() const;
    void setOnPremiseOldestRecoveryPoint(const QDateTime &on_premise_oldest_recovery_point);
    bool is_on_premise_oldest_recovery_point_Set() const;
    bool is_on_premise_oldest_recovery_point_Valid() const;

    qint32 getOnPremiseRecoveryPointCount() const;
    void setOnPremiseRecoveryPointCount(const qint32 &on_premise_recovery_point_count);
    bool is_on_premise_recovery_point_count_Set() const;
    bool is_on_premise_recovery_point_count_Valid() const;

    QMap<QString, QString> getProtectableObjectLoadPath() const;
    void setProtectableObjectLoadPath(const QMap<QString, QString> &protectable_object_load_path);
    bool is_protectable_object_load_path_Set() const;
    bool is_protectable_object_load_path_Valid() const;

    bool isRProtected() const;
    void setRProtected(const bool &r_protected);
    bool is_r_protected_Set() const;
    bool is_r_protected_Valid() const;

    QString getProtectionGroupName() const;
    void setProtectionGroupName(const QString &protection_group_name);
    bool is_protection_group_name_Set() const;
    bool is_protection_group_name_Valid() const;

    qint32 getRecoveryPointCount() const;
    void setRecoveryPointCount(const qint32 &recovery_point_count);
    bool is_recovery_point_count_Set() const;
    bool is_recovery_point_count_Valid() const;

    QString getTotalDiskStorageSizeInBytes() const;
    void setTotalDiskStorageSizeInBytes(const QString &total_disk_storage_size_in_bytes);
    bool is_total_disk_storage_size_in_bytes_Set() const;
    bool is_total_disk_storage_size_in_bytes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_disk_storage_used_in_bytes;
    bool m_disk_storage_used_in_bytes_isSet;
    bool m_disk_storage_used_in_bytes_isValid;

    bool m_is_collocated;
    bool m_is_collocated_isSet;
    bool m_is_collocated_isValid;

    bool m_is_present_on_cloud;
    bool m_is_present_on_cloud_isSet;
    bool m_is_present_on_cloud_isValid;

    QString m_last_backup_status;
    bool m_last_backup_status_isSet;
    bool m_last_backup_status_isValid;

    QDateTime m_last_refreshed_at;
    bool m_last_refreshed_at_isSet;
    bool m_last_refreshed_at_isValid;

    QDateTime m_oldest_recovery_point;
    bool m_oldest_recovery_point_isSet;
    bool m_oldest_recovery_point_isValid;

    QDateTime m_on_premise_latest_recovery_point;
    bool m_on_premise_latest_recovery_point_isSet;
    bool m_on_premise_latest_recovery_point_isValid;

    QDateTime m_on_premise_oldest_recovery_point;
    bool m_on_premise_oldest_recovery_point_isSet;
    bool m_on_premise_oldest_recovery_point_isValid;

    qint32 m_on_premise_recovery_point_count;
    bool m_on_premise_recovery_point_count_isSet;
    bool m_on_premise_recovery_point_count_isValid;

    QMap<QString, QString> m_protectable_object_load_path;
    bool m_protectable_object_load_path_isSet;
    bool m_protectable_object_load_path_isValid;

    bool m_r_protected;
    bool m_r_protected_isSet;
    bool m_r_protected_isValid;

    QString m_protection_group_name;
    bool m_protection_group_name_isSet;
    bool m_protection_group_name_isValid;

    qint32 m_recovery_point_count;
    bool m_recovery_point_count_isSet;
    bool m_recovery_point_count_isValid;

    QString m_total_disk_storage_size_in_bytes;
    bool m_total_disk_storage_size_in_bytes_isSet;
    bool m_total_disk_storage_size_in_bytes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDPMProtectedItemExtendedInfo)

#endif // OAIDPMProtectedItemExtendedInfo_H
