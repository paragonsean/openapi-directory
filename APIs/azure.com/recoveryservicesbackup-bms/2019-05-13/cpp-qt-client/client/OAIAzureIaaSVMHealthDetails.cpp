/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-05-13
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureIaaSVMHealthDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureIaaSVMHealthDetails::OAIAzureIaaSVMHealthDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureIaaSVMHealthDetails::OAIAzureIaaSVMHealthDetails() {
    this->initializeModel();
}

OAIAzureIaaSVMHealthDetails::~OAIAzureIaaSVMHealthDetails() {}

void OAIAzureIaaSVMHealthDetails::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_recommendations_isSet = false;
    m_recommendations_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIAzureIaaSVMHealthDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureIaaSVMHealthDetails::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_recommendations_isValid = ::OpenAPI::fromJsonValue(m_recommendations, json[QString("recommendations")]);
    m_recommendations_isSet = !json[QString("recommendations")].isNull() && m_recommendations_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIAzureIaaSVMHealthDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureIaaSVMHealthDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_recommendations.size() > 0) {
        obj.insert(QString("recommendations"), ::OpenAPI::toJsonValue(m_recommendations));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

qint32 OAIAzureIaaSVMHealthDetails::getCode() const {
    return m_code;
}
void OAIAzureIaaSVMHealthDetails::setCode(const qint32 &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIAzureIaaSVMHealthDetails::is_code_Set() const{
    return m_code_isSet;
}

bool OAIAzureIaaSVMHealthDetails::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIAzureIaaSVMHealthDetails::getMessage() const {
    return m_message;
}
void OAIAzureIaaSVMHealthDetails::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIAzureIaaSVMHealthDetails::is_message_Set() const{
    return m_message_isSet;
}

bool OAIAzureIaaSVMHealthDetails::is_message_Valid() const{
    return m_message_isValid;
}

QList<QString> OAIAzureIaaSVMHealthDetails::getRecommendations() const {
    return m_recommendations;
}
void OAIAzureIaaSVMHealthDetails::setRecommendations(const QList<QString> &recommendations) {
    m_recommendations = recommendations;
    m_recommendations_isSet = true;
}

bool OAIAzureIaaSVMHealthDetails::is_recommendations_Set() const{
    return m_recommendations_isSet;
}

bool OAIAzureIaaSVMHealthDetails::is_recommendations_Valid() const{
    return m_recommendations_isValid;
}

QString OAIAzureIaaSVMHealthDetails::getTitle() const {
    return m_title;
}
void OAIAzureIaaSVMHealthDetails::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIAzureIaaSVMHealthDetails::is_title_Set() const{
    return m_title_isSet;
}

bool OAIAzureIaaSVMHealthDetails::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIAzureIaaSVMHealthDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureIaaSVMHealthDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
