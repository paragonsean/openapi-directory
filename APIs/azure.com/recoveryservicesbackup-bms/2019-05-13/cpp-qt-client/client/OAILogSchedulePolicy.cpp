/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-05-13
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILogSchedulePolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILogSchedulePolicy::OAILogSchedulePolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILogSchedulePolicy::OAILogSchedulePolicy() {
    this->initializeModel();
}

OAILogSchedulePolicy::~OAILogSchedulePolicy() {}

void OAILogSchedulePolicy::initializeModel() {

    m_schedule_frequency_in_mins_isSet = false;
    m_schedule_frequency_in_mins_isValid = false;

    m_schedule_policy_type_isSet = false;
    m_schedule_policy_type_isValid = false;
}

void OAILogSchedulePolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILogSchedulePolicy::fromJsonObject(QJsonObject json) {

    m_schedule_frequency_in_mins_isValid = ::OpenAPI::fromJsonValue(m_schedule_frequency_in_mins, json[QString("scheduleFrequencyInMins")]);
    m_schedule_frequency_in_mins_isSet = !json[QString("scheduleFrequencyInMins")].isNull() && m_schedule_frequency_in_mins_isValid;

    m_schedule_policy_type_isValid = ::OpenAPI::fromJsonValue(m_schedule_policy_type, json[QString("schedulePolicyType")]);
    m_schedule_policy_type_isSet = !json[QString("schedulePolicyType")].isNull() && m_schedule_policy_type_isValid;
}

QString OAILogSchedulePolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILogSchedulePolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_schedule_frequency_in_mins_isSet) {
        obj.insert(QString("scheduleFrequencyInMins"), ::OpenAPI::toJsonValue(m_schedule_frequency_in_mins));
    }
    if (m_schedule_policy_type_isSet) {
        obj.insert(QString("schedulePolicyType"), ::OpenAPI::toJsonValue(m_schedule_policy_type));
    }
    return obj;
}

qint32 OAILogSchedulePolicy::getScheduleFrequencyInMins() const {
    return m_schedule_frequency_in_mins;
}
void OAILogSchedulePolicy::setScheduleFrequencyInMins(const qint32 &schedule_frequency_in_mins) {
    m_schedule_frequency_in_mins = schedule_frequency_in_mins;
    m_schedule_frequency_in_mins_isSet = true;
}

bool OAILogSchedulePolicy::is_schedule_frequency_in_mins_Set() const{
    return m_schedule_frequency_in_mins_isSet;
}

bool OAILogSchedulePolicy::is_schedule_frequency_in_mins_Valid() const{
    return m_schedule_frequency_in_mins_isValid;
}

QString OAILogSchedulePolicy::getSchedulePolicyType() const {
    return m_schedule_policy_type;
}
void OAILogSchedulePolicy::setSchedulePolicyType(const QString &schedule_policy_type) {
    m_schedule_policy_type = schedule_policy_type;
    m_schedule_policy_type_isSet = true;
}

bool OAILogSchedulePolicy::is_schedule_policy_type_Set() const{
    return m_schedule_policy_type_isSet;
}

bool OAILogSchedulePolicy::is_schedule_policy_type_Valid() const{
    return m_schedule_policy_type_isValid;
}

bool OAILogSchedulePolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schedule_frequency_in_mins_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_policy_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILogSchedulePolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_schedule_policy_type_isValid && true;
}

} // namespace OpenAPI
