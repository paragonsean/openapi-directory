/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-05-13
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILongTermRetentionPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILongTermRetentionPolicy::OAILongTermRetentionPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILongTermRetentionPolicy::OAILongTermRetentionPolicy() {
    this->initializeModel();
}

OAILongTermRetentionPolicy::~OAILongTermRetentionPolicy() {}

void OAILongTermRetentionPolicy::initializeModel() {

    m_daily_schedule_isSet = false;
    m_daily_schedule_isValid = false;

    m_monthly_schedule_isSet = false;
    m_monthly_schedule_isValid = false;

    m_weekly_schedule_isSet = false;
    m_weekly_schedule_isValid = false;

    m_yearly_schedule_isSet = false;
    m_yearly_schedule_isValid = false;

    m_retention_policy_type_isSet = false;
    m_retention_policy_type_isValid = false;
}

void OAILongTermRetentionPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILongTermRetentionPolicy::fromJsonObject(QJsonObject json) {

    m_daily_schedule_isValid = ::OpenAPI::fromJsonValue(m_daily_schedule, json[QString("dailySchedule")]);
    m_daily_schedule_isSet = !json[QString("dailySchedule")].isNull() && m_daily_schedule_isValid;

    m_monthly_schedule_isValid = ::OpenAPI::fromJsonValue(m_monthly_schedule, json[QString("monthlySchedule")]);
    m_monthly_schedule_isSet = !json[QString("monthlySchedule")].isNull() && m_monthly_schedule_isValid;

    m_weekly_schedule_isValid = ::OpenAPI::fromJsonValue(m_weekly_schedule, json[QString("weeklySchedule")]);
    m_weekly_schedule_isSet = !json[QString("weeklySchedule")].isNull() && m_weekly_schedule_isValid;

    m_yearly_schedule_isValid = ::OpenAPI::fromJsonValue(m_yearly_schedule, json[QString("yearlySchedule")]);
    m_yearly_schedule_isSet = !json[QString("yearlySchedule")].isNull() && m_yearly_schedule_isValid;

    m_retention_policy_type_isValid = ::OpenAPI::fromJsonValue(m_retention_policy_type, json[QString("retentionPolicyType")]);
    m_retention_policy_type_isSet = !json[QString("retentionPolicyType")].isNull() && m_retention_policy_type_isValid;
}

QString OAILongTermRetentionPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILongTermRetentionPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_daily_schedule.isSet()) {
        obj.insert(QString("dailySchedule"), ::OpenAPI::toJsonValue(m_daily_schedule));
    }
    if (m_monthly_schedule.isSet()) {
        obj.insert(QString("monthlySchedule"), ::OpenAPI::toJsonValue(m_monthly_schedule));
    }
    if (m_weekly_schedule.isSet()) {
        obj.insert(QString("weeklySchedule"), ::OpenAPI::toJsonValue(m_weekly_schedule));
    }
    if (m_yearly_schedule.isSet()) {
        obj.insert(QString("yearlySchedule"), ::OpenAPI::toJsonValue(m_yearly_schedule));
    }
    if (m_retention_policy_type_isSet) {
        obj.insert(QString("retentionPolicyType"), ::OpenAPI::toJsonValue(m_retention_policy_type));
    }
    return obj;
}

OAIDailyRetentionSchedule OAILongTermRetentionPolicy::getDailySchedule() const {
    return m_daily_schedule;
}
void OAILongTermRetentionPolicy::setDailySchedule(const OAIDailyRetentionSchedule &daily_schedule) {
    m_daily_schedule = daily_schedule;
    m_daily_schedule_isSet = true;
}

bool OAILongTermRetentionPolicy::is_daily_schedule_Set() const{
    return m_daily_schedule_isSet;
}

bool OAILongTermRetentionPolicy::is_daily_schedule_Valid() const{
    return m_daily_schedule_isValid;
}

OAIMonthlyRetentionSchedule OAILongTermRetentionPolicy::getMonthlySchedule() const {
    return m_monthly_schedule;
}
void OAILongTermRetentionPolicy::setMonthlySchedule(const OAIMonthlyRetentionSchedule &monthly_schedule) {
    m_monthly_schedule = monthly_schedule;
    m_monthly_schedule_isSet = true;
}

bool OAILongTermRetentionPolicy::is_monthly_schedule_Set() const{
    return m_monthly_schedule_isSet;
}

bool OAILongTermRetentionPolicy::is_monthly_schedule_Valid() const{
    return m_monthly_schedule_isValid;
}

OAIWeeklyRetentionSchedule OAILongTermRetentionPolicy::getWeeklySchedule() const {
    return m_weekly_schedule;
}
void OAILongTermRetentionPolicy::setWeeklySchedule(const OAIWeeklyRetentionSchedule &weekly_schedule) {
    m_weekly_schedule = weekly_schedule;
    m_weekly_schedule_isSet = true;
}

bool OAILongTermRetentionPolicy::is_weekly_schedule_Set() const{
    return m_weekly_schedule_isSet;
}

bool OAILongTermRetentionPolicy::is_weekly_schedule_Valid() const{
    return m_weekly_schedule_isValid;
}

OAIYearlyRetentionSchedule OAILongTermRetentionPolicy::getYearlySchedule() const {
    return m_yearly_schedule;
}
void OAILongTermRetentionPolicy::setYearlySchedule(const OAIYearlyRetentionSchedule &yearly_schedule) {
    m_yearly_schedule = yearly_schedule;
    m_yearly_schedule_isSet = true;
}

bool OAILongTermRetentionPolicy::is_yearly_schedule_Set() const{
    return m_yearly_schedule_isSet;
}

bool OAILongTermRetentionPolicy::is_yearly_schedule_Valid() const{
    return m_yearly_schedule_isValid;
}

QString OAILongTermRetentionPolicy::getRetentionPolicyType() const {
    return m_retention_policy_type;
}
void OAILongTermRetentionPolicy::setRetentionPolicyType(const QString &retention_policy_type) {
    m_retention_policy_type = retention_policy_type;
    m_retention_policy_type_isSet = true;
}

bool OAILongTermRetentionPolicy::is_retention_policy_type_Set() const{
    return m_retention_policy_type_isSet;
}

bool OAILongTermRetentionPolicy::is_retention_policy_type_Valid() const{
    return m_retention_policy_type_isValid;
}

bool OAILongTermRetentionPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_daily_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_monthly_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_weekly_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_yearly_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_retention_policy_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILongTermRetentionPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_retention_policy_type_isValid && true;
}

} // namespace OpenAPI
