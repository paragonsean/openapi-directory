# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operation_result_info_base import OperationResultInfoBase
from openapi_server import util


class ExportJobsOperationResultInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob_sas_key: str=None, blob_url: str=None, excel_file_blob_sas_key: str=None, excel_file_blob_url: str=None, object_type: str=None):
        """ExportJobsOperationResultInfo - a model defined in OpenAPI

        :param blob_sas_key: The blob_sas_key of this ExportJobsOperationResultInfo.
        :param blob_url: The blob_url of this ExportJobsOperationResultInfo.
        :param excel_file_blob_sas_key: The excel_file_blob_sas_key of this ExportJobsOperationResultInfo.
        :param excel_file_blob_url: The excel_file_blob_url of this ExportJobsOperationResultInfo.
        :param object_type: The object_type of this ExportJobsOperationResultInfo.
        """
        self.openapi_types = {
            'blob_sas_key': str,
            'blob_url': str,
            'excel_file_blob_sas_key': str,
            'excel_file_blob_url': str,
            'object_type': str
        }

        self.attribute_map = {
            'blob_sas_key': 'blobSasKey',
            'blob_url': 'blobUrl',
            'excel_file_blob_sas_key': 'excelFileBlobSasKey',
            'excel_file_blob_url': 'excelFileBlobUrl',
            'object_type': 'objectType'
        }

        self._blob_sas_key = blob_sas_key
        self._blob_url = blob_url
        self._excel_file_blob_sas_key = excel_file_blob_sas_key
        self._excel_file_blob_url = excel_file_blob_url
        self._object_type = object_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportJobsOperationResultInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportJobsOperationResultInfo of this ExportJobsOperationResultInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_sas_key(self):
        """Gets the blob_sas_key of this ExportJobsOperationResultInfo.

        SAS key to access the blob. It expires in 15 mins.

        :return: The blob_sas_key of this ExportJobsOperationResultInfo.
        :rtype: str
        """
        return self._blob_sas_key

    @blob_sas_key.setter
    def blob_sas_key(self, blob_sas_key):
        """Sets the blob_sas_key of this ExportJobsOperationResultInfo.

        SAS key to access the blob. It expires in 15 mins.

        :param blob_sas_key: The blob_sas_key of this ExportJobsOperationResultInfo.
        :type blob_sas_key: str
        """

        self._blob_sas_key = blob_sas_key

    @property
    def blob_url(self):
        """Gets the blob_url of this ExportJobsOperationResultInfo.

        URL of the blob into which the serialized string of list of jobs is exported.

        :return: The blob_url of this ExportJobsOperationResultInfo.
        :rtype: str
        """
        return self._blob_url

    @blob_url.setter
    def blob_url(self, blob_url):
        """Sets the blob_url of this ExportJobsOperationResultInfo.

        URL of the blob into which the serialized string of list of jobs is exported.

        :param blob_url: The blob_url of this ExportJobsOperationResultInfo.
        :type blob_url: str
        """

        self._blob_url = blob_url

    @property
    def excel_file_blob_sas_key(self):
        """Gets the excel_file_blob_sas_key of this ExportJobsOperationResultInfo.

        SAS key to access the blob. It expires in 15 mins.

        :return: The excel_file_blob_sas_key of this ExportJobsOperationResultInfo.
        :rtype: str
        """
        return self._excel_file_blob_sas_key

    @excel_file_blob_sas_key.setter
    def excel_file_blob_sas_key(self, excel_file_blob_sas_key):
        """Sets the excel_file_blob_sas_key of this ExportJobsOperationResultInfo.

        SAS key to access the blob. It expires in 15 mins.

        :param excel_file_blob_sas_key: The excel_file_blob_sas_key of this ExportJobsOperationResultInfo.
        :type excel_file_blob_sas_key: str
        """

        self._excel_file_blob_sas_key = excel_file_blob_sas_key

    @property
    def excel_file_blob_url(self):
        """Gets the excel_file_blob_url of this ExportJobsOperationResultInfo.

        URL of the blob into which the ExcelFile is uploaded.

        :return: The excel_file_blob_url of this ExportJobsOperationResultInfo.
        :rtype: str
        """
        return self._excel_file_blob_url

    @excel_file_blob_url.setter
    def excel_file_blob_url(self, excel_file_blob_url):
        """Sets the excel_file_blob_url of this ExportJobsOperationResultInfo.

        URL of the blob into which the ExcelFile is uploaded.

        :param excel_file_blob_url: The excel_file_blob_url of this ExportJobsOperationResultInfo.
        :type excel_file_blob_url: str
        """

        self._excel_file_blob_url = excel_file_blob_url

    @property
    def object_type(self):
        """Gets the object_type of this ExportJobsOperationResultInfo.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :return: The object_type of this ExportJobsOperationResultInfo.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this ExportJobsOperationResultInfo.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :param object_type: The object_type of this ExportJobsOperationResultInfo.
        :type object_type: str
        """
        if object_type is None:
            raise ValueError("Invalid value for `object_type`, must not be `None`")

        self._object_type = object_type
