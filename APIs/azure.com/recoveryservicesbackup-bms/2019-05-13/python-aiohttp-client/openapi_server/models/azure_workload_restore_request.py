# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.restore_request import RestoreRequest
from openapi_server.models.target_restore_info import TargetRestoreInfo
from openapi_server import util


class AzureWorkloadRestoreRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, property_bag: Dict[str, str]=None, recovery_mode: str=None, recovery_type: str=None, source_resource_id: str=None, target_info: TargetRestoreInfo=None, object_type: str=None):
        """AzureWorkloadRestoreRequest - a model defined in OpenAPI

        :param property_bag: The property_bag of this AzureWorkloadRestoreRequest.
        :param recovery_mode: The recovery_mode of this AzureWorkloadRestoreRequest.
        :param recovery_type: The recovery_type of this AzureWorkloadRestoreRequest.
        :param source_resource_id: The source_resource_id of this AzureWorkloadRestoreRequest.
        :param target_info: The target_info of this AzureWorkloadRestoreRequest.
        :param object_type: The object_type of this AzureWorkloadRestoreRequest.
        """
        self.openapi_types = {
            'property_bag': Dict[str, str],
            'recovery_mode': str,
            'recovery_type': str,
            'source_resource_id': str,
            'target_info': TargetRestoreInfo,
            'object_type': str
        }

        self.attribute_map = {
            'property_bag': 'propertyBag',
            'recovery_mode': 'recoveryMode',
            'recovery_type': 'recoveryType',
            'source_resource_id': 'sourceResourceId',
            'target_info': 'targetInfo',
            'object_type': 'objectType'
        }

        self._property_bag = property_bag
        self._recovery_mode = recovery_mode
        self._recovery_type = recovery_type
        self._source_resource_id = source_resource_id
        self._target_info = target_info
        self._object_type = object_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureWorkloadRestoreRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureWorkloadRestoreRequest of this AzureWorkloadRestoreRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def property_bag(self):
        """Gets the property_bag of this AzureWorkloadRestoreRequest.

        Workload specific property bag.

        :return: The property_bag of this AzureWorkloadRestoreRequest.
        :rtype: Dict[str, str]
        """
        return self._property_bag

    @property_bag.setter
    def property_bag(self, property_bag):
        """Sets the property_bag of this AzureWorkloadRestoreRequest.

        Workload specific property bag.

        :param property_bag: The property_bag of this AzureWorkloadRestoreRequest.
        :type property_bag: Dict[str, str]
        """

        self._property_bag = property_bag

    @property
    def recovery_mode(self):
        """Gets the recovery_mode of this AzureWorkloadRestoreRequest.

        Defines whether the current recovery mode is file restore or database restore

        :return: The recovery_mode of this AzureWorkloadRestoreRequest.
        :rtype: str
        """
        return self._recovery_mode

    @recovery_mode.setter
    def recovery_mode(self, recovery_mode):
        """Sets the recovery_mode of this AzureWorkloadRestoreRequest.

        Defines whether the current recovery mode is file restore or database restore

        :param recovery_mode: The recovery_mode of this AzureWorkloadRestoreRequest.
        :type recovery_mode: str
        """
        allowed_values = ["Invalid", "FileRecovery", "WorkloadRecovery"]  # noqa: E501
        if recovery_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `recovery_mode` ({0}), must be one of {1}"
                .format(recovery_mode, allowed_values)
            )

        self._recovery_mode = recovery_mode

    @property
    def recovery_type(self):
        """Gets the recovery_type of this AzureWorkloadRestoreRequest.

        Type of this recovery.

        :return: The recovery_type of this AzureWorkloadRestoreRequest.
        :rtype: str
        """
        return self._recovery_type

    @recovery_type.setter
    def recovery_type(self, recovery_type):
        """Sets the recovery_type of this AzureWorkloadRestoreRequest.

        Type of this recovery.

        :param recovery_type: The recovery_type of this AzureWorkloadRestoreRequest.
        :type recovery_type: str
        """
        allowed_values = ["Invalid", "OriginalLocation", "AlternateLocation", "RestoreDisks", "Offline"]  # noqa: E501
        if recovery_type not in allowed_values:
            raise ValueError(
                "Invalid value for `recovery_type` ({0}), must be one of {1}"
                .format(recovery_type, allowed_values)
            )

        self._recovery_type = recovery_type

    @property
    def source_resource_id(self):
        """Gets the source_resource_id of this AzureWorkloadRestoreRequest.

        Fully qualified ARM ID of the VM on which workload that was running is being recovered.

        :return: The source_resource_id of this AzureWorkloadRestoreRequest.
        :rtype: str
        """
        return self._source_resource_id

    @source_resource_id.setter
    def source_resource_id(self, source_resource_id):
        """Sets the source_resource_id of this AzureWorkloadRestoreRequest.

        Fully qualified ARM ID of the VM on which workload that was running is being recovered.

        :param source_resource_id: The source_resource_id of this AzureWorkloadRestoreRequest.
        :type source_resource_id: str
        """

        self._source_resource_id = source_resource_id

    @property
    def target_info(self):
        """Gets the target_info of this AzureWorkloadRestoreRequest.


        :return: The target_info of this AzureWorkloadRestoreRequest.
        :rtype: TargetRestoreInfo
        """
        return self._target_info

    @target_info.setter
    def target_info(self, target_info):
        """Sets the target_info of this AzureWorkloadRestoreRequest.


        :param target_info: The target_info of this AzureWorkloadRestoreRequest.
        :type target_info: TargetRestoreInfo
        """

        self._target_info = target_info

    @property
    def object_type(self):
        """Gets the object_type of this AzureWorkloadRestoreRequest.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :return: The object_type of this AzureWorkloadRestoreRequest.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this AzureWorkloadRestoreRequest.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :param object_type: The object_type of this AzureWorkloadRestoreRequest.
        :type object_type: str
        """
        if object_type is None:
            raise ValueError("Invalid value for `object_type`, must not be `None`")

        self._object_type = object_type
