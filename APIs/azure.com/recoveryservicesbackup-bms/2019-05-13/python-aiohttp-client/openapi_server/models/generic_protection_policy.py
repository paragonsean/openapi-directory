# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.protection_policy import ProtectionPolicy
from openapi_server.models.sub_protection_policy import SubProtectionPolicy
from openapi_server import util


class GenericProtectionPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fabric_name: str=None, sub_protection_policy: List[SubProtectionPolicy]=None, time_zone: str=None, backup_management_type: str=None, protected_items_count: int=None):
        """GenericProtectionPolicy - a model defined in OpenAPI

        :param fabric_name: The fabric_name of this GenericProtectionPolicy.
        :param sub_protection_policy: The sub_protection_policy of this GenericProtectionPolicy.
        :param time_zone: The time_zone of this GenericProtectionPolicy.
        :param backup_management_type: The backup_management_type of this GenericProtectionPolicy.
        :param protected_items_count: The protected_items_count of this GenericProtectionPolicy.
        """
        self.openapi_types = {
            'fabric_name': str,
            'sub_protection_policy': List[SubProtectionPolicy],
            'time_zone': str,
            'backup_management_type': str,
            'protected_items_count': int
        }

        self.attribute_map = {
            'fabric_name': 'fabricName',
            'sub_protection_policy': 'subProtectionPolicy',
            'time_zone': 'timeZone',
            'backup_management_type': 'backupManagementType',
            'protected_items_count': 'protectedItemsCount'
        }

        self._fabric_name = fabric_name
        self._sub_protection_policy = sub_protection_policy
        self._time_zone = time_zone
        self._backup_management_type = backup_management_type
        self._protected_items_count = protected_items_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenericProtectionPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenericProtectionPolicy of this GenericProtectionPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fabric_name(self):
        """Gets the fabric_name of this GenericProtectionPolicy.

        Name of this policy's fabric.

        :return: The fabric_name of this GenericProtectionPolicy.
        :rtype: str
        """
        return self._fabric_name

    @fabric_name.setter
    def fabric_name(self, fabric_name):
        """Sets the fabric_name of this GenericProtectionPolicy.

        Name of this policy's fabric.

        :param fabric_name: The fabric_name of this GenericProtectionPolicy.
        :type fabric_name: str
        """

        self._fabric_name = fabric_name

    @property
    def sub_protection_policy(self):
        """Gets the sub_protection_policy of this GenericProtectionPolicy.

        List of sub-protection policies which includes schedule and retention

        :return: The sub_protection_policy of this GenericProtectionPolicy.
        :rtype: List[SubProtectionPolicy]
        """
        return self._sub_protection_policy

    @sub_protection_policy.setter
    def sub_protection_policy(self, sub_protection_policy):
        """Sets the sub_protection_policy of this GenericProtectionPolicy.

        List of sub-protection policies which includes schedule and retention

        :param sub_protection_policy: The sub_protection_policy of this GenericProtectionPolicy.
        :type sub_protection_policy: List[SubProtectionPolicy]
        """

        self._sub_protection_policy = sub_protection_policy

    @property
    def time_zone(self):
        """Gets the time_zone of this GenericProtectionPolicy.

        TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\".

        :return: The time_zone of this GenericProtectionPolicy.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this GenericProtectionPolicy.

        TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\".

        :param time_zone: The time_zone of this GenericProtectionPolicy.
        :type time_zone: str
        """

        self._time_zone = time_zone

    @property
    def backup_management_type(self):
        """Gets the backup_management_type of this GenericProtectionPolicy.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :return: The backup_management_type of this GenericProtectionPolicy.
        :rtype: str
        """
        return self._backup_management_type

    @backup_management_type.setter
    def backup_management_type(self, backup_management_type):
        """Sets the backup_management_type of this GenericProtectionPolicy.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :param backup_management_type: The backup_management_type of this GenericProtectionPolicy.
        :type backup_management_type: str
        """
        if backup_management_type is None:
            raise ValueError("Invalid value for `backup_management_type`, must not be `None`")

        self._backup_management_type = backup_management_type

    @property
    def protected_items_count(self):
        """Gets the protected_items_count of this GenericProtectionPolicy.

        Number of items associated with this policy.

        :return: The protected_items_count of this GenericProtectionPolicy.
        :rtype: int
        """
        return self._protected_items_count

    @protected_items_count.setter
    def protected_items_count(self, protected_items_count):
        """Sets the protected_items_count of this GenericProtectionPolicy.

        Number of items associated with this policy.

        :param protected_items_count: The protected_items_count of this GenericProtectionPolicy.
        :type protected_items_count: int
        """

        self._protected_items_count = protected_items_count
