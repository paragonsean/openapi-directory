# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schedule_policy import SchedulePolicy
from openapi_server import util


class SimpleSchedulePolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedule_run_days: List[str]=None, schedule_run_frequency: str=None, schedule_run_times: List[datetime]=None, schedule_weekly_frequency: int=None, schedule_policy_type: str=None):
        """SimpleSchedulePolicy - a model defined in OpenAPI

        :param schedule_run_days: The schedule_run_days of this SimpleSchedulePolicy.
        :param schedule_run_frequency: The schedule_run_frequency of this SimpleSchedulePolicy.
        :param schedule_run_times: The schedule_run_times of this SimpleSchedulePolicy.
        :param schedule_weekly_frequency: The schedule_weekly_frequency of this SimpleSchedulePolicy.
        :param schedule_policy_type: The schedule_policy_type of this SimpleSchedulePolicy.
        """
        self.openapi_types = {
            'schedule_run_days': List[str],
            'schedule_run_frequency': str,
            'schedule_run_times': List[datetime],
            'schedule_weekly_frequency': int,
            'schedule_policy_type': str
        }

        self.attribute_map = {
            'schedule_run_days': 'scheduleRunDays',
            'schedule_run_frequency': 'scheduleRunFrequency',
            'schedule_run_times': 'scheduleRunTimes',
            'schedule_weekly_frequency': 'scheduleWeeklyFrequency',
            'schedule_policy_type': 'schedulePolicyType'
        }

        self._schedule_run_days = schedule_run_days
        self._schedule_run_frequency = schedule_run_frequency
        self._schedule_run_times = schedule_run_times
        self._schedule_weekly_frequency = schedule_weekly_frequency
        self._schedule_policy_type = schedule_policy_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SimpleSchedulePolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SimpleSchedulePolicy of this SimpleSchedulePolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedule_run_days(self):
        """Gets the schedule_run_days of this SimpleSchedulePolicy.

        List of days of week this schedule has to be run.

        :return: The schedule_run_days of this SimpleSchedulePolicy.
        :rtype: List[str]
        """
        return self._schedule_run_days

    @schedule_run_days.setter
    def schedule_run_days(self, schedule_run_days):
        """Sets the schedule_run_days of this SimpleSchedulePolicy.

        List of days of week this schedule has to be run.

        :param schedule_run_days: The schedule_run_days of this SimpleSchedulePolicy.
        :type schedule_run_days: List[str]
        """
        allowed_values = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]  # noqa: E501
        if not set(schedule_run_days).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `schedule_run_days` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(schedule_run_days) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._schedule_run_days = schedule_run_days

    @property
    def schedule_run_frequency(self):
        """Gets the schedule_run_frequency of this SimpleSchedulePolicy.

        Frequency of the schedule operation of this policy.

        :return: The schedule_run_frequency of this SimpleSchedulePolicy.
        :rtype: str
        """
        return self._schedule_run_frequency

    @schedule_run_frequency.setter
    def schedule_run_frequency(self, schedule_run_frequency):
        """Sets the schedule_run_frequency of this SimpleSchedulePolicy.

        Frequency of the schedule operation of this policy.

        :param schedule_run_frequency: The schedule_run_frequency of this SimpleSchedulePolicy.
        :type schedule_run_frequency: str
        """
        allowed_values = ["Invalid", "Daily", "Weekly"]  # noqa: E501
        if schedule_run_frequency not in allowed_values:
            raise ValueError(
                "Invalid value for `schedule_run_frequency` ({0}), must be one of {1}"
                .format(schedule_run_frequency, allowed_values)
            )

        self._schedule_run_frequency = schedule_run_frequency

    @property
    def schedule_run_times(self):
        """Gets the schedule_run_times of this SimpleSchedulePolicy.

        List of times of day this schedule has to be run.

        :return: The schedule_run_times of this SimpleSchedulePolicy.
        :rtype: List[datetime]
        """
        return self._schedule_run_times

    @schedule_run_times.setter
    def schedule_run_times(self, schedule_run_times):
        """Sets the schedule_run_times of this SimpleSchedulePolicy.

        List of times of day this schedule has to be run.

        :param schedule_run_times: The schedule_run_times of this SimpleSchedulePolicy.
        :type schedule_run_times: List[datetime]
        """

        self._schedule_run_times = schedule_run_times

    @property
    def schedule_weekly_frequency(self):
        """Gets the schedule_weekly_frequency of this SimpleSchedulePolicy.

        At every number weeks this schedule has to be run.

        :return: The schedule_weekly_frequency of this SimpleSchedulePolicy.
        :rtype: int
        """
        return self._schedule_weekly_frequency

    @schedule_weekly_frequency.setter
    def schedule_weekly_frequency(self, schedule_weekly_frequency):
        """Sets the schedule_weekly_frequency of this SimpleSchedulePolicy.

        At every number weeks this schedule has to be run.

        :param schedule_weekly_frequency: The schedule_weekly_frequency of this SimpleSchedulePolicy.
        :type schedule_weekly_frequency: int
        """

        self._schedule_weekly_frequency = schedule_weekly_frequency

    @property
    def schedule_policy_type(self):
        """Gets the schedule_policy_type of this SimpleSchedulePolicy.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :return: The schedule_policy_type of this SimpleSchedulePolicy.
        :rtype: str
        """
        return self._schedule_policy_type

    @schedule_policy_type.setter
    def schedule_policy_type(self, schedule_policy_type):
        """Sets the schedule_policy_type of this SimpleSchedulePolicy.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :param schedule_policy_type: The schedule_policy_type of this SimpleSchedulePolicy.
        :type schedule_policy_type: str
        """
        if schedule_policy_type is None:
            raise ValueError("Invalid value for `schedule_policy_type`, must not be `None`")

        self._schedule_policy_type = schedule_policy_type
