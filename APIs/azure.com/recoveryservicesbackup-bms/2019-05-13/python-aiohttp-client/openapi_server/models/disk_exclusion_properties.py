# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DiskExclusionProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk_lun_list: List[int]=None, is_inclusion_list: bool=None):
        """DiskExclusionProperties - a model defined in OpenAPI

        :param disk_lun_list: The disk_lun_list of this DiskExclusionProperties.
        :param is_inclusion_list: The is_inclusion_list of this DiskExclusionProperties.
        """
        self.openapi_types = {
            'disk_lun_list': List[int],
            'is_inclusion_list': bool
        }

        self.attribute_map = {
            'disk_lun_list': 'diskLunList',
            'is_inclusion_list': 'isInclusionList'
        }

        self._disk_lun_list = disk_lun_list
        self._is_inclusion_list = is_inclusion_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiskExclusionProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiskExclusionProperties of this DiskExclusionProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk_lun_list(self):
        """Gets the disk_lun_list of this DiskExclusionProperties.

        List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.

        :return: The disk_lun_list of this DiskExclusionProperties.
        :rtype: List[int]
        """
        return self._disk_lun_list

    @disk_lun_list.setter
    def disk_lun_list(self, disk_lun_list):
        """Sets the disk_lun_list of this DiskExclusionProperties.

        List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.

        :param disk_lun_list: The disk_lun_list of this DiskExclusionProperties.
        :type disk_lun_list: List[int]
        """

        self._disk_lun_list = disk_lun_list

    @property
    def is_inclusion_list(self):
        """Gets the is_inclusion_list of this DiskExclusionProperties.

        Flag to indicate whether DiskLunList is to be included/ excluded from backup.

        :return: The is_inclusion_list of this DiskExclusionProperties.
        :rtype: bool
        """
        return self._is_inclusion_list

    @is_inclusion_list.setter
    def is_inclusion_list(self, is_inclusion_list):
        """Sets the is_inclusion_list of this DiskExclusionProperties.

        Flag to indicate whether DiskLunList is to be included/ excluded from backup.

        :param is_inclusion_list: The is_inclusion_list of this DiskExclusionProperties.
        :type is_inclusion_list: bool
        """

        self._is_inclusion_list = is_inclusion_list
