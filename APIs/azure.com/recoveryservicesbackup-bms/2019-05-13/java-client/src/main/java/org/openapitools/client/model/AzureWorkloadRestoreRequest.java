/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-05-13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.RestoreRequest;
import org.openapitools.client.model.TargetRestoreInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AzureWorkload-specific restore.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:08:52.489852-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AzureWorkloadRestoreRequest extends RestoreRequest {
  public static final String SERIALIZED_NAME_PROPERTY_BAG = "propertyBag";
  @SerializedName(SERIALIZED_NAME_PROPERTY_BAG)
  private Map<String, String> propertyBag = new HashMap<>();

  /**
   * Defines whether the current recovery mode is file restore or database restore
   */
  @JsonAdapter(RecoveryModeEnum.Adapter.class)
  public enum RecoveryModeEnum {
    INVALID("Invalid"),
    
    FILE_RECOVERY("FileRecovery"),
    
    WORKLOAD_RECOVERY("WorkloadRecovery");

    private String value;

    RecoveryModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RecoveryModeEnum fromValue(String value) {
      for (RecoveryModeEnum b : RecoveryModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RecoveryModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecoveryModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecoveryModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RecoveryModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RecoveryModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RECOVERY_MODE = "recoveryMode";
  @SerializedName(SERIALIZED_NAME_RECOVERY_MODE)
  private RecoveryModeEnum recoveryMode;

  /**
   * Type of this recovery.
   */
  @JsonAdapter(RecoveryTypeEnum.Adapter.class)
  public enum RecoveryTypeEnum {
    INVALID("Invalid"),
    
    ORIGINAL_LOCATION("OriginalLocation"),
    
    ALTERNATE_LOCATION("AlternateLocation"),
    
    RESTORE_DISKS("RestoreDisks"),
    
    OFFLINE("Offline");

    private String value;

    RecoveryTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RecoveryTypeEnum fromValue(String value) {
      for (RecoveryTypeEnum b : RecoveryTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RecoveryTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecoveryTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecoveryTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RecoveryTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RecoveryTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RECOVERY_TYPE = "recoveryType";
  @SerializedName(SERIALIZED_NAME_RECOVERY_TYPE)
  private RecoveryTypeEnum recoveryType;

  public static final String SERIALIZED_NAME_SOURCE_RESOURCE_ID = "sourceResourceId";
  @SerializedName(SERIALIZED_NAME_SOURCE_RESOURCE_ID)
  private String sourceResourceId;

  public static final String SERIALIZED_NAME_TARGET_INFO = "targetInfo";
  @SerializedName(SERIALIZED_NAME_TARGET_INFO)
  private TargetRestoreInfo targetInfo;

  public AzureWorkloadRestoreRequest() {
    this.objectType = this.getClass().getSimpleName();
  }

  public AzureWorkloadRestoreRequest propertyBag(Map<String, String> propertyBag) {
    this.propertyBag = propertyBag;
    return this;
  }

  public AzureWorkloadRestoreRequest putPropertyBagItem(String key, String propertyBagItem) {
    if (this.propertyBag == null) {
      this.propertyBag = new HashMap<>();
    }
    this.propertyBag.put(key, propertyBagItem);
    return this;
  }

  /**
   * Workload specific property bag.
   * @return propertyBag
   */
  @javax.annotation.Nullable
  public Map<String, String> getPropertyBag() {
    return propertyBag;
  }

  public void setPropertyBag(Map<String, String> propertyBag) {
    this.propertyBag = propertyBag;
  }


  public AzureWorkloadRestoreRequest recoveryMode(RecoveryModeEnum recoveryMode) {
    this.recoveryMode = recoveryMode;
    return this;
  }

  /**
   * Defines whether the current recovery mode is file restore or database restore
   * @return recoveryMode
   */
  @javax.annotation.Nullable
  public RecoveryModeEnum getRecoveryMode() {
    return recoveryMode;
  }

  public void setRecoveryMode(RecoveryModeEnum recoveryMode) {
    this.recoveryMode = recoveryMode;
  }


  public AzureWorkloadRestoreRequest recoveryType(RecoveryTypeEnum recoveryType) {
    this.recoveryType = recoveryType;
    return this;
  }

  /**
   * Type of this recovery.
   * @return recoveryType
   */
  @javax.annotation.Nullable
  public RecoveryTypeEnum getRecoveryType() {
    return recoveryType;
  }

  public void setRecoveryType(RecoveryTypeEnum recoveryType) {
    this.recoveryType = recoveryType;
  }


  public AzureWorkloadRestoreRequest sourceResourceId(String sourceResourceId) {
    this.sourceResourceId = sourceResourceId;
    return this;
  }

  /**
   * Fully qualified ARM ID of the VM on which workload that was running is being recovered.
   * @return sourceResourceId
   */
  @javax.annotation.Nullable
  public String getSourceResourceId() {
    return sourceResourceId;
  }

  public void setSourceResourceId(String sourceResourceId) {
    this.sourceResourceId = sourceResourceId;
  }


  public AzureWorkloadRestoreRequest targetInfo(TargetRestoreInfo targetInfo) {
    this.targetInfo = targetInfo;
    return this;
  }

  /**
   * Get targetInfo
   * @return targetInfo
   */
  @javax.annotation.Nullable
  public TargetRestoreInfo getTargetInfo() {
    return targetInfo;
  }

  public void setTargetInfo(TargetRestoreInfo targetInfo) {
    this.targetInfo = targetInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureWorkloadRestoreRequest azureWorkloadRestoreRequest = (AzureWorkloadRestoreRequest) o;
    return Objects.equals(this.propertyBag, azureWorkloadRestoreRequest.propertyBag) &&
        Objects.equals(this.recoveryMode, azureWorkloadRestoreRequest.recoveryMode) &&
        Objects.equals(this.recoveryType, azureWorkloadRestoreRequest.recoveryType) &&
        Objects.equals(this.sourceResourceId, azureWorkloadRestoreRequest.sourceResourceId) &&
        Objects.equals(this.targetInfo, azureWorkloadRestoreRequest.targetInfo) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(propertyBag, recoveryMode, recoveryType, sourceResourceId, targetInfo, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureWorkloadRestoreRequest {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    propertyBag: ").append(toIndentedString(propertyBag)).append("\n");
    sb.append("    recoveryMode: ").append(toIndentedString(recoveryMode)).append("\n");
    sb.append("    recoveryType: ").append(toIndentedString(recoveryType)).append("\n");
    sb.append("    sourceResourceId: ").append(toIndentedString(sourceResourceId)).append("\n");
    sb.append("    targetInfo: ").append(toIndentedString(targetInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("objectType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("objectType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AzureWorkloadRestoreRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AzureWorkloadRestoreRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AzureWorkloadRestoreRequest is not found in the empty JSON string", AzureWorkloadRestoreRequest.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("objectType").getAsString();
      switch (discriminatorValue) {
        case "AzureWorkloadPointInTimeRestoreRequest":
          AzureWorkloadPointInTimeRestoreRequest.validateJsonElement(jsonElement);
          break;
        case "AzureWorkloadSAPHanaPointInTimeRestoreRequest":
          AzureWorkloadSAPHanaPointInTimeRestoreRequest.validateJsonElement(jsonElement);
          break;
        case "AzureWorkloadSAPHanaRestoreRequest":
          AzureWorkloadSAPHanaRestoreRequest.validateJsonElement(jsonElement);
          break;
        case "AzureWorkloadSQLPointInTimeRestoreRequest":
          AzureWorkloadSQLPointInTimeRestoreRequest.validateJsonElement(jsonElement);
          break;
        case "AzureWorkloadSQLRestoreRequest":
          AzureWorkloadSQLRestoreRequest.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `objectType` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of AzureWorkloadRestoreRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AzureWorkloadRestoreRequest
   * @throws IOException if the JSON string is invalid with respect to AzureWorkloadRestoreRequest
   */
  public static AzureWorkloadRestoreRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AzureWorkloadRestoreRequest.class);
  }

  /**
   * Convert an instance of AzureWorkloadRestoreRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

