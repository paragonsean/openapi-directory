/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-05-13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Additional information of DPM Protected item.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:08:52.489852-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DPMProtectedItemExtendedInfo {
  public static final String SERIALIZED_NAME_DISK_STORAGE_USED_IN_BYTES = "diskStorageUsedInBytes";
  @SerializedName(SERIALIZED_NAME_DISK_STORAGE_USED_IN_BYTES)
  private String diskStorageUsedInBytes;

  public static final String SERIALIZED_NAME_IS_COLLOCATED = "isCollocated";
  @SerializedName(SERIALIZED_NAME_IS_COLLOCATED)
  private Boolean isCollocated;

  public static final String SERIALIZED_NAME_IS_PRESENT_ON_CLOUD = "isPresentOnCloud";
  @SerializedName(SERIALIZED_NAME_IS_PRESENT_ON_CLOUD)
  private Boolean isPresentOnCloud;

  public static final String SERIALIZED_NAME_LAST_BACKUP_STATUS = "lastBackupStatus";
  @SerializedName(SERIALIZED_NAME_LAST_BACKUP_STATUS)
  private String lastBackupStatus;

  public static final String SERIALIZED_NAME_LAST_REFRESHED_AT = "lastRefreshedAt";
  @SerializedName(SERIALIZED_NAME_LAST_REFRESHED_AT)
  private OffsetDateTime lastRefreshedAt;

  public static final String SERIALIZED_NAME_OLDEST_RECOVERY_POINT = "oldestRecoveryPoint";
  @SerializedName(SERIALIZED_NAME_OLDEST_RECOVERY_POINT)
  private OffsetDateTime oldestRecoveryPoint;

  public static final String SERIALIZED_NAME_ON_PREMISE_LATEST_RECOVERY_POINT = "onPremiseLatestRecoveryPoint";
  @SerializedName(SERIALIZED_NAME_ON_PREMISE_LATEST_RECOVERY_POINT)
  private OffsetDateTime onPremiseLatestRecoveryPoint;

  public static final String SERIALIZED_NAME_ON_PREMISE_OLDEST_RECOVERY_POINT = "onPremiseOldestRecoveryPoint";
  @SerializedName(SERIALIZED_NAME_ON_PREMISE_OLDEST_RECOVERY_POINT)
  private OffsetDateTime onPremiseOldestRecoveryPoint;

  public static final String SERIALIZED_NAME_ON_PREMISE_RECOVERY_POINT_COUNT = "onPremiseRecoveryPointCount";
  @SerializedName(SERIALIZED_NAME_ON_PREMISE_RECOVERY_POINT_COUNT)
  private Integer onPremiseRecoveryPointCount;

  public static final String SERIALIZED_NAME_PROTECTABLE_OBJECT_LOAD_PATH = "protectableObjectLoadPath";
  @SerializedName(SERIALIZED_NAME_PROTECTABLE_OBJECT_LOAD_PATH)
  private Map<String, String> protectableObjectLoadPath = new HashMap<>();

  public static final String SERIALIZED_NAME_PROTECTED = "protected";
  @SerializedName(SERIALIZED_NAME_PROTECTED)
  private Boolean _protected;

  public static final String SERIALIZED_NAME_PROTECTION_GROUP_NAME = "protectionGroupName";
  @SerializedName(SERIALIZED_NAME_PROTECTION_GROUP_NAME)
  private String protectionGroupName;

  public static final String SERIALIZED_NAME_RECOVERY_POINT_COUNT = "recoveryPointCount";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_COUNT)
  private Integer recoveryPointCount;

  public static final String SERIALIZED_NAME_TOTAL_DISK_STORAGE_SIZE_IN_BYTES = "totalDiskStorageSizeInBytes";
  @SerializedName(SERIALIZED_NAME_TOTAL_DISK_STORAGE_SIZE_IN_BYTES)
  private String totalDiskStorageSizeInBytes;

  public DPMProtectedItemExtendedInfo() {
  }

  public DPMProtectedItemExtendedInfo diskStorageUsedInBytes(String diskStorageUsedInBytes) {
    this.diskStorageUsedInBytes = diskStorageUsedInBytes;
    return this;
  }

  /**
   * Used Disk storage in bytes.
   * @return diskStorageUsedInBytes
   */
  @javax.annotation.Nullable
  public String getDiskStorageUsedInBytes() {
    return diskStorageUsedInBytes;
  }

  public void setDiskStorageUsedInBytes(String diskStorageUsedInBytes) {
    this.diskStorageUsedInBytes = diskStorageUsedInBytes;
  }


  public DPMProtectedItemExtendedInfo isCollocated(Boolean isCollocated) {
    this.isCollocated = isCollocated;
    return this;
  }

  /**
   * To check if backup item is collocated.
   * @return isCollocated
   */
  @javax.annotation.Nullable
  public Boolean getIsCollocated() {
    return isCollocated;
  }

  public void setIsCollocated(Boolean isCollocated) {
    this.isCollocated = isCollocated;
  }


  public DPMProtectedItemExtendedInfo isPresentOnCloud(Boolean isPresentOnCloud) {
    this.isPresentOnCloud = isPresentOnCloud;
    return this;
  }

  /**
   * To check if backup item is cloud protected.
   * @return isPresentOnCloud
   */
  @javax.annotation.Nullable
  public Boolean getIsPresentOnCloud() {
    return isPresentOnCloud;
  }

  public void setIsPresentOnCloud(Boolean isPresentOnCloud) {
    this.isPresentOnCloud = isPresentOnCloud;
  }


  public DPMProtectedItemExtendedInfo lastBackupStatus(String lastBackupStatus) {
    this.lastBackupStatus = lastBackupStatus;
    return this;
  }

  /**
   * Last backup status information on backup item.
   * @return lastBackupStatus
   */
  @javax.annotation.Nullable
  public String getLastBackupStatus() {
    return lastBackupStatus;
  }

  public void setLastBackupStatus(String lastBackupStatus) {
    this.lastBackupStatus = lastBackupStatus;
  }


  public DPMProtectedItemExtendedInfo lastRefreshedAt(OffsetDateTime lastRefreshedAt) {
    this.lastRefreshedAt = lastRefreshedAt;
    return this;
  }

  /**
   * Last refresh time on backup item.
   * @return lastRefreshedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastRefreshedAt() {
    return lastRefreshedAt;
  }

  public void setLastRefreshedAt(OffsetDateTime lastRefreshedAt) {
    this.lastRefreshedAt = lastRefreshedAt;
  }


  public DPMProtectedItemExtendedInfo oldestRecoveryPoint(OffsetDateTime oldestRecoveryPoint) {
    this.oldestRecoveryPoint = oldestRecoveryPoint;
    return this;
  }

  /**
   * Oldest cloud recovery point time.
   * @return oldestRecoveryPoint
   */
  @javax.annotation.Nullable
  public OffsetDateTime getOldestRecoveryPoint() {
    return oldestRecoveryPoint;
  }

  public void setOldestRecoveryPoint(OffsetDateTime oldestRecoveryPoint) {
    this.oldestRecoveryPoint = oldestRecoveryPoint;
  }


  public DPMProtectedItemExtendedInfo onPremiseLatestRecoveryPoint(OffsetDateTime onPremiseLatestRecoveryPoint) {
    this.onPremiseLatestRecoveryPoint = onPremiseLatestRecoveryPoint;
    return this;
  }

  /**
   * latest disk recovery point time.
   * @return onPremiseLatestRecoveryPoint
   */
  @javax.annotation.Nullable
  public OffsetDateTime getOnPremiseLatestRecoveryPoint() {
    return onPremiseLatestRecoveryPoint;
  }

  public void setOnPremiseLatestRecoveryPoint(OffsetDateTime onPremiseLatestRecoveryPoint) {
    this.onPremiseLatestRecoveryPoint = onPremiseLatestRecoveryPoint;
  }


  public DPMProtectedItemExtendedInfo onPremiseOldestRecoveryPoint(OffsetDateTime onPremiseOldestRecoveryPoint) {
    this.onPremiseOldestRecoveryPoint = onPremiseOldestRecoveryPoint;
    return this;
  }

  /**
   * Oldest disk recovery point time.
   * @return onPremiseOldestRecoveryPoint
   */
  @javax.annotation.Nullable
  public OffsetDateTime getOnPremiseOldestRecoveryPoint() {
    return onPremiseOldestRecoveryPoint;
  }

  public void setOnPremiseOldestRecoveryPoint(OffsetDateTime onPremiseOldestRecoveryPoint) {
    this.onPremiseOldestRecoveryPoint = onPremiseOldestRecoveryPoint;
  }


  public DPMProtectedItemExtendedInfo onPremiseRecoveryPointCount(Integer onPremiseRecoveryPointCount) {
    this.onPremiseRecoveryPointCount = onPremiseRecoveryPointCount;
    return this;
  }

  /**
   * disk recovery point count.
   * @return onPremiseRecoveryPointCount
   */
  @javax.annotation.Nullable
  public Integer getOnPremiseRecoveryPointCount() {
    return onPremiseRecoveryPointCount;
  }

  public void setOnPremiseRecoveryPointCount(Integer onPremiseRecoveryPointCount) {
    this.onPremiseRecoveryPointCount = onPremiseRecoveryPointCount;
  }


  public DPMProtectedItemExtendedInfo protectableObjectLoadPath(Map<String, String> protectableObjectLoadPath) {
    this.protectableObjectLoadPath = protectableObjectLoadPath;
    return this;
  }

  public DPMProtectedItemExtendedInfo putProtectableObjectLoadPathItem(String key, String protectableObjectLoadPathItem) {
    if (this.protectableObjectLoadPath == null) {
      this.protectableObjectLoadPath = new HashMap<>();
    }
    this.protectableObjectLoadPath.put(key, protectableObjectLoadPathItem);
    return this;
  }

  /**
   * Attribute to provide information on various DBs.
   * @return protectableObjectLoadPath
   */
  @javax.annotation.Nullable
  public Map<String, String> getProtectableObjectLoadPath() {
    return protectableObjectLoadPath;
  }

  public void setProtectableObjectLoadPath(Map<String, String> protectableObjectLoadPath) {
    this.protectableObjectLoadPath = protectableObjectLoadPath;
  }


  public DPMProtectedItemExtendedInfo _protected(Boolean _protected) {
    this._protected = _protected;
    return this;
  }

  /**
   * To check if backup item is disk protected.
   * @return _protected
   */
  @javax.annotation.Nullable
  public Boolean getProtected() {
    return _protected;
  }

  public void setProtected(Boolean _protected) {
    this._protected = _protected;
  }


  public DPMProtectedItemExtendedInfo protectionGroupName(String protectionGroupName) {
    this.protectionGroupName = protectionGroupName;
    return this;
  }

  /**
   * Protection group name of the backup item.
   * @return protectionGroupName
   */
  @javax.annotation.Nullable
  public String getProtectionGroupName() {
    return protectionGroupName;
  }

  public void setProtectionGroupName(String protectionGroupName) {
    this.protectionGroupName = protectionGroupName;
  }


  public DPMProtectedItemExtendedInfo recoveryPointCount(Integer recoveryPointCount) {
    this.recoveryPointCount = recoveryPointCount;
    return this;
  }

  /**
   * cloud recovery point count.
   * @return recoveryPointCount
   */
  @javax.annotation.Nullable
  public Integer getRecoveryPointCount() {
    return recoveryPointCount;
  }

  public void setRecoveryPointCount(Integer recoveryPointCount) {
    this.recoveryPointCount = recoveryPointCount;
  }


  public DPMProtectedItemExtendedInfo totalDiskStorageSizeInBytes(String totalDiskStorageSizeInBytes) {
    this.totalDiskStorageSizeInBytes = totalDiskStorageSizeInBytes;
    return this;
  }

  /**
   * total Disk storage in bytes.
   * @return totalDiskStorageSizeInBytes
   */
  @javax.annotation.Nullable
  public String getTotalDiskStorageSizeInBytes() {
    return totalDiskStorageSizeInBytes;
  }

  public void setTotalDiskStorageSizeInBytes(String totalDiskStorageSizeInBytes) {
    this.totalDiskStorageSizeInBytes = totalDiskStorageSizeInBytes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DPMProtectedItemExtendedInfo dpMProtectedItemExtendedInfo = (DPMProtectedItemExtendedInfo) o;
    return Objects.equals(this.diskStorageUsedInBytes, dpMProtectedItemExtendedInfo.diskStorageUsedInBytes) &&
        Objects.equals(this.isCollocated, dpMProtectedItemExtendedInfo.isCollocated) &&
        Objects.equals(this.isPresentOnCloud, dpMProtectedItemExtendedInfo.isPresentOnCloud) &&
        Objects.equals(this.lastBackupStatus, dpMProtectedItemExtendedInfo.lastBackupStatus) &&
        Objects.equals(this.lastRefreshedAt, dpMProtectedItemExtendedInfo.lastRefreshedAt) &&
        Objects.equals(this.oldestRecoveryPoint, dpMProtectedItemExtendedInfo.oldestRecoveryPoint) &&
        Objects.equals(this.onPremiseLatestRecoveryPoint, dpMProtectedItemExtendedInfo.onPremiseLatestRecoveryPoint) &&
        Objects.equals(this.onPremiseOldestRecoveryPoint, dpMProtectedItemExtendedInfo.onPremiseOldestRecoveryPoint) &&
        Objects.equals(this.onPremiseRecoveryPointCount, dpMProtectedItemExtendedInfo.onPremiseRecoveryPointCount) &&
        Objects.equals(this.protectableObjectLoadPath, dpMProtectedItemExtendedInfo.protectableObjectLoadPath) &&
        Objects.equals(this._protected, dpMProtectedItemExtendedInfo._protected) &&
        Objects.equals(this.protectionGroupName, dpMProtectedItemExtendedInfo.protectionGroupName) &&
        Objects.equals(this.recoveryPointCount, dpMProtectedItemExtendedInfo.recoveryPointCount) &&
        Objects.equals(this.totalDiskStorageSizeInBytes, dpMProtectedItemExtendedInfo.totalDiskStorageSizeInBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diskStorageUsedInBytes, isCollocated, isPresentOnCloud, lastBackupStatus, lastRefreshedAt, oldestRecoveryPoint, onPremiseLatestRecoveryPoint, onPremiseOldestRecoveryPoint, onPremiseRecoveryPointCount, protectableObjectLoadPath, _protected, protectionGroupName, recoveryPointCount, totalDiskStorageSizeInBytes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DPMProtectedItemExtendedInfo {\n");
    sb.append("    diskStorageUsedInBytes: ").append(toIndentedString(diskStorageUsedInBytes)).append("\n");
    sb.append("    isCollocated: ").append(toIndentedString(isCollocated)).append("\n");
    sb.append("    isPresentOnCloud: ").append(toIndentedString(isPresentOnCloud)).append("\n");
    sb.append("    lastBackupStatus: ").append(toIndentedString(lastBackupStatus)).append("\n");
    sb.append("    lastRefreshedAt: ").append(toIndentedString(lastRefreshedAt)).append("\n");
    sb.append("    oldestRecoveryPoint: ").append(toIndentedString(oldestRecoveryPoint)).append("\n");
    sb.append("    onPremiseLatestRecoveryPoint: ").append(toIndentedString(onPremiseLatestRecoveryPoint)).append("\n");
    sb.append("    onPremiseOldestRecoveryPoint: ").append(toIndentedString(onPremiseOldestRecoveryPoint)).append("\n");
    sb.append("    onPremiseRecoveryPointCount: ").append(toIndentedString(onPremiseRecoveryPointCount)).append("\n");
    sb.append("    protectableObjectLoadPath: ").append(toIndentedString(protectableObjectLoadPath)).append("\n");
    sb.append("    _protected: ").append(toIndentedString(_protected)).append("\n");
    sb.append("    protectionGroupName: ").append(toIndentedString(protectionGroupName)).append("\n");
    sb.append("    recoveryPointCount: ").append(toIndentedString(recoveryPointCount)).append("\n");
    sb.append("    totalDiskStorageSizeInBytes: ").append(toIndentedString(totalDiskStorageSizeInBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("diskStorageUsedInBytes");
    openapiFields.add("isCollocated");
    openapiFields.add("isPresentOnCloud");
    openapiFields.add("lastBackupStatus");
    openapiFields.add("lastRefreshedAt");
    openapiFields.add("oldestRecoveryPoint");
    openapiFields.add("onPremiseLatestRecoveryPoint");
    openapiFields.add("onPremiseOldestRecoveryPoint");
    openapiFields.add("onPremiseRecoveryPointCount");
    openapiFields.add("protectableObjectLoadPath");
    openapiFields.add("protected");
    openapiFields.add("protectionGroupName");
    openapiFields.add("recoveryPointCount");
    openapiFields.add("totalDiskStorageSizeInBytes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DPMProtectedItemExtendedInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DPMProtectedItemExtendedInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DPMProtectedItemExtendedInfo is not found in the empty JSON string", DPMProtectedItemExtendedInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DPMProtectedItemExtendedInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DPMProtectedItemExtendedInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("diskStorageUsedInBytes") != null && !jsonObj.get("diskStorageUsedInBytes").isJsonNull()) && !jsonObj.get("diskStorageUsedInBytes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `diskStorageUsedInBytes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("diskStorageUsedInBytes").toString()));
      }
      if ((jsonObj.get("lastBackupStatus") != null && !jsonObj.get("lastBackupStatus").isJsonNull()) && !jsonObj.get("lastBackupStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastBackupStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastBackupStatus").toString()));
      }
      if ((jsonObj.get("protectionGroupName") != null && !jsonObj.get("protectionGroupName").isJsonNull()) && !jsonObj.get("protectionGroupName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protectionGroupName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protectionGroupName").toString()));
      }
      if ((jsonObj.get("totalDiskStorageSizeInBytes") != null && !jsonObj.get("totalDiskStorageSizeInBytes").isJsonNull()) && !jsonObj.get("totalDiskStorageSizeInBytes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalDiskStorageSizeInBytes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalDiskStorageSizeInBytes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DPMProtectedItemExtendedInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DPMProtectedItemExtendedInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DPMProtectedItemExtendedInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DPMProtectedItemExtendedInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<DPMProtectedItemExtendedInfo>() {
           @Override
           public void write(JsonWriter out, DPMProtectedItemExtendedInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DPMProtectedItemExtendedInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DPMProtectedItemExtendedInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DPMProtectedItemExtendedInfo
   * @throws IOException if the JSON string is invalid with respect to DPMProtectedItemExtendedInfo
   */
  public static DPMProtectedItemExtendedInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DPMProtectedItemExtendedInfo.class);
  }

  /**
   * Convert an instance of DPMProtectedItemExtendedInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

