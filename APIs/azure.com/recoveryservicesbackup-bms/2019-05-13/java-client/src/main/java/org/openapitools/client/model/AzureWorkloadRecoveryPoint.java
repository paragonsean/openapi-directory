/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-05-13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.RecoveryPoint;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Workload specific recovery point, specifically encapsulates full/diff recovery point
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:08:52.489852-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AzureWorkloadRecoveryPoint extends RecoveryPoint {
  public static final String SERIALIZED_NAME_RECOVERY_POINT_TIME_IN_U_T_C = "recoveryPointTimeInUTC";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_TIME_IN_U_T_C)
  private OffsetDateTime recoveryPointTimeInUTC;

  /**
   * Type of restore point
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    INVALID("Invalid"),
    
    FULL("Full"),
    
    LOG("Log"),
    
    DIFFERENTIAL("Differential");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public AzureWorkloadRecoveryPoint() {
    this.objectType = this.getClass().getSimpleName();
  }

  public AzureWorkloadRecoveryPoint(
     OffsetDateTime recoveryPointTimeInUTC, 
     TypeEnum type
  ) {
    this();
    this.recoveryPointTimeInUTC = recoveryPointTimeInUTC;
    this.type = type;
  }

  /**
   * UTC time at which recovery point was created
   * @return recoveryPointTimeInUTC
   */
  @javax.annotation.Nullable
  public OffsetDateTime getRecoveryPointTimeInUTC() {
    return recoveryPointTimeInUTC;
  }



  /**
   * Type of restore point
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureWorkloadRecoveryPoint azureWorkloadRecoveryPoint = (AzureWorkloadRecoveryPoint) o;
    return Objects.equals(this.recoveryPointTimeInUTC, azureWorkloadRecoveryPoint.recoveryPointTimeInUTC) &&
        Objects.equals(this.type, azureWorkloadRecoveryPoint.type) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recoveryPointTimeInUTC, type, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureWorkloadRecoveryPoint {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    recoveryPointTimeInUTC: ").append(toIndentedString(recoveryPointTimeInUTC)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("objectType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("objectType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AzureWorkloadRecoveryPoint
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AzureWorkloadRecoveryPoint.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AzureWorkloadRecoveryPoint is not found in the empty JSON string", AzureWorkloadRecoveryPoint.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("objectType").getAsString();
      switch (discriminatorValue) {
        case "AzureWorkloadPointInTimeRecoveryPoint":
          AzureWorkloadPointInTimeRecoveryPoint.validateJsonElement(jsonElement);
          break;
        case "AzureWorkloadSAPHanaPointInTimeRecoveryPoint":
          AzureWorkloadSAPHanaPointInTimeRecoveryPoint.validateJsonElement(jsonElement);
          break;
        case "AzureWorkloadSAPHanaRecoveryPoint":
          AzureWorkloadSAPHanaRecoveryPoint.validateJsonElement(jsonElement);
          break;
        case "AzureWorkloadSQLPointInTimeRecoveryPoint":
          AzureWorkloadSQLPointInTimeRecoveryPoint.validateJsonElement(jsonElement);
          break;
        case "AzureWorkloadSQLRecoveryPoint":
          AzureWorkloadSQLRecoveryPoint.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `objectType` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of AzureWorkloadRecoveryPoint given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AzureWorkloadRecoveryPoint
   * @throws IOException if the JSON string is invalid with respect to AzureWorkloadRecoveryPoint
   */
  public static AzureWorkloadRecoveryPoint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AzureWorkloadRecoveryPoint.class);
  }

  /**
   * Convert an instance of AzureWorkloadRecoveryPoint to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

