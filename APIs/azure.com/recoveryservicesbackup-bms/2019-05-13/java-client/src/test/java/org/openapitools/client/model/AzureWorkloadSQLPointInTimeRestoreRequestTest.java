/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-05-13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AzureWorkloadSQLRestoreRequest;
import org.openapitools.client.model.SQLDataDirectoryMapping;
import org.openapitools.client.model.TargetRestoreInfo;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AzureWorkloadSQLPointInTimeRestoreRequest
 */
public class AzureWorkloadSQLPointInTimeRestoreRequestTest {
    private final AzureWorkloadSQLPointInTimeRestoreRequest model = new AzureWorkloadSQLPointInTimeRestoreRequest();

    /**
     * Model tests for AzureWorkloadSQLPointInTimeRestoreRequest
     */
    @Test
    public void testAzureWorkloadSQLPointInTimeRestoreRequest() {
        // TODO: test AzureWorkloadSQLPointInTimeRestoreRequest
    }

    /**
     * Test the property 'alternateDirectoryPaths'
     */
    @Test
    public void alternateDirectoryPathsTest() {
        // TODO: test alternateDirectoryPaths
    }

    /**
     * Test the property 'isNonRecoverable'
     */
    @Test
    public void isNonRecoverableTest() {
        // TODO: test isNonRecoverable
    }

    /**
     * Test the property 'shouldUseAlternateTargetLocation'
     */
    @Test
    public void shouldUseAlternateTargetLocationTest() {
        // TODO: test shouldUseAlternateTargetLocation
    }

    /**
     * Test the property 'propertyBag'
     */
    @Test
    public void propertyBagTest() {
        // TODO: test propertyBag
    }

    /**
     * Test the property 'recoveryMode'
     */
    @Test
    public void recoveryModeTest() {
        // TODO: test recoveryMode
    }

    /**
     * Test the property 'recoveryType'
     */
    @Test
    public void recoveryTypeTest() {
        // TODO: test recoveryType
    }

    /**
     * Test the property 'sourceResourceId'
     */
    @Test
    public void sourceResourceIdTest() {
        // TODO: test sourceResourceId
    }

    /**
     * Test the property 'targetInfo'
     */
    @Test
    public void targetInfoTest() {
        // TODO: test targetInfo
    }

    /**
     * Test the property 'objectType'
     */
    @Test
    public void objectTypeTest() {
        // TODO: test objectType
    }

}
