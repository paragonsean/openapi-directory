/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-05-13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BEKDetails from './BEKDetails';
import KEKDetails from './KEKDetails';

/**
 * The KeyAndSecretDetails model module.
 * @module model/KeyAndSecretDetails
 * @version 2019-05-13
 */
class KeyAndSecretDetails {
    /**
     * Constructs a new <code>KeyAndSecretDetails</code>.
     * BEK is bitlocker key.  KEK is encryption key for BEK  If the VM was encrypted then we will store following details :  1. Secret(BEK) - Url + Backup Data + vaultId.  2. Key(KEK) - Url + Backup Data + vaultId.  3. EncryptionMechanism  BEK and KEK can potentially have different vault ids.
     * @alias module:model/KeyAndSecretDetails
     */
    constructor() { 
        
        KeyAndSecretDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KeyAndSecretDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeyAndSecretDetails} obj Optional instance to populate.
     * @return {module:model/KeyAndSecretDetails} The populated <code>KeyAndSecretDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeyAndSecretDetails();

            if (data.hasOwnProperty('bekDetails')) {
                obj['bekDetails'] = BEKDetails.constructFromObject(data['bekDetails']);
            }
            if (data.hasOwnProperty('encryptionMechanism')) {
                obj['encryptionMechanism'] = ApiClient.convertToType(data['encryptionMechanism'], 'String');
            }
            if (data.hasOwnProperty('kekDetails')) {
                obj['kekDetails'] = KEKDetails.constructFromObject(data['kekDetails']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeyAndSecretDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeyAndSecretDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bekDetails`
        if (data['bekDetails']) { // data not null
          BEKDetails.validateJSON(data['bekDetails']);
        }
        // ensure the json data is a string
        if (data['encryptionMechanism'] && !(typeof data['encryptionMechanism'] === 'string' || data['encryptionMechanism'] instanceof String)) {
            throw new Error("Expected the field `encryptionMechanism` to be a primitive type in the JSON string but got " + data['encryptionMechanism']);
        }
        // validate the optional field `kekDetails`
        if (data['kekDetails']) { // data not null
          KEKDetails.validateJSON(data['kekDetails']);
        }

        return true;
    }


}



/**
 * @member {module:model/BEKDetails} bekDetails
 */
KeyAndSecretDetails.prototype['bekDetails'] = undefined;

/**
 * Encryption mechanism: None/ SinglePass/ DoublePass
 * @member {String} encryptionMechanism
 */
KeyAndSecretDetails.prototype['encryptionMechanism'] = undefined;

/**
 * @member {module:model/KEKDetails} kekDetails
 */
KeyAndSecretDetails.prototype['kekDetails'] = undefined;






export default KeyAndSecretDetails;

