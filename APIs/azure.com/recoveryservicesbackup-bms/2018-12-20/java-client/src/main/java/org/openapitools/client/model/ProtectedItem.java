/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-20
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Base class for backup items.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:08:52.760745-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProtectedItem {
  /**
   * Type of backup management for the backed up item.
   */
  @JsonAdapter(BackupManagementTypeEnum.Adapter.class)
  public enum BackupManagementTypeEnum {
    INVALID("Invalid"),
    
    AZURE_IAAS_VM("AzureIaasVM"),
    
    MAB("MAB"),
    
    DPM("DPM"),
    
    AZURE_BACKUP_SERVER("AzureBackupServer"),
    
    AZURE_SQL("AzureSql"),
    
    AZURE_STORAGE("AzureStorage"),
    
    AZURE_WORKLOAD("AzureWorkload"),
    
    DEFAULT_BACKUP("DefaultBackup");

    private String value;

    BackupManagementTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BackupManagementTypeEnum fromValue(String value) {
      for (BackupManagementTypeEnum b : BackupManagementTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BackupManagementTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BackupManagementTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BackupManagementTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BackupManagementTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      BackupManagementTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_BACKUP_MANAGEMENT_TYPE = "backupManagementType";
  @SerializedName(SERIALIZED_NAME_BACKUP_MANAGEMENT_TYPE)
  private BackupManagementTypeEnum backupManagementType;

  public static final String SERIALIZED_NAME_BACKUP_SET_NAME = "backupSetName";
  @SerializedName(SERIALIZED_NAME_BACKUP_SET_NAME)
  private String backupSetName;

  public static final String SERIALIZED_NAME_CONTAINER_NAME = "containerName";
  @SerializedName(SERIALIZED_NAME_CONTAINER_NAME)
  private String containerName;

  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
   */
  @JsonAdapter(CreateModeEnum.Adapter.class)
  public enum CreateModeEnum {
    INVALID("Invalid"),
    
    DEFAULT("Default"),
    
    RECOVER("Recover");

    private String value;

    CreateModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CreateModeEnum fromValue(String value) {
      for (CreateModeEnum b : CreateModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CreateModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CreateModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CreateModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CreateModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CreateModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CREATE_MODE = "createMode";
  @SerializedName(SERIALIZED_NAME_CREATE_MODE)
  private CreateModeEnum createMode;

  public static final String SERIALIZED_NAME_DEFERRED_DELETE_TIME_IN_U_T_C = "deferredDeleteTimeInUTC";
  @SerializedName(SERIALIZED_NAME_DEFERRED_DELETE_TIME_IN_U_T_C)
  private OffsetDateTime deferredDeleteTimeInUTC;

  public static final String SERIALIZED_NAME_DEFERRED_DELETE_TIME_REMAINING = "deferredDeleteTimeRemaining";
  @SerializedName(SERIALIZED_NAME_DEFERRED_DELETE_TIME_REMAINING)
  private String deferredDeleteTimeRemaining;

  public static final String SERIALIZED_NAME_IS_DEFERRED_DELETE_SCHEDULE_UPCOMING = "isDeferredDeleteScheduleUpcoming";
  @SerializedName(SERIALIZED_NAME_IS_DEFERRED_DELETE_SCHEDULE_UPCOMING)
  private Boolean isDeferredDeleteScheduleUpcoming;

  public static final String SERIALIZED_NAME_IS_REHYDRATE = "isRehydrate";
  @SerializedName(SERIALIZED_NAME_IS_REHYDRATE)
  private Boolean isRehydrate;

  public static final String SERIALIZED_NAME_IS_SCHEDULED_FOR_DEFERRED_DELETE = "isScheduledForDeferredDelete";
  @SerializedName(SERIALIZED_NAME_IS_SCHEDULED_FOR_DEFERRED_DELETE)
  private Boolean isScheduledForDeferredDelete;

  public static final String SERIALIZED_NAME_LAST_RECOVERY_POINT = "lastRecoveryPoint";
  @SerializedName(SERIALIZED_NAME_LAST_RECOVERY_POINT)
  private OffsetDateTime lastRecoveryPoint;

  public static final String SERIALIZED_NAME_POLICY_ID = "policyId";
  @SerializedName(SERIALIZED_NAME_POLICY_ID)
  private String policyId;

  public static final String SERIALIZED_NAME_PROTECTED_ITEM_TYPE = "protectedItemType";
  @SerializedName(SERIALIZED_NAME_PROTECTED_ITEM_TYPE)
  protected String protectedItemType;

  public static final String SERIALIZED_NAME_SOURCE_RESOURCE_ID = "sourceResourceId";
  @SerializedName(SERIALIZED_NAME_SOURCE_RESOURCE_ID)
  private String sourceResourceId;

  /**
   * Type of workload this item represents.
   */
  @JsonAdapter(WorkloadTypeEnum.Adapter.class)
  public enum WorkloadTypeEnum {
    INVALID("Invalid"),
    
    VM("VM"),
    
    FILE_FOLDER("FileFolder"),
    
    AZURE_SQL_DB("AzureSqlDb"),
    
    SQLDB("SQLDB"),
    
    EXCHANGE("Exchange"),
    
    SHAREPOINT("Sharepoint"),
    
    V_MWARE_VM("VMwareVM"),
    
    SYSTEM_STATE("SystemState"),
    
    CLIENT("Client"),
    
    GENERIC_DATA_SOURCE("GenericDataSource"),
    
    SQL_DATA_BASE("SQLDataBase"),
    
    AZURE_FILE_SHARE("AzureFileShare"),
    
    SAP_HANA_DATABASE("SAPHanaDatabase"),
    
    SAP_ASE_DATABASE("SAPAseDatabase");

    private String value;

    WorkloadTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static WorkloadTypeEnum fromValue(String value) {
      for (WorkloadTypeEnum b : WorkloadTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<WorkloadTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WorkloadTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WorkloadTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return WorkloadTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      WorkloadTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_WORKLOAD_TYPE = "workloadType";
  @SerializedName(SERIALIZED_NAME_WORKLOAD_TYPE)
  private WorkloadTypeEnum workloadType;

  public ProtectedItem() {
    this.protectedItemType = this.getClass().getSimpleName();
  }

  public ProtectedItem backupManagementType(BackupManagementTypeEnum backupManagementType) {
    this.backupManagementType = backupManagementType;
    return this;
  }

  /**
   * Type of backup management for the backed up item.
   * @return backupManagementType
   */
  @javax.annotation.Nullable
  public BackupManagementTypeEnum getBackupManagementType() {
    return backupManagementType;
  }

  public void setBackupManagementType(BackupManagementTypeEnum backupManagementType) {
    this.backupManagementType = backupManagementType;
  }


  public ProtectedItem backupSetName(String backupSetName) {
    this.backupSetName = backupSetName;
    return this;
  }

  /**
   * Name of the backup set the backup item belongs to
   * @return backupSetName
   */
  @javax.annotation.Nullable
  public String getBackupSetName() {
    return backupSetName;
  }

  public void setBackupSetName(String backupSetName) {
    this.backupSetName = backupSetName;
  }


  public ProtectedItem containerName(String containerName) {
    this.containerName = containerName;
    return this;
  }

  /**
   * Unique name of container
   * @return containerName
   */
  @javax.annotation.Nullable
  public String getContainerName() {
    return containerName;
  }

  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }


  public ProtectedItem createMode(CreateModeEnum createMode) {
    this.createMode = createMode;
    return this;
  }

  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
   * @return createMode
   */
  @javax.annotation.Nullable
  public CreateModeEnum getCreateMode() {
    return createMode;
  }

  public void setCreateMode(CreateModeEnum createMode) {
    this.createMode = createMode;
  }


  public ProtectedItem deferredDeleteTimeInUTC(OffsetDateTime deferredDeleteTimeInUTC) {
    this.deferredDeleteTimeInUTC = deferredDeleteTimeInUTC;
    return this;
  }

  /**
   * Time for deferred deletion in UTC
   * @return deferredDeleteTimeInUTC
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeferredDeleteTimeInUTC() {
    return deferredDeleteTimeInUTC;
  }

  public void setDeferredDeleteTimeInUTC(OffsetDateTime deferredDeleteTimeInUTC) {
    this.deferredDeleteTimeInUTC = deferredDeleteTimeInUTC;
  }


  public ProtectedItem deferredDeleteTimeRemaining(String deferredDeleteTimeRemaining) {
    this.deferredDeleteTimeRemaining = deferredDeleteTimeRemaining;
    return this;
  }

  /**
   * Time remaining before the DS marked for deferred delete is permanently deleted
   * @return deferredDeleteTimeRemaining
   */
  @javax.annotation.Nullable
  public String getDeferredDeleteTimeRemaining() {
    return deferredDeleteTimeRemaining;
  }

  public void setDeferredDeleteTimeRemaining(String deferredDeleteTimeRemaining) {
    this.deferredDeleteTimeRemaining = deferredDeleteTimeRemaining;
  }


  public ProtectedItem isDeferredDeleteScheduleUpcoming(Boolean isDeferredDeleteScheduleUpcoming) {
    this.isDeferredDeleteScheduleUpcoming = isDeferredDeleteScheduleUpcoming;
    return this;
  }

  /**
   * Flag to identify whether the deferred deleted DS is to be purged soon
   * @return isDeferredDeleteScheduleUpcoming
   */
  @javax.annotation.Nullable
  public Boolean getIsDeferredDeleteScheduleUpcoming() {
    return isDeferredDeleteScheduleUpcoming;
  }

  public void setIsDeferredDeleteScheduleUpcoming(Boolean isDeferredDeleteScheduleUpcoming) {
    this.isDeferredDeleteScheduleUpcoming = isDeferredDeleteScheduleUpcoming;
  }


  public ProtectedItem isRehydrate(Boolean isRehydrate) {
    this.isRehydrate = isRehydrate;
    return this;
  }

  /**
   * Flag to identify that deferred deleted DS is to be moved into Pause state
   * @return isRehydrate
   */
  @javax.annotation.Nullable
  public Boolean getIsRehydrate() {
    return isRehydrate;
  }

  public void setIsRehydrate(Boolean isRehydrate) {
    this.isRehydrate = isRehydrate;
  }


  public ProtectedItem isScheduledForDeferredDelete(Boolean isScheduledForDeferredDelete) {
    this.isScheduledForDeferredDelete = isScheduledForDeferredDelete;
    return this;
  }

  /**
   * Flag to identify whether the DS is scheduled for deferred delete
   * @return isScheduledForDeferredDelete
   */
  @javax.annotation.Nullable
  public Boolean getIsScheduledForDeferredDelete() {
    return isScheduledForDeferredDelete;
  }

  public void setIsScheduledForDeferredDelete(Boolean isScheduledForDeferredDelete) {
    this.isScheduledForDeferredDelete = isScheduledForDeferredDelete;
  }


  public ProtectedItem lastRecoveryPoint(OffsetDateTime lastRecoveryPoint) {
    this.lastRecoveryPoint = lastRecoveryPoint;
    return this;
  }

  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   * @return lastRecoveryPoint
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastRecoveryPoint() {
    return lastRecoveryPoint;
  }

  public void setLastRecoveryPoint(OffsetDateTime lastRecoveryPoint) {
    this.lastRecoveryPoint = lastRecoveryPoint;
  }


  public ProtectedItem policyId(String policyId) {
    this.policyId = policyId;
    return this;
  }

  /**
   * ID of the backup policy with which this item is backed up.
   * @return policyId
   */
  @javax.annotation.Nullable
  public String getPolicyId() {
    return policyId;
  }

  public void setPolicyId(String policyId) {
    this.policyId = policyId;
  }


  public ProtectedItem protectedItemType(String protectedItemType) {
    this.protectedItemType = protectedItemType;
    return this;
  }

  /**
   * backup item type.
   * @return protectedItemType
   */
  @javax.annotation.Nonnull
  public String getProtectedItemType() {
    return protectedItemType;
  }

  public void setProtectedItemType(String protectedItemType) {
    this.protectedItemType = protectedItemType;
  }


  public ProtectedItem sourceResourceId(String sourceResourceId) {
    this.sourceResourceId = sourceResourceId;
    return this;
  }

  /**
   * ARM ID of the resource to be backed up.
   * @return sourceResourceId
   */
  @javax.annotation.Nullable
  public String getSourceResourceId() {
    return sourceResourceId;
  }

  public void setSourceResourceId(String sourceResourceId) {
    this.sourceResourceId = sourceResourceId;
  }


  public ProtectedItem workloadType(WorkloadTypeEnum workloadType) {
    this.workloadType = workloadType;
    return this;
  }

  /**
   * Type of workload this item represents.
   * @return workloadType
   */
  @javax.annotation.Nullable
  public WorkloadTypeEnum getWorkloadType() {
    return workloadType;
  }

  public void setWorkloadType(WorkloadTypeEnum workloadType) {
    this.workloadType = workloadType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProtectedItem protectedItem = (ProtectedItem) o;
    return Objects.equals(this.backupManagementType, protectedItem.backupManagementType) &&
        Objects.equals(this.backupSetName, protectedItem.backupSetName) &&
        Objects.equals(this.containerName, protectedItem.containerName) &&
        Objects.equals(this.createMode, protectedItem.createMode) &&
        Objects.equals(this.deferredDeleteTimeInUTC, protectedItem.deferredDeleteTimeInUTC) &&
        Objects.equals(this.deferredDeleteTimeRemaining, protectedItem.deferredDeleteTimeRemaining) &&
        Objects.equals(this.isDeferredDeleteScheduleUpcoming, protectedItem.isDeferredDeleteScheduleUpcoming) &&
        Objects.equals(this.isRehydrate, protectedItem.isRehydrate) &&
        Objects.equals(this.isScheduledForDeferredDelete, protectedItem.isScheduledForDeferredDelete) &&
        Objects.equals(this.lastRecoveryPoint, protectedItem.lastRecoveryPoint) &&
        Objects.equals(this.policyId, protectedItem.policyId) &&
        Objects.equals(this.protectedItemType, protectedItem.protectedItemType) &&
        Objects.equals(this.sourceResourceId, protectedItem.sourceResourceId) &&
        Objects.equals(this.workloadType, protectedItem.workloadType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupManagementType, backupSetName, containerName, createMode, deferredDeleteTimeInUTC, deferredDeleteTimeRemaining, isDeferredDeleteScheduleUpcoming, isRehydrate, isScheduledForDeferredDelete, lastRecoveryPoint, policyId, protectedItemType, sourceResourceId, workloadType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProtectedItem {\n");
    sb.append("    backupManagementType: ").append(toIndentedString(backupManagementType)).append("\n");
    sb.append("    backupSetName: ").append(toIndentedString(backupSetName)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    createMode: ").append(toIndentedString(createMode)).append("\n");
    sb.append("    deferredDeleteTimeInUTC: ").append(toIndentedString(deferredDeleteTimeInUTC)).append("\n");
    sb.append("    deferredDeleteTimeRemaining: ").append(toIndentedString(deferredDeleteTimeRemaining)).append("\n");
    sb.append("    isDeferredDeleteScheduleUpcoming: ").append(toIndentedString(isDeferredDeleteScheduleUpcoming)).append("\n");
    sb.append("    isRehydrate: ").append(toIndentedString(isRehydrate)).append("\n");
    sb.append("    isScheduledForDeferredDelete: ").append(toIndentedString(isScheduledForDeferredDelete)).append("\n");
    sb.append("    lastRecoveryPoint: ").append(toIndentedString(lastRecoveryPoint)).append("\n");
    sb.append("    policyId: ").append(toIndentedString(policyId)).append("\n");
    sb.append("    protectedItemType: ").append(toIndentedString(protectedItemType)).append("\n");
    sb.append("    sourceResourceId: ").append(toIndentedString(sourceResourceId)).append("\n");
    sb.append("    workloadType: ").append(toIndentedString(workloadType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backupManagementType");
    openapiFields.add("backupSetName");
    openapiFields.add("containerName");
    openapiFields.add("createMode");
    openapiFields.add("deferredDeleteTimeInUTC");
    openapiFields.add("deferredDeleteTimeRemaining");
    openapiFields.add("isDeferredDeleteScheduleUpcoming");
    openapiFields.add("isRehydrate");
    openapiFields.add("isScheduledForDeferredDelete");
    openapiFields.add("lastRecoveryPoint");
    openapiFields.add("policyId");
    openapiFields.add("protectedItemType");
    openapiFields.add("sourceResourceId");
    openapiFields.add("workloadType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("protectedItemType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProtectedItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProtectedItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProtectedItem is not found in the empty JSON string", ProtectedItem.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("protectedItemType").getAsString();
      switch (discriminatorValue) {
        case "AzureFileshareProtectedItem":
          AzureFileshareProtectedItem.validateJsonElement(jsonElement);
          break;
        case "AzureIaaSClassicComputeVMProtectedItem":
          AzureIaaSClassicComputeVMProtectedItem.validateJsonElement(jsonElement);
          break;
        case "AzureIaaSComputeVMProtectedItem":
          AzureIaaSComputeVMProtectedItem.validateJsonElement(jsonElement);
          break;
        case "AzureIaaSVMProtectedItem":
          AzureIaaSVMProtectedItem.validateJsonElement(jsonElement);
          break;
        case "AzureSqlProtectedItem":
          AzureSqlProtectedItem.validateJsonElement(jsonElement);
          break;
        case "AzureVmWorkloadProtectedItem":
          AzureVmWorkloadProtectedItem.validateJsonElement(jsonElement);
          break;
        case "AzureVmWorkloadSAPAseDatabaseProtectedItem":
          AzureVmWorkloadSAPAseDatabaseProtectedItem.validateJsonElement(jsonElement);
          break;
        case "AzureVmWorkloadSAPHanaDatabaseProtectedItem":
          AzureVmWorkloadSAPHanaDatabaseProtectedItem.validateJsonElement(jsonElement);
          break;
        case "AzureVmWorkloadSQLDatabaseProtectedItem":
          AzureVmWorkloadSQLDatabaseProtectedItem.validateJsonElement(jsonElement);
          break;
        case "DPMProtectedItem":
          DPMProtectedItem.validateJsonElement(jsonElement);
          break;
        case "GenericProtectedItem":
          GenericProtectedItem.validateJsonElement(jsonElement);
          break;
        case "MabFileFolderProtectedItem":
          MabFileFolderProtectedItem.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `protectedItemType` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of ProtectedItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProtectedItem
   * @throws IOException if the JSON string is invalid with respect to ProtectedItem
   */
  public static ProtectedItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProtectedItem.class);
  }

  /**
   * Convert an instance of ProtectedItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

