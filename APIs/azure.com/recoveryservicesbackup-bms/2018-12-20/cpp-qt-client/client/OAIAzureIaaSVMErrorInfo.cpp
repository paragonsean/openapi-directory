/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-20
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureIaaSVMErrorInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureIaaSVMErrorInfo::OAIAzureIaaSVMErrorInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureIaaSVMErrorInfo::OAIAzureIaaSVMErrorInfo() {
    this->initializeModel();
}

OAIAzureIaaSVMErrorInfo::~OAIAzureIaaSVMErrorInfo() {}

void OAIAzureIaaSVMErrorInfo::initializeModel() {

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_string_isSet = false;
    m_error_string_isValid = false;

    m_error_title_isSet = false;
    m_error_title_isValid = false;

    m_recommendations_isSet = false;
    m_recommendations_isValid = false;
}

void OAIAzureIaaSVMErrorInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureIaaSVMErrorInfo::fromJsonObject(QJsonObject json) {

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("errorCode")]);
    m_error_code_isSet = !json[QString("errorCode")].isNull() && m_error_code_isValid;

    m_error_string_isValid = ::OpenAPI::fromJsonValue(m_error_string, json[QString("errorString")]);
    m_error_string_isSet = !json[QString("errorString")].isNull() && m_error_string_isValid;

    m_error_title_isValid = ::OpenAPI::fromJsonValue(m_error_title, json[QString("errorTitle")]);
    m_error_title_isSet = !json[QString("errorTitle")].isNull() && m_error_title_isValid;

    m_recommendations_isValid = ::OpenAPI::fromJsonValue(m_recommendations, json[QString("recommendations")]);
    m_recommendations_isSet = !json[QString("recommendations")].isNull() && m_recommendations_isValid;
}

QString OAIAzureIaaSVMErrorInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureIaaSVMErrorInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_error_code_isSet) {
        obj.insert(QString("errorCode"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_string_isSet) {
        obj.insert(QString("errorString"), ::OpenAPI::toJsonValue(m_error_string));
    }
    if (m_error_title_isSet) {
        obj.insert(QString("errorTitle"), ::OpenAPI::toJsonValue(m_error_title));
    }
    if (m_recommendations.size() > 0) {
        obj.insert(QString("recommendations"), ::OpenAPI::toJsonValue(m_recommendations));
    }
    return obj;
}

qint32 OAIAzureIaaSVMErrorInfo::getErrorCode() const {
    return m_error_code;
}
void OAIAzureIaaSVMErrorInfo::setErrorCode(const qint32 &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIAzureIaaSVMErrorInfo::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIAzureIaaSVMErrorInfo::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIAzureIaaSVMErrorInfo::getErrorString() const {
    return m_error_string;
}
void OAIAzureIaaSVMErrorInfo::setErrorString(const QString &error_string) {
    m_error_string = error_string;
    m_error_string_isSet = true;
}

bool OAIAzureIaaSVMErrorInfo::is_error_string_Set() const{
    return m_error_string_isSet;
}

bool OAIAzureIaaSVMErrorInfo::is_error_string_Valid() const{
    return m_error_string_isValid;
}

QString OAIAzureIaaSVMErrorInfo::getErrorTitle() const {
    return m_error_title;
}
void OAIAzureIaaSVMErrorInfo::setErrorTitle(const QString &error_title) {
    m_error_title = error_title;
    m_error_title_isSet = true;
}

bool OAIAzureIaaSVMErrorInfo::is_error_title_Set() const{
    return m_error_title_isSet;
}

bool OAIAzureIaaSVMErrorInfo::is_error_title_Valid() const{
    return m_error_title_isValid;
}

QList<QString> OAIAzureIaaSVMErrorInfo::getRecommendations() const {
    return m_recommendations;
}
void OAIAzureIaaSVMErrorInfo::setRecommendations(const QList<QString> &recommendations) {
    m_recommendations = recommendations;
    m_recommendations_isSet = true;
}

bool OAIAzureIaaSVMErrorInfo::is_recommendations_Set() const{
    return m_recommendations_isSet;
}

bool OAIAzureIaaSVMErrorInfo::is_recommendations_Valid() const{
    return m_recommendations_isValid;
}

bool OAIAzureIaaSVMErrorInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureIaaSVMErrorInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
