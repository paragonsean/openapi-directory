/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-20
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperationStatusJobsExtendedInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperationStatusJobsExtendedInfo::OAIOperationStatusJobsExtendedInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperationStatusJobsExtendedInfo::OAIOperationStatusJobsExtendedInfo() {
    this->initializeModel();
}

OAIOperationStatusJobsExtendedInfo::~OAIOperationStatusJobsExtendedInfo() {}

void OAIOperationStatusJobsExtendedInfo::initializeModel() {

    m_failed_jobs_error_isSet = false;
    m_failed_jobs_error_isValid = false;

    m_job_ids_isSet = false;
    m_job_ids_isValid = false;

    m_object_type_isSet = false;
    m_object_type_isValid = false;
}

void OAIOperationStatusJobsExtendedInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOperationStatusJobsExtendedInfo::fromJsonObject(QJsonObject json) {

    m_failed_jobs_error_isValid = ::OpenAPI::fromJsonValue(m_failed_jobs_error, json[QString("failedJobsError")]);
    m_failed_jobs_error_isSet = !json[QString("failedJobsError")].isNull() && m_failed_jobs_error_isValid;

    m_job_ids_isValid = ::OpenAPI::fromJsonValue(m_job_ids, json[QString("jobIds")]);
    m_job_ids_isSet = !json[QString("jobIds")].isNull() && m_job_ids_isValid;

    m_object_type_isValid = ::OpenAPI::fromJsonValue(m_object_type, json[QString("objectType")]);
    m_object_type_isSet = !json[QString("objectType")].isNull() && m_object_type_isValid;
}

QString OAIOperationStatusJobsExtendedInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOperationStatusJobsExtendedInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_failed_jobs_error.size() > 0) {
        obj.insert(QString("failedJobsError"), ::OpenAPI::toJsonValue(m_failed_jobs_error));
    }
    if (m_job_ids.size() > 0) {
        obj.insert(QString("jobIds"), ::OpenAPI::toJsonValue(m_job_ids));
    }
    if (m_object_type_isSet) {
        obj.insert(QString("objectType"), ::OpenAPI::toJsonValue(m_object_type));
    }
    return obj;
}

QMap<QString, QString> OAIOperationStatusJobsExtendedInfo::getFailedJobsError() const {
    return m_failed_jobs_error;
}
void OAIOperationStatusJobsExtendedInfo::setFailedJobsError(const QMap<QString, QString> &failed_jobs_error) {
    m_failed_jobs_error = failed_jobs_error;
    m_failed_jobs_error_isSet = true;
}

bool OAIOperationStatusJobsExtendedInfo::is_failed_jobs_error_Set() const{
    return m_failed_jobs_error_isSet;
}

bool OAIOperationStatusJobsExtendedInfo::is_failed_jobs_error_Valid() const{
    return m_failed_jobs_error_isValid;
}

QList<QString> OAIOperationStatusJobsExtendedInfo::getJobIds() const {
    return m_job_ids;
}
void OAIOperationStatusJobsExtendedInfo::setJobIds(const QList<QString> &job_ids) {
    m_job_ids = job_ids;
    m_job_ids_isSet = true;
}

bool OAIOperationStatusJobsExtendedInfo::is_job_ids_Set() const{
    return m_job_ids_isSet;
}

bool OAIOperationStatusJobsExtendedInfo::is_job_ids_Valid() const{
    return m_job_ids_isValid;
}

QString OAIOperationStatusJobsExtendedInfo::getObjectType() const {
    return m_object_type;
}
void OAIOperationStatusJobsExtendedInfo::setObjectType(const QString &object_type) {
    m_object_type = object_type;
    m_object_type_isSet = true;
}

bool OAIOperationStatusJobsExtendedInfo::is_object_type_Set() const{
    return m_object_type_isSet;
}

bool OAIOperationStatusJobsExtendedInfo::is_object_type_Valid() const{
    return m_object_type_isValid;
}

bool OAIOperationStatusJobsExtendedInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_failed_jobs_error.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOperationStatusJobsExtendedInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_object_type_isValid && true;
}

} // namespace OpenAPI
