/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-20
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICrossRegionRestoreRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICrossRegionRestoreRequest::OAICrossRegionRestoreRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICrossRegionRestoreRequest::OAICrossRegionRestoreRequest() {
    this->initializeModel();
}

OAICrossRegionRestoreRequest::~OAICrossRegionRestoreRequest() {}

void OAICrossRegionRestoreRequest::initializeModel() {

    m_cross_region_restore_access_details_isSet = false;
    m_cross_region_restore_access_details_isValid = false;

    m_restore_request_isSet = false;
    m_restore_request_isValid = false;
}

void OAICrossRegionRestoreRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICrossRegionRestoreRequest::fromJsonObject(QJsonObject json) {

    m_cross_region_restore_access_details_isValid = ::OpenAPI::fromJsonValue(m_cross_region_restore_access_details, json[QString("crossRegionRestoreAccessDetails")]);
    m_cross_region_restore_access_details_isSet = !json[QString("crossRegionRestoreAccessDetails")].isNull() && m_cross_region_restore_access_details_isValid;

    m_restore_request_isValid = ::OpenAPI::fromJsonValue(m_restore_request, json[QString("restoreRequest")]);
    m_restore_request_isSet = !json[QString("restoreRequest")].isNull() && m_restore_request_isValid;
}

QString OAICrossRegionRestoreRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICrossRegionRestoreRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_cross_region_restore_access_details.isSet()) {
        obj.insert(QString("crossRegionRestoreAccessDetails"), ::OpenAPI::toJsonValue(m_cross_region_restore_access_details));
    }
    if (m_restore_request.isSet()) {
        obj.insert(QString("restoreRequest"), ::OpenAPI::toJsonValue(m_restore_request));
    }
    return obj;
}

OAICrrAccessToken OAICrossRegionRestoreRequest::getCrossRegionRestoreAccessDetails() const {
    return m_cross_region_restore_access_details;
}
void OAICrossRegionRestoreRequest::setCrossRegionRestoreAccessDetails(const OAICrrAccessToken &cross_region_restore_access_details) {
    m_cross_region_restore_access_details = cross_region_restore_access_details;
    m_cross_region_restore_access_details_isSet = true;
}

bool OAICrossRegionRestoreRequest::is_cross_region_restore_access_details_Set() const{
    return m_cross_region_restore_access_details_isSet;
}

bool OAICrossRegionRestoreRequest::is_cross_region_restore_access_details_Valid() const{
    return m_cross_region_restore_access_details_isValid;
}

OAIRestoreRequest OAICrossRegionRestoreRequest::getRestoreRequest() const {
    return m_restore_request;
}
void OAICrossRegionRestoreRequest::setRestoreRequest(const OAIRestoreRequest &restore_request) {
    m_restore_request = restore_request;
    m_restore_request_isSet = true;
}

bool OAICrossRegionRestoreRequest::is_restore_request_Set() const{
    return m_restore_request_isSet;
}

bool OAICrossRegionRestoreRequest::is_restore_request_Valid() const{
    return m_restore_request_isValid;
}

bool OAICrossRegionRestoreRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cross_region_restore_access_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_restore_request.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICrossRegionRestoreRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
