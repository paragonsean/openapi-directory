/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-20
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIaasVMRecoveryPoint.h
 *
 * IaaS VM workload specific backup copy.
 */

#ifndef OAIIaasVMRecoveryPoint_H
#define OAIIaasVMRecoveryPoint_H

#include <QJsonObject>

#include "OAIKeyAndSecretDetails.h"
#include "OAIRecoveryPoint.h"
#include "OAIRecoveryPointDiskConfiguration.h"
#include "OAIRecoveryPointTierInformation.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyAndSecretDetails;
class OAIRecoveryPointDiskConfiguration;
class OAIRecoveryPointTierInformation;

class OAIIaasVMRecoveryPoint : public OAIObject {
public:
    OAIIaasVMRecoveryPoint();
    OAIIaasVMRecoveryPoint(QString json);
    ~OAIIaasVMRecoveryPoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsInstantIlrSessionActive() const;
    void setIsInstantIlrSessionActive(const bool &is_instant_ilr_session_active);
    bool is_is_instant_ilr_session_active_Set() const;
    bool is_is_instant_ilr_session_active_Valid() const;

    bool isIsManagedVirtualMachine() const;
    void setIsManagedVirtualMachine(const bool &is_managed_virtual_machine);
    bool is_is_managed_virtual_machine_Set() const;
    bool is_is_managed_virtual_machine_Valid() const;

    bool isIsSourceVmEncrypted() const;
    void setIsSourceVmEncrypted(const bool &is_source_vm_encrypted);
    bool is_is_source_vm_encrypted_Set() const;
    bool is_is_source_vm_encrypted_Valid() const;

    OAIKeyAndSecretDetails getKeyAndSecret() const;
    void setKeyAndSecret(const OAIKeyAndSecretDetails &key_and_secret);
    bool is_key_and_secret_Set() const;
    bool is_key_and_secret_Valid() const;

    bool isOriginalStorageAccountOption() const;
    void setOriginalStorageAccountOption(const bool &original_storage_account_option);
    bool is_original_storage_account_option_Set() const;
    bool is_original_storage_account_option_Valid() const;

    QString getOsType() const;
    void setOsType(const QString &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    QString getRecoveryPointAdditionalInfo() const;
    void setRecoveryPointAdditionalInfo(const QString &recovery_point_additional_info);
    bool is_recovery_point_additional_info_Set() const;
    bool is_recovery_point_additional_info_Valid() const;

    OAIRecoveryPointDiskConfiguration getRecoveryPointDiskConfiguration() const;
    void setRecoveryPointDiskConfiguration(const OAIRecoveryPointDiskConfiguration &recovery_point_disk_configuration);
    bool is_recovery_point_disk_configuration_Set() const;
    bool is_recovery_point_disk_configuration_Valid() const;

    QList<OAIRecoveryPointTierInformation> getRecoveryPointTierDetails() const;
    void setRecoveryPointTierDetails(const QList<OAIRecoveryPointTierInformation> &recovery_point_tier_details);
    bool is_recovery_point_tier_details_Set() const;
    bool is_recovery_point_tier_details_Valid() const;

    QDateTime getRecoveryPointTime() const;
    void setRecoveryPointTime(const QDateTime &recovery_point_time);
    bool is_recovery_point_time_Set() const;
    bool is_recovery_point_time_Valid() const;

    QString getRecoveryPointType() const;
    void setRecoveryPointType(const QString &recovery_point_type);
    bool is_recovery_point_type_Set() const;
    bool is_recovery_point_type_Valid() const;

    QString getSourceVmStorageType() const;
    void setSourceVmStorageType(const QString &source_vm_storage_type);
    bool is_source_vm_storage_type_Set() const;
    bool is_source_vm_storage_type_Valid() const;

    QString getVirtualMachineSize() const;
    void setVirtualMachineSize(const QString &virtual_machine_size);
    bool is_virtual_machine_size_Set() const;
    bool is_virtual_machine_size_Valid() const;

    QString getObjectType() const;
    void setObjectType(const QString &object_type);
    bool is_object_type_Set() const;
    bool is_object_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_instant_ilr_session_active;
    bool m_is_instant_ilr_session_active_isSet;
    bool m_is_instant_ilr_session_active_isValid;

    bool m_is_managed_virtual_machine;
    bool m_is_managed_virtual_machine_isSet;
    bool m_is_managed_virtual_machine_isValid;

    bool m_is_source_vm_encrypted;
    bool m_is_source_vm_encrypted_isSet;
    bool m_is_source_vm_encrypted_isValid;

    OAIKeyAndSecretDetails m_key_and_secret;
    bool m_key_and_secret_isSet;
    bool m_key_and_secret_isValid;

    bool m_original_storage_account_option;
    bool m_original_storage_account_option_isSet;
    bool m_original_storage_account_option_isValid;

    QString m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;

    QString m_recovery_point_additional_info;
    bool m_recovery_point_additional_info_isSet;
    bool m_recovery_point_additional_info_isValid;

    OAIRecoveryPointDiskConfiguration m_recovery_point_disk_configuration;
    bool m_recovery_point_disk_configuration_isSet;
    bool m_recovery_point_disk_configuration_isValid;

    QList<OAIRecoveryPointTierInformation> m_recovery_point_tier_details;
    bool m_recovery_point_tier_details_isSet;
    bool m_recovery_point_tier_details_isValid;

    QDateTime m_recovery_point_time;
    bool m_recovery_point_time_isSet;
    bool m_recovery_point_time_isValid;

    QString m_recovery_point_type;
    bool m_recovery_point_type_isSet;
    bool m_recovery_point_type_isValid;

    QString m_source_vm_storage_type;
    bool m_source_vm_storage_type_isSet;
    bool m_source_vm_storage_type_isValid;

    QString m_virtual_machine_size;
    bool m_virtual_machine_size_isSet;
    bool m_virtual_machine_size_isValid;

    QString m_object_type;
    bool m_object_type_isSet;
    bool m_object_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIaasVMRecoveryPoint)

#endif // OAIIaasVMRecoveryPoint_H
