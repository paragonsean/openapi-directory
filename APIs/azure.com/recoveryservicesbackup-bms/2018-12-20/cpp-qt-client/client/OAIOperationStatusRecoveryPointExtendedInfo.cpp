/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-20
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperationStatusRecoveryPointExtendedInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperationStatusRecoveryPointExtendedInfo::OAIOperationStatusRecoveryPointExtendedInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperationStatusRecoveryPointExtendedInfo::OAIOperationStatusRecoveryPointExtendedInfo() {
    this->initializeModel();
}

OAIOperationStatusRecoveryPointExtendedInfo::~OAIOperationStatusRecoveryPointExtendedInfo() {}

void OAIOperationStatusRecoveryPointExtendedInfo::initializeModel() {

    m_deleted_backup_item_version_isSet = false;
    m_deleted_backup_item_version_isValid = false;

    m_updated_recovery_point_isSet = false;
    m_updated_recovery_point_isValid = false;

    m_object_type_isSet = false;
    m_object_type_isValid = false;
}

void OAIOperationStatusRecoveryPointExtendedInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOperationStatusRecoveryPointExtendedInfo::fromJsonObject(QJsonObject json) {

    m_deleted_backup_item_version_isValid = ::OpenAPI::fromJsonValue(m_deleted_backup_item_version, json[QString("deletedBackupItemVersion")]);
    m_deleted_backup_item_version_isSet = !json[QString("deletedBackupItemVersion")].isNull() && m_deleted_backup_item_version_isValid;

    m_updated_recovery_point_isValid = ::OpenAPI::fromJsonValue(m_updated_recovery_point, json[QString("updatedRecoveryPoint")]);
    m_updated_recovery_point_isSet = !json[QString("updatedRecoveryPoint")].isNull() && m_updated_recovery_point_isValid;

    m_object_type_isValid = ::OpenAPI::fromJsonValue(m_object_type, json[QString("objectType")]);
    m_object_type_isSet = !json[QString("objectType")].isNull() && m_object_type_isValid;
}

QString OAIOperationStatusRecoveryPointExtendedInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOperationStatusRecoveryPointExtendedInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_deleted_backup_item_version_isSet) {
        obj.insert(QString("deletedBackupItemVersion"), ::OpenAPI::toJsonValue(m_deleted_backup_item_version));
    }
    if (m_updated_recovery_point.isSet()) {
        obj.insert(QString("updatedRecoveryPoint"), ::OpenAPI::toJsonValue(m_updated_recovery_point));
    }
    if (m_object_type_isSet) {
        obj.insert(QString("objectType"), ::OpenAPI::toJsonValue(m_object_type));
    }
    return obj;
}

QString OAIOperationStatusRecoveryPointExtendedInfo::getDeletedBackupItemVersion() const {
    return m_deleted_backup_item_version;
}
void OAIOperationStatusRecoveryPointExtendedInfo::setDeletedBackupItemVersion(const QString &deleted_backup_item_version) {
    m_deleted_backup_item_version = deleted_backup_item_version;
    m_deleted_backup_item_version_isSet = true;
}

bool OAIOperationStatusRecoveryPointExtendedInfo::is_deleted_backup_item_version_Set() const{
    return m_deleted_backup_item_version_isSet;
}

bool OAIOperationStatusRecoveryPointExtendedInfo::is_deleted_backup_item_version_Valid() const{
    return m_deleted_backup_item_version_isValid;
}

OAIRecoveryPoint OAIOperationStatusRecoveryPointExtendedInfo::getUpdatedRecoveryPoint() const {
    return m_updated_recovery_point;
}
void OAIOperationStatusRecoveryPointExtendedInfo::setUpdatedRecoveryPoint(const OAIRecoveryPoint &updated_recovery_point) {
    m_updated_recovery_point = updated_recovery_point;
    m_updated_recovery_point_isSet = true;
}

bool OAIOperationStatusRecoveryPointExtendedInfo::is_updated_recovery_point_Set() const{
    return m_updated_recovery_point_isSet;
}

bool OAIOperationStatusRecoveryPointExtendedInfo::is_updated_recovery_point_Valid() const{
    return m_updated_recovery_point_isValid;
}

QString OAIOperationStatusRecoveryPointExtendedInfo::getObjectType() const {
    return m_object_type;
}
void OAIOperationStatusRecoveryPointExtendedInfo::setObjectType(const QString &object_type) {
    m_object_type = object_type;
    m_object_type_isSet = true;
}

bool OAIOperationStatusRecoveryPointExtendedInfo::is_object_type_Set() const{
    return m_object_type_isSet;
}

bool OAIOperationStatusRecoveryPointExtendedInfo::is_object_type_Valid() const{
    return m_object_type_isValid;
}

bool OAIOperationStatusRecoveryPointExtendedInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deleted_backup_item_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_recovery_point.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOperationStatusRecoveryPointExtendedInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_object_type_isValid && true;
}

} // namespace OpenAPI
