/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-20
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAzureIaaSClassicComputeVMProtectedItem.h
 *
 * IaaS VM workload-specific backup item representing the Classic Compute VM.
 */

#ifndef OAIAzureIaaSClassicComputeVMProtectedItem_H
#define OAIAzureIaaSClassicComputeVMProtectedItem_H

#include <QJsonObject>

#include "OAIAzureIaaSVMHealthDetails.h"
#include "OAIAzureIaaSVMProtectedItem.h"
#include "OAIAzureIaaSVMProtectedItemExtendedInfo.h"
#include "OAIExtendedProperties.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAzureIaaSVMProtectedItemExtendedInfo;
class OAIExtendedProperties;
class OAIAzureIaaSVMHealthDetails;

class OAIAzureIaaSClassicComputeVMProtectedItem : public OAIObject {
public:
    OAIAzureIaaSClassicComputeVMProtectedItem();
    OAIAzureIaaSClassicComputeVMProtectedItem(QString json);
    ~OAIAzureIaaSClassicComputeVMProtectedItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAzureIaaSVMProtectedItemExtendedInfo getExtendedInfo() const;
    void setExtendedInfo(const OAIAzureIaaSVMProtectedItemExtendedInfo &extended_info);
    bool is_extended_info_Set() const;
    bool is_extended_info_Valid() const;

    OAIExtendedProperties getExtendedProperties() const;
    void setExtendedProperties(const OAIExtendedProperties &extended_properties);
    bool is_extended_properties_Set() const;
    bool is_extended_properties_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QList<OAIAzureIaaSVMHealthDetails> getHealthDetails() const;
    void setHealthDetails(const QList<OAIAzureIaaSVMHealthDetails> &health_details);
    bool is_health_details_Set() const;
    bool is_health_details_Valid() const;

    QString getHealthStatus() const;
    void setHealthStatus(const QString &health_status);
    bool is_health_status_Set() const;
    bool is_health_status_Valid() const;

    QString getLastBackupStatus() const;
    void setLastBackupStatus(const QString &last_backup_status);
    bool is_last_backup_status_Set() const;
    bool is_last_backup_status_Valid() const;

    QDateTime getLastBackupTime() const;
    void setLastBackupTime(const QDateTime &last_backup_time);
    bool is_last_backup_time_Set() const;
    bool is_last_backup_time_Valid() const;

    QString getProtectedItemDataId() const;
    void setProtectedItemDataId(const QString &protected_item_data_id);
    bool is_protected_item_data_id_Set() const;
    bool is_protected_item_data_id_Valid() const;

    QString getProtectionState() const;
    void setProtectionState(const QString &protection_state);
    bool is_protection_state_Set() const;
    bool is_protection_state_Valid() const;

    QString getProtectionStatus() const;
    void setProtectionStatus(const QString &protection_status);
    bool is_protection_status_Set() const;
    bool is_protection_status_Valid() const;

    QString getVirtualMachineId() const;
    void setVirtualMachineId(const QString &virtual_machine_id);
    bool is_virtual_machine_id_Set() const;
    bool is_virtual_machine_id_Valid() const;

    QString getBackupManagementType() const;
    void setBackupManagementType(const QString &backup_management_type);
    bool is_backup_management_type_Set() const;
    bool is_backup_management_type_Valid() const;

    QString getBackupSetName() const;
    void setBackupSetName(const QString &backup_set_name);
    bool is_backup_set_name_Set() const;
    bool is_backup_set_name_Valid() const;

    QString getContainerName() const;
    void setContainerName(const QString &container_name);
    bool is_container_name_Set() const;
    bool is_container_name_Valid() const;

    QString getCreateMode() const;
    void setCreateMode(const QString &create_mode);
    bool is_create_mode_Set() const;
    bool is_create_mode_Valid() const;

    QDateTime getDeferredDeleteTimeInUtc() const;
    void setDeferredDeleteTimeInUtc(const QDateTime &deferred_delete_time_in_utc);
    bool is_deferred_delete_time_in_utc_Set() const;
    bool is_deferred_delete_time_in_utc_Valid() const;

    QString getDeferredDeleteTimeRemaining() const;
    void setDeferredDeleteTimeRemaining(const QString &deferred_delete_time_remaining);
    bool is_deferred_delete_time_remaining_Set() const;
    bool is_deferred_delete_time_remaining_Valid() const;

    bool isIsDeferredDeleteScheduleUpcoming() const;
    void setIsDeferredDeleteScheduleUpcoming(const bool &is_deferred_delete_schedule_upcoming);
    bool is_is_deferred_delete_schedule_upcoming_Set() const;
    bool is_is_deferred_delete_schedule_upcoming_Valid() const;

    bool isIsRehydrate() const;
    void setIsRehydrate(const bool &is_rehydrate);
    bool is_is_rehydrate_Set() const;
    bool is_is_rehydrate_Valid() const;

    bool isIsScheduledForDeferredDelete() const;
    void setIsScheduledForDeferredDelete(const bool &is_scheduled_for_deferred_delete);
    bool is_is_scheduled_for_deferred_delete_Set() const;
    bool is_is_scheduled_for_deferred_delete_Valid() const;

    QDateTime getLastRecoveryPoint() const;
    void setLastRecoveryPoint(const QDateTime &last_recovery_point);
    bool is_last_recovery_point_Set() const;
    bool is_last_recovery_point_Valid() const;

    QString getPolicyId() const;
    void setPolicyId(const QString &policy_id);
    bool is_policy_id_Set() const;
    bool is_policy_id_Valid() const;

    QString getProtectedItemType() const;
    void setProtectedItemType(const QString &protected_item_type);
    bool is_protected_item_type_Set() const;
    bool is_protected_item_type_Valid() const;

    QString getSourceResourceId() const;
    void setSourceResourceId(const QString &source_resource_id);
    bool is_source_resource_id_Set() const;
    bool is_source_resource_id_Valid() const;

    QString getWorkloadType() const;
    void setWorkloadType(const QString &workload_type);
    bool is_workload_type_Set() const;
    bool is_workload_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAzureIaaSVMProtectedItemExtendedInfo m_extended_info;
    bool m_extended_info_isSet;
    bool m_extended_info_isValid;

    OAIExtendedProperties m_extended_properties;
    bool m_extended_properties_isSet;
    bool m_extended_properties_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QList<OAIAzureIaaSVMHealthDetails> m_health_details;
    bool m_health_details_isSet;
    bool m_health_details_isValid;

    QString m_health_status;
    bool m_health_status_isSet;
    bool m_health_status_isValid;

    QString m_last_backup_status;
    bool m_last_backup_status_isSet;
    bool m_last_backup_status_isValid;

    QDateTime m_last_backup_time;
    bool m_last_backup_time_isSet;
    bool m_last_backup_time_isValid;

    QString m_protected_item_data_id;
    bool m_protected_item_data_id_isSet;
    bool m_protected_item_data_id_isValid;

    QString m_protection_state;
    bool m_protection_state_isSet;
    bool m_protection_state_isValid;

    QString m_protection_status;
    bool m_protection_status_isSet;
    bool m_protection_status_isValid;

    QString m_virtual_machine_id;
    bool m_virtual_machine_id_isSet;
    bool m_virtual_machine_id_isValid;

    QString m_backup_management_type;
    bool m_backup_management_type_isSet;
    bool m_backup_management_type_isValid;

    QString m_backup_set_name;
    bool m_backup_set_name_isSet;
    bool m_backup_set_name_isValid;

    QString m_container_name;
    bool m_container_name_isSet;
    bool m_container_name_isValid;

    QString m_create_mode;
    bool m_create_mode_isSet;
    bool m_create_mode_isValid;

    QDateTime m_deferred_delete_time_in_utc;
    bool m_deferred_delete_time_in_utc_isSet;
    bool m_deferred_delete_time_in_utc_isValid;

    QString m_deferred_delete_time_remaining;
    bool m_deferred_delete_time_remaining_isSet;
    bool m_deferred_delete_time_remaining_isValid;

    bool m_is_deferred_delete_schedule_upcoming;
    bool m_is_deferred_delete_schedule_upcoming_isSet;
    bool m_is_deferred_delete_schedule_upcoming_isValid;

    bool m_is_rehydrate;
    bool m_is_rehydrate_isSet;
    bool m_is_rehydrate_isValid;

    bool m_is_scheduled_for_deferred_delete;
    bool m_is_scheduled_for_deferred_delete_isSet;
    bool m_is_scheduled_for_deferred_delete_isValid;

    QDateTime m_last_recovery_point;
    bool m_last_recovery_point_isSet;
    bool m_last_recovery_point_isValid;

    QString m_policy_id;
    bool m_policy_id_isSet;
    bool m_policy_id_isValid;

    QString m_protected_item_type;
    bool m_protected_item_type_isSet;
    bool m_protected_item_type_isValid;

    QString m_source_resource_id;
    bool m_source_resource_id_isSet;
    bool m_source_resource_id_isValid;

    QString m_workload_type;
    bool m_workload_type_isSet;
    bool m_workload_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAzureIaaSClassicComputeVMProtectedItem)

#endif // OAIAzureIaaSClassicComputeVMProtectedItem_H
