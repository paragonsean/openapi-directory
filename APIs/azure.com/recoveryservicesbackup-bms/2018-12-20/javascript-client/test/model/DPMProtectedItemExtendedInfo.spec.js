/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-20
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RecoveryServicesBackupClient);
  }
}(this, function(expect, RecoveryServicesBackupClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DPMProtectedItemExtendedInfo', function() {
    it('should create an instance of DPMProtectedItemExtendedInfo', function() {
      // uncomment below and update the code to test DPMProtectedItemExtendedInfo
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be.a(RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo);
    });

    it('should have the property diskStorageUsedInBytes (base name: "diskStorageUsedInBytes")', function() {
      // uncomment below and update the code to test the property diskStorageUsedInBytes
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property isCollocated (base name: "isCollocated")', function() {
      // uncomment below and update the code to test the property isCollocated
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property isPresentOnCloud (base name: "isPresentOnCloud")', function() {
      // uncomment below and update the code to test the property isPresentOnCloud
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property lastBackupStatus (base name: "lastBackupStatus")', function() {
      // uncomment below and update the code to test the property lastBackupStatus
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property lastRefreshedAt (base name: "lastRefreshedAt")', function() {
      // uncomment below and update the code to test the property lastRefreshedAt
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property oldestRecoveryPoint (base name: "oldestRecoveryPoint")', function() {
      // uncomment below and update the code to test the property oldestRecoveryPoint
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property onPremiseLatestRecoveryPoint (base name: "onPremiseLatestRecoveryPoint")', function() {
      // uncomment below and update the code to test the property onPremiseLatestRecoveryPoint
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property onPremiseOldestRecoveryPoint (base name: "onPremiseOldestRecoveryPoint")', function() {
      // uncomment below and update the code to test the property onPremiseOldestRecoveryPoint
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property onPremiseRecoveryPointCount (base name: "onPremiseRecoveryPointCount")', function() {
      // uncomment below and update the code to test the property onPremiseRecoveryPointCount
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property protectableObjectLoadPath (base name: "protectableObjectLoadPath")', function() {
      // uncomment below and update the code to test the property protectableObjectLoadPath
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property _protected (base name: "protected")', function() {
      // uncomment below and update the code to test the property _protected
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property protectionGroupName (base name: "protectionGroupName")', function() {
      // uncomment below and update the code to test the property protectionGroupName
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property recoveryPointCount (base name: "recoveryPointCount")', function() {
      // uncomment below and update the code to test the property recoveryPointCount
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

    it('should have the property totalDiskStorageSizeInBytes (base name: "totalDiskStorageSizeInBytes")', function() {
      // uncomment below and update the code to test the property totalDiskStorageSizeInBytes
      //var instance = new RecoveryServicesBackupClient.DPMProtectedItemExtendedInfo();
      //expect(instance).to.be();
    });

  });

}));
