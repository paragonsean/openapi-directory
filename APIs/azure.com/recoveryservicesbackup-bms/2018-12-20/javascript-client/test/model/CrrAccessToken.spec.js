/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-20
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RecoveryServicesBackupClient);
  }
}(this, function(expect, RecoveryServicesBackupClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RecoveryServicesBackupClient.CrrAccessToken();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CrrAccessToken', function() {
    it('should create an instance of CrrAccessToken', function() {
      // uncomment below and update the code to test CrrAccessToken
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be.a(RecoveryServicesBackupClient.CrrAccessToken);
    });

    it('should have the property accessTokenString (base name: "accessTokenString")', function() {
      // uncomment below and update the code to test the property accessTokenString
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property backupManagementType (base name: "backupManagementType")', function() {
      // uncomment below and update the code to test the property backupManagementType
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property containerName (base name: "containerName")', function() {
      // uncomment below and update the code to test the property containerName
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property containerType (base name: "containerType")', function() {
      // uncomment below and update the code to test the property containerType
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property coordinatorServiceStampId (base name: "coordinatorServiceStampId")', function() {
      // uncomment below and update the code to test the property coordinatorServiceStampId
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property coordinatorServiceStampUri (base name: "coordinatorServiceStampUri")', function() {
      // uncomment below and update the code to test the property coordinatorServiceStampUri
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property datasourceContainerName (base name: "datasourceContainerName")', function() {
      // uncomment below and update the code to test the property datasourceContainerName
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property datasourceId (base name: "datasourceId")', function() {
      // uncomment below and update the code to test the property datasourceId
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property datasourceName (base name: "datasourceName")', function() {
      // uncomment below and update the code to test the property datasourceName
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property datasourceType (base name: "datasourceType")', function() {
      // uncomment below and update the code to test the property datasourceType
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property protectionServiceStampId (base name: "protectionServiceStampId")', function() {
      // uncomment below and update the code to test the property protectionServiceStampId
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property protectionServiceStampUri (base name: "protectionServiceStampUri")', function() {
      // uncomment below and update the code to test the property protectionServiceStampUri
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property recoveryPointId (base name: "recoveryPointId")', function() {
      // uncomment below and update the code to test the property recoveryPointId
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property recoveryPointTime (base name: "recoveryPointTime")', function() {
      // uncomment below and update the code to test the property recoveryPointTime
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property resourceGroupName (base name: "resourceGroupName")', function() {
      // uncomment below and update the code to test the property resourceGroupName
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property resourceId (base name: "resourceId")', function() {
      // uncomment below and update the code to test the property resourceId
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property resourceName (base name: "resourceName")', function() {
      // uncomment below and update the code to test the property resourceName
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionId (base name: "subscriptionId")', function() {
      // uncomment below and update the code to test the property subscriptionId
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

    it('should have the property tokenExtendedInformation (base name: "tokenExtendedInformation")', function() {
      // uncomment below and update the code to test the property tokenExtendedInformation
      //var instance = new RecoveryServicesBackupClient.CrrAccessToken();
      //expect(instance).to.be();
    });

  });

}));
