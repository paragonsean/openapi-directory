/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-20
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CrrAccessToken model module.
 * @module model/CrrAccessToken
 * @version 2018-12-20
 */
class CrrAccessToken {
    /**
     * Constructs a new <code>CrrAccessToken</code>.
     * Container level access token for CRR
     * @alias module:model/CrrAccessToken
     */
    constructor() { 
        
        CrrAccessToken.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CrrAccessToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CrrAccessToken} obj Optional instance to populate.
     * @return {module:model/CrrAccessToken} The populated <code>CrrAccessToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CrrAccessToken();

            if (data.hasOwnProperty('accessTokenString')) {
                obj['accessTokenString'] = ApiClient.convertToType(data['accessTokenString'], 'String');
            }
            if (data.hasOwnProperty('backupManagementType')) {
                obj['backupManagementType'] = ApiClient.convertToType(data['backupManagementType'], 'String');
            }
            if (data.hasOwnProperty('containerName')) {
                obj['containerName'] = ApiClient.convertToType(data['containerName'], 'String');
            }
            if (data.hasOwnProperty('containerType')) {
                obj['containerType'] = ApiClient.convertToType(data['containerType'], 'String');
            }
            if (data.hasOwnProperty('coordinatorServiceStampId')) {
                obj['coordinatorServiceStampId'] = ApiClient.convertToType(data['coordinatorServiceStampId'], 'String');
            }
            if (data.hasOwnProperty('coordinatorServiceStampUri')) {
                obj['coordinatorServiceStampUri'] = ApiClient.convertToType(data['coordinatorServiceStampUri'], 'String');
            }
            if (data.hasOwnProperty('datasourceContainerName')) {
                obj['datasourceContainerName'] = ApiClient.convertToType(data['datasourceContainerName'], 'String');
            }
            if (data.hasOwnProperty('datasourceId')) {
                obj['datasourceId'] = ApiClient.convertToType(data['datasourceId'], 'String');
            }
            if (data.hasOwnProperty('datasourceName')) {
                obj['datasourceName'] = ApiClient.convertToType(data['datasourceName'], 'String');
            }
            if (data.hasOwnProperty('datasourceType')) {
                obj['datasourceType'] = ApiClient.convertToType(data['datasourceType'], 'String');
            }
            if (data.hasOwnProperty('protectionServiceStampId')) {
                obj['protectionServiceStampId'] = ApiClient.convertToType(data['protectionServiceStampId'], 'String');
            }
            if (data.hasOwnProperty('protectionServiceStampUri')) {
                obj['protectionServiceStampUri'] = ApiClient.convertToType(data['protectionServiceStampUri'], 'String');
            }
            if (data.hasOwnProperty('recoveryPointId')) {
                obj['recoveryPointId'] = ApiClient.convertToType(data['recoveryPointId'], 'String');
            }
            if (data.hasOwnProperty('recoveryPointTime')) {
                obj['recoveryPointTime'] = ApiClient.convertToType(data['recoveryPointTime'], 'String');
            }
            if (data.hasOwnProperty('resourceGroupName')) {
                obj['resourceGroupName'] = ApiClient.convertToType(data['resourceGroupName'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
            if (data.hasOwnProperty('tokenExtendedInformation')) {
                obj['tokenExtendedInformation'] = ApiClient.convertToType(data['tokenExtendedInformation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CrrAccessToken</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CrrAccessToken</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessTokenString'] && !(typeof data['accessTokenString'] === 'string' || data['accessTokenString'] instanceof String)) {
            throw new Error("Expected the field `accessTokenString` to be a primitive type in the JSON string but got " + data['accessTokenString']);
        }
        // ensure the json data is a string
        if (data['backupManagementType'] && !(typeof data['backupManagementType'] === 'string' || data['backupManagementType'] instanceof String)) {
            throw new Error("Expected the field `backupManagementType` to be a primitive type in the JSON string but got " + data['backupManagementType']);
        }
        // ensure the json data is a string
        if (data['containerName'] && !(typeof data['containerName'] === 'string' || data['containerName'] instanceof String)) {
            throw new Error("Expected the field `containerName` to be a primitive type in the JSON string but got " + data['containerName']);
        }
        // ensure the json data is a string
        if (data['containerType'] && !(typeof data['containerType'] === 'string' || data['containerType'] instanceof String)) {
            throw new Error("Expected the field `containerType` to be a primitive type in the JSON string but got " + data['containerType']);
        }
        // ensure the json data is a string
        if (data['coordinatorServiceStampId'] && !(typeof data['coordinatorServiceStampId'] === 'string' || data['coordinatorServiceStampId'] instanceof String)) {
            throw new Error("Expected the field `coordinatorServiceStampId` to be a primitive type in the JSON string but got " + data['coordinatorServiceStampId']);
        }
        // ensure the json data is a string
        if (data['coordinatorServiceStampUri'] && !(typeof data['coordinatorServiceStampUri'] === 'string' || data['coordinatorServiceStampUri'] instanceof String)) {
            throw new Error("Expected the field `coordinatorServiceStampUri` to be a primitive type in the JSON string but got " + data['coordinatorServiceStampUri']);
        }
        // ensure the json data is a string
        if (data['datasourceContainerName'] && !(typeof data['datasourceContainerName'] === 'string' || data['datasourceContainerName'] instanceof String)) {
            throw new Error("Expected the field `datasourceContainerName` to be a primitive type in the JSON string but got " + data['datasourceContainerName']);
        }
        // ensure the json data is a string
        if (data['datasourceId'] && !(typeof data['datasourceId'] === 'string' || data['datasourceId'] instanceof String)) {
            throw new Error("Expected the field `datasourceId` to be a primitive type in the JSON string but got " + data['datasourceId']);
        }
        // ensure the json data is a string
        if (data['datasourceName'] && !(typeof data['datasourceName'] === 'string' || data['datasourceName'] instanceof String)) {
            throw new Error("Expected the field `datasourceName` to be a primitive type in the JSON string but got " + data['datasourceName']);
        }
        // ensure the json data is a string
        if (data['datasourceType'] && !(typeof data['datasourceType'] === 'string' || data['datasourceType'] instanceof String)) {
            throw new Error("Expected the field `datasourceType` to be a primitive type in the JSON string but got " + data['datasourceType']);
        }
        // ensure the json data is a string
        if (data['protectionServiceStampId'] && !(typeof data['protectionServiceStampId'] === 'string' || data['protectionServiceStampId'] instanceof String)) {
            throw new Error("Expected the field `protectionServiceStampId` to be a primitive type in the JSON string but got " + data['protectionServiceStampId']);
        }
        // ensure the json data is a string
        if (data['protectionServiceStampUri'] && !(typeof data['protectionServiceStampUri'] === 'string' || data['protectionServiceStampUri'] instanceof String)) {
            throw new Error("Expected the field `protectionServiceStampUri` to be a primitive type in the JSON string but got " + data['protectionServiceStampUri']);
        }
        // ensure the json data is a string
        if (data['recoveryPointId'] && !(typeof data['recoveryPointId'] === 'string' || data['recoveryPointId'] instanceof String)) {
            throw new Error("Expected the field `recoveryPointId` to be a primitive type in the JSON string but got " + data['recoveryPointId']);
        }
        // ensure the json data is a string
        if (data['recoveryPointTime'] && !(typeof data['recoveryPointTime'] === 'string' || data['recoveryPointTime'] instanceof String)) {
            throw new Error("Expected the field `recoveryPointTime` to be a primitive type in the JSON string but got " + data['recoveryPointTime']);
        }
        // ensure the json data is a string
        if (data['resourceGroupName'] && !(typeof data['resourceGroupName'] === 'string' || data['resourceGroupName'] instanceof String)) {
            throw new Error("Expected the field `resourceGroupName` to be a primitive type in the JSON string but got " + data['resourceGroupName']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }
        // ensure the json data is a string
        if (data['tokenExtendedInformation'] && !(typeof data['tokenExtendedInformation'] === 'string' || data['tokenExtendedInformation'] instanceof String)) {
            throw new Error("Expected the field `tokenExtendedInformation` to be a primitive type in the JSON string but got " + data['tokenExtendedInformation']);
        }

        return true;
    }


}



/**
 * Access token used for authentication
 * @member {String} accessTokenString
 */
CrrAccessToken.prototype['accessTokenString'] = undefined;

/**
 * Backup Management Type
 * @member {String} backupManagementType
 */
CrrAccessToken.prototype['backupManagementType'] = undefined;

/**
 * Container Unique name
 * @member {String} containerName
 */
CrrAccessToken.prototype['containerName'] = undefined;

/**
 * Container Type
 * @member {String} containerType
 */
CrrAccessToken.prototype['containerType'] = undefined;

/**
 * CoordinatorServiceStampId to be used by BCM in restore call
 * @member {String} coordinatorServiceStampId
 */
CrrAccessToken.prototype['coordinatorServiceStampId'] = undefined;

/**
 * CoordinatorServiceStampUri to be used by BCM in restore call
 * @member {String} coordinatorServiceStampUri
 */
CrrAccessToken.prototype['coordinatorServiceStampUri'] = undefined;

/**
 * Datasource Container Unique Name
 * @member {String} datasourceContainerName
 */
CrrAccessToken.prototype['datasourceContainerName'] = undefined;

/**
 * Datasource Id
 * @member {String} datasourceId
 */
CrrAccessToken.prototype['datasourceId'] = undefined;

/**
 * Datasource Friendly Name
 * @member {String} datasourceName
 */
CrrAccessToken.prototype['datasourceName'] = undefined;

/**
 * Datasource Type
 * @member {String} datasourceType
 */
CrrAccessToken.prototype['datasourceType'] = undefined;

/**
 * ProtectionServiceStampId to be used by BCM in restore call
 * @member {String} protectionServiceStampId
 */
CrrAccessToken.prototype['protectionServiceStampId'] = undefined;

/**
 * ProtectionServiceStampUri to be used by BCM in restore call
 * @member {String} protectionServiceStampUri
 */
CrrAccessToken.prototype['protectionServiceStampUri'] = undefined;

/**
 * Recovery Point Id
 * @member {String} recoveryPointId
 */
CrrAccessToken.prototype['recoveryPointId'] = undefined;

/**
 * Recovery Point Time
 * @member {String} recoveryPointTime
 */
CrrAccessToken.prototype['recoveryPointTime'] = undefined;

/**
 * Resource Group name of the source vault
 * @member {String} resourceGroupName
 */
CrrAccessToken.prototype['resourceGroupName'] = undefined;

/**
 * Resource Id of the source vault
 * @member {String} resourceId
 */
CrrAccessToken.prototype['resourceId'] = undefined;

/**
 * Resource Name of the source vault
 * @member {String} resourceName
 */
CrrAccessToken.prototype['resourceName'] = undefined;

/**
 * Subscription Id of the source vault
 * @member {String} subscriptionId
 */
CrrAccessToken.prototype['subscriptionId'] = undefined;

/**
 * Extended Information about the token like FileSpec etc.
 * @member {String} tokenExtendedInformation
 */
CrrAccessToken.prototype['tokenExtendedInformation'] = undefined;






export default CrrAccessToken;

