/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-20
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AADProperties model module.
 * @module model/AADProperties
 * @version 2018-12-20
 */
class AADProperties {
    /**
     * Constructs a new <code>AADProperties</code>.
     * @alias module:model/AADProperties
     */
    constructor() { 
        
        AADProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AADProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AADProperties} obj Optional instance to populate.
     * @return {module:model/AADProperties} The populated <code>AADProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AADProperties();

            if (data.hasOwnProperty('audience')) {
                obj['audience'] = ApiClient.convertToType(data['audience'], 'String');
            }
            if (data.hasOwnProperty('authority')) {
                obj['authority'] = ApiClient.convertToType(data['authority'], 'String');
            }
            if (data.hasOwnProperty('servicePrincipalClientId')) {
                obj['servicePrincipalClientId'] = ApiClient.convertToType(data['servicePrincipalClientId'], 'String');
            }
            if (data.hasOwnProperty('servicePrincipalObjectId')) {
                obj['servicePrincipalObjectId'] = ApiClient.convertToType(data['servicePrincipalObjectId'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AADProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AADProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['audience'] && !(typeof data['audience'] === 'string' || data['audience'] instanceof String)) {
            throw new Error("Expected the field `audience` to be a primitive type in the JSON string but got " + data['audience']);
        }
        // ensure the json data is a string
        if (data['authority'] && !(typeof data['authority'] === 'string' || data['authority'] instanceof String)) {
            throw new Error("Expected the field `authority` to be a primitive type in the JSON string but got " + data['authority']);
        }
        // ensure the json data is a string
        if (data['servicePrincipalClientId'] && !(typeof data['servicePrincipalClientId'] === 'string' || data['servicePrincipalClientId'] instanceof String)) {
            throw new Error("Expected the field `servicePrincipalClientId` to be a primitive type in the JSON string but got " + data['servicePrincipalClientId']);
        }
        // ensure the json data is a string
        if (data['servicePrincipalObjectId'] && !(typeof data['servicePrincipalObjectId'] === 'string' || data['servicePrincipalObjectId'] instanceof String)) {
            throw new Error("Expected the field `servicePrincipalObjectId` to be a primitive type in the JSON string but got " + data['servicePrincipalObjectId']);
        }
        // ensure the json data is a string
        if (data['tenantId'] && !(typeof data['tenantId'] === 'string' || data['tenantId'] instanceof String)) {
            throw new Error("Expected the field `tenantId` to be a primitive type in the JSON string but got " + data['tenantId']);
        }

        return true;
    }


}



/**
 * @member {String} audience
 */
AADProperties.prototype['audience'] = undefined;

/**
 * @member {String} authority
 */
AADProperties.prototype['authority'] = undefined;

/**
 * @member {String} servicePrincipalClientId
 */
AADProperties.prototype['servicePrincipalClientId'] = undefined;

/**
 * @member {String} servicePrincipalObjectId
 */
AADProperties.prototype['servicePrincipalObjectId'] = undefined;

/**
 * @member {String} tenantId
 */
AADProperties.prototype['tenantId'] = undefined;






export default AADProperties;

