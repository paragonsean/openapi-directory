/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-12-20
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EncryptionDetails model module.
 * @module model/EncryptionDetails
 * @version 2018-12-20
 */
class EncryptionDetails {
    /**
     * Constructs a new <code>EncryptionDetails</code>.
     * Details needed if the VM was encrypted at the time of backup.
     * @alias module:model/EncryptionDetails
     */
    constructor() { 
        
        EncryptionDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EncryptionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EncryptionDetails} obj Optional instance to populate.
     * @return {module:model/EncryptionDetails} The populated <code>EncryptionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EncryptionDetails();

            if (data.hasOwnProperty('encryptionEnabled')) {
                obj['encryptionEnabled'] = ApiClient.convertToType(data['encryptionEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('kekUrl')) {
                obj['kekUrl'] = ApiClient.convertToType(data['kekUrl'], 'String');
            }
            if (data.hasOwnProperty('kekVaultId')) {
                obj['kekVaultId'] = ApiClient.convertToType(data['kekVaultId'], 'String');
            }
            if (data.hasOwnProperty('secretKeyUrl')) {
                obj['secretKeyUrl'] = ApiClient.convertToType(data['secretKeyUrl'], 'String');
            }
            if (data.hasOwnProperty('secretKeyVaultId')) {
                obj['secretKeyVaultId'] = ApiClient.convertToType(data['secretKeyVaultId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EncryptionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EncryptionDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kekUrl'] && !(typeof data['kekUrl'] === 'string' || data['kekUrl'] instanceof String)) {
            throw new Error("Expected the field `kekUrl` to be a primitive type in the JSON string but got " + data['kekUrl']);
        }
        // ensure the json data is a string
        if (data['kekVaultId'] && !(typeof data['kekVaultId'] === 'string' || data['kekVaultId'] instanceof String)) {
            throw new Error("Expected the field `kekVaultId` to be a primitive type in the JSON string but got " + data['kekVaultId']);
        }
        // ensure the json data is a string
        if (data['secretKeyUrl'] && !(typeof data['secretKeyUrl'] === 'string' || data['secretKeyUrl'] instanceof String)) {
            throw new Error("Expected the field `secretKeyUrl` to be a primitive type in the JSON string but got " + data['secretKeyUrl']);
        }
        // ensure the json data is a string
        if (data['secretKeyVaultId'] && !(typeof data['secretKeyVaultId'] === 'string' || data['secretKeyVaultId'] instanceof String)) {
            throw new Error("Expected the field `secretKeyVaultId` to be a primitive type in the JSON string but got " + data['secretKeyVaultId']);
        }

        return true;
    }


}



/**
 * Identifies whether this backup copy represents an encrypted VM at the time of backup.
 * @member {Boolean} encryptionEnabled
 */
EncryptionDetails.prototype['encryptionEnabled'] = undefined;

/**
 * Key Url.
 * @member {String} kekUrl
 */
EncryptionDetails.prototype['kekUrl'] = undefined;

/**
 * ID of Key Vault where KEK is stored.
 * @member {String} kekVaultId
 */
EncryptionDetails.prototype['kekVaultId'] = undefined;

/**
 * Secret Url.
 * @member {String} secretKeyUrl
 */
EncryptionDetails.prototype['secretKeyUrl'] = undefined;

/**
 * ID of Key Vault where Secret is stored.
 * @member {String} secretKeyVaultId
 */
EncryptionDetails.prototype['secretKeyVaultId'] = undefined;






export default EncryptionDetails;

