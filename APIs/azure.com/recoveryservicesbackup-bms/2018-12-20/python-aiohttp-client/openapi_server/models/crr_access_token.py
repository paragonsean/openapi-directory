# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CrrAccessToken(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_token_string: str=None, backup_management_type: str=None, container_name: str=None, container_type: str=None, coordinator_service_stamp_id: str=None, coordinator_service_stamp_uri: str=None, datasource_container_name: str=None, datasource_id: str=None, datasource_name: str=None, datasource_type: str=None, protection_service_stamp_id: str=None, protection_service_stamp_uri: str=None, recovery_point_id: str=None, recovery_point_time: str=None, resource_group_name: str=None, resource_id: str=None, resource_name: str=None, subscription_id: str=None, token_extended_information: str=None):
        """CrrAccessToken - a model defined in OpenAPI

        :param access_token_string: The access_token_string of this CrrAccessToken.
        :param backup_management_type: The backup_management_type of this CrrAccessToken.
        :param container_name: The container_name of this CrrAccessToken.
        :param container_type: The container_type of this CrrAccessToken.
        :param coordinator_service_stamp_id: The coordinator_service_stamp_id of this CrrAccessToken.
        :param coordinator_service_stamp_uri: The coordinator_service_stamp_uri of this CrrAccessToken.
        :param datasource_container_name: The datasource_container_name of this CrrAccessToken.
        :param datasource_id: The datasource_id of this CrrAccessToken.
        :param datasource_name: The datasource_name of this CrrAccessToken.
        :param datasource_type: The datasource_type of this CrrAccessToken.
        :param protection_service_stamp_id: The protection_service_stamp_id of this CrrAccessToken.
        :param protection_service_stamp_uri: The protection_service_stamp_uri of this CrrAccessToken.
        :param recovery_point_id: The recovery_point_id of this CrrAccessToken.
        :param recovery_point_time: The recovery_point_time of this CrrAccessToken.
        :param resource_group_name: The resource_group_name of this CrrAccessToken.
        :param resource_id: The resource_id of this CrrAccessToken.
        :param resource_name: The resource_name of this CrrAccessToken.
        :param subscription_id: The subscription_id of this CrrAccessToken.
        :param token_extended_information: The token_extended_information of this CrrAccessToken.
        """
        self.openapi_types = {
            'access_token_string': str,
            'backup_management_type': str,
            'container_name': str,
            'container_type': str,
            'coordinator_service_stamp_id': str,
            'coordinator_service_stamp_uri': str,
            'datasource_container_name': str,
            'datasource_id': str,
            'datasource_name': str,
            'datasource_type': str,
            'protection_service_stamp_id': str,
            'protection_service_stamp_uri': str,
            'recovery_point_id': str,
            'recovery_point_time': str,
            'resource_group_name': str,
            'resource_id': str,
            'resource_name': str,
            'subscription_id': str,
            'token_extended_information': str
        }

        self.attribute_map = {
            'access_token_string': 'accessTokenString',
            'backup_management_type': 'backupManagementType',
            'container_name': 'containerName',
            'container_type': 'containerType',
            'coordinator_service_stamp_id': 'coordinatorServiceStampId',
            'coordinator_service_stamp_uri': 'coordinatorServiceStampUri',
            'datasource_container_name': 'datasourceContainerName',
            'datasource_id': 'datasourceId',
            'datasource_name': 'datasourceName',
            'datasource_type': 'datasourceType',
            'protection_service_stamp_id': 'protectionServiceStampId',
            'protection_service_stamp_uri': 'protectionServiceStampUri',
            'recovery_point_id': 'recoveryPointId',
            'recovery_point_time': 'recoveryPointTime',
            'resource_group_name': 'resourceGroupName',
            'resource_id': 'resourceId',
            'resource_name': 'resourceName',
            'subscription_id': 'subscriptionId',
            'token_extended_information': 'tokenExtendedInformation'
        }

        self._access_token_string = access_token_string
        self._backup_management_type = backup_management_type
        self._container_name = container_name
        self._container_type = container_type
        self._coordinator_service_stamp_id = coordinator_service_stamp_id
        self._coordinator_service_stamp_uri = coordinator_service_stamp_uri
        self._datasource_container_name = datasource_container_name
        self._datasource_id = datasource_id
        self._datasource_name = datasource_name
        self._datasource_type = datasource_type
        self._protection_service_stamp_id = protection_service_stamp_id
        self._protection_service_stamp_uri = protection_service_stamp_uri
        self._recovery_point_id = recovery_point_id
        self._recovery_point_time = recovery_point_time
        self._resource_group_name = resource_group_name
        self._resource_id = resource_id
        self._resource_name = resource_name
        self._subscription_id = subscription_id
        self._token_extended_information = token_extended_information

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CrrAccessToken':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CrrAccessToken of this CrrAccessToken.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token_string(self):
        """Gets the access_token_string of this CrrAccessToken.

        Access token used for authentication

        :return: The access_token_string of this CrrAccessToken.
        :rtype: str
        """
        return self._access_token_string

    @access_token_string.setter
    def access_token_string(self, access_token_string):
        """Sets the access_token_string of this CrrAccessToken.

        Access token used for authentication

        :param access_token_string: The access_token_string of this CrrAccessToken.
        :type access_token_string: str
        """

        self._access_token_string = access_token_string

    @property
    def backup_management_type(self):
        """Gets the backup_management_type of this CrrAccessToken.

        Backup Management Type

        :return: The backup_management_type of this CrrAccessToken.
        :rtype: str
        """
        return self._backup_management_type

    @backup_management_type.setter
    def backup_management_type(self, backup_management_type):
        """Sets the backup_management_type of this CrrAccessToken.

        Backup Management Type

        :param backup_management_type: The backup_management_type of this CrrAccessToken.
        :type backup_management_type: str
        """

        self._backup_management_type = backup_management_type

    @property
    def container_name(self):
        """Gets the container_name of this CrrAccessToken.

        Container Unique name

        :return: The container_name of this CrrAccessToken.
        :rtype: str
        """
        return self._container_name

    @container_name.setter
    def container_name(self, container_name):
        """Sets the container_name of this CrrAccessToken.

        Container Unique name

        :param container_name: The container_name of this CrrAccessToken.
        :type container_name: str
        """

        self._container_name = container_name

    @property
    def container_type(self):
        """Gets the container_type of this CrrAccessToken.

        Container Type

        :return: The container_type of this CrrAccessToken.
        :rtype: str
        """
        return self._container_type

    @container_type.setter
    def container_type(self, container_type):
        """Sets the container_type of this CrrAccessToken.

        Container Type

        :param container_type: The container_type of this CrrAccessToken.
        :type container_type: str
        """

        self._container_type = container_type

    @property
    def coordinator_service_stamp_id(self):
        """Gets the coordinator_service_stamp_id of this CrrAccessToken.

        CoordinatorServiceStampId to be used by BCM in restore call

        :return: The coordinator_service_stamp_id of this CrrAccessToken.
        :rtype: str
        """
        return self._coordinator_service_stamp_id

    @coordinator_service_stamp_id.setter
    def coordinator_service_stamp_id(self, coordinator_service_stamp_id):
        """Sets the coordinator_service_stamp_id of this CrrAccessToken.

        CoordinatorServiceStampId to be used by BCM in restore call

        :param coordinator_service_stamp_id: The coordinator_service_stamp_id of this CrrAccessToken.
        :type coordinator_service_stamp_id: str
        """

        self._coordinator_service_stamp_id = coordinator_service_stamp_id

    @property
    def coordinator_service_stamp_uri(self):
        """Gets the coordinator_service_stamp_uri of this CrrAccessToken.

        CoordinatorServiceStampUri to be used by BCM in restore call

        :return: The coordinator_service_stamp_uri of this CrrAccessToken.
        :rtype: str
        """
        return self._coordinator_service_stamp_uri

    @coordinator_service_stamp_uri.setter
    def coordinator_service_stamp_uri(self, coordinator_service_stamp_uri):
        """Sets the coordinator_service_stamp_uri of this CrrAccessToken.

        CoordinatorServiceStampUri to be used by BCM in restore call

        :param coordinator_service_stamp_uri: The coordinator_service_stamp_uri of this CrrAccessToken.
        :type coordinator_service_stamp_uri: str
        """

        self._coordinator_service_stamp_uri = coordinator_service_stamp_uri

    @property
    def datasource_container_name(self):
        """Gets the datasource_container_name of this CrrAccessToken.

        Datasource Container Unique Name

        :return: The datasource_container_name of this CrrAccessToken.
        :rtype: str
        """
        return self._datasource_container_name

    @datasource_container_name.setter
    def datasource_container_name(self, datasource_container_name):
        """Sets the datasource_container_name of this CrrAccessToken.

        Datasource Container Unique Name

        :param datasource_container_name: The datasource_container_name of this CrrAccessToken.
        :type datasource_container_name: str
        """

        self._datasource_container_name = datasource_container_name

    @property
    def datasource_id(self):
        """Gets the datasource_id of this CrrAccessToken.

        Datasource Id

        :return: The datasource_id of this CrrAccessToken.
        :rtype: str
        """
        return self._datasource_id

    @datasource_id.setter
    def datasource_id(self, datasource_id):
        """Sets the datasource_id of this CrrAccessToken.

        Datasource Id

        :param datasource_id: The datasource_id of this CrrAccessToken.
        :type datasource_id: str
        """

        self._datasource_id = datasource_id

    @property
    def datasource_name(self):
        """Gets the datasource_name of this CrrAccessToken.

        Datasource Friendly Name

        :return: The datasource_name of this CrrAccessToken.
        :rtype: str
        """
        return self._datasource_name

    @datasource_name.setter
    def datasource_name(self, datasource_name):
        """Sets the datasource_name of this CrrAccessToken.

        Datasource Friendly Name

        :param datasource_name: The datasource_name of this CrrAccessToken.
        :type datasource_name: str
        """

        self._datasource_name = datasource_name

    @property
    def datasource_type(self):
        """Gets the datasource_type of this CrrAccessToken.

        Datasource Type

        :return: The datasource_type of this CrrAccessToken.
        :rtype: str
        """
        return self._datasource_type

    @datasource_type.setter
    def datasource_type(self, datasource_type):
        """Sets the datasource_type of this CrrAccessToken.

        Datasource Type

        :param datasource_type: The datasource_type of this CrrAccessToken.
        :type datasource_type: str
        """

        self._datasource_type = datasource_type

    @property
    def protection_service_stamp_id(self):
        """Gets the protection_service_stamp_id of this CrrAccessToken.

        ProtectionServiceStampId to be used by BCM in restore call

        :return: The protection_service_stamp_id of this CrrAccessToken.
        :rtype: str
        """
        return self._protection_service_stamp_id

    @protection_service_stamp_id.setter
    def protection_service_stamp_id(self, protection_service_stamp_id):
        """Sets the protection_service_stamp_id of this CrrAccessToken.

        ProtectionServiceStampId to be used by BCM in restore call

        :param protection_service_stamp_id: The protection_service_stamp_id of this CrrAccessToken.
        :type protection_service_stamp_id: str
        """

        self._protection_service_stamp_id = protection_service_stamp_id

    @property
    def protection_service_stamp_uri(self):
        """Gets the protection_service_stamp_uri of this CrrAccessToken.

        ProtectionServiceStampUri to be used by BCM in restore call

        :return: The protection_service_stamp_uri of this CrrAccessToken.
        :rtype: str
        """
        return self._protection_service_stamp_uri

    @protection_service_stamp_uri.setter
    def protection_service_stamp_uri(self, protection_service_stamp_uri):
        """Sets the protection_service_stamp_uri of this CrrAccessToken.

        ProtectionServiceStampUri to be used by BCM in restore call

        :param protection_service_stamp_uri: The protection_service_stamp_uri of this CrrAccessToken.
        :type protection_service_stamp_uri: str
        """

        self._protection_service_stamp_uri = protection_service_stamp_uri

    @property
    def recovery_point_id(self):
        """Gets the recovery_point_id of this CrrAccessToken.

        Recovery Point Id

        :return: The recovery_point_id of this CrrAccessToken.
        :rtype: str
        """
        return self._recovery_point_id

    @recovery_point_id.setter
    def recovery_point_id(self, recovery_point_id):
        """Sets the recovery_point_id of this CrrAccessToken.

        Recovery Point Id

        :param recovery_point_id: The recovery_point_id of this CrrAccessToken.
        :type recovery_point_id: str
        """

        self._recovery_point_id = recovery_point_id

    @property
    def recovery_point_time(self):
        """Gets the recovery_point_time of this CrrAccessToken.

        Recovery Point Time

        :return: The recovery_point_time of this CrrAccessToken.
        :rtype: str
        """
        return self._recovery_point_time

    @recovery_point_time.setter
    def recovery_point_time(self, recovery_point_time):
        """Sets the recovery_point_time of this CrrAccessToken.

        Recovery Point Time

        :param recovery_point_time: The recovery_point_time of this CrrAccessToken.
        :type recovery_point_time: str
        """

        self._recovery_point_time = recovery_point_time

    @property
    def resource_group_name(self):
        """Gets the resource_group_name of this CrrAccessToken.

        Resource Group name of the source vault

        :return: The resource_group_name of this CrrAccessToken.
        :rtype: str
        """
        return self._resource_group_name

    @resource_group_name.setter
    def resource_group_name(self, resource_group_name):
        """Sets the resource_group_name of this CrrAccessToken.

        Resource Group name of the source vault

        :param resource_group_name: The resource_group_name of this CrrAccessToken.
        :type resource_group_name: str
        """

        self._resource_group_name = resource_group_name

    @property
    def resource_id(self):
        """Gets the resource_id of this CrrAccessToken.

        Resource Id of the source vault

        :return: The resource_id of this CrrAccessToken.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this CrrAccessToken.

        Resource Id of the source vault

        :param resource_id: The resource_id of this CrrAccessToken.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def resource_name(self):
        """Gets the resource_name of this CrrAccessToken.

        Resource Name of the source vault

        :return: The resource_name of this CrrAccessToken.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this CrrAccessToken.

        Resource Name of the source vault

        :param resource_name: The resource_name of this CrrAccessToken.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def subscription_id(self):
        """Gets the subscription_id of this CrrAccessToken.

        Subscription Id of the source vault

        :return: The subscription_id of this CrrAccessToken.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this CrrAccessToken.

        Subscription Id of the source vault

        :param subscription_id: The subscription_id of this CrrAccessToken.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def token_extended_information(self):
        """Gets the token_extended_information of this CrrAccessToken.

        Extended Information about the token like FileSpec etc.

        :return: The token_extended_information of this CrrAccessToken.
        :rtype: str
        """
        return self._token_extended_information

    @token_extended_information.setter
    def token_extended_information(self, token_extended_information):
        """Sets the token_extended_information of this CrrAccessToken.

        Extended Information about the token like FileSpec etc.

        :param token_extended_information: The token_extended_information of this CrrAccessToken.
        :type token_extended_information: str
        """

        self._token_extended_information = token_extended_information
