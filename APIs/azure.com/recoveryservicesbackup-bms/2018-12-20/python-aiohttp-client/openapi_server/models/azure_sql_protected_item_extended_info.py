# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AzureSqlProtectedItemExtendedInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, oldest_recovery_point: datetime=None, policy_state: str=None, recovery_point_count: int=None):
        """AzureSqlProtectedItemExtendedInfo - a model defined in OpenAPI

        :param oldest_recovery_point: The oldest_recovery_point of this AzureSqlProtectedItemExtendedInfo.
        :param policy_state: The policy_state of this AzureSqlProtectedItemExtendedInfo.
        :param recovery_point_count: The recovery_point_count of this AzureSqlProtectedItemExtendedInfo.
        """
        self.openapi_types = {
            'oldest_recovery_point': datetime,
            'policy_state': str,
            'recovery_point_count': int
        }

        self.attribute_map = {
            'oldest_recovery_point': 'oldestRecoveryPoint',
            'policy_state': 'policyState',
            'recovery_point_count': 'recoveryPointCount'
        }

        self._oldest_recovery_point = oldest_recovery_point
        self._policy_state = policy_state
        self._recovery_point_count = recovery_point_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureSqlProtectedItemExtendedInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureSqlProtectedItemExtendedInfo of this AzureSqlProtectedItemExtendedInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def oldest_recovery_point(self):
        """Gets the oldest_recovery_point of this AzureSqlProtectedItemExtendedInfo.

        The oldest backup copy available for this item in the service.

        :return: The oldest_recovery_point of this AzureSqlProtectedItemExtendedInfo.
        :rtype: datetime
        """
        return self._oldest_recovery_point

    @oldest_recovery_point.setter
    def oldest_recovery_point(self, oldest_recovery_point):
        """Sets the oldest_recovery_point of this AzureSqlProtectedItemExtendedInfo.

        The oldest backup copy available for this item in the service.

        :param oldest_recovery_point: The oldest_recovery_point of this AzureSqlProtectedItemExtendedInfo.
        :type oldest_recovery_point: datetime
        """

        self._oldest_recovery_point = oldest_recovery_point

    @property
    def policy_state(self):
        """Gets the policy_state of this AzureSqlProtectedItemExtendedInfo.

        State of the backup policy associated with this backup item.

        :return: The policy_state of this AzureSqlProtectedItemExtendedInfo.
        :rtype: str
        """
        return self._policy_state

    @policy_state.setter
    def policy_state(self, policy_state):
        """Sets the policy_state of this AzureSqlProtectedItemExtendedInfo.

        State of the backup policy associated with this backup item.

        :param policy_state: The policy_state of this AzureSqlProtectedItemExtendedInfo.
        :type policy_state: str
        """

        self._policy_state = policy_state

    @property
    def recovery_point_count(self):
        """Gets the recovery_point_count of this AzureSqlProtectedItemExtendedInfo.

        Number of available backup copies associated with this backup item.

        :return: The recovery_point_count of this AzureSqlProtectedItemExtendedInfo.
        :rtype: int
        """
        return self._recovery_point_count

    @recovery_point_count.setter
    def recovery_point_count(self, recovery_point_count):
        """Sets the recovery_point_count of this AzureSqlProtectedItemExtendedInfo.

        Number of available backup copies associated with this backup item.

        :param recovery_point_count: The recovery_point_count of this AzureSqlProtectedItemExtendedInfo.
        :type recovery_point_count: int
        """

        self._recovery_point_count = recovery_point_count
