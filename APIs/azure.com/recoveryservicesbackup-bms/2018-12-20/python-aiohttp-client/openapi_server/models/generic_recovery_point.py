# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recovery_point import RecoveryPoint
from openapi_server import util


class GenericRecoveryPoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, friendly_name: str=None, recovery_point_additional_info: str=None, recovery_point_time: datetime=None, recovery_point_type: str=None, object_type: str=None):
        """GenericRecoveryPoint - a model defined in OpenAPI

        :param friendly_name: The friendly_name of this GenericRecoveryPoint.
        :param recovery_point_additional_info: The recovery_point_additional_info of this GenericRecoveryPoint.
        :param recovery_point_time: The recovery_point_time of this GenericRecoveryPoint.
        :param recovery_point_type: The recovery_point_type of this GenericRecoveryPoint.
        :param object_type: The object_type of this GenericRecoveryPoint.
        """
        self.openapi_types = {
            'friendly_name': str,
            'recovery_point_additional_info': str,
            'recovery_point_time': datetime,
            'recovery_point_type': str,
            'object_type': str
        }

        self.attribute_map = {
            'friendly_name': 'friendlyName',
            'recovery_point_additional_info': 'recoveryPointAdditionalInfo',
            'recovery_point_time': 'recoveryPointTime',
            'recovery_point_type': 'recoveryPointType',
            'object_type': 'objectType'
        }

        self._friendly_name = friendly_name
        self._recovery_point_additional_info = recovery_point_additional_info
        self._recovery_point_time = recovery_point_time
        self._recovery_point_type = recovery_point_type
        self._object_type = object_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenericRecoveryPoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenericRecoveryPoint of this GenericRecoveryPoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def friendly_name(self):
        """Gets the friendly_name of this GenericRecoveryPoint.

        Friendly name of the backup copy.

        :return: The friendly_name of this GenericRecoveryPoint.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this GenericRecoveryPoint.

        Friendly name of the backup copy.

        :param friendly_name: The friendly_name of this GenericRecoveryPoint.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def recovery_point_additional_info(self):
        """Gets the recovery_point_additional_info of this GenericRecoveryPoint.

        Additional information associated with this backup copy.

        :return: The recovery_point_additional_info of this GenericRecoveryPoint.
        :rtype: str
        """
        return self._recovery_point_additional_info

    @recovery_point_additional_info.setter
    def recovery_point_additional_info(self, recovery_point_additional_info):
        """Sets the recovery_point_additional_info of this GenericRecoveryPoint.

        Additional information associated with this backup copy.

        :param recovery_point_additional_info: The recovery_point_additional_info of this GenericRecoveryPoint.
        :type recovery_point_additional_info: str
        """

        self._recovery_point_additional_info = recovery_point_additional_info

    @property
    def recovery_point_time(self):
        """Gets the recovery_point_time of this GenericRecoveryPoint.

        Time at which this backup copy was created.

        :return: The recovery_point_time of this GenericRecoveryPoint.
        :rtype: datetime
        """
        return self._recovery_point_time

    @recovery_point_time.setter
    def recovery_point_time(self, recovery_point_time):
        """Sets the recovery_point_time of this GenericRecoveryPoint.

        Time at which this backup copy was created.

        :param recovery_point_time: The recovery_point_time of this GenericRecoveryPoint.
        :type recovery_point_time: datetime
        """

        self._recovery_point_time = recovery_point_time

    @property
    def recovery_point_type(self):
        """Gets the recovery_point_type of this GenericRecoveryPoint.

        Type of the backup copy.

        :return: The recovery_point_type of this GenericRecoveryPoint.
        :rtype: str
        """
        return self._recovery_point_type

    @recovery_point_type.setter
    def recovery_point_type(self, recovery_point_type):
        """Sets the recovery_point_type of this GenericRecoveryPoint.

        Type of the backup copy.

        :param recovery_point_type: The recovery_point_type of this GenericRecoveryPoint.
        :type recovery_point_type: str
        """

        self._recovery_point_type = recovery_point_type

    @property
    def object_type(self):
        """Gets the object_type of this GenericRecoveryPoint.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :return: The object_type of this GenericRecoveryPoint.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this GenericRecoveryPoint.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :param object_type: The object_type of this GenericRecoveryPoint.
        :type object_type: str
        """
        if object_type is None:
            raise ValueError("Invalid value for `object_type`, must not be `None`")

        self._object_type = object_type
