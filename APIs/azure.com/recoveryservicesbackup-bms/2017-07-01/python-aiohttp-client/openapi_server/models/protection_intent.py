# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProtectionIntent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_management_type: str=None, item_id: str=None, policy_id: str=None, protection_intent_item_type: str=None, protection_state: str=None, source_resource_id: str=None):
        """ProtectionIntent - a model defined in OpenAPI

        :param backup_management_type: The backup_management_type of this ProtectionIntent.
        :param item_id: The item_id of this ProtectionIntent.
        :param policy_id: The policy_id of this ProtectionIntent.
        :param protection_intent_item_type: The protection_intent_item_type of this ProtectionIntent.
        :param protection_state: The protection_state of this ProtectionIntent.
        :param source_resource_id: The source_resource_id of this ProtectionIntent.
        """
        self.openapi_types = {
            'backup_management_type': str,
            'item_id': str,
            'policy_id': str,
            'protection_intent_item_type': str,
            'protection_state': str,
            'source_resource_id': str
        }

        self.attribute_map = {
            'backup_management_type': 'backupManagementType',
            'item_id': 'itemId',
            'policy_id': 'policyId',
            'protection_intent_item_type': 'protectionIntentItemType',
            'protection_state': 'protectionState',
            'source_resource_id': 'sourceResourceId'
        }

        self._backup_management_type = backup_management_type
        self._item_id = item_id
        self._policy_id = policy_id
        self._protection_intent_item_type = protection_intent_item_type
        self._protection_state = protection_state
        self._source_resource_id = source_resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProtectionIntent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProtectionIntent of this ProtectionIntent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_management_type(self):
        """Gets the backup_management_type of this ProtectionIntent.

        Type of backup management for the backed up item.

        :return: The backup_management_type of this ProtectionIntent.
        :rtype: str
        """
        return self._backup_management_type

    @backup_management_type.setter
    def backup_management_type(self, backup_management_type):
        """Sets the backup_management_type of this ProtectionIntent.

        Type of backup management for the backed up item.

        :param backup_management_type: The backup_management_type of this ProtectionIntent.
        :type backup_management_type: str
        """
        allowed_values = ["Invalid", "AzureIaasVM", "MAB", "DPM", "AzureBackupServer", "AzureSql", "AzureStorage", "AzureWorkload", "DefaultBackup"]  # noqa: E501
        if backup_management_type not in allowed_values:
            raise ValueError(
                "Invalid value for `backup_management_type` ({0}), must be one of {1}"
                .format(backup_management_type, allowed_values)
            )

        self._backup_management_type = backup_management_type

    @property
    def item_id(self):
        """Gets the item_id of this ProtectionIntent.

        ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId

        :return: The item_id of this ProtectionIntent.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this ProtectionIntent.

        ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId

        :param item_id: The item_id of this ProtectionIntent.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def policy_id(self):
        """Gets the policy_id of this ProtectionIntent.

        ID of the backup policy with which this item is backed up.

        :return: The policy_id of this ProtectionIntent.
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """Sets the policy_id of this ProtectionIntent.

        ID of the backup policy with which this item is backed up.

        :param policy_id: The policy_id of this ProtectionIntent.
        :type policy_id: str
        """

        self._policy_id = policy_id

    @property
    def protection_intent_item_type(self):
        """Gets the protection_intent_item_type of this ProtectionIntent.

        backup protectionIntent type.

        :return: The protection_intent_item_type of this ProtectionIntent.
        :rtype: str
        """
        return self._protection_intent_item_type

    @protection_intent_item_type.setter
    def protection_intent_item_type(self, protection_intent_item_type):
        """Sets the protection_intent_item_type of this ProtectionIntent.

        backup protectionIntent type.

        :param protection_intent_item_type: The protection_intent_item_type of this ProtectionIntent.
        :type protection_intent_item_type: str
        """

        self._protection_intent_item_type = protection_intent_item_type

    @property
    def protection_state(self):
        """Gets the protection_state of this ProtectionIntent.

        Backup state of this backup item.

        :return: The protection_state of this ProtectionIntent.
        :rtype: str
        """
        return self._protection_state

    @protection_state.setter
    def protection_state(self, protection_state):
        """Sets the protection_state of this ProtectionIntent.

        Backup state of this backup item.

        :param protection_state: The protection_state of this ProtectionIntent.
        :type protection_state: str
        """
        allowed_values = ["Invalid", "NotProtected", "Protecting", "Protected", "ProtectionFailed"]  # noqa: E501
        if protection_state not in allowed_values:
            raise ValueError(
                "Invalid value for `protection_state` ({0}), must be one of {1}"
                .format(protection_state, allowed_values)
            )

        self._protection_state = protection_state

    @property
    def source_resource_id(self):
        """Gets the source_resource_id of this ProtectionIntent.

        ARM ID of the resource to be backed up.

        :return: The source_resource_id of this ProtectionIntent.
        :rtype: str
        """
        return self._source_resource_id

    @source_resource_id.setter
    def source_resource_id(self, source_resource_id):
        """Sets the source_resource_id of this ProtectionIntent.

        ARM ID of the resource to be backed up.

        :param source_resource_id: The source_resource_id of this ProtectionIntent.
        :type source_resource_id: str
        """

        self._source_resource_id = source_resource_id
