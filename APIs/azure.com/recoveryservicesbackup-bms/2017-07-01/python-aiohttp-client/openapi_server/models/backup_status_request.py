# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BackupStatusRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, po_logical_name: str=None, resource_id: str=None, resource_type: str=None):
        """BackupStatusRequest - a model defined in OpenAPI

        :param po_logical_name: The po_logical_name of this BackupStatusRequest.
        :param resource_id: The resource_id of this BackupStatusRequest.
        :param resource_type: The resource_type of this BackupStatusRequest.
        """
        self.openapi_types = {
            'po_logical_name': str,
            'resource_id': str,
            'resource_type': str
        }

        self.attribute_map = {
            'po_logical_name': 'poLogicalName',
            'resource_id': 'resourceId',
            'resource_type': 'resourceType'
        }

        self._po_logical_name = po_logical_name
        self._resource_id = resource_id
        self._resource_type = resource_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackupStatusRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackupStatusRequest of this BackupStatusRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def po_logical_name(self):
        """Gets the po_logical_name of this BackupStatusRequest.

        Protectable Item Logical Name

        :return: The po_logical_name of this BackupStatusRequest.
        :rtype: str
        """
        return self._po_logical_name

    @po_logical_name.setter
    def po_logical_name(self, po_logical_name):
        """Sets the po_logical_name of this BackupStatusRequest.

        Protectable Item Logical Name

        :param po_logical_name: The po_logical_name of this BackupStatusRequest.
        :type po_logical_name: str
        """

        self._po_logical_name = po_logical_name

    @property
    def resource_id(self):
        """Gets the resource_id of this BackupStatusRequest.

        Entire ARM resource id of the resource

        :return: The resource_id of this BackupStatusRequest.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this BackupStatusRequest.

        Entire ARM resource id of the resource

        :param resource_id: The resource_id of this BackupStatusRequest.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def resource_type(self):
        """Gets the resource_type of this BackupStatusRequest.

        Container Type - VM, SQLPaaS, DPM, AzureFileShare...

        :return: The resource_type of this BackupStatusRequest.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this BackupStatusRequest.

        Container Type - VM, SQLPaaS, DPM, AzureFileShare...

        :param resource_type: The resource_type of this BackupStatusRequest.
        :type resource_type: str
        """
        allowed_values = ["Invalid", "VM", "FileFolder", "AzureSqlDb", "SQLDB", "Exchange", "Sharepoint", "VMwareVM", "SystemState", "Client", "GenericDataSource", "SQLDataBase", "AzureFileShare", "SAPHanaDatabase", "SAPAseDatabase"]  # noqa: E501
        if resource_type not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_type` ({0}), must be one of {1}"
                .format(resource_type, allowed_values)
            )

        self._resource_type = resource_type
