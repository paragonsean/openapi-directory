# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProtectionIntentQueryObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_management_type: str=None, item_name: str=None, item_type: str=None, parent_name: str=None):
        """ProtectionIntentQueryObject - a model defined in OpenAPI

        :param backup_management_type: The backup_management_type of this ProtectionIntentQueryObject.
        :param item_name: The item_name of this ProtectionIntentQueryObject.
        :param item_type: The item_type of this ProtectionIntentQueryObject.
        :param parent_name: The parent_name of this ProtectionIntentQueryObject.
        """
        self.openapi_types = {
            'backup_management_type': str,
            'item_name': str,
            'item_type': str,
            'parent_name': str
        }

        self.attribute_map = {
            'backup_management_type': 'backupManagementType',
            'item_name': 'itemName',
            'item_type': 'itemType',
            'parent_name': 'parentName'
        }

        self._backup_management_type = backup_management_type
        self._item_name = item_name
        self._item_type = item_type
        self._parent_name = parent_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProtectionIntentQueryObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProtectionIntentQueryObject of this ProtectionIntentQueryObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_management_type(self):
        """Gets the backup_management_type of this ProtectionIntentQueryObject.

        Backup management type for the backed up item

        :return: The backup_management_type of this ProtectionIntentQueryObject.
        :rtype: str
        """
        return self._backup_management_type

    @backup_management_type.setter
    def backup_management_type(self, backup_management_type):
        """Sets the backup_management_type of this ProtectionIntentQueryObject.

        Backup management type for the backed up item

        :param backup_management_type: The backup_management_type of this ProtectionIntentQueryObject.
        :type backup_management_type: str
        """
        allowed_values = ["Invalid", "AzureIaasVM", "MAB", "DPM", "AzureBackupServer", "AzureSql", "AzureStorage", "AzureWorkload", "DefaultBackup"]  # noqa: E501
        if backup_management_type not in allowed_values:
            raise ValueError(
                "Invalid value for `backup_management_type` ({0}), must be one of {1}"
                .format(backup_management_type, allowed_values)
            )

        self._backup_management_type = backup_management_type

    @property
    def item_name(self):
        """Gets the item_name of this ProtectionIntentQueryObject.

        Item name of the intent

        :return: The item_name of this ProtectionIntentQueryObject.
        :rtype: str
        """
        return self._item_name

    @item_name.setter
    def item_name(self, item_name):
        """Sets the item_name of this ProtectionIntentQueryObject.

        Item name of the intent

        :param item_name: The item_name of this ProtectionIntentQueryObject.
        :type item_name: str
        """

        self._item_name = item_name

    @property
    def item_type(self):
        """Gets the item_type of this ProtectionIntentQueryObject.

        Type of workload this item represents

        :return: The item_type of this ProtectionIntentQueryObject.
        :rtype: str
        """
        return self._item_type

    @item_type.setter
    def item_type(self, item_type):
        """Sets the item_type of this ProtectionIntentQueryObject.

        Type of workload this item represents

        :param item_type: The item_type of this ProtectionIntentQueryObject.
        :type item_type: str
        """
        allowed_values = ["Invalid", "SQLInstance", "SQLAvailabilityGroupContainer"]  # noqa: E501
        if item_type not in allowed_values:
            raise ValueError(
                "Invalid value for `item_type` ({0}), must be one of {1}"
                .format(item_type, allowed_values)
            )

        self._item_type = item_type

    @property
    def parent_name(self):
        """Gets the parent_name of this ProtectionIntentQueryObject.

        Parent name of the intent

        :return: The parent_name of this ProtectionIntentQueryObject.
        :rtype: str
        """
        return self._parent_name

    @parent_name.setter
    def parent_name(self, parent_name):
        """Sets the parent_name of this ProtectionIntentQueryObject.

        Parent name of the intent

        :param parent_name: The parent_name of this ProtectionIntentQueryObject.
        :type parent_name: str
        """

        self._parent_name = parent_name
