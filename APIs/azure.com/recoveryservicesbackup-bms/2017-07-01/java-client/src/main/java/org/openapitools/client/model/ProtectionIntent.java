/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Base class for backup ProtectionIntent.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:09:02.098697-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProtectionIntent {
  /**
   * Type of backup management for the backed up item.
   */
  @JsonAdapter(BackupManagementTypeEnum.Adapter.class)
  public enum BackupManagementTypeEnum {
    INVALID("Invalid"),
    
    AZURE_IAAS_VM("AzureIaasVM"),
    
    MAB("MAB"),
    
    DPM("DPM"),
    
    AZURE_BACKUP_SERVER("AzureBackupServer"),
    
    AZURE_SQL("AzureSql"),
    
    AZURE_STORAGE("AzureStorage"),
    
    AZURE_WORKLOAD("AzureWorkload"),
    
    DEFAULT_BACKUP("DefaultBackup");

    private String value;

    BackupManagementTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BackupManagementTypeEnum fromValue(String value) {
      for (BackupManagementTypeEnum b : BackupManagementTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BackupManagementTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BackupManagementTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BackupManagementTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BackupManagementTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      BackupManagementTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_BACKUP_MANAGEMENT_TYPE = "backupManagementType";
  @SerializedName(SERIALIZED_NAME_BACKUP_MANAGEMENT_TYPE)
  private BackupManagementTypeEnum backupManagementType;

  public static final String SERIALIZED_NAME_ITEM_ID = "itemId";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private String itemId;

  public static final String SERIALIZED_NAME_POLICY_ID = "policyId";
  @SerializedName(SERIALIZED_NAME_POLICY_ID)
  private String policyId;

  public static final String SERIALIZED_NAME_PROTECTION_INTENT_ITEM_TYPE = "protectionIntentItemType";
  @SerializedName(SERIALIZED_NAME_PROTECTION_INTENT_ITEM_TYPE)
  protected String protectionIntentItemType;

  /**
   * Backup state of this backup item.
   */
  @JsonAdapter(ProtectionStateEnum.Adapter.class)
  public enum ProtectionStateEnum {
    INVALID("Invalid"),
    
    NOT_PROTECTED("NotProtected"),
    
    PROTECTING("Protecting"),
    
    PROTECTED("Protected"),
    
    PROTECTION_FAILED("ProtectionFailed");

    private String value;

    ProtectionStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProtectionStateEnum fromValue(String value) {
      for (ProtectionStateEnum b : ProtectionStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProtectionStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProtectionStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProtectionStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProtectionStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProtectionStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROTECTION_STATE = "protectionState";
  @SerializedName(SERIALIZED_NAME_PROTECTION_STATE)
  private ProtectionStateEnum protectionState;

  public static final String SERIALIZED_NAME_SOURCE_RESOURCE_ID = "sourceResourceId";
  @SerializedName(SERIALIZED_NAME_SOURCE_RESOURCE_ID)
  private String sourceResourceId;

  public ProtectionIntent() {
    this.protectionIntentItemType = this.getClass().getSimpleName();
  }

  public ProtectionIntent backupManagementType(BackupManagementTypeEnum backupManagementType) {
    this.backupManagementType = backupManagementType;
    return this;
  }

  /**
   * Type of backup management for the backed up item.
   * @return backupManagementType
   */
  @javax.annotation.Nullable
  public BackupManagementTypeEnum getBackupManagementType() {
    return backupManagementType;
  }

  public void setBackupManagementType(BackupManagementTypeEnum backupManagementType) {
    this.backupManagementType = backupManagementType;
  }


  public ProtectionIntent itemId(String itemId) {
    this.itemId = itemId;
    return this;
  }

  /**
   * ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
   * @return itemId
   */
  @javax.annotation.Nullable
  public String getItemId() {
    return itemId;
  }

  public void setItemId(String itemId) {
    this.itemId = itemId;
  }


  public ProtectionIntent policyId(String policyId) {
    this.policyId = policyId;
    return this;
  }

  /**
   * ID of the backup policy with which this item is backed up.
   * @return policyId
   */
  @javax.annotation.Nullable
  public String getPolicyId() {
    return policyId;
  }

  public void setPolicyId(String policyId) {
    this.policyId = policyId;
  }


  public ProtectionIntent protectionIntentItemType(String protectionIntentItemType) {
    this.protectionIntentItemType = protectionIntentItemType;
    return this;
  }

  /**
   * backup protectionIntent type.
   * @return protectionIntentItemType
   */
  @javax.annotation.Nullable
  public String getProtectionIntentItemType() {
    return protectionIntentItemType;
  }

  public void setProtectionIntentItemType(String protectionIntentItemType) {
    this.protectionIntentItemType = protectionIntentItemType;
  }


  public ProtectionIntent protectionState(ProtectionStateEnum protectionState) {
    this.protectionState = protectionState;
    return this;
  }

  /**
   * Backup state of this backup item.
   * @return protectionState
   */
  @javax.annotation.Nullable
  public ProtectionStateEnum getProtectionState() {
    return protectionState;
  }

  public void setProtectionState(ProtectionStateEnum protectionState) {
    this.protectionState = protectionState;
  }


  public ProtectionIntent sourceResourceId(String sourceResourceId) {
    this.sourceResourceId = sourceResourceId;
    return this;
  }

  /**
   * ARM ID of the resource to be backed up.
   * @return sourceResourceId
   */
  @javax.annotation.Nullable
  public String getSourceResourceId() {
    return sourceResourceId;
  }

  public void setSourceResourceId(String sourceResourceId) {
    this.sourceResourceId = sourceResourceId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProtectionIntent protectionIntent = (ProtectionIntent) o;
    return Objects.equals(this.backupManagementType, protectionIntent.backupManagementType) &&
        Objects.equals(this.itemId, protectionIntent.itemId) &&
        Objects.equals(this.policyId, protectionIntent.policyId) &&
        Objects.equals(this.protectionIntentItemType, protectionIntent.protectionIntentItemType) &&
        Objects.equals(this.protectionState, protectionIntent.protectionState) &&
        Objects.equals(this.sourceResourceId, protectionIntent.sourceResourceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupManagementType, itemId, policyId, protectionIntentItemType, protectionState, sourceResourceId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProtectionIntent {\n");
    sb.append("    backupManagementType: ").append(toIndentedString(backupManagementType)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    policyId: ").append(toIndentedString(policyId)).append("\n");
    sb.append("    protectionIntentItemType: ").append(toIndentedString(protectionIntentItemType)).append("\n");
    sb.append("    protectionState: ").append(toIndentedString(protectionState)).append("\n");
    sb.append("    sourceResourceId: ").append(toIndentedString(sourceResourceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backupManagementType");
    openapiFields.add("itemId");
    openapiFields.add("policyId");
    openapiFields.add("protectionIntentItemType");
    openapiFields.add("protectionState");
    openapiFields.add("sourceResourceId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProtectionIntent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProtectionIntent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProtectionIntent is not found in the empty JSON string", ProtectionIntent.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("protectionIntentItemType").getAsString();
      switch (discriminatorValue) {
        case "AzureRecoveryServiceVaultProtectionIntent":
          AzureRecoveryServiceVaultProtectionIntent.validateJsonElement(jsonElement);
          break;
        case "AzureResourceProtectionIntent":
          AzureResourceProtectionIntent.validateJsonElement(jsonElement);
          break;
        case "AzureWorkloadAutoProtectionIntent":
          AzureWorkloadAutoProtectionIntent.validateJsonElement(jsonElement);
          break;
        case "AzureWorkloadSQLAutoProtectionIntent":
          AzureWorkloadSQLAutoProtectionIntent.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `protectionIntentItemType` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of ProtectionIntent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProtectionIntent
   * @throws IOException if the JSON string is invalid with respect to ProtectionIntent
   */
  public static ProtectionIntent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProtectionIntent.class);
  }

  /**
   * Convert an instance of ProtectionIntent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

