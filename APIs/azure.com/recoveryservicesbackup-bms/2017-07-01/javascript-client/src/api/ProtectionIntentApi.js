/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PreValidateEnableBackupRequest from '../model/PreValidateEnableBackupRequest';
import PreValidateEnableBackupResponse from '../model/PreValidateEnableBackupResponse';
import ProtectionIntentResource from '../model/ProtectionIntentResource';

/**
* ProtectionIntent service.
* @module api/ProtectionIntentApi
* @version 2017-07-01
*/
export default class ProtectionIntentApi {

    /**
    * Constructs a new ProtectionIntentApi. 
    * @alias module:api/ProtectionIntentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the protectionIntentCreateOrUpdate operation.
     * @callback module:api/ProtectionIntentApi~protectionIntentCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProtectionIntentResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Intent for Enabling backup of an item. This is a synchronous operation.
     * @param {String} apiVersion Client Api Version.
     * @param {String} vaultName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} fabricName Fabric name associated with the backup item.
     * @param {String} intentObjectName Intent object name.
     * @param {module:model/ProtectionIntentResource} parameters resource backed up item
     * @param {module:api/ProtectionIntentApi~protectionIntentCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProtectionIntentResource}
     */
    protectionIntentCreateOrUpdate(apiVersion, vaultName, resourceGroupName, subscriptionId, fabricName, intentObjectName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling protectionIntentCreateOrUpdate");
      }
      // verify the required parameter 'vaultName' is set
      if (vaultName === undefined || vaultName === null) {
        throw new Error("Missing the required parameter 'vaultName' when calling protectionIntentCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling protectionIntentCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling protectionIntentCreateOrUpdate");
      }
      // verify the required parameter 'fabricName' is set
      if (fabricName === undefined || fabricName === null) {
        throw new Error("Missing the required parameter 'fabricName' when calling protectionIntentCreateOrUpdate");
      }
      // verify the required parameter 'intentObjectName' is set
      if (intentObjectName === undefined || intentObjectName === null) {
        throw new Error("Missing the required parameter 'intentObjectName' when calling protectionIntentCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling protectionIntentCreateOrUpdate");
      }

      let pathParams = {
        'vaultName': vaultName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'fabricName': fabricName,
        'intentObjectName': intentObjectName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProtectionIntentResource;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/backupProtectionIntent/{intentObjectName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the protectionIntentDelete operation.
     * @callback module:api/ProtectionIntentApi~protectionIntentDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to remove intent from an item
     * @param {String} apiVersion Client Api Version.
     * @param {String} vaultName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} fabricName Fabric name associated with the intent.
     * @param {String} intentObjectName Intent to be deleted.
     * @param {module:api/ProtectionIntentApi~protectionIntentDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    protectionIntentDelete(apiVersion, vaultName, resourceGroupName, subscriptionId, fabricName, intentObjectName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling protectionIntentDelete");
      }
      // verify the required parameter 'vaultName' is set
      if (vaultName === undefined || vaultName === null) {
        throw new Error("Missing the required parameter 'vaultName' when calling protectionIntentDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling protectionIntentDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling protectionIntentDelete");
      }
      // verify the required parameter 'fabricName' is set
      if (fabricName === undefined || fabricName === null) {
        throw new Error("Missing the required parameter 'fabricName' when calling protectionIntentDelete");
      }
      // verify the required parameter 'intentObjectName' is set
      if (intentObjectName === undefined || intentObjectName === null) {
        throw new Error("Missing the required parameter 'intentObjectName' when calling protectionIntentDelete");
      }

      let pathParams = {
        'vaultName': vaultName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'fabricName': fabricName,
        'intentObjectName': intentObjectName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/backupProtectionIntent/{intentObjectName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the protectionIntentGet operation.
     * @callback module:api/ProtectionIntentApi~protectionIntentGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProtectionIntentResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Provides the details of the protection intent up item. This is an asynchronous operation. To know the status of the operation,  call the GetItemOperationResult API.
     * @param {String} apiVersion Client Api Version.
     * @param {String} vaultName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} fabricName Fabric name associated with the backed up item.
     * @param {String} intentObjectName Backed up item name whose details are to be fetched.
     * @param {module:api/ProtectionIntentApi~protectionIntentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProtectionIntentResource}
     */
    protectionIntentGet(apiVersion, vaultName, resourceGroupName, subscriptionId, fabricName, intentObjectName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling protectionIntentGet");
      }
      // verify the required parameter 'vaultName' is set
      if (vaultName === undefined || vaultName === null) {
        throw new Error("Missing the required parameter 'vaultName' when calling protectionIntentGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling protectionIntentGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling protectionIntentGet");
      }
      // verify the required parameter 'fabricName' is set
      if (fabricName === undefined || fabricName === null) {
        throw new Error("Missing the required parameter 'fabricName' when calling protectionIntentGet");
      }
      // verify the required parameter 'intentObjectName' is set
      if (intentObjectName === undefined || intentObjectName === null) {
        throw new Error("Missing the required parameter 'intentObjectName' when calling protectionIntentGet");
      }

      let pathParams = {
        'vaultName': vaultName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'fabricName': fabricName,
        'intentObjectName': intentObjectName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProtectionIntentResource;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/backupProtectionIntent/{intentObjectName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the protectionIntentValidate operation.
     * @callback module:api/ProtectionIntentApi~protectionIntentValidateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PreValidateEnableBackupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * It will validate followings  1. Vault capacity  2. VM is already protected  3. Any VM related configuration passed in properties.
     * @param {String} apiVersion Client Api Version.
     * @param {String} azureRegion Azure region to hit Api
     * @param {String} subscriptionId The subscription Id.
     * @param {module:model/PreValidateEnableBackupRequest} parameters Enable backup validation request on Virtual Machine
     * @param {module:api/ProtectionIntentApi~protectionIntentValidateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PreValidateEnableBackupResponse}
     */
    protectionIntentValidate(apiVersion, azureRegion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling protectionIntentValidate");
      }
      // verify the required parameter 'azureRegion' is set
      if (azureRegion === undefined || azureRegion === null) {
        throw new Error("Missing the required parameter 'azureRegion' when calling protectionIntentValidate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling protectionIntentValidate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling protectionIntentValidate");
      }

      let pathParams = {
        'azureRegion': azureRegion,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PreValidateEnableBackupResponse;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupPreValidateProtection', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
