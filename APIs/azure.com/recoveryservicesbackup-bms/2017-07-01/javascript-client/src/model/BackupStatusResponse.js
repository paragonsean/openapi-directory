/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BackupStatusResponse model module.
 * @module model/BackupStatusResponse
 * @version 2017-07-01
 */
class BackupStatusResponse {
    /**
     * Constructs a new <code>BackupStatusResponse</code>.
     * BackupStatus response.
     * @alias module:model/BackupStatusResponse
     */
    constructor() { 
        
        BackupStatusResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BackupStatusResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupStatusResponse} obj Optional instance to populate.
     * @return {module:model/BackupStatusResponse} The populated <code>BackupStatusResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupStatusResponse();

            if (data.hasOwnProperty('containerName')) {
                obj['containerName'] = ApiClient.convertToType(data['containerName'], 'String');
            }
            if (data.hasOwnProperty('errorCode')) {
                obj['errorCode'] = ApiClient.convertToType(data['errorCode'], 'String');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('fabricName')) {
                obj['fabricName'] = ApiClient.convertToType(data['fabricName'], 'String');
            }
            if (data.hasOwnProperty('policyName')) {
                obj['policyName'] = ApiClient.convertToType(data['policyName'], 'String');
            }
            if (data.hasOwnProperty('protectedItemName')) {
                obj['protectedItemName'] = ApiClient.convertToType(data['protectedItemName'], 'String');
            }
            if (data.hasOwnProperty('protectionStatus')) {
                obj['protectionStatus'] = ApiClient.convertToType(data['protectionStatus'], 'String');
            }
            if (data.hasOwnProperty('registrationStatus')) {
                obj['registrationStatus'] = ApiClient.convertToType(data['registrationStatus'], 'String');
            }
            if (data.hasOwnProperty('vaultId')) {
                obj['vaultId'] = ApiClient.convertToType(data['vaultId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupStatusResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupStatusResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['containerName'] && !(typeof data['containerName'] === 'string' || data['containerName'] instanceof String)) {
            throw new Error("Expected the field `containerName` to be a primitive type in the JSON string but got " + data['containerName']);
        }
        // ensure the json data is a string
        if (data['errorCode'] && !(typeof data['errorCode'] === 'string' || data['errorCode'] instanceof String)) {
            throw new Error("Expected the field `errorCode` to be a primitive type in the JSON string but got " + data['errorCode']);
        }
        // ensure the json data is a string
        if (data['errorMessage'] && !(typeof data['errorMessage'] === 'string' || data['errorMessage'] instanceof String)) {
            throw new Error("Expected the field `errorMessage` to be a primitive type in the JSON string but got " + data['errorMessage']);
        }
        // ensure the json data is a string
        if (data['fabricName'] && !(typeof data['fabricName'] === 'string' || data['fabricName'] instanceof String)) {
            throw new Error("Expected the field `fabricName` to be a primitive type in the JSON string but got " + data['fabricName']);
        }
        // ensure the json data is a string
        if (data['policyName'] && !(typeof data['policyName'] === 'string' || data['policyName'] instanceof String)) {
            throw new Error("Expected the field `policyName` to be a primitive type in the JSON string but got " + data['policyName']);
        }
        // ensure the json data is a string
        if (data['protectedItemName'] && !(typeof data['protectedItemName'] === 'string' || data['protectedItemName'] instanceof String)) {
            throw new Error("Expected the field `protectedItemName` to be a primitive type in the JSON string but got " + data['protectedItemName']);
        }
        // ensure the json data is a string
        if (data['protectionStatus'] && !(typeof data['protectionStatus'] === 'string' || data['protectionStatus'] instanceof String)) {
            throw new Error("Expected the field `protectionStatus` to be a primitive type in the JSON string but got " + data['protectionStatus']);
        }
        // ensure the json data is a string
        if (data['registrationStatus'] && !(typeof data['registrationStatus'] === 'string' || data['registrationStatus'] instanceof String)) {
            throw new Error("Expected the field `registrationStatus` to be a primitive type in the JSON string but got " + data['registrationStatus']);
        }
        // ensure the json data is a string
        if (data['vaultId'] && !(typeof data['vaultId'] === 'string' || data['vaultId'] instanceof String)) {
            throw new Error("Expected the field `vaultId` to be a primitive type in the JSON string but got " + data['vaultId']);
        }

        return true;
    }


}



/**
 * Specifies the product specific container name. E.g. iaasvmcontainer;iaasvmcontainer;csname;vmname.
 * @member {String} containerName
 */
BackupStatusResponse.prototype['containerName'] = undefined;

/**
 * ErrorCode in case of intent failed
 * @member {String} errorCode
 */
BackupStatusResponse.prototype['errorCode'] = undefined;

/**
 * ErrorMessage in case of intent failed.
 * @member {String} errorMessage
 */
BackupStatusResponse.prototype['errorMessage'] = undefined;

/**
 * Specifies the fabric name - Azure or AD
 * @member {module:model/BackupStatusResponse.FabricNameEnum} fabricName
 */
BackupStatusResponse.prototype['fabricName'] = undefined;

/**
 * Specifies the policy name which is used for protection
 * @member {String} policyName
 */
BackupStatusResponse.prototype['policyName'] = undefined;

/**
 * Specifies the product specific ds name. E.g. vm;iaasvmcontainer;csname;vmname.
 * @member {String} protectedItemName
 */
BackupStatusResponse.prototype['protectedItemName'] = undefined;

/**
 * Specifies whether the container is registered or not
 * @member {module:model/BackupStatusResponse.ProtectionStatusEnum} protectionStatus
 */
BackupStatusResponse.prototype['protectionStatus'] = undefined;

/**
 * Container registration status
 * @member {String} registrationStatus
 */
BackupStatusResponse.prototype['registrationStatus'] = undefined;

/**
 * Specifies the arm resource id of the vault
 * @member {String} vaultId
 */
BackupStatusResponse.prototype['vaultId'] = undefined;





/**
 * Allowed values for the <code>fabricName</code> property.
 * @enum {String}
 * @readonly
 */
BackupStatusResponse['FabricNameEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Azure"
     * @const
     */
    "Azure": "Azure"
};


/**
 * Allowed values for the <code>protectionStatus</code> property.
 * @enum {String}
 * @readonly
 */
BackupStatusResponse['ProtectionStatusEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "NotProtected"
     * @const
     */
    "NotProtected": "NotProtected",

    /**
     * value: "Protecting"
     * @const
     */
    "Protecting": "Protecting",

    /**
     * value: "Protected"
     * @const
     */
    "Protected": "Protected",

    /**
     * value: "ProtectionFailed"
     * @const
     */
    "ProtectionFailed": "ProtectionFailed"
};



export default BackupStatusResponse;

