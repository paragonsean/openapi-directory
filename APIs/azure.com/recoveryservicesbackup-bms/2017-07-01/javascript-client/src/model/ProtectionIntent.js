/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProtectionIntent model module.
 * @module model/ProtectionIntent
 * @version 2017-07-01
 */
class ProtectionIntent {
    /**
     * Constructs a new <code>ProtectionIntent</code>.
     * Base class for backup ProtectionIntent.
     * @alias module:model/ProtectionIntent
     */
    constructor() { 
        
        ProtectionIntent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProtectionIntent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProtectionIntent} obj Optional instance to populate.
     * @return {module:model/ProtectionIntent} The populated <code>ProtectionIntent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProtectionIntent();

            if (data.hasOwnProperty('backupManagementType')) {
                obj['backupManagementType'] = ApiClient.convertToType(data['backupManagementType'], 'String');
            }
            if (data.hasOwnProperty('itemId')) {
                obj['itemId'] = ApiClient.convertToType(data['itemId'], 'String');
            }
            if (data.hasOwnProperty('policyId')) {
                obj['policyId'] = ApiClient.convertToType(data['policyId'], 'String');
            }
            if (data.hasOwnProperty('protectionIntentItemType')) {
                obj['protectionIntentItemType'] = ApiClient.convertToType(data['protectionIntentItemType'], 'String');
            }
            if (data.hasOwnProperty('protectionState')) {
                obj['protectionState'] = ApiClient.convertToType(data['protectionState'], 'String');
            }
            if (data.hasOwnProperty('sourceResourceId')) {
                obj['sourceResourceId'] = ApiClient.convertToType(data['sourceResourceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProtectionIntent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProtectionIntent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['backupManagementType'] && !(typeof data['backupManagementType'] === 'string' || data['backupManagementType'] instanceof String)) {
            throw new Error("Expected the field `backupManagementType` to be a primitive type in the JSON string but got " + data['backupManagementType']);
        }
        // ensure the json data is a string
        if (data['itemId'] && !(typeof data['itemId'] === 'string' || data['itemId'] instanceof String)) {
            throw new Error("Expected the field `itemId` to be a primitive type in the JSON string but got " + data['itemId']);
        }
        // ensure the json data is a string
        if (data['policyId'] && !(typeof data['policyId'] === 'string' || data['policyId'] instanceof String)) {
            throw new Error("Expected the field `policyId` to be a primitive type in the JSON string but got " + data['policyId']);
        }
        // ensure the json data is a string
        if (data['protectionIntentItemType'] && !(typeof data['protectionIntentItemType'] === 'string' || data['protectionIntentItemType'] instanceof String)) {
            throw new Error("Expected the field `protectionIntentItemType` to be a primitive type in the JSON string but got " + data['protectionIntentItemType']);
        }
        // ensure the json data is a string
        if (data['protectionState'] && !(typeof data['protectionState'] === 'string' || data['protectionState'] instanceof String)) {
            throw new Error("Expected the field `protectionState` to be a primitive type in the JSON string but got " + data['protectionState']);
        }
        // ensure the json data is a string
        if (data['sourceResourceId'] && !(typeof data['sourceResourceId'] === 'string' || data['sourceResourceId'] instanceof String)) {
            throw new Error("Expected the field `sourceResourceId` to be a primitive type in the JSON string but got " + data['sourceResourceId']);
        }

        return true;
    }


}



/**
 * Type of backup management for the backed up item.
 * @member {module:model/ProtectionIntent.BackupManagementTypeEnum} backupManagementType
 */
ProtectionIntent.prototype['backupManagementType'] = undefined;

/**
 * ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
 * @member {String} itemId
 */
ProtectionIntent.prototype['itemId'] = undefined;

/**
 * ID of the backup policy with which this item is backed up.
 * @member {String} policyId
 */
ProtectionIntent.prototype['policyId'] = undefined;

/**
 * backup protectionIntent type.
 * @member {String} protectionIntentItemType
 */
ProtectionIntent.prototype['protectionIntentItemType'] = undefined;

/**
 * Backup state of this backup item.
 * @member {module:model/ProtectionIntent.ProtectionStateEnum} protectionState
 */
ProtectionIntent.prototype['protectionState'] = undefined;

/**
 * ARM ID of the resource to be backed up.
 * @member {String} sourceResourceId
 */
ProtectionIntent.prototype['sourceResourceId'] = undefined;





/**
 * Allowed values for the <code>backupManagementType</code> property.
 * @enum {String}
 * @readonly
 */
ProtectionIntent['BackupManagementTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "AzureIaasVM"
     * @const
     */
    "AzureIaasVM": "AzureIaasVM",

    /**
     * value: "MAB"
     * @const
     */
    "MAB": "MAB",

    /**
     * value: "DPM"
     * @const
     */
    "DPM": "DPM",

    /**
     * value: "AzureBackupServer"
     * @const
     */
    "AzureBackupServer": "AzureBackupServer",

    /**
     * value: "AzureSql"
     * @const
     */
    "AzureSql": "AzureSql",

    /**
     * value: "AzureStorage"
     * @const
     */
    "AzureStorage": "AzureStorage",

    /**
     * value: "AzureWorkload"
     * @const
     */
    "AzureWorkload": "AzureWorkload",

    /**
     * value: "DefaultBackup"
     * @const
     */
    "DefaultBackup": "DefaultBackup"
};


/**
 * Allowed values for the <code>protectionState</code> property.
 * @enum {String}
 * @readonly
 */
ProtectionIntent['ProtectionStateEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "NotProtected"
     * @const
     */
    "NotProtected": "NotProtected",

    /**
     * value: "Protecting"
     * @const
     */
    "Protecting": "Protecting",

    /**
     * value: "Protected"
     * @const
     */
    "Protected": "Protected",

    /**
     * value: "ProtectionFailed"
     * @const
     */
    "ProtectionFailed": "ProtectionFailed"
};



export default ProtectionIntent;

