/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PreValidateEnableBackupRequest model module.
 * @module model/PreValidateEnableBackupRequest
 * @version 2017-07-01
 */
class PreValidateEnableBackupRequest {
    /**
     * Constructs a new <code>PreValidateEnableBackupRequest</code>.
     * Contract to validate if backup can be enabled on the given resource in a given vault and given configuration.  It will validate followings  1. Vault capacity  2. VM is already protected  3. Any VM related configuration passed in properties.
     * @alias module:model/PreValidateEnableBackupRequest
     */
    constructor() { 
        
        PreValidateEnableBackupRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PreValidateEnableBackupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PreValidateEnableBackupRequest} obj Optional instance to populate.
     * @return {module:model/PreValidateEnableBackupRequest} The populated <code>PreValidateEnableBackupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PreValidateEnableBackupRequest();

            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], 'String');
            }
            if (data.hasOwnProperty('vaultId')) {
                obj['vaultId'] = ApiClient.convertToType(data['vaultId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PreValidateEnableBackupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PreValidateEnableBackupRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['properties'] && !(typeof data['properties'] === 'string' || data['properties'] instanceof String)) {
            throw new Error("Expected the field `properties` to be a primitive type in the JSON string but got " + data['properties']);
        }
        // ensure the json data is a string
        if (data['resourceId'] && !(typeof data['resourceId'] === 'string' || data['resourceId'] instanceof String)) {
            throw new Error("Expected the field `resourceId` to be a primitive type in the JSON string but got " + data['resourceId']);
        }
        // ensure the json data is a string
        if (data['resourceType'] && !(typeof data['resourceType'] === 'string' || data['resourceType'] instanceof String)) {
            throw new Error("Expected the field `resourceType` to be a primitive type in the JSON string but got " + data['resourceType']);
        }
        // ensure the json data is a string
        if (data['vaultId'] && !(typeof data['vaultId'] === 'string' || data['vaultId'] instanceof String)) {
            throw new Error("Expected the field `vaultId` to be a primitive type in the JSON string but got " + data['vaultId']);
        }

        return true;
    }


}



/**
 * Configuration of VM if any needs to be validated like OS type etc
 * @member {String} properties
 */
PreValidateEnableBackupRequest.prototype['properties'] = undefined;

/**
 * ARM Virtual Machine Id
 * @member {String} resourceId
 */
PreValidateEnableBackupRequest.prototype['resourceId'] = undefined;

/**
 * ProtectedItem Type- VM, SqlDataBase, AzureFileShare etc
 * @member {module:model/PreValidateEnableBackupRequest.ResourceTypeEnum} resourceType
 */
PreValidateEnableBackupRequest.prototype['resourceType'] = undefined;

/**
 * ARM id of the Recovery Services Vault
 * @member {String} vaultId
 */
PreValidateEnableBackupRequest.prototype['vaultId'] = undefined;





/**
 * Allowed values for the <code>resourceType</code> property.
 * @enum {String}
 * @readonly
 */
PreValidateEnableBackupRequest['ResourceTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "VM"
     * @const
     */
    "VM": "VM",

    /**
     * value: "FileFolder"
     * @const
     */
    "FileFolder": "FileFolder",

    /**
     * value: "AzureSqlDb"
     * @const
     */
    "AzureSqlDb": "AzureSqlDb",

    /**
     * value: "SQLDB"
     * @const
     */
    "SQLDB": "SQLDB",

    /**
     * value: "Exchange"
     * @const
     */
    "Exchange": "Exchange",

    /**
     * value: "Sharepoint"
     * @const
     */
    "Sharepoint": "Sharepoint",

    /**
     * value: "VMwareVM"
     * @const
     */
    "VMwareVM": "VMwareVM",

    /**
     * value: "SystemState"
     * @const
     */
    "SystemState": "SystemState",

    /**
     * value: "Client"
     * @const
     */
    "Client": "Client",

    /**
     * value: "GenericDataSource"
     * @const
     */
    "GenericDataSource": "GenericDataSource",

    /**
     * value: "SQLDataBase"
     * @const
     */
    "SQLDataBase": "SQLDataBase",

    /**
     * value: "AzureFileShare"
     * @const
     */
    "AzureFileShare": "AzureFileShare",

    /**
     * value: "SAPHanaDatabase"
     * @const
     */
    "SAPHanaDatabase": "SAPHanaDatabase",

    /**
     * value: "SAPAseDatabase"
     * @const
     */
    "SAPAseDatabase": "SAPAseDatabase"
};



export default PreValidateEnableBackupRequest;

