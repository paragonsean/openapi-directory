/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureVMResourceFeatureSupportRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureVMResourceFeatureSupportRequest::OAIAzureVMResourceFeatureSupportRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureVMResourceFeatureSupportRequest::OAIAzureVMResourceFeatureSupportRequest() {
    this->initializeModel();
}

OAIAzureVMResourceFeatureSupportRequest::~OAIAzureVMResourceFeatureSupportRequest() {}

void OAIAzureVMResourceFeatureSupportRequest::initializeModel() {

    m_vm_size_isSet = false;
    m_vm_size_isValid = false;

    m_vm_sku_isSet = false;
    m_vm_sku_isValid = false;

    m_feature_type_isSet = false;
    m_feature_type_isValid = false;
}

void OAIAzureVMResourceFeatureSupportRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureVMResourceFeatureSupportRequest::fromJsonObject(QJsonObject json) {

    m_vm_size_isValid = ::OpenAPI::fromJsonValue(m_vm_size, json[QString("vmSize")]);
    m_vm_size_isSet = !json[QString("vmSize")].isNull() && m_vm_size_isValid;

    m_vm_sku_isValid = ::OpenAPI::fromJsonValue(m_vm_sku, json[QString("vmSku")]);
    m_vm_sku_isSet = !json[QString("vmSku")].isNull() && m_vm_sku_isValid;

    m_feature_type_isValid = ::OpenAPI::fromJsonValue(m_feature_type, json[QString("featureType")]);
    m_feature_type_isSet = !json[QString("featureType")].isNull() && m_feature_type_isValid;
}

QString OAIAzureVMResourceFeatureSupportRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureVMResourceFeatureSupportRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_vm_size_isSet) {
        obj.insert(QString("vmSize"), ::OpenAPI::toJsonValue(m_vm_size));
    }
    if (m_vm_sku_isSet) {
        obj.insert(QString("vmSku"), ::OpenAPI::toJsonValue(m_vm_sku));
    }
    if (m_feature_type_isSet) {
        obj.insert(QString("featureType"), ::OpenAPI::toJsonValue(m_feature_type));
    }
    return obj;
}

QString OAIAzureVMResourceFeatureSupportRequest::getVmSize() const {
    return m_vm_size;
}
void OAIAzureVMResourceFeatureSupportRequest::setVmSize(const QString &vm_size) {
    m_vm_size = vm_size;
    m_vm_size_isSet = true;
}

bool OAIAzureVMResourceFeatureSupportRequest::is_vm_size_Set() const{
    return m_vm_size_isSet;
}

bool OAIAzureVMResourceFeatureSupportRequest::is_vm_size_Valid() const{
    return m_vm_size_isValid;
}

QString OAIAzureVMResourceFeatureSupportRequest::getVmSku() const {
    return m_vm_sku;
}
void OAIAzureVMResourceFeatureSupportRequest::setVmSku(const QString &vm_sku) {
    m_vm_sku = vm_sku;
    m_vm_sku_isSet = true;
}

bool OAIAzureVMResourceFeatureSupportRequest::is_vm_sku_Set() const{
    return m_vm_sku_isSet;
}

bool OAIAzureVMResourceFeatureSupportRequest::is_vm_sku_Valid() const{
    return m_vm_sku_isValid;
}

QString OAIAzureVMResourceFeatureSupportRequest::getFeatureType() const {
    return m_feature_type;
}
void OAIAzureVMResourceFeatureSupportRequest::setFeatureType(const QString &feature_type) {
    m_feature_type = feature_type;
    m_feature_type_isSet = true;
}

bool OAIAzureVMResourceFeatureSupportRequest::is_feature_type_Set() const{
    return m_feature_type_isSet;
}

bool OAIAzureVMResourceFeatureSupportRequest::is_feature_type_Valid() const{
    return m_feature_type_isValid;
}

bool OAIAzureVMResourceFeatureSupportRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vm_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vm_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feature_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureVMResourceFeatureSupportRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
