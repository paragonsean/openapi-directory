/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureIaaSVMJobTaskDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureIaaSVMJobTaskDetails::OAIAzureIaaSVMJobTaskDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureIaaSVMJobTaskDetails::OAIAzureIaaSVMJobTaskDetails() {
    this->initializeModel();
}

OAIAzureIaaSVMJobTaskDetails::~OAIAzureIaaSVMJobTaskDetails() {}

void OAIAzureIaaSVMJobTaskDetails::initializeModel() {

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_instance_id_isSet = false;
    m_instance_id_isValid = false;

    m_progress_percentage_isSet = false;
    m_progress_percentage_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_task_execution_details_isSet = false;
    m_task_execution_details_isValid = false;

    m_task_id_isSet = false;
    m_task_id_isValid = false;
}

void OAIAzureIaaSVMJobTaskDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureIaaSVMJobTaskDetails::fromJsonObject(QJsonObject json) {

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_instance_id_isValid = ::OpenAPI::fromJsonValue(m_instance_id, json[QString("instanceId")]);
    m_instance_id_isSet = !json[QString("instanceId")].isNull() && m_instance_id_isValid;

    m_progress_percentage_isValid = ::OpenAPI::fromJsonValue(m_progress_percentage, json[QString("progressPercentage")]);
    m_progress_percentage_isSet = !json[QString("progressPercentage")].isNull() && m_progress_percentage_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_task_execution_details_isValid = ::OpenAPI::fromJsonValue(m_task_execution_details, json[QString("taskExecutionDetails")]);
    m_task_execution_details_isSet = !json[QString("taskExecutionDetails")].isNull() && m_task_execution_details_isValid;

    m_task_id_isValid = ::OpenAPI::fromJsonValue(m_task_id, json[QString("taskId")]);
    m_task_id_isSet = !json[QString("taskId")].isNull() && m_task_id_isValid;
}

QString OAIAzureIaaSVMJobTaskDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureIaaSVMJobTaskDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_instance_id_isSet) {
        obj.insert(QString("instanceId"), ::OpenAPI::toJsonValue(m_instance_id));
    }
    if (m_progress_percentage_isSet) {
        obj.insert(QString("progressPercentage"), ::OpenAPI::toJsonValue(m_progress_percentage));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_task_execution_details_isSet) {
        obj.insert(QString("taskExecutionDetails"), ::OpenAPI::toJsonValue(m_task_execution_details));
    }
    if (m_task_id_isSet) {
        obj.insert(QString("taskId"), ::OpenAPI::toJsonValue(m_task_id));
    }
    return obj;
}

QString OAIAzureIaaSVMJobTaskDetails::getDuration() const {
    return m_duration;
}
void OAIAzureIaaSVMJobTaskDetails::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIAzureIaaSVMJobTaskDetails::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIAzureIaaSVMJobTaskDetails::is_duration_Valid() const{
    return m_duration_isValid;
}

QDateTime OAIAzureIaaSVMJobTaskDetails::getEndTime() const {
    return m_end_time;
}
void OAIAzureIaaSVMJobTaskDetails::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIAzureIaaSVMJobTaskDetails::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIAzureIaaSVMJobTaskDetails::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIAzureIaaSVMJobTaskDetails::getInstanceId() const {
    return m_instance_id;
}
void OAIAzureIaaSVMJobTaskDetails::setInstanceId(const QString &instance_id) {
    m_instance_id = instance_id;
    m_instance_id_isSet = true;
}

bool OAIAzureIaaSVMJobTaskDetails::is_instance_id_Set() const{
    return m_instance_id_isSet;
}

bool OAIAzureIaaSVMJobTaskDetails::is_instance_id_Valid() const{
    return m_instance_id_isValid;
}

double OAIAzureIaaSVMJobTaskDetails::getProgressPercentage() const {
    return m_progress_percentage;
}
void OAIAzureIaaSVMJobTaskDetails::setProgressPercentage(const double &progress_percentage) {
    m_progress_percentage = progress_percentage;
    m_progress_percentage_isSet = true;
}

bool OAIAzureIaaSVMJobTaskDetails::is_progress_percentage_Set() const{
    return m_progress_percentage_isSet;
}

bool OAIAzureIaaSVMJobTaskDetails::is_progress_percentage_Valid() const{
    return m_progress_percentage_isValid;
}

QDateTime OAIAzureIaaSVMJobTaskDetails::getStartTime() const {
    return m_start_time;
}
void OAIAzureIaaSVMJobTaskDetails::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIAzureIaaSVMJobTaskDetails::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIAzureIaaSVMJobTaskDetails::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIAzureIaaSVMJobTaskDetails::getStatus() const {
    return m_status;
}
void OAIAzureIaaSVMJobTaskDetails::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAzureIaaSVMJobTaskDetails::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAzureIaaSVMJobTaskDetails::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIAzureIaaSVMJobTaskDetails::getTaskExecutionDetails() const {
    return m_task_execution_details;
}
void OAIAzureIaaSVMJobTaskDetails::setTaskExecutionDetails(const QString &task_execution_details) {
    m_task_execution_details = task_execution_details;
    m_task_execution_details_isSet = true;
}

bool OAIAzureIaaSVMJobTaskDetails::is_task_execution_details_Set() const{
    return m_task_execution_details_isSet;
}

bool OAIAzureIaaSVMJobTaskDetails::is_task_execution_details_Valid() const{
    return m_task_execution_details_isValid;
}

QString OAIAzureIaaSVMJobTaskDetails::getTaskId() const {
    return m_task_id;
}
void OAIAzureIaaSVMJobTaskDetails::setTaskId(const QString &task_id) {
    m_task_id = task_id;
    m_task_id_isSet = true;
}

bool OAIAzureIaaSVMJobTaskDetails::is_task_id_Set() const{
    return m_task_id_isSet;
}

bool OAIAzureIaaSVMJobTaskDetails::is_task_id_Valid() const{
    return m_task_id_isValid;
}

bool OAIAzureIaaSVMJobTaskDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_task_execution_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_task_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureIaaSVMJobTaskDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
