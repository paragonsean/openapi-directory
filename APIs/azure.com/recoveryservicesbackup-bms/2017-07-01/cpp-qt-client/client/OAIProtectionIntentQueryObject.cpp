/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProtectionIntentQueryObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProtectionIntentQueryObject::OAIProtectionIntentQueryObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProtectionIntentQueryObject::OAIProtectionIntentQueryObject() {
    this->initializeModel();
}

OAIProtectionIntentQueryObject::~OAIProtectionIntentQueryObject() {}

void OAIProtectionIntentQueryObject::initializeModel() {

    m_backup_management_type_isSet = false;
    m_backup_management_type_isValid = false;

    m_item_name_isSet = false;
    m_item_name_isValid = false;

    m_item_type_isSet = false;
    m_item_type_isValid = false;

    m_parent_name_isSet = false;
    m_parent_name_isValid = false;
}

void OAIProtectionIntentQueryObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProtectionIntentQueryObject::fromJsonObject(QJsonObject json) {

    m_backup_management_type_isValid = ::OpenAPI::fromJsonValue(m_backup_management_type, json[QString("backupManagementType")]);
    m_backup_management_type_isSet = !json[QString("backupManagementType")].isNull() && m_backup_management_type_isValid;

    m_item_name_isValid = ::OpenAPI::fromJsonValue(m_item_name, json[QString("itemName")]);
    m_item_name_isSet = !json[QString("itemName")].isNull() && m_item_name_isValid;

    m_item_type_isValid = ::OpenAPI::fromJsonValue(m_item_type, json[QString("itemType")]);
    m_item_type_isSet = !json[QString("itemType")].isNull() && m_item_type_isValid;

    m_parent_name_isValid = ::OpenAPI::fromJsonValue(m_parent_name, json[QString("parentName")]);
    m_parent_name_isSet = !json[QString("parentName")].isNull() && m_parent_name_isValid;
}

QString OAIProtectionIntentQueryObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProtectionIntentQueryObject::asJsonObject() const {
    QJsonObject obj;
    if (m_backup_management_type_isSet) {
        obj.insert(QString("backupManagementType"), ::OpenAPI::toJsonValue(m_backup_management_type));
    }
    if (m_item_name_isSet) {
        obj.insert(QString("itemName"), ::OpenAPI::toJsonValue(m_item_name));
    }
    if (m_item_type_isSet) {
        obj.insert(QString("itemType"), ::OpenAPI::toJsonValue(m_item_type));
    }
    if (m_parent_name_isSet) {
        obj.insert(QString("parentName"), ::OpenAPI::toJsonValue(m_parent_name));
    }
    return obj;
}

QString OAIProtectionIntentQueryObject::getBackupManagementType() const {
    return m_backup_management_type;
}
void OAIProtectionIntentQueryObject::setBackupManagementType(const QString &backup_management_type) {
    m_backup_management_type = backup_management_type;
    m_backup_management_type_isSet = true;
}

bool OAIProtectionIntentQueryObject::is_backup_management_type_Set() const{
    return m_backup_management_type_isSet;
}

bool OAIProtectionIntentQueryObject::is_backup_management_type_Valid() const{
    return m_backup_management_type_isValid;
}

QString OAIProtectionIntentQueryObject::getItemName() const {
    return m_item_name;
}
void OAIProtectionIntentQueryObject::setItemName(const QString &item_name) {
    m_item_name = item_name;
    m_item_name_isSet = true;
}

bool OAIProtectionIntentQueryObject::is_item_name_Set() const{
    return m_item_name_isSet;
}

bool OAIProtectionIntentQueryObject::is_item_name_Valid() const{
    return m_item_name_isValid;
}

QString OAIProtectionIntentQueryObject::getItemType() const {
    return m_item_type;
}
void OAIProtectionIntentQueryObject::setItemType(const QString &item_type) {
    m_item_type = item_type;
    m_item_type_isSet = true;
}

bool OAIProtectionIntentQueryObject::is_item_type_Set() const{
    return m_item_type_isSet;
}

bool OAIProtectionIntentQueryObject::is_item_type_Valid() const{
    return m_item_type_isValid;
}

QString OAIProtectionIntentQueryObject::getParentName() const {
    return m_parent_name;
}
void OAIProtectionIntentQueryObject::setParentName(const QString &parent_name) {
    m_parent_name = parent_name;
    m_parent_name_isSet = true;
}

bool OAIProtectionIntentQueryObject::is_parent_name_Set() const{
    return m_parent_name_isSet;
}

bool OAIProtectionIntentQueryObject::is_parent_name_Valid() const{
    return m_parent_name_isValid;
}

bool OAIProtectionIntentQueryObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_backup_management_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProtectionIntentQueryObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
