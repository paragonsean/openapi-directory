/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Base class for backup item. Workload-specific backup items are derived from this class.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:09:00.908826-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WorkloadItem {
  public static final String SERIALIZED_NAME_BACKUP_MANAGEMENT_TYPE = "backupManagementType";
  @SerializedName(SERIALIZED_NAME_BACKUP_MANAGEMENT_TYPE)
  private String backupManagementType;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendlyName";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  /**
   * State of the back up item.
   */
  @JsonAdapter(ProtectionStateEnum.Adapter.class)
  public enum ProtectionStateEnum {
    INVALID("Invalid"),
    
    NOT_PROTECTED("NotProtected"),
    
    PROTECTING("Protecting"),
    
    PROTECTED("Protected"),
    
    PROTECTION_FAILED("ProtectionFailed");

    private String value;

    ProtectionStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProtectionStateEnum fromValue(String value) {
      for (ProtectionStateEnum b : ProtectionStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProtectionStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProtectionStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProtectionStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProtectionStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProtectionStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROTECTION_STATE = "protectionState";
  @SerializedName(SERIALIZED_NAME_PROTECTION_STATE)
  private ProtectionStateEnum protectionState;

  public static final String SERIALIZED_NAME_WORKLOAD_ITEM_TYPE = "workloadItemType";
  @SerializedName(SERIALIZED_NAME_WORKLOAD_ITEM_TYPE)
  protected String workloadItemType;

  public static final String SERIALIZED_NAME_WORKLOAD_TYPE = "workloadType";
  @SerializedName(SERIALIZED_NAME_WORKLOAD_TYPE)
  private String workloadType;

  public WorkloadItem() {
    this.workloadItemType = this.getClass().getSimpleName();
  }

  public WorkloadItem backupManagementType(String backupManagementType) {
    this.backupManagementType = backupManagementType;
    return this;
  }

  /**
   * Type of backup management to backup an item.
   * @return backupManagementType
   */
  @javax.annotation.Nullable
  public String getBackupManagementType() {
    return backupManagementType;
  }

  public void setBackupManagementType(String backupManagementType) {
    this.backupManagementType = backupManagementType;
  }


  public WorkloadItem friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * Friendly name of the backup item.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public WorkloadItem protectionState(ProtectionStateEnum protectionState) {
    this.protectionState = protectionState;
    return this;
  }

  /**
   * State of the back up item.
   * @return protectionState
   */
  @javax.annotation.Nullable
  public ProtectionStateEnum getProtectionState() {
    return protectionState;
  }

  public void setProtectionState(ProtectionStateEnum protectionState) {
    this.protectionState = protectionState;
  }


  public WorkloadItem workloadItemType(String workloadItemType) {
    this.workloadItemType = workloadItemType;
    return this;
  }

  /**
   * Type of the backup item.
   * @return workloadItemType
   */
  @javax.annotation.Nullable
  public String getWorkloadItemType() {
    return workloadItemType;
  }

  public void setWorkloadItemType(String workloadItemType) {
    this.workloadItemType = workloadItemType;
  }


  public WorkloadItem workloadType(String workloadType) {
    this.workloadType = workloadType;
    return this;
  }

  /**
   * Type of workload for the backup management
   * @return workloadType
   */
  @javax.annotation.Nullable
  public String getWorkloadType() {
    return workloadType;
  }

  public void setWorkloadType(String workloadType) {
    this.workloadType = workloadType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkloadItem workloadItem = (WorkloadItem) o;
    return Objects.equals(this.backupManagementType, workloadItem.backupManagementType) &&
        Objects.equals(this.friendlyName, workloadItem.friendlyName) &&
        Objects.equals(this.protectionState, workloadItem.protectionState) &&
        Objects.equals(this.workloadItemType, workloadItem.workloadItemType) &&
        Objects.equals(this.workloadType, workloadItem.workloadType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupManagementType, friendlyName, protectionState, workloadItemType, workloadType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkloadItem {\n");
    sb.append("    backupManagementType: ").append(toIndentedString(backupManagementType)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    protectionState: ").append(toIndentedString(protectionState)).append("\n");
    sb.append("    workloadItemType: ").append(toIndentedString(workloadItemType)).append("\n");
    sb.append("    workloadType: ").append(toIndentedString(workloadType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backupManagementType");
    openapiFields.add("friendlyName");
    openapiFields.add("protectionState");
    openapiFields.add("workloadItemType");
    openapiFields.add("workloadType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WorkloadItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WorkloadItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkloadItem is not found in the empty JSON string", WorkloadItem.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("workloadItemType").getAsString();
      switch (discriminatorValue) {
        case "AzureVmWorkloadItem":
          AzureVmWorkloadItem.validateJsonElement(jsonElement);
          break;
        case "AzureVmWorkloadSAPAseDatabaseWorkloadItem":
          AzureVmWorkloadSAPAseDatabaseWorkloadItem.validateJsonElement(jsonElement);
          break;
        case "AzureVmWorkloadSAPAseSystemWorkloadItem":
          AzureVmWorkloadSAPAseSystemWorkloadItem.validateJsonElement(jsonElement);
          break;
        case "AzureVmWorkloadSAPHanaDatabaseWorkloadItem":
          AzureVmWorkloadSAPHanaDatabaseWorkloadItem.validateJsonElement(jsonElement);
          break;
        case "AzureVmWorkloadSAPHanaSystemWorkloadItem":
          AzureVmWorkloadSAPHanaSystemWorkloadItem.validateJsonElement(jsonElement);
          break;
        case "AzureVmWorkloadSQLDatabaseWorkloadItem":
          AzureVmWorkloadSQLDatabaseWorkloadItem.validateJsonElement(jsonElement);
          break;
        case "AzureVmWorkloadSQLInstanceWorkloadItem":
          AzureVmWorkloadSQLInstanceWorkloadItem.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `workloadItemType` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of WorkloadItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WorkloadItem
   * @throws IOException if the JSON string is invalid with respect to WorkloadItem
   */
  public static WorkloadItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkloadItem.class);
  }

  /**
   * Convert an instance of WorkloadItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

