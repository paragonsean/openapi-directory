/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ProtectionContainer;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IaaS VM workload-specific container.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:09:00.908826-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IaaSVMContainer extends ProtectionContainer {
  public static final String SERIALIZED_NAME_RESOURCE_GROUP = "resourceGroup";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GROUP)
  private String resourceGroup;

  public static final String SERIALIZED_NAME_VIRTUAL_MACHINE_ID = "virtualMachineId";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_MACHINE_ID)
  private String virtualMachineId;

  public static final String SERIALIZED_NAME_VIRTUAL_MACHINE_VERSION = "virtualMachineVersion";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_MACHINE_VERSION)
  private String virtualMachineVersion;

  public IaaSVMContainer() {
    this.containerType = this.getClass().getSimpleName();
  }

  public IaaSVMContainer resourceGroup(String resourceGroup) {
    this.resourceGroup = resourceGroup;
    return this;
  }

  /**
   * Resource group name of Recovery Services Vault.
   * @return resourceGroup
   */
  @javax.annotation.Nullable
  public String getResourceGroup() {
    return resourceGroup;
  }

  public void setResourceGroup(String resourceGroup) {
    this.resourceGroup = resourceGroup;
  }


  public IaaSVMContainer virtualMachineId(String virtualMachineId) {
    this.virtualMachineId = virtualMachineId;
    return this;
  }

  /**
   * Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
   * @return virtualMachineId
   */
  @javax.annotation.Nullable
  public String getVirtualMachineId() {
    return virtualMachineId;
  }

  public void setVirtualMachineId(String virtualMachineId) {
    this.virtualMachineId = virtualMachineId;
  }


  public IaaSVMContainer virtualMachineVersion(String virtualMachineVersion) {
    this.virtualMachineVersion = virtualMachineVersion;
    return this;
  }

  /**
   * Specifies whether the container represents a Classic or an Azure Resource Manager VM.
   * @return virtualMachineVersion
   */
  @javax.annotation.Nullable
  public String getVirtualMachineVersion() {
    return virtualMachineVersion;
  }

  public void setVirtualMachineVersion(String virtualMachineVersion) {
    this.virtualMachineVersion = virtualMachineVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IaaSVMContainer iaaSVMContainer = (IaaSVMContainer) o;
    return Objects.equals(this.resourceGroup, iaaSVMContainer.resourceGroup) &&
        Objects.equals(this.virtualMachineId, iaaSVMContainer.virtualMachineId) &&
        Objects.equals(this.virtualMachineVersion, iaaSVMContainer.virtualMachineVersion) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceGroup, virtualMachineId, virtualMachineVersion, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IaaSVMContainer {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    resourceGroup: ").append(toIndentedString(resourceGroup)).append("\n");
    sb.append("    virtualMachineId: ").append(toIndentedString(virtualMachineId)).append("\n");
    sb.append("    virtualMachineVersion: ").append(toIndentedString(virtualMachineVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backupManagementType");
    openapiFields.add("containerType");
    openapiFields.add("friendlyName");
    openapiFields.add("healthStatus");
    openapiFields.add("registrationStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IaaSVMContainer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IaaSVMContainer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IaaSVMContainer is not found in the empty JSON string", IaaSVMContainer.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("containerType").getAsString();
      switch (discriminatorValue) {
        case "AzureIaaSClassicComputeVMContainer":
          AzureIaaSClassicComputeVMContainer.validateJsonElement(jsonElement);
          break;
        case "AzureIaaSComputeVMContainer":
          AzureIaaSComputeVMContainer.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `containerType` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of IaaSVMContainer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IaaSVMContainer
   * @throws IOException if the JSON string is invalid with respect to IaaSVMContainer
   */
  public static IaaSVMContainer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IaaSVMContainer.class);
  }

  /**
   * Convert an instance of IaaSVMContainer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

