/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ProtectionContainer;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Azure Storage Account workload-specific container.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:09:00.908826-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AzureStorageContainer extends ProtectionContainer {
  public static final String SERIALIZED_NAME_PROTECTED_ITEM_COUNT = "protectedItemCount";
  @SerializedName(SERIALIZED_NAME_PROTECTED_ITEM_COUNT)
  private Long protectedItemCount;

  public static final String SERIALIZED_NAME_RESOURCE_GROUP = "resourceGroup";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GROUP)
  private String resourceGroup;

  public static final String SERIALIZED_NAME_SOURCE_RESOURCE_ID = "sourceResourceId";
  @SerializedName(SERIALIZED_NAME_SOURCE_RESOURCE_ID)
  private String sourceResourceId;

  public static final String SERIALIZED_NAME_STORAGE_ACCOUNT_VERSION = "storageAccountVersion";
  @SerializedName(SERIALIZED_NAME_STORAGE_ACCOUNT_VERSION)
  private String storageAccountVersion;

  public AzureStorageContainer() {
    this.containerType = this.getClass().getSimpleName();
  }

  public AzureStorageContainer protectedItemCount(Long protectedItemCount) {
    this.protectedItemCount = protectedItemCount;
    return this;
  }

  /**
   * Number of items backed up in this container.
   * @return protectedItemCount
   */
  @javax.annotation.Nullable
  public Long getProtectedItemCount() {
    return protectedItemCount;
  }

  public void setProtectedItemCount(Long protectedItemCount) {
    this.protectedItemCount = protectedItemCount;
  }


  public AzureStorageContainer resourceGroup(String resourceGroup) {
    this.resourceGroup = resourceGroup;
    return this;
  }

  /**
   * Resource group name of Recovery Services Vault.
   * @return resourceGroup
   */
  @javax.annotation.Nullable
  public String getResourceGroup() {
    return resourceGroup;
  }

  public void setResourceGroup(String resourceGroup) {
    this.resourceGroup = resourceGroup;
  }


  public AzureStorageContainer sourceResourceId(String sourceResourceId) {
    this.sourceResourceId = sourceResourceId;
    return this;
  }

  /**
   * Fully qualified ARM url.
   * @return sourceResourceId
   */
  @javax.annotation.Nullable
  public String getSourceResourceId() {
    return sourceResourceId;
  }

  public void setSourceResourceId(String sourceResourceId) {
    this.sourceResourceId = sourceResourceId;
  }


  public AzureStorageContainer storageAccountVersion(String storageAccountVersion) {
    this.storageAccountVersion = storageAccountVersion;
    return this;
  }

  /**
   * Storage account version.
   * @return storageAccountVersion
   */
  @javax.annotation.Nullable
  public String getStorageAccountVersion() {
    return storageAccountVersion;
  }

  public void setStorageAccountVersion(String storageAccountVersion) {
    this.storageAccountVersion = storageAccountVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureStorageContainer azureStorageContainer = (AzureStorageContainer) o;
    return Objects.equals(this.protectedItemCount, azureStorageContainer.protectedItemCount) &&
        Objects.equals(this.resourceGroup, azureStorageContainer.resourceGroup) &&
        Objects.equals(this.sourceResourceId, azureStorageContainer.sourceResourceId) &&
        Objects.equals(this.storageAccountVersion, azureStorageContainer.storageAccountVersion) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(protectedItemCount, resourceGroup, sourceResourceId, storageAccountVersion, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureStorageContainer {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    protectedItemCount: ").append(toIndentedString(protectedItemCount)).append("\n");
    sb.append("    resourceGroup: ").append(toIndentedString(resourceGroup)).append("\n");
    sb.append("    sourceResourceId: ").append(toIndentedString(sourceResourceId)).append("\n");
    sb.append("    storageAccountVersion: ").append(toIndentedString(storageAccountVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backupManagementType");
    openapiFields.add("containerType");
    openapiFields.add("friendlyName");
    openapiFields.add("healthStatus");
    openapiFields.add("registrationStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AzureStorageContainer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AzureStorageContainer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AzureStorageContainer is not found in the empty JSON string", AzureStorageContainer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AzureStorageContainer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AzureStorageContainer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AzureStorageContainer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AzureStorageContainer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AzureStorageContainer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AzureStorageContainer.class));

       return (TypeAdapter<T>) new TypeAdapter<AzureStorageContainer>() {
           @Override
           public void write(JsonWriter out, AzureStorageContainer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AzureStorageContainer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AzureStorageContainer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AzureStorageContainer
   * @throws IOException if the JSON string is invalid with respect to AzureStorageContainer
   */
  public static AzureStorageContainer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AzureStorageContainer.class);
  }

  /**
   * Convert an instance of AzureStorageContainer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

