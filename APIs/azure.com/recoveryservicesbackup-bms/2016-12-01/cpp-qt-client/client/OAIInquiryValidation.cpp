/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInquiryValidation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInquiryValidation::OAIInquiryValidation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInquiryValidation::OAIInquiryValidation() {
    this->initializeModel();
}

OAIInquiryValidation::~OAIInquiryValidation() {}

void OAIInquiryValidation::initializeModel() {

    m_additional_detail_isSet = false;
    m_additional_detail_isValid = false;

    m_error_detail_isSet = false;
    m_error_detail_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIInquiryValidation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInquiryValidation::fromJsonObject(QJsonObject json) {

    m_additional_detail_isValid = ::OpenAPI::fromJsonValue(m_additional_detail, json[QString("additionalDetail")]);
    m_additional_detail_isSet = !json[QString("additionalDetail")].isNull() && m_additional_detail_isValid;

    m_error_detail_isValid = ::OpenAPI::fromJsonValue(m_error_detail, json[QString("errorDetail")]);
    m_error_detail_isSet = !json[QString("errorDetail")].isNull() && m_error_detail_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIInquiryValidation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInquiryValidation::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_detail_isSet) {
        obj.insert(QString("additionalDetail"), ::OpenAPI::toJsonValue(m_additional_detail));
    }
    if (m_error_detail.isSet()) {
        obj.insert(QString("errorDetail"), ::OpenAPI::toJsonValue(m_error_detail));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIInquiryValidation::getAdditionalDetail() const {
    return m_additional_detail;
}
void OAIInquiryValidation::setAdditionalDetail(const QString &additional_detail) {
    m_additional_detail = additional_detail;
    m_additional_detail_isSet = true;
}

bool OAIInquiryValidation::is_additional_detail_Set() const{
    return m_additional_detail_isSet;
}

bool OAIInquiryValidation::is_additional_detail_Valid() const{
    return m_additional_detail_isValid;
}

OAIErrorDetail OAIInquiryValidation::getErrorDetail() const {
    return m_error_detail;
}
void OAIInquiryValidation::setErrorDetail(const OAIErrorDetail &error_detail) {
    m_error_detail = error_detail;
    m_error_detail_isSet = true;
}

bool OAIInquiryValidation::is_error_detail_Set() const{
    return m_error_detail_isSet;
}

bool OAIInquiryValidation::is_error_detail_Valid() const{
    return m_error_detail_isValid;
}

QString OAIInquiryValidation::getStatus() const {
    return m_status;
}
void OAIInquiryValidation::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIInquiryValidation::is_status_Set() const{
    return m_status_isSet;
}

bool OAIInquiryValidation::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIInquiryValidation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_detail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInquiryValidation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
