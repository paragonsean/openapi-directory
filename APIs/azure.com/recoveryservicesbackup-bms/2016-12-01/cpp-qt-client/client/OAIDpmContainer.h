/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDpmContainer.h
 *
 * DPM workload-specific protection container.
 */

#ifndef OAIDpmContainer_H
#define OAIDpmContainer_H

#include <QJsonObject>

#include "OAIDPMContainerExtendedInfo.h"
#include "OAIProtectionContainer.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDPMContainerExtendedInfo;

class OAIDpmContainer : public OAIObject {
public:
    OAIDpmContainer();
    OAIDpmContainer(QString json);
    ~OAIDpmContainer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanReRegister() const;
    void setCanReRegister(const bool &can_re_register);
    bool is_can_re_register_Set() const;
    bool is_can_re_register_Valid() const;

    QString getContainerId() const;
    void setContainerId(const QString &container_id);
    bool is_container_id_Set() const;
    bool is_container_id_Valid() const;

    QString getDpmAgentVersion() const;
    void setDpmAgentVersion(const QString &dpm_agent_version);
    bool is_dpm_agent_version_Set() const;
    bool is_dpm_agent_version_Valid() const;

    QList<QString> getDpmServers() const;
    void setDpmServers(const QList<QString> &dpm_servers);
    bool is_dpm_servers_Set() const;
    bool is_dpm_servers_Valid() const;

    OAIDPMContainerExtendedInfo getExtendedInfo() const;
    void setExtendedInfo(const OAIDPMContainerExtendedInfo &extended_info);
    bool is_extended_info_Set() const;
    bool is_extended_info_Valid() const;

    qint64 getProtectedItemCount() const;
    void setProtectedItemCount(const qint64 &protected_item_count);
    bool is_protected_item_count_Set() const;
    bool is_protected_item_count_Valid() const;

    QString getProtectionStatus() const;
    void setProtectionStatus(const QString &protection_status);
    bool is_protection_status_Set() const;
    bool is_protection_status_Valid() const;

    bool isUpgradeAvailable() const;
    void setUpgradeAvailable(const bool &upgrade_available);
    bool is_upgrade_available_Set() const;
    bool is_upgrade_available_Valid() const;

    QString getBackupManagementType() const;
    void setBackupManagementType(const QString &backup_management_type);
    bool is_backup_management_type_Set() const;
    bool is_backup_management_type_Valid() const;

    QString getContainerType() const;
    void setContainerType(const QString &container_type);
    bool is_container_type_Set() const;
    bool is_container_type_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QString getHealthStatus() const;
    void setHealthStatus(const QString &health_status);
    bool is_health_status_Set() const;
    bool is_health_status_Valid() const;

    QString getRegistrationStatus() const;
    void setRegistrationStatus(const QString &registration_status);
    bool is_registration_status_Set() const;
    bool is_registration_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_can_re_register;
    bool m_can_re_register_isSet;
    bool m_can_re_register_isValid;

    QString m_container_id;
    bool m_container_id_isSet;
    bool m_container_id_isValid;

    QString m_dpm_agent_version;
    bool m_dpm_agent_version_isSet;
    bool m_dpm_agent_version_isValid;

    QList<QString> m_dpm_servers;
    bool m_dpm_servers_isSet;
    bool m_dpm_servers_isValid;

    OAIDPMContainerExtendedInfo m_extended_info;
    bool m_extended_info_isSet;
    bool m_extended_info_isValid;

    qint64 m_protected_item_count;
    bool m_protected_item_count_isSet;
    bool m_protected_item_count_isValid;

    QString m_protection_status;
    bool m_protection_status_isSet;
    bool m_protection_status_isValid;

    bool m_upgrade_available;
    bool m_upgrade_available_isSet;
    bool m_upgrade_available_isValid;

    QString m_backup_management_type;
    bool m_backup_management_type_isSet;
    bool m_backup_management_type_isValid;

    QString m_container_type;
    bool m_container_type_isSet;
    bool m_container_type_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QString m_health_status;
    bool m_health_status_isSet;
    bool m_health_status_isValid;

    QString m_registration_status;
    bool m_registration_status_isSet;
    bool m_registration_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDpmContainer)

#endif // OAIDpmContainer_H
