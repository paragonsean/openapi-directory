/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInquiryInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInquiryInfo::OAIInquiryInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInquiryInfo::OAIInquiryInfo() {
    this->initializeModel();
}

OAIInquiryInfo::~OAIInquiryInfo() {}

void OAIInquiryInfo::initializeModel() {

    m_error_detail_isSet = false;
    m_error_detail_isValid = false;

    m_inquiry_details_isSet = false;
    m_inquiry_details_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIInquiryInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInquiryInfo::fromJsonObject(QJsonObject json) {

    m_error_detail_isValid = ::OpenAPI::fromJsonValue(m_error_detail, json[QString("errorDetail")]);
    m_error_detail_isSet = !json[QString("errorDetail")].isNull() && m_error_detail_isValid;

    m_inquiry_details_isValid = ::OpenAPI::fromJsonValue(m_inquiry_details, json[QString("inquiryDetails")]);
    m_inquiry_details_isSet = !json[QString("inquiryDetails")].isNull() && m_inquiry_details_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIInquiryInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInquiryInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_error_detail.isSet()) {
        obj.insert(QString("errorDetail"), ::OpenAPI::toJsonValue(m_error_detail));
    }
    if (m_inquiry_details.size() > 0) {
        obj.insert(QString("inquiryDetails"), ::OpenAPI::toJsonValue(m_inquiry_details));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIErrorDetail OAIInquiryInfo::getErrorDetail() const {
    return m_error_detail;
}
void OAIInquiryInfo::setErrorDetail(const OAIErrorDetail &error_detail) {
    m_error_detail = error_detail;
    m_error_detail_isSet = true;
}

bool OAIInquiryInfo::is_error_detail_Set() const{
    return m_error_detail_isSet;
}

bool OAIInquiryInfo::is_error_detail_Valid() const{
    return m_error_detail_isValid;
}

QList<OAIWorkloadInquiryDetails> OAIInquiryInfo::getInquiryDetails() const {
    return m_inquiry_details;
}
void OAIInquiryInfo::setInquiryDetails(const QList<OAIWorkloadInquiryDetails> &inquiry_details) {
    m_inquiry_details = inquiry_details;
    m_inquiry_details_isSet = true;
}

bool OAIInquiryInfo::is_inquiry_details_Set() const{
    return m_inquiry_details_isSet;
}

bool OAIInquiryInfo::is_inquiry_details_Valid() const{
    return m_inquiry_details_isValid;
}

QString OAIInquiryInfo::getStatus() const {
    return m_status;
}
void OAIInquiryInfo::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIInquiryInfo::is_status_Set() const{
    return m_status_isSet;
}

bool OAIInquiryInfo::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIInquiryInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_inquiry_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInquiryInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
