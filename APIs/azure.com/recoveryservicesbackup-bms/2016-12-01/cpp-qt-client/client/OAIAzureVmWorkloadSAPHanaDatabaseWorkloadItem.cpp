/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem() {
    this->initializeModel();
}

OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::~OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem() {}

void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::initializeModel() {

    m_is_auto_protectable_isSet = false;
    m_is_auto_protectable_isValid = false;

    m_parent_name_isSet = false;
    m_parent_name_isValid = false;

    m_server_name_isSet = false;
    m_server_name_isValid = false;

    m_sub_workload_item_count_isSet = false;
    m_sub_workload_item_count_isValid = false;

    m_subinquireditemcount_isSet = false;
    m_subinquireditemcount_isValid = false;

    m_backup_management_type_isSet = false;
    m_backup_management_type_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_protection_state_isSet = false;
    m_protection_state_isValid = false;

    m_workload_item_type_isSet = false;
    m_workload_item_type_isValid = false;

    m_workload_type_isSet = false;
    m_workload_type_isValid = false;
}

void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::fromJsonObject(QJsonObject json) {

    m_is_auto_protectable_isValid = ::OpenAPI::fromJsonValue(m_is_auto_protectable, json[QString("isAutoProtectable")]);
    m_is_auto_protectable_isSet = !json[QString("isAutoProtectable")].isNull() && m_is_auto_protectable_isValid;

    m_parent_name_isValid = ::OpenAPI::fromJsonValue(m_parent_name, json[QString("parentName")]);
    m_parent_name_isSet = !json[QString("parentName")].isNull() && m_parent_name_isValid;

    m_server_name_isValid = ::OpenAPI::fromJsonValue(m_server_name, json[QString("serverName")]);
    m_server_name_isSet = !json[QString("serverName")].isNull() && m_server_name_isValid;

    m_sub_workload_item_count_isValid = ::OpenAPI::fromJsonValue(m_sub_workload_item_count, json[QString("subWorkloadItemCount")]);
    m_sub_workload_item_count_isSet = !json[QString("subWorkloadItemCount")].isNull() && m_sub_workload_item_count_isValid;

    m_subinquireditemcount_isValid = ::OpenAPI::fromJsonValue(m_subinquireditemcount, json[QString("subinquireditemcount")]);
    m_subinquireditemcount_isSet = !json[QString("subinquireditemcount")].isNull() && m_subinquireditemcount_isValid;

    m_backup_management_type_isValid = ::OpenAPI::fromJsonValue(m_backup_management_type, json[QString("backupManagementType")]);
    m_backup_management_type_isSet = !json[QString("backupManagementType")].isNull() && m_backup_management_type_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendlyName")]);
    m_friendly_name_isSet = !json[QString("friendlyName")].isNull() && m_friendly_name_isValid;

    m_protection_state_isValid = ::OpenAPI::fromJsonValue(m_protection_state, json[QString("protectionState")]);
    m_protection_state_isSet = !json[QString("protectionState")].isNull() && m_protection_state_isValid;

    m_workload_item_type_isValid = ::OpenAPI::fromJsonValue(m_workload_item_type, json[QString("workloadItemType")]);
    m_workload_item_type_isSet = !json[QString("workloadItemType")].isNull() && m_workload_item_type_isValid;

    m_workload_type_isValid = ::OpenAPI::fromJsonValue(m_workload_type, json[QString("workloadType")]);
    m_workload_type_isSet = !json[QString("workloadType")].isNull() && m_workload_type_isValid;
}

QString OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::asJsonObject() const {
    QJsonObject obj;
    if (m_is_auto_protectable_isSet) {
        obj.insert(QString("isAutoProtectable"), ::OpenAPI::toJsonValue(m_is_auto_protectable));
    }
    if (m_parent_name_isSet) {
        obj.insert(QString("parentName"), ::OpenAPI::toJsonValue(m_parent_name));
    }
    if (m_server_name_isSet) {
        obj.insert(QString("serverName"), ::OpenAPI::toJsonValue(m_server_name));
    }
    if (m_sub_workload_item_count_isSet) {
        obj.insert(QString("subWorkloadItemCount"), ::OpenAPI::toJsonValue(m_sub_workload_item_count));
    }
    if (m_subinquireditemcount_isSet) {
        obj.insert(QString("subinquireditemcount"), ::OpenAPI::toJsonValue(m_subinquireditemcount));
    }
    if (m_backup_management_type_isSet) {
        obj.insert(QString("backupManagementType"), ::OpenAPI::toJsonValue(m_backup_management_type));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendlyName"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_protection_state_isSet) {
        obj.insert(QString("protectionState"), ::OpenAPI::toJsonValue(m_protection_state));
    }
    if (m_workload_item_type_isSet) {
        obj.insert(QString("workloadItemType"), ::OpenAPI::toJsonValue(m_workload_item_type));
    }
    if (m_workload_type_isSet) {
        obj.insert(QString("workloadType"), ::OpenAPI::toJsonValue(m_workload_type));
    }
    return obj;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::isIsAutoProtectable() const {
    return m_is_auto_protectable;
}
void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::setIsAutoProtectable(const bool &is_auto_protectable) {
    m_is_auto_protectable = is_auto_protectable;
    m_is_auto_protectable_isSet = true;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_is_auto_protectable_Set() const{
    return m_is_auto_protectable_isSet;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_is_auto_protectable_Valid() const{
    return m_is_auto_protectable_isValid;
}

QString OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::getParentName() const {
    return m_parent_name;
}
void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::setParentName(const QString &parent_name) {
    m_parent_name = parent_name;
    m_parent_name_isSet = true;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_parent_name_Set() const{
    return m_parent_name_isSet;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_parent_name_Valid() const{
    return m_parent_name_isValid;
}

QString OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::getServerName() const {
    return m_server_name;
}
void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::setServerName(const QString &server_name) {
    m_server_name = server_name;
    m_server_name_isSet = true;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_server_name_Set() const{
    return m_server_name_isSet;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_server_name_Valid() const{
    return m_server_name_isValid;
}

qint32 OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::getSubWorkloadItemCount() const {
    return m_sub_workload_item_count;
}
void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::setSubWorkloadItemCount(const qint32 &sub_workload_item_count) {
    m_sub_workload_item_count = sub_workload_item_count;
    m_sub_workload_item_count_isSet = true;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_sub_workload_item_count_Set() const{
    return m_sub_workload_item_count_isSet;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_sub_workload_item_count_Valid() const{
    return m_sub_workload_item_count_isValid;
}

qint32 OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::getSubinquireditemcount() const {
    return m_subinquireditemcount;
}
void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::setSubinquireditemcount(const qint32 &subinquireditemcount) {
    m_subinquireditemcount = subinquireditemcount;
    m_subinquireditemcount_isSet = true;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_subinquireditemcount_Set() const{
    return m_subinquireditemcount_isSet;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_subinquireditemcount_Valid() const{
    return m_subinquireditemcount_isValid;
}

QString OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::getBackupManagementType() const {
    return m_backup_management_type;
}
void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::setBackupManagementType(const QString &backup_management_type) {
    m_backup_management_type = backup_management_type;
    m_backup_management_type_isSet = true;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_backup_management_type_Set() const{
    return m_backup_management_type_isSet;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_backup_management_type_Valid() const{
    return m_backup_management_type_isValid;
}

QString OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::getFriendlyName() const {
    return m_friendly_name;
}
void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::getProtectionState() const {
    return m_protection_state;
}
void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::setProtectionState(const QString &protection_state) {
    m_protection_state = protection_state;
    m_protection_state_isSet = true;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_protection_state_Set() const{
    return m_protection_state_isSet;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_protection_state_Valid() const{
    return m_protection_state_isValid;
}

QString OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::getWorkloadItemType() const {
    return m_workload_item_type;
}
void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::setWorkloadItemType(const QString &workload_item_type) {
    m_workload_item_type = workload_item_type;
    m_workload_item_type_isSet = true;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_workload_item_type_Set() const{
    return m_workload_item_type_isSet;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_workload_item_type_Valid() const{
    return m_workload_item_type_isValid;
}

QString OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::getWorkloadType() const {
    return m_workload_type;
}
void OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::setWorkloadType(const QString &workload_type) {
    m_workload_type = workload_type;
    m_workload_type_isSet = true;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_workload_type_Set() const{
    return m_workload_type_isSet;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::is_workload_type_Valid() const{
    return m_workload_type_isValid;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_auto_protectable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_server_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_workload_item_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subinquireditemcount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_backup_management_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_protection_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_workload_item_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_workload_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureVmWorkloadSAPHanaDatabaseWorkloadItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
