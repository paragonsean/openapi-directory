/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OperationStatus from '../model/OperationStatus';

/**
* ProtectionPolicyOperationStatuses service.
* @module api/ProtectionPolicyOperationStatusesApi
* @version 2016-12-01
*/
export default class ProtectionPolicyOperationStatusesApi {

    /**
    * Constructs a new ProtectionPolicyOperationStatusesApi. 
    * @alias module:api/ProtectionPolicyOperationStatusesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the protectionPolicyOperationStatusesGet operation.
     * @callback module:api/ProtectionPolicyOperationStatusesApi~protectionPolicyOperationStatusesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Provides the status of the asynchronous operations like backup, restore. The status can be in progress, completed  or failed. You can refer to the Operation Status enum for all the possible states of an operation. Some operations  create jobs. This method returns the list of jobs associated with operation.
     * @param {String} apiVersion Client Api Version.
     * @param {String} vaultName The name of the recovery services vault.
     * @param {String} resourceGroupName The name of the resource group where the recovery services vault is present.
     * @param {String} subscriptionId The subscription Id.
     * @param {String} policyName Backup policy name whose operation's status needs to be fetched.
     * @param {String} operationId Operation ID which represents an operation whose status needs to be fetched.
     * @param {module:api/ProtectionPolicyOperationStatusesApi~protectionPolicyOperationStatusesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatus}
     */
    protectionPolicyOperationStatusesGet(apiVersion, vaultName, resourceGroupName, subscriptionId, policyName, operationId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling protectionPolicyOperationStatusesGet");
      }
      // verify the required parameter 'vaultName' is set
      if (vaultName === undefined || vaultName === null) {
        throw new Error("Missing the required parameter 'vaultName' when calling protectionPolicyOperationStatusesGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling protectionPolicyOperationStatusesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling protectionPolicyOperationStatusesGet");
      }
      // verify the required parameter 'policyName' is set
      if (policyName === undefined || policyName === null) {
        throw new Error("Missing the required parameter 'policyName' when calling protectionPolicyOperationStatusesGet");
      }
      // verify the required parameter 'operationId' is set
      if (operationId === undefined || operationId === null) {
        throw new Error("Missing the required parameter 'operationId' when calling protectionPolicyOperationStatusesGet");
      }

      let pathParams = {
        'vaultName': vaultName,
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId,
        'policyName': policyName,
        'operationId': operationId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationStatus;
      return this.apiClient.callApi(
        '/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}/operations/{operationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
