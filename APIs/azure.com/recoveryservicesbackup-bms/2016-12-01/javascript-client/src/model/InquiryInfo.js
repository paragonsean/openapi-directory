/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorDetail from './ErrorDetail';
import WorkloadInquiryDetails from './WorkloadInquiryDetails';

/**
 * The InquiryInfo model module.
 * @module model/InquiryInfo
 * @version 2016-12-01
 */
class InquiryInfo {
    /**
     * Constructs a new <code>InquiryInfo</code>.
     * Details about inquired protectable items under a given container.
     * @alias module:model/InquiryInfo
     */
    constructor() { 
        
        InquiryInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InquiryInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InquiryInfo} obj Optional instance to populate.
     * @return {module:model/InquiryInfo} The populated <code>InquiryInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InquiryInfo();

            if (data.hasOwnProperty('errorDetail')) {
                obj['errorDetail'] = ErrorDetail.constructFromObject(data['errorDetail']);
            }
            if (data.hasOwnProperty('inquiryDetails')) {
                obj['inquiryDetails'] = ApiClient.convertToType(data['inquiryDetails'], [WorkloadInquiryDetails]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InquiryInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InquiryInfo</code>.
     */
    static validateJSON(data) {
        // validate the optional field `errorDetail`
        if (data['errorDetail']) { // data not null
          ErrorDetail.validateJSON(data['errorDetail']);
        }
        if (data['inquiryDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['inquiryDetails'])) {
                throw new Error("Expected the field `inquiryDetails` to be an array in the JSON data but got " + data['inquiryDetails']);
            }
            // validate the optional field `inquiryDetails` (array)
            for (const item of data['inquiryDetails']) {
                WorkloadInquiryDetails.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {module:model/ErrorDetail} errorDetail
 */
InquiryInfo.prototype['errorDetail'] = undefined;

/**
 * Inquiry Details which will have workload specific details.  For e.g. - For SQL and oracle this will contain different details.
 * @member {Array.<module:model/WorkloadInquiryDetails>} inquiryDetails
 */
InquiryInfo.prototype['inquiryDetails'] = undefined;

/**
 * Inquiry Status for this container such as  InProgress | Failed | Succeeded
 * @member {String} status
 */
InquiryInfo.prototype['status'] = undefined;






export default InquiryInfo;

