/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AzureWorkloadContainerExtendedInfo from './AzureWorkloadContainerExtendedInfo';
import ProtectionContainer from './ProtectionContainer';

/**
 * The AzureWorkloadContainer model module.
 * @module model/AzureWorkloadContainer
 * @version 2016-12-01
 */
class AzureWorkloadContainer {
    /**
     * Constructs a new <code>AzureWorkloadContainer</code>.
     * Container for the workloads running inside Azure Compute or Classic Compute.
     * @alias module:model/AzureWorkloadContainer
     * @extends module:model/ProtectionContainer
     * @implements module:model/ProtectionContainer
     */
    constructor() { 
        ProtectionContainer.initialize(this);
        AzureWorkloadContainer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AzureWorkloadContainer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AzureWorkloadContainer} obj Optional instance to populate.
     * @return {module:model/AzureWorkloadContainer} The populated <code>AzureWorkloadContainer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AzureWorkloadContainer();
            ProtectionContainer.constructFromObject(data, obj);
            ProtectionContainer.constructFromObject(data, obj);

            if (data.hasOwnProperty('extendedInfo')) {
                obj['extendedInfo'] = AzureWorkloadContainerExtendedInfo.constructFromObject(data['extendedInfo']);
            }
            if (data.hasOwnProperty('lastUpdatedTime')) {
                obj['lastUpdatedTime'] = ApiClient.convertToType(data['lastUpdatedTime'], 'Date');
            }
            if (data.hasOwnProperty('operationType')) {
                obj['operationType'] = ApiClient.convertToType(data['operationType'], 'String');
            }
            if (data.hasOwnProperty('sourceResourceId')) {
                obj['sourceResourceId'] = ApiClient.convertToType(data['sourceResourceId'], 'String');
            }
            if (data.hasOwnProperty('workloadType')) {
                obj['workloadType'] = ApiClient.convertToType(data['workloadType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AzureWorkloadContainer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AzureWorkloadContainer</code>.
     */
    static validateJSON(data) {
        // validate the optional field `extendedInfo`
        if (data['extendedInfo']) { // data not null
          AzureWorkloadContainerExtendedInfo.validateJSON(data['extendedInfo']);
        }
        // ensure the json data is a string
        if (data['operationType'] && !(typeof data['operationType'] === 'string' || data['operationType'] instanceof String)) {
            throw new Error("Expected the field `operationType` to be a primitive type in the JSON string but got " + data['operationType']);
        }
        // ensure the json data is a string
        if (data['sourceResourceId'] && !(typeof data['sourceResourceId'] === 'string' || data['sourceResourceId'] instanceof String)) {
            throw new Error("Expected the field `sourceResourceId` to be a primitive type in the JSON string but got " + data['sourceResourceId']);
        }
        // ensure the json data is a string
        if (data['workloadType'] && !(typeof data['workloadType'] === 'string' || data['workloadType'] instanceof String)) {
            throw new Error("Expected the field `workloadType` to be a primitive type in the JSON string but got " + data['workloadType']);
        }

        return true;
    }


}



/**
 * @member {module:model/AzureWorkloadContainerExtendedInfo} extendedInfo
 */
AzureWorkloadContainer.prototype['extendedInfo'] = undefined;

/**
 * Time stamp when this container was updated.
 * @member {Date} lastUpdatedTime
 */
AzureWorkloadContainer.prototype['lastUpdatedTime'] = undefined;

/**
 * Re-Do Operation
 * @member {module:model/AzureWorkloadContainer.OperationTypeEnum} operationType
 */
AzureWorkloadContainer.prototype['operationType'] = undefined;

/**
 * ARM ID of the virtual machine represented by this Azure Workload Container
 * @member {String} sourceResourceId
 */
AzureWorkloadContainer.prototype['sourceResourceId'] = undefined;

/**
 * Workload type for which registration was sent.
 * @member {module:model/AzureWorkloadContainer.WorkloadTypeEnum} workloadType
 */
AzureWorkloadContainer.prototype['workloadType'] = undefined;


// Implement ProtectionContainer interface:
/**
 * Type of backup management for the container.
 * @member {module:model/ProtectionContainer.BackupManagementTypeEnum} backupManagementType
 */
ProtectionContainer.prototype['backupManagementType'] = undefined;
/**
 * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.  Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is  Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload  Backup is VMAppContainer
 * @member {module:model/ProtectionContainer.ContainerTypeEnum} containerType
 */
ProtectionContainer.prototype['containerType'] = undefined;
/**
 * Friendly name of the container.
 * @member {String} friendlyName
 */
ProtectionContainer.prototype['friendlyName'] = undefined;
/**
 * Status of health of the container.
 * @member {String} healthStatus
 */
ProtectionContainer.prototype['healthStatus'] = undefined;
/**
 * Status of registration of the container with the Recovery Services Vault.
 * @member {String} registrationStatus
 */
ProtectionContainer.prototype['registrationStatus'] = undefined;



/**
 * Allowed values for the <code>operationType</code> property.
 * @enum {String}
 * @readonly
 */
AzureWorkloadContainer['OperationTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Register"
     * @const
     */
    "Register": "Register",

    /**
     * value: "Reregister"
     * @const
     */
    "Reregister": "Reregister"
};


/**
 * Allowed values for the <code>workloadType</code> property.
 * @enum {String}
 * @readonly
 */
AzureWorkloadContainer['WorkloadTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "VM"
     * @const
     */
    "VM": "VM",

    /**
     * value: "FileFolder"
     * @const
     */
    "FileFolder": "FileFolder",

    /**
     * value: "AzureSqlDb"
     * @const
     */
    "AzureSqlDb": "AzureSqlDb",

    /**
     * value: "SQLDB"
     * @const
     */
    "SQLDB": "SQLDB",

    /**
     * value: "Exchange"
     * @const
     */
    "Exchange": "Exchange",

    /**
     * value: "Sharepoint"
     * @const
     */
    "Sharepoint": "Sharepoint",

    /**
     * value: "VMwareVM"
     * @const
     */
    "VMwareVM": "VMwareVM",

    /**
     * value: "SystemState"
     * @const
     */
    "SystemState": "SystemState",

    /**
     * value: "Client"
     * @const
     */
    "Client": "Client",

    /**
     * value: "GenericDataSource"
     * @const
     */
    "GenericDataSource": "GenericDataSource",

    /**
     * value: "SQLDataBase"
     * @const
     */
    "SQLDataBase": "SQLDataBase",

    /**
     * value: "AzureFileShare"
     * @const
     */
    "AzureFileShare": "AzureFileShare",

    /**
     * value: "SAPHanaDatabase"
     * @const
     */
    "SAPHanaDatabase": "SAPHanaDatabase",

    /**
     * value: "SAPAseDatabase"
     * @const
     */
    "SAPAseDatabase": "SAPAseDatabase"
};



export default AzureWorkloadContainer;

