/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MABContainerHealthDetails from './MABContainerHealthDetails';
import MabContainerExtendedInfo from './MabContainerExtendedInfo';
import ProtectionContainer from './ProtectionContainer';

/**
 * The MabContainer model module.
 * @module model/MabContainer
 * @version 2016-12-01
 */
class MabContainer {
    /**
     * Constructs a new <code>MabContainer</code>.
     * Container with items backed up using MAB backup engine.
     * @alias module:model/MabContainer
     * @extends module:model/ProtectionContainer
     * @implements module:model/ProtectionContainer
     */
    constructor() { 
        ProtectionContainer.initialize(this);
        MabContainer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MabContainer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MabContainer} obj Optional instance to populate.
     * @return {module:model/MabContainer} The populated <code>MabContainer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MabContainer();
            ProtectionContainer.constructFromObject(data, obj);
            ProtectionContainer.constructFromObject(data, obj);

            if (data.hasOwnProperty('agentVersion')) {
                obj['agentVersion'] = ApiClient.convertToType(data['agentVersion'], 'String');
            }
            if (data.hasOwnProperty('canReRegister')) {
                obj['canReRegister'] = ApiClient.convertToType(data['canReRegister'], 'Boolean');
            }
            if (data.hasOwnProperty('containerHealthState')) {
                obj['containerHealthState'] = ApiClient.convertToType(data['containerHealthState'], 'String');
            }
            if (data.hasOwnProperty('containerId')) {
                obj['containerId'] = ApiClient.convertToType(data['containerId'], 'Number');
            }
            if (data.hasOwnProperty('extendedInfo')) {
                obj['extendedInfo'] = MabContainerExtendedInfo.constructFromObject(data['extendedInfo']);
            }
            if (data.hasOwnProperty('mabContainerHealthDetails')) {
                obj['mabContainerHealthDetails'] = ApiClient.convertToType(data['mabContainerHealthDetails'], [MABContainerHealthDetails]);
            }
            if (data.hasOwnProperty('protectedItemCount')) {
                obj['protectedItemCount'] = ApiClient.convertToType(data['protectedItemCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MabContainer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MabContainer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['agentVersion'] && !(typeof data['agentVersion'] === 'string' || data['agentVersion'] instanceof String)) {
            throw new Error("Expected the field `agentVersion` to be a primitive type in the JSON string but got " + data['agentVersion']);
        }
        // ensure the json data is a string
        if (data['containerHealthState'] && !(typeof data['containerHealthState'] === 'string' || data['containerHealthState'] instanceof String)) {
            throw new Error("Expected the field `containerHealthState` to be a primitive type in the JSON string but got " + data['containerHealthState']);
        }
        // validate the optional field `extendedInfo`
        if (data['extendedInfo']) { // data not null
          MabContainerExtendedInfo.validateJSON(data['extendedInfo']);
        }
        if (data['mabContainerHealthDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['mabContainerHealthDetails'])) {
                throw new Error("Expected the field `mabContainerHealthDetails` to be an array in the JSON data but got " + data['mabContainerHealthDetails']);
            }
            // validate the optional field `mabContainerHealthDetails` (array)
            for (const item of data['mabContainerHealthDetails']) {
                MABContainerHealthDetails.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Agent version of this container.
 * @member {String} agentVersion
 */
MabContainer.prototype['agentVersion'] = undefined;

/**
 * Can the container be registered one more time.
 * @member {Boolean} canReRegister
 */
MabContainer.prototype['canReRegister'] = undefined;

/**
 * Health state of mab container.
 * @member {String} containerHealthState
 */
MabContainer.prototype['containerHealthState'] = undefined;

/**
 * ContainerID represents the container.
 * @member {Number} containerId
 */
MabContainer.prototype['containerId'] = undefined;

/**
 * @member {module:model/MabContainerExtendedInfo} extendedInfo
 */
MabContainer.prototype['extendedInfo'] = undefined;

/**
 * Health details on this mab container.
 * @member {Array.<module:model/MABContainerHealthDetails>} mabContainerHealthDetails
 */
MabContainer.prototype['mabContainerHealthDetails'] = undefined;

/**
 * Number of items backed up in this container.
 * @member {Number} protectedItemCount
 */
MabContainer.prototype['protectedItemCount'] = undefined;


// Implement ProtectionContainer interface:
/**
 * Type of backup management for the container.
 * @member {module:model/ProtectionContainer.BackupManagementTypeEnum} backupManagementType
 */
ProtectionContainer.prototype['backupManagementType'] = undefined;
/**
 * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.  Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is  Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload  Backup is VMAppContainer
 * @member {module:model/ProtectionContainer.ContainerTypeEnum} containerType
 */
ProtectionContainer.prototype['containerType'] = undefined;
/**
 * Friendly name of the container.
 * @member {String} friendlyName
 */
ProtectionContainer.prototype['friendlyName'] = undefined;
/**
 * Status of health of the container.
 * @member {String} healthStatus
 */
ProtectionContainer.prototype['healthStatus'] = undefined;
/**
 * Status of registration of the container with the Recovery Services Vault.
 * @member {String} registrationStatus
 */
ProtectionContainer.prototype['registrationStatus'] = undefined;




export default MabContainer;

