/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IaaSVMContainer from './IaaSVMContainer';

/**
 * The AzureIaaSClassicComputeVMContainer model module.
 * @module model/AzureIaaSClassicComputeVMContainer
 * @version 2016-12-01
 */
class AzureIaaSClassicComputeVMContainer {
    /**
     * Constructs a new <code>AzureIaaSClassicComputeVMContainer</code>.
     * IaaS VM workload-specific backup item representing a classic virtual machine.
     * @alias module:model/AzureIaaSClassicComputeVMContainer
     * @extends module:model/IaaSVMContainer
     * @implements module:model/IaaSVMContainer
     */
    constructor() { 
        IaaSVMContainer.initialize(this);
        AzureIaaSClassicComputeVMContainer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AzureIaaSClassicComputeVMContainer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AzureIaaSClassicComputeVMContainer} obj Optional instance to populate.
     * @return {module:model/AzureIaaSClassicComputeVMContainer} The populated <code>AzureIaaSClassicComputeVMContainer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AzureIaaSClassicComputeVMContainer();
            IaaSVMContainer.constructFromObject(data, obj);
            IaaSVMContainer.constructFromObject(data, obj);

        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AzureIaaSClassicComputeVMContainer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AzureIaaSClassicComputeVMContainer</code>.
     */
    static validateJSON(data) {

        return true;
    }


}




// Implement IaaSVMContainer interface:
/**
 * Type of backup management for the container.
 * @member {module:model/IaaSVMContainer.BackupManagementTypeEnum} backupManagementType
 */
IaaSVMContainer.prototype['backupManagementType'] = undefined;
/**
 * Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.  Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is  Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload  Backup is VMAppContainer
 * @member {module:model/IaaSVMContainer.ContainerTypeEnum} containerType
 */
IaaSVMContainer.prototype['containerType'] = undefined;
/**
 * Friendly name of the container.
 * @member {String} friendlyName
 */
IaaSVMContainer.prototype['friendlyName'] = undefined;
/**
 * Status of health of the container.
 * @member {String} healthStatus
 */
IaaSVMContainer.prototype['healthStatus'] = undefined;
/**
 * Status of registration of the container with the Recovery Services Vault.
 * @member {String} registrationStatus
 */
IaaSVMContainer.prototype['registrationStatus'] = undefined;




export default AzureIaaSClassicComputeVMContainer;

