/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContainerIdentityInfo model module.
 * @module model/ContainerIdentityInfo
 * @version 2016-12-01
 */
class ContainerIdentityInfo {
    /**
     * Constructs a new <code>ContainerIdentityInfo</code>.
     * Container identity information
     * @alias module:model/ContainerIdentityInfo
     */
    constructor() { 
        
        ContainerIdentityInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContainerIdentityInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContainerIdentityInfo} obj Optional instance to populate.
     * @return {module:model/ContainerIdentityInfo} The populated <code>ContainerIdentityInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContainerIdentityInfo();

            if (data.hasOwnProperty('aadTenantId')) {
                obj['aadTenantId'] = ApiClient.convertToType(data['aadTenantId'], 'String');
            }
            if (data.hasOwnProperty('audience')) {
                obj['audience'] = ApiClient.convertToType(data['audience'], 'String');
            }
            if (data.hasOwnProperty('servicePrincipalClientId')) {
                obj['servicePrincipalClientId'] = ApiClient.convertToType(data['servicePrincipalClientId'], 'String');
            }
            if (data.hasOwnProperty('uniqueName')) {
                obj['uniqueName'] = ApiClient.convertToType(data['uniqueName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContainerIdentityInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContainerIdentityInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['aadTenantId'] && !(typeof data['aadTenantId'] === 'string' || data['aadTenantId'] instanceof String)) {
            throw new Error("Expected the field `aadTenantId` to be a primitive type in the JSON string but got " + data['aadTenantId']);
        }
        // ensure the json data is a string
        if (data['audience'] && !(typeof data['audience'] === 'string' || data['audience'] instanceof String)) {
            throw new Error("Expected the field `audience` to be a primitive type in the JSON string but got " + data['audience']);
        }
        // ensure the json data is a string
        if (data['servicePrincipalClientId'] && !(typeof data['servicePrincipalClientId'] === 'string' || data['servicePrincipalClientId'] instanceof String)) {
            throw new Error("Expected the field `servicePrincipalClientId` to be a primitive type in the JSON string but got " + data['servicePrincipalClientId']);
        }
        // ensure the json data is a string
        if (data['uniqueName'] && !(typeof data['uniqueName'] === 'string' || data['uniqueName'] instanceof String)) {
            throw new Error("Expected the field `uniqueName` to be a primitive type in the JSON string but got " + data['uniqueName']);
        }

        return true;
    }


}



/**
 * Protection container identity - AAD Tenant
 * @member {String} aadTenantId
 */
ContainerIdentityInfo.prototype['aadTenantId'] = undefined;

/**
 * Protection container identity - Audience
 * @member {String} audience
 */
ContainerIdentityInfo.prototype['audience'] = undefined;

/**
 * Protection container identity - AAD Service Principal
 * @member {String} servicePrincipalClientId
 */
ContainerIdentityInfo.prototype['servicePrincipalClientId'] = undefined;

/**
 * Unique name of the container
 * @member {String} uniqueName
 */
ContainerIdentityInfo.prototype['uniqueName'] = undefined;






export default ContainerIdentityInfo;

