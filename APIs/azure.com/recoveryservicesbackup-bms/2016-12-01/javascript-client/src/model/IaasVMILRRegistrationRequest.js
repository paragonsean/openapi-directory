/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ILRRequest from './ILRRequest';

/**
 * The IaasVMILRRegistrationRequest model module.
 * @module model/IaasVMILRRegistrationRequest
 * @version 2016-12-01
 */
class IaasVMILRRegistrationRequest {
    /**
     * Constructs a new <code>IaasVMILRRegistrationRequest</code>.
     * Restore files/folders from a backup copy of IaaS VM.
     * @alias module:model/IaasVMILRRegistrationRequest
     * @extends module:model/ILRRequest
     * @implements module:model/ILRRequest
     * @param objectType {String} This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
     */
    constructor(objectType) { 
        ILRRequest.initialize(this, objectType);
        IaasVMILRRegistrationRequest.initialize(this, objectType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, objectType) { 
    }

    /**
     * Constructs a <code>IaasVMILRRegistrationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IaasVMILRRegistrationRequest} obj Optional instance to populate.
     * @return {module:model/IaasVMILRRegistrationRequest} The populated <code>IaasVMILRRegistrationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IaasVMILRRegistrationRequest();
            ILRRequest.constructFromObject(data, obj);
            ILRRequest.constructFromObject(data, obj);

            if (data.hasOwnProperty('initiatorName')) {
                obj['initiatorName'] = ApiClient.convertToType(data['initiatorName'], 'String');
            }
            if (data.hasOwnProperty('recoveryPointId')) {
                obj['recoveryPointId'] = ApiClient.convertToType(data['recoveryPointId'], 'String');
            }
            if (data.hasOwnProperty('renewExistingRegistration')) {
                obj['renewExistingRegistration'] = ApiClient.convertToType(data['renewExistingRegistration'], 'Boolean');
            }
            if (data.hasOwnProperty('virtualMachineId')) {
                obj['virtualMachineId'] = ApiClient.convertToType(data['virtualMachineId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IaasVMILRRegistrationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IaasVMILRRegistrationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IaasVMILRRegistrationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['initiatorName'] && !(typeof data['initiatorName'] === 'string' || data['initiatorName'] instanceof String)) {
            throw new Error("Expected the field `initiatorName` to be a primitive type in the JSON string but got " + data['initiatorName']);
        }
        // ensure the json data is a string
        if (data['recoveryPointId'] && !(typeof data['recoveryPointId'] === 'string' || data['recoveryPointId'] instanceof String)) {
            throw new Error("Expected the field `recoveryPointId` to be a primitive type in the JSON string but got " + data['recoveryPointId']);
        }
        // ensure the json data is a string
        if (data['virtualMachineId'] && !(typeof data['virtualMachineId'] === 'string' || data['virtualMachineId'] instanceof String)) {
            throw new Error("Expected the field `virtualMachineId` to be a primitive type in the JSON string but got " + data['virtualMachineId']);
        }

        return true;
    }


}

IaasVMILRRegistrationRequest.RequiredProperties = ["objectType"];

/**
 * iSCSI initiator name.
 * @member {String} initiatorName
 */
IaasVMILRRegistrationRequest.prototype['initiatorName'] = undefined;

/**
 * ID of the IaaS VM backup copy from where the files/folders have to be restored.
 * @member {String} recoveryPointId
 */
IaasVMILRRegistrationRequest.prototype['recoveryPointId'] = undefined;

/**
 * Whether to renew existing registration with the iSCSI server.
 * @member {Boolean} renewExistingRegistration
 */
IaasVMILRRegistrationRequest.prototype['renewExistingRegistration'] = undefined;

/**
 * Fully qualified ARM ID of the virtual machine whose the files / folders have to be restored.
 * @member {String} virtualMachineId
 */
IaasVMILRRegistrationRequest.prototype['virtualMachineId'] = undefined;


// Implement ILRRequest interface:
/**
 * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
 * @member {String} objectType
 */
ILRRequest.prototype['objectType'] = undefined;




export default IaasVMILRRegistrationRequest;

