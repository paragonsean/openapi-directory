/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BackupRequest model module.
 * @module model/BackupRequest
 * @version 2016-12-01
 */
class BackupRequest {
    /**
     * Constructs a new <code>BackupRequest</code>.
     * Base class for backup request. Workload-specific backup requests are derived from this class.
     * @alias module:model/BackupRequest
     * @param objectType {String} This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
     */
    constructor(objectType) { 
        
        BackupRequest.initialize(this, objectType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, objectType) { 
        obj['objectType'] = objectType;
    }

    /**
     * Constructs a <code>BackupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupRequest} obj Optional instance to populate.
     * @return {module:model/BackupRequest} The populated <code>BackupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupRequest();

            if (data.hasOwnProperty('objectType')) {
                obj['objectType'] = ApiClient.convertToType(data['objectType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BackupRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['objectType'] && !(typeof data['objectType'] === 'string' || data['objectType'] instanceof String)) {
            throw new Error("Expected the field `objectType` to be a primitive type in the JSON string but got " + data['objectType']);
        }

        return true;
    }


}

BackupRequest.RequiredProperties = ["objectType"];

/**
 * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
 * @member {String} objectType
 */
BackupRequest.prototype['objectType'] = undefined;






export default BackupRequest;

