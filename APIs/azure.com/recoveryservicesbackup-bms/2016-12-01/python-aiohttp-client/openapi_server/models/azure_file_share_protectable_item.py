# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.workload_protectable_item import WorkloadProtectableItem
from openapi_server import util


class AzureFileShareProtectableItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, azure_file_share_type: str=None, parent_container_fabric_id: str=None, parent_container_friendly_name: str=None, backup_management_type: str=None, friendly_name: str=None, protectable_item_type: str=None, protection_state: str=None, workload_type: str=None):
        """AzureFileShareProtectableItem - a model defined in OpenAPI

        :param azure_file_share_type: The azure_file_share_type of this AzureFileShareProtectableItem.
        :param parent_container_fabric_id: The parent_container_fabric_id of this AzureFileShareProtectableItem.
        :param parent_container_friendly_name: The parent_container_friendly_name of this AzureFileShareProtectableItem.
        :param backup_management_type: The backup_management_type of this AzureFileShareProtectableItem.
        :param friendly_name: The friendly_name of this AzureFileShareProtectableItem.
        :param protectable_item_type: The protectable_item_type of this AzureFileShareProtectableItem.
        :param protection_state: The protection_state of this AzureFileShareProtectableItem.
        :param workload_type: The workload_type of this AzureFileShareProtectableItem.
        """
        self.openapi_types = {
            'azure_file_share_type': str,
            'parent_container_fabric_id': str,
            'parent_container_friendly_name': str,
            'backup_management_type': str,
            'friendly_name': str,
            'protectable_item_type': str,
            'protection_state': str,
            'workload_type': str
        }

        self.attribute_map = {
            'azure_file_share_type': 'azureFileShareType',
            'parent_container_fabric_id': 'parentContainerFabricId',
            'parent_container_friendly_name': 'parentContainerFriendlyName',
            'backup_management_type': 'backupManagementType',
            'friendly_name': 'friendlyName',
            'protectable_item_type': 'protectableItemType',
            'protection_state': 'protectionState',
            'workload_type': 'workloadType'
        }

        self._azure_file_share_type = azure_file_share_type
        self._parent_container_fabric_id = parent_container_fabric_id
        self._parent_container_friendly_name = parent_container_friendly_name
        self._backup_management_type = backup_management_type
        self._friendly_name = friendly_name
        self._protectable_item_type = protectable_item_type
        self._protection_state = protection_state
        self._workload_type = workload_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureFileShareProtectableItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureFileShareProtectableItem of this AzureFileShareProtectableItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def azure_file_share_type(self):
        """Gets the azure_file_share_type of this AzureFileShareProtectableItem.

        File Share type XSync or XSMB.

        :return: The azure_file_share_type of this AzureFileShareProtectableItem.
        :rtype: str
        """
        return self._azure_file_share_type

    @azure_file_share_type.setter
    def azure_file_share_type(self, azure_file_share_type):
        """Sets the azure_file_share_type of this AzureFileShareProtectableItem.

        File Share type XSync or XSMB.

        :param azure_file_share_type: The azure_file_share_type of this AzureFileShareProtectableItem.
        :type azure_file_share_type: str
        """
        allowed_values = ["Invalid", "XSMB", "XSync"]  # noqa: E501
        if azure_file_share_type not in allowed_values:
            raise ValueError(
                "Invalid value for `azure_file_share_type` ({0}), must be one of {1}"
                .format(azure_file_share_type, allowed_values)
            )

        self._azure_file_share_type = azure_file_share_type

    @property
    def parent_container_fabric_id(self):
        """Gets the parent_container_fabric_id of this AzureFileShareProtectableItem.

        Full Fabric ID of container to which this protectable item belongs. For example, ARM ID.

        :return: The parent_container_fabric_id of this AzureFileShareProtectableItem.
        :rtype: str
        """
        return self._parent_container_fabric_id

    @parent_container_fabric_id.setter
    def parent_container_fabric_id(self, parent_container_fabric_id):
        """Sets the parent_container_fabric_id of this AzureFileShareProtectableItem.

        Full Fabric ID of container to which this protectable item belongs. For example, ARM ID.

        :param parent_container_fabric_id: The parent_container_fabric_id of this AzureFileShareProtectableItem.
        :type parent_container_fabric_id: str
        """

        self._parent_container_fabric_id = parent_container_fabric_id

    @property
    def parent_container_friendly_name(self):
        """Gets the parent_container_friendly_name of this AzureFileShareProtectableItem.

        Friendly name of container to which this protectable item belongs.

        :return: The parent_container_friendly_name of this AzureFileShareProtectableItem.
        :rtype: str
        """
        return self._parent_container_friendly_name

    @parent_container_friendly_name.setter
    def parent_container_friendly_name(self, parent_container_friendly_name):
        """Sets the parent_container_friendly_name of this AzureFileShareProtectableItem.

        Friendly name of container to which this protectable item belongs.

        :param parent_container_friendly_name: The parent_container_friendly_name of this AzureFileShareProtectableItem.
        :type parent_container_friendly_name: str
        """

        self._parent_container_friendly_name = parent_container_friendly_name

    @property
    def backup_management_type(self):
        """Gets the backup_management_type of this AzureFileShareProtectableItem.

        Type of backup management to backup an item.

        :return: The backup_management_type of this AzureFileShareProtectableItem.
        :rtype: str
        """
        return self._backup_management_type

    @backup_management_type.setter
    def backup_management_type(self, backup_management_type):
        """Sets the backup_management_type of this AzureFileShareProtectableItem.

        Type of backup management to backup an item.

        :param backup_management_type: The backup_management_type of this AzureFileShareProtectableItem.
        :type backup_management_type: str
        """

        self._backup_management_type = backup_management_type

    @property
    def friendly_name(self):
        """Gets the friendly_name of this AzureFileShareProtectableItem.

        Friendly name of the backup item.

        :return: The friendly_name of this AzureFileShareProtectableItem.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this AzureFileShareProtectableItem.

        Friendly name of the backup item.

        :param friendly_name: The friendly_name of this AzureFileShareProtectableItem.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def protectable_item_type(self):
        """Gets the protectable_item_type of this AzureFileShareProtectableItem.

        Type of the backup item.

        :return: The protectable_item_type of this AzureFileShareProtectableItem.
        :rtype: str
        """
        return self._protectable_item_type

    @protectable_item_type.setter
    def protectable_item_type(self, protectable_item_type):
        """Sets the protectable_item_type of this AzureFileShareProtectableItem.

        Type of the backup item.

        :param protectable_item_type: The protectable_item_type of this AzureFileShareProtectableItem.
        :type protectable_item_type: str
        """

        self._protectable_item_type = protectable_item_type

    @property
    def protection_state(self):
        """Gets the protection_state of this AzureFileShareProtectableItem.

        State of the back up item.

        :return: The protection_state of this AzureFileShareProtectableItem.
        :rtype: str
        """
        return self._protection_state

    @protection_state.setter
    def protection_state(self, protection_state):
        """Sets the protection_state of this AzureFileShareProtectableItem.

        State of the back up item.

        :param protection_state: The protection_state of this AzureFileShareProtectableItem.
        :type protection_state: str
        """
        allowed_values = ["Invalid", "NotProtected", "Protecting", "Protected", "ProtectionFailed"]  # noqa: E501
        if protection_state not in allowed_values:
            raise ValueError(
                "Invalid value for `protection_state` ({0}), must be one of {1}"
                .format(protection_state, allowed_values)
            )

        self._protection_state = protection_state

    @property
    def workload_type(self):
        """Gets the workload_type of this AzureFileShareProtectableItem.

        Type of workload for the backup management

        :return: The workload_type of this AzureFileShareProtectableItem.
        :rtype: str
        """
        return self._workload_type

    @workload_type.setter
    def workload_type(self, workload_type):
        """Sets the workload_type of this AzureFileShareProtectableItem.

        Type of workload for the backup management

        :param workload_type: The workload_type of this AzureFileShareProtectableItem.
        :type workload_type: str
        """

        self._workload_type = workload_type
