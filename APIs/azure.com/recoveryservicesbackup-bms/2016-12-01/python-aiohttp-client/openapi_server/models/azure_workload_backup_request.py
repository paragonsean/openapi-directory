# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.backup_request import BackupRequest
from openapi_server import util


class AzureWorkloadBackupRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_type: str=None, enable_compression: bool=None, recovery_point_expiry_time_in_utc: datetime=None, object_type: str=None):
        """AzureWorkloadBackupRequest - a model defined in OpenAPI

        :param backup_type: The backup_type of this AzureWorkloadBackupRequest.
        :param enable_compression: The enable_compression of this AzureWorkloadBackupRequest.
        :param recovery_point_expiry_time_in_utc: The recovery_point_expiry_time_in_utc of this AzureWorkloadBackupRequest.
        :param object_type: The object_type of this AzureWorkloadBackupRequest.
        """
        self.openapi_types = {
            'backup_type': str,
            'enable_compression': bool,
            'recovery_point_expiry_time_in_utc': datetime,
            'object_type': str
        }

        self.attribute_map = {
            'backup_type': 'backupType',
            'enable_compression': 'enableCompression',
            'recovery_point_expiry_time_in_utc': 'recoveryPointExpiryTimeInUTC',
            'object_type': 'objectType'
        }

        self._backup_type = backup_type
        self._enable_compression = enable_compression
        self._recovery_point_expiry_time_in_utc = recovery_point_expiry_time_in_utc
        self._object_type = object_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureWorkloadBackupRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureWorkloadBackupRequest of this AzureWorkloadBackupRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_type(self):
        """Gets the backup_type of this AzureWorkloadBackupRequest.

        Type of backup, viz. Full, Differential, Log or CopyOnlyFull

        :return: The backup_type of this AzureWorkloadBackupRequest.
        :rtype: str
        """
        return self._backup_type

    @backup_type.setter
    def backup_type(self, backup_type):
        """Sets the backup_type of this AzureWorkloadBackupRequest.

        Type of backup, viz. Full, Differential, Log or CopyOnlyFull

        :param backup_type: The backup_type of this AzureWorkloadBackupRequest.
        :type backup_type: str
        """
        allowed_values = ["Invalid", "Full", "Differential", "Log", "CopyOnlyFull"]  # noqa: E501
        if backup_type not in allowed_values:
            raise ValueError(
                "Invalid value for `backup_type` ({0}), must be one of {1}"
                .format(backup_type, allowed_values)
            )

        self._backup_type = backup_type

    @property
    def enable_compression(self):
        """Gets the enable_compression of this AzureWorkloadBackupRequest.

        Bool for Compression setting

        :return: The enable_compression of this AzureWorkloadBackupRequest.
        :rtype: bool
        """
        return self._enable_compression

    @enable_compression.setter
    def enable_compression(self, enable_compression):
        """Sets the enable_compression of this AzureWorkloadBackupRequest.

        Bool for Compression setting

        :param enable_compression: The enable_compression of this AzureWorkloadBackupRequest.
        :type enable_compression: bool
        """

        self._enable_compression = enable_compression

    @property
    def recovery_point_expiry_time_in_utc(self):
        """Gets the recovery_point_expiry_time_in_utc of this AzureWorkloadBackupRequest.

        Backup copy will expire after the time specified (UTC).

        :return: The recovery_point_expiry_time_in_utc of this AzureWorkloadBackupRequest.
        :rtype: datetime
        """
        return self._recovery_point_expiry_time_in_utc

    @recovery_point_expiry_time_in_utc.setter
    def recovery_point_expiry_time_in_utc(self, recovery_point_expiry_time_in_utc):
        """Sets the recovery_point_expiry_time_in_utc of this AzureWorkloadBackupRequest.

        Backup copy will expire after the time specified (UTC).

        :param recovery_point_expiry_time_in_utc: The recovery_point_expiry_time_in_utc of this AzureWorkloadBackupRequest.
        :type recovery_point_expiry_time_in_utc: datetime
        """

        self._recovery_point_expiry_time_in_utc = recovery_point_expiry_time_in_utc

    @property
    def object_type(self):
        """Gets the object_type of this AzureWorkloadBackupRequest.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :return: The object_type of this AzureWorkloadBackupRequest.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this AzureWorkloadBackupRequest.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :param object_type: The object_type of this AzureWorkloadBackupRequest.
        :type object_type: str
        """
        if object_type is None:
            raise ValueError("Invalid value for `object_type`, must not be `None`")

        self._object_type = object_type
