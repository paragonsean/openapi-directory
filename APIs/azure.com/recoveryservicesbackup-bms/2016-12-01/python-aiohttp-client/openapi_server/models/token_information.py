# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TokenInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiry_time_in_utc_ticks: int=None, security_pin: str=None, token: str=None):
        """TokenInformation - a model defined in OpenAPI

        :param expiry_time_in_utc_ticks: The expiry_time_in_utc_ticks of this TokenInformation.
        :param security_pin: The security_pin of this TokenInformation.
        :param token: The token of this TokenInformation.
        """
        self.openapi_types = {
            'expiry_time_in_utc_ticks': int,
            'security_pin': str,
            'token': str
        }

        self.attribute_map = {
            'expiry_time_in_utc_ticks': 'expiryTimeInUtcTicks',
            'security_pin': 'securityPIN',
            'token': 'token'
        }

        self._expiry_time_in_utc_ticks = expiry_time_in_utc_ticks
        self._security_pin = security_pin
        self._token = token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TokenInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TokenInformation of this TokenInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiry_time_in_utc_ticks(self):
        """Gets the expiry_time_in_utc_ticks of this TokenInformation.

        Expiry time of token.

        :return: The expiry_time_in_utc_ticks of this TokenInformation.
        :rtype: int
        """
        return self._expiry_time_in_utc_ticks

    @expiry_time_in_utc_ticks.setter
    def expiry_time_in_utc_ticks(self, expiry_time_in_utc_ticks):
        """Sets the expiry_time_in_utc_ticks of this TokenInformation.

        Expiry time of token.

        :param expiry_time_in_utc_ticks: The expiry_time_in_utc_ticks of this TokenInformation.
        :type expiry_time_in_utc_ticks: int
        """

        self._expiry_time_in_utc_ticks = expiry_time_in_utc_ticks

    @property
    def security_pin(self):
        """Gets the security_pin of this TokenInformation.

        Security PIN

        :return: The security_pin of this TokenInformation.
        :rtype: str
        """
        return self._security_pin

    @security_pin.setter
    def security_pin(self, security_pin):
        """Sets the security_pin of this TokenInformation.

        Security PIN

        :param security_pin: The security_pin of this TokenInformation.
        :type security_pin: str
        """

        self._security_pin = security_pin

    @property
    def token(self):
        """Gets the token of this TokenInformation.

        Token value.

        :return: The token of this TokenInformation.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this TokenInformation.

        Token value.

        :param token: The token of this TokenInformation.
        :type token: str
        """

        self._token = token
