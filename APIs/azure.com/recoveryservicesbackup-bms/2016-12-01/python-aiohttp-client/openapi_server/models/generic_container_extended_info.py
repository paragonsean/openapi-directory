# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.container_identity_info import ContainerIdentityInfo
from openapi_server import util


class GenericContainerExtendedInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_identity_info: ContainerIdentityInfo=None, raw_cert_data: str=None, service_endpoints: Dict[str, str]=None):
        """GenericContainerExtendedInfo - a model defined in OpenAPI

        :param container_identity_info: The container_identity_info of this GenericContainerExtendedInfo.
        :param raw_cert_data: The raw_cert_data of this GenericContainerExtendedInfo.
        :param service_endpoints: The service_endpoints of this GenericContainerExtendedInfo.
        """
        self.openapi_types = {
            'container_identity_info': ContainerIdentityInfo,
            'raw_cert_data': str,
            'service_endpoints': Dict[str, str]
        }

        self.attribute_map = {
            'container_identity_info': 'containerIdentityInfo',
            'raw_cert_data': 'rawCertData',
            'service_endpoints': 'serviceEndpoints'
        }

        self._container_identity_info = container_identity_info
        self._raw_cert_data = raw_cert_data
        self._service_endpoints = service_endpoints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenericContainerExtendedInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenericContainerExtendedInfo of this GenericContainerExtendedInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_identity_info(self):
        """Gets the container_identity_info of this GenericContainerExtendedInfo.


        :return: The container_identity_info of this GenericContainerExtendedInfo.
        :rtype: ContainerIdentityInfo
        """
        return self._container_identity_info

    @container_identity_info.setter
    def container_identity_info(self, container_identity_info):
        """Sets the container_identity_info of this GenericContainerExtendedInfo.


        :param container_identity_info: The container_identity_info of this GenericContainerExtendedInfo.
        :type container_identity_info: ContainerIdentityInfo
        """

        self._container_identity_info = container_identity_info

    @property
    def raw_cert_data(self):
        """Gets the raw_cert_data of this GenericContainerExtendedInfo.

        Public key of container cert

        :return: The raw_cert_data of this GenericContainerExtendedInfo.
        :rtype: str
        """
        return self._raw_cert_data

    @raw_cert_data.setter
    def raw_cert_data(self, raw_cert_data):
        """Sets the raw_cert_data of this GenericContainerExtendedInfo.

        Public key of container cert

        :param raw_cert_data: The raw_cert_data of this GenericContainerExtendedInfo.
        :type raw_cert_data: str
        """

        self._raw_cert_data = raw_cert_data

    @property
    def service_endpoints(self):
        """Gets the service_endpoints of this GenericContainerExtendedInfo.

        Azure Backup Service Endpoints for the container

        :return: The service_endpoints of this GenericContainerExtendedInfo.
        :rtype: Dict[str, str]
        """
        return self._service_endpoints

    @service_endpoints.setter
    def service_endpoints(self, service_endpoints):
        """Sets the service_endpoints of this GenericContainerExtendedInfo.

        Azure Backup Service Endpoints for the container

        :param service_endpoints: The service_endpoints of this GenericContainerExtendedInfo.
        :type service_endpoints: Dict[str, str]
        """

        self._service_endpoints = service_endpoints
