# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BackupEngineExtendedInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available_disk_space: float=None, azure_protected_instances: int=None, database_name: str=None, disk_count: int=None, protected_items_count: int=None, protected_servers_count: int=None, refreshed_at: datetime=None, used_disk_space: float=None):
        """BackupEngineExtendedInfo - a model defined in OpenAPI

        :param available_disk_space: The available_disk_space of this BackupEngineExtendedInfo.
        :param azure_protected_instances: The azure_protected_instances of this BackupEngineExtendedInfo.
        :param database_name: The database_name of this BackupEngineExtendedInfo.
        :param disk_count: The disk_count of this BackupEngineExtendedInfo.
        :param protected_items_count: The protected_items_count of this BackupEngineExtendedInfo.
        :param protected_servers_count: The protected_servers_count of this BackupEngineExtendedInfo.
        :param refreshed_at: The refreshed_at of this BackupEngineExtendedInfo.
        :param used_disk_space: The used_disk_space of this BackupEngineExtendedInfo.
        """
        self.openapi_types = {
            'available_disk_space': float,
            'azure_protected_instances': int,
            'database_name': str,
            'disk_count': int,
            'protected_items_count': int,
            'protected_servers_count': int,
            'refreshed_at': datetime,
            'used_disk_space': float
        }

        self.attribute_map = {
            'available_disk_space': 'availableDiskSpace',
            'azure_protected_instances': 'azureProtectedInstances',
            'database_name': 'databaseName',
            'disk_count': 'diskCount',
            'protected_items_count': 'protectedItemsCount',
            'protected_servers_count': 'protectedServersCount',
            'refreshed_at': 'refreshedAt',
            'used_disk_space': 'usedDiskSpace'
        }

        self._available_disk_space = available_disk_space
        self._azure_protected_instances = azure_protected_instances
        self._database_name = database_name
        self._disk_count = disk_count
        self._protected_items_count = protected_items_count
        self._protected_servers_count = protected_servers_count
        self._refreshed_at = refreshed_at
        self._used_disk_space = used_disk_space

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackupEngineExtendedInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackupEngineExtendedInfo of this BackupEngineExtendedInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available_disk_space(self):
        """Gets the available_disk_space of this BackupEngineExtendedInfo.

        Disk space currently available in the backup engine.

        :return: The available_disk_space of this BackupEngineExtendedInfo.
        :rtype: float
        """
        return self._available_disk_space

    @available_disk_space.setter
    def available_disk_space(self, available_disk_space):
        """Sets the available_disk_space of this BackupEngineExtendedInfo.

        Disk space currently available in the backup engine.

        :param available_disk_space: The available_disk_space of this BackupEngineExtendedInfo.
        :type available_disk_space: float
        """

        self._available_disk_space = available_disk_space

    @property
    def azure_protected_instances(self):
        """Gets the azure_protected_instances of this BackupEngineExtendedInfo.

        Protected instances in the backup engine.

        :return: The azure_protected_instances of this BackupEngineExtendedInfo.
        :rtype: int
        """
        return self._azure_protected_instances

    @azure_protected_instances.setter
    def azure_protected_instances(self, azure_protected_instances):
        """Sets the azure_protected_instances of this BackupEngineExtendedInfo.

        Protected instances in the backup engine.

        :param azure_protected_instances: The azure_protected_instances of this BackupEngineExtendedInfo.
        :type azure_protected_instances: int
        """

        self._azure_protected_instances = azure_protected_instances

    @property
    def database_name(self):
        """Gets the database_name of this BackupEngineExtendedInfo.

        Database name of backup engine.

        :return: The database_name of this BackupEngineExtendedInfo.
        :rtype: str
        """
        return self._database_name

    @database_name.setter
    def database_name(self, database_name):
        """Sets the database_name of this BackupEngineExtendedInfo.

        Database name of backup engine.

        :param database_name: The database_name of this BackupEngineExtendedInfo.
        :type database_name: str
        """

        self._database_name = database_name

    @property
    def disk_count(self):
        """Gets the disk_count of this BackupEngineExtendedInfo.

        Number of disks in the backup engine.

        :return: The disk_count of this BackupEngineExtendedInfo.
        :rtype: int
        """
        return self._disk_count

    @disk_count.setter
    def disk_count(self, disk_count):
        """Sets the disk_count of this BackupEngineExtendedInfo.

        Number of disks in the backup engine.

        :param disk_count: The disk_count of this BackupEngineExtendedInfo.
        :type disk_count: int
        """

        self._disk_count = disk_count

    @property
    def protected_items_count(self):
        """Gets the protected_items_count of this BackupEngineExtendedInfo.

        Number of protected items in the backup engine.

        :return: The protected_items_count of this BackupEngineExtendedInfo.
        :rtype: int
        """
        return self._protected_items_count

    @protected_items_count.setter
    def protected_items_count(self, protected_items_count):
        """Sets the protected_items_count of this BackupEngineExtendedInfo.

        Number of protected items in the backup engine.

        :param protected_items_count: The protected_items_count of this BackupEngineExtendedInfo.
        :type protected_items_count: int
        """

        self._protected_items_count = protected_items_count

    @property
    def protected_servers_count(self):
        """Gets the protected_servers_count of this BackupEngineExtendedInfo.

        Number of protected servers in the backup engine.

        :return: The protected_servers_count of this BackupEngineExtendedInfo.
        :rtype: int
        """
        return self._protected_servers_count

    @protected_servers_count.setter
    def protected_servers_count(self, protected_servers_count):
        """Sets the protected_servers_count of this BackupEngineExtendedInfo.

        Number of protected servers in the backup engine.

        :param protected_servers_count: The protected_servers_count of this BackupEngineExtendedInfo.
        :type protected_servers_count: int
        """

        self._protected_servers_count = protected_servers_count

    @property
    def refreshed_at(self):
        """Gets the refreshed_at of this BackupEngineExtendedInfo.

        Last refresh time in the backup engine.

        :return: The refreshed_at of this BackupEngineExtendedInfo.
        :rtype: datetime
        """
        return self._refreshed_at

    @refreshed_at.setter
    def refreshed_at(self, refreshed_at):
        """Sets the refreshed_at of this BackupEngineExtendedInfo.

        Last refresh time in the backup engine.

        :param refreshed_at: The refreshed_at of this BackupEngineExtendedInfo.
        :type refreshed_at: datetime
        """

        self._refreshed_at = refreshed_at

    @property
    def used_disk_space(self):
        """Gets the used_disk_space of this BackupEngineExtendedInfo.

        Disk space used in the backup engine.

        :return: The used_disk_space of this BackupEngineExtendedInfo.
        :rtype: float
        """
        return self._used_disk_space

    @used_disk_space.setter
    def used_disk_space(self, used_disk_space):
        """Sets the used_disk_space of this BackupEngineExtendedInfo.

        Disk space used in the backup engine.

        :param used_disk_space: The used_disk_space of this BackupEngineExtendedInfo.
        :type used_disk_space: float
        """

        self._used_disk_space = used_disk_space
