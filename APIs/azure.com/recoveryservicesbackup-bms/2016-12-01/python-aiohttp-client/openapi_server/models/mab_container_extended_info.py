# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MabContainerExtendedInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_item_type: str=None, backup_items: List[str]=None, last_backup_status: str=None, last_refreshed_at: datetime=None, policy_name: str=None):
        """MabContainerExtendedInfo - a model defined in OpenAPI

        :param backup_item_type: The backup_item_type of this MabContainerExtendedInfo.
        :param backup_items: The backup_items of this MabContainerExtendedInfo.
        :param last_backup_status: The last_backup_status of this MabContainerExtendedInfo.
        :param last_refreshed_at: The last_refreshed_at of this MabContainerExtendedInfo.
        :param policy_name: The policy_name of this MabContainerExtendedInfo.
        """
        self.openapi_types = {
            'backup_item_type': str,
            'backup_items': List[str],
            'last_backup_status': str,
            'last_refreshed_at': datetime,
            'policy_name': str
        }

        self.attribute_map = {
            'backup_item_type': 'backupItemType',
            'backup_items': 'backupItems',
            'last_backup_status': 'lastBackupStatus',
            'last_refreshed_at': 'lastRefreshedAt',
            'policy_name': 'policyName'
        }

        self._backup_item_type = backup_item_type
        self._backup_items = backup_items
        self._last_backup_status = last_backup_status
        self._last_refreshed_at = last_refreshed_at
        self._policy_name = policy_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MabContainerExtendedInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MabContainerExtendedInfo of this MabContainerExtendedInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_item_type(self):
        """Gets the backup_item_type of this MabContainerExtendedInfo.

        Type of backup items associated with this container.

        :return: The backup_item_type of this MabContainerExtendedInfo.
        :rtype: str
        """
        return self._backup_item_type

    @backup_item_type.setter
    def backup_item_type(self, backup_item_type):
        """Sets the backup_item_type of this MabContainerExtendedInfo.

        Type of backup items associated with this container.

        :param backup_item_type: The backup_item_type of this MabContainerExtendedInfo.
        :type backup_item_type: str
        """
        allowed_values = ["Invalid", "VM", "FileFolder", "AzureSqlDb", "SQLDB", "Exchange", "Sharepoint", "VMwareVM", "SystemState", "Client", "GenericDataSource", "SQLDataBase", "AzureFileShare", "SAPHanaDatabase", "SAPAseDatabase"]  # noqa: E501
        if backup_item_type not in allowed_values:
            raise ValueError(
                "Invalid value for `backup_item_type` ({0}), must be one of {1}"
                .format(backup_item_type, allowed_values)
            )

        self._backup_item_type = backup_item_type

    @property
    def backup_items(self):
        """Gets the backup_items of this MabContainerExtendedInfo.

        List of backup items associated with this container.

        :return: The backup_items of this MabContainerExtendedInfo.
        :rtype: List[str]
        """
        return self._backup_items

    @backup_items.setter
    def backup_items(self, backup_items):
        """Sets the backup_items of this MabContainerExtendedInfo.

        List of backup items associated with this container.

        :param backup_items: The backup_items of this MabContainerExtendedInfo.
        :type backup_items: List[str]
        """

        self._backup_items = backup_items

    @property
    def last_backup_status(self):
        """Gets the last_backup_status of this MabContainerExtendedInfo.

        Latest backup status of this container.

        :return: The last_backup_status of this MabContainerExtendedInfo.
        :rtype: str
        """
        return self._last_backup_status

    @last_backup_status.setter
    def last_backup_status(self, last_backup_status):
        """Sets the last_backup_status of this MabContainerExtendedInfo.

        Latest backup status of this container.

        :param last_backup_status: The last_backup_status of this MabContainerExtendedInfo.
        :type last_backup_status: str
        """

        self._last_backup_status = last_backup_status

    @property
    def last_refreshed_at(self):
        """Gets the last_refreshed_at of this MabContainerExtendedInfo.

        Time stamp when this container was refreshed.

        :return: The last_refreshed_at of this MabContainerExtendedInfo.
        :rtype: datetime
        """
        return self._last_refreshed_at

    @last_refreshed_at.setter
    def last_refreshed_at(self, last_refreshed_at):
        """Sets the last_refreshed_at of this MabContainerExtendedInfo.

        Time stamp when this container was refreshed.

        :param last_refreshed_at: The last_refreshed_at of this MabContainerExtendedInfo.
        :type last_refreshed_at: datetime
        """

        self._last_refreshed_at = last_refreshed_at

    @property
    def policy_name(self):
        """Gets the policy_name of this MabContainerExtendedInfo.

        Backup policy associated with this container.

        :return: The policy_name of this MabContainerExtendedInfo.
        :rtype: str
        """
        return self._policy_name

    @policy_name.setter
    def policy_name(self, policy_name):
        """Sets the policy_name of this MabContainerExtendedInfo.

        Backup policy associated with this container.

        :param policy_name: The policy_name of this MabContainerExtendedInfo.
        :type policy_name: str
        """

        self._policy_name = policy_name
