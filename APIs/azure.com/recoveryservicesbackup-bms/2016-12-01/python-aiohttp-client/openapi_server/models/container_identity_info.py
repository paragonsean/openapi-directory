# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContainerIdentityInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aad_tenant_id: str=None, audience: str=None, service_principal_client_id: str=None, unique_name: str=None):
        """ContainerIdentityInfo - a model defined in OpenAPI

        :param aad_tenant_id: The aad_tenant_id of this ContainerIdentityInfo.
        :param audience: The audience of this ContainerIdentityInfo.
        :param service_principal_client_id: The service_principal_client_id of this ContainerIdentityInfo.
        :param unique_name: The unique_name of this ContainerIdentityInfo.
        """
        self.openapi_types = {
            'aad_tenant_id': str,
            'audience': str,
            'service_principal_client_id': str,
            'unique_name': str
        }

        self.attribute_map = {
            'aad_tenant_id': 'aadTenantId',
            'audience': 'audience',
            'service_principal_client_id': 'servicePrincipalClientId',
            'unique_name': 'uniqueName'
        }

        self._aad_tenant_id = aad_tenant_id
        self._audience = audience
        self._service_principal_client_id = service_principal_client_id
        self._unique_name = unique_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerIdentityInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerIdentityInfo of this ContainerIdentityInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aad_tenant_id(self):
        """Gets the aad_tenant_id of this ContainerIdentityInfo.

        Protection container identity - AAD Tenant

        :return: The aad_tenant_id of this ContainerIdentityInfo.
        :rtype: str
        """
        return self._aad_tenant_id

    @aad_tenant_id.setter
    def aad_tenant_id(self, aad_tenant_id):
        """Sets the aad_tenant_id of this ContainerIdentityInfo.

        Protection container identity - AAD Tenant

        :param aad_tenant_id: The aad_tenant_id of this ContainerIdentityInfo.
        :type aad_tenant_id: str
        """

        self._aad_tenant_id = aad_tenant_id

    @property
    def audience(self):
        """Gets the audience of this ContainerIdentityInfo.

        Protection container identity - Audience

        :return: The audience of this ContainerIdentityInfo.
        :rtype: str
        """
        return self._audience

    @audience.setter
    def audience(self, audience):
        """Sets the audience of this ContainerIdentityInfo.

        Protection container identity - Audience

        :param audience: The audience of this ContainerIdentityInfo.
        :type audience: str
        """

        self._audience = audience

    @property
    def service_principal_client_id(self):
        """Gets the service_principal_client_id of this ContainerIdentityInfo.

        Protection container identity - AAD Service Principal

        :return: The service_principal_client_id of this ContainerIdentityInfo.
        :rtype: str
        """
        return self._service_principal_client_id

    @service_principal_client_id.setter
    def service_principal_client_id(self, service_principal_client_id):
        """Sets the service_principal_client_id of this ContainerIdentityInfo.

        Protection container identity - AAD Service Principal

        :param service_principal_client_id: The service_principal_client_id of this ContainerIdentityInfo.
        :type service_principal_client_id: str
        """

        self._service_principal_client_id = service_principal_client_id

    @property
    def unique_name(self):
        """Gets the unique_name of this ContainerIdentityInfo.

        Unique name of the container

        :return: The unique_name of this ContainerIdentityInfo.
        :rtype: str
        """
        return self._unique_name

    @unique_name.setter
    def unique_name(self, unique_name):
        """Sets the unique_name of this ContainerIdentityInfo.

        Unique name of the container

        :param unique_name: The unique_name of this ContainerIdentityInfo.
        :type unique_name: str
        """

        self._unique_name = unique_name
