/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBMSRPQueryObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBMSRPQueryObject::OAIBMSRPQueryObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBMSRPQueryObject::OAIBMSRPQueryObject() {
    this->initializeModel();
}

OAIBMSRPQueryObject::~OAIBMSRPQueryObject() {}

void OAIBMSRPQueryObject::initializeModel() {

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_extended_info_isSet = false;
    m_extended_info_isValid = false;

    m_restore_point_query_type_isSet = false;
    m_restore_point_query_type_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;
}

void OAIBMSRPQueryObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBMSRPQueryObject::fromJsonObject(QJsonObject json) {

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_extended_info_isValid = ::OpenAPI::fromJsonValue(m_extended_info, json[QString("extendedInfo")]);
    m_extended_info_isSet = !json[QString("extendedInfo")].isNull() && m_extended_info_isValid;

    m_restore_point_query_type_isValid = ::OpenAPI::fromJsonValue(m_restore_point_query_type, json[QString("restorePointQueryType")]);
    m_restore_point_query_type_isSet = !json[QString("restorePointQueryType")].isNull() && m_restore_point_query_type_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;
}

QString OAIBMSRPQueryObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBMSRPQueryObject::asJsonObject() const {
    QJsonObject obj;
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_extended_info_isSet) {
        obj.insert(QString("extendedInfo"), ::OpenAPI::toJsonValue(m_extended_info));
    }
    if (m_restore_point_query_type_isSet) {
        obj.insert(QString("restorePointQueryType"), ::OpenAPI::toJsonValue(m_restore_point_query_type));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    return obj;
}

QDateTime OAIBMSRPQueryObject::getEndDate() const {
    return m_end_date;
}
void OAIBMSRPQueryObject::setEndDate(const QDateTime &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIBMSRPQueryObject::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIBMSRPQueryObject::is_end_date_Valid() const{
    return m_end_date_isValid;
}

bool OAIBMSRPQueryObject::isExtendedInfo() const {
    return m_extended_info;
}
void OAIBMSRPQueryObject::setExtendedInfo(const bool &extended_info) {
    m_extended_info = extended_info;
    m_extended_info_isSet = true;
}

bool OAIBMSRPQueryObject::is_extended_info_Set() const{
    return m_extended_info_isSet;
}

bool OAIBMSRPQueryObject::is_extended_info_Valid() const{
    return m_extended_info_isValid;
}

QString OAIBMSRPQueryObject::getRestorePointQueryType() const {
    return m_restore_point_query_type;
}
void OAIBMSRPQueryObject::setRestorePointQueryType(const QString &restore_point_query_type) {
    m_restore_point_query_type = restore_point_query_type;
    m_restore_point_query_type_isSet = true;
}

bool OAIBMSRPQueryObject::is_restore_point_query_type_Set() const{
    return m_restore_point_query_type_isSet;
}

bool OAIBMSRPQueryObject::is_restore_point_query_type_Valid() const{
    return m_restore_point_query_type_isValid;
}

QDateTime OAIBMSRPQueryObject::getStartDate() const {
    return m_start_date;
}
void OAIBMSRPQueryObject::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIBMSRPQueryObject::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIBMSRPQueryObject::is_start_date_Valid() const{
    return m_start_date_isValid;
}

bool OAIBMSRPQueryObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extended_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_restore_point_query_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBMSRPQueryObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
