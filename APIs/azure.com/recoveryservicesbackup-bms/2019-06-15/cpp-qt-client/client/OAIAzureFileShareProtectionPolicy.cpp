/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureFileShareProtectionPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureFileShareProtectionPolicy::OAIAzureFileShareProtectionPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureFileShareProtectionPolicy::OAIAzureFileShareProtectionPolicy() {
    this->initializeModel();
}

OAIAzureFileShareProtectionPolicy::~OAIAzureFileShareProtectionPolicy() {}

void OAIAzureFileShareProtectionPolicy::initializeModel() {

    m_retention_policy_isSet = false;
    m_retention_policy_isValid = false;

    m_schedule_policy_isSet = false;
    m_schedule_policy_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;

    m_work_load_type_isSet = false;
    m_work_load_type_isValid = false;

    m_backup_management_type_isSet = false;
    m_backup_management_type_isValid = false;

    m_protected_items_count_isSet = false;
    m_protected_items_count_isValid = false;
}

void OAIAzureFileShareProtectionPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureFileShareProtectionPolicy::fromJsonObject(QJsonObject json) {

    m_retention_policy_isValid = ::OpenAPI::fromJsonValue(m_retention_policy, json[QString("retentionPolicy")]);
    m_retention_policy_isSet = !json[QString("retentionPolicy")].isNull() && m_retention_policy_isValid;

    m_schedule_policy_isValid = ::OpenAPI::fromJsonValue(m_schedule_policy, json[QString("schedulePolicy")]);
    m_schedule_policy_isSet = !json[QString("schedulePolicy")].isNull() && m_schedule_policy_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("timeZone")]);
    m_time_zone_isSet = !json[QString("timeZone")].isNull() && m_time_zone_isValid;

    m_work_load_type_isValid = ::OpenAPI::fromJsonValue(m_work_load_type, json[QString("workLoadType")]);
    m_work_load_type_isSet = !json[QString("workLoadType")].isNull() && m_work_load_type_isValid;

    m_backup_management_type_isValid = ::OpenAPI::fromJsonValue(m_backup_management_type, json[QString("backupManagementType")]);
    m_backup_management_type_isSet = !json[QString("backupManagementType")].isNull() && m_backup_management_type_isValid;

    m_protected_items_count_isValid = ::OpenAPI::fromJsonValue(m_protected_items_count, json[QString("protectedItemsCount")]);
    m_protected_items_count_isSet = !json[QString("protectedItemsCount")].isNull() && m_protected_items_count_isValid;
}

QString OAIAzureFileShareProtectionPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureFileShareProtectionPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_retention_policy.isSet()) {
        obj.insert(QString("retentionPolicy"), ::OpenAPI::toJsonValue(m_retention_policy));
    }
    if (m_schedule_policy.isSet()) {
        obj.insert(QString("schedulePolicy"), ::OpenAPI::toJsonValue(m_schedule_policy));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("timeZone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    if (m_work_load_type_isSet) {
        obj.insert(QString("workLoadType"), ::OpenAPI::toJsonValue(m_work_load_type));
    }
    if (m_backup_management_type_isSet) {
        obj.insert(QString("backupManagementType"), ::OpenAPI::toJsonValue(m_backup_management_type));
    }
    if (m_protected_items_count_isSet) {
        obj.insert(QString("protectedItemsCount"), ::OpenAPI::toJsonValue(m_protected_items_count));
    }
    return obj;
}

OAIRetentionPolicy OAIAzureFileShareProtectionPolicy::getRetentionPolicy() const {
    return m_retention_policy;
}
void OAIAzureFileShareProtectionPolicy::setRetentionPolicy(const OAIRetentionPolicy &retention_policy) {
    m_retention_policy = retention_policy;
    m_retention_policy_isSet = true;
}

bool OAIAzureFileShareProtectionPolicy::is_retention_policy_Set() const{
    return m_retention_policy_isSet;
}

bool OAIAzureFileShareProtectionPolicy::is_retention_policy_Valid() const{
    return m_retention_policy_isValid;
}

OAISchedulePolicy OAIAzureFileShareProtectionPolicy::getSchedulePolicy() const {
    return m_schedule_policy;
}
void OAIAzureFileShareProtectionPolicy::setSchedulePolicy(const OAISchedulePolicy &schedule_policy) {
    m_schedule_policy = schedule_policy;
    m_schedule_policy_isSet = true;
}

bool OAIAzureFileShareProtectionPolicy::is_schedule_policy_Set() const{
    return m_schedule_policy_isSet;
}

bool OAIAzureFileShareProtectionPolicy::is_schedule_policy_Valid() const{
    return m_schedule_policy_isValid;
}

QString OAIAzureFileShareProtectionPolicy::getTimeZone() const {
    return m_time_zone;
}
void OAIAzureFileShareProtectionPolicy::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAIAzureFileShareProtectionPolicy::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAIAzureFileShareProtectionPolicy::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

QString OAIAzureFileShareProtectionPolicy::getWorkLoadType() const {
    return m_work_load_type;
}
void OAIAzureFileShareProtectionPolicy::setWorkLoadType(const QString &work_load_type) {
    m_work_load_type = work_load_type;
    m_work_load_type_isSet = true;
}

bool OAIAzureFileShareProtectionPolicy::is_work_load_type_Set() const{
    return m_work_load_type_isSet;
}

bool OAIAzureFileShareProtectionPolicy::is_work_load_type_Valid() const{
    return m_work_load_type_isValid;
}

QString OAIAzureFileShareProtectionPolicy::getBackupManagementType() const {
    return m_backup_management_type;
}
void OAIAzureFileShareProtectionPolicy::setBackupManagementType(const QString &backup_management_type) {
    m_backup_management_type = backup_management_type;
    m_backup_management_type_isSet = true;
}

bool OAIAzureFileShareProtectionPolicy::is_backup_management_type_Set() const{
    return m_backup_management_type_isSet;
}

bool OAIAzureFileShareProtectionPolicy::is_backup_management_type_Valid() const{
    return m_backup_management_type_isValid;
}

qint32 OAIAzureFileShareProtectionPolicy::getProtectedItemsCount() const {
    return m_protected_items_count;
}
void OAIAzureFileShareProtectionPolicy::setProtectedItemsCount(const qint32 &protected_items_count) {
    m_protected_items_count = protected_items_count;
    m_protected_items_count_isSet = true;
}

bool OAIAzureFileShareProtectionPolicy::is_protected_items_count_Set() const{
    return m_protected_items_count_isSet;
}

bool OAIAzureFileShareProtectionPolicy::is_protected_items_count_Valid() const{
    return m_protected_items_count_isValid;
}

bool OAIAzureFileShareProtectionPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_retention_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_load_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_backup_management_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_protected_items_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureFileShareProtectionPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_backup_management_type_isValid && true;
}

} // namespace OpenAPI
