/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWeeklyRetentionFormat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWeeklyRetentionFormat::OAIWeeklyRetentionFormat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWeeklyRetentionFormat::OAIWeeklyRetentionFormat() {
    this->initializeModel();
}

OAIWeeklyRetentionFormat::~OAIWeeklyRetentionFormat() {}

void OAIWeeklyRetentionFormat::initializeModel() {

    m_days_of_the_week_isSet = false;
    m_days_of_the_week_isValid = false;

    m_weeks_of_the_month_isSet = false;
    m_weeks_of_the_month_isValid = false;
}

void OAIWeeklyRetentionFormat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWeeklyRetentionFormat::fromJsonObject(QJsonObject json) {

    m_days_of_the_week_isValid = ::OpenAPI::fromJsonValue(m_days_of_the_week, json[QString("daysOfTheWeek")]);
    m_days_of_the_week_isSet = !json[QString("daysOfTheWeek")].isNull() && m_days_of_the_week_isValid;

    m_weeks_of_the_month_isValid = ::OpenAPI::fromJsonValue(m_weeks_of_the_month, json[QString("weeksOfTheMonth")]);
    m_weeks_of_the_month_isSet = !json[QString("weeksOfTheMonth")].isNull() && m_weeks_of_the_month_isValid;
}

QString OAIWeeklyRetentionFormat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWeeklyRetentionFormat::asJsonObject() const {
    QJsonObject obj;
    if (m_days_of_the_week.size() > 0) {
        obj.insert(QString("daysOfTheWeek"), ::OpenAPI::toJsonValue(m_days_of_the_week));
    }
    if (m_weeks_of_the_month.size() > 0) {
        obj.insert(QString("weeksOfTheMonth"), ::OpenAPI::toJsonValue(m_weeks_of_the_month));
    }
    return obj;
}

QList<QString> OAIWeeklyRetentionFormat::getDaysOfTheWeek() const {
    return m_days_of_the_week;
}
void OAIWeeklyRetentionFormat::setDaysOfTheWeek(const QList<QString> &days_of_the_week) {
    m_days_of_the_week = days_of_the_week;
    m_days_of_the_week_isSet = true;
}

bool OAIWeeklyRetentionFormat::is_days_of_the_week_Set() const{
    return m_days_of_the_week_isSet;
}

bool OAIWeeklyRetentionFormat::is_days_of_the_week_Valid() const{
    return m_days_of_the_week_isValid;
}

QList<QString> OAIWeeklyRetentionFormat::getWeeksOfTheMonth() const {
    return m_weeks_of_the_month;
}
void OAIWeeklyRetentionFormat::setWeeksOfTheMonth(const QList<QString> &weeks_of_the_month) {
    m_weeks_of_the_month = weeks_of_the_month;
    m_weeks_of_the_month_isSet = true;
}

bool OAIWeeklyRetentionFormat::is_weeks_of_the_month_Set() const{
    return m_weeks_of_the_month_isSet;
}

bool OAIWeeklyRetentionFormat::is_weeks_of_the_month_Valid() const{
    return m_weeks_of_the_month_isValid;
}

bool OAIWeeklyRetentionFormat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_days_of_the_week.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_weeks_of_the_month.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWeeklyRetentionFormat::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
