/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGenericProtectionPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGenericProtectionPolicy::OAIGenericProtectionPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGenericProtectionPolicy::OAIGenericProtectionPolicy() {
    this->initializeModel();
}

OAIGenericProtectionPolicy::~OAIGenericProtectionPolicy() {}

void OAIGenericProtectionPolicy::initializeModel() {

    m_fabric_name_isSet = false;
    m_fabric_name_isValid = false;

    m_sub_protection_policy_isSet = false;
    m_sub_protection_policy_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;

    m_backup_management_type_isSet = false;
    m_backup_management_type_isValid = false;

    m_protected_items_count_isSet = false;
    m_protected_items_count_isValid = false;
}

void OAIGenericProtectionPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGenericProtectionPolicy::fromJsonObject(QJsonObject json) {

    m_fabric_name_isValid = ::OpenAPI::fromJsonValue(m_fabric_name, json[QString("fabricName")]);
    m_fabric_name_isSet = !json[QString("fabricName")].isNull() && m_fabric_name_isValid;

    m_sub_protection_policy_isValid = ::OpenAPI::fromJsonValue(m_sub_protection_policy, json[QString("subProtectionPolicy")]);
    m_sub_protection_policy_isSet = !json[QString("subProtectionPolicy")].isNull() && m_sub_protection_policy_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("timeZone")]);
    m_time_zone_isSet = !json[QString("timeZone")].isNull() && m_time_zone_isValid;

    m_backup_management_type_isValid = ::OpenAPI::fromJsonValue(m_backup_management_type, json[QString("backupManagementType")]);
    m_backup_management_type_isSet = !json[QString("backupManagementType")].isNull() && m_backup_management_type_isValid;

    m_protected_items_count_isValid = ::OpenAPI::fromJsonValue(m_protected_items_count, json[QString("protectedItemsCount")]);
    m_protected_items_count_isSet = !json[QString("protectedItemsCount")].isNull() && m_protected_items_count_isValid;
}

QString OAIGenericProtectionPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGenericProtectionPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_fabric_name_isSet) {
        obj.insert(QString("fabricName"), ::OpenAPI::toJsonValue(m_fabric_name));
    }
    if (m_sub_protection_policy.size() > 0) {
        obj.insert(QString("subProtectionPolicy"), ::OpenAPI::toJsonValue(m_sub_protection_policy));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("timeZone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    if (m_backup_management_type_isSet) {
        obj.insert(QString("backupManagementType"), ::OpenAPI::toJsonValue(m_backup_management_type));
    }
    if (m_protected_items_count_isSet) {
        obj.insert(QString("protectedItemsCount"), ::OpenAPI::toJsonValue(m_protected_items_count));
    }
    return obj;
}

QString OAIGenericProtectionPolicy::getFabricName() const {
    return m_fabric_name;
}
void OAIGenericProtectionPolicy::setFabricName(const QString &fabric_name) {
    m_fabric_name = fabric_name;
    m_fabric_name_isSet = true;
}

bool OAIGenericProtectionPolicy::is_fabric_name_Set() const{
    return m_fabric_name_isSet;
}

bool OAIGenericProtectionPolicy::is_fabric_name_Valid() const{
    return m_fabric_name_isValid;
}

QList<OAISubProtectionPolicy> OAIGenericProtectionPolicy::getSubProtectionPolicy() const {
    return m_sub_protection_policy;
}
void OAIGenericProtectionPolicy::setSubProtectionPolicy(const QList<OAISubProtectionPolicy> &sub_protection_policy) {
    m_sub_protection_policy = sub_protection_policy;
    m_sub_protection_policy_isSet = true;
}

bool OAIGenericProtectionPolicy::is_sub_protection_policy_Set() const{
    return m_sub_protection_policy_isSet;
}

bool OAIGenericProtectionPolicy::is_sub_protection_policy_Valid() const{
    return m_sub_protection_policy_isValid;
}

QString OAIGenericProtectionPolicy::getTimeZone() const {
    return m_time_zone;
}
void OAIGenericProtectionPolicy::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAIGenericProtectionPolicy::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAIGenericProtectionPolicy::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

QString OAIGenericProtectionPolicy::getBackupManagementType() const {
    return m_backup_management_type;
}
void OAIGenericProtectionPolicy::setBackupManagementType(const QString &backup_management_type) {
    m_backup_management_type = backup_management_type;
    m_backup_management_type_isSet = true;
}

bool OAIGenericProtectionPolicy::is_backup_management_type_Set() const{
    return m_backup_management_type_isSet;
}

bool OAIGenericProtectionPolicy::is_backup_management_type_Valid() const{
    return m_backup_management_type_isValid;
}

qint32 OAIGenericProtectionPolicy::getProtectedItemsCount() const {
    return m_protected_items_count;
}
void OAIGenericProtectionPolicy::setProtectedItemsCount(const qint32 &protected_items_count) {
    m_protected_items_count = protected_items_count;
    m_protected_items_count_isSet = true;
}

bool OAIGenericProtectionPolicy::is_protected_items_count_Set() const{
    return m_protected_items_count_isSet;
}

bool OAIGenericProtectionPolicy::is_protected_items_count_Valid() const{
    return m_protected_items_count_isValid;
}

bool OAIGenericProtectionPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fabric_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_protection_policy.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_backup_management_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_protected_items_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGenericProtectionPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_backup_management_type_isValid && true;
}

} // namespace OpenAPI
