/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMonthlyRetentionSchedule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMonthlyRetentionSchedule::OAIMonthlyRetentionSchedule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMonthlyRetentionSchedule::OAIMonthlyRetentionSchedule() {
    this->initializeModel();
}

OAIMonthlyRetentionSchedule::~OAIMonthlyRetentionSchedule() {}

void OAIMonthlyRetentionSchedule::initializeModel() {

    m_retention_duration_isSet = false;
    m_retention_duration_isValid = false;

    m_retention_schedule_daily_isSet = false;
    m_retention_schedule_daily_isValid = false;

    m_retention_schedule_format_type_isSet = false;
    m_retention_schedule_format_type_isValid = false;

    m_retention_schedule_weekly_isSet = false;
    m_retention_schedule_weekly_isValid = false;

    m_retention_times_isSet = false;
    m_retention_times_isValid = false;
}

void OAIMonthlyRetentionSchedule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMonthlyRetentionSchedule::fromJsonObject(QJsonObject json) {

    m_retention_duration_isValid = ::OpenAPI::fromJsonValue(m_retention_duration, json[QString("retentionDuration")]);
    m_retention_duration_isSet = !json[QString("retentionDuration")].isNull() && m_retention_duration_isValid;

    m_retention_schedule_daily_isValid = ::OpenAPI::fromJsonValue(m_retention_schedule_daily, json[QString("retentionScheduleDaily")]);
    m_retention_schedule_daily_isSet = !json[QString("retentionScheduleDaily")].isNull() && m_retention_schedule_daily_isValid;

    m_retention_schedule_format_type_isValid = ::OpenAPI::fromJsonValue(m_retention_schedule_format_type, json[QString("retentionScheduleFormatType")]);
    m_retention_schedule_format_type_isSet = !json[QString("retentionScheduleFormatType")].isNull() && m_retention_schedule_format_type_isValid;

    m_retention_schedule_weekly_isValid = ::OpenAPI::fromJsonValue(m_retention_schedule_weekly, json[QString("retentionScheduleWeekly")]);
    m_retention_schedule_weekly_isSet = !json[QString("retentionScheduleWeekly")].isNull() && m_retention_schedule_weekly_isValid;

    m_retention_times_isValid = ::OpenAPI::fromJsonValue(m_retention_times, json[QString("retentionTimes")]);
    m_retention_times_isSet = !json[QString("retentionTimes")].isNull() && m_retention_times_isValid;
}

QString OAIMonthlyRetentionSchedule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMonthlyRetentionSchedule::asJsonObject() const {
    QJsonObject obj;
    if (m_retention_duration.isSet()) {
        obj.insert(QString("retentionDuration"), ::OpenAPI::toJsonValue(m_retention_duration));
    }
    if (m_retention_schedule_daily.isSet()) {
        obj.insert(QString("retentionScheduleDaily"), ::OpenAPI::toJsonValue(m_retention_schedule_daily));
    }
    if (m_retention_schedule_format_type_isSet) {
        obj.insert(QString("retentionScheduleFormatType"), ::OpenAPI::toJsonValue(m_retention_schedule_format_type));
    }
    if (m_retention_schedule_weekly.isSet()) {
        obj.insert(QString("retentionScheduleWeekly"), ::OpenAPI::toJsonValue(m_retention_schedule_weekly));
    }
    if (m_retention_times.size() > 0) {
        obj.insert(QString("retentionTimes"), ::OpenAPI::toJsonValue(m_retention_times));
    }
    return obj;
}

OAIRetentionDuration OAIMonthlyRetentionSchedule::getRetentionDuration() const {
    return m_retention_duration;
}
void OAIMonthlyRetentionSchedule::setRetentionDuration(const OAIRetentionDuration &retention_duration) {
    m_retention_duration = retention_duration;
    m_retention_duration_isSet = true;
}

bool OAIMonthlyRetentionSchedule::is_retention_duration_Set() const{
    return m_retention_duration_isSet;
}

bool OAIMonthlyRetentionSchedule::is_retention_duration_Valid() const{
    return m_retention_duration_isValid;
}

OAIDailyRetentionFormat OAIMonthlyRetentionSchedule::getRetentionScheduleDaily() const {
    return m_retention_schedule_daily;
}
void OAIMonthlyRetentionSchedule::setRetentionScheduleDaily(const OAIDailyRetentionFormat &retention_schedule_daily) {
    m_retention_schedule_daily = retention_schedule_daily;
    m_retention_schedule_daily_isSet = true;
}

bool OAIMonthlyRetentionSchedule::is_retention_schedule_daily_Set() const{
    return m_retention_schedule_daily_isSet;
}

bool OAIMonthlyRetentionSchedule::is_retention_schedule_daily_Valid() const{
    return m_retention_schedule_daily_isValid;
}

QString OAIMonthlyRetentionSchedule::getRetentionScheduleFormatType() const {
    return m_retention_schedule_format_type;
}
void OAIMonthlyRetentionSchedule::setRetentionScheduleFormatType(const QString &retention_schedule_format_type) {
    m_retention_schedule_format_type = retention_schedule_format_type;
    m_retention_schedule_format_type_isSet = true;
}

bool OAIMonthlyRetentionSchedule::is_retention_schedule_format_type_Set() const{
    return m_retention_schedule_format_type_isSet;
}

bool OAIMonthlyRetentionSchedule::is_retention_schedule_format_type_Valid() const{
    return m_retention_schedule_format_type_isValid;
}

OAIWeeklyRetentionFormat OAIMonthlyRetentionSchedule::getRetentionScheduleWeekly() const {
    return m_retention_schedule_weekly;
}
void OAIMonthlyRetentionSchedule::setRetentionScheduleWeekly(const OAIWeeklyRetentionFormat &retention_schedule_weekly) {
    m_retention_schedule_weekly = retention_schedule_weekly;
    m_retention_schedule_weekly_isSet = true;
}

bool OAIMonthlyRetentionSchedule::is_retention_schedule_weekly_Set() const{
    return m_retention_schedule_weekly_isSet;
}

bool OAIMonthlyRetentionSchedule::is_retention_schedule_weekly_Valid() const{
    return m_retention_schedule_weekly_isValid;
}

QList<QDateTime> OAIMonthlyRetentionSchedule::getRetentionTimes() const {
    return m_retention_times;
}
void OAIMonthlyRetentionSchedule::setRetentionTimes(const QList<QDateTime> &retention_times) {
    m_retention_times = retention_times;
    m_retention_times_isSet = true;
}

bool OAIMonthlyRetentionSchedule::is_retention_times_Set() const{
    return m_retention_times_isSet;
}

bool OAIMonthlyRetentionSchedule::is_retention_times_Valid() const{
    return m_retention_times_isValid;
}

bool OAIMonthlyRetentionSchedule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_retention_duration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_retention_schedule_daily.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_retention_schedule_format_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retention_schedule_weekly.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_retention_times.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMonthlyRetentionSchedule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
