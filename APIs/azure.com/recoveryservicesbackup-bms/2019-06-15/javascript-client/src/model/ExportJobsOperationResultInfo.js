/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OperationResultInfoBase from './OperationResultInfoBase';

/**
 * The ExportJobsOperationResultInfo model module.
 * @module model/ExportJobsOperationResultInfo
 * @version 2019-06-15
 */
class ExportJobsOperationResultInfo {
    /**
     * Constructs a new <code>ExportJobsOperationResultInfo</code>.
     * This class is used to send blob details after exporting jobs.
     * @alias module:model/ExportJobsOperationResultInfo
     * @extends module:model/OperationResultInfoBase
     * @implements module:model/OperationResultInfoBase
     * @param objectType {String} This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
     */
    constructor(objectType) { 
        OperationResultInfoBase.initialize(this, objectType);
        ExportJobsOperationResultInfo.initialize(this, objectType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, objectType) { 
    }

    /**
     * Constructs a <code>ExportJobsOperationResultInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportJobsOperationResultInfo} obj Optional instance to populate.
     * @return {module:model/ExportJobsOperationResultInfo} The populated <code>ExportJobsOperationResultInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportJobsOperationResultInfo();
            OperationResultInfoBase.constructFromObject(data, obj);
            OperationResultInfoBase.constructFromObject(data, obj);

            if (data.hasOwnProperty('blobSasKey')) {
                obj['blobSasKey'] = ApiClient.convertToType(data['blobSasKey'], 'String');
            }
            if (data.hasOwnProperty('blobUrl')) {
                obj['blobUrl'] = ApiClient.convertToType(data['blobUrl'], 'String');
            }
            if (data.hasOwnProperty('excelFileBlobSasKey')) {
                obj['excelFileBlobSasKey'] = ApiClient.convertToType(data['excelFileBlobSasKey'], 'String');
            }
            if (data.hasOwnProperty('excelFileBlobUrl')) {
                obj['excelFileBlobUrl'] = ApiClient.convertToType(data['excelFileBlobUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportJobsOperationResultInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportJobsOperationResultInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExportJobsOperationResultInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['blobSasKey'] && !(typeof data['blobSasKey'] === 'string' || data['blobSasKey'] instanceof String)) {
            throw new Error("Expected the field `blobSasKey` to be a primitive type in the JSON string but got " + data['blobSasKey']);
        }
        // ensure the json data is a string
        if (data['blobUrl'] && !(typeof data['blobUrl'] === 'string' || data['blobUrl'] instanceof String)) {
            throw new Error("Expected the field `blobUrl` to be a primitive type in the JSON string but got " + data['blobUrl']);
        }
        // ensure the json data is a string
        if (data['excelFileBlobSasKey'] && !(typeof data['excelFileBlobSasKey'] === 'string' || data['excelFileBlobSasKey'] instanceof String)) {
            throw new Error("Expected the field `excelFileBlobSasKey` to be a primitive type in the JSON string but got " + data['excelFileBlobSasKey']);
        }
        // ensure the json data is a string
        if (data['excelFileBlobUrl'] && !(typeof data['excelFileBlobUrl'] === 'string' || data['excelFileBlobUrl'] instanceof String)) {
            throw new Error("Expected the field `excelFileBlobUrl` to be a primitive type in the JSON string but got " + data['excelFileBlobUrl']);
        }

        return true;
    }


}

ExportJobsOperationResultInfo.RequiredProperties = ["objectType"];

/**
 * SAS key to access the blob. It expires in 15 mins.
 * @member {String} blobSasKey
 */
ExportJobsOperationResultInfo.prototype['blobSasKey'] = undefined;

/**
 * URL of the blob into which the serialized string of list of jobs is exported.
 * @member {String} blobUrl
 */
ExportJobsOperationResultInfo.prototype['blobUrl'] = undefined;

/**
 * SAS key to access the blob. It expires in 15 mins.
 * @member {String} excelFileBlobSasKey
 */
ExportJobsOperationResultInfo.prototype['excelFileBlobSasKey'] = undefined;

/**
 * URL of the blob into which the ExcelFile is uploaded.
 * @member {String} excelFileBlobUrl
 */
ExportJobsOperationResultInfo.prototype['excelFileBlobUrl'] = undefined;


// Implement OperationResultInfoBase interface:
/**
 * This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
 * @member {String} objectType
 */
OperationResultInfoBase.prototype['objectType'] = undefined;




export default ExportJobsOperationResultInfo;

