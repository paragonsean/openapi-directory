/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RetentionPolicy from './RetentionPolicy';
import SchedulePolicy from './SchedulePolicy';

/**
 * The SubProtectionPolicy model module.
 * @module model/SubProtectionPolicy
 * @version 2019-06-15
 */
class SubProtectionPolicy {
    /**
     * Constructs a new <code>SubProtectionPolicy</code>.
     * Sub-protection policy which includes schedule and retention
     * @alias module:model/SubProtectionPolicy
     */
    constructor() { 
        
        SubProtectionPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubProtectionPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubProtectionPolicy} obj Optional instance to populate.
     * @return {module:model/SubProtectionPolicy} The populated <code>SubProtectionPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubProtectionPolicy();

            if (data.hasOwnProperty('policyType')) {
                obj['policyType'] = ApiClient.convertToType(data['policyType'], 'String');
            }
            if (data.hasOwnProperty('retentionPolicy')) {
                obj['retentionPolicy'] = RetentionPolicy.constructFromObject(data['retentionPolicy']);
            }
            if (data.hasOwnProperty('schedulePolicy')) {
                obj['schedulePolicy'] = SchedulePolicy.constructFromObject(data['schedulePolicy']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubProtectionPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubProtectionPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['policyType'] && !(typeof data['policyType'] === 'string' || data['policyType'] instanceof String)) {
            throw new Error("Expected the field `policyType` to be a primitive type in the JSON string but got " + data['policyType']);
        }
        // validate the optional field `retentionPolicy`
        if (data['retentionPolicy']) { // data not null
          RetentionPolicy.validateJSON(data['retentionPolicy']);
        }
        // validate the optional field `schedulePolicy`
        if (data['schedulePolicy']) { // data not null
          SchedulePolicy.validateJSON(data['schedulePolicy']);
        }

        return true;
    }


}



/**
 * Type of backup policy type
 * @member {module:model/SubProtectionPolicy.PolicyTypeEnum} policyType
 */
SubProtectionPolicy.prototype['policyType'] = undefined;

/**
 * @member {module:model/RetentionPolicy} retentionPolicy
 */
SubProtectionPolicy.prototype['retentionPolicy'] = undefined;

/**
 * @member {module:model/SchedulePolicy} schedulePolicy
 */
SubProtectionPolicy.prototype['schedulePolicy'] = undefined;





/**
 * Allowed values for the <code>policyType</code> property.
 * @enum {String}
 * @readonly
 */
SubProtectionPolicy['PolicyTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "Full"
     * @const
     */
    "Full": "Full",

    /**
     * value: "Differential"
     * @const
     */
    "Differential": "Differential",

    /**
     * value: "Log"
     * @const
     */
    "Log": "Log",

    /**
     * value: "CopyOnlyFull"
     * @const
     */
    "CopyOnlyFull": "CopyOnlyFull"
};



export default SubProtectionPolicy;

