/**
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProtectedItemQueryObject model module.
 * @module model/ProtectedItemQueryObject
 * @version 2019-06-15
 */
class ProtectedItemQueryObject {
    /**
     * Constructs a new <code>ProtectedItemQueryObject</code>.
     * Filters to list backup items.
     * @alias module:model/ProtectedItemQueryObject
     */
    constructor() { 
        
        ProtectedItemQueryObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProtectedItemQueryObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProtectedItemQueryObject} obj Optional instance to populate.
     * @return {module:model/ProtectedItemQueryObject} The populated <code>ProtectedItemQueryObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProtectedItemQueryObject();

            if (data.hasOwnProperty('backupEngineName')) {
                obj['backupEngineName'] = ApiClient.convertToType(data['backupEngineName'], 'String');
            }
            if (data.hasOwnProperty('backupManagementType')) {
                obj['backupManagementType'] = ApiClient.convertToType(data['backupManagementType'], 'String');
            }
            if (data.hasOwnProperty('backupSetName')) {
                obj['backupSetName'] = ApiClient.convertToType(data['backupSetName'], 'String');
            }
            if (data.hasOwnProperty('containerName')) {
                obj['containerName'] = ApiClient.convertToType(data['containerName'], 'String');
            }
            if (data.hasOwnProperty('fabricName')) {
                obj['fabricName'] = ApiClient.convertToType(data['fabricName'], 'String');
            }
            if (data.hasOwnProperty('friendlyName')) {
                obj['friendlyName'] = ApiClient.convertToType(data['friendlyName'], 'String');
            }
            if (data.hasOwnProperty('healthState')) {
                obj['healthState'] = ApiClient.convertToType(data['healthState'], 'String');
            }
            if (data.hasOwnProperty('itemType')) {
                obj['itemType'] = ApiClient.convertToType(data['itemType'], 'String');
            }
            if (data.hasOwnProperty('policyName')) {
                obj['policyName'] = ApiClient.convertToType(data['policyName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProtectedItemQueryObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProtectedItemQueryObject</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['backupEngineName'] && !(typeof data['backupEngineName'] === 'string' || data['backupEngineName'] instanceof String)) {
            throw new Error("Expected the field `backupEngineName` to be a primitive type in the JSON string but got " + data['backupEngineName']);
        }
        // ensure the json data is a string
        if (data['backupManagementType'] && !(typeof data['backupManagementType'] === 'string' || data['backupManagementType'] instanceof String)) {
            throw new Error("Expected the field `backupManagementType` to be a primitive type in the JSON string but got " + data['backupManagementType']);
        }
        // ensure the json data is a string
        if (data['backupSetName'] && !(typeof data['backupSetName'] === 'string' || data['backupSetName'] instanceof String)) {
            throw new Error("Expected the field `backupSetName` to be a primitive type in the JSON string but got " + data['backupSetName']);
        }
        // ensure the json data is a string
        if (data['containerName'] && !(typeof data['containerName'] === 'string' || data['containerName'] instanceof String)) {
            throw new Error("Expected the field `containerName` to be a primitive type in the JSON string but got " + data['containerName']);
        }
        // ensure the json data is a string
        if (data['fabricName'] && !(typeof data['fabricName'] === 'string' || data['fabricName'] instanceof String)) {
            throw new Error("Expected the field `fabricName` to be a primitive type in the JSON string but got " + data['fabricName']);
        }
        // ensure the json data is a string
        if (data['friendlyName'] && !(typeof data['friendlyName'] === 'string' || data['friendlyName'] instanceof String)) {
            throw new Error("Expected the field `friendlyName` to be a primitive type in the JSON string but got " + data['friendlyName']);
        }
        // ensure the json data is a string
        if (data['healthState'] && !(typeof data['healthState'] === 'string' || data['healthState'] instanceof String)) {
            throw new Error("Expected the field `healthState` to be a primitive type in the JSON string but got " + data['healthState']);
        }
        // ensure the json data is a string
        if (data['itemType'] && !(typeof data['itemType'] === 'string' || data['itemType'] instanceof String)) {
            throw new Error("Expected the field `itemType` to be a primitive type in the JSON string but got " + data['itemType']);
        }
        // ensure the json data is a string
        if (data['policyName'] && !(typeof data['policyName'] === 'string' || data['policyName'] instanceof String)) {
            throw new Error("Expected the field `policyName` to be a primitive type in the JSON string but got " + data['policyName']);
        }

        return true;
    }


}



/**
 * Backup Engine name
 * @member {String} backupEngineName
 */
ProtectedItemQueryObject.prototype['backupEngineName'] = undefined;

/**
 * Backup management type for the backed up item.
 * @member {module:model/ProtectedItemQueryObject.BackupManagementTypeEnum} backupManagementType
 */
ProtectedItemQueryObject.prototype['backupManagementType'] = undefined;

/**
 * Name of the backup set.
 * @member {String} backupSetName
 */
ProtectedItemQueryObject.prototype['backupSetName'] = undefined;

/**
 * Name of the container.
 * @member {String} containerName
 */
ProtectedItemQueryObject.prototype['containerName'] = undefined;

/**
 * Name of the fabric.
 * @member {String} fabricName
 */
ProtectedItemQueryObject.prototype['fabricName'] = undefined;

/**
 * Friendly name of protected item
 * @member {String} friendlyName
 */
ProtectedItemQueryObject.prototype['friendlyName'] = undefined;

/**
 * Health State for the backed up item.
 * @member {module:model/ProtectedItemQueryObject.HealthStateEnum} healthState
 */
ProtectedItemQueryObject.prototype['healthState'] = undefined;

/**
 * Type of workload this item represents.
 * @member {module:model/ProtectedItemQueryObject.ItemTypeEnum} itemType
 */
ProtectedItemQueryObject.prototype['itemType'] = undefined;

/**
 * Backup policy name associated with the backup item.
 * @member {String} policyName
 */
ProtectedItemQueryObject.prototype['policyName'] = undefined;





/**
 * Allowed values for the <code>backupManagementType</code> property.
 * @enum {String}
 * @readonly
 */
ProtectedItemQueryObject['BackupManagementTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "AzureIaasVM"
     * @const
     */
    "AzureIaasVM": "AzureIaasVM",

    /**
     * value: "MAB"
     * @const
     */
    "MAB": "MAB",

    /**
     * value: "DPM"
     * @const
     */
    "DPM": "DPM",

    /**
     * value: "AzureBackupServer"
     * @const
     */
    "AzureBackupServer": "AzureBackupServer",

    /**
     * value: "AzureSql"
     * @const
     */
    "AzureSql": "AzureSql",

    /**
     * value: "AzureStorage"
     * @const
     */
    "AzureStorage": "AzureStorage",

    /**
     * value: "AzureWorkload"
     * @const
     */
    "AzureWorkload": "AzureWorkload",

    /**
     * value: "DefaultBackup"
     * @const
     */
    "DefaultBackup": "DefaultBackup"
};


/**
 * Allowed values for the <code>healthState</code> property.
 * @enum {String}
 * @readonly
 */
ProtectedItemQueryObject['HealthStateEnum'] = {

    /**
     * value: "Passed"
     * @const
     */
    "Passed": "Passed",

    /**
     * value: "ActionRequired"
     * @const
     */
    "ActionRequired": "ActionRequired",

    /**
     * value: "ActionSuggested"
     * @const
     */
    "ActionSuggested": "ActionSuggested",

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid"
};


/**
 * Allowed values for the <code>itemType</code> property.
 * @enum {String}
 * @readonly
 */
ProtectedItemQueryObject['ItemTypeEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "VM"
     * @const
     */
    "VM": "VM",

    /**
     * value: "FileFolder"
     * @const
     */
    "FileFolder": "FileFolder",

    /**
     * value: "AzureSqlDb"
     * @const
     */
    "AzureSqlDb": "AzureSqlDb",

    /**
     * value: "SQLDB"
     * @const
     */
    "SQLDB": "SQLDB",

    /**
     * value: "Exchange"
     * @const
     */
    "Exchange": "Exchange",

    /**
     * value: "Sharepoint"
     * @const
     */
    "Sharepoint": "Sharepoint",

    /**
     * value: "VMwareVM"
     * @const
     */
    "VMwareVM": "VMwareVM",

    /**
     * value: "SystemState"
     * @const
     */
    "SystemState": "SystemState",

    /**
     * value: "Client"
     * @const
     */
    "Client": "Client",

    /**
     * value: "GenericDataSource"
     * @const
     */
    "GenericDataSource": "GenericDataSource",

    /**
     * value: "SQLDataBase"
     * @const
     */
    "SQLDataBase": "SQLDataBase",

    /**
     * value: "AzureFileShare"
     * @const
     */
    "AzureFileShare": "AzureFileShare",

    /**
     * value: "SAPHanaDatabase"
     * @const
     */
    "SAPHanaDatabase": "SAPHanaDatabase",

    /**
     * value: "SAPAseDatabase"
     * @const
     */
    "SAPAseDatabase": "SAPAseDatabase"
};



export default ProtectedItemQueryObject;

