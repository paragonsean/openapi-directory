/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ProtectionPolicy;
import org.openapitools.client.model.Settings;
import org.openapitools.client.model.SubProtectionPolicy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Azure VM (Mercury) workload-specific backup policy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:08:58.744593-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AzureVmWorkloadProtectionPolicy extends ProtectionPolicy {
  public static final String SERIALIZED_NAME_MAKE_POLICY_CONSISTENT = "makePolicyConsistent";
  @SerializedName(SERIALIZED_NAME_MAKE_POLICY_CONSISTENT)
  private Boolean makePolicyConsistent;

  public static final String SERIALIZED_NAME_SETTINGS = "settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private Settings settings;

  public static final String SERIALIZED_NAME_SUB_PROTECTION_POLICY = "subProtectionPolicy";
  @SerializedName(SERIALIZED_NAME_SUB_PROTECTION_POLICY)
  private List<SubProtectionPolicy> subProtectionPolicy = new ArrayList<>();

  /**
   * Type of workload for the backup management
   */
  @JsonAdapter(WorkLoadTypeEnum.Adapter.class)
  public enum WorkLoadTypeEnum {
    INVALID("Invalid"),
    
    VM("VM"),
    
    FILE_FOLDER("FileFolder"),
    
    AZURE_SQL_DB("AzureSqlDb"),
    
    SQLDB("SQLDB"),
    
    EXCHANGE("Exchange"),
    
    SHAREPOINT("Sharepoint"),
    
    V_MWARE_VM("VMwareVM"),
    
    SYSTEM_STATE("SystemState"),
    
    CLIENT("Client"),
    
    GENERIC_DATA_SOURCE("GenericDataSource"),
    
    SQL_DATA_BASE("SQLDataBase"),
    
    AZURE_FILE_SHARE("AzureFileShare"),
    
    SAP_HANA_DATABASE("SAPHanaDatabase"),
    
    SAP_ASE_DATABASE("SAPAseDatabase");

    private String value;

    WorkLoadTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static WorkLoadTypeEnum fromValue(String value) {
      for (WorkLoadTypeEnum b : WorkLoadTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<WorkLoadTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WorkLoadTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WorkLoadTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return WorkLoadTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      WorkLoadTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_WORK_LOAD_TYPE = "workLoadType";
  @SerializedName(SERIALIZED_NAME_WORK_LOAD_TYPE)
  private WorkLoadTypeEnum workLoadType;

  public AzureVmWorkloadProtectionPolicy() {
    this.backupManagementType = this.getClass().getSimpleName();
  }

  public AzureVmWorkloadProtectionPolicy makePolicyConsistent(Boolean makePolicyConsistent) {
    this.makePolicyConsistent = makePolicyConsistent;
    return this;
  }

  /**
   * Fix the policy inconsistency
   * @return makePolicyConsistent
   */
  @javax.annotation.Nullable
  public Boolean getMakePolicyConsistent() {
    return makePolicyConsistent;
  }

  public void setMakePolicyConsistent(Boolean makePolicyConsistent) {
    this.makePolicyConsistent = makePolicyConsistent;
  }


  public AzureVmWorkloadProtectionPolicy settings(Settings settings) {
    this.settings = settings;
    return this;
  }

  /**
   * Get settings
   * @return settings
   */
  @javax.annotation.Nullable
  public Settings getSettings() {
    return settings;
  }

  public void setSettings(Settings settings) {
    this.settings = settings;
  }


  public AzureVmWorkloadProtectionPolicy subProtectionPolicy(List<SubProtectionPolicy> subProtectionPolicy) {
    this.subProtectionPolicy = subProtectionPolicy;
    return this;
  }

  public AzureVmWorkloadProtectionPolicy addSubProtectionPolicyItem(SubProtectionPolicy subProtectionPolicyItem) {
    if (this.subProtectionPolicy == null) {
      this.subProtectionPolicy = new ArrayList<>();
    }
    this.subProtectionPolicy.add(subProtectionPolicyItem);
    return this;
  }

  /**
   * List of sub-protection policies which includes schedule and retention
   * @return subProtectionPolicy
   */
  @javax.annotation.Nullable
  public List<SubProtectionPolicy> getSubProtectionPolicy() {
    return subProtectionPolicy;
  }

  public void setSubProtectionPolicy(List<SubProtectionPolicy> subProtectionPolicy) {
    this.subProtectionPolicy = subProtectionPolicy;
  }


  public AzureVmWorkloadProtectionPolicy workLoadType(WorkLoadTypeEnum workLoadType) {
    this.workLoadType = workLoadType;
    return this;
  }

  /**
   * Type of workload for the backup management
   * @return workLoadType
   */
  @javax.annotation.Nullable
  public WorkLoadTypeEnum getWorkLoadType() {
    return workLoadType;
  }

  public void setWorkLoadType(WorkLoadTypeEnum workLoadType) {
    this.workLoadType = workLoadType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureVmWorkloadProtectionPolicy azureVmWorkloadProtectionPolicy = (AzureVmWorkloadProtectionPolicy) o;
    return Objects.equals(this.makePolicyConsistent, azureVmWorkloadProtectionPolicy.makePolicyConsistent) &&
        Objects.equals(this.settings, azureVmWorkloadProtectionPolicy.settings) &&
        Objects.equals(this.subProtectionPolicy, azureVmWorkloadProtectionPolicy.subProtectionPolicy) &&
        Objects.equals(this.workLoadType, azureVmWorkloadProtectionPolicy.workLoadType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(makePolicyConsistent, settings, subProtectionPolicy, workLoadType, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureVmWorkloadProtectionPolicy {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    makePolicyConsistent: ").append(toIndentedString(makePolicyConsistent)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    subProtectionPolicy: ").append(toIndentedString(subProtectionPolicy)).append("\n");
    sb.append("    workLoadType: ").append(toIndentedString(workLoadType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backupManagementType");
    openapiFields.add("protectedItemsCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("backupManagementType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AzureVmWorkloadProtectionPolicy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AzureVmWorkloadProtectionPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AzureVmWorkloadProtectionPolicy is not found in the empty JSON string", AzureVmWorkloadProtectionPolicy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AzureVmWorkloadProtectionPolicy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AzureVmWorkloadProtectionPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AzureVmWorkloadProtectionPolicy.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AzureVmWorkloadProtectionPolicy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AzureVmWorkloadProtectionPolicy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AzureVmWorkloadProtectionPolicy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AzureVmWorkloadProtectionPolicy.class));

       return (TypeAdapter<T>) new TypeAdapter<AzureVmWorkloadProtectionPolicy>() {
           @Override
           public void write(JsonWriter out, AzureVmWorkloadProtectionPolicy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AzureVmWorkloadProtectionPolicy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AzureVmWorkloadProtectionPolicy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AzureVmWorkloadProtectionPolicy
   * @throws IOException if the JSON string is invalid with respect to AzureVmWorkloadProtectionPolicy
   */
  public static AzureVmWorkloadProtectionPolicy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AzureVmWorkloadProtectionPolicy.class);
  }

  /**
   * Convert an instance of AzureVmWorkloadProtectionPolicy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

