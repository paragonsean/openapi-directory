/*
 * RecoveryServicesBackupClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.MabFileFolderProtectedItemExtendedInfo;
import org.openapitools.client.model.ProtectedItem;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MAB workload-specific backup item.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:08:58.744593-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MabFileFolderProtectedItem extends ProtectedItem {
  public static final String SERIALIZED_NAME_COMPUTER_NAME = "computerName";
  @SerializedName(SERIALIZED_NAME_COMPUTER_NAME)
  private String computerName;

  public static final String SERIALIZED_NAME_DEFERRED_DELETE_SYNC_TIME_IN_U_T_C = "deferredDeleteSyncTimeInUTC";
  @SerializedName(SERIALIZED_NAME_DEFERRED_DELETE_SYNC_TIME_IN_U_T_C)
  private Long deferredDeleteSyncTimeInUTC;

  public static final String SERIALIZED_NAME_EXTENDED_INFO = "extendedInfo";
  @SerializedName(SERIALIZED_NAME_EXTENDED_INFO)
  private MabFileFolderProtectedItemExtendedInfo extendedInfo;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendlyName";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_LAST_BACKUP_STATUS = "lastBackupStatus";
  @SerializedName(SERIALIZED_NAME_LAST_BACKUP_STATUS)
  private String lastBackupStatus;

  public static final String SERIALIZED_NAME_LAST_BACKUP_TIME = "lastBackupTime";
  @SerializedName(SERIALIZED_NAME_LAST_BACKUP_TIME)
  private OffsetDateTime lastBackupTime;

  public static final String SERIALIZED_NAME_PROTECTION_STATE = "protectionState";
  @SerializedName(SERIALIZED_NAME_PROTECTION_STATE)
  private String protectionState;

  public MabFileFolderProtectedItem() {
    this.protectedItemType = this.getClass().getSimpleName();
  }

  public MabFileFolderProtectedItem computerName(String computerName) {
    this.computerName = computerName;
    return this;
  }

  /**
   * Name of the computer associated with this backup item.
   * @return computerName
   */
  @javax.annotation.Nullable
  public String getComputerName() {
    return computerName;
  }

  public void setComputerName(String computerName) {
    this.computerName = computerName;
  }


  public MabFileFolderProtectedItem deferredDeleteSyncTimeInUTC(Long deferredDeleteSyncTimeInUTC) {
    this.deferredDeleteSyncTimeInUTC = deferredDeleteSyncTimeInUTC;
    return this;
  }

  /**
   * Sync time for deferred deletion in UTC
   * @return deferredDeleteSyncTimeInUTC
   */
  @javax.annotation.Nullable
  public Long getDeferredDeleteSyncTimeInUTC() {
    return deferredDeleteSyncTimeInUTC;
  }

  public void setDeferredDeleteSyncTimeInUTC(Long deferredDeleteSyncTimeInUTC) {
    this.deferredDeleteSyncTimeInUTC = deferredDeleteSyncTimeInUTC;
  }


  public MabFileFolderProtectedItem extendedInfo(MabFileFolderProtectedItemExtendedInfo extendedInfo) {
    this.extendedInfo = extendedInfo;
    return this;
  }

  /**
   * Get extendedInfo
   * @return extendedInfo
   */
  @javax.annotation.Nullable
  public MabFileFolderProtectedItemExtendedInfo getExtendedInfo() {
    return extendedInfo;
  }

  public void setExtendedInfo(MabFileFolderProtectedItemExtendedInfo extendedInfo) {
    this.extendedInfo = extendedInfo;
  }


  public MabFileFolderProtectedItem friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * Friendly name of this backup item.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public MabFileFolderProtectedItem lastBackupStatus(String lastBackupStatus) {
    this.lastBackupStatus = lastBackupStatus;
    return this;
  }

  /**
   * Status of last backup operation.
   * @return lastBackupStatus
   */
  @javax.annotation.Nullable
  public String getLastBackupStatus() {
    return lastBackupStatus;
  }

  public void setLastBackupStatus(String lastBackupStatus) {
    this.lastBackupStatus = lastBackupStatus;
  }


  public MabFileFolderProtectedItem lastBackupTime(OffsetDateTime lastBackupTime) {
    this.lastBackupTime = lastBackupTime;
    return this;
  }

  /**
   * Timestamp of the last backup operation on this backup item.
   * @return lastBackupTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastBackupTime() {
    return lastBackupTime;
  }

  public void setLastBackupTime(OffsetDateTime lastBackupTime) {
    this.lastBackupTime = lastBackupTime;
  }


  public MabFileFolderProtectedItem protectionState(String protectionState) {
    this.protectionState = protectionState;
    return this;
  }

  /**
   * Protected, ProtectionStopped, IRPending or ProtectionError
   * @return protectionState
   */
  @javax.annotation.Nullable
  public String getProtectionState() {
    return protectionState;
  }

  public void setProtectionState(String protectionState) {
    this.protectionState = protectionState;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MabFileFolderProtectedItem mabFileFolderProtectedItem = (MabFileFolderProtectedItem) o;
    return Objects.equals(this.computerName, mabFileFolderProtectedItem.computerName) &&
        Objects.equals(this.deferredDeleteSyncTimeInUTC, mabFileFolderProtectedItem.deferredDeleteSyncTimeInUTC) &&
        Objects.equals(this.extendedInfo, mabFileFolderProtectedItem.extendedInfo) &&
        Objects.equals(this.friendlyName, mabFileFolderProtectedItem.friendlyName) &&
        Objects.equals(this.lastBackupStatus, mabFileFolderProtectedItem.lastBackupStatus) &&
        Objects.equals(this.lastBackupTime, mabFileFolderProtectedItem.lastBackupTime) &&
        Objects.equals(this.protectionState, mabFileFolderProtectedItem.protectionState) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(computerName, deferredDeleteSyncTimeInUTC, extendedInfo, friendlyName, lastBackupStatus, lastBackupTime, protectionState, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MabFileFolderProtectedItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    computerName: ").append(toIndentedString(computerName)).append("\n");
    sb.append("    deferredDeleteSyncTimeInUTC: ").append(toIndentedString(deferredDeleteSyncTimeInUTC)).append("\n");
    sb.append("    extendedInfo: ").append(toIndentedString(extendedInfo)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    lastBackupStatus: ").append(toIndentedString(lastBackupStatus)).append("\n");
    sb.append("    lastBackupTime: ").append(toIndentedString(lastBackupTime)).append("\n");
    sb.append("    protectionState: ").append(toIndentedString(protectionState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backupManagementType");
    openapiFields.add("backupSetName");
    openapiFields.add("containerName");
    openapiFields.add("createMode");
    openapiFields.add("deferredDeleteTimeInUTC");
    openapiFields.add("deferredDeleteTimeRemaining");
    openapiFields.add("isDeferredDeleteScheduleUpcoming");
    openapiFields.add("isRehydrate");
    openapiFields.add("isScheduledForDeferredDelete");
    openapiFields.add("lastRecoveryPoint");
    openapiFields.add("policyId");
    openapiFields.add("protectedItemType");
    openapiFields.add("sourceResourceId");
    openapiFields.add("workloadType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("protectedItemType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MabFileFolderProtectedItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MabFileFolderProtectedItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MabFileFolderProtectedItem is not found in the empty JSON string", MabFileFolderProtectedItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MabFileFolderProtectedItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MabFileFolderProtectedItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MabFileFolderProtectedItem.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MabFileFolderProtectedItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MabFileFolderProtectedItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MabFileFolderProtectedItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MabFileFolderProtectedItem.class));

       return (TypeAdapter<T>) new TypeAdapter<MabFileFolderProtectedItem>() {
           @Override
           public void write(JsonWriter out, MabFileFolderProtectedItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MabFileFolderProtectedItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MabFileFolderProtectedItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MabFileFolderProtectedItem
   * @throws IOException if the JSON string is invalid with respect to MabFileFolderProtectedItem
   */
  public static MabFileFolderProtectedItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MabFileFolderProtectedItem.class);
  }

  /**
   * Convert an instance of MabFileFolderProtectedItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

