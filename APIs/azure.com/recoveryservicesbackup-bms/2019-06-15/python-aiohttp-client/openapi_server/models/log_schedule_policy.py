# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schedule_policy import SchedulePolicy
from openapi_server import util


class LogSchedulePolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedule_frequency_in_mins: int=None, schedule_policy_type: str=None):
        """LogSchedulePolicy - a model defined in OpenAPI

        :param schedule_frequency_in_mins: The schedule_frequency_in_mins of this LogSchedulePolicy.
        :param schedule_policy_type: The schedule_policy_type of this LogSchedulePolicy.
        """
        self.openapi_types = {
            'schedule_frequency_in_mins': int,
            'schedule_policy_type': str
        }

        self.attribute_map = {
            'schedule_frequency_in_mins': 'scheduleFrequencyInMins',
            'schedule_policy_type': 'schedulePolicyType'
        }

        self._schedule_frequency_in_mins = schedule_frequency_in_mins
        self._schedule_policy_type = schedule_policy_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogSchedulePolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogSchedulePolicy of this LogSchedulePolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedule_frequency_in_mins(self):
        """Gets the schedule_frequency_in_mins of this LogSchedulePolicy.

        Frequency of the log schedule operation of this policy in minutes.

        :return: The schedule_frequency_in_mins of this LogSchedulePolicy.
        :rtype: int
        """
        return self._schedule_frequency_in_mins

    @schedule_frequency_in_mins.setter
    def schedule_frequency_in_mins(self, schedule_frequency_in_mins):
        """Sets the schedule_frequency_in_mins of this LogSchedulePolicy.

        Frequency of the log schedule operation of this policy in minutes.

        :param schedule_frequency_in_mins: The schedule_frequency_in_mins of this LogSchedulePolicy.
        :type schedule_frequency_in_mins: int
        """

        self._schedule_frequency_in_mins = schedule_frequency_in_mins

    @property
    def schedule_policy_type(self):
        """Gets the schedule_policy_type of this LogSchedulePolicy.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :return: The schedule_policy_type of this LogSchedulePolicy.
        :rtype: str
        """
        return self._schedule_policy_type

    @schedule_policy_type.setter
    def schedule_policy_type(self, schedule_policy_type):
        """Sets the schedule_policy_type of this LogSchedulePolicy.

        This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.

        :param schedule_policy_type: The schedule_policy_type of this LogSchedulePolicy.
        :type schedule_policy_type: str
        """
        if schedule_policy_type is None:
            raise ValueError("Invalid value for `schedule_policy_type`, must not be `None`")

        self._schedule_policy_type = schedule_policy_type
