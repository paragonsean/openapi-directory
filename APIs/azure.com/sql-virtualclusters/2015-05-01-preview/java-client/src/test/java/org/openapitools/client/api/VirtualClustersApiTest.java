/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.VirtualCluster;
import org.openapitools.client.model.VirtualClusterListResult;
import org.openapitools.client.model.VirtualClusterUpdate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VirtualClustersApi
 */
@Disabled
public class VirtualClustersApiTest {

    private final VirtualClustersApi api = new VirtualClustersApi();

    /**
     * Deletes a virtual cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualClustersDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String virtualClusterName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.virtualClustersDelete(resourceGroupName, virtualClusterName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a virtual cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualClustersGetTest() throws ApiException {
        String resourceGroupName = null;
        String virtualClusterName = null;
        String subscriptionId = null;
        String apiVersion = null;
        VirtualCluster response = api.virtualClustersGet(resourceGroupName, virtualClusterName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of all virtualClusters in the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualClustersListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        VirtualClusterListResult response = api.virtualClustersList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of virtual clusters in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualClustersListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        VirtualClusterListResult response = api.virtualClustersListByResourceGroup(resourceGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates a virtual cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void virtualClustersUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String virtualClusterName = null;
        String subscriptionId = null;
        String apiVersion = null;
        VirtualClusterUpdate parameters = null;
        VirtualCluster response = api.virtualClustersUpdate(resourceGroupName, virtualClusterName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
