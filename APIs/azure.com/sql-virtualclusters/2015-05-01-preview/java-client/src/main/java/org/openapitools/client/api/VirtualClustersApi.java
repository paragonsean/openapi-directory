/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.VirtualCluster;
import org.openapitools.client.model.VirtualClusterListResult;
import org.openapitools.client.model.VirtualClusterUpdate;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VirtualClustersApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VirtualClustersApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VirtualClustersApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for virtualClustersDelete
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param virtualClusterName The name of the virtual cluster. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully deleted the virtual cluster. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Deleting the virtual cluster is in progress. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The specified virtual cluster does not exist. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualClustersDeleteCall(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/virtualClusters/{virtualClusterName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualClusterName" + "}", localVarApiClient.escapeString(virtualClusterName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualClustersDeleteValidateBeforeCall(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualClustersDelete(Async)");
        }

        // verify the required parameter 'virtualClusterName' is set
        if (virtualClusterName == null) {
            throw new ApiException("Missing the required parameter 'virtualClusterName' when calling virtualClustersDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualClustersDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualClustersDelete(Async)");
        }

        return virtualClustersDeleteCall(resourceGroupName, virtualClusterName, subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Deletes a virtual cluster.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param virtualClusterName The name of the virtual cluster. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully deleted the virtual cluster. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Deleting the virtual cluster is in progress. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The specified virtual cluster does not exist. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation. </td><td>  -  </td></tr>
     </table>
     */
    public void virtualClustersDelete(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion) throws ApiException {
        virtualClustersDeleteWithHttpInfo(resourceGroupName, virtualClusterName, subscriptionId, apiVersion);
    }

    /**
     * 
     * Deletes a virtual cluster.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param virtualClusterName The name of the virtual cluster. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully deleted the virtual cluster. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Deleting the virtual cluster is in progress. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The specified virtual cluster does not exist. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> virtualClustersDeleteWithHttpInfo(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = virtualClustersDeleteValidateBeforeCall(resourceGroupName, virtualClusterName, subscriptionId, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes a virtual cluster.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param virtualClusterName The name of the virtual cluster. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully deleted the virtual cluster. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Deleting the virtual cluster is in progress. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The specified virtual cluster does not exist. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 OperationIdNotFound - The operation with Id does not exist.   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 409 OperationCancelled - The operation has been cancelled by user.   * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription.   * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualClustersDeleteAsync(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualClustersDeleteValidateBeforeCall(resourceGroupName, virtualClusterName, subscriptionId, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualClustersGet
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param virtualClusterName The name of the virtual cluster. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the specified virtual cluster. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualClustersGetCall(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/virtualClusters/{virtualClusterName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualClusterName" + "}", localVarApiClient.escapeString(virtualClusterName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualClustersGetValidateBeforeCall(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualClustersGet(Async)");
        }

        // verify the required parameter 'virtualClusterName' is set
        if (virtualClusterName == null) {
            throw new ApiException("Missing the required parameter 'virtualClusterName' when calling virtualClustersGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualClustersGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualClustersGet(Async)");
        }

        return virtualClustersGetCall(resourceGroupName, virtualClusterName, subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Gets a virtual cluster.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param virtualClusterName The name of the virtual cluster. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @return VirtualCluster
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the specified virtual cluster. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription. </td><td>  -  </td></tr>
     </table>
     */
    public VirtualCluster virtualClustersGet(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion) throws ApiException {
        ApiResponse<VirtualCluster> localVarResp = virtualClustersGetWithHttpInfo(resourceGroupName, virtualClusterName, subscriptionId, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets a virtual cluster.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param virtualClusterName The name of the virtual cluster. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @return ApiResponse&lt;VirtualCluster&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the specified virtual cluster. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualCluster> virtualClustersGetWithHttpInfo(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = virtualClustersGetValidateBeforeCall(resourceGroupName, virtualClusterName, subscriptionId, apiVersion, null);
        Type localVarReturnType = new TypeToken<VirtualCluster>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets a virtual cluster.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param virtualClusterName The name of the virtual cluster. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the specified virtual cluster. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualClustersGetAsync(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion, final ApiCallback<VirtualCluster> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualClustersGetValidateBeforeCall(resourceGroupName, virtualClusterName, subscriptionId, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<VirtualCluster>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualClustersList
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of virtual clusters. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: *** </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualClustersListCall(String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/virtualClusters"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualClustersListValidateBeforeCall(String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualClustersList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualClustersList(Async)");
        }

        return virtualClustersListCall(subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Gets a list of all virtualClusters in the subscription.
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @return VirtualClusterListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of virtual clusters. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: *** </td><td>  -  </td></tr>
     </table>
     */
    public VirtualClusterListResult virtualClustersList(String subscriptionId, String apiVersion) throws ApiException {
        ApiResponse<VirtualClusterListResult> localVarResp = virtualClustersListWithHttpInfo(subscriptionId, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets a list of all virtualClusters in the subscription.
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @return ApiResponse&lt;VirtualClusterListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of virtual clusters. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: *** </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualClusterListResult> virtualClustersListWithHttpInfo(String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = virtualClustersListValidateBeforeCall(subscriptionId, apiVersion, null);
        Type localVarReturnType = new TypeToken<VirtualClusterListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets a list of all virtualClusters in the subscription.
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of virtual clusters. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: *** </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualClustersListAsync(String subscriptionId, String apiVersion, final ApiCallback<VirtualClusterListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualClustersListValidateBeforeCall(subscriptionId, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<VirtualClusterListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualClustersListByResourceGroup
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of virtual clusters. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualClustersListByResourceGroupCall(String resourceGroupName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/virtualClusters"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualClustersListByResourceGroupValidateBeforeCall(String resourceGroupName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualClustersListByResourceGroup(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualClustersListByResourceGroup(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualClustersListByResourceGroup(Async)");
        }

        return virtualClustersListByResourceGroupCall(resourceGroupName, subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Gets a list of virtual clusters in a resource group.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @return VirtualClusterListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of virtual clusters. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription. </td><td>  -  </td></tr>
     </table>
     */
    public VirtualClusterListResult virtualClustersListByResourceGroup(String resourceGroupName, String subscriptionId, String apiVersion) throws ApiException {
        ApiResponse<VirtualClusterListResult> localVarResp = virtualClustersListByResourceGroupWithHttpInfo(resourceGroupName, subscriptionId, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets a list of virtual clusters in a resource group.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @return ApiResponse&lt;VirtualClusterListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of virtual clusters. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualClusterListResult> virtualClustersListByResourceGroupWithHttpInfo(String resourceGroupName, String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = virtualClustersListByResourceGroupValidateBeforeCall(resourceGroupName, subscriptionId, apiVersion, null);
        Type localVarReturnType = new TypeToken<VirtualClusterListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets a list of virtual clusters in a resource group.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of virtual clusters. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualClustersListByResourceGroupAsync(String resourceGroupName, String subscriptionId, String apiVersion, final ApiCallback<VirtualClusterListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualClustersListByResourceGroupValidateBeforeCall(resourceGroupName, subscriptionId, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<VirtualClusterListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for virtualClustersUpdate
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param virtualClusterName The name of the virtual cluster. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param parameters The requested managed instance resource state. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully updated the virtual cluster. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualClustersUpdateCall(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion, VirtualClusterUpdate parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/virtualClusters/{virtualClusterName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "virtualClusterName" + "}", localVarApiClient.escapeString(virtualClusterName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call virtualClustersUpdateValidateBeforeCall(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion, VirtualClusterUpdate parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling virtualClustersUpdate(Async)");
        }

        // verify the required parameter 'virtualClusterName' is set
        if (virtualClusterName == null) {
            throw new ApiException("Missing the required parameter 'virtualClusterName' when calling virtualClustersUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling virtualClustersUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling virtualClustersUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling virtualClustersUpdate(Async)");
        }

        return virtualClustersUpdateCall(resourceGroupName, virtualClusterName, subscriptionId, apiVersion, parameters, _callback);

    }

    /**
     * 
     * Updates a virtual cluster.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param virtualClusterName The name of the virtual cluster. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param parameters The requested managed instance resource state. (required)
     * @return VirtualCluster
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully updated the virtual cluster. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription. </td><td>  -  </td></tr>
     </table>
     */
    public VirtualCluster virtualClustersUpdate(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion, VirtualClusterUpdate parameters) throws ApiException {
        ApiResponse<VirtualCluster> localVarResp = virtualClustersUpdateWithHttpInfo(resourceGroupName, virtualClusterName, subscriptionId, apiVersion, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates a virtual cluster.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param virtualClusterName The name of the virtual cluster. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param parameters The requested managed instance resource state. (required)
     * @return ApiResponse&lt;VirtualCluster&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully updated the virtual cluster. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VirtualCluster> virtualClustersUpdateWithHttpInfo(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion, VirtualClusterUpdate parameters) throws ApiException {
        okhttp3.Call localVarCall = virtualClustersUpdateValidateBeforeCall(resourceGroupName, virtualClusterName, subscriptionId, apiVersion, parameters, null);
        Type localVarReturnType = new TypeToken<VirtualCluster>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates a virtual cluster.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
     * @param virtualClusterName The name of the virtual cluster. (required)
     * @param subscriptionId The subscription ID that identifies an Azure subscription. (required)
     * @param apiVersion The API version to use for the request. (required)
     * @param parameters The requested managed instance resource state. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully updated the virtual cluster. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> *** Error Responses: ***   * 400 SubscriptionNotFound - The requested subscription was not found.   * 400 ManagementServiceFeatureDisabled - User attempted to use a feature which is disabled.   * 404 ResourceDoesNotExist - Resource with the name &#39;{0}&#39; does not exist. To continue, specify a valid resource name.   * 404 VirtualClusterNotInSubscriptionResourceGroup - specified virtual cluster does not exist in the specified resource group and subscription.   * 404 SubscriptionDoesNotHaveVirtualCluster - The requested virtual cluster was not found   * 404 ResourceNotFound - The requested resource was not found.   * 409 ConflictingVirtualClusterOperation - An operation is currently in progress for the virtual cluster.   * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call virtualClustersUpdateAsync(String resourceGroupName, String virtualClusterName, String subscriptionId, String apiVersion, VirtualClusterUpdate parameters, final ApiCallback<VirtualCluster> _callback) throws ApiException {

        okhttp3.Call localVarCall = virtualClustersUpdateValidateBeforeCall(resourceGroupName, virtualClusterName, subscriptionId, apiVersion, parameters, _callback);
        Type localVarReturnType = new TypeToken<VirtualCluster>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
