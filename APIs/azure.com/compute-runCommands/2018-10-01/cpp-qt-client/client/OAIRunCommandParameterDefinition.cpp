/**
 * RunCommandsClient
 * The Run Commands Client.
 *
 * The version of the OpenAPI document: 2018-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRunCommandParameterDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRunCommandParameterDefinition::OAIRunCommandParameterDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRunCommandParameterDefinition::OAIRunCommandParameterDefinition() {
    this->initializeModel();
}

OAIRunCommandParameterDefinition::~OAIRunCommandParameterDefinition() {}

void OAIRunCommandParameterDefinition::initializeModel() {

    m_default_value_isSet = false;
    m_default_value_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_required_isSet = false;
    m_required_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIRunCommandParameterDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRunCommandParameterDefinition::fromJsonObject(QJsonObject json) {

    m_default_value_isValid = ::OpenAPI::fromJsonValue(m_default_value, json[QString("defaultValue")]);
    m_default_value_isSet = !json[QString("defaultValue")].isNull() && m_default_value_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_required_isValid = ::OpenAPI::fromJsonValue(m_required, json[QString("required")]);
    m_required_isSet = !json[QString("required")].isNull() && m_required_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIRunCommandParameterDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRunCommandParameterDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_default_value_isSet) {
        obj.insert(QString("defaultValue"), ::OpenAPI::toJsonValue(m_default_value));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_required_isSet) {
        obj.insert(QString("required"), ::OpenAPI::toJsonValue(m_required));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIRunCommandParameterDefinition::getDefaultValue() const {
    return m_default_value;
}
void OAIRunCommandParameterDefinition::setDefaultValue(const QString &default_value) {
    m_default_value = default_value;
    m_default_value_isSet = true;
}

bool OAIRunCommandParameterDefinition::is_default_value_Set() const{
    return m_default_value_isSet;
}

bool OAIRunCommandParameterDefinition::is_default_value_Valid() const{
    return m_default_value_isValid;
}

QString OAIRunCommandParameterDefinition::getName() const {
    return m_name;
}
void OAIRunCommandParameterDefinition::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRunCommandParameterDefinition::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRunCommandParameterDefinition::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIRunCommandParameterDefinition::isRequired() const {
    return m_required;
}
void OAIRunCommandParameterDefinition::setRequired(const bool &required) {
    m_required = required;
    m_required_isSet = true;
}

bool OAIRunCommandParameterDefinition::is_required_Set() const{
    return m_required_isSet;
}

bool OAIRunCommandParameterDefinition::is_required_Valid() const{
    return m_required_isValid;
}

QString OAIRunCommandParameterDefinition::getType() const {
    return m_type;
}
void OAIRunCommandParameterDefinition::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIRunCommandParameterDefinition::is_type_Set() const{
    return m_type_isSet;
}

bool OAIRunCommandParameterDefinition::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIRunCommandParameterDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRunCommandParameterDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
