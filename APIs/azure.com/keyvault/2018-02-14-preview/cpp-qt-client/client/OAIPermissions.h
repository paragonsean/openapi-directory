/**
 * KeyVaultManagementClient
 * The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.
 *
 * The version of the OpenAPI document: 2018-02-14-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPermissions.h
 *
 * Permissions the identity has for keys, secrets, certificates and storage.
 */

#ifndef OAIPermissions_H
#define OAIPermissions_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPermissions : public OAIObject {
public:
    OAIPermissions();
    OAIPermissions(QString json);
    ~OAIPermissions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCertificates() const;
    void setCertificates(const QList<QString> &certificates);
    bool is_certificates_Set() const;
    bool is_certificates_Valid() const;

    QList<QString> getKeys() const;
    void setKeys(const QList<QString> &keys);
    bool is_keys_Set() const;
    bool is_keys_Valid() const;

    QList<QString> getSecrets() const;
    void setSecrets(const QList<QString> &secrets);
    bool is_secrets_Set() const;
    bool is_secrets_Valid() const;

    QList<QString> getStorage() const;
    void setStorage(const QList<QString> &storage);
    bool is_storage_Set() const;
    bool is_storage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_certificates;
    bool m_certificates_isSet;
    bool m_certificates_isValid;

    QList<QString> m_keys;
    bool m_keys_isSet;
    bool m_keys_isValid;

    QList<QString> m_secrets;
    bool m_secrets_isSet;
    bool m_secrets_isValid;

    QList<QString> m_storage;
    bool m_storage_isSet;
    bool m_storage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPermissions)

#endif // OAIPermissions_H
