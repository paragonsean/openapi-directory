/**
 * KeyVaultManagementClient
 * The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.
 *
 * The version of the OpenAPI document: 2018-02-14-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IPRule from './IPRule';
import VirtualNetworkRule from './VirtualNetworkRule';

/**
 * The NetworkRuleSet model module.
 * @module model/NetworkRuleSet
 * @version 2018-02-14-preview
 */
class NetworkRuleSet {
    /**
     * Constructs a new <code>NetworkRuleSet</code>.
     * A set of rules governing the network accessibility of a vault.
     * @alias module:model/NetworkRuleSet
     */
    constructor() { 
        
        NetworkRuleSet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkRuleSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkRuleSet} obj Optional instance to populate.
     * @return {module:model/NetworkRuleSet} The populated <code>NetworkRuleSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkRuleSet();

            if (data.hasOwnProperty('bypass')) {
                obj['bypass'] = ApiClient.convertToType(data['bypass'], 'String');
            }
            if (data.hasOwnProperty('defaultAction')) {
                obj['defaultAction'] = ApiClient.convertToType(data['defaultAction'], 'String');
            }
            if (data.hasOwnProperty('ipRules')) {
                obj['ipRules'] = ApiClient.convertToType(data['ipRules'], [IPRule]);
            }
            if (data.hasOwnProperty('virtualNetworkRules')) {
                obj['virtualNetworkRules'] = ApiClient.convertToType(data['virtualNetworkRules'], [VirtualNetworkRule]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkRuleSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkRuleSet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bypass'] && !(typeof data['bypass'] === 'string' || data['bypass'] instanceof String)) {
            throw new Error("Expected the field `bypass` to be a primitive type in the JSON string but got " + data['bypass']);
        }
        // ensure the json data is a string
        if (data['defaultAction'] && !(typeof data['defaultAction'] === 'string' || data['defaultAction'] instanceof String)) {
            throw new Error("Expected the field `defaultAction` to be a primitive type in the JSON string but got " + data['defaultAction']);
        }
        if (data['ipRules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ipRules'])) {
                throw new Error("Expected the field `ipRules` to be an array in the JSON data but got " + data['ipRules']);
            }
            // validate the optional field `ipRules` (array)
            for (const item of data['ipRules']) {
                IPRule.validateJSON(item);
            };
        }
        if (data['virtualNetworkRules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['virtualNetworkRules'])) {
                throw new Error("Expected the field `virtualNetworkRules` to be an array in the JSON data but got " + data['virtualNetworkRules']);
            }
            // validate the optional field `virtualNetworkRules` (array)
            for (const item of data['virtualNetworkRules']) {
                VirtualNetworkRule.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.
 * @member {module:model/NetworkRuleSet.BypassEnum} bypass
 */
NetworkRuleSet.prototype['bypass'] = undefined;

/**
 * The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
 * @member {module:model/NetworkRuleSet.DefaultActionEnum} defaultAction
 */
NetworkRuleSet.prototype['defaultAction'] = undefined;

/**
 * The list of IP address rules.
 * @member {Array.<module:model/IPRule>} ipRules
 */
NetworkRuleSet.prototype['ipRules'] = undefined;

/**
 * The list of virtual network rules.
 * @member {Array.<module:model/VirtualNetworkRule>} virtualNetworkRules
 */
NetworkRuleSet.prototype['virtualNetworkRules'] = undefined;





/**
 * Allowed values for the <code>bypass</code> property.
 * @enum {String}
 * @readonly
 */
NetworkRuleSet['BypassEnum'] = {

    /**
     * value: "AzureServices"
     * @const
     */
    "AzureServices": "AzureServices",

    /**
     * value: "None"
     * @const
     */
    "None": "None"
};


/**
 * Allowed values for the <code>defaultAction</code> property.
 * @enum {String}
 * @readonly
 */
NetworkRuleSet['DefaultActionEnum'] = {

    /**
     * value: "Allow"
     * @const
     */
    "Allow": "Allow",

    /**
     * value: "Deny"
     * @const
     */
    "Deny": "Deny"
};



export default NetworkRuleSet;

