/*
 * KeyVaultManagementClient
 * The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.PrivateEndpointConnection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PrivateEndpointConnectionsApi
 */
@Disabled
public class PrivateEndpointConnectionsApiTest {

    private final PrivateEndpointConnectionsApi api = new PrivateEndpointConnectionsApi();

    /**
     * Deletes the specified private endpoint connection associated with the key vault.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateEndpointConnectionsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String vaultName = null;
        String privateEndpointConnectionName = null;
        String apiVersion = null;
        PrivateEndpointConnection response = api.privateEndpointConnectionsDelete(subscriptionId, resourceGroupName, vaultName, privateEndpointConnectionName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the specified private endpoint connection associated with the key vault.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateEndpointConnectionsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String vaultName = null;
        String privateEndpointConnectionName = null;
        String apiVersion = null;
        PrivateEndpointConnection response = api.privateEndpointConnectionsGet(subscriptionId, resourceGroupName, vaultName, privateEndpointConnectionName, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates the specified private endpoint connection associated with the key vault.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void privateEndpointConnectionsPutTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String vaultName = null;
        String privateEndpointConnectionName = null;
        String apiVersion = null;
        PrivateEndpointConnection properties = null;
        PrivateEndpointConnection response = api.privateEndpointConnectionsPut(subscriptionId, resourceGroupName, vaultName, privateEndpointConnectionName, apiVersion, properties);
        // TODO: test validations
    }

}
