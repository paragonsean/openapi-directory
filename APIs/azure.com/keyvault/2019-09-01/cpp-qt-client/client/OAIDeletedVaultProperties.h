/**
 * KeyVaultManagementClient
 * The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.
 *
 * The version of the OpenAPI document: 2019-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeletedVaultProperties.h
 *
 * Properties of the deleted vault.
 */

#ifndef OAIDeletedVaultProperties_H
#define OAIDeletedVaultProperties_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeletedVaultProperties : public OAIObject {
public:
    OAIDeletedVaultProperties();
    OAIDeletedVaultProperties(QString json);
    ~OAIDeletedVaultProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getDeletionDate() const;
    void setDeletionDate(const QDateTime &deletion_date);
    bool is_deletion_date_Set() const;
    bool is_deletion_date_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QDateTime getScheduledPurgeDate() const;
    void setScheduledPurgeDate(const QDateTime &scheduled_purge_date);
    bool is_scheduled_purge_date_Set() const;
    bool is_scheduled_purge_date_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getVaultId() const;
    void setVaultId(const QString &vault_id);
    bool is_vault_id_Set() const;
    bool is_vault_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_deletion_date;
    bool m_deletion_date_isSet;
    bool m_deletion_date_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QDateTime m_scheduled_purge_date;
    bool m_scheduled_purge_date_isSet;
    bool m_scheduled_purge_date_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_vault_id;
    bool m_vault_id_isSet;
    bool m_vault_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeletedVaultProperties)

#endif // OAIDeletedVaultProperties_H
