/**
 * KeyVaultManagementClient
 * The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.
 *
 * The version of the OpenAPI document: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccessPolicyEntry from './AccessPolicyEntry';

/**
 * The VaultAccessPolicyProperties model module.
 * @module model/VaultAccessPolicyProperties
 * @version 2016-10-01
 */
class VaultAccessPolicyProperties {
    /**
     * Constructs a new <code>VaultAccessPolicyProperties</code>.
     * Properties of the vault access policy
     * @alias module:model/VaultAccessPolicyProperties
     * @param accessPolicies {Array.<module:model/AccessPolicyEntry>} An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.
     */
    constructor(accessPolicies) { 
        
        VaultAccessPolicyProperties.initialize(this, accessPolicies);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessPolicies) { 
        obj['accessPolicies'] = accessPolicies;
    }

    /**
     * Constructs a <code>VaultAccessPolicyProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VaultAccessPolicyProperties} obj Optional instance to populate.
     * @return {module:model/VaultAccessPolicyProperties} The populated <code>VaultAccessPolicyProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VaultAccessPolicyProperties();

            if (data.hasOwnProperty('accessPolicies')) {
                obj['accessPolicies'] = ApiClient.convertToType(data['accessPolicies'], [AccessPolicyEntry]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VaultAccessPolicyProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VaultAccessPolicyProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VaultAccessPolicyProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['accessPolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['accessPolicies'])) {
                throw new Error("Expected the field `accessPolicies` to be an array in the JSON data but got " + data['accessPolicies']);
            }
            // validate the optional field `accessPolicies` (array)
            for (const item of data['accessPolicies']) {
                AccessPolicyEntry.validateJSON(item);
            };
        }

        return true;
    }


}

VaultAccessPolicyProperties.RequiredProperties = ["accessPolicies"];

/**
 * An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.
 * @member {Array.<module:model/AccessPolicyEntry>} accessPolicies
 */
VaultAccessPolicyProperties.prototype['accessPolicies'] = undefined;






export default VaultAccessPolicyProperties;

