/**
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateOperation.h
 *
 * A certificate operation is returned in case of asynchronous requests.
 */

#ifndef OAICertificateOperation_H
#define OAICertificateOperation_H

#include <QJsonObject>

#include "OAIError.h"
#include "OAIIssuerParameters.h"
#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIError;
class OAIIssuerParameters;

class OAICertificateOperation : public OAIObject {
public:
    OAICertificateOperation();
    OAICertificateOperation(QString json);
    ~OAICertificateOperation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCancellationRequested() const;
    void setCancellationRequested(const bool &cancellation_requested);
    bool is_cancellation_requested_Set() const;
    bool is_cancellation_requested_Valid() const;

    QByteArray getCsr() const;
    void setCsr(const QByteArray &csr);
    bool is_csr_Set() const;
    bool is_csr_Valid() const;

    OAIError getError() const;
    void setError(const OAIError &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIIssuerParameters getIssuer() const;
    void setIssuer(const OAIIssuerParameters &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusDetails() const;
    void setStatusDetails(const QString &status_details);
    bool is_status_details_Set() const;
    bool is_status_details_Valid() const;

    QString getTarget() const;
    void setTarget(const QString &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_cancellation_requested;
    bool m_cancellation_requested_isSet;
    bool m_cancellation_requested_isValid;

    QByteArray m_csr;
    bool m_csr_isSet;
    bool m_csr_isValid;

    OAIError m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIIssuerParameters m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_details;
    bool m_status_details_isSet;
    bool m_status_details_isValid;

    QString m_target;
    bool m_target_isSet;
    bool m_target_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateOperation)

#endif // OAICertificateOperation_H
