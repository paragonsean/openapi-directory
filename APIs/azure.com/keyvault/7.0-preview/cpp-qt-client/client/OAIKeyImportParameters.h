/**
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeyImportParameters.h
 *
 * The key import parameters.
 */

#ifndef OAIKeyImportParameters_H
#define OAIKeyImportParameters_H

#include <QJsonObject>

#include "OAIJsonWebKey.h"
#include "OAIKeyAttributes.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyAttributes;
class OAIJsonWebKey;

class OAIKeyImportParameters : public OAIObject {
public:
    OAIKeyImportParameters();
    OAIKeyImportParameters(QString json);
    ~OAIKeyImportParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isHsm() const;
    void setHsm(const bool &hsm);
    bool is_hsm_Set() const;
    bool is_hsm_Valid() const;

    OAIKeyAttributes getAttributes() const;
    void setAttributes(const OAIKeyAttributes &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    OAIJsonWebKey getKey() const;
    void setKey(const OAIJsonWebKey &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_hsm;
    bool m_hsm_isSet;
    bool m_hsm_isValid;

    OAIKeyAttributes m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    OAIJsonWebKey m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeyImportParameters)

#endif // OAIKeyImportParameters_H
