/**
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeyAttributes.h
 *
 * The attributes of a key managed by the key vault service.
 */

#ifndef OAIKeyAttributes_H
#define OAIKeyAttributes_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKeyAttributes : public OAIObject {
public:
    OAIKeyAttributes();
    OAIKeyAttributes(QString json);
    ~OAIKeyAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRecoveryLevel() const;
    void setRecoveryLevel(const QString &recovery_level);
    bool is_recovery_level_Set() const;
    bool is_recovery_level_Valid() const;

    qint32 getCreated() const;
    void setCreated(const qint32 &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    qint32 getExp() const;
    void setExp(const qint32 &exp);
    bool is_exp_Set() const;
    bool is_exp_Valid() const;

    qint32 getNbf() const;
    void setNbf(const qint32 &nbf);
    bool is_nbf_Set() const;
    bool is_nbf_Valid() const;

    qint32 getUpdated() const;
    void setUpdated(const qint32 &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_recovery_level;
    bool m_recovery_level_isSet;
    bool m_recovery_level_isValid;

    qint32 m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    qint32 m_exp;
    bool m_exp_isSet;
    bool m_exp_isValid;

    qint32 m_nbf;
    bool m_nbf_isSet;
    bool m_nbf_isValid;

    qint32 m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeyAttributes)

#endif // OAIKeyAttributes_H
