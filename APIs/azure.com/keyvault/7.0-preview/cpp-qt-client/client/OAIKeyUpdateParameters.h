/**
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeyUpdateParameters.h
 *
 * The key update parameters.
 */

#ifndef OAIKeyUpdateParameters_H
#define OAIKeyUpdateParameters_H

#include <QJsonObject>

#include "OAIKeyAttributes.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyAttributes;

class OAIKeyUpdateParameters : public OAIObject {
public:
    OAIKeyUpdateParameters();
    OAIKeyUpdateParameters(QString json);
    ~OAIKeyUpdateParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIKeyAttributes getAttributes() const;
    void setAttributes(const OAIKeyAttributes &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QList<QString> getKeyOps() const;
    void setKeyOps(const QList<QString> &key_ops);
    bool is_key_ops_Set() const;
    bool is_key_ops_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIKeyAttributes m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QList<QString> m_key_ops;
    bool m_key_ops_isSet;
    bool m_key_ops_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeyUpdateParameters)

#endif // OAIKeyUpdateParameters_H
