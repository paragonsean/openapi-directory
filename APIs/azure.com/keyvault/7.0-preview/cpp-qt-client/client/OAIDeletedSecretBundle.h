/**
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeletedSecretBundle.h
 *
 * A Deleted Secret consisting of its previous id, attributes and its tags, as well as information on when it will be purged.
 */

#ifndef OAIDeletedSecretBundle_H
#define OAIDeletedSecretBundle_H

#include <QJsonObject>

#include "OAISecretAttributes.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISecretAttributes;

class OAIDeletedSecretBundle : public OAIObject {
public:
    OAIDeletedSecretBundle();
    OAIDeletedSecretBundle(QString json);
    ~OAIDeletedSecretBundle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDeletedDate() const;
    void setDeletedDate(const qint32 &deleted_date);
    bool is_deleted_date_Set() const;
    bool is_deleted_date_Valid() const;

    QString getRecoveryId() const;
    void setRecoveryId(const QString &recovery_id);
    bool is_recovery_id_Set() const;
    bool is_recovery_id_Valid() const;

    qint32 getScheduledPurgeDate() const;
    void setScheduledPurgeDate(const qint32 &scheduled_purge_date);
    bool is_scheduled_purge_date_Set() const;
    bool is_scheduled_purge_date_Valid() const;

    OAISecretAttributes getAttributes() const;
    void setAttributes(const OAISecretAttributes &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKid() const;
    void setKid(const QString &kid);
    bool is_kid_Set() const;
    bool is_kid_Valid() const;

    bool isManaged() const;
    void setManaged(const bool &managed);
    bool is_managed_Set() const;
    bool is_managed_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_deleted_date;
    bool m_deleted_date_isSet;
    bool m_deleted_date_isValid;

    QString m_recovery_id;
    bool m_recovery_id_isSet;
    bool m_recovery_id_isValid;

    qint32 m_scheduled_purge_date;
    bool m_scheduled_purge_date_isSet;
    bool m_scheduled_purge_date_isValid;

    OAISecretAttributes m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kid;
    bool m_kid_isSet;
    bool m_kid_isValid;

    bool m_managed;
    bool m_managed_isSet;
    bool m_managed_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeletedSecretBundle)

#endif // OAIDeletedSecretBundle_H
