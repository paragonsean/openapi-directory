/**
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIssuerParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIssuerParameters::OAIIssuerParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIssuerParameters::OAIIssuerParameters() {
    this->initializeModel();
}

OAIIssuerParameters::~OAIIssuerParameters() {}

void OAIIssuerParameters::initializeModel() {

    m_cert_transparency_isSet = false;
    m_cert_transparency_isValid = false;

    m_cty_isSet = false;
    m_cty_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIIssuerParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIssuerParameters::fromJsonObject(QJsonObject json) {

    m_cert_transparency_isValid = ::OpenAPI::fromJsonValue(m_cert_transparency, json[QString("cert_transparency")]);
    m_cert_transparency_isSet = !json[QString("cert_transparency")].isNull() && m_cert_transparency_isValid;

    m_cty_isValid = ::OpenAPI::fromJsonValue(m_cty, json[QString("cty")]);
    m_cty_isSet = !json[QString("cty")].isNull() && m_cty_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIIssuerParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIssuerParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_cert_transparency_isSet) {
        obj.insert(QString("cert_transparency"), ::OpenAPI::toJsonValue(m_cert_transparency));
    }
    if (m_cty_isSet) {
        obj.insert(QString("cty"), ::OpenAPI::toJsonValue(m_cty));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

bool OAIIssuerParameters::isCertTransparency() const {
    return m_cert_transparency;
}
void OAIIssuerParameters::setCertTransparency(const bool &cert_transparency) {
    m_cert_transparency = cert_transparency;
    m_cert_transparency_isSet = true;
}

bool OAIIssuerParameters::is_cert_transparency_Set() const{
    return m_cert_transparency_isSet;
}

bool OAIIssuerParameters::is_cert_transparency_Valid() const{
    return m_cert_transparency_isValid;
}

QString OAIIssuerParameters::getCty() const {
    return m_cty;
}
void OAIIssuerParameters::setCty(const QString &cty) {
    m_cty = cty;
    m_cty_isSet = true;
}

bool OAIIssuerParameters::is_cty_Set() const{
    return m_cty_isSet;
}

bool OAIIssuerParameters::is_cty_Valid() const{
    return m_cty_isValid;
}

QString OAIIssuerParameters::getName() const {
    return m_name;
}
void OAIIssuerParameters::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIIssuerParameters::is_name_Set() const{
    return m_name_isSet;
}

bool OAIIssuerParameters::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIIssuerParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cert_transparency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIssuerParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
