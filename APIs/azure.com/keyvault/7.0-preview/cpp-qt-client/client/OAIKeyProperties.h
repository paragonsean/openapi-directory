/**
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.0-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeyProperties.h
 *
 * Properties of the key pair backing a certificate.
 */

#ifndef OAIKeyProperties_H
#define OAIKeyProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKeyProperties : public OAIObject {
public:
    OAIKeyProperties();
    OAIKeyProperties(QString json);
    ~OAIKeyProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCrv() const;
    void setCrv(const QString &crv);
    bool is_crv_Set() const;
    bool is_crv_Valid() const;

    bool isExportable() const;
    void setExportable(const bool &exportable);
    bool is_exportable_Set() const;
    bool is_exportable_Valid() const;

    qint32 getKeySize() const;
    void setKeySize(const qint32 &key_size);
    bool is_key_size_Set() const;
    bool is_key_size_Valid() const;

    QString getKty() const;
    void setKty(const QString &kty);
    bool is_kty_Set() const;
    bool is_kty_Valid() const;

    bool isReuseKey() const;
    void setReuseKey(const bool &reuse_key);
    bool is_reuse_key_Set() const;
    bool is_reuse_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_crv;
    bool m_crv_isSet;
    bool m_crv_isValid;

    bool m_exportable;
    bool m_exportable_isSet;
    bool m_exportable_isValid;

    qint32 m_key_size;
    bool m_key_size_isSet;
    bool m_key_size_isValid;

    QString m_kty;
    bool m_kty_isSet;
    bool m_kty_isValid;

    bool m_reuse_key;
    bool m_reuse_key_isSet;
    bool m_reuse_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeyProperties)

#endif // OAIKeyProperties_H
