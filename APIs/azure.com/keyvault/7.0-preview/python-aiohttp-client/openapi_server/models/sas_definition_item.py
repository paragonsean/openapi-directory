# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sas_definition_attributes import SasDefinitionAttributes
from openapi_server import util


class SasDefinitionItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: SasDefinitionAttributes=None, id: str=None, sid: str=None, tags: Dict[str, str]=None):
        """SasDefinitionItem - a model defined in OpenAPI

        :param attributes: The attributes of this SasDefinitionItem.
        :param id: The id of this SasDefinitionItem.
        :param sid: The sid of this SasDefinitionItem.
        :param tags: The tags of this SasDefinitionItem.
        """
        self.openapi_types = {
            'attributes': SasDefinitionAttributes,
            'id': str,
            'sid': str,
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'id': 'id',
            'sid': 'sid',
            'tags': 'tags'
        }

        self._attributes = attributes
        self._id = id
        self._sid = sid
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SasDefinitionItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SasDefinitionItem of this SasDefinitionItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this SasDefinitionItem.


        :return: The attributes of this SasDefinitionItem.
        :rtype: SasDefinitionAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this SasDefinitionItem.


        :param attributes: The attributes of this SasDefinitionItem.
        :type attributes: SasDefinitionAttributes
        """

        self._attributes = attributes

    @property
    def id(self):
        """Gets the id of this SasDefinitionItem.

        The storage SAS identifier.

        :return: The id of this SasDefinitionItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SasDefinitionItem.

        The storage SAS identifier.

        :param id: The id of this SasDefinitionItem.
        :type id: str
        """

        self._id = id

    @property
    def sid(self):
        """Gets the sid of this SasDefinitionItem.

        The storage account SAS definition secret id.

        :return: The sid of this SasDefinitionItem.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this SasDefinitionItem.

        The storage account SAS definition secret id.

        :param sid: The sid of this SasDefinitionItem.
        :type sid: str
        """

        self._sid = sid

    @property
    def tags(self):
        """Gets the tags of this SasDefinitionItem.

        Application specific metadata in the form of key-value pairs.

        :return: The tags of this SasDefinitionItem.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this SasDefinitionItem.

        Application specific metadata in the form of key-value pairs.

        :param tags: The tags of this SasDefinitionItem.
        :type tags: Dict[str, str]
        """

        self._tags = tags
