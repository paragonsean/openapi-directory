# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IssuerParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cert_transparency: bool=None, cty: str=None, name: str=None):
        """IssuerParameters - a model defined in OpenAPI

        :param cert_transparency: The cert_transparency of this IssuerParameters.
        :param cty: The cty of this IssuerParameters.
        :param name: The name of this IssuerParameters.
        """
        self.openapi_types = {
            'cert_transparency': bool,
            'cty': str,
            'name': str
        }

        self.attribute_map = {
            'cert_transparency': 'cert_transparency',
            'cty': 'cty',
            'name': 'name'
        }

        self._cert_transparency = cert_transparency
        self._cty = cty
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IssuerParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IssuerParameters of this IssuerParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cert_transparency(self):
        """Gets the cert_transparency of this IssuerParameters.

        Indicates if the certificates generated under this policy should be published to certificate transparency logs.

        :return: The cert_transparency of this IssuerParameters.
        :rtype: bool
        """
        return self._cert_transparency

    @cert_transparency.setter
    def cert_transparency(self, cert_transparency):
        """Sets the cert_transparency of this IssuerParameters.

        Indicates if the certificates generated under this policy should be published to certificate transparency logs.

        :param cert_transparency: The cert_transparency of this IssuerParameters.
        :type cert_transparency: bool
        """

        self._cert_transparency = cert_transparency

    @property
    def cty(self):
        """Gets the cty of this IssuerParameters.

        Certificate type as supported by the provider (optional); for example 'OV-SSL', 'EV-SSL'

        :return: The cty of this IssuerParameters.
        :rtype: str
        """
        return self._cty

    @cty.setter
    def cty(self, cty):
        """Sets the cty of this IssuerParameters.

        Certificate type as supported by the provider (optional); for example 'OV-SSL', 'EV-SSL'

        :param cty: The cty of this IssuerParameters.
        :type cty: str
        """

        self._cty = cty

    @property
    def name(self):
        """Gets the name of this IssuerParameters.

        Name of the referenced issuer object or reserved names; for example, 'Self' or 'Unknown'.

        :return: The name of this IssuerParameters.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this IssuerParameters.

        Name of the referenced issuer object or reserved names; for example, 'Self' or 'Unknown'.

        :param name: The name of this IssuerParameters.
        :type name: str
        """

        self._name = name
