# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.storage_account_attributes import StorageAccountAttributes
from openapi_server import util


class StorageAccountItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: StorageAccountAttributes=None, id: str=None, resource_id: str=None, tags: Dict[str, str]=None):
        """StorageAccountItem - a model defined in OpenAPI

        :param attributes: The attributes of this StorageAccountItem.
        :param id: The id of this StorageAccountItem.
        :param resource_id: The resource_id of this StorageAccountItem.
        :param tags: The tags of this StorageAccountItem.
        """
        self.openapi_types = {
            'attributes': StorageAccountAttributes,
            'id': str,
            'resource_id': str,
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'id': 'id',
            'resource_id': 'resourceId',
            'tags': 'tags'
        }

        self._attributes = attributes
        self._id = id
        self._resource_id = resource_id
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageAccountItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorageAccountItem of this StorageAccountItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this StorageAccountItem.


        :return: The attributes of this StorageAccountItem.
        :rtype: StorageAccountAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this StorageAccountItem.


        :param attributes: The attributes of this StorageAccountItem.
        :type attributes: StorageAccountAttributes
        """

        self._attributes = attributes

    @property
    def id(self):
        """Gets the id of this StorageAccountItem.

        Storage identifier.

        :return: The id of this StorageAccountItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StorageAccountItem.

        Storage identifier.

        :param id: The id of this StorageAccountItem.
        :type id: str
        """

        self._id = id

    @property
    def resource_id(self):
        """Gets the resource_id of this StorageAccountItem.

        Storage account resource Id.

        :return: The resource_id of this StorageAccountItem.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this StorageAccountItem.

        Storage account resource Id.

        :param resource_id: The resource_id of this StorageAccountItem.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def tags(self):
        """Gets the tags of this StorageAccountItem.

        Application specific metadata in the form of key-value pairs.

        :return: The tags of this StorageAccountItem.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this StorageAccountItem.

        Application specific metadata in the form of key-value pairs.

        :param tags: The tags of this StorageAccountItem.
        :type tags: Dict[str, str]
        """

        self._tags = tags
