/**
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StorageAccountAttributes from './StorageAccountAttributes';

/**
 * The StorageAccountUpdateParameters model module.
 * @module model/StorageAccountUpdateParameters
 * @version 7.0
 */
class StorageAccountUpdateParameters {
    /**
     * Constructs a new <code>StorageAccountUpdateParameters</code>.
     * The storage account update parameters.
     * @alias module:model/StorageAccountUpdateParameters
     */
    constructor() { 
        
        StorageAccountUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorageAccountUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageAccountUpdateParameters} obj Optional instance to populate.
     * @return {module:model/StorageAccountUpdateParameters} The populated <code>StorageAccountUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageAccountUpdateParameters();

            if (data.hasOwnProperty('activeKeyName')) {
                obj['activeKeyName'] = ApiClient.convertToType(data['activeKeyName'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = StorageAccountAttributes.constructFromObject(data['attributes']);
            }
            if (data.hasOwnProperty('autoRegenerateKey')) {
                obj['autoRegenerateKey'] = ApiClient.convertToType(data['autoRegenerateKey'], 'Boolean');
            }
            if (data.hasOwnProperty('regenerationPeriod')) {
                obj['regenerationPeriod'] = ApiClient.convertToType(data['regenerationPeriod'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageAccountUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageAccountUpdateParameters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activeKeyName'] && !(typeof data['activeKeyName'] === 'string' || data['activeKeyName'] instanceof String)) {
            throw new Error("Expected the field `activeKeyName` to be a primitive type in the JSON string but got " + data['activeKeyName']);
        }
        // validate the optional field `attributes`
        if (data['attributes']) { // data not null
          StorageAccountAttributes.validateJSON(data['attributes']);
        }
        // ensure the json data is a string
        if (data['regenerationPeriod'] && !(typeof data['regenerationPeriod'] === 'string' || data['regenerationPeriod'] instanceof String)) {
            throw new Error("Expected the field `regenerationPeriod` to be a primitive type in the JSON string but got " + data['regenerationPeriod']);
        }

        return true;
    }


}



/**
 * The current active storage account key name.
 * @member {String} activeKeyName
 */
StorageAccountUpdateParameters.prototype['activeKeyName'] = undefined;

/**
 * @member {module:model/StorageAccountAttributes} attributes
 */
StorageAccountUpdateParameters.prototype['attributes'] = undefined;

/**
 * whether keyvault should manage the storage account for the user.
 * @member {Boolean} autoRegenerateKey
 */
StorageAccountUpdateParameters.prototype['autoRegenerateKey'] = undefined;

/**
 * The key regeneration time duration specified in ISO-8601 format.
 * @member {String} regenerationPeriod
 */
StorageAccountUpdateParameters.prototype['regenerationPeriod'] = undefined;

/**
 * Application specific metadata in the form of key-value pairs.
 * @member {Object.<String, String>} tags
 */
StorageAccountUpdateParameters.prototype['tags'] = undefined;






export default StorageAccountUpdateParameters;

