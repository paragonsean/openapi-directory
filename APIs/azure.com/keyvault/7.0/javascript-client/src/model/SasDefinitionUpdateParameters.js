/**
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SasDefinitionAttributes from './SasDefinitionAttributes';

/**
 * The SasDefinitionUpdateParameters model module.
 * @module model/SasDefinitionUpdateParameters
 * @version 7.0
 */
class SasDefinitionUpdateParameters {
    /**
     * Constructs a new <code>SasDefinitionUpdateParameters</code>.
     * The SAS definition update parameters.
     * @alias module:model/SasDefinitionUpdateParameters
     */
    constructor() { 
        
        SasDefinitionUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SasDefinitionUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SasDefinitionUpdateParameters} obj Optional instance to populate.
     * @return {module:model/SasDefinitionUpdateParameters} The populated <code>SasDefinitionUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SasDefinitionUpdateParameters();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = SasDefinitionAttributes.constructFromObject(data['attributes']);
            }
            if (data.hasOwnProperty('sasType')) {
                obj['sasType'] = ApiClient.convertToType(data['sasType'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('templateUri')) {
                obj['templateUri'] = ApiClient.convertToType(data['templateUri'], 'String');
            }
            if (data.hasOwnProperty('validityPeriod')) {
                obj['validityPeriod'] = ApiClient.convertToType(data['validityPeriod'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SasDefinitionUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SasDefinitionUpdateParameters</code>.
     */
    static validateJSON(data) {
        // validate the optional field `attributes`
        if (data['attributes']) { // data not null
          SasDefinitionAttributes.validateJSON(data['attributes']);
        }
        // ensure the json data is a string
        if (data['sasType'] && !(typeof data['sasType'] === 'string' || data['sasType'] instanceof String)) {
            throw new Error("Expected the field `sasType` to be a primitive type in the JSON string but got " + data['sasType']);
        }
        // ensure the json data is a string
        if (data['templateUri'] && !(typeof data['templateUri'] === 'string' || data['templateUri'] instanceof String)) {
            throw new Error("Expected the field `templateUri` to be a primitive type in the JSON string but got " + data['templateUri']);
        }
        // ensure the json data is a string
        if (data['validityPeriod'] && !(typeof data['validityPeriod'] === 'string' || data['validityPeriod'] instanceof String)) {
            throw new Error("Expected the field `validityPeriod` to be a primitive type in the JSON string but got " + data['validityPeriod']);
        }

        return true;
    }


}



/**
 * @member {module:model/SasDefinitionAttributes} attributes
 */
SasDefinitionUpdateParameters.prototype['attributes'] = undefined;

/**
 * The type of SAS token the SAS definition will create.
 * @member {module:model/SasDefinitionUpdateParameters.SasTypeEnum} sasType
 */
SasDefinitionUpdateParameters.prototype['sasType'] = undefined;

/**
 * Application specific metadata in the form of key-value pairs.
 * @member {Object.<String, String>} tags
 */
SasDefinitionUpdateParameters.prototype['tags'] = undefined;

/**
 * The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template.
 * @member {String} templateUri
 */
SasDefinitionUpdateParameters.prototype['templateUri'] = undefined;

/**
 * The validity period of SAS tokens created according to the SAS definition.
 * @member {String} validityPeriod
 */
SasDefinitionUpdateParameters.prototype['validityPeriod'] = undefined;





/**
 * Allowed values for the <code>sasType</code> property.
 * @enum {String}
 * @readonly
 */
SasDefinitionUpdateParameters['SasTypeEnum'] = {

    /**
     * value: "account"
     * @const
     */
    "account": "account",

    /**
     * value: "service"
     * @const
     */
    "service": "service"
};



export default SasDefinitionUpdateParameters;

