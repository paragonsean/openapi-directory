# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.administrator_details import AdministratorDetails
from openapi_server import util


class OrganizationDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_details: List[AdministratorDetails]=None, id: str=None):
        """OrganizationDetails - a model defined in OpenAPI

        :param admin_details: The admin_details of this OrganizationDetails.
        :param id: The id of this OrganizationDetails.
        """
        self.openapi_types = {
            'admin_details': List[AdministratorDetails],
            'id': str
        }

        self.attribute_map = {
            'admin_details': 'admin_details',
            'id': 'id'
        }

        self._admin_details = admin_details
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganizationDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrganizationDetails of this OrganizationDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_details(self):
        """Gets the admin_details of this OrganizationDetails.

        Details of the organization administrator.

        :return: The admin_details of this OrganizationDetails.
        :rtype: List[AdministratorDetails]
        """
        return self._admin_details

    @admin_details.setter
    def admin_details(self, admin_details):
        """Sets the admin_details of this OrganizationDetails.

        Details of the organization administrator.

        :param admin_details: The admin_details of this OrganizationDetails.
        :type admin_details: List[AdministratorDetails]
        """

        self._admin_details = admin_details

    @property
    def id(self):
        """Gets the id of this OrganizationDetails.

        Id of the organization.

        :return: The id of this OrganizationDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrganizationDetails.

        Id of the organization.

        :param id: The id of this OrganizationDetails.
        :type id: str
        """

        self._id = id
