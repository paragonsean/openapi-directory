# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.secret_attributes import SecretAttributes
from openapi_server import util


class SecretUpdateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: SecretAttributes=None, content_type: str=None, tags: Dict[str, str]=None):
        """SecretUpdateParameters - a model defined in OpenAPI

        :param attributes: The attributes of this SecretUpdateParameters.
        :param content_type: The content_type of this SecretUpdateParameters.
        :param tags: The tags of this SecretUpdateParameters.
        """
        self.openapi_types = {
            'attributes': SecretAttributes,
            'content_type': str,
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'content_type': 'contentType',
            'tags': 'tags'
        }

        self._attributes = attributes
        self._content_type = content_type
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecretUpdateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecretUpdateParameters of this SecretUpdateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this SecretUpdateParameters.


        :return: The attributes of this SecretUpdateParameters.
        :rtype: SecretAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this SecretUpdateParameters.


        :param attributes: The attributes of this SecretUpdateParameters.
        :type attributes: SecretAttributes
        """

        self._attributes = attributes

    @property
    def content_type(self):
        """Gets the content_type of this SecretUpdateParameters.

        Type of the secret value such as a password.

        :return: The content_type of this SecretUpdateParameters.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this SecretUpdateParameters.

        Type of the secret value such as a password.

        :param content_type: The content_type of this SecretUpdateParameters.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def tags(self):
        """Gets the tags of this SecretUpdateParameters.

        Application specific metadata in the form of key-value pairs.

        :return: The tags of this SecretUpdateParameters.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this SecretUpdateParameters.

        Application specific metadata in the form of key-value pairs.

        :param tags: The tags of this SecretUpdateParameters.
        :type tags: Dict[str, str]
        """

        self._tags = tags
