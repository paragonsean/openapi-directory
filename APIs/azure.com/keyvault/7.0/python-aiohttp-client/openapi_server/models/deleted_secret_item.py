# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.secret_attributes import SecretAttributes
from openapi_server import util


class DeletedSecretItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deleted_date: int=None, recovery_id: str=None, scheduled_purge_date: int=None, attributes: SecretAttributes=None, content_type: str=None, id: str=None, managed: bool=None, tags: Dict[str, str]=None):
        """DeletedSecretItem - a model defined in OpenAPI

        :param deleted_date: The deleted_date of this DeletedSecretItem.
        :param recovery_id: The recovery_id of this DeletedSecretItem.
        :param scheduled_purge_date: The scheduled_purge_date of this DeletedSecretItem.
        :param attributes: The attributes of this DeletedSecretItem.
        :param content_type: The content_type of this DeletedSecretItem.
        :param id: The id of this DeletedSecretItem.
        :param managed: The managed of this DeletedSecretItem.
        :param tags: The tags of this DeletedSecretItem.
        """
        self.openapi_types = {
            'deleted_date': int,
            'recovery_id': str,
            'scheduled_purge_date': int,
            'attributes': SecretAttributes,
            'content_type': str,
            'id': str,
            'managed': bool,
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'deleted_date': 'deletedDate',
            'recovery_id': 'recoveryId',
            'scheduled_purge_date': 'scheduledPurgeDate',
            'attributes': 'attributes',
            'content_type': 'contentType',
            'id': 'id',
            'managed': 'managed',
            'tags': 'tags'
        }

        self._deleted_date = deleted_date
        self._recovery_id = recovery_id
        self._scheduled_purge_date = scheduled_purge_date
        self._attributes = attributes
        self._content_type = content_type
        self._id = id
        self._managed = managed
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeletedSecretItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeletedSecretItem of this DeletedSecretItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deleted_date(self):
        """Gets the deleted_date of this DeletedSecretItem.

        The time when the secret was deleted, in UTC

        :return: The deleted_date of this DeletedSecretItem.
        :rtype: int
        """
        return self._deleted_date

    @deleted_date.setter
    def deleted_date(self, deleted_date):
        """Sets the deleted_date of this DeletedSecretItem.

        The time when the secret was deleted, in UTC

        :param deleted_date: The deleted_date of this DeletedSecretItem.
        :type deleted_date: int
        """

        self._deleted_date = deleted_date

    @property
    def recovery_id(self):
        """Gets the recovery_id of this DeletedSecretItem.

        The url of the recovery object, used to identify and recover the deleted secret.

        :return: The recovery_id of this DeletedSecretItem.
        :rtype: str
        """
        return self._recovery_id

    @recovery_id.setter
    def recovery_id(self, recovery_id):
        """Sets the recovery_id of this DeletedSecretItem.

        The url of the recovery object, used to identify and recover the deleted secret.

        :param recovery_id: The recovery_id of this DeletedSecretItem.
        :type recovery_id: str
        """

        self._recovery_id = recovery_id

    @property
    def scheduled_purge_date(self):
        """Gets the scheduled_purge_date of this DeletedSecretItem.

        The time when the secret is scheduled to be purged, in UTC

        :return: The scheduled_purge_date of this DeletedSecretItem.
        :rtype: int
        """
        return self._scheduled_purge_date

    @scheduled_purge_date.setter
    def scheduled_purge_date(self, scheduled_purge_date):
        """Sets the scheduled_purge_date of this DeletedSecretItem.

        The time when the secret is scheduled to be purged, in UTC

        :param scheduled_purge_date: The scheduled_purge_date of this DeletedSecretItem.
        :type scheduled_purge_date: int
        """

        self._scheduled_purge_date = scheduled_purge_date

    @property
    def attributes(self):
        """Gets the attributes of this DeletedSecretItem.


        :return: The attributes of this DeletedSecretItem.
        :rtype: SecretAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this DeletedSecretItem.


        :param attributes: The attributes of this DeletedSecretItem.
        :type attributes: SecretAttributes
        """

        self._attributes = attributes

    @property
    def content_type(self):
        """Gets the content_type of this DeletedSecretItem.

        Type of the secret value such as a password.

        :return: The content_type of this DeletedSecretItem.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this DeletedSecretItem.

        Type of the secret value such as a password.

        :param content_type: The content_type of this DeletedSecretItem.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def id(self):
        """Gets the id of this DeletedSecretItem.

        Secret identifier.

        :return: The id of this DeletedSecretItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DeletedSecretItem.

        Secret identifier.

        :param id: The id of this DeletedSecretItem.
        :type id: str
        """

        self._id = id

    @property
    def managed(self):
        """Gets the managed of this DeletedSecretItem.

        True if the secret's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true.

        :return: The managed of this DeletedSecretItem.
        :rtype: bool
        """
        return self._managed

    @managed.setter
    def managed(self, managed):
        """Sets the managed of this DeletedSecretItem.

        True if the secret's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true.

        :param managed: The managed of this DeletedSecretItem.
        :type managed: bool
        """

        self._managed = managed

    @property
    def tags(self):
        """Gets the tags of this DeletedSecretItem.

        Application specific metadata in the form of key-value pairs.

        :return: The tags of this DeletedSecretItem.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DeletedSecretItem.

        Application specific metadata in the form of key-value pairs.

        :param tags: The tags of this DeletedSecretItem.
        :type tags: Dict[str, str]
        """

        self._tags = tags
