# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sas_definition_attributes import SasDefinitionAttributes
from openapi_server import util


class DeletedSasDefinitionItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deleted_date: int=None, recovery_id: str=None, scheduled_purge_date: int=None, attributes: SasDefinitionAttributes=None, id: str=None, sid: str=None, tags: Dict[str, str]=None):
        """DeletedSasDefinitionItem - a model defined in OpenAPI

        :param deleted_date: The deleted_date of this DeletedSasDefinitionItem.
        :param recovery_id: The recovery_id of this DeletedSasDefinitionItem.
        :param scheduled_purge_date: The scheduled_purge_date of this DeletedSasDefinitionItem.
        :param attributes: The attributes of this DeletedSasDefinitionItem.
        :param id: The id of this DeletedSasDefinitionItem.
        :param sid: The sid of this DeletedSasDefinitionItem.
        :param tags: The tags of this DeletedSasDefinitionItem.
        """
        self.openapi_types = {
            'deleted_date': int,
            'recovery_id': str,
            'scheduled_purge_date': int,
            'attributes': SasDefinitionAttributes,
            'id': str,
            'sid': str,
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'deleted_date': 'deletedDate',
            'recovery_id': 'recoveryId',
            'scheduled_purge_date': 'scheduledPurgeDate',
            'attributes': 'attributes',
            'id': 'id',
            'sid': 'sid',
            'tags': 'tags'
        }

        self._deleted_date = deleted_date
        self._recovery_id = recovery_id
        self._scheduled_purge_date = scheduled_purge_date
        self._attributes = attributes
        self._id = id
        self._sid = sid
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeletedSasDefinitionItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeletedSasDefinitionItem of this DeletedSasDefinitionItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deleted_date(self):
        """Gets the deleted_date of this DeletedSasDefinitionItem.

        The time when the SAS definition was deleted, in UTC

        :return: The deleted_date of this DeletedSasDefinitionItem.
        :rtype: int
        """
        return self._deleted_date

    @deleted_date.setter
    def deleted_date(self, deleted_date):
        """Sets the deleted_date of this DeletedSasDefinitionItem.

        The time when the SAS definition was deleted, in UTC

        :param deleted_date: The deleted_date of this DeletedSasDefinitionItem.
        :type deleted_date: int
        """

        self._deleted_date = deleted_date

    @property
    def recovery_id(self):
        """Gets the recovery_id of this DeletedSasDefinitionItem.

        The url of the recovery object, used to identify and recover the deleted SAS definition.

        :return: The recovery_id of this DeletedSasDefinitionItem.
        :rtype: str
        """
        return self._recovery_id

    @recovery_id.setter
    def recovery_id(self, recovery_id):
        """Sets the recovery_id of this DeletedSasDefinitionItem.

        The url of the recovery object, used to identify and recover the deleted SAS definition.

        :param recovery_id: The recovery_id of this DeletedSasDefinitionItem.
        :type recovery_id: str
        """

        self._recovery_id = recovery_id

    @property
    def scheduled_purge_date(self):
        """Gets the scheduled_purge_date of this DeletedSasDefinitionItem.

        The time when the SAS definition is scheduled to be purged, in UTC

        :return: The scheduled_purge_date of this DeletedSasDefinitionItem.
        :rtype: int
        """
        return self._scheduled_purge_date

    @scheduled_purge_date.setter
    def scheduled_purge_date(self, scheduled_purge_date):
        """Sets the scheduled_purge_date of this DeletedSasDefinitionItem.

        The time when the SAS definition is scheduled to be purged, in UTC

        :param scheduled_purge_date: The scheduled_purge_date of this DeletedSasDefinitionItem.
        :type scheduled_purge_date: int
        """

        self._scheduled_purge_date = scheduled_purge_date

    @property
    def attributes(self):
        """Gets the attributes of this DeletedSasDefinitionItem.


        :return: The attributes of this DeletedSasDefinitionItem.
        :rtype: SasDefinitionAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this DeletedSasDefinitionItem.


        :param attributes: The attributes of this DeletedSasDefinitionItem.
        :type attributes: SasDefinitionAttributes
        """

        self._attributes = attributes

    @property
    def id(self):
        """Gets the id of this DeletedSasDefinitionItem.

        The storage SAS identifier.

        :return: The id of this DeletedSasDefinitionItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DeletedSasDefinitionItem.

        The storage SAS identifier.

        :param id: The id of this DeletedSasDefinitionItem.
        :type id: str
        """

        self._id = id

    @property
    def sid(self):
        """Gets the sid of this DeletedSasDefinitionItem.

        The storage account SAS definition secret id.

        :return: The sid of this DeletedSasDefinitionItem.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this DeletedSasDefinitionItem.

        The storage account SAS definition secret id.

        :param sid: The sid of this DeletedSasDefinitionItem.
        :type sid: str
        """

        self._sid = sid

    @property
    def tags(self):
        """Gets the tags of this DeletedSasDefinitionItem.

        Application specific metadata in the form of key-value pairs.

        :return: The tags of this DeletedSasDefinitionItem.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DeletedSasDefinitionItem.

        Application specific metadata in the form of key-value pairs.

        :param tags: The tags of this DeletedSasDefinitionItem.
        :type tags: Dict[str, str]
        """

        self._tags = tags
