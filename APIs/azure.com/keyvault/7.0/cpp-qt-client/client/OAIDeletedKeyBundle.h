/**
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeletedKeyBundle.h
 *
 * A DeletedKeyBundle consisting of a WebKey plus its Attributes and deletion info
 */

#ifndef OAIDeletedKeyBundle_H
#define OAIDeletedKeyBundle_H

#include <QJsonObject>

#include "OAIJsonWebKey.h"
#include "OAIKeyAttributes.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyAttributes;
class OAIJsonWebKey;

class OAIDeletedKeyBundle : public OAIObject {
public:
    OAIDeletedKeyBundle();
    OAIDeletedKeyBundle(QString json);
    ~OAIDeletedKeyBundle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDeletedDate() const;
    void setDeletedDate(const qint32 &deleted_date);
    bool is_deleted_date_Set() const;
    bool is_deleted_date_Valid() const;

    QString getRecoveryId() const;
    void setRecoveryId(const QString &recovery_id);
    bool is_recovery_id_Set() const;
    bool is_recovery_id_Valid() const;

    qint32 getScheduledPurgeDate() const;
    void setScheduledPurgeDate(const qint32 &scheduled_purge_date);
    bool is_scheduled_purge_date_Set() const;
    bool is_scheduled_purge_date_Valid() const;

    OAIKeyAttributes getAttributes() const;
    void setAttributes(const OAIKeyAttributes &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    OAIJsonWebKey getKey() const;
    void setKey(const OAIJsonWebKey &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    bool isManaged() const;
    void setManaged(const bool &managed);
    bool is_managed_Set() const;
    bool is_managed_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_deleted_date;
    bool m_deleted_date_isSet;
    bool m_deleted_date_isValid;

    QString m_recovery_id;
    bool m_recovery_id_isSet;
    bool m_recovery_id_isValid;

    qint32 m_scheduled_purge_date;
    bool m_scheduled_purge_date_isSet;
    bool m_scheduled_purge_date_isValid;

    OAIKeyAttributes m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    OAIJsonWebKey m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    bool m_managed;
    bool m_managed_isSet;
    bool m_managed_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeletedKeyBundle)

#endif // OAIDeletedKeyBundle_H
