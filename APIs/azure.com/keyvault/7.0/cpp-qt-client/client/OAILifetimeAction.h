/**
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILifetimeAction.h
 *
 * Action and its trigger that will be performed by Key Vault over the lifetime of a certificate.
 */

#ifndef OAILifetimeAction_H
#define OAILifetimeAction_H

#include <QJsonObject>

#include "OAIAction.h"
#include "OAITrigger.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAction;
class OAITrigger;

class OAILifetimeAction : public OAIObject {
public:
    OAILifetimeAction();
    OAILifetimeAction(QString json);
    ~OAILifetimeAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAction getAction() const;
    void setAction(const OAIAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    OAITrigger getTrigger() const;
    void setTrigger(const OAITrigger &trigger);
    bool is_trigger_Set() const;
    bool is_trigger_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    OAITrigger m_trigger;
    bool m_trigger_isSet;
    bool m_trigger_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILifetimeAction)

#endif // OAILifetimeAction_H
