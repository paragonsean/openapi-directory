/**
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateImportParameters.h
 *
 * The certificate import parameters.
 */

#ifndef OAICertificateImportParameters_H
#define OAICertificateImportParameters_H

#include <QJsonObject>

#include "OAICertificateAttributes.h"
#include "OAICertificatePolicy.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICertificateAttributes;
class OAICertificatePolicy;

class OAICertificateImportParameters : public OAIObject {
public:
    OAICertificateImportParameters();
    OAICertificateImportParameters(QString json);
    ~OAICertificateImportParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICertificateAttributes getAttributes() const;
    void setAttributes(const OAICertificateAttributes &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    OAICertificatePolicy getPolicy() const;
    void setPolicy(const OAICertificatePolicy &policy);
    bool is_policy_Set() const;
    bool is_policy_Valid() const;

    QString getPwd() const;
    void setPwd(const QString &pwd);
    bool is_pwd_Set() const;
    bool is_pwd_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICertificateAttributes m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    OAICertificatePolicy m_policy;
    bool m_policy_isSet;
    bool m_policy_isValid;

    QString m_pwd;
    bool m_pwd_isSet;
    bool m_pwd_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateImportParameters)

#endif // OAICertificateImportParameters_H
