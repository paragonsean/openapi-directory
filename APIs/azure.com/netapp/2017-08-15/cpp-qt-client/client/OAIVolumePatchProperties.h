/**
 * Microsoft NetApp
 * Microsoft NetApp Azure Resource Provider specification
 *
 * The version of the OpenAPI document: 2017-08-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVolumePatchProperties.h
 *
 * Patchable volume properties
 */

#ifndef OAIVolumePatchProperties_H
#define OAIVolumePatchProperties_H

#include <QJsonObject>

#include "OAIVolumePatchProperties_exportPolicy.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVolumePatchProperties_exportPolicy;

class OAIVolumePatchProperties : public OAIObject {
public:
    OAIVolumePatchProperties();
    OAIVolumePatchProperties(QString json);
    ~OAIVolumePatchProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVolumePatchProperties_exportPolicy getExportPolicy() const;
    void setExportPolicy(const OAIVolumePatchProperties_exportPolicy &export_policy);
    bool is_export_policy_Set() const;
    bool is_export_policy_Valid() const;

    QString getServiceLevel() const;
    void setServiceLevel(const QString &service_level);
    bool is_service_level_Set() const;
    bool is_service_level_Valid() const;

    qint64 getUsageThreshold() const;
    void setUsageThreshold(const qint64 &usage_threshold);
    bool is_usage_threshold_Set() const;
    bool is_usage_threshold_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVolumePatchProperties_exportPolicy m_export_policy;
    bool m_export_policy_isSet;
    bool m_export_policy_isValid;

    QString m_service_level;
    bool m_service_level_isSet;
    bool m_service_level_isValid;

    qint64 m_usage_threshold;
    bool m_usage_threshold_isSet;
    bool m_usage_threshold_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVolumePatchProperties)

#endif // OAIVolumePatchProperties_H
