# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class SnapshotProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_date: datetime=None, file_system_id: str=None, provisioning_state: str=None, snapshot_id: str=None):
        """SnapshotProperties - a model defined in OpenAPI

        :param creation_date: The creation_date of this SnapshotProperties.
        :param file_system_id: The file_system_id of this SnapshotProperties.
        :param provisioning_state: The provisioning_state of this SnapshotProperties.
        :param snapshot_id: The snapshot_id of this SnapshotProperties.
        """
        self.openapi_types = {
            'creation_date': datetime,
            'file_system_id': str,
            'provisioning_state': str,
            'snapshot_id': str
        }

        self.attribute_map = {
            'creation_date': 'creationDate',
            'file_system_id': 'fileSystemId',
            'provisioning_state': 'provisioningState',
            'snapshot_id': 'snapshotId'
        }

        self._creation_date = creation_date
        self._file_system_id = file_system_id
        self._provisioning_state = provisioning_state
        self._snapshot_id = snapshot_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SnapshotProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The snapshotProperties of this SnapshotProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date(self):
        """Gets the creation_date of this SnapshotProperties.

        The creation date of the snapshot

        :return: The creation_date of this SnapshotProperties.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this SnapshotProperties.

        The creation date of the snapshot

        :param creation_date: The creation_date of this SnapshotProperties.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def file_system_id(self):
        """Gets the file_system_id of this SnapshotProperties.

        UUID v4 used to identify the FileSystem

        :return: The file_system_id of this SnapshotProperties.
        :rtype: str
        """
        return self._file_system_id

    @file_system_id.setter
    def file_system_id(self, file_system_id):
        """Sets the file_system_id of this SnapshotProperties.

        UUID v4 used to identify the FileSystem

        :param file_system_id: The file_system_id of this SnapshotProperties.
        :type file_system_id: str
        """
        if file_system_id is None:
            raise ValueError("Invalid value for `file_system_id`, must not be `None`")
        if file_system_id is not None and len(file_system_id) > 36:
            raise ValueError("Invalid value for `file_system_id`, length must be less than or equal to `36`")
        if file_system_id is not None and len(file_system_id) < 36:
            raise ValueError("Invalid value for `file_system_id`, length must be greater than or equal to `36`")
        if file_system_id is not None and not re.search(r'^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$', file_system_id):
            raise ValueError("Invalid value for `file_system_id`, must be a follow pattern or equal to `/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/`")

        self._file_system_id = file_system_id

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this SnapshotProperties.

        Azure lifecycle management

        :return: The provisioning_state of this SnapshotProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this SnapshotProperties.

        Azure lifecycle management

        :param provisioning_state: The provisioning_state of this SnapshotProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def snapshot_id(self):
        """Gets the snapshot_id of this SnapshotProperties.

        UUID v4 used to identify the Snapshot

        :return: The snapshot_id of this SnapshotProperties.
        :rtype: str
        """
        return self._snapshot_id

    @snapshot_id.setter
    def snapshot_id(self, snapshot_id):
        """Sets the snapshot_id of this SnapshotProperties.

        UUID v4 used to identify the Snapshot

        :param snapshot_id: The snapshot_id of this SnapshotProperties.
        :type snapshot_id: str
        """
        if snapshot_id is not None and len(snapshot_id) > 36:
            raise ValueError("Invalid value for `snapshot_id`, length must be less than or equal to `36`")
        if snapshot_id is not None and len(snapshot_id) < 36:
            raise ValueError("Invalid value for `snapshot_id`, length must be greater than or equal to `36`")
        if snapshot_id is not None and not re.search(r'^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$', snapshot_id):
            raise ValueError("Invalid value for `snapshot_id`, must be a follow pattern or equal to `/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/`")

        self._snapshot_id = snapshot_id
