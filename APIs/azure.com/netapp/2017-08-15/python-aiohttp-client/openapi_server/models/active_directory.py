# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActiveDirectory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_directory_id: str=None, d_ns: str=None, domain: str=None, organizational_unit: str=None, password: str=None, s_mb_server_name: str=None, status: str=None, username: str=None):
        """ActiveDirectory - a model defined in OpenAPI

        :param active_directory_id: The active_directory_id of this ActiveDirectory.
        :param d_ns: The d_ns of this ActiveDirectory.
        :param domain: The domain of this ActiveDirectory.
        :param organizational_unit: The organizational_unit of this ActiveDirectory.
        :param password: The password of this ActiveDirectory.
        :param s_mb_server_name: The s_mb_server_name of this ActiveDirectory.
        :param status: The status of this ActiveDirectory.
        :param username: The username of this ActiveDirectory.
        """
        self.openapi_types = {
            'active_directory_id': str,
            'd_ns': str,
            'domain': str,
            'organizational_unit': str,
            'password': str,
            's_mb_server_name': str,
            'status': str,
            'username': str
        }

        self.attribute_map = {
            'active_directory_id': 'activeDirectoryId',
            'd_ns': 'dNS',
            'domain': 'domain',
            'organizational_unit': 'organizationalUnit',
            'password': 'password',
            's_mb_server_name': 'sMBServerName',
            'status': 'status',
            'username': 'username'
        }

        self._active_directory_id = active_directory_id
        self._d_ns = d_ns
        self._domain = domain
        self._organizational_unit = organizational_unit
        self._password = password
        self._s_mb_server_name = s_mb_server_name
        self._status = status
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActiveDirectory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The activeDirectory of this ActiveDirectory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_directory_id(self):
        """Gets the active_directory_id of this ActiveDirectory.

        Id of the Active Directory

        :return: The active_directory_id of this ActiveDirectory.
        :rtype: str
        """
        return self._active_directory_id

    @active_directory_id.setter
    def active_directory_id(self, active_directory_id):
        """Sets the active_directory_id of this ActiveDirectory.

        Id of the Active Directory

        :param active_directory_id: The active_directory_id of this ActiveDirectory.
        :type active_directory_id: str
        """

        self._active_directory_id = active_directory_id

    @property
    def d_ns(self):
        """Gets the d_ns of this ActiveDirectory.

        Comma separated list of DNS server IP addresses for the Active Directory domain

        :return: The d_ns of this ActiveDirectory.
        :rtype: str
        """
        return self._d_ns

    @d_ns.setter
    def d_ns(self, d_ns):
        """Sets the d_ns of this ActiveDirectory.

        Comma separated list of DNS server IP addresses for the Active Directory domain

        :param d_ns: The d_ns of this ActiveDirectory.
        :type d_ns: str
        """

        self._d_ns = d_ns

    @property
    def domain(self):
        """Gets the domain of this ActiveDirectory.

        Name of the Active Directory domain

        :return: The domain of this ActiveDirectory.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this ActiveDirectory.

        Name of the Active Directory domain

        :param domain: The domain of this ActiveDirectory.
        :type domain: str
        """

        self._domain = domain

    @property
    def organizational_unit(self):
        """Gets the organizational_unit of this ActiveDirectory.

        The Organizational Unit (OU) within the Windows Active Directory

        :return: The organizational_unit of this ActiveDirectory.
        :rtype: str
        """
        return self._organizational_unit

    @organizational_unit.setter
    def organizational_unit(self, organizational_unit):
        """Sets the organizational_unit of this ActiveDirectory.

        The Organizational Unit (OU) within the Windows Active Directory

        :param organizational_unit: The organizational_unit of this ActiveDirectory.
        :type organizational_unit: str
        """

        self._organizational_unit = organizational_unit

    @property
    def password(self):
        """Gets the password of this ActiveDirectory.

        Plain text password of Active Directory domain administrator

        :return: The password of this ActiveDirectory.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this ActiveDirectory.

        Plain text password of Active Directory domain administrator

        :param password: The password of this ActiveDirectory.
        :type password: str
        """

        self._password = password

    @property
    def s_mb_server_name(self):
        """Gets the s_mb_server_name of this ActiveDirectory.

        NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes

        :return: The s_mb_server_name of this ActiveDirectory.
        :rtype: str
        """
        return self._s_mb_server_name

    @s_mb_server_name.setter
    def s_mb_server_name(self, s_mb_server_name):
        """Sets the s_mb_server_name of this ActiveDirectory.

        NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes

        :param s_mb_server_name: The s_mb_server_name of this ActiveDirectory.
        :type s_mb_server_name: str
        """

        self._s_mb_server_name = s_mb_server_name

    @property
    def status(self):
        """Gets the status of this ActiveDirectory.

        Status of the Active Directory

        :return: The status of this ActiveDirectory.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ActiveDirectory.

        Status of the Active Directory

        :param status: The status of this ActiveDirectory.
        :type status: str
        """

        self._status = status

    @property
    def username(self):
        """Gets the username of this ActiveDirectory.

        Username of Active Directory domain administrator

        :return: The username of this ActiveDirectory.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this ActiveDirectory.

        Username of Active Directory domain administrator

        :param username: The username of this ActiveDirectory.
        :type username: str
        """

        self._username = username
