/**
 * Microsoft NetApp
 * Microsoft NetApp Azure Resource Provider specification
 *
 * The version of the OpenAPI document: 2017-08-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PoolProperties model module.
 * @module model/PoolProperties
 * @version 2017-08-15
 */
class PoolProperties {
    /**
     * Constructs a new <code>PoolProperties</code>.
     * Pool properties
     * @alias module:model/PoolProperties
     */
    constructor() { 
        
        PoolProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['serviceLevel'] = 'Premium';
        obj['size'] = 4398046511104;
    }

    /**
     * Constructs a <code>PoolProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PoolProperties} obj Optional instance to populate.
     * @return {module:model/PoolProperties} The populated <code>PoolProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PoolProperties();

            if (data.hasOwnProperty('poolId')) {
                obj['poolId'] = ApiClient.convertToType(data['poolId'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('serviceLevel')) {
                obj['serviceLevel'] = ApiClient.convertToType(data['serviceLevel'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PoolProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PoolProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['poolId'] && !(typeof data['poolId'] === 'string' || data['poolId'] instanceof String)) {
            throw new Error("Expected the field `poolId` to be a primitive type in the JSON string but got " + data['poolId']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['serviceLevel'] && !(typeof data['serviceLevel'] === 'string' || data['serviceLevel'] instanceof String)) {
            throw new Error("Expected the field `serviceLevel` to be a primitive type in the JSON string but got " + data['serviceLevel']);
        }

        return true;
    }


}



/**
 * UUID v4 used to identify the Pool
 * @member {String} poolId
 */
PoolProperties.prototype['poolId'] = undefined;

/**
 * Azure lifecycle management
 * @member {String} provisioningState
 */
PoolProperties.prototype['provisioningState'] = undefined;

/**
 * The service level of the file system
 * @member {module:model/PoolProperties.ServiceLevelEnum} serviceLevel
 * @default 'Premium'
 */
PoolProperties.prototype['serviceLevel'] = 'Premium';

/**
 * Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
 * @member {Number} size
 * @default 4398046511104
 */
PoolProperties.prototype['size'] = 4398046511104;





/**
 * Allowed values for the <code>serviceLevel</code> property.
 * @enum {String}
 * @readonly
 */
PoolProperties['ServiceLevelEnum'] = {

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard",

    /**
     * value: "Premium"
     * @const
     */
    "Premium": "Premium",

    /**
     * value: "Ultra"
     * @const
     */
    "Ultra": "Ultra"
};



export default PoolProperties;

