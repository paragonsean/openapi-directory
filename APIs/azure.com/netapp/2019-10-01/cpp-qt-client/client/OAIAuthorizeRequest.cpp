/**
 * Microsoft NetApp
 * Microsoft NetApp Azure Resource Provider specification
 *
 * The version of the OpenAPI document: 2019-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthorizeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthorizeRequest::OAIAuthorizeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthorizeRequest::OAIAuthorizeRequest() {
    this->initializeModel();
}

OAIAuthorizeRequest::~OAIAuthorizeRequest() {}

void OAIAuthorizeRequest::initializeModel() {

    m_remote_volume_resource_id_isSet = false;
    m_remote_volume_resource_id_isValid = false;
}

void OAIAuthorizeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthorizeRequest::fromJsonObject(QJsonObject json) {

    m_remote_volume_resource_id_isValid = ::OpenAPI::fromJsonValue(m_remote_volume_resource_id, json[QString("remoteVolumeResourceId")]);
    m_remote_volume_resource_id_isSet = !json[QString("remoteVolumeResourceId")].isNull() && m_remote_volume_resource_id_isValid;
}

QString OAIAuthorizeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthorizeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_remote_volume_resource_id_isSet) {
        obj.insert(QString("remoteVolumeResourceId"), ::OpenAPI::toJsonValue(m_remote_volume_resource_id));
    }
    return obj;
}

QString OAIAuthorizeRequest::getRemoteVolumeResourceId() const {
    return m_remote_volume_resource_id;
}
void OAIAuthorizeRequest::setRemoteVolumeResourceId(const QString &remote_volume_resource_id) {
    m_remote_volume_resource_id = remote_volume_resource_id;
    m_remote_volume_resource_id_isSet = true;
}

bool OAIAuthorizeRequest::is_remote_volume_resource_id_Set() const{
    return m_remote_volume_resource_id_isSet;
}

bool OAIAuthorizeRequest::is_remote_volume_resource_id_Valid() const{
    return m_remote_volume_resource_id_isValid;
}

bool OAIAuthorizeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_remote_volume_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthorizeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
