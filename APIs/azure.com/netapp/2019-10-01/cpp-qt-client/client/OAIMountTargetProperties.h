/**
 * Microsoft NetApp
 * Microsoft NetApp Azure Resource Provider specification
 *
 * The version of the OpenAPI document: 2019-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMountTargetProperties.h
 *
 * Mount target properties
 */

#ifndef OAIMountTargetProperties_H
#define OAIMountTargetProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMountTargetProperties : public OAIObject {
public:
    OAIMountTargetProperties();
    OAIMountTargetProperties(QString json);
    ~OAIMountTargetProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndIp() const;
    void setEndIp(const QString &end_ip);
    bool is_end_ip_Set() const;
    bool is_end_ip_Valid() const;

    QString getFileSystemId() const;
    void setFileSystemId(const QString &file_system_id);
    bool is_file_system_id_Set() const;
    bool is_file_system_id_Valid() const;

    QString getGateway() const;
    void setGateway(const QString &gateway);
    bool is_gateway_Set() const;
    bool is_gateway_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    QString getMountTargetId() const;
    void setMountTargetId(const QString &mount_target_id);
    bool is_mount_target_id_Set() const;
    bool is_mount_target_id_Valid() const;

    QString getNetmask() const;
    void setNetmask(const QString &netmask);
    bool is_netmask_Set() const;
    bool is_netmask_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getSmbServerFqdn() const;
    void setSmbServerFqdn(const QString &smb_server_fqdn);
    bool is_smb_server_fqdn_Set() const;
    bool is_smb_server_fqdn_Valid() const;

    QString getStartIp() const;
    void setStartIp(const QString &start_ip);
    bool is_start_ip_Set() const;
    bool is_start_ip_Valid() const;

    QString getSubnet() const;
    void setSubnet(const QString &subnet);
    bool is_subnet_Set() const;
    bool is_subnet_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_end_ip;
    bool m_end_ip_isSet;
    bool m_end_ip_isValid;

    QString m_file_system_id;
    bool m_file_system_id_isSet;
    bool m_file_system_id_isValid;

    QString m_gateway;
    bool m_gateway_isSet;
    bool m_gateway_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    QString m_mount_target_id;
    bool m_mount_target_id_isSet;
    bool m_mount_target_id_isValid;

    QString m_netmask;
    bool m_netmask_isSet;
    bool m_netmask_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_smb_server_fqdn;
    bool m_smb_server_fqdn_isSet;
    bool m_smb_server_fqdn_isValid;

    QString m_start_ip;
    bool m_start_ip_isSet;
    bool m_start_ip_isValid;

    QString m_subnet;
    bool m_subnet_isSet;
    bool m_subnet_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMountTargetProperties)

#endif // OAIMountTargetProperties_H
