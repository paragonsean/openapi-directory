/**
 * Microsoft NetApp
 * Microsoft NetApp Azure Resource Provider specification
 *
 * The version of the OpenAPI document: 2019-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataProtection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataProtection::OAIDataProtection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataProtection::OAIDataProtection() {
    this->initializeModel();
}

OAIDataProtection::~OAIDataProtection() {}

void OAIDataProtection::initializeModel() {

    m_replication_isSet = false;
    m_replication_isValid = false;
}

void OAIDataProtection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataProtection::fromJsonObject(QJsonObject json) {

    m_replication_isValid = ::OpenAPI::fromJsonValue(m_replication, json[QString("replication")]);
    m_replication_isSet = !json[QString("replication")].isNull() && m_replication_isValid;
}

QString OAIDataProtection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataProtection::asJsonObject() const {
    QJsonObject obj;
    if (m_replication.isSet()) {
        obj.insert(QString("replication"), ::OpenAPI::toJsonValue(m_replication));
    }
    return obj;
}

OAIReplicationObject OAIDataProtection::getReplication() const {
    return m_replication;
}
void OAIDataProtection::setReplication(const OAIReplicationObject &replication) {
    m_replication = replication;
    m_replication_isSet = true;
}

bool OAIDataProtection::is_replication_Set() const{
    return m_replication_isSet;
}

bool OAIDataProtection::is_replication_Valid() const{
    return m_replication_isValid;
}

bool OAIDataProtection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_replication.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataProtection::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
