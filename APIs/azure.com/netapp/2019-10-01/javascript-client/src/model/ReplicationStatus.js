/**
 * Microsoft NetApp
 * Microsoft NetApp Azure Resource Provider specification
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReplicationStatus model module.
 * @module model/ReplicationStatus
 * @version 2019-10-01
 */
class ReplicationStatus {
    /**
     * Constructs a new <code>ReplicationStatus</code>.
     * Replication status
     * @alias module:model/ReplicationStatus
     */
    constructor() { 
        
        ReplicationStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReplicationStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplicationStatus} obj Optional instance to populate.
     * @return {module:model/ReplicationStatus} The populated <code>ReplicationStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplicationStatus();

            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('healthy')) {
                obj['healthy'] = ApiClient.convertToType(data['healthy'], 'Boolean');
            }
            if (data.hasOwnProperty('mirrorState')) {
                obj['mirrorState'] = ApiClient.convertToType(data['mirrorState'], 'String');
            }
            if (data.hasOwnProperty('relationshipStatus')) {
                obj['relationshipStatus'] = ApiClient.convertToType(data['relationshipStatus'], 'String');
            }
            if (data.hasOwnProperty('totalProgress')) {
                obj['totalProgress'] = ApiClient.convertToType(data['totalProgress'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplicationStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplicationStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['errorMessage'] && !(typeof data['errorMessage'] === 'string' || data['errorMessage'] instanceof String)) {
            throw new Error("Expected the field `errorMessage` to be a primitive type in the JSON string but got " + data['errorMessage']);
        }
        // ensure the json data is a string
        if (data['mirrorState'] && !(typeof data['mirrorState'] === 'string' || data['mirrorState'] instanceof String)) {
            throw new Error("Expected the field `mirrorState` to be a primitive type in the JSON string but got " + data['mirrorState']);
        }
        // ensure the json data is a string
        if (data['relationshipStatus'] && !(typeof data['relationshipStatus'] === 'string' || data['relationshipStatus'] instanceof String)) {
            throw new Error("Expected the field `relationshipStatus` to be a primitive type in the JSON string but got " + data['relationshipStatus']);
        }
        // ensure the json data is a string
        if (data['totalProgress'] && !(typeof data['totalProgress'] === 'string' || data['totalProgress'] instanceof String)) {
            throw new Error("Expected the field `totalProgress` to be a primitive type in the JSON string but got " + data['totalProgress']);
        }

        return true;
    }


}



/**
 * Displays error message if the replication is in an error state
 * @member {String} errorMessage
 */
ReplicationStatus.prototype['errorMessage'] = undefined;

/**
 * Replication health check
 * @member {Boolean} healthy
 */
ReplicationStatus.prototype['healthy'] = undefined;

/**
 * The status of the replication
 * @member {module:model/ReplicationStatus.MirrorStateEnum} mirrorState
 */
ReplicationStatus.prototype['mirrorState'] = undefined;

/**
 * Status of the mirror relationship
 * @member {module:model/ReplicationStatus.RelationshipStatusEnum} relationshipStatus
 */
ReplicationStatus.prototype['relationshipStatus'] = undefined;

/**
 * The progress of the replication
 * @member {String} totalProgress
 */
ReplicationStatus.prototype['totalProgress'] = undefined;





/**
 * Allowed values for the <code>mirrorState</code> property.
 * @enum {String}
 * @readonly
 */
ReplicationStatus['MirrorStateEnum'] = {

    /**
     * value: "Uninitialized"
     * @const
     */
    "Uninitialized": "Uninitialized",

    /**
     * value: "Mirrored"
     * @const
     */
    "Mirrored": "Mirrored",

    /**
     * value: "Broken"
     * @const
     */
    "Broken": "Broken"
};


/**
 * Allowed values for the <code>relationshipStatus</code> property.
 * @enum {String}
 * @readonly
 */
ReplicationStatus['RelationshipStatusEnum'] = {

    /**
     * value: "Idle"
     * @const
     */
    "Idle": "Idle",

    /**
     * value: "Transferring"
     * @const
     */
    "Transferring": "Transferring"
};



export default ReplicationStatus;

