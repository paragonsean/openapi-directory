/**
 * Microsoft NetApp
 * Microsoft NetApp Azure Resource Provider specification
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceNameAvailabilityRequest model module.
 * @module model/ResourceNameAvailabilityRequest
 * @version 2019-10-01
 */
class ResourceNameAvailabilityRequest {
    /**
     * Constructs a new <code>ResourceNameAvailabilityRequest</code>.
     * Resource name availability request content.
     * @alias module:model/ResourceNameAvailabilityRequest
     * @param name {String} Resource name to verify.
     * @param resourceGroup {String} Resource group name.
     * @param type {module:model/ResourceNameAvailabilityRequest.TypeEnum} Resource type used for verification.
     */
    constructor(name, resourceGroup, type) { 
        
        ResourceNameAvailabilityRequest.initialize(this, name, resourceGroup, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, resourceGroup, type) { 
        obj['name'] = name;
        obj['resourceGroup'] = resourceGroup;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>ResourceNameAvailabilityRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceNameAvailabilityRequest} obj Optional instance to populate.
     * @return {module:model/ResourceNameAvailabilityRequest} The populated <code>ResourceNameAvailabilityRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceNameAvailabilityRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resourceGroup')) {
                obj['resourceGroup'] = ApiClient.convertToType(data['resourceGroup'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceNameAvailabilityRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceNameAvailabilityRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResourceNameAvailabilityRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['resourceGroup'] && !(typeof data['resourceGroup'] === 'string' || data['resourceGroup'] instanceof String)) {
            throw new Error("Expected the field `resourceGroup` to be a primitive type in the JSON string but got " + data['resourceGroup']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

ResourceNameAvailabilityRequest.RequiredProperties = ["name", "resourceGroup", "type"];

/**
 * Resource name to verify.
 * @member {String} name
 */
ResourceNameAvailabilityRequest.prototype['name'] = undefined;

/**
 * Resource group name.
 * @member {String} resourceGroup
 */
ResourceNameAvailabilityRequest.prototype['resourceGroup'] = undefined;

/**
 * Resource type used for verification.
 * @member {module:model/ResourceNameAvailabilityRequest.TypeEnum} type
 */
ResourceNameAvailabilityRequest.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ResourceNameAvailabilityRequest['TypeEnum'] = {

    /**
     * value: "Microsoft.NetApp/netAppAccounts"
     * @const
     */
    "netAppAccounts": "Microsoft.NetApp/netAppAccounts",

    /**
     * value: "Microsoft.NetApp/netAppAccounts/capacityPools"
     * @const
     */
    "netAppAccounts/capacityPools": "Microsoft.NetApp/netAppAccounts/capacityPools",

    /**
     * value: "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
     * @const
     */
    "netAppAccounts/capacityPools/volumes": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",

    /**
     * value: "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
     * @const
     */
    "netAppAccounts/capacityPools/volumes/snapshots": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
};



export default ResourceNameAvailabilityRequest;

