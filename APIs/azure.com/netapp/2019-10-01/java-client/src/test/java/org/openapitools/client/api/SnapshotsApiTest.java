/*
 * Microsoft NetApp
 * Microsoft NetApp Azure Resource Provider specification
 *
 * The version of the OpenAPI document: 2019-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Snapshot;
import org.openapitools.client.model.SnapshotPatch;
import org.openapitools.client.model.SnapshotsList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SnapshotsApi
 */
@Disabled
public class SnapshotsApiTest {

    private final SnapshotsApi api = new SnapshotsApi();

    /**
     * Create a snapshot
     *
     * Create the specified snapshot within the given volume
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String poolName = null;
        String volumeName = null;
        String snapshotName = null;
        String apiVersion = null;
        Snapshot body = null;
        Snapshot response = api.snapshotsCreate(subscriptionId, resourceGroupName, accountName, poolName, volumeName, snapshotName, apiVersion, body);
        // TODO: test validations
    }

    /**
     * Delete a snapshot
     *
     * Delete snapshot
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String poolName = null;
        String volumeName = null;
        String snapshotName = null;
        String apiVersion = null;
        api.snapshotsDelete(subscriptionId, resourceGroupName, accountName, poolName, volumeName, snapshotName, apiVersion);
        // TODO: test validations
    }

    /**
     * Describe a snapshot
     *
     * Get details of the specified snapshot
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String poolName = null;
        String volumeName = null;
        String snapshotName = null;
        String apiVersion = null;
        Snapshot response = api.snapshotsGet(subscriptionId, resourceGroupName, accountName, poolName, volumeName, snapshotName, apiVersion);
        // TODO: test validations
    }

    /**
     * Describe all snapshots
     *
     * List all snapshots associated with the volume
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String poolName = null;
        String volumeName = null;
        String apiVersion = null;
        SnapshotsList response = api.snapshotsList(subscriptionId, resourceGroupName, accountName, poolName, volumeName, apiVersion);
        // TODO: test validations
    }

    /**
     * Update a snapshot
     *
     * Patch a snapshot
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snapshotsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String poolName = null;
        String volumeName = null;
        String snapshotName = null;
        String apiVersion = null;
        SnapshotPatch body = null;
        Snapshot response = api.snapshotsUpdate(subscriptionId, resourceGroupName, accountName, poolName, volumeName, snapshotName, apiVersion, body);
        // TODO: test validations
    }

}
