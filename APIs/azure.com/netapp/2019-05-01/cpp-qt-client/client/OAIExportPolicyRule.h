/**
 * Microsoft NetApp
 * Microsoft NetApp Azure Resource Provider specification
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExportPolicyRule.h
 *
 * Volume Export Policy Rule
 */

#ifndef OAIExportPolicyRule_H
#define OAIExportPolicyRule_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExportPolicyRule : public OAIObject {
public:
    OAIExportPolicyRule();
    OAIExportPolicyRule(QString json);
    ~OAIExportPolicyRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAllowedClients() const;
    void setAllowedClients(const QString &allowed_clients);
    bool is_allowed_clients_Set() const;
    bool is_allowed_clients_Valid() const;

    bool isCifs() const;
    void setCifs(const bool &cifs);
    bool is_cifs_Set() const;
    bool is_cifs_Valid() const;

    bool isNfsv3() const;
    void setNfsv3(const bool &nfsv3);
    bool is_nfsv3_Set() const;
    bool is_nfsv3_Valid() const;

    bool isNfsv4() const;
    void setNfsv4(const bool &nfsv4);
    bool is_nfsv4_Set() const;
    bool is_nfsv4_Valid() const;

    qint32 getRuleIndex() const;
    void setRuleIndex(const qint32 &rule_index);
    bool is_rule_index_Set() const;
    bool is_rule_index_Valid() const;

    bool isUnixReadOnly() const;
    void setUnixReadOnly(const bool &unix_read_only);
    bool is_unix_read_only_Set() const;
    bool is_unix_read_only_Valid() const;

    bool isUnixReadWrite() const;
    void setUnixReadWrite(const bool &unix_read_write);
    bool is_unix_read_write_Set() const;
    bool is_unix_read_write_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_allowed_clients;
    bool m_allowed_clients_isSet;
    bool m_allowed_clients_isValid;

    bool m_cifs;
    bool m_cifs_isSet;
    bool m_cifs_isValid;

    bool m_nfsv3;
    bool m_nfsv3_isSet;
    bool m_nfsv3_isValid;

    bool m_nfsv4;
    bool m_nfsv4_isSet;
    bool m_nfsv4_isValid;

    qint32 m_rule_index;
    bool m_rule_index_isSet;
    bool m_rule_index_isValid;

    bool m_unix_read_only;
    bool m_unix_read_only_isSet;
    bool m_unix_read_only_isValid;

    bool m_unix_read_write;
    bool m_unix_read_write_isSet;
    bool m_unix_read_write_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExportPolicyRule)

#endif // OAIExportPolicyRule_H
