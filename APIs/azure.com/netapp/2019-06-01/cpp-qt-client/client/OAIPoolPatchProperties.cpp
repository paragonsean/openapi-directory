/**
 * Microsoft NetApp
 * Microsoft NetApp Azure Resource Provider specification
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPoolPatchProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPoolPatchProperties::OAIPoolPatchProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPoolPatchProperties::OAIPoolPatchProperties() {
    this->initializeModel();
}

OAIPoolPatchProperties::~OAIPoolPatchProperties() {}

void OAIPoolPatchProperties::initializeModel() {

    m_service_level_isSet = false;
    m_service_level_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAIPoolPatchProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPoolPatchProperties::fromJsonObject(QJsonObject json) {

    m_service_level_isValid = ::OpenAPI::fromJsonValue(m_service_level, json[QString("serviceLevel")]);
    m_service_level_isSet = !json[QString("serviceLevel")].isNull() && m_service_level_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAIPoolPatchProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPoolPatchProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_service_level_isSet) {
        obj.insert(QString("serviceLevel"), ::OpenAPI::toJsonValue(m_service_level));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

QString OAIPoolPatchProperties::getServiceLevel() const {
    return m_service_level;
}
void OAIPoolPatchProperties::setServiceLevel(const QString &service_level) {
    m_service_level = service_level;
    m_service_level_isSet = true;
}

bool OAIPoolPatchProperties::is_service_level_Set() const{
    return m_service_level_isSet;
}

bool OAIPoolPatchProperties::is_service_level_Valid() const{
    return m_service_level_isValid;
}

qint64 OAIPoolPatchProperties::getSize() const {
    return m_size;
}
void OAIPoolPatchProperties::setSize(const qint64 &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIPoolPatchProperties::is_size_Set() const{
    return m_size_isSet;
}

bool OAIPoolPatchProperties::is_size_Valid() const{
    return m_size_isValid;
}

bool OAIPoolPatchProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPoolPatchProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
