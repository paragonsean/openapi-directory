/**
 * Microsoft NetApp
 * Microsoft NetApp Azure Resource Provider specification
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVolumeRevert.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVolumeRevert::OAIVolumeRevert(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVolumeRevert::OAIVolumeRevert() {
    this->initializeModel();
}

OAIVolumeRevert::~OAIVolumeRevert() {}

void OAIVolumeRevert::initializeModel() {

    m_snapshot_id_isSet = false;
    m_snapshot_id_isValid = false;
}

void OAIVolumeRevert::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVolumeRevert::fromJsonObject(QJsonObject json) {

    m_snapshot_id_isValid = ::OpenAPI::fromJsonValue(m_snapshot_id, json[QString("snapshotId")]);
    m_snapshot_id_isSet = !json[QString("snapshotId")].isNull() && m_snapshot_id_isValid;
}

QString OAIVolumeRevert::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVolumeRevert::asJsonObject() const {
    QJsonObject obj;
    if (m_snapshot_id_isSet) {
        obj.insert(QString("snapshotId"), ::OpenAPI::toJsonValue(m_snapshot_id));
    }
    return obj;
}

QString OAIVolumeRevert::getSnapshotId() const {
    return m_snapshot_id;
}
void OAIVolumeRevert::setSnapshotId(const QString &snapshot_id) {
    m_snapshot_id = snapshot_id;
    m_snapshot_id_isSet = true;
}

bool OAIVolumeRevert::is_snapshot_id_Set() const{
    return m_snapshot_id_isSet;
}

bool OAIVolumeRevert::is_snapshot_id_Valid() const{
    return m_snapshot_id_isValid;
}

bool OAIVolumeRevert::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_snapshot_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVolumeRevert::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
