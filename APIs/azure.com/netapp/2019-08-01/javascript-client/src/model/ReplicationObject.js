/**
 * Microsoft NetApp
 * Microsoft NetApp Azure Resource Provider specification
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReplicationObject model module.
 * @module model/ReplicationObject
 * @version 2019-08-01
 */
class ReplicationObject {
    /**
     * Constructs a new <code>ReplicationObject</code>.
     * Replication properties
     * @alias module:model/ReplicationObject
     * @param endpointType {String} Indicates whether the local volume is the source or destination for the Volume Replication
     * @param remoteVolumeResourceId {String} The resource ID of the remote volume.
     * @param replicationSchedule {String} Schedule
     */
    constructor(endpointType, remoteVolumeResourceId, replicationSchedule) { 
        
        ReplicationObject.initialize(this, endpointType, remoteVolumeResourceId, replicationSchedule);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endpointType, remoteVolumeResourceId, replicationSchedule) { 
        obj['endpointType'] = endpointType;
        obj['remoteVolumeResourceId'] = remoteVolumeResourceId;
        obj['replicationSchedule'] = replicationSchedule;
    }

    /**
     * Constructs a <code>ReplicationObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplicationObject} obj Optional instance to populate.
     * @return {module:model/ReplicationObject} The populated <code>ReplicationObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplicationObject();

            if (data.hasOwnProperty('endpointType')) {
                obj['endpointType'] = ApiClient.convertToType(data['endpointType'], 'String');
            }
            if (data.hasOwnProperty('remoteVolumeResourceId')) {
                obj['remoteVolumeResourceId'] = ApiClient.convertToType(data['remoteVolumeResourceId'], 'String');
            }
            if (data.hasOwnProperty('replicationId')) {
                obj['replicationId'] = ApiClient.convertToType(data['replicationId'], 'String');
            }
            if (data.hasOwnProperty('replicationSchedule')) {
                obj['replicationSchedule'] = ApiClient.convertToType(data['replicationSchedule'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplicationObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplicationObject</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReplicationObject.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['endpointType'] && !(typeof data['endpointType'] === 'string' || data['endpointType'] instanceof String)) {
            throw new Error("Expected the field `endpointType` to be a primitive type in the JSON string but got " + data['endpointType']);
        }
        // ensure the json data is a string
        if (data['remoteVolumeResourceId'] && !(typeof data['remoteVolumeResourceId'] === 'string' || data['remoteVolumeResourceId'] instanceof String)) {
            throw new Error("Expected the field `remoteVolumeResourceId` to be a primitive type in the JSON string but got " + data['remoteVolumeResourceId']);
        }
        // ensure the json data is a string
        if (data['replicationId'] && !(typeof data['replicationId'] === 'string' || data['replicationId'] instanceof String)) {
            throw new Error("Expected the field `replicationId` to be a primitive type in the JSON string but got " + data['replicationId']);
        }
        // ensure the json data is a string
        if (data['replicationSchedule'] && !(typeof data['replicationSchedule'] === 'string' || data['replicationSchedule'] instanceof String)) {
            throw new Error("Expected the field `replicationSchedule` to be a primitive type in the JSON string but got " + data['replicationSchedule']);
        }

        return true;
    }


}

ReplicationObject.RequiredProperties = ["endpointType", "remoteVolumeResourceId", "replicationSchedule"];

/**
 * Indicates whether the local volume is the source or destination for the Volume Replication
 * @member {String} endpointType
 */
ReplicationObject.prototype['endpointType'] = undefined;

/**
 * The resource ID of the remote volume.
 * @member {String} remoteVolumeResourceId
 */
ReplicationObject.prototype['remoteVolumeResourceId'] = undefined;

/**
 * Id
 * @member {String} replicationId
 */
ReplicationObject.prototype['replicationId'] = undefined;

/**
 * Schedule
 * @member {String} replicationSchedule
 */
ReplicationObject.prototype['replicationSchedule'] = undefined;






export default ReplicationObject;

