/**
 * QnAMaker Client
 * An API for QnAMaker Service
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateQuestionsDTO model module.
 * @module model/UpdateQuestionsDTO
 * @version 4.0
 */
class UpdateQuestionsDTO {
    /**
     * Constructs a new <code>UpdateQuestionsDTO</code>.
     * PATCH Body schema for Update Kb which contains list of questions to be added and deleted
     * @alias module:model/UpdateQuestionsDTO
     */
    constructor() { 
        
        UpdateQuestionsDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateQuestionsDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateQuestionsDTO} obj Optional instance to populate.
     * @return {module:model/UpdateQuestionsDTO} The populated <code>UpdateQuestionsDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateQuestionsDTO();

            if (data.hasOwnProperty('add')) {
                obj['add'] = ApiClient.convertToType(data['add'], ['String']);
            }
            if (data.hasOwnProperty('delete')) {
                obj['delete'] = ApiClient.convertToType(data['delete'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateQuestionsDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateQuestionsDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['add'])) {
            throw new Error("Expected the field `add` to be an array in the JSON data but got " + data['add']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['delete'])) {
            throw new Error("Expected the field `delete` to be an array in the JSON data but got " + data['delete']);
        }

        return true;
    }


}



/**
 * List of questions to be added
 * @member {Array.<String>} add
 */
UpdateQuestionsDTO.prototype['add'] = undefined;

/**
 * List of questions to be deleted.
 * @member {Array.<String>} delete
 */
UpdateQuestionsDTO.prototype['delete'] = undefined;






export default UpdateQuestionsDTO;

