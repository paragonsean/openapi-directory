/**
 * QnAMaker Client
 * An API for QnAMaker Service
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateQnaDTO from './UpdateQnaDTO';

/**
 * The UpdateKbContentsDTO model module.
 * @module model/UpdateKbContentsDTO
 * @version 4.0
 */
class UpdateKbContentsDTO {
    /**
     * Constructs a new <code>UpdateKbContentsDTO</code>.
     * PATCH body schema for Update operation in Update Kb
     * @alias module:model/UpdateKbContentsDTO
     */
    constructor() { 
        
        UpdateKbContentsDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateKbContentsDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateKbContentsDTO} obj Optional instance to populate.
     * @return {module:model/UpdateKbContentsDTO} The populated <code>UpdateKbContentsDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateKbContentsDTO();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('qnaList')) {
                obj['qnaList'] = ApiClient.convertToType(data['qnaList'], [UpdateQnaDTO]);
            }
            if (data.hasOwnProperty('urls')) {
                obj['urls'] = ApiClient.convertToType(data['urls'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateKbContentsDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateKbContentsDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['qnaList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['qnaList'])) {
                throw new Error("Expected the field `qnaList` to be an array in the JSON data but got " + data['qnaList']);
            }
            // validate the optional field `qnaList` (array)
            for (const item of data['qnaList']) {
                UpdateQnaDTO.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['urls'])) {
            throw new Error("Expected the field `urls` to be an array in the JSON data but got " + data['urls']);
        }

        return true;
    }


}



/**
 * Friendly name for the knowledgebase.
 * @member {String} name
 */
UpdateKbContentsDTO.prototype['name'] = undefined;

/**
 * List of Q-A (UpdateQnaDTO) to be added to the knowledgebase.
 * @member {Array.<module:model/UpdateQnaDTO>} qnaList
 */
UpdateKbContentsDTO.prototype['qnaList'] = undefined;

/**
 * List of existing URLs to be refreshed. The content will be extracted again and re-indexed.
 * @member {Array.<String>} urls
 */
UpdateKbContentsDTO.prototype['urls'] = undefined;






export default UpdateKbContentsDTO;

