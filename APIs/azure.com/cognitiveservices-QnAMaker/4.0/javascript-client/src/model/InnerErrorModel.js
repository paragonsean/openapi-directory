/**
 * QnAMaker Client
 * An API for QnAMaker Service
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InnerErrorModel model module.
 * @module model/InnerErrorModel
 * @version 4.0
 */
class InnerErrorModel {
    /**
     * Constructs a new <code>InnerErrorModel</code>.
     * An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
     * @alias module:model/InnerErrorModel
     */
    constructor() { 
        
        InnerErrorModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InnerErrorModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InnerErrorModel} obj Optional instance to populate.
     * @return {module:model/InnerErrorModel} The populated <code>InnerErrorModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InnerErrorModel();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('innerError')) {
                obj['innerError'] = InnerErrorModel.constructFromObject(data['innerError']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InnerErrorModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InnerErrorModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // validate the optional field `innerError`
        if (data['innerError']) { // data not null
          InnerErrorModel.validateJSON(data['innerError']);
        }

        return true;
    }


}



/**
 * A more specific error code than was provided by the containing error.
 * @member {String} code
 */
InnerErrorModel.prototype['code'] = undefined;

/**
 * @member {module:model/InnerErrorModel} innerError
 */
InnerErrorModel.prototype['innerError'] = undefined;






export default InnerErrorModel;

