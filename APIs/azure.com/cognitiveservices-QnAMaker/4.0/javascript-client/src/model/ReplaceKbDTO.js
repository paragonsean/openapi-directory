/**
 * QnAMaker Client
 * An API for QnAMaker Service
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QnADTO from './QnADTO';

/**
 * The ReplaceKbDTO model module.
 * @module model/ReplaceKbDTO
 * @version 4.0
 */
class ReplaceKbDTO {
    /**
     * Constructs a new <code>ReplaceKbDTO</code>.
     * Post body schema for Replace KB operation.
     * @alias module:model/ReplaceKbDTO
     * @param qnAList {Array.<module:model/QnADTO>} List of Q-A (QnADTO) to be added to the knowledgebase. Q-A Ids are assigned by the service and should be omitted.
     */
    constructor(qnAList) { 
        
        ReplaceKbDTO.initialize(this, qnAList);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, qnAList) { 
        obj['qnAList'] = qnAList;
    }

    /**
     * Constructs a <code>ReplaceKbDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplaceKbDTO} obj Optional instance to populate.
     * @return {module:model/ReplaceKbDTO} The populated <code>ReplaceKbDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplaceKbDTO();

            if (data.hasOwnProperty('qnAList')) {
                obj['qnAList'] = ApiClient.convertToType(data['qnAList'], [QnADTO]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplaceKbDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplaceKbDTO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReplaceKbDTO.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['qnAList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['qnAList'])) {
                throw new Error("Expected the field `qnAList` to be an array in the JSON data but got " + data['qnAList']);
            }
            // validate the optional field `qnAList` (array)
            for (const item of data['qnAList']) {
                QnADTO.validateJSON(item);
            };
        }

        return true;
    }


}

ReplaceKbDTO.RequiredProperties = ["qnAList"];

/**
 * List of Q-A (QnADTO) to be added to the knowledgebase. Q-A Ids are assigned by the service and should be omitted.
 * @member {Array.<module:model/QnADTO>} qnAList
 */
ReplaceKbDTO.prototype['qnAList'] = undefined;






export default ReplaceKbDTO;

