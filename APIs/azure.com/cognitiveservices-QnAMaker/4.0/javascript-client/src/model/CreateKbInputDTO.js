/**
 * QnAMaker Client
 * An API for QnAMaker Service
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileDTO from './FileDTO';
import QnADTO from './QnADTO';

/**
 * The CreateKbInputDTO model module.
 * @module model/CreateKbInputDTO
 * @version 4.0
 */
class CreateKbInputDTO {
    /**
     * Constructs a new <code>CreateKbInputDTO</code>.
     * Input to create KB.
     * @alias module:model/CreateKbInputDTO
     */
    constructor() { 
        
        CreateKbInputDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateKbInputDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateKbInputDTO} obj Optional instance to populate.
     * @return {module:model/CreateKbInputDTO} The populated <code>CreateKbInputDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateKbInputDTO();

            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], [FileDTO]);
            }
            if (data.hasOwnProperty('qnaList')) {
                obj['qnaList'] = ApiClient.convertToType(data['qnaList'], [QnADTO]);
            }
            if (data.hasOwnProperty('urls')) {
                obj['urls'] = ApiClient.convertToType(data['urls'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateKbInputDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateKbInputDTO</code>.
     */
    static validateJSON(data) {
        if (data['files']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['files'])) {
                throw new Error("Expected the field `files` to be an array in the JSON data but got " + data['files']);
            }
            // validate the optional field `files` (array)
            for (const item of data['files']) {
                FileDTO.validateJSON(item);
            };
        }
        if (data['qnaList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['qnaList'])) {
                throw new Error("Expected the field `qnaList` to be an array in the JSON data but got " + data['qnaList']);
            }
            // validate the optional field `qnaList` (array)
            for (const item of data['qnaList']) {
                QnADTO.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['urls'])) {
            throw new Error("Expected the field `urls` to be an array in the JSON data but got " + data['urls']);
        }

        return true;
    }


}



/**
 * List of files to be added to knowledgebase.
 * @member {Array.<module:model/FileDTO>} files
 */
CreateKbInputDTO.prototype['files'] = undefined;

/**
 * List of QNA to be added to the index. Ids are generated by the service and should be omitted.
 * @member {Array.<module:model/QnADTO>} qnaList
 */
CreateKbInputDTO.prototype['qnaList'] = undefined;

/**
 * List of URLs to be added to knowledgebase.
 * @member {Array.<String>} urls
 */
CreateKbInputDTO.prototype['urls'] = undefined;






export default CreateKbInputDTO;

