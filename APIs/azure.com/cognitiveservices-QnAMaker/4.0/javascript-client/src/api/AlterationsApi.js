/**
 * QnAMaker Client
 * An API for QnAMaker Service
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import WordAlterationsDTO from '../model/WordAlterationsDTO';

/**
* Alterations service.
* @module api/AlterationsApi
* @version 4.0
*/
export default class AlterationsApi {

    /**
    * Constructs a new AlterationsApi. 
    * @alias module:api/AlterationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the alterationsGet operation.
     * @callback module:api/AlterationsApi~alterationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WordAlterationsDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download alterations from runtime.
     * @param {module:api/AlterationsApi~alterationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WordAlterationsDTO}
     */
    alterationsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apim_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WordAlterationsDTO;
      return this.apiClient.callApi(
        '/alterations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alterationsReplace operation.
     * @callback module:api/AlterationsApi~alterationsReplaceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replace alterations data.
     * @param {module:model/WordAlterationsDTO} wordAlterations New alterations data.
     * @param {module:api/AlterationsApi~alterationsReplaceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    alterationsReplace(wordAlterations, callback) {
      let postBody = wordAlterations;
      // verify the required parameter 'wordAlterations' is set
      if (wordAlterations === undefined || wordAlterations === null) {
        throw new Error("Missing the required parameter 'wordAlterations' when calling alterationsReplace");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apim_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/alterations', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
