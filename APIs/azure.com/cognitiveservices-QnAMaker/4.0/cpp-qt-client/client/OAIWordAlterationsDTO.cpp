/**
 * QnAMaker Client
 * An API for QnAMaker Service
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWordAlterationsDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWordAlterationsDTO::OAIWordAlterationsDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWordAlterationsDTO::OAIWordAlterationsDTO() {
    this->initializeModel();
}

OAIWordAlterationsDTO::~OAIWordAlterationsDTO() {}

void OAIWordAlterationsDTO::initializeModel() {

    m_word_alterations_isSet = false;
    m_word_alterations_isValid = false;
}

void OAIWordAlterationsDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWordAlterationsDTO::fromJsonObject(QJsonObject json) {

    m_word_alterations_isValid = ::OpenAPI::fromJsonValue(m_word_alterations, json[QString("wordAlterations")]);
    m_word_alterations_isSet = !json[QString("wordAlterations")].isNull() && m_word_alterations_isValid;
}

QString OAIWordAlterationsDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWordAlterationsDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_word_alterations.size() > 0) {
        obj.insert(QString("wordAlterations"), ::OpenAPI::toJsonValue(m_word_alterations));
    }
    return obj;
}

QList<OAIAlterationsDTO> OAIWordAlterationsDTO::getWordAlterations() const {
    return m_word_alterations;
}
void OAIWordAlterationsDTO::setWordAlterations(const QList<OAIAlterationsDTO> &word_alterations) {
    m_word_alterations = word_alterations;
    m_word_alterations_isSet = true;
}

bool OAIWordAlterationsDTO::is_word_alterations_Set() const{
    return m_word_alterations_isSet;
}

bool OAIWordAlterationsDTO::is_word_alterations_Valid() const{
    return m_word_alterations_isValid;
}

bool OAIWordAlterationsDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_word_alterations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWordAlterationsDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_word_alterations_isValid && true;
}

} // namespace OpenAPI
