/**
 * QnAMaker Client
 * An API for QnAMaker Service
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperationState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperationState::OAIOperationState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperationState::OAIOperationState() {
    this->initializeModel();
}

OAIOperationState::~OAIOperationState() {}

void OAIOperationState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOperationState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOperationState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOperationState::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NotStarted", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOperationState::NOTSTARTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Running", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOperationState::RUNNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Succeeded", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOperationState::SUCCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOperationState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOperationState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOperationState::FAILED:
            val = "Failed";
            break;
        case eOAIOperationState::NOTSTARTED:
            val = "NotStarted";
            break;
        case eOAIOperationState::RUNNING:
            val = "Running";
            break;
        case eOAIOperationState::SUCCEEDED:
            val = "Succeeded";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOperationState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOperationState::eOAIOperationState OAIOperationState::getValue() const {
    return m_value;
}

void OAIOperationState::setValue(const OAIOperationState::eOAIOperationState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOperationState::isSet() const {
    
    return m_value_isSet;
}

bool OAIOperationState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
