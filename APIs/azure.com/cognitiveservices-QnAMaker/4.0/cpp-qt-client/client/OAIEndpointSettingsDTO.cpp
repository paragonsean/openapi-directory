/**
 * QnAMaker Client
 * An API for QnAMaker Service
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpointSettingsDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpointSettingsDTO::OAIEndpointSettingsDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpointSettingsDTO::OAIEndpointSettingsDTO() {
    this->initializeModel();
}

OAIEndpointSettingsDTO::~OAIEndpointSettingsDTO() {}

void OAIEndpointSettingsDTO::initializeModel() {

    m_active_learning_isSet = false;
    m_active_learning_isValid = false;
}

void OAIEndpointSettingsDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndpointSettingsDTO::fromJsonObject(QJsonObject json) {

    m_active_learning_isValid = ::OpenAPI::fromJsonValue(m_active_learning, json[QString("activeLearning")]);
    m_active_learning_isSet = !json[QString("activeLearning")].isNull() && m_active_learning_isValid;
}

QString OAIEndpointSettingsDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndpointSettingsDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_active_learning.isSet()) {
        obj.insert(QString("activeLearning"), ::OpenAPI::toJsonValue(m_active_learning));
    }
    return obj;
}

OAIActiveLearningSettingsDTO OAIEndpointSettingsDTO::getActiveLearning() const {
    return m_active_learning;
}
void OAIEndpointSettingsDTO::setActiveLearning(const OAIActiveLearningSettingsDTO &active_learning) {
    m_active_learning = active_learning;
    m_active_learning_isSet = true;
}

bool OAIEndpointSettingsDTO::is_active_learning_Set() const{
    return m_active_learning_isSet;
}

bool OAIEndpointSettingsDTO::is_active_learning_Valid() const{
    return m_active_learning_isValid;
}

bool OAIEndpointSettingsDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_learning.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndpointSettingsDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
