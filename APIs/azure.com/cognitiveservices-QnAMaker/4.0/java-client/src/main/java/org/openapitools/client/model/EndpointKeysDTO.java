/*
 * QnAMaker Client
 * An API for QnAMaker Service
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Schema for EndpointKeys generate/refresh operations.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:32:06.344438-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EndpointKeysDTO {
  public static final String SERIALIZED_NAME_INSTALLED_VERSION = "installedVersion";
  @SerializedName(SERIALIZED_NAME_INSTALLED_VERSION)
  private String installedVersion;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_LAST_STABLE_VERSION = "lastStableVersion";
  @SerializedName(SERIALIZED_NAME_LAST_STABLE_VERSION)
  private String lastStableVersion;

  public static final String SERIALIZED_NAME_PRIMARY_ENDPOINT_KEY = "primaryEndpointKey";
  @SerializedName(SERIALIZED_NAME_PRIMARY_ENDPOINT_KEY)
  private String primaryEndpointKey;

  public static final String SERIALIZED_NAME_SECONDARY_ENDPOINT_KEY = "secondaryEndpointKey";
  @SerializedName(SERIALIZED_NAME_SECONDARY_ENDPOINT_KEY)
  private String secondaryEndpointKey;

  public EndpointKeysDTO() {
  }

  public EndpointKeysDTO installedVersion(String installedVersion) {
    this.installedVersion = installedVersion;
    return this;
  }

  /**
   * Current version of runtime.
   * @return installedVersion
   */
  @javax.annotation.Nullable
  public String getInstalledVersion() {
    return installedVersion;
  }

  public void setInstalledVersion(String installedVersion) {
    this.installedVersion = installedVersion;
  }


  public EndpointKeysDTO language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Language setting of runtime.
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public EndpointKeysDTO lastStableVersion(String lastStableVersion) {
    this.lastStableVersion = lastStableVersion;
    return this;
  }

  /**
   * Latest version of runtime.
   * @return lastStableVersion
   */
  @javax.annotation.Nullable
  public String getLastStableVersion() {
    return lastStableVersion;
  }

  public void setLastStableVersion(String lastStableVersion) {
    this.lastStableVersion = lastStableVersion;
  }


  public EndpointKeysDTO primaryEndpointKey(String primaryEndpointKey) {
    this.primaryEndpointKey = primaryEndpointKey;
    return this;
  }

  /**
   * Primary Access Key.
   * @return primaryEndpointKey
   */
  @javax.annotation.Nullable
  public String getPrimaryEndpointKey() {
    return primaryEndpointKey;
  }

  public void setPrimaryEndpointKey(String primaryEndpointKey) {
    this.primaryEndpointKey = primaryEndpointKey;
  }


  public EndpointKeysDTO secondaryEndpointKey(String secondaryEndpointKey) {
    this.secondaryEndpointKey = secondaryEndpointKey;
    return this;
  }

  /**
   * Secondary Access Key.
   * @return secondaryEndpointKey
   */
  @javax.annotation.Nullable
  public String getSecondaryEndpointKey() {
    return secondaryEndpointKey;
  }

  public void setSecondaryEndpointKey(String secondaryEndpointKey) {
    this.secondaryEndpointKey = secondaryEndpointKey;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EndpointKeysDTO endpointKeysDTO = (EndpointKeysDTO) o;
    return Objects.equals(this.installedVersion, endpointKeysDTO.installedVersion) &&
        Objects.equals(this.language, endpointKeysDTO.language) &&
        Objects.equals(this.lastStableVersion, endpointKeysDTO.lastStableVersion) &&
        Objects.equals(this.primaryEndpointKey, endpointKeysDTO.primaryEndpointKey) &&
        Objects.equals(this.secondaryEndpointKey, endpointKeysDTO.secondaryEndpointKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(installedVersion, language, lastStableVersion, primaryEndpointKey, secondaryEndpointKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EndpointKeysDTO {\n");
    sb.append("    installedVersion: ").append(toIndentedString(installedVersion)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    lastStableVersion: ").append(toIndentedString(lastStableVersion)).append("\n");
    sb.append("    primaryEndpointKey: ").append(toIndentedString(primaryEndpointKey)).append("\n");
    sb.append("    secondaryEndpointKey: ").append(toIndentedString(secondaryEndpointKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("installedVersion");
    openapiFields.add("language");
    openapiFields.add("lastStableVersion");
    openapiFields.add("primaryEndpointKey");
    openapiFields.add("secondaryEndpointKey");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EndpointKeysDTO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EndpointKeysDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EndpointKeysDTO is not found in the empty JSON string", EndpointKeysDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EndpointKeysDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EndpointKeysDTO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("installedVersion") != null && !jsonObj.get("installedVersion").isJsonNull()) && !jsonObj.get("installedVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `installedVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("installedVersion").toString()));
      }
      if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      if ((jsonObj.get("lastStableVersion") != null && !jsonObj.get("lastStableVersion").isJsonNull()) && !jsonObj.get("lastStableVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastStableVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastStableVersion").toString()));
      }
      if ((jsonObj.get("primaryEndpointKey") != null && !jsonObj.get("primaryEndpointKey").isJsonNull()) && !jsonObj.get("primaryEndpointKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryEndpointKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryEndpointKey").toString()));
      }
      if ((jsonObj.get("secondaryEndpointKey") != null && !jsonObj.get("secondaryEndpointKey").isJsonNull()) && !jsonObj.get("secondaryEndpointKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondaryEndpointKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondaryEndpointKey").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EndpointKeysDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EndpointKeysDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EndpointKeysDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EndpointKeysDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<EndpointKeysDTO>() {
           @Override
           public void write(JsonWriter out, EndpointKeysDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EndpointKeysDTO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EndpointKeysDTO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EndpointKeysDTO
   * @throws IOException if the JSON string is invalid with respect to EndpointKeysDTO
   */
  public static EndpointKeysDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EndpointKeysDTO.class);
  }

  /**
   * Convert an instance of EndpointKeysDTO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

