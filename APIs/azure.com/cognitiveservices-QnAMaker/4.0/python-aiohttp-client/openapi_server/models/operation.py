# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error_response import ErrorResponse
from openapi_server.models.operation_state import OperationState
from openapi_server import util


class Operation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_timestamp: str=None, error_response: ErrorResponse=None, last_action_timestamp: str=None, operation_id: str=None, operation_state: OperationState=None, resource_location: str=None, user_id: str=None):
        """Operation - a model defined in OpenAPI

        :param created_timestamp: The created_timestamp of this Operation.
        :param error_response: The error_response of this Operation.
        :param last_action_timestamp: The last_action_timestamp of this Operation.
        :param operation_id: The operation_id of this Operation.
        :param operation_state: The operation_state of this Operation.
        :param resource_location: The resource_location of this Operation.
        :param user_id: The user_id of this Operation.
        """
        self.openapi_types = {
            'created_timestamp': str,
            'error_response': ErrorResponse,
            'last_action_timestamp': str,
            'operation_id': str,
            'operation_state': OperationState,
            'resource_location': str,
            'user_id': str
        }

        self.attribute_map = {
            'created_timestamp': 'createdTimestamp',
            'error_response': 'errorResponse',
            'last_action_timestamp': 'lastActionTimestamp',
            'operation_id': 'operationId',
            'operation_state': 'operationState',
            'resource_location': 'resourceLocation',
            'user_id': 'userId'
        }

        self._created_timestamp = created_timestamp
        self._error_response = error_response
        self._last_action_timestamp = last_action_timestamp
        self._operation_id = operation_id
        self._operation_state = operation_state
        self._resource_location = resource_location
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Operation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Operation of this Operation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this Operation.

        Timestamp when the operation was created.

        :return: The created_timestamp of this Operation.
        :rtype: str
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this Operation.

        Timestamp when the operation was created.

        :param created_timestamp: The created_timestamp of this Operation.
        :type created_timestamp: str
        """

        self._created_timestamp = created_timestamp

    @property
    def error_response(self):
        """Gets the error_response of this Operation.


        :return: The error_response of this Operation.
        :rtype: ErrorResponse
        """
        return self._error_response

    @error_response.setter
    def error_response(self, error_response):
        """Sets the error_response of this Operation.


        :param error_response: The error_response of this Operation.
        :type error_response: ErrorResponse
        """

        self._error_response = error_response

    @property
    def last_action_timestamp(self):
        """Gets the last_action_timestamp of this Operation.

        Timestamp when the current state was entered.

        :return: The last_action_timestamp of this Operation.
        :rtype: str
        """
        return self._last_action_timestamp

    @last_action_timestamp.setter
    def last_action_timestamp(self, last_action_timestamp):
        """Sets the last_action_timestamp of this Operation.

        Timestamp when the current state was entered.

        :param last_action_timestamp: The last_action_timestamp of this Operation.
        :type last_action_timestamp: str
        """

        self._last_action_timestamp = last_action_timestamp

    @property
    def operation_id(self):
        """Gets the operation_id of this Operation.

        Operation Id.

        :return: The operation_id of this Operation.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this Operation.

        Operation Id.

        :param operation_id: The operation_id of this Operation.
        :type operation_id: str
        """

        self._operation_id = operation_id

    @property
    def operation_state(self):
        """Gets the operation_state of this Operation.


        :return: The operation_state of this Operation.
        :rtype: OperationState
        """
        return self._operation_state

    @operation_state.setter
    def operation_state(self, operation_state):
        """Sets the operation_state of this Operation.


        :param operation_state: The operation_state of this Operation.
        :type operation_state: OperationState
        """

        self._operation_state = operation_state

    @property
    def resource_location(self):
        """Gets the resource_location of this Operation.

        Relative URI to the target resource location for completed resources.

        :return: The resource_location of this Operation.
        :rtype: str
        """
        return self._resource_location

    @resource_location.setter
    def resource_location(self, resource_location):
        """Sets the resource_location of this Operation.

        Relative URI to the target resource location for completed resources.

        :param resource_location: The resource_location of this Operation.
        :type resource_location: str
        """

        self._resource_location = resource_location

    @property
    def user_id(self):
        """Gets the user_id of this Operation.

        User Id

        :return: The user_id of this Operation.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Operation.

        User Id

        :param user_id: The user_id of this Operation.
        :type user_id: str
        """

        self._user_id = user_id
