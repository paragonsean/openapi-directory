# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EndpointKeysDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, installed_version: str=None, language: str=None, last_stable_version: str=None, primary_endpoint_key: str=None, secondary_endpoint_key: str=None):
        """EndpointKeysDTO - a model defined in OpenAPI

        :param installed_version: The installed_version of this EndpointKeysDTO.
        :param language: The language of this EndpointKeysDTO.
        :param last_stable_version: The last_stable_version of this EndpointKeysDTO.
        :param primary_endpoint_key: The primary_endpoint_key of this EndpointKeysDTO.
        :param secondary_endpoint_key: The secondary_endpoint_key of this EndpointKeysDTO.
        """
        self.openapi_types = {
            'installed_version': str,
            'language': str,
            'last_stable_version': str,
            'primary_endpoint_key': str,
            'secondary_endpoint_key': str
        }

        self.attribute_map = {
            'installed_version': 'installedVersion',
            'language': 'language',
            'last_stable_version': 'lastStableVersion',
            'primary_endpoint_key': 'primaryEndpointKey',
            'secondary_endpoint_key': 'secondaryEndpointKey'
        }

        self._installed_version = installed_version
        self._language = language
        self._last_stable_version = last_stable_version
        self._primary_endpoint_key = primary_endpoint_key
        self._secondary_endpoint_key = secondary_endpoint_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointKeysDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndpointKeysDTO of this EndpointKeysDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def installed_version(self):
        """Gets the installed_version of this EndpointKeysDTO.

        Current version of runtime.

        :return: The installed_version of this EndpointKeysDTO.
        :rtype: str
        """
        return self._installed_version

    @installed_version.setter
    def installed_version(self, installed_version):
        """Sets the installed_version of this EndpointKeysDTO.

        Current version of runtime.

        :param installed_version: The installed_version of this EndpointKeysDTO.
        :type installed_version: str
        """

        self._installed_version = installed_version

    @property
    def language(self):
        """Gets the language of this EndpointKeysDTO.

        Language setting of runtime.

        :return: The language of this EndpointKeysDTO.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this EndpointKeysDTO.

        Language setting of runtime.

        :param language: The language of this EndpointKeysDTO.
        :type language: str
        """

        self._language = language

    @property
    def last_stable_version(self):
        """Gets the last_stable_version of this EndpointKeysDTO.

        Latest version of runtime.

        :return: The last_stable_version of this EndpointKeysDTO.
        :rtype: str
        """
        return self._last_stable_version

    @last_stable_version.setter
    def last_stable_version(self, last_stable_version):
        """Sets the last_stable_version of this EndpointKeysDTO.

        Latest version of runtime.

        :param last_stable_version: The last_stable_version of this EndpointKeysDTO.
        :type last_stable_version: str
        """

        self._last_stable_version = last_stable_version

    @property
    def primary_endpoint_key(self):
        """Gets the primary_endpoint_key of this EndpointKeysDTO.

        Primary Access Key.

        :return: The primary_endpoint_key of this EndpointKeysDTO.
        :rtype: str
        """
        return self._primary_endpoint_key

    @primary_endpoint_key.setter
    def primary_endpoint_key(self, primary_endpoint_key):
        """Sets the primary_endpoint_key of this EndpointKeysDTO.

        Primary Access Key.

        :param primary_endpoint_key: The primary_endpoint_key of this EndpointKeysDTO.
        :type primary_endpoint_key: str
        """

        self._primary_endpoint_key = primary_endpoint_key

    @property
    def secondary_endpoint_key(self):
        """Gets the secondary_endpoint_key of this EndpointKeysDTO.

        Secondary Access Key.

        :return: The secondary_endpoint_key of this EndpointKeysDTO.
        :rtype: str
        """
        return self._secondary_endpoint_key

    @secondary_endpoint_key.setter
    def secondary_endpoint_key(self, secondary_endpoint_key):
        """Sets the secondary_endpoint_key of this EndpointKeysDTO.

        Secondary Access Key.

        :param secondary_endpoint_key: The secondary_endpoint_key of this EndpointKeysDTO.
        :type secondary_endpoint_key: str
        """

        self._secondary_endpoint_key = secondary_endpoint_key
