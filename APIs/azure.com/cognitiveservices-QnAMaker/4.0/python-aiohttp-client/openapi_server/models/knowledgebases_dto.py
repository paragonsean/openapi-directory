# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.knowledgebase_dto import KnowledgebaseDTO
from openapi_server import util


class KnowledgebasesDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, knowledgebases: List[KnowledgebaseDTO]=None):
        """KnowledgebasesDTO - a model defined in OpenAPI

        :param knowledgebases: The knowledgebases of this KnowledgebasesDTO.
        """
        self.openapi_types = {
            'knowledgebases': List[KnowledgebaseDTO]
        }

        self.attribute_map = {
            'knowledgebases': 'knowledgebases'
        }

        self._knowledgebases = knowledgebases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KnowledgebasesDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KnowledgebasesDTO of this KnowledgebasesDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def knowledgebases(self):
        """Gets the knowledgebases of this KnowledgebasesDTO.

        Collection of knowledgebase records.

        :return: The knowledgebases of this KnowledgebasesDTO.
        :rtype: List[KnowledgebaseDTO]
        """
        return self._knowledgebases

    @knowledgebases.setter
    def knowledgebases(self, knowledgebases):
        """Sets the knowledgebases of this KnowledgebasesDTO.

        Collection of knowledgebase records.

        :param knowledgebases: The knowledgebases of this KnowledgebasesDTO.
        :type knowledgebases: List[KnowledgebaseDTO]
        """

        self._knowledgebases = knowledgebases
