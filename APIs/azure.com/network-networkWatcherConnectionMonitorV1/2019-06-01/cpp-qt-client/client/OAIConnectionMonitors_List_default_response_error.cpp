/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectionMonitors_List_default_response_error.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectionMonitors_List_default_response_error::OAIConnectionMonitors_List_default_response_error(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectionMonitors_List_default_response_error::OAIConnectionMonitors_List_default_response_error() {
    this->initializeModel();
}

OAIConnectionMonitors_List_default_response_error::~OAIConnectionMonitors_List_default_response_error() {}

void OAIConnectionMonitors_List_default_response_error::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_target_isSet = false;
    m_target_isValid = false;
}

void OAIConnectionMonitors_List_default_response_error::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnectionMonitors_List_default_response_error::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_target_isValid = ::OpenAPI::fromJsonValue(m_target, json[QString("target")]);
    m_target_isSet = !json[QString("target")].isNull() && m_target_isValid;
}

QString OAIConnectionMonitors_List_default_response_error::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnectionMonitors_List_default_response_error::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_target_isSet) {
        obj.insert(QString("target"), ::OpenAPI::toJsonValue(m_target));
    }
    return obj;
}

QString OAIConnectionMonitors_List_default_response_error::getCode() const {
    return m_code;
}
void OAIConnectionMonitors_List_default_response_error::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIConnectionMonitors_List_default_response_error::is_code_Set() const{
    return m_code_isSet;
}

bool OAIConnectionMonitors_List_default_response_error::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIConnectionMonitors_List_default_response_error::getMessage() const {
    return m_message;
}
void OAIConnectionMonitors_List_default_response_error::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIConnectionMonitors_List_default_response_error::is_message_Set() const{
    return m_message_isSet;
}

bool OAIConnectionMonitors_List_default_response_error::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIConnectionMonitors_List_default_response_error::getTarget() const {
    return m_target;
}
void OAIConnectionMonitors_List_default_response_error::setTarget(const QString &target) {
    m_target = target;
    m_target_isSet = true;
}

bool OAIConnectionMonitors_List_default_response_error::is_target_Set() const{
    return m_target_isSet;
}

bool OAIConnectionMonitors_List_default_response_error::is_target_Valid() const{
    return m_target_isValid;
}

bool OAIConnectionMonitors_List_default_response_error::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnectionMonitors_List_default_response_error::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
