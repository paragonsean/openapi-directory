/**
 * MariaDBManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MariaDB resources including servers, databases, firewall rules, VNET rules, log files and configurations with new business model.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import QueryStatistic from '../model/QueryStatistic';
import TopQueryStatisticsInput from '../model/TopQueryStatisticsInput';
import TopQueryStatisticsResultList from '../model/TopQueryStatisticsResultList';

/**
* TopQueryStatistics service.
* @module api/TopQueryStatisticsApi
* @version 2018-06-01
*/
export default class TopQueryStatisticsApi {

    /**
    * Constructs a new TopQueryStatisticsApi. 
    * @alias module:api/TopQueryStatisticsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the topQueryStatisticsGet operation.
     * @callback module:api/TopQueryStatisticsApi~topQueryStatisticsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QueryStatistic} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the query statistic for specified identifier.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} serverName The name of the server.
     * @param {String} queryStatisticId The Query Statistic identifier.
     * @param {module:api/TopQueryStatisticsApi~topQueryStatisticsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QueryStatistic}
     */
    topQueryStatisticsGet(apiVersion, subscriptionId, resourceGroupName, serverName, queryStatisticId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling topQueryStatisticsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling topQueryStatisticsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling topQueryStatisticsGet");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling topQueryStatisticsGet");
      }
      // verify the required parameter 'queryStatisticId' is set
      if (queryStatisticId === undefined || queryStatisticId === null) {
        throw new Error("Missing the required parameter 'queryStatisticId' when calling topQueryStatisticsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'queryStatisticId': queryStatisticId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = QueryStatistic;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/topQueryStatistics/{queryStatisticId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the topQueryStatisticsListByServer operation.
     * @callback module:api/TopQueryStatisticsApi~topQueryStatisticsListByServerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TopQueryStatisticsResultList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the Query-Store top queries for specified metric and aggregation.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} serverName The name of the server.
     * @param {module:model/TopQueryStatisticsInput} parameters The required parameters for retrieving top query statistics.
     * @param {module:api/TopQueryStatisticsApi~topQueryStatisticsListByServerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TopQueryStatisticsResultList}
     */
    topQueryStatisticsListByServer(apiVersion, subscriptionId, resourceGroupName, serverName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling topQueryStatisticsListByServer");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling topQueryStatisticsListByServer");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling topQueryStatisticsListByServer");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling topQueryStatisticsListByServer");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling topQueryStatisticsListByServer");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'serverName': serverName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TopQueryStatisticsResultList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/topQueryStatistics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
