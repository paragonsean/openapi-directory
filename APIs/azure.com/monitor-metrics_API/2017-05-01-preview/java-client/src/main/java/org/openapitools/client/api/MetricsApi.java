/*
 * MonitorManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.math.BigDecimal;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MetricsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public MetricsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public MetricsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for metricsList
     * @param resourceUri The identifier of the resource. (required)
     * @param apiVersion Client Api Version. (required)
     * @param timespan The timespan of the query. It is a string with the following format &#39;startDateTime_ISO/endDateTime_ISO&#39;. (optional)
     * @param interval The interval (i.e. timegrain) of the query. (optional)
     * @param metric The name of the metric to retrieve. (optional)
     * @param aggregation The list of aggregation types (comma separated) to retrieve. (optional)
     * @param $top The maximum number of records to retrieve. Valid only if $filter is specified. Defaults to 10. (optional)
     * @param $orderby The aggregation to use for sorting results and the direction of the sort. Only one order can be specified. Examples: sum asc. (optional)
     * @param $filter The **$filter** is used to reduce the set of metric data returned.&lt;br&gt;Example:&lt;br&gt;Metric contains metadata A, B and C.&lt;br&gt;- Return all time series of C where A &#x3D; a1 and B &#x3D; b1 or b2&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**&lt;br&gt;- Invalid variant:&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B &#x3D; ‘b2’**&lt;br&gt;This is invalid because the logical or operator cannot separate two different metadata names.&lt;br&gt;- Return all time series where A &#x3D; a1, B &#x3D; b1 and C &#x3D; c1:&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**&lt;br&gt;- Return all time series where A &#x3D; a1&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**. (optional)
     * @param resultType Reduces the set of data collected. The syntax allowed depends on the operation. See the operation&#39;s description for details. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to get the list of metric values. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call metricsListCall(String resourceUri, String apiVersion, String timespan, String interval, String metric, String aggregation, BigDecimal $top, String $orderby, String $filter, String resultType, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/{resourceUri}/providers/microsoft.insights/metrics"
            .replace("{" + "resourceUri" + "}", localVarApiClient.escapeString(resourceUri.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timespan != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timespan", timespan));
        }

        if (interval != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("interval", interval));
        }

        if (metric != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("metric", metric));
        }

        if (aggregation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aggregation", aggregation));
        }

        if ($top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$top", $top));
        }

        if ($orderby != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$orderby", $orderby));
        }

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if (resultType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("resultType", resultType));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call metricsListValidateBeforeCall(String resourceUri, String apiVersion, String timespan, String interval, String metric, String aggregation, BigDecimal $top, String $orderby, String $filter, String resultType, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceUri' is set
        if (resourceUri == null) {
            throw new ApiException("Missing the required parameter 'resourceUri' when calling metricsList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling metricsList(Async)");
        }

        return metricsListCall(resourceUri, apiVersion, timespan, interval, metric, aggregation, $top, $orderby, $filter, resultType, _callback);

    }

    /**
     * 
     * **Lists the metric values for a resource**.
     * @param resourceUri The identifier of the resource. (required)
     * @param apiVersion Client Api Version. (required)
     * @param timespan The timespan of the query. It is a string with the following format &#39;startDateTime_ISO/endDateTime_ISO&#39;. (optional)
     * @param interval The interval (i.e. timegrain) of the query. (optional)
     * @param metric The name of the metric to retrieve. (optional)
     * @param aggregation The list of aggregation types (comma separated) to retrieve. (optional)
     * @param $top The maximum number of records to retrieve. Valid only if $filter is specified. Defaults to 10. (optional)
     * @param $orderby The aggregation to use for sorting results and the direction of the sort. Only one order can be specified. Examples: sum asc. (optional)
     * @param $filter The **$filter** is used to reduce the set of metric data returned.&lt;br&gt;Example:&lt;br&gt;Metric contains metadata A, B and C.&lt;br&gt;- Return all time series of C where A &#x3D; a1 and B &#x3D; b1 or b2&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**&lt;br&gt;- Invalid variant:&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B &#x3D; ‘b2’**&lt;br&gt;This is invalid because the logical or operator cannot separate two different metadata names.&lt;br&gt;- Return all time series where A &#x3D; a1, B &#x3D; b1 and C &#x3D; c1:&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**&lt;br&gt;- Return all time series where A &#x3D; a1&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**. (optional)
     * @param resultType Reduces the set of data collected. The syntax allowed depends on the operation. See the operation&#39;s description for details. (optional)
     * @return Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to get the list of metric values. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public Response metricsList(String resourceUri, String apiVersion, String timespan, String interval, String metric, String aggregation, BigDecimal $top, String $orderby, String $filter, String resultType) throws ApiException {
        ApiResponse<Response> localVarResp = metricsListWithHttpInfo(resourceUri, apiVersion, timespan, interval, metric, aggregation, $top, $orderby, $filter, resultType);
        return localVarResp.getData();
    }

    /**
     * 
     * **Lists the metric values for a resource**.
     * @param resourceUri The identifier of the resource. (required)
     * @param apiVersion Client Api Version. (required)
     * @param timespan The timespan of the query. It is a string with the following format &#39;startDateTime_ISO/endDateTime_ISO&#39;. (optional)
     * @param interval The interval (i.e. timegrain) of the query. (optional)
     * @param metric The name of the metric to retrieve. (optional)
     * @param aggregation The list of aggregation types (comma separated) to retrieve. (optional)
     * @param $top The maximum number of records to retrieve. Valid only if $filter is specified. Defaults to 10. (optional)
     * @param $orderby The aggregation to use for sorting results and the direction of the sort. Only one order can be specified. Examples: sum asc. (optional)
     * @param $filter The **$filter** is used to reduce the set of metric data returned.&lt;br&gt;Example:&lt;br&gt;Metric contains metadata A, B and C.&lt;br&gt;- Return all time series of C where A &#x3D; a1 and B &#x3D; b1 or b2&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**&lt;br&gt;- Invalid variant:&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B &#x3D; ‘b2’**&lt;br&gt;This is invalid because the logical or operator cannot separate two different metadata names.&lt;br&gt;- Return all time series where A &#x3D; a1, B &#x3D; b1 and C &#x3D; c1:&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**&lt;br&gt;- Return all time series where A &#x3D; a1&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**. (optional)
     * @param resultType Reduces the set of data collected. The syntax allowed depends on the operation. See the operation&#39;s description for details. (optional)
     * @return ApiResponse&lt;Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to get the list of metric values. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Response> metricsListWithHttpInfo(String resourceUri, String apiVersion, String timespan, String interval, String metric, String aggregation, BigDecimal $top, String $orderby, String $filter, String resultType) throws ApiException {
        okhttp3.Call localVarCall = metricsListValidateBeforeCall(resourceUri, apiVersion, timespan, interval, metric, aggregation, $top, $orderby, $filter, resultType, null);
        Type localVarReturnType = new TypeToken<Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * **Lists the metric values for a resource**.
     * @param resourceUri The identifier of the resource. (required)
     * @param apiVersion Client Api Version. (required)
     * @param timespan The timespan of the query. It is a string with the following format &#39;startDateTime_ISO/endDateTime_ISO&#39;. (optional)
     * @param interval The interval (i.e. timegrain) of the query. (optional)
     * @param metric The name of the metric to retrieve. (optional)
     * @param aggregation The list of aggregation types (comma separated) to retrieve. (optional)
     * @param $top The maximum number of records to retrieve. Valid only if $filter is specified. Defaults to 10. (optional)
     * @param $orderby The aggregation to use for sorting results and the direction of the sort. Only one order can be specified. Examples: sum asc. (optional)
     * @param $filter The **$filter** is used to reduce the set of metric data returned.&lt;br&gt;Example:&lt;br&gt;Metric contains metadata A, B and C.&lt;br&gt;- Return all time series of C where A &#x3D; a1 and B &#x3D; b1 or b2&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**&lt;br&gt;- Invalid variant:&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B &#x3D; ‘b2’**&lt;br&gt;This is invalid because the logical or operator cannot separate two different metadata names.&lt;br&gt;- Return all time series where A &#x3D; a1, B &#x3D; b1 and C &#x3D; c1:&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**&lt;br&gt;- Return all time series where A &#x3D; a1&lt;br&gt;**$filter&#x3D;A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**. (optional)
     * @param resultType Reduces the set of data collected. The syntax allowed depends on the operation. See the operation&#39;s description for details. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful request to get the list of metric values. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call metricsListAsync(String resourceUri, String apiVersion, String timespan, String interval, String metric, String aggregation, BigDecimal $top, String $orderby, String $filter, String resultType, final ApiCallback<Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = metricsListValidateBeforeCall(resourceUri, apiVersion, timespan, interval, metric, aggregation, $top, $orderby, $filter, resultType, _callback);
        Type localVarReturnType = new TypeToken<Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
