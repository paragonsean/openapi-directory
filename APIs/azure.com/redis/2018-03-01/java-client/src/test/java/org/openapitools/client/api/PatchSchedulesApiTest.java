/*
 * RedisManagementClient
 * REST API for Azure Redis Cache Service.
 *
 * The version of the OpenAPI document: 2018-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RedisPatchSchedule;
import org.openapitools.client.model.RedisPatchScheduleListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PatchSchedulesApi
 */
@Disabled
public class PatchSchedulesApiTest {

    private final PatchSchedulesApi api = new PatchSchedulesApi();

    /**
     * Create or replace the patching schedule for Redis cache (requires Premium SKU).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchSchedulesCreateOrUpdate_0Test() throws ApiException {
        String resourceGroupName = null;
        String name = null;
        String _default = null;
        String apiVersion = null;
        String subscriptionId = null;
        RedisPatchSchedule parameters = null;
        RedisPatchSchedule response = api.patchSchedulesCreateOrUpdate_0(resourceGroupName, name, _default, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the patching schedule of a redis cache (requires Premium SKU).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchSchedulesDelete_0Test() throws ApiException {
        String resourceGroupName = null;
        String name = null;
        String _default = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.patchSchedulesDelete_0(resourceGroupName, name, _default, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the patching schedule of a redis cache (requires Premium SKU).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchSchedulesGet_0Test() throws ApiException {
        String resourceGroupName = null;
        String name = null;
        String _default = null;
        String apiVersion = null;
        String subscriptionId = null;
        RedisPatchSchedule response = api.patchSchedulesGet_0(resourceGroupName, name, _default, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all patch schedules in the specified redis cache (there is only one).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchSchedulesListByRedisResource_0Test() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String cacheName = null;
        RedisPatchScheduleListResult response = api.patchSchedulesListByRedisResource_0(apiVersion, subscriptionId, resourceGroupName, cacheName);
        // TODO: test validations
    }

}
