/**
 * RedisManagementClient
 * REST API for Azure Redis Cache Service.
 *
 * The version of the OpenAPI document: 2018-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RedisPatchSchedule from '../model/RedisPatchSchedule';
import RedisPatchScheduleListResult from '../model/RedisPatchScheduleListResult';

/**
* PatchSchedules service.
* @module api/PatchSchedulesApi
* @version 2018-03-01
*/
export default class PatchSchedulesApi {

    /**
    * Constructs a new PatchSchedulesApi. 
    * @alias module:api/PatchSchedulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the patchSchedulesCreateOrUpdate_0 operation.
     * @callback module:api/PatchSchedulesApi~patchSchedulesCreateOrUpdate_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/RedisPatchSchedule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or replace the patching schedule for Redis cache (requires Premium SKU).
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} name The name of the Redis cache.
     * @param {module:model/String} _default Default string modeled as parameter for auto generation to work correctly.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/RedisPatchSchedule} parameters Parameters to set the patching schedule for Redis cache.
     * @param {module:api/PatchSchedulesApi~patchSchedulesCreateOrUpdate_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RedisPatchSchedule}
     */
    patchSchedulesCreateOrUpdate_0(resourceGroupName, name, _default, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling patchSchedulesCreateOrUpdate_0");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchSchedulesCreateOrUpdate_0");
      }
      // verify the required parameter '_default' is set
      if (_default === undefined || _default === null) {
        throw new Error("Missing the required parameter '_default' when calling patchSchedulesCreateOrUpdate_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling patchSchedulesCreateOrUpdate_0");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling patchSchedulesCreateOrUpdate_0");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling patchSchedulesCreateOrUpdate_0");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'name': name,
        'default': _default,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RedisPatchSchedule;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/{default}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchSchedulesDelete_0 operation.
     * @callback module:api/PatchSchedulesApi~patchSchedulesDelete_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the patching schedule of a redis cache (requires Premium SKU).
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} name The name of the redis cache.
     * @param {module:model/String} _default Default string modeled as parameter for auto generation to work correctly.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/PatchSchedulesApi~patchSchedulesDelete_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    patchSchedulesDelete_0(resourceGroupName, name, _default, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling patchSchedulesDelete_0");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchSchedulesDelete_0");
      }
      // verify the required parameter '_default' is set
      if (_default === undefined || _default === null) {
        throw new Error("Missing the required parameter '_default' when calling patchSchedulesDelete_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling patchSchedulesDelete_0");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling patchSchedulesDelete_0");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'name': name,
        'default': _default,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/{default}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchSchedulesGet_0 operation.
     * @callback module:api/PatchSchedulesApi~patchSchedulesGet_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/RedisPatchSchedule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the patching schedule of a redis cache (requires Premium SKU).
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} name The name of the redis cache.
     * @param {module:model/String} _default Default string modeled as parameter for auto generation to work correctly.
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/PatchSchedulesApi~patchSchedulesGet_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RedisPatchSchedule}
     */
    patchSchedulesGet_0(resourceGroupName, name, _default, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling patchSchedulesGet_0");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling patchSchedulesGet_0");
      }
      // verify the required parameter '_default' is set
      if (_default === undefined || _default === null) {
        throw new Error("Missing the required parameter '_default' when calling patchSchedulesGet_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling patchSchedulesGet_0");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling patchSchedulesGet_0");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'name': name,
        'default': _default,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RedisPatchSchedule;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/{default}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchSchedulesListByRedisResource_0 operation.
     * @callback module:api/PatchSchedulesApi~patchSchedulesListByRedisResource_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/RedisPatchScheduleListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all patch schedules in the specified redis cache (there is only one).
     * @param {String} apiVersion Client Api Version.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} cacheName The name of the Redis cache.
     * @param {module:api/PatchSchedulesApi~patchSchedulesListByRedisResource_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RedisPatchScheduleListResult}
     */
    patchSchedulesListByRedisResource_0(apiVersion, subscriptionId, resourceGroupName, cacheName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling patchSchedulesListByRedisResource_0");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling patchSchedulesListByRedisResource_0");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling patchSchedulesListByRedisResource_0");
      }
      // verify the required parameter 'cacheName' is set
      if (cacheName === undefined || cacheName === null) {
        throw new Error("Missing the required parameter 'cacheName' when calling patchSchedulesListByRedisResource_0");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'cacheName': cacheName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RedisPatchScheduleListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/patchSchedules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
