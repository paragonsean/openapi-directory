openapi: 3.0.1
info:
  description: REST API for Azure Redis Cache Service.
  title: RedisManagementClient
  version: 2018-03-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/redis/resource-manager/Microsoft.Cache/stable/2018-03-01/redis.json
    version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: redis
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /providers/Microsoft.Cache/operations:
    get:
      description: Lists all of the available REST API operations of the Microsoft.Cache
        provider.
      operationId: operations_list
      parameters:
      - description: Client Api Version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
          description: Success. The response describes the list of operations.
      tags:
      - Operations
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.operations_controller
  /subscriptions/{subscriptionId}/providers/Microsoft.Cache/CheckNameAvailability:
    post:
      description: Checks that the redis cache name is valid and is not already in
        use.
      operationId: redis_check_name_availability
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameters'
        description: Parameters supplied to the CheckNameAvailability Redis operation.
          The only supported resource type is 'Microsoft.Cache/redis'
        required: true
        x-body-name: parameters
      responses:
        "200":
          content: {}
          description: Name is available
      tags:
      - Redis
      x-ms-examples:
        RedisCacheList:
          parameters:
            api-version: 2018-03-01
            parameters:
              name: cacheName
              type: Microsoft.Cache/Redis
            subscriptionId: subid
          responses:
            "200": {}
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  /subscriptions/{subscriptionId}/providers/Microsoft.Cache/Redis:
    get:
      description: Gets all Redis caches in the specified subscription.
      operationId: redis_list
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisListResult'
          description: ""
      tags:
      - Redis
      x-ms-examples:
        RedisCacheList:
          parameters:
            api-version: 2018-03-01
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1
                  location: West US
                  name: cache1
                  properties:
                    enableNonSslPort: true
                    hostName: cache1.redis.cache.windows.net
                    port: 6379
                    provisioningState: Creating
                    redisConfiguration: {}
                    redisVersion: "3.2"
                    sku:
                      capacity: 6
                      family: C
                      name: Standard
                    sslPort: 6380
                  tags: {}
                  type: Microsoft.Cache/Redis
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis:
    get:
      description: Lists all Redis caches in a resource group.
      operationId: redis_list_by_resource_group
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisListResult'
          description: ""
      tags:
      - Redis
      x-ms-examples:
        RedisCacheListByResourceGroup:
          parameters:
            api-version: 2018-03-01
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1
                  location: West US
                  name: cache1
                  properties:
                    enableNonSslPort: true
                    hostName: cache1.redis.cache.windows.net
                    port: 6379
                    provisioningState: Creating
                    redisConfiguration: {}
                    redisVersion: "3.2"
                    sku:
                      capacity: 6
                      family: C
                      name: Standard
                    sslPort: 6380
                  tags: {}
                  type: Microsoft.Cache/Redis
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules:
    get:
      description: Gets all firewall rules in the specified redis cache.
      operationId: firewall_rules_list_by_redis_resource
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisFirewallRuleListResult'
          description: Successfully got the current rules
      tags:
      - Redis
      - FirewallRules
      x-ms-examples:
        RedisCacheFirewallRulesList:
          parameters:
            api-version: 2018-03-01
            cacheName: cache1
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule1
                  name: rule1
                  properties:
                    endIP: 192.168.1.4
                    startIP: 192.168.1.1
                  type: Microsoft.Cache/Redis/firewallRules
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule2
                  name: rule2
                  properties:
                    endIP: 192.169.1.255
                    startIP: 192.169.1.0
                  type: Microsoft.Cache/Redis/firewallRules
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}
  : delete:
      description: Deletes a single firewall rule in a specified redis cache.
      operationId: firewall_rules_delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the firewall rule.
        in: path
        name: ruleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successfully deleted the rule
        "204":
          content: {}
          description: Successfully deleted the rule
      tags:
      - Redis
      - FirewallRules
      x-ms-examples:
        RedisCacheFirewallRuleDelete:
          parameters:
            api-version: 2018-03-01
            cacheName: cache1
            resourceGroupName: rg1
            ruleName: rule1
            subscriptionId: subid
          responses:
            "200": {}
            "204": {}
      x-openapi-router-controller: openapi_server.controllers.redis_controller
    get:
      description: Gets a single firewall rule in a specified redis cache.
      operationId: firewall_rules_get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the firewall rule.
        in: path
        name: ruleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisFirewallRule'
          description: Successfully found the rule
      tags:
      - Redis
      - FirewallRules
      x-ms-examples:
        RedisCacheFirewallRuleGet:
          parameters:
            api-version: 2018-03-01
            cacheName: cache1
            resourceGroupName: rg1
            ruleName: rule1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule1
                name: cache1/rule1
                properties:
                  endIP: 192.168.1.4
                  startIP: 192.168.1.1
                type: Microsoft.Cache/Redis/firewallRules
      x-openapi-router-controller: openapi_server.controllers.redis_controller
    put:
      description: Create or update a redis cache firewall rule
      operationId: firewall_rules_create_or_update
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the firewall rule.
        in: path
        name: ruleName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisFirewallRuleCreateParameters'
        description: Parameters supplied to the create or update redis firewall rule
          operation.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisFirewallRule'
          description: Resource was successfully updated
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisFirewallRule'
          description: Resource was successfully created
      tags:
      - Redis
      - FirewallRules
      x-ms-examples:
        RedisCacheFirewallRuleCreate:
          parameters:
            api-version: 2018-03-01
            cacheName: cache1
            parameters:
              properties:
                endIP: 192.168.1.4
                startIP: 192.168.1.1
            resourceGroupName: rg1
            ruleName: rule1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule1
                name: cache1/rule1
                properties:
                  endIP: 192.168.1.4
                  startIP: 192.168.1.1
                type: Microsoft.Cache/Redis/firewallRules
            "201":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/firewallRules/rule1
                name: cache1/rule1
                properties:
                  endIP: 192.168.1.4
                  startIP: 192.168.1.1
                type: Microsoft.Cache/Redis/firewallRules
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/patchSchedules:
    get:
      description: Gets all patch schedules in the specified redis cache (there is
        only one).
      operationId: patch_schedules_list_by_redis_resource
      parameters:
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisPatchScheduleListResult'
          description: Successfully got the current patch schedules
      tags:
      - Redis
      - PatchSchedules
      x-ms-examples:
        RedisCachePatchSchedulesList:
          parameters:
            api-version: 2018-03-01
            cacheName: cache1
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default
                  name: default
                  properties:
                    scheduleEntries:
                    - dayOfWeek: Monday
                      maintenanceWindow: PT5H
                      startHourUtc: 12
                    - dayOfWeek: Tuesday
                      startHourUtc: 12
                  type: Microsoft.Cache/Redis/patchSchedules
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}:
    delete:
      description: Deletes a Redis cache.
      operationId: redis_delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The redis cache was successfully deleted.
        "202":
          content: {}
          description: The redis cache 'delete' operation was successfully enqueued;
            follow the Location header to poll for final outcome.
        "204":
          content: {}
          description: The redis cache was successfully deleted.
      tags:
      - Redis
      x-ms-examples:
        RedisCacheDelete:
          parameters:
            api-version: 2018-03-01
            name: cache1
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200": {}
            "202":
              headers:
                location: https://management.azure.com/subscriptions/subid/providers/Microsoft.Cache/...pathToOperationResult...
            "204": {}
      x-ms-long-running-operation: true
      x-openapi-router-controller: openapi_server.controllers.redis_controller
    get:
      description: Gets a Redis cache (resource description).
      operationId: redis_get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisResource'
          description: The redis cache was successfully found.
      tags:
      - Redis
      x-ms-examples:
        RedisCacheGet:
          parameters:
            api-version: 2018-03-01
            name: cache1
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1
                location: West US
                name: cache1
                properties:
                  enableNonSslPort: true
                  hostName: cache1.redis.cache.windows.net
                  linkedServers:
                  - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2
                  port: 6379
                  provisioningState: Creating
                  redisConfiguration: {}
                  redisVersion: "3.2"
                  sku:
                    capacity: 6
                    family: C
                    name: Standard
                  sslPort: 6380
                tags: {}
                type: Microsoft.Cache/Redis
      x-openapi-router-controller: openapi_server.controllers.redis_controller
    patch:
      description: Update an existing Redis cache.
      operationId: redis_update
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisUpdateParameters'
        description: Parameters supplied to the Update Redis operation.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisResource'
          description: The existing redis cache was successfully updated. Check provisioningState
            to see detailed status.
      tags:
      - Redis
      x-ms-examples:
        RedisCacheUpdate:
          parameters:
            api-version: 2018-03-01
            name: cache1
            parameters:
              properties:
                enableNonSslPort: true
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1
                location: West US
                name: cache1
                properties:
                  accessKeys:
                    primaryKey: secretkey1
                    secondaryKey: secretKey2
                  enableNonSslPort: true
                  hostName: cache1.redis.cache.windows.net
                  port: 6379
                  provisioningState: Succeeded
                  redisConfiguration:
                    maxclients: "1000"
                    maxmemory-delta: "50"
                    maxmemory-reserved: "50"
                  redisVersion: "3.0"
                  sku:
                    capacity: 1
                    family: P
                    name: Premium
                  sslPort: 6380
                tags: {}
                type: Microsoft.Cache/Redis
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.redis_controller
    put:
      description: "Create or replace (overwrite/recreate, with potential downtime)\
        \ an existing Redis cache."
      operationId: redis_create
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisCreateParameters'
        description: Parameters supplied to the Create Redis operation.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisResource'
          description: The existing redis cache was successfully updated. Check provisioningState
            to see detailed status.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisResource'
          description: The new redis cache was successfully created. Check provisioningState
            to see detailed status.
      tags:
      - Redis
      x-ms-examples:
        RedisCacheCreate:
          parameters:
            api-version: 2018-03-01
            name: cache1
            parameters:
              location: West US
              properties:
                enableNonSslPort: true
                minimumTlsVersion: "1.2"
                redisConfiguration:
                  maxmemory-policy: allkeys-lru
                shardCount: 2
                sku:
                  capacity: 1
                  family: P
                  name: Premium
                staticIP: 192.168.0.5
                subnetId: /subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualNetworks/network1/subnets/subnet1
              zones:
              - "1"
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1
                location: West US
                name: cache1
                properties:
                  accessKeys:
                    primaryKey: secretkey1
                    secondaryKey: secretKey2
                  enableNonSslPort: false
                  hostName: cache1.redis.cache.windows.net
                  minimumTlsVersion: "1.2"
                  port: 6379
                  provisioningState: Succeeded
                  redisConfiguration:
                    maxclients: "1000"
                    maxmemory-delta: "50"
                    maxmemory-reserved: "50"
                  redisVersion: "3.0"
                  sku:
                    capacity: 1
                    family: P
                    name: Premium
                  sslPort: 6380
                tags: {}
                type: Microsoft.Cache/Redis
                zones:
                - "1"
            "201":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1
                location: West US
                name: cache1
                properties:
                  accessKeys:
                    primaryKey: secretkey1
                    secondaryKey: secretKey2
                  enableNonSslPort: false
                  hostName: cache1.redis.cache.windows.net
                  minimumTlsVersion: "1.2"
                  port: 6379
                  provisioningState: Succeeded
                  redisConfiguration:
                    maxmemory-policy: allkeys-lru
                  redisVersion: "3.0"
                  sku:
                    capacity: 1
                    family: P
                    name: Premium
                  sslPort: 6380
                tags: {}
                type: Microsoft.Cache/Redis
                zones:
                - "1"
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/export:
    post:
      description: Export data from the redis cache to blobs in a container.
      operationId: redis_export_data
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRDBParameters'
        description: Parameters for Redis export operation.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content: {}
          description: Export operation succeeded.
        "202":
          content: {}
          description: Export operation successfully enqueued; follow the Location
            header to poll for final outcome.
        "204":
          content: {}
          description: Export operation succeeded.
      tags:
      - Redis
      x-ms-examples:
        RedisCacheExport:
          parameters:
            api-version: 2018-03-01
            name: cache1
            parameters:
              container: https://contosostorage.blob.core.window.net/urltoBlobContainer?sasKeyParameters
              format: RDB
              prefix: datadump1
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200": {}
            "202":
              headers:
                location: https://management.azure.com/subscriptions/subid/providers/Microsoft.Cache/...pathToOperationResult...
            "204": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/forceReboot:
    post:
      description: Reboot specified Redis node(s). This operation requires write permission
        to the cache resource. There can be potential data loss.
      operationId: redis_force_reboot
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisRebootParameters'
        description: Specifies which Redis node(s) to reboot.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisForceRebootResponse'
          description: Reboot operation successfully enqueued
      tags:
      - Redis
      x-ms-examples:
        RedisCacheForceReboot:
          parameters:
            api-version: 2018-03-01
            name: cache1
            parameters:
              rebootType: AllNodes
              shardId: 0
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                message: reboot operation enqueued
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/import:
    post:
      description: Import data into Redis cache.
      operationId: redis_import_data
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportRDBParameters'
        description: Parameters for Redis import operation.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content: {}
          description: Import operation succeeded.
        "202":
          content: {}
          description: Import operation successfully enqueued; follow the Location
            header to poll for final outcome.
        "204":
          content: {}
          description: Import operation succeeded.
      tags:
      - Redis
      x-ms-examples:
        RedisCacheImport:
          parameters:
            api-version: 2018-03-01
            name: cache1
            parameters:
              files:
              - http://fileuris.contoso.com/pathtofile1
              format: RDB
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200": {}
            "202":
              headers:
                location: https://management.azure.com/subscriptions/subid/providers/Microsoft.Cache/...pathToOperationResult...
            "204": {}
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers:
    get:
      description: Gets the list of linked servers associated with this redis cache
        (requires Premium SKU).
      operationId: linked_server_list
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisLinkedServerWithPropertiesList'
          description: Response of get linked servers.
      tags:
      - Redis
      x-ms-examples:
        LinkedServer_List:
          parameters:
            api-version: 2018-03-01
            name: cache1
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
              - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2
                name: cache2
                properties:
                  linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2
                  linkedRedisCacheLocation: West US
                  provisioningState: Succeeded
                  serverRole: Secondary
                type: Microsoft.Cache/Redis/linkedServers
              - id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache3
                name: cache3
                properties:
                  linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache3
                  linkedRedisCacheLocation: West US
                  provisioningState: Succeeded
                  serverRole: Secondary
                type: Microsoft.Cache/Redis/linkedServers
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers/{linkedServerName}
  : delete:
      description: Deletes the linked server from a redis cache (requires Premium
        SKU).
      operationId: linked_server_delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The name of the linked server that is being added to the Redis
          cache.
        in: path
        name: linkedServerName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Linked server was successfully deleted.
      tags:
      - Redis
      x-ms-examples:
        LinkedServerDelete:
          parameters:
            api-version: 2018-03-01
            linkedServerName: cache2
            name: cache1
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200": {}
      x-openapi-router-controller: openapi_server.controllers.redis_controller
    get:
      description: Gets the detailed information about a linked server of a redis
        cache (requires Premium SKU).
      operationId: linked_server_get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The name of the linked server.
        in: path
        name: linkedServerName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisLinkedServerWithProperties'
          description: Response of get linked server.
      tags:
      - Redis
      x-ms-examples:
        LinkedServer_Get:
          parameters:
            api-version: 2018-03-01
            linkedServerName: cache2
            name: cache1
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2
                name: cache2
                properties:
                  linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2
                  linkedRedisCacheLocation: West US
                  provisioningState: Succeeded
                  serverRole: Secondary
                type: Microsoft.Cache/Redis/linkedServers
      x-openapi-router-controller: openapi_server.controllers.redis_controller
    put:
      description: Adds a linked server to the Redis cache (requires Premium SKU).
      operationId: linked_server_create
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The name of the linked server that is being added to the Redis
          cache.
        in: path
        name: linkedServerName
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisLinkedServerCreateParameters'
        description: Parameters supplied to the Create Linked server operation.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisLinkedServerWithProperties'
          description: The linked server was successfully added.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisLinkedServerWithProperties'
          description: The linked server was successfully added.
      tags:
      - Redis
      x-ms-examples:
        LinkedServer_Create:
          parameters:
            api-version: 2018-03-01
            linkedServerName: cache2
            name: cache1
            parameters:
              properties:
                linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2
                linkedRedisCacheLocation: West US
                serverRole: Secondary
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2
                name: cache2
                properties:
                  linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2
                  linkedRedisCacheLocation: West US
                  provisioningState: Creating
                  serverRole: Secondary
                type: Microsoft.Cache/Redis/linkedServers
            "201":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/linkedServers/cache2
                name: cache2
                properties:
                  linkedRedisCacheId: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache2
                  linkedRedisCacheLocation: West US
                  provisioningState: Creating
                  serverRole: Secondary
                type: Microsoft.Cache/Redis/linkedServers
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/listKeys:
    post:
      description: Retrieve a Redis cache's access keys. This operation requires write
        permission to the cache resource.
      operationId: redis_list_keys
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisAccessKeys'
          description: Lists the keys for the specified Redis cache.
      tags:
      - Redis
      x-ms-examples:
        RedisCacheListKeys:
          parameters:
            api-version: 2018-03-01
            name: cache1
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                primaryKey: secretkey1
                secondaryKey: secretKey2
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/listUpgradeNotifications
  : get:
      description: Gets any upgrade notifications for a Redis cache.
      operationId: redis_list_upgrade_notifications
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      - description: how many minutes in past to look for upgrade notifications
        in: query
        name: history
        required: true
        schema:
          format: double
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'
          description: All upgrade notifications in given time range
      tags:
      - Redis
      x-ms-examples:
        RedisCacheGet:
          parameters:
            api-version: 2018-03-01
            history: "5000"
            name: cache1
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                value:
                - name: notification1
                  timestamp: 2017-02-16T23:20:50.52Z
                  upsellNotification: {}
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/{default}
  : delete:
      description: Deletes the patching schedule of a redis cache (requires Premium
        SKU).
      operationId: patch_schedules_delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Default string modeled as parameter for auto generation to work
          correctly.
        in: path
        name: default
        required: true
        schema:
          enum:
          - default
          type: string
          x-ms-enum:
            modelAsString: true
            name: defaultName
        x-ms-enum:
          modelAsString: true
          name: defaultName
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success.
        "204":
          content: {}
          description: Success.
      tags:
      - Redis
      - PatchSchedules
      x-ms-examples:
        RedisCachePatchSchedulesDelete:
          parameters:
            api-version: 2018-03-01
            default: default
            name: cache1
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200": {}
            "204": {}
      x-openapi-router-controller: openapi_server.controllers.redis_controller
    get:
      description: Gets the patching schedule of a redis cache (requires Premium SKU).
      operationId: patch_schedules_get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Default string modeled as parameter for auto generation to work
          correctly.
        in: path
        name: default
        required: true
        schema:
          enum:
          - default
          type: string
          x-ms-enum:
            modelAsString: true
            name: defaultName
        x-ms-enum:
          modelAsString: true
          name: defaultName
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisPatchSchedule'
          description: Response of get patch schedules.
      tags:
      - Redis
      - PatchSchedules
      x-ms-examples:
        RedisCachePatchSchedulesGet:
          parameters:
            api-version: 2018-03-01
            default: default
            name: cache1
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default
                name: default
                properties:
                  scheduleEntries:
                  - dayOfWeek: Monday
                    maintenanceWindow: PT5H
                    startHourUtc: 12
                  - dayOfWeek: Tuesday
                    startHourUtc: 12
                type: Microsoft.Cache/Redis/patchSchedules
      x-openapi-router-controller: openapi_server.controllers.redis_controller
    put:
      description: Create or replace the patching schedule for Redis cache (requires
        Premium SKU).
      operationId: patch_schedules_create_or_update
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Default string modeled as parameter for auto generation to work
          correctly.
        in: path
        name: default
        required: true
        schema:
          enum:
          - default
          type: string
          x-ms-enum:
            modelAsString: true
            name: defaultName
        x-ms-enum:
          modelAsString: true
          name: defaultName
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisPatchSchedule'
        description: Parameters to set the patching schedule for Redis cache.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisPatchSchedule'
          description: The patch schedule was successfully updated.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisPatchSchedule'
          description: The patch schedule was successfully created.
      tags:
      - Redis
      - PatchSchedules
      x-ms-examples:
        RedisCachePatchSchedulesCreateOrUpdate:
          parameters:
            api-version: 2018-03-01
            default: default
            name: cache1
            parameters:
              properties:
                scheduleEntries:
                - dayOfWeek: Monday
                  maintenanceWindow: PT5H
                  startHourUtc: 12
                - dayOfWeek: Tuesday
                  startHourUtc: 12
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default
                name: default
                properties:
                  scheduleEntries:
                  - dayOfWeek: Monday
                    maintenanceWindow: PT5H
                    startHourUtc: 12
                  - dayOfWeek: Tuesday
                    startHourUtc: 12
                type: Microsoft.Cache/Redis/patchSchedules
            "201":
              body:
                id: /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Cache/Redis/cache1/patchSchedules/default
                name: default
                properties:
                  scheduleEntries:
                  - dayOfWeek: Monday
                    maintenanceWindow: PT5H
                    startHourUtc: 12
                  - dayOfWeek: Tuesday
                    startHourUtc: 12
                type: Microsoft.Cache/Redis/patchSchedules
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.redis_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/regenerateKey:
    post:
      description: Regenerate Redis cache's access keys. This operation requires write
        permission to the cache resource.
      operationId: redis_regenerate_key
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Redis cache.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Client Api Version.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: Gets subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisRegenerateKeyParameters'
        description: Specifies which key to regenerate.
        required: true
        x-body-name: parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisAccessKeys'
          description: Lists the regenerated keys for Redis Cache
      tags:
      - Redis
      x-ms-examples:
        RedisCacheRegenerateKey:
          parameters:
            api-version: 2018-03-01
            name: cache1
            parameters:
              keyType: Primary
            resourceGroupName: rg1
            subscriptionId: subid
          responses:
            "200":
              body:
                primaryKey: secretkey1
                secondaryKey: secretKey2
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.redis_controller
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: Gets subscription credentials which uniquely identify the Microsoft
        Azure subscription. The subscription ID forms part of the URI for every service
        call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    CheckNameAvailabilityParameters:
      description: Parameters body to pass for resource name availability check.
      example:
        name: name
        type: type
      properties:
        name:
          description: Resource name.
          title: name
          type: string
        type:
          description: Resource type. The only legal value of this property for checking
            redis cache name availability is 'Microsoft.Cache/redis'.
          title: type
          type: string
      required:
      - name
      - type
      title: CheckNameAvailabilityParameters
      type: object
    ExportRDBParameters:
      description: Parameters for Redis export operation.
      example:
        container: container
        prefix: prefix
        format: format
      properties:
        container:
          description: Container name to export to.
          title: container
          type: string
        format:
          description: File format.
          title: format
          type: string
        prefix:
          description: Prefix to use for exported files.
          title: prefix
          type: string
      required:
      - container
      - prefix
      title: ExportRDBParameters
      type: object
    ImportRDBParameters:
      description: Parameters for Redis import operation.
      example:
        format: format
        files:
        - files
        - files
      properties:
        files:
          description: files to import.
          items:
            type: string
          title: files
          type: array
        format:
          description: File format.
          title: format
          type: string
      required:
      - files
      title: ImportRDBParameters
      type: object
    NotificationListResponse:
      description: The response of listUpgradeNotifications.
      example:
        value:
        - name: name
          upsellNotification:
            key: upsellNotification
          timestamp: 2000-01-23T04:56:07.000+00:00
        - name: name
          upsellNotification:
            key: upsellNotification
          timestamp: 2000-01-23T04:56:07.000+00:00
        nextLink: nextLink
      properties:
        nextLink:
          description: Link for next set of notifications.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: List of all notifications.
          items:
            $ref: '#/components/schemas/UpgradeNotification'
          title: value
          type: array
      title: NotificationListResponse
      type: object
    Operation:
      description: REST API operation
      example:
        display:
          provider: provider
          resource: resource
          description: description
          operation: operation
        name: name
      properties:
        display:
          $ref: '#/components/schemas/Operation_display'
        name:
          description: "Operation name: {provider}/{resource}/{operation}"
          title: name
          type: string
      title: Operation
      type: object
    OperationListResult:
      description: Result of the request to list REST API operations. It contains
        a list of operations and a URL nextLink to get the next set of results.
      example:
        value:
        - display:
            provider: provider
            resource: resource
            description: description
            operation: operation
          name: name
        - display:
            provider: provider
            resource: resource
            description: description
            operation: operation
          name: name
        nextLink: nextLink
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there
            are any.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: List of operations supported by the resource provider.
          items:
            $ref: '#/components/schemas/Operation'
          title: value
          type: array
      title: OperationListResult
      type: object
    ProxyResource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: The resource model definition for a ARM proxy resource. It will
        have everything other than required location and tags
      title: ProxyResource
    RedisAccessKeys:
      description: Redis cache access keys.
      example:
        secondaryKey: secondaryKey
        primaryKey: primaryKey
      properties:
        primaryKey:
          description: The current primary key that clients can use to authenticate
            with Redis cache.
          readOnly: true
          title: primaryKey
          type: string
        secondaryKey:
          description: The current secondary key that clients can use to authenticate
            with Redis cache.
          readOnly: true
          title: secondaryKey
          type: string
      title: RedisAccessKeys
      type: object
    RedisCommonProperties:
      description: Create/Update/Get common properties of the redis cache.
      properties:
        enableNonSslPort:
          description: Specifies whether the non-ssl Redis server port (6379) is enabled.
          title: enableNonSslPort
          type: boolean
        minimumTlsVersion:
          description: "Optional: requires clients to use a specified TLS version\
            \ (or higher) to connect (e,g, '1.0', '1.1', '1.2')"
          enum:
          - "1.0"
          - "1.1"
          - "1.2"
          title: minimumTlsVersion
          type: string
          x-ms-enum:
            modelAsString: true
            name: TlsVersion
        redisConfiguration:
          additionalProperties:
            type: string
          description: "All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value\
            \ etc."
          title: redisConfiguration
          type: object
        shardCount:
          description: The number of shards to be created on a Premium Cluster Cache.
          format: int32
          title: shardCount
          type: integer
        tenantSettings:
          additionalProperties:
            type: string
          description: A dictionary of tenant settings
          title: tenantSettings
          type: object
      title: RedisCommonProperties
      type: object
      x-ms-external: true
    RedisCreateParameters:
      description: Parameters supplied to the Create Redis operation.
      example:
        location: location
        zones:
        - zones
        - zones
        properties:
          subnetId: subnetId
          staticIP: staticIP
          sku:
            name: Basic
            family: C
            capacity: 0
        tags:
          key: tags
      properties:
        location:
          description: The geo-location where the resource lives
          title: location
          type: string
          x-ms-mutability:
          - read
          - create
        properties:
          $ref: '#/components/schemas/RedisCreateProperties'
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          title: tags
          type: object
        zones:
          description: A list of availability zones denoting where the resource needs
            to come from.
          items:
            type: string
          title: zones
          type: array
      required:
      - location
      - properties
      title: RedisCreateParameters
      type: object
    RedisCreateProperties:
      allOf:
      - $ref: '#/components/schemas/RedisCommonProperties'
      description: Properties supplied to Create Redis operation.
      example:
        subnetId: subnetId
        staticIP: staticIP
        sku:
          name: Basic
          family: C
          capacity: 0
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
        staticIP:
          description: Static IP address. Required when deploying a Redis cache inside
            an existing Azure Virtual Network.
          pattern: ^\d+\.\d+\.\d+\.\d+$
          title: staticIP
          type: string
        subnetId:
          description: "The full resource ID of a subnet in a virtual network to deploy\
            \ the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1"
          pattern: "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$"
          title: subnetId
          type: string
      required:
      - sku
      title: RedisCreateProperties
      x-ms-external: true
    RedisFirewallRule:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: "A firewall rule on a redis cache has a name, and describes a contiguous\
        \ range of IP addresses permitted to connect"
      example:
        properties:
          endIP: endIP
          startIP: startIP
      properties:
        properties:
          $ref: '#/components/schemas/RedisFirewallRuleProperties'
      required:
      - properties
      title: RedisFirewallRule
    RedisFirewallRuleCreateParameters:
      description: Parameters required for creating a firewall rule on redis cache.
      example:
        properties:
          endIP: endIP
          startIP: startIP
      properties:
        properties:
          $ref: '#/components/schemas/RedisFirewallRuleProperties'
      required:
      - properties
      title: RedisFirewallRuleCreateParameters
      type: object
    RedisFirewallRuleListResult:
      description: The response of list firewall rules Redis operation.
      example:
        value:
        - properties:
            endIP: endIP
            startIP: startIP
        - properties:
            endIP: endIP
            startIP: startIP
        nextLink: nextLink
      properties:
        nextLink:
          description: Link for next page of results.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: Results of the list firewall rules operation.
          items:
            $ref: '#/components/schemas/RedisFirewallRule'
          title: value
          type: array
      title: RedisFirewallRuleListResult
      type: object
    RedisFirewallRuleProperties:
      description: Specifies a range of IP addresses permitted to connect to the cache
      example:
        endIP: endIP
        startIP: startIP
      properties:
        endIP:
          description: highest IP address included in the range
          title: endIP
          type: string
        startIP:
          description: lowest IP address included in the range
          title: startIP
          type: string
      required:
      - endIP
      - startIP
      title: RedisFirewallRuleProperties
      type: object
    RedisForceRebootResponse:
      description: Response to force reboot for Redis cache.
      example:
        message: message
      properties:
        message:
          description: Status message
          readOnly: true
          title: message
          type: string
      title: RedisForceRebootResponse
      type: object
    RedisLinkedServer:
      description: Linked server Id
      example:
        id: id
      properties:
        id:
          description: Linked server Id.
          readOnly: true
          title: id
          type: string
      title: RedisLinkedServer
      type: object
    RedisLinkedServerCreateParameters:
      description: Parameter required for creating a linked server to redis cache.
      example:
        properties:
          serverRole: Primary
          linkedRedisCacheId: linkedRedisCacheId
          linkedRedisCacheLocation: linkedRedisCacheLocation
      properties:
        properties:
          $ref: '#/components/schemas/RedisLinkedServerCreateProperties'
      required:
      - properties
      title: RedisLinkedServerCreateParameters
      type: object
    RedisLinkedServerCreateProperties:
      description: Create properties for a linked server
      example:
        serverRole: Primary
        linkedRedisCacheId: linkedRedisCacheId
        linkedRedisCacheLocation: linkedRedisCacheLocation
      properties:
        linkedRedisCacheId:
          description: Fully qualified resourceId of the linked redis cache.
          title: linkedRedisCacheId
          type: string
        linkedRedisCacheLocation:
          description: Location of the linked redis cache.
          title: linkedRedisCacheLocation
          type: string
        serverRole:
          description: Role of the linked server.
          enum:
          - Primary
          - Secondary
          title: serverRole
          type: string
          x-ms-enum:
            modelAsString: false
            name: ReplicationRole
      required:
      - linkedRedisCacheId
      - linkedRedisCacheLocation
      - serverRole
      title: RedisLinkedServerCreateProperties
      type: object
    RedisLinkedServerProperties:
      allOf:
      - $ref: '#/components/schemas/RedisLinkedServerCreateProperties'
      description: Properties of a linked server to be returned in get/put response
      example:
        provisioningState: provisioningState
      properties:
        provisioningState:
          description: Terminal state of the link between primary and secondary redis
            cache.
          readOnly: true
          title: provisioningState
          type: string
      title: RedisLinkedServerProperties
    RedisLinkedServerWithProperties:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: Response to put/get linked server (with properties) for Redis cache.
      example:
        properties:
          provisioningState: provisioningState
      properties:
        properties:
          $ref: '#/components/schemas/RedisLinkedServerProperties'
      title: RedisLinkedServerWithProperties
    RedisLinkedServerWithPropertiesList:
      description: List of linked servers (with properties) of a Redis cache.
      example:
        value:
        - properties:
            provisioningState: provisioningState
        - properties:
            provisioningState: provisioningState
        nextLink: nextLink
      properties:
        nextLink:
          description: Link for next set.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: List of linked servers (with properties) of a Redis cache.
          items:
            $ref: '#/components/schemas/RedisLinkedServerWithProperties'
          title: value
          type: array
      title: RedisLinkedServerWithPropertiesList
      type: object
    RedisListResult:
      description: The response of list Redis operation.
      example:
        value:
        - zones:
          - zones
          - zones
          properties:
            hostName: hostName
            redisVersion: redisVersion
            accessKeys:
              secondaryKey: secondaryKey
              primaryKey: primaryKey
            port: 0
            linkedServers:
            - id: id
            - id: id
            provisioningState: Creating
            sslPort: 6
        - zones:
          - zones
          - zones
          properties:
            hostName: hostName
            redisVersion: redisVersion
            accessKeys:
              secondaryKey: secondaryKey
              primaryKey: primaryKey
            port: 0
            linkedServers:
            - id: id
            - id: id
            provisioningState: Creating
            sslPort: 6
        nextLink: nextLink
      properties:
        nextLink:
          description: Link for next page of results.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: List of Redis cache instances.
          items:
            $ref: '#/components/schemas/RedisResource'
          title: value
          type: array
      title: RedisListResult
      type: object
    RedisPatchSchedule:
      allOf:
      - $ref: '#/components/schemas/ProxyResource'
      description: Response to put/get patch schedules for Redis cache.
      example:
        properties:
          scheduleEntries:
          - maintenanceWindow: maintenanceWindow
            dayOfWeek: Monday
            startHourUtc: 0
          - maintenanceWindow: maintenanceWindow
            dayOfWeek: Monday
            startHourUtc: 0
      properties:
        properties:
          $ref: '#/components/schemas/ScheduleEntries'
      required:
      - properties
      title: RedisPatchSchedule
    RedisPatchScheduleListResult:
      description: The response of list patch schedules Redis operation.
      example:
        value:
        - properties:
            scheduleEntries:
            - maintenanceWindow: maintenanceWindow
              dayOfWeek: Monday
              startHourUtc: 0
            - maintenanceWindow: maintenanceWindow
              dayOfWeek: Monday
              startHourUtc: 0
        - properties:
            scheduleEntries:
            - maintenanceWindow: maintenanceWindow
              dayOfWeek: Monday
              startHourUtc: 0
            - maintenanceWindow: maintenanceWindow
              dayOfWeek: Monday
              startHourUtc: 0
        nextLink: nextLink
      properties:
        nextLink:
          description: Link for next page of results.
          readOnly: true
          title: nextLink
          type: string
        value:
          description: Results of the list patch schedules operation.
          items:
            $ref: '#/components/schemas/RedisPatchSchedule'
          title: value
          type: array
      title: RedisPatchScheduleListResult
      type: object
    RedisProperties:
      allOf:
      - $ref: '#/components/schemas/RedisCreateProperties'
      description: Properties of the redis cache.
      example:
        hostName: hostName
        redisVersion: redisVersion
        accessKeys:
          secondaryKey: secondaryKey
          primaryKey: primaryKey
        port: 0
        linkedServers:
        - id: id
        - id: id
        provisioningState: Creating
        sslPort: 6
      properties:
        accessKeys:
          $ref: '#/components/schemas/RedisAccessKeys'
        hostName:
          description: Redis host name.
          readOnly: true
          title: hostName
          type: string
        linkedServers:
          description: List of the linked servers associated with the cache
          items:
            $ref: '#/components/schemas/RedisLinkedServer'
          readOnly: true
          title: linkedServers
          type: array
        port:
          description: Redis non-SSL port.
          format: int32
          readOnly: true
          title: port
          type: integer
        provisioningState:
          description: Redis instance provisioning status.
          enum:
          - Creating
          - Deleting
          - Disabled
          - Failed
          - Linking
          - Provisioning
          - RecoveringScaleFailure
          - Scaling
          - Succeeded
          - Unlinking
          - Unprovisioning
          - Updating
          readOnly: true
          title: provisioningState
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        redisVersion:
          description: Redis version.
          readOnly: true
          title: redisVersion
          type: string
        sslPort:
          description: Redis SSL port.
          format: int32
          readOnly: true
          title: sslPort
          type: integer
      title: RedisProperties
      x-ms-external: true
    RedisRebootParameters:
      description: Specifies which Redis node(s) to reboot.
      example:
        rebootType: PrimaryNode
        shardId: 0
      properties:
        rebootType:
          description: Which Redis node(s) to reboot. Depending on this value data
            loss is possible.
          enum:
          - PrimaryNode
          - SecondaryNode
          - AllNodes
          title: rebootType
          type: string
          x-ms-enum:
            modelAsString: true
            name: RebootType
        shardId:
          description: "If clustering is enabled, the ID of the shard to be rebooted."
          format: int32
          title: shardId
          type: integer
      required:
      - rebootType
      title: RedisRebootParameters
      type: object
    RedisRegenerateKeyParameters:
      description: Specifies which Redis access keys to reset.
      example:
        keyType: Primary
      properties:
        keyType:
          description: The Redis access key to regenerate.
          enum:
          - Primary
          - Secondary
          title: keyType
          type: string
          x-ms-enum:
            modelAsString: false
            name: RedisKeyType
      required:
      - keyType
      title: RedisRegenerateKeyParameters
      type: object
    RedisResource:
      allOf:
      - $ref: '#/components/schemas/TrackedResource'
      description: A single Redis item in List or Get Operation.
      example:
        zones:
        - zones
        - zones
        properties:
          hostName: hostName
          redisVersion: redisVersion
          accessKeys:
            secondaryKey: secondaryKey
            primaryKey: primaryKey
          port: 0
          linkedServers:
          - id: id
          - id: id
          provisioningState: Creating
          sslPort: 6
      properties:
        properties:
          $ref: '#/components/schemas/RedisProperties'
        zones:
          description: A list of availability zones denoting where the resource needs
            to come from.
          items:
            type: string
          title: zones
          type: array
      required:
      - properties
      title: RedisResource
    RedisUpdateParameters:
      description: Parameters supplied to the Update Redis operation.
      example:
        properties:
          sku:
            name: Basic
            family: C
            capacity: 0
        tags:
          key: tags
      properties:
        properties:
          $ref: '#/components/schemas/RedisUpdateProperties'
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          title: tags
          type: object
      title: RedisUpdateParameters
      type: object
    RedisUpdateProperties:
      allOf:
      - $ref: '#/components/schemas/RedisCommonProperties'
      description: Patchable properties of the redis cache.
      example:
        sku:
          name: Basic
          family: C
          capacity: 0
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
      title: RedisUpdateProperties
      x-ms-external: true
    Resource:
      description: The Resource definition.
      properties:
        id:
          description: Resource ID.
          readOnly: true
          title: id
          type: string
        name:
          description: Resource name.
          readOnly: true
          title: name
          type: string
        type:
          description: Resource type.
          readOnly: true
          title: type
          type: string
      title: Resource
      type: object
      x-ms-azure-resource: true
    ScheduleEntries:
      description: List of patch schedules for a Redis cache.
      example:
        scheduleEntries:
        - maintenanceWindow: maintenanceWindow
          dayOfWeek: Monday
          startHourUtc: 0
        - maintenanceWindow: maintenanceWindow
          dayOfWeek: Monday
          startHourUtc: 0
      properties:
        scheduleEntries:
          description: List of patch schedules for a Redis cache.
          items:
            $ref: '#/components/schemas/ScheduleEntry'
          title: scheduleEntries
          type: array
          x-ms-client-name: ScheduleEntries
      required:
      - scheduleEntries
      title: ScheduleEntries
      type: object
    ScheduleEntry:
      description: Patch schedule entry for a Premium Redis Cache.
      example:
        maintenanceWindow: maintenanceWindow
        dayOfWeek: Monday
        startHourUtc: 0
      properties:
        dayOfWeek:
          description: Day of the week when a cache can be patched.
          enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
          - Everyday
          - Weekend
          title: dayOfWeek
          type: string
          x-ms-enum:
            modelAsString: false
            name: DayOfWeek
        maintenanceWindow:
          description: 'ISO8601 timespan specifying how much time cache patching can
            take. '
          format: duration
          title: maintenanceWindow
          type: string
        startHourUtc:
          description: Start hour after which cache patching can start.
          format: int32
          title: startHourUtc
          type: integer
      required:
      - dayOfWeek
      - startHourUtc
      title: ScheduleEntry
      type: object
    Sku:
      description: SKU parameters supplied to the create Redis operation.
      example:
        name: Basic
        family: C
        capacity: 0
      properties:
        capacity:
          description: "The size of the Redis cache to deploy. Valid values: for C\
            \ (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family\
            \ (1, 2, 3, 4)."
          format: int32
          title: capacity
          type: integer
        family:
          description: "The SKU family to use. Valid values: (C, P). (C = Basic/Standard,\
            \ P = Premium)."
          enum:
          - C
          - P
          title: family
          type: string
          x-ms-enum:
            modelAsString: true
            name: SkuFamily
        name:
          description: "The type of Redis cache to deploy. Valid values: (Basic, Standard,\
            \ Premium)"
          enum:
          - Basic
          - Standard
          - Premium
          title: name
          type: string
          x-ms-enum:
            modelAsString: true
            name: SkuName
      required:
      - capacity
      - family
      - name
      title: Sku
      type: object
    TrackedResource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      description: The resource model definition for a ARM tracked top level resource
      properties:
        location:
          description: The geo-location where the resource lives
          title: location
          type: string
          x-ms-mutability:
          - read
          - create
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          title: tags
          type: object
          x-ms-mutability:
          - read
          - create
          - update
      required:
      - location
      title: TrackedResource
    UpgradeNotification:
      description: Properties of upgrade notification.
      example:
        name: name
        upsellNotification:
          key: upsellNotification
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: Name of upgrade notification.
          readOnly: true
          title: name
          type: string
        timestamp:
          description: Timestamp when upgrade notification occurred.
          format: date-time
          readOnly: true
          title: timestamp
          type: string
        upsellNotification:
          additionalProperties:
            type: string
          description: Details about this upgrade notification
          readOnly: true
          title: upsellNotification
          type: object
      title: UpgradeNotification
      type: object
    Operation_display:
      description: The object that describes the operation.
      example:
        provider: provider
        resource: resource
        description: description
        operation: operation
      properties:
        description:
          description: Friendly name of the operation
          title: description
          type: string
        operation:
          description: "Operation type: read, write, delete, listKeys/action, etc."
          title: operation
          type: string
        provider:
          description: Friendly name of the resource provider
          title: provider
          type: string
        resource:
          description: Resource type on which the operation is performed.
          title: resource
          type: string
      title: Operation_display
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_azure_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_azure_auth
x-original-swagger-version: "2.0"
