/**
 * RedisManagementClient
 * REST API for Azure Redis Cache Service.
 *
 * The version of the OpenAPI document: 2017-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRedisFirewallRuleProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRedisFirewallRuleProperties::OAIRedisFirewallRuleProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRedisFirewallRuleProperties::OAIRedisFirewallRuleProperties() {
    this->initializeModel();
}

OAIRedisFirewallRuleProperties::~OAIRedisFirewallRuleProperties() {}

void OAIRedisFirewallRuleProperties::initializeModel() {

    m_end_ip_isSet = false;
    m_end_ip_isValid = false;

    m_start_ip_isSet = false;
    m_start_ip_isValid = false;
}

void OAIRedisFirewallRuleProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRedisFirewallRuleProperties::fromJsonObject(QJsonObject json) {

    m_end_ip_isValid = ::OpenAPI::fromJsonValue(m_end_ip, json[QString("endIP")]);
    m_end_ip_isSet = !json[QString("endIP")].isNull() && m_end_ip_isValid;

    m_start_ip_isValid = ::OpenAPI::fromJsonValue(m_start_ip, json[QString("startIP")]);
    m_start_ip_isSet = !json[QString("startIP")].isNull() && m_start_ip_isValid;
}

QString OAIRedisFirewallRuleProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRedisFirewallRuleProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_end_ip_isSet) {
        obj.insert(QString("endIP"), ::OpenAPI::toJsonValue(m_end_ip));
    }
    if (m_start_ip_isSet) {
        obj.insert(QString("startIP"), ::OpenAPI::toJsonValue(m_start_ip));
    }
    return obj;
}

QString OAIRedisFirewallRuleProperties::getEndIp() const {
    return m_end_ip;
}
void OAIRedisFirewallRuleProperties::setEndIp(const QString &end_ip) {
    m_end_ip = end_ip;
    m_end_ip_isSet = true;
}

bool OAIRedisFirewallRuleProperties::is_end_ip_Set() const{
    return m_end_ip_isSet;
}

bool OAIRedisFirewallRuleProperties::is_end_ip_Valid() const{
    return m_end_ip_isValid;
}

QString OAIRedisFirewallRuleProperties::getStartIp() const {
    return m_start_ip;
}
void OAIRedisFirewallRuleProperties::setStartIp(const QString &start_ip) {
    m_start_ip = start_ip;
    m_start_ip_isSet = true;
}

bool OAIRedisFirewallRuleProperties::is_start_ip_Set() const{
    return m_start_ip_isSet;
}

bool OAIRedisFirewallRuleProperties::is_start_ip_Valid() const{
    return m_start_ip_isValid;
}

bool OAIRedisFirewallRuleProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_ip_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRedisFirewallRuleProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_end_ip_isValid && m_start_ip_isValid && true;
}

} // namespace OpenAPI
