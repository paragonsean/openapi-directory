/**
 * RedisManagementClient
 * REST API for Azure Redis Cache Service.
 *
 * The version of the OpenAPI document: 2017-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScheduleEntries.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScheduleEntries::OAIScheduleEntries(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScheduleEntries::OAIScheduleEntries() {
    this->initializeModel();
}

OAIScheduleEntries::~OAIScheduleEntries() {}

void OAIScheduleEntries::initializeModel() {

    m_schedule_entries_isSet = false;
    m_schedule_entries_isValid = false;
}

void OAIScheduleEntries::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScheduleEntries::fromJsonObject(QJsonObject json) {

    m_schedule_entries_isValid = ::OpenAPI::fromJsonValue(m_schedule_entries, json[QString("scheduleEntries")]);
    m_schedule_entries_isSet = !json[QString("scheduleEntries")].isNull() && m_schedule_entries_isValid;
}

QString OAIScheduleEntries::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScheduleEntries::asJsonObject() const {
    QJsonObject obj;
    if (m_schedule_entries.size() > 0) {
        obj.insert(QString("scheduleEntries"), ::OpenAPI::toJsonValue(m_schedule_entries));
    }
    return obj;
}

QList<OAIScheduleEntry> OAIScheduleEntries::getScheduleEntries() const {
    return m_schedule_entries;
}
void OAIScheduleEntries::setScheduleEntries(const QList<OAIScheduleEntry> &schedule_entries) {
    m_schedule_entries = schedule_entries;
    m_schedule_entries_isSet = true;
}

bool OAIScheduleEntries::is_schedule_entries_Set() const{
    return m_schedule_entries_isSet;
}

bool OAIScheduleEntries::is_schedule_entries_Valid() const{
    return m_schedule_entries_isValid;
}

bool OAIScheduleEntries::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schedule_entries.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScheduleEntries::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_schedule_entries_isValid && true;
}

} // namespace OpenAPI
