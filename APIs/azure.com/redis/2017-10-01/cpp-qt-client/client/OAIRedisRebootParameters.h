/**
 * RedisManagementClient
 * REST API for Azure Redis Cache Service.
 *
 * The version of the OpenAPI document: 2017-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRedisRebootParameters.h
 *
 * Specifies which Redis node(s) to reboot.
 */

#ifndef OAIRedisRebootParameters_H
#define OAIRedisRebootParameters_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRedisRebootParameters : public OAIObject {
public:
    OAIRedisRebootParameters();
    OAIRedisRebootParameters(QString json);
    ~OAIRedisRebootParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRebootType() const;
    void setRebootType(const QString &reboot_type);
    bool is_reboot_type_Set() const;
    bool is_reboot_type_Valid() const;

    qint32 getShardId() const;
    void setShardId(const qint32 &shard_id);
    bool is_shard_id_Set() const;
    bool is_shard_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_reboot_type;
    bool m_reboot_type_isSet;
    bool m_reboot_type_isValid;

    qint32 m_shard_id;
    bool m_shard_id_isSet;
    bool m_shard_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRedisRebootParameters)

#endif // OAIRedisRebootParameters_H
