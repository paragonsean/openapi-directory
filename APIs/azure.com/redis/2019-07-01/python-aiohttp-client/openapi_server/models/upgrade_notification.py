# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpgradeNotification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, timestamp: datetime=None, upsell_notification: Dict[str, str]=None):
        """UpgradeNotification - a model defined in OpenAPI

        :param name: The name of this UpgradeNotification.
        :param timestamp: The timestamp of this UpgradeNotification.
        :param upsell_notification: The upsell_notification of this UpgradeNotification.
        """
        self.openapi_types = {
            'name': str,
            'timestamp': datetime,
            'upsell_notification': Dict[str, str]
        }

        self.attribute_map = {
            'name': 'name',
            'timestamp': 'timestamp',
            'upsell_notification': 'upsellNotification'
        }

        self._name = name
        self._timestamp = timestamp
        self._upsell_notification = upsell_notification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpgradeNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpgradeNotification of this UpgradeNotification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UpgradeNotification.

        Name of upgrade notification.

        :return: The name of this UpgradeNotification.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpgradeNotification.

        Name of upgrade notification.

        :param name: The name of this UpgradeNotification.
        :type name: str
        """

        self._name = name

    @property
    def timestamp(self):
        """Gets the timestamp of this UpgradeNotification.

        Timestamp when upgrade notification occurred.

        :return: The timestamp of this UpgradeNotification.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this UpgradeNotification.

        Timestamp when upgrade notification occurred.

        :param timestamp: The timestamp of this UpgradeNotification.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def upsell_notification(self):
        """Gets the upsell_notification of this UpgradeNotification.

        Details about this upgrade notification

        :return: The upsell_notification of this UpgradeNotification.
        :rtype: Dict[str, str]
        """
        return self._upsell_notification

    @upsell_notification.setter
    def upsell_notification(self, upsell_notification):
        """Sets the upsell_notification of this UpgradeNotification.

        Details about this upgrade notification

        :param upsell_notification: The upsell_notification of this UpgradeNotification.
        :type upsell_notification: Dict[str, str]
        """

        self._upsell_notification = upsell_notification
