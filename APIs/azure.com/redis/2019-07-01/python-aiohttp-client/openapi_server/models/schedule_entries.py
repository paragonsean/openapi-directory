# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schedule_entry import ScheduleEntry
from openapi_server import util


class ScheduleEntries(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedule_entries: List[ScheduleEntry]=None):
        """ScheduleEntries - a model defined in OpenAPI

        :param schedule_entries: The schedule_entries of this ScheduleEntries.
        """
        self.openapi_types = {
            'schedule_entries': List[ScheduleEntry]
        }

        self.attribute_map = {
            'schedule_entries': 'scheduleEntries'
        }

        self._schedule_entries = schedule_entries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduleEntries':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduleEntries of this ScheduleEntries.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedule_entries(self):
        """Gets the schedule_entries of this ScheduleEntries.

        List of patch schedules for a Redis cache.

        :return: The schedule_entries of this ScheduleEntries.
        :rtype: List[ScheduleEntry]
        """
        return self._schedule_entries

    @schedule_entries.setter
    def schedule_entries(self, schedule_entries):
        """Sets the schedule_entries of this ScheduleEntries.

        List of patch schedules for a Redis cache.

        :param schedule_entries: The schedule_entries of this ScheduleEntries.
        :type schedule_entries: List[ScheduleEntry]
        """
        if schedule_entries is None:
            raise ValueError("Invalid value for `schedule_entries`, must not be `None`")

        self._schedule_entries = schedule_entries
