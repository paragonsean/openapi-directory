/**
 * RedisManagementClient
 * REST API for Azure Redis Cache Service.
 *
 * The version of the OpenAPI document: 2016-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScheduleEntry model module.
 * @module model/ScheduleEntry
 * @version 2016-04-01
 */
class ScheduleEntry {
    /**
     * Constructs a new <code>ScheduleEntry</code>.
     * Patch schedule entry for a Premium Redis Cache.
     * @alias module:model/ScheduleEntry
     * @param dayOfWeek {module:model/ScheduleEntry.DayOfWeekEnum} Day of the week when a cache can be patched.
     * @param startHourUtc {Number} Start hour after which cache patching can start.
     */
    constructor(dayOfWeek, startHourUtc) { 
        
        ScheduleEntry.initialize(this, dayOfWeek, startHourUtc);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dayOfWeek, startHourUtc) { 
        obj['dayOfWeek'] = dayOfWeek;
        obj['startHourUtc'] = startHourUtc;
    }

    /**
     * Constructs a <code>ScheduleEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduleEntry} obj Optional instance to populate.
     * @return {module:model/ScheduleEntry} The populated <code>ScheduleEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScheduleEntry();

            if (data.hasOwnProperty('dayOfWeek')) {
                obj['dayOfWeek'] = ApiClient.convertToType(data['dayOfWeek'], 'String');
            }
            if (data.hasOwnProperty('maintenanceWindow')) {
                obj['maintenanceWindow'] = ApiClient.convertToType(data['maintenanceWindow'], 'String');
            }
            if (data.hasOwnProperty('startHourUtc')) {
                obj['startHourUtc'] = ApiClient.convertToType(data['startHourUtc'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScheduleEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScheduleEntry</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ScheduleEntry.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dayOfWeek'] && !(typeof data['dayOfWeek'] === 'string' || data['dayOfWeek'] instanceof String)) {
            throw new Error("Expected the field `dayOfWeek` to be a primitive type in the JSON string but got " + data['dayOfWeek']);
        }
        // ensure the json data is a string
        if (data['maintenanceWindow'] && !(typeof data['maintenanceWindow'] === 'string' || data['maintenanceWindow'] instanceof String)) {
            throw new Error("Expected the field `maintenanceWindow` to be a primitive type in the JSON string but got " + data['maintenanceWindow']);
        }

        return true;
    }


}

ScheduleEntry.RequiredProperties = ["dayOfWeek", "startHourUtc"];

/**
 * Day of the week when a cache can be patched.
 * @member {module:model/ScheduleEntry.DayOfWeekEnum} dayOfWeek
 */
ScheduleEntry.prototype['dayOfWeek'] = undefined;

/**
 * ISO8601 timespan specifying how much time cache patching can take. 
 * @member {String} maintenanceWindow
 */
ScheduleEntry.prototype['maintenanceWindow'] = undefined;

/**
 * Start hour after which cache patching can start.
 * @member {Number} startHourUtc
 */
ScheduleEntry.prototype['startHourUtc'] = undefined;





/**
 * Allowed values for the <code>dayOfWeek</code> property.
 * @enum {String}
 * @readonly
 */
ScheduleEntry['DayOfWeekEnum'] = {

    /**
     * value: "Monday"
     * @const
     */
    "Monday": "Monday",

    /**
     * value: "Tuesday"
     * @const
     */
    "Tuesday": "Tuesday",

    /**
     * value: "Wednesday"
     * @const
     */
    "Wednesday": "Wednesday",

    /**
     * value: "Thursday"
     * @const
     */
    "Thursday": "Thursday",

    /**
     * value: "Friday"
     * @const
     */
    "Friday": "Friday",

    /**
     * value: "Saturday"
     * @const
     */
    "Saturday": "Saturday",

    /**
     * value: "Sunday"
     * @const
     */
    "Sunday": "Sunday",

    /**
     * value: "Everyday"
     * @const
     */
    "Everyday": "Everyday",

    /**
     * value: "Weekend"
     * @const
     */
    "Weekend": "Weekend"
};



export default ScheduleEntry;

