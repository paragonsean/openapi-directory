/*
 * StreamAnalyticsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Function;
import org.openapitools.client.model.FunctionListResult;
import org.openapitools.client.model.FunctionRetrieveDefaultDefinitionParameters;
import org.openapitools.client.model.FunctionsTest200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FunctionsApi
 */
@Disabled
public class FunctionsApiTest {

    private final FunctionsApi api = new FunctionsApi();

    /**
     * Creates a function or replaces an already existing function under an existing streaming job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void functionsCreateOrReplaceTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String functionName = null;
        Function function = null;
        String ifMatch = null;
        String ifNoneMatch = null;
        Function response = api.functionsCreateOrReplace(apiVersion, subscriptionId, resourceGroupName, jobName, functionName, function, ifMatch, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * Deletes a function from the streaming job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void functionsDeleteTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String functionName = null;
        api.functionsDelete(apiVersion, subscriptionId, resourceGroupName, jobName, functionName);
        // TODO: test validations
    }

    /**
     * Gets details about the specified function.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void functionsGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String functionName = null;
        Function response = api.functionsGet(apiVersion, subscriptionId, resourceGroupName, jobName, functionName);
        // TODO: test validations
    }

    /**
     * Lists all of the functions under the specified streaming job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void functionsListByStreamingJobTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String $select = null;
        FunctionListResult response = api.functionsListByStreamingJob(apiVersion, subscriptionId, resourceGroupName, jobName, $select);
        // TODO: test validations
    }

    /**
     * Retrieves the default definition of a function based on the parameters specified.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void functionsRetrieveDefaultDefinitionTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String functionName = null;
        FunctionRetrieveDefaultDefinitionParameters functionRetrieveDefaultDefinitionParameters = null;
        Function response = api.functionsRetrieveDefaultDefinition(apiVersion, subscriptionId, resourceGroupName, jobName, functionName, functionRetrieveDefaultDefinitionParameters);
        // TODO: test validations
    }

    /**
     * Tests if the information provided for a function is valid. This can range from testing the connection to the underlying web service behind the function or making sure the function code provided is syntactically correct.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void functionsTestTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String functionName = null;
        Function function = null;
        FunctionsTest200Response response = api.functionsTest(apiVersion, subscriptionId, resourceGroupName, jobName, functionName, function);
        // TODO: test validations
    }

    /**
     * Updates an existing function under an existing streaming job. This can be used to partially update (ie. update one or two properties) a function without affecting the rest the job or function definition.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void functionsUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String jobName = null;
        String functionName = null;
        Function function = null;
        String ifMatch = null;
        Function response = api.functionsUpdate(apiVersion, subscriptionId, resourceGroupName, jobName, functionName, function, ifMatch);
        // TODO: test validations
    }

}
