/*
 * StreamAnalyticsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AzureMachineLearningWebServiceInputs;
import org.openapitools.client.model.AzureMachineLearningWebServiceOutputColumn;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The binding properties associated with an Azure Machine learning web service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:16:04.608902-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AzureMachineLearningWebServiceFunctionBindingProperties {
  public static final String SERIALIZED_NAME_API_KEY = "apiKey";
  @SerializedName(SERIALIZED_NAME_API_KEY)
  private String apiKey;

  public static final String SERIALIZED_NAME_BATCH_SIZE = "batchSize";
  @SerializedName(SERIALIZED_NAME_BATCH_SIZE)
  private Integer batchSize;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_INPUTS = "inputs";
  @SerializedName(SERIALIZED_NAME_INPUTS)
  private AzureMachineLearningWebServiceInputs inputs;

  public static final String SERIALIZED_NAME_OUTPUTS = "outputs";
  @SerializedName(SERIALIZED_NAME_OUTPUTS)
  private List<AzureMachineLearningWebServiceOutputColumn> outputs = new ArrayList<>();

  public AzureMachineLearningWebServiceFunctionBindingProperties() {
  }

  public AzureMachineLearningWebServiceFunctionBindingProperties apiKey(String apiKey) {
    this.apiKey = apiKey;
    return this;
  }

  /**
   * The API key used to authenticate with Request-Response endpoint.
   * @return apiKey
   */
  @javax.annotation.Nullable
  public String getApiKey() {
    return apiKey;
  }

  public void setApiKey(String apiKey) {
    this.apiKey = apiKey;
  }


  public AzureMachineLearningWebServiceFunctionBindingProperties batchSize(Integer batchSize) {
    this.batchSize = batchSize;
    return this;
  }

  /**
   * Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
   * @return batchSize
   */
  @javax.annotation.Nullable
  public Integer getBatchSize() {
    return batchSize;
  }

  public void setBatchSize(Integer batchSize) {
    this.batchSize = batchSize;
  }


  public AzureMachineLearningWebServiceFunctionBindingProperties endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * The Request-Response execute endpoint of the Azure Machine Learning web service. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  public AzureMachineLearningWebServiceFunctionBindingProperties inputs(AzureMachineLearningWebServiceInputs inputs) {
    this.inputs = inputs;
    return this;
  }

  /**
   * Get inputs
   * @return inputs
   */
  @javax.annotation.Nullable
  public AzureMachineLearningWebServiceInputs getInputs() {
    return inputs;
  }

  public void setInputs(AzureMachineLearningWebServiceInputs inputs) {
    this.inputs = inputs;
  }


  public AzureMachineLearningWebServiceFunctionBindingProperties outputs(List<AzureMachineLearningWebServiceOutputColumn> outputs) {
    this.outputs = outputs;
    return this;
  }

  public AzureMachineLearningWebServiceFunctionBindingProperties addOutputsItem(AzureMachineLearningWebServiceOutputColumn outputsItem) {
    if (this.outputs == null) {
      this.outputs = new ArrayList<>();
    }
    this.outputs.add(outputsItem);
    return this;
  }

  /**
   * A list of outputs from the Azure Machine Learning web service endpoint execution.
   * @return outputs
   */
  @javax.annotation.Nullable
  public List<AzureMachineLearningWebServiceOutputColumn> getOutputs() {
    return outputs;
  }

  public void setOutputs(List<AzureMachineLearningWebServiceOutputColumn> outputs) {
    this.outputs = outputs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureMachineLearningWebServiceFunctionBindingProperties azureMachineLearningWebServiceFunctionBindingProperties = (AzureMachineLearningWebServiceFunctionBindingProperties) o;
    return Objects.equals(this.apiKey, azureMachineLearningWebServiceFunctionBindingProperties.apiKey) &&
        Objects.equals(this.batchSize, azureMachineLearningWebServiceFunctionBindingProperties.batchSize) &&
        Objects.equals(this.endpoint, azureMachineLearningWebServiceFunctionBindingProperties.endpoint) &&
        Objects.equals(this.inputs, azureMachineLearningWebServiceFunctionBindingProperties.inputs) &&
        Objects.equals(this.outputs, azureMachineLearningWebServiceFunctionBindingProperties.outputs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiKey, batchSize, endpoint, inputs, outputs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureMachineLearningWebServiceFunctionBindingProperties {\n");
    sb.append("    apiKey: ").append(toIndentedString(apiKey)).append("\n");
    sb.append("    batchSize: ").append(toIndentedString(batchSize)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiKey");
    openapiFields.add("batchSize");
    openapiFields.add("endpoint");
    openapiFields.add("inputs");
    openapiFields.add("outputs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AzureMachineLearningWebServiceFunctionBindingProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AzureMachineLearningWebServiceFunctionBindingProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AzureMachineLearningWebServiceFunctionBindingProperties is not found in the empty JSON string", AzureMachineLearningWebServiceFunctionBindingProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AzureMachineLearningWebServiceFunctionBindingProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AzureMachineLearningWebServiceFunctionBindingProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiKey") != null && !jsonObj.get("apiKey").isJsonNull()) && !jsonObj.get("apiKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiKey").toString()));
      }
      if ((jsonObj.get("endpoint") != null && !jsonObj.get("endpoint").isJsonNull()) && !jsonObj.get("endpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint").toString()));
      }
      // validate the optional field `inputs`
      if (jsonObj.get("inputs") != null && !jsonObj.get("inputs").isJsonNull()) {
        AzureMachineLearningWebServiceInputs.validateJsonElement(jsonObj.get("inputs"));
      }
      if (jsonObj.get("outputs") != null && !jsonObj.get("outputs").isJsonNull()) {
        JsonArray jsonArrayoutputs = jsonObj.getAsJsonArray("outputs");
        if (jsonArrayoutputs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("outputs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `outputs` to be an array in the JSON string but got `%s`", jsonObj.get("outputs").toString()));
          }

          // validate the optional field `outputs` (array)
          for (int i = 0; i < jsonArrayoutputs.size(); i++) {
            AzureMachineLearningWebServiceOutputColumn.validateJsonElement(jsonArrayoutputs.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AzureMachineLearningWebServiceFunctionBindingProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AzureMachineLearningWebServiceFunctionBindingProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AzureMachineLearningWebServiceFunctionBindingProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AzureMachineLearningWebServiceFunctionBindingProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<AzureMachineLearningWebServiceFunctionBindingProperties>() {
           @Override
           public void write(JsonWriter out, AzureMachineLearningWebServiceFunctionBindingProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AzureMachineLearningWebServiceFunctionBindingProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AzureMachineLearningWebServiceFunctionBindingProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AzureMachineLearningWebServiceFunctionBindingProperties
   * @throws IOException if the JSON string is invalid with respect to AzureMachineLearningWebServiceFunctionBindingProperties
   */
  public static AzureMachineLearningWebServiceFunctionBindingProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AzureMachineLearningWebServiceFunctionBindingProperties.class);
  }

  /**
   * Convert an instance of AzureMachineLearningWebServiceFunctionBindingProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

