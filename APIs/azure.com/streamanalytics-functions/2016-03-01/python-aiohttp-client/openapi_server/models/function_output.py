# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FunctionOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_type: str=None):
        """FunctionOutput - a model defined in OpenAPI

        :param data_type: The data_type of this FunctionOutput.
        """
        self.openapi_types = {
            'data_type': str
        }

        self.attribute_map = {
            'data_type': 'dataType'
        }

        self._data_type = data_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FunctionOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FunctionOutput of this FunctionOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_type(self):
        """Gets the data_type of this FunctionOutput.

        The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx

        :return: The data_type of this FunctionOutput.
        :rtype: str
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this FunctionOutput.

        The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx

        :param data_type: The data_type of this FunctionOutput.
        :type data_type: str
        """

        self._data_type = data_type
