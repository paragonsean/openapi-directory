/**
 * StreamAnalyticsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScalarFunctionConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScalarFunctionConfiguration::OAIScalarFunctionConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScalarFunctionConfiguration::OAIScalarFunctionConfiguration() {
    this->initializeModel();
}

OAIScalarFunctionConfiguration::~OAIScalarFunctionConfiguration() {}

void OAIScalarFunctionConfiguration::initializeModel() {

    m_binding_isSet = false;
    m_binding_isValid = false;

    m_inputs_isSet = false;
    m_inputs_isValid = false;

    m_output_isSet = false;
    m_output_isValid = false;
}

void OAIScalarFunctionConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScalarFunctionConfiguration::fromJsonObject(QJsonObject json) {

    m_binding_isValid = ::OpenAPI::fromJsonValue(m_binding, json[QString("binding")]);
    m_binding_isSet = !json[QString("binding")].isNull() && m_binding_isValid;

    m_inputs_isValid = ::OpenAPI::fromJsonValue(m_inputs, json[QString("inputs")]);
    m_inputs_isSet = !json[QString("inputs")].isNull() && m_inputs_isValid;

    m_output_isValid = ::OpenAPI::fromJsonValue(m_output, json[QString("output")]);
    m_output_isSet = !json[QString("output")].isNull() && m_output_isValid;
}

QString OAIScalarFunctionConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScalarFunctionConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_binding.isSet()) {
        obj.insert(QString("binding"), ::OpenAPI::toJsonValue(m_binding));
    }
    if (m_inputs.size() > 0) {
        obj.insert(QString("inputs"), ::OpenAPI::toJsonValue(m_inputs));
    }
    if (m_output.isSet()) {
        obj.insert(QString("output"), ::OpenAPI::toJsonValue(m_output));
    }
    return obj;
}

OAIFunctionBinding OAIScalarFunctionConfiguration::getBinding() const {
    return m_binding;
}
void OAIScalarFunctionConfiguration::setBinding(const OAIFunctionBinding &binding) {
    m_binding = binding;
    m_binding_isSet = true;
}

bool OAIScalarFunctionConfiguration::is_binding_Set() const{
    return m_binding_isSet;
}

bool OAIScalarFunctionConfiguration::is_binding_Valid() const{
    return m_binding_isValid;
}

QList<OAIFunctionInput> OAIScalarFunctionConfiguration::getInputs() const {
    return m_inputs;
}
void OAIScalarFunctionConfiguration::setInputs(const QList<OAIFunctionInput> &inputs) {
    m_inputs = inputs;
    m_inputs_isSet = true;
}

bool OAIScalarFunctionConfiguration::is_inputs_Set() const{
    return m_inputs_isSet;
}

bool OAIScalarFunctionConfiguration::is_inputs_Valid() const{
    return m_inputs_isValid;
}

OAIFunctionOutput OAIScalarFunctionConfiguration::getOutput() const {
    return m_output;
}
void OAIScalarFunctionConfiguration::setOutput(const OAIFunctionOutput &output) {
    m_output = output;
    m_output_isSet = true;
}

bool OAIScalarFunctionConfiguration::is_output_Set() const{
    return m_output_isSet;
}

bool OAIScalarFunctionConfiguration::is_output_Valid() const{
    return m_output_isValid;
}

bool OAIScalarFunctionConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_binding.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_inputs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_output.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScalarFunctionConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
