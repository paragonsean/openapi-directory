/**
 * StreamAnalyticsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FunctionsTest200ResponseError from './FunctionsTest200ResponseError';

/**
 * The FunctionsTest200Response model module.
 * @module model/FunctionsTest200Response
 * @version 2016-03-01
 */
class FunctionsTest200Response {
    /**
     * Constructs a new <code>FunctionsTest200Response</code>.
     * Describes the status of the test operation along with error information, if applicable.
     * @alias module:model/FunctionsTest200Response
     */
    constructor() { 
        
        FunctionsTest200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FunctionsTest200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FunctionsTest200Response} obj Optional instance to populate.
     * @return {module:model/FunctionsTest200Response} The populated <code>FunctionsTest200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FunctionsTest200Response();

            if (data.hasOwnProperty('error')) {
                obj['error'] = FunctionsTest200ResponseError.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FunctionsTest200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FunctionsTest200Response</code>.
     */
    static validateJSON(data) {
        // validate the optional field `error`
        if (data['error']) { // data not null
          FunctionsTest200ResponseError.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {module:model/FunctionsTest200ResponseError} error
 */
FunctionsTest200Response.prototype['error'] = undefined;

/**
 * The status of the test operation.
 * @member {String} status
 */
FunctionsTest200Response.prototype['status'] = undefined;






export default FunctionsTest200Response;

