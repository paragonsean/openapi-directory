/**
 * StreamAnalyticsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Encoding from './Encoding';
import JsonOutputSerializationFormat from './JsonOutputSerializationFormat';

/**
 * The JsonSerializationProperties model module.
 * @module model/JsonSerializationProperties
 * @version 2016-03-01
 */
class JsonSerializationProperties {
    /**
     * Constructs a new <code>JsonSerializationProperties</code>.
     * The properties that are associated with the JSON serialization type.
     * @alias module:model/JsonSerializationProperties
     */
    constructor() { 
        
        JsonSerializationProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JsonSerializationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JsonSerializationProperties} obj Optional instance to populate.
     * @return {module:model/JsonSerializationProperties} The populated <code>JsonSerializationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JsonSerializationProperties();

            if (data.hasOwnProperty('encoding')) {
                obj['encoding'] = Encoding.constructFromObject(data['encoding']);
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = JsonOutputSerializationFormat.constructFromObject(data['format']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JsonSerializationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JsonSerializationProperties</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {module:model/Encoding} encoding
 */
JsonSerializationProperties.prototype['encoding'] = undefined;

/**
 * @member {module:model/JsonOutputSerializationFormat} format
 */
JsonSerializationProperties.prototype['format'] = undefined;






export default JsonSerializationProperties;

