/**
 * StreamAnalyticsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Diagnostics from './Diagnostics';
import Serialization from './Serialization';

/**
 * The InputProperties model module.
 * @module model/InputProperties
 * @version 2016-03-01
 */
class InputProperties {
    /**
     * Constructs a new <code>InputProperties</code>.
     * The properties that are associated with an input.
     * @alias module:model/InputProperties
     */
    constructor() { 
        
        InputProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InputProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InputProperties} obj Optional instance to populate.
     * @return {module:model/InputProperties} The populated <code>InputProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InputProperties();

            if (data.hasOwnProperty('diagnostics')) {
                obj['diagnostics'] = Diagnostics.constructFromObject(data['diagnostics']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('serialization')) {
                obj['serialization'] = Serialization.constructFromObject(data['serialization']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InputProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InputProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `diagnostics`
        if (data['diagnostics']) { // data not null
          Diagnostics.validateJSON(data['diagnostics']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // validate the optional field `serialization`
        if (data['serialization']) { // data not null
          Serialization.validateJSON(data['serialization']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/Diagnostics} diagnostics
 */
InputProperties.prototype['diagnostics'] = undefined;

/**
 * The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
 * @member {String} etag
 */
InputProperties.prototype['etag'] = undefined;

/**
 * @member {module:model/Serialization} serialization
 */
InputProperties.prototype['serialization'] = undefined;

/**
 * Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
 * @member {String} type
 */
InputProperties.prototype['type'] = undefined;






export default InputProperties;

