/**
 * StreamAnalyticsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoTHubStreamInputDataSourceProperties model module.
 * @module model/IoTHubStreamInputDataSourceProperties
 * @version 2016-03-01
 */
class IoTHubStreamInputDataSourceProperties {
    /**
     * Constructs a new <code>IoTHubStreamInputDataSourceProperties</code>.
     * The properties that are associated with a IoT Hub input containing stream data.
     * @alias module:model/IoTHubStreamInputDataSourceProperties
     */
    constructor() { 
        
        IoTHubStreamInputDataSourceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoTHubStreamInputDataSourceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoTHubStreamInputDataSourceProperties} obj Optional instance to populate.
     * @return {module:model/IoTHubStreamInputDataSourceProperties} The populated <code>IoTHubStreamInputDataSourceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoTHubStreamInputDataSourceProperties();

            if (data.hasOwnProperty('consumerGroupName')) {
                obj['consumerGroupName'] = ApiClient.convertToType(data['consumerGroupName'], 'String');
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('iotHubNamespace')) {
                obj['iotHubNamespace'] = ApiClient.convertToType(data['iotHubNamespace'], 'String');
            }
            if (data.hasOwnProperty('sharedAccessPolicyKey')) {
                obj['sharedAccessPolicyKey'] = ApiClient.convertToType(data['sharedAccessPolicyKey'], 'String');
            }
            if (data.hasOwnProperty('sharedAccessPolicyName')) {
                obj['sharedAccessPolicyName'] = ApiClient.convertToType(data['sharedAccessPolicyName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoTHubStreamInputDataSourceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoTHubStreamInputDataSourceProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['consumerGroupName'] && !(typeof data['consumerGroupName'] === 'string' || data['consumerGroupName'] instanceof String)) {
            throw new Error("Expected the field `consumerGroupName` to be a primitive type in the JSON string but got " + data['consumerGroupName']);
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['iotHubNamespace'] && !(typeof data['iotHubNamespace'] === 'string' || data['iotHubNamespace'] instanceof String)) {
            throw new Error("Expected the field `iotHubNamespace` to be a primitive type in the JSON string but got " + data['iotHubNamespace']);
        }
        // ensure the json data is a string
        if (data['sharedAccessPolicyKey'] && !(typeof data['sharedAccessPolicyKey'] === 'string' || data['sharedAccessPolicyKey'] instanceof String)) {
            throw new Error("Expected the field `sharedAccessPolicyKey` to be a primitive type in the JSON string but got " + data['sharedAccessPolicyKey']);
        }
        // ensure the json data is a string
        if (data['sharedAccessPolicyName'] && !(typeof data['sharedAccessPolicyName'] === 'string' || data['sharedAccessPolicyName'] instanceof String)) {
            throw new Error("Expected the field `sharedAccessPolicyName` to be a primitive type in the JSON string but got " + data['sharedAccessPolicyName']);
        }

        return true;
    }


}



/**
 * The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hubâ€™s default consumer group.
 * @member {String} consumerGroupName
 */
IoTHubStreamInputDataSourceProperties.prototype['consumerGroupName'] = undefined;

/**
 * The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
 * @member {String} endpoint
 */
IoTHubStreamInputDataSourceProperties.prototype['endpoint'] = undefined;

/**
 * The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
 * @member {String} iotHubNamespace
 */
IoTHubStreamInputDataSourceProperties.prototype['iotHubNamespace'] = undefined;

/**
 * The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
 * @member {String} sharedAccessPolicyKey
 */
IoTHubStreamInputDataSourceProperties.prototype['sharedAccessPolicyKey'] = undefined;

/**
 * The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
 * @member {String} sharedAccessPolicyName
 */
IoTHubStreamInputDataSourceProperties.prototype['sharedAccessPolicyName'] = undefined;






export default IoTHubStreamInputDataSourceProperties;

