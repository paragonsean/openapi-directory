/**
 * StreamAnalyticsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBlobStreamInputDataSourceProperties.h
 *
 * The properties that are associated with a blob input containing stream data.
 */

#ifndef OAIBlobStreamInputDataSourceProperties_H
#define OAIBlobStreamInputDataSourceProperties_H

#include <QJsonObject>

#include "OAIStorageAccount.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStorageAccount;

class OAIBlobStreamInputDataSourceProperties : public OAIObject {
public:
    OAIBlobStreamInputDataSourceProperties();
    OAIBlobStreamInputDataSourceProperties(QString json);
    ~OAIBlobStreamInputDataSourceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getSourcePartitionCount() const;
    void setSourcePartitionCount(const qint32 &source_partition_count);
    bool is_source_partition_count_Set() const;
    bool is_source_partition_count_Valid() const;

    QString getContainer() const;
    void setContainer(const QString &container);
    bool is_container_Set() const;
    bool is_container_Valid() const;

    QString getDateFormat() const;
    void setDateFormat(const QString &date_format);
    bool is_date_format_Set() const;
    bool is_date_format_Valid() const;

    QString getPathPattern() const;
    void setPathPattern(const QString &path_pattern);
    bool is_path_pattern_Set() const;
    bool is_path_pattern_Valid() const;

    QList<OAIStorageAccount> getStorageAccounts() const;
    void setStorageAccounts(const QList<OAIStorageAccount> &storage_accounts);
    bool is_storage_accounts_Set() const;
    bool is_storage_accounts_Valid() const;

    QString getTimeFormat() const;
    void setTimeFormat(const QString &time_format);
    bool is_time_format_Set() const;
    bool is_time_format_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_source_partition_count;
    bool m_source_partition_count_isSet;
    bool m_source_partition_count_isValid;

    QString m_container;
    bool m_container_isSet;
    bool m_container_isValid;

    QString m_date_format;
    bool m_date_format_isSet;
    bool m_date_format_isValid;

    QString m_path_pattern;
    bool m_path_pattern_isSet;
    bool m_path_pattern_isValid;

    QList<OAIStorageAccount> m_storage_accounts;
    bool m_storage_accounts_isSet;
    bool m_storage_accounts_isValid;

    QString m_time_format;
    bool m_time_format_isSet;
    bool m_time_format_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBlobStreamInputDataSourceProperties)

#endif // OAIBlobStreamInputDataSourceProperties_H
