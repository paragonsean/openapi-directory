/**
 * StreamAnalyticsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceBusDataSourceProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceBusDataSourceProperties::OAIServiceBusDataSourceProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceBusDataSourceProperties::OAIServiceBusDataSourceProperties() {
    this->initializeModel();
}

OAIServiceBusDataSourceProperties::~OAIServiceBusDataSourceProperties() {}

void OAIServiceBusDataSourceProperties::initializeModel() {

    m_service_bus_namespace_isSet = false;
    m_service_bus_namespace_isValid = false;

    m_shared_access_policy_key_isSet = false;
    m_shared_access_policy_key_isValid = false;

    m_shared_access_policy_name_isSet = false;
    m_shared_access_policy_name_isValid = false;
}

void OAIServiceBusDataSourceProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceBusDataSourceProperties::fromJsonObject(QJsonObject json) {

    m_service_bus_namespace_isValid = ::OpenAPI::fromJsonValue(m_service_bus_namespace, json[QString("serviceBusNamespace")]);
    m_service_bus_namespace_isSet = !json[QString("serviceBusNamespace")].isNull() && m_service_bus_namespace_isValid;

    m_shared_access_policy_key_isValid = ::OpenAPI::fromJsonValue(m_shared_access_policy_key, json[QString("sharedAccessPolicyKey")]);
    m_shared_access_policy_key_isSet = !json[QString("sharedAccessPolicyKey")].isNull() && m_shared_access_policy_key_isValid;

    m_shared_access_policy_name_isValid = ::OpenAPI::fromJsonValue(m_shared_access_policy_name, json[QString("sharedAccessPolicyName")]);
    m_shared_access_policy_name_isSet = !json[QString("sharedAccessPolicyName")].isNull() && m_shared_access_policy_name_isValid;
}

QString OAIServiceBusDataSourceProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceBusDataSourceProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_service_bus_namespace_isSet) {
        obj.insert(QString("serviceBusNamespace"), ::OpenAPI::toJsonValue(m_service_bus_namespace));
    }
    if (m_shared_access_policy_key_isSet) {
        obj.insert(QString("sharedAccessPolicyKey"), ::OpenAPI::toJsonValue(m_shared_access_policy_key));
    }
    if (m_shared_access_policy_name_isSet) {
        obj.insert(QString("sharedAccessPolicyName"), ::OpenAPI::toJsonValue(m_shared_access_policy_name));
    }
    return obj;
}

QString OAIServiceBusDataSourceProperties::getServiceBusNamespace() const {
    return m_service_bus_namespace;
}
void OAIServiceBusDataSourceProperties::setServiceBusNamespace(const QString &service_bus_namespace) {
    m_service_bus_namespace = service_bus_namespace;
    m_service_bus_namespace_isSet = true;
}

bool OAIServiceBusDataSourceProperties::is_service_bus_namespace_Set() const{
    return m_service_bus_namespace_isSet;
}

bool OAIServiceBusDataSourceProperties::is_service_bus_namespace_Valid() const{
    return m_service_bus_namespace_isValid;
}

QString OAIServiceBusDataSourceProperties::getSharedAccessPolicyKey() const {
    return m_shared_access_policy_key;
}
void OAIServiceBusDataSourceProperties::setSharedAccessPolicyKey(const QString &shared_access_policy_key) {
    m_shared_access_policy_key = shared_access_policy_key;
    m_shared_access_policy_key_isSet = true;
}

bool OAIServiceBusDataSourceProperties::is_shared_access_policy_key_Set() const{
    return m_shared_access_policy_key_isSet;
}

bool OAIServiceBusDataSourceProperties::is_shared_access_policy_key_Valid() const{
    return m_shared_access_policy_key_isValid;
}

QString OAIServiceBusDataSourceProperties::getSharedAccessPolicyName() const {
    return m_shared_access_policy_name;
}
void OAIServiceBusDataSourceProperties::setSharedAccessPolicyName(const QString &shared_access_policy_name) {
    m_shared_access_policy_name = shared_access_policy_name;
    m_shared_access_policy_name_isSet = true;
}

bool OAIServiceBusDataSourceProperties::is_shared_access_policy_name_Set() const{
    return m_shared_access_policy_name_isSet;
}

bool OAIServiceBusDataSourceProperties::is_shared_access_policy_name_Valid() const{
    return m_shared_access_policy_name_isValid;
}

bool OAIServiceBusDataSourceProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_bus_namespace_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_access_policy_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_access_policy_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceBusDataSourceProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
