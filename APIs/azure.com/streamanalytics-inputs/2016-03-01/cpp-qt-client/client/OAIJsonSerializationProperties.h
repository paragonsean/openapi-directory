/**
 * StreamAnalyticsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJsonSerializationProperties.h
 *
 * The properties that are associated with the JSON serialization type.
 */

#ifndef OAIJsonSerializationProperties_H
#define OAIJsonSerializationProperties_H

#include <QJsonObject>

#include "OAIEncoding.h"
#include "OAIJsonOutputSerializationFormat.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIJsonSerializationProperties : public OAIObject {
public:
    OAIJsonSerializationProperties();
    OAIJsonSerializationProperties(QString json);
    ~OAIJsonSerializationProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEncoding getEncoding() const;
    void setEncoding(const OAIEncoding &encoding);
    bool is_encoding_Set() const;
    bool is_encoding_Valid() const;

    OAIJsonOutputSerializationFormat getFormat() const;
    void setFormat(const OAIJsonOutputSerializationFormat &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEncoding m_encoding;
    bool m_encoding_isSet;
    bool m_encoding_isValid;

    OAIJsonOutputSerializationFormat m_format;
    bool m_format_isSet;
    bool m_format_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJsonSerializationProperties)

#endif // OAIJsonSerializationProperties_H
