/**
 * StreamAnalyticsManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICsvSerialization.h
 *
 * Describes how data from an input is serialized or how data is serialized when written to an output in CSV format.
 */

#ifndef OAICsvSerialization_H
#define OAICsvSerialization_H

#include <QJsonObject>

#include "OAICsvSerializationProperties.h"
#include "OAISerialization.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICsvSerializationProperties;

class OAICsvSerialization : public OAIObject {
public:
    OAICsvSerialization();
    OAICsvSerialization(QString json);
    ~OAICsvSerialization() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICsvSerializationProperties getProperties() const;
    void setProperties(const OAICsvSerializationProperties &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICsvSerializationProperties m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICsvSerialization)

#endif // OAICsvSerialization_H
