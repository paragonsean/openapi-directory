# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DiagnosticCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, message: str=None, since: str=None):
        """DiagnosticCondition - a model defined in OpenAPI

        :param code: The code of this DiagnosticCondition.
        :param message: The message of this DiagnosticCondition.
        :param since: The since of this DiagnosticCondition.
        """
        self.openapi_types = {
            'code': str,
            'message': str,
            'since': str
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'since': 'since'
        }

        self._code = code
        self._message = message
        self._since = since

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiagnosticCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiagnosticCondition of this DiagnosticCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this DiagnosticCondition.

        The opaque diagnostic code.

        :return: The code of this DiagnosticCondition.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this DiagnosticCondition.

        The opaque diagnostic code.

        :param code: The code of this DiagnosticCondition.
        :type code: str
        """

        self._code = code

    @property
    def message(self):
        """Gets the message of this DiagnosticCondition.

        The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.

        :return: The message of this DiagnosticCondition.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this DiagnosticCondition.

        The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.

        :param message: The message of this DiagnosticCondition.
        :type message: str
        """

        self._message = message

    @property
    def since(self):
        """Gets the since of this DiagnosticCondition.

        The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.

        :return: The since of this DiagnosticCondition.
        :rtype: str
        """
        return self._since

    @since.setter
    def since(self, since):
        """Sets the since of this DiagnosticCondition.

        The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.

        :param since: The since of this DiagnosticCondition.
        :type since: str
        """

        self._since = since
