# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.diagnostics import Diagnostics
from openapi_server.models.serialization import Serialization
from openapi_server import util


class InputProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, diagnostics: Diagnostics=None, etag: str=None, serialization: Serialization=None, type: str=None):
        """InputProperties - a model defined in OpenAPI

        :param diagnostics: The diagnostics of this InputProperties.
        :param etag: The etag of this InputProperties.
        :param serialization: The serialization of this InputProperties.
        :param type: The type of this InputProperties.
        """
        self.openapi_types = {
            'diagnostics': Diagnostics,
            'etag': str,
            'serialization': Serialization,
            'type': str
        }

        self.attribute_map = {
            'diagnostics': 'diagnostics',
            'etag': 'etag',
            'serialization': 'serialization',
            'type': 'type'
        }

        self._diagnostics = diagnostics
        self._etag = etag
        self._serialization = serialization
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InputProperties of this InputProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def diagnostics(self):
        """Gets the diagnostics of this InputProperties.


        :return: The diagnostics of this InputProperties.
        :rtype: Diagnostics
        """
        return self._diagnostics

    @diagnostics.setter
    def diagnostics(self, diagnostics):
        """Sets the diagnostics of this InputProperties.


        :param diagnostics: The diagnostics of this InputProperties.
        :type diagnostics: Diagnostics
        """

        self._diagnostics = diagnostics

    @property
    def etag(self):
        """Gets the etag of this InputProperties.

        The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.

        :return: The etag of this InputProperties.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this InputProperties.

        The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.

        :param etag: The etag of this InputProperties.
        :type etag: str
        """

        self._etag = etag

    @property
    def serialization(self):
        """Gets the serialization of this InputProperties.


        :return: The serialization of this InputProperties.
        :rtype: Serialization
        """
        return self._serialization

    @serialization.setter
    def serialization(self, serialization):
        """Sets the serialization of this InputProperties.


        :param serialization: The serialization of this InputProperties.
        :type serialization: Serialization
        """

        self._serialization = serialization

    @property
    def type(self):
        """Gets the type of this InputProperties.

        Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.

        :return: The type of this InputProperties.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InputProperties.

        Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.

        :param type: The type of this InputProperties.
        :type type: str
        """

        self._type = type
