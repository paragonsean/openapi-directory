# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.encoding import Encoding
from openapi_server import util


class CsvSerializationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encoding: Encoding=None, field_delimiter: str=None):
        """CsvSerializationProperties - a model defined in OpenAPI

        :param encoding: The encoding of this CsvSerializationProperties.
        :param field_delimiter: The field_delimiter of this CsvSerializationProperties.
        """
        self.openapi_types = {
            'encoding': Encoding,
            'field_delimiter': str
        }

        self.attribute_map = {
            'encoding': 'encoding',
            'field_delimiter': 'fieldDelimiter'
        }

        self._encoding = encoding
        self._field_delimiter = field_delimiter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CsvSerializationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CsvSerializationProperties of this CsvSerializationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encoding(self):
        """Gets the encoding of this CsvSerializationProperties.


        :return: The encoding of this CsvSerializationProperties.
        :rtype: Encoding
        """
        return self._encoding

    @encoding.setter
    def encoding(self, encoding):
        """Sets the encoding of this CsvSerializationProperties.


        :param encoding: The encoding of this CsvSerializationProperties.
        :type encoding: Encoding
        """

        self._encoding = encoding

    @property
    def field_delimiter(self):
        """Gets the field_delimiter of this CsvSerializationProperties.

        Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests.

        :return: The field_delimiter of this CsvSerializationProperties.
        :rtype: str
        """
        return self._field_delimiter

    @field_delimiter.setter
    def field_delimiter(self, field_delimiter):
        """Sets the field_delimiter of this CsvSerializationProperties.

        Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests.

        :param field_delimiter: The field_delimiter of this CsvSerializationProperties.
        :type field_delimiter: str
        """

        self._field_delimiter = field_delimiter
