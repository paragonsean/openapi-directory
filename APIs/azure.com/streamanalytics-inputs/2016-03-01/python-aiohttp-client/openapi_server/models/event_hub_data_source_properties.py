# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventHubDataSourceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_hub_name: str=None, service_bus_namespace: str=None, shared_access_policy_key: str=None, shared_access_policy_name: str=None):
        """EventHubDataSourceProperties - a model defined in OpenAPI

        :param event_hub_name: The event_hub_name of this EventHubDataSourceProperties.
        :param service_bus_namespace: The service_bus_namespace of this EventHubDataSourceProperties.
        :param shared_access_policy_key: The shared_access_policy_key of this EventHubDataSourceProperties.
        :param shared_access_policy_name: The shared_access_policy_name of this EventHubDataSourceProperties.
        """
        self.openapi_types = {
            'event_hub_name': str,
            'service_bus_namespace': str,
            'shared_access_policy_key': str,
            'shared_access_policy_name': str
        }

        self.attribute_map = {
            'event_hub_name': 'eventHubName',
            'service_bus_namespace': 'serviceBusNamespace',
            'shared_access_policy_key': 'sharedAccessPolicyKey',
            'shared_access_policy_name': 'sharedAccessPolicyName'
        }

        self._event_hub_name = event_hub_name
        self._service_bus_namespace = service_bus_namespace
        self._shared_access_policy_key = shared_access_policy_key
        self._shared_access_policy_name = shared_access_policy_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventHubDataSourceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventHubDataSourceProperties of this EventHubDataSourceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_hub_name(self):
        """Gets the event_hub_name of this EventHubDataSourceProperties.

        The name of the Event Hub. Required on PUT (CreateOrReplace) requests.

        :return: The event_hub_name of this EventHubDataSourceProperties.
        :rtype: str
        """
        return self._event_hub_name

    @event_hub_name.setter
    def event_hub_name(self, event_hub_name):
        """Sets the event_hub_name of this EventHubDataSourceProperties.

        The name of the Event Hub. Required on PUT (CreateOrReplace) requests.

        :param event_hub_name: The event_hub_name of this EventHubDataSourceProperties.
        :type event_hub_name: str
        """

        self._event_hub_name = event_hub_name

    @property
    def service_bus_namespace(self):
        """Gets the service_bus_namespace of this EventHubDataSourceProperties.

        The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.

        :return: The service_bus_namespace of this EventHubDataSourceProperties.
        :rtype: str
        """
        return self._service_bus_namespace

    @service_bus_namespace.setter
    def service_bus_namespace(self, service_bus_namespace):
        """Sets the service_bus_namespace of this EventHubDataSourceProperties.

        The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.

        :param service_bus_namespace: The service_bus_namespace of this EventHubDataSourceProperties.
        :type service_bus_namespace: str
        """

        self._service_bus_namespace = service_bus_namespace

    @property
    def shared_access_policy_key(self):
        """Gets the shared_access_policy_key of this EventHubDataSourceProperties.

        The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.

        :return: The shared_access_policy_key of this EventHubDataSourceProperties.
        :rtype: str
        """
        return self._shared_access_policy_key

    @shared_access_policy_key.setter
    def shared_access_policy_key(self, shared_access_policy_key):
        """Sets the shared_access_policy_key of this EventHubDataSourceProperties.

        The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.

        :param shared_access_policy_key: The shared_access_policy_key of this EventHubDataSourceProperties.
        :type shared_access_policy_key: str
        """

        self._shared_access_policy_key = shared_access_policy_key

    @property
    def shared_access_policy_name(self):
        """Gets the shared_access_policy_name of this EventHubDataSourceProperties.

        The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.

        :return: The shared_access_policy_name of this EventHubDataSourceProperties.
        :rtype: str
        """
        return self._shared_access_policy_name

    @shared_access_policy_name.setter
    def shared_access_policy_name(self, shared_access_policy_name):
        """Sets the shared_access_policy_name of this EventHubDataSourceProperties.

        The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.

        :param shared_access_policy_name: The shared_access_policy_name of this EventHubDataSourceProperties.
        :type shared_access_policy_name: str
        """

        self._shared_access_policy_name = shared_access_policy_name
