# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventHubStreamInputDataSourceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consumer_group_name: str=None, event_hub_name: str=None, service_bus_namespace: str=None, shared_access_policy_key: str=None, shared_access_policy_name: str=None):
        """EventHubStreamInputDataSourceProperties - a model defined in OpenAPI

        :param consumer_group_name: The consumer_group_name of this EventHubStreamInputDataSourceProperties.
        :param event_hub_name: The event_hub_name of this EventHubStreamInputDataSourceProperties.
        :param service_bus_namespace: The service_bus_namespace of this EventHubStreamInputDataSourceProperties.
        :param shared_access_policy_key: The shared_access_policy_key of this EventHubStreamInputDataSourceProperties.
        :param shared_access_policy_name: The shared_access_policy_name of this EventHubStreamInputDataSourceProperties.
        """
        self.openapi_types = {
            'consumer_group_name': str,
            'event_hub_name': str,
            'service_bus_namespace': str,
            'shared_access_policy_key': str,
            'shared_access_policy_name': str
        }

        self.attribute_map = {
            'consumer_group_name': 'consumerGroupName',
            'event_hub_name': 'eventHubName',
            'service_bus_namespace': 'serviceBusNamespace',
            'shared_access_policy_key': 'sharedAccessPolicyKey',
            'shared_access_policy_name': 'sharedAccessPolicyName'
        }

        self._consumer_group_name = consumer_group_name
        self._event_hub_name = event_hub_name
        self._service_bus_namespace = service_bus_namespace
        self._shared_access_policy_key = shared_access_policy_key
        self._shared_access_policy_name = shared_access_policy_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventHubStreamInputDataSourceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventHubStreamInputDataSourceProperties of this EventHubStreamInputDataSourceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consumer_group_name(self):
        """Gets the consumer_group_name of this EventHubStreamInputDataSourceProperties.

        The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.

        :return: The consumer_group_name of this EventHubStreamInputDataSourceProperties.
        :rtype: str
        """
        return self._consumer_group_name

    @consumer_group_name.setter
    def consumer_group_name(self, consumer_group_name):
        """Sets the consumer_group_name of this EventHubStreamInputDataSourceProperties.

        The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.

        :param consumer_group_name: The consumer_group_name of this EventHubStreamInputDataSourceProperties.
        :type consumer_group_name: str
        """

        self._consumer_group_name = consumer_group_name

    @property
    def event_hub_name(self):
        """Gets the event_hub_name of this EventHubStreamInputDataSourceProperties.

        The name of the Event Hub. Required on PUT (CreateOrReplace) requests.

        :return: The event_hub_name of this EventHubStreamInputDataSourceProperties.
        :rtype: str
        """
        return self._event_hub_name

    @event_hub_name.setter
    def event_hub_name(self, event_hub_name):
        """Sets the event_hub_name of this EventHubStreamInputDataSourceProperties.

        The name of the Event Hub. Required on PUT (CreateOrReplace) requests.

        :param event_hub_name: The event_hub_name of this EventHubStreamInputDataSourceProperties.
        :type event_hub_name: str
        """

        self._event_hub_name = event_hub_name

    @property
    def service_bus_namespace(self):
        """Gets the service_bus_namespace of this EventHubStreamInputDataSourceProperties.

        The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.

        :return: The service_bus_namespace of this EventHubStreamInputDataSourceProperties.
        :rtype: str
        """
        return self._service_bus_namespace

    @service_bus_namespace.setter
    def service_bus_namespace(self, service_bus_namespace):
        """Sets the service_bus_namespace of this EventHubStreamInputDataSourceProperties.

        The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.

        :param service_bus_namespace: The service_bus_namespace of this EventHubStreamInputDataSourceProperties.
        :type service_bus_namespace: str
        """

        self._service_bus_namespace = service_bus_namespace

    @property
    def shared_access_policy_key(self):
        """Gets the shared_access_policy_key of this EventHubStreamInputDataSourceProperties.

        The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.

        :return: The shared_access_policy_key of this EventHubStreamInputDataSourceProperties.
        :rtype: str
        """
        return self._shared_access_policy_key

    @shared_access_policy_key.setter
    def shared_access_policy_key(self, shared_access_policy_key):
        """Sets the shared_access_policy_key of this EventHubStreamInputDataSourceProperties.

        The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.

        :param shared_access_policy_key: The shared_access_policy_key of this EventHubStreamInputDataSourceProperties.
        :type shared_access_policy_key: str
        """

        self._shared_access_policy_key = shared_access_policy_key

    @property
    def shared_access_policy_name(self):
        """Gets the shared_access_policy_name of this EventHubStreamInputDataSourceProperties.

        The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.

        :return: The shared_access_policy_name of this EventHubStreamInputDataSourceProperties.
        :rtype: str
        """
        return self._shared_access_policy_name

    @shared_access_policy_name.setter
    def shared_access_policy_name(self, shared_access_policy_name):
        """Sets the shared_access_policy_name of this EventHubStreamInputDataSourceProperties.

        The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.

        :param shared_access_policy_name: The shared_access_policy_name of this EventHubStreamInputDataSourceProperties.
        :type shared_access_policy_name: str
        """

        self._shared_access_policy_name = shared_access_policy_name
