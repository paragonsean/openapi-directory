# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.storage_account import StorageAccount
from openapi_server import util


class BlobStreamInputDataSourceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_partition_count: int=None, container: str=None, date_format: str=None, path_pattern: str=None, storage_accounts: List[StorageAccount]=None, time_format: str=None):
        """BlobStreamInputDataSourceProperties - a model defined in OpenAPI

        :param source_partition_count: The source_partition_count of this BlobStreamInputDataSourceProperties.
        :param container: The container of this BlobStreamInputDataSourceProperties.
        :param date_format: The date_format of this BlobStreamInputDataSourceProperties.
        :param path_pattern: The path_pattern of this BlobStreamInputDataSourceProperties.
        :param storage_accounts: The storage_accounts of this BlobStreamInputDataSourceProperties.
        :param time_format: The time_format of this BlobStreamInputDataSourceProperties.
        """
        self.openapi_types = {
            'source_partition_count': int,
            'container': str,
            'date_format': str,
            'path_pattern': str,
            'storage_accounts': List[StorageAccount],
            'time_format': str
        }

        self.attribute_map = {
            'source_partition_count': 'sourcePartitionCount',
            'container': 'container',
            'date_format': 'dateFormat',
            'path_pattern': 'pathPattern',
            'storage_accounts': 'storageAccounts',
            'time_format': 'timeFormat'
        }

        self._source_partition_count = source_partition_count
        self._container = container
        self._date_format = date_format
        self._path_pattern = path_pattern
        self._storage_accounts = storage_accounts
        self._time_format = time_format

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlobStreamInputDataSourceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BlobStreamInputDataSourceProperties of this BlobStreamInputDataSourceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_partition_count(self):
        """Gets the source_partition_count of this BlobStreamInputDataSourceProperties.

        The partition count of the blob input data source. Range 1 - 256.

        :return: The source_partition_count of this BlobStreamInputDataSourceProperties.
        :rtype: int
        """
        return self._source_partition_count

    @source_partition_count.setter
    def source_partition_count(self, source_partition_count):
        """Sets the source_partition_count of this BlobStreamInputDataSourceProperties.

        The partition count of the blob input data source. Range 1 - 256.

        :param source_partition_count: The source_partition_count of this BlobStreamInputDataSourceProperties.
        :type source_partition_count: int
        """

        self._source_partition_count = source_partition_count

    @property
    def container(self):
        """Gets the container of this BlobStreamInputDataSourceProperties.

        The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.

        :return: The container of this BlobStreamInputDataSourceProperties.
        :rtype: str
        """
        return self._container

    @container.setter
    def container(self, container):
        """Sets the container of this BlobStreamInputDataSourceProperties.

        The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.

        :param container: The container of this BlobStreamInputDataSourceProperties.
        :type container: str
        """

        self._container = container

    @property
    def date_format(self):
        """Gets the date_format of this BlobStreamInputDataSourceProperties.

        The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.

        :return: The date_format of this BlobStreamInputDataSourceProperties.
        :rtype: str
        """
        return self._date_format

    @date_format.setter
    def date_format(self, date_format):
        """Sets the date_format of this BlobStreamInputDataSourceProperties.

        The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.

        :param date_format: The date_format of this BlobStreamInputDataSourceProperties.
        :type date_format: str
        """

        self._date_format = date_format

    @property
    def path_pattern(self):
        """Gets the path_pattern of this BlobStreamInputDataSourceProperties.

        The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.

        :return: The path_pattern of this BlobStreamInputDataSourceProperties.
        :rtype: str
        """
        return self._path_pattern

    @path_pattern.setter
    def path_pattern(self, path_pattern):
        """Sets the path_pattern of this BlobStreamInputDataSourceProperties.

        The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.

        :param path_pattern: The path_pattern of this BlobStreamInputDataSourceProperties.
        :type path_pattern: str
        """

        self._path_pattern = path_pattern

    @property
    def storage_accounts(self):
        """Gets the storage_accounts of this BlobStreamInputDataSourceProperties.

        A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.

        :return: The storage_accounts of this BlobStreamInputDataSourceProperties.
        :rtype: List[StorageAccount]
        """
        return self._storage_accounts

    @storage_accounts.setter
    def storage_accounts(self, storage_accounts):
        """Sets the storage_accounts of this BlobStreamInputDataSourceProperties.

        A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.

        :param storage_accounts: The storage_accounts of this BlobStreamInputDataSourceProperties.
        :type storage_accounts: List[StorageAccount]
        """

        self._storage_accounts = storage_accounts

    @property
    def time_format(self):
        """Gets the time_format of this BlobStreamInputDataSourceProperties.

        The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.

        :return: The time_format of this BlobStreamInputDataSourceProperties.
        :rtype: str
        """
        return self._time_format

    @time_format.setter
    def time_format(self, time_format):
        """Sets the time_format of this BlobStreamInputDataSourceProperties.

        The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.

        :param time_format: The time_format of this BlobStreamInputDataSourceProperties.
        :type time_format: str
        """

        self._time_format = time_format
