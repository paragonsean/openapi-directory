/*
 * NetworkAdminManagementClient
 * Virtual Network admin operation endpoints and objects.
 *
 * The version of the OpenAPI document: 2015-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.VirtualNetworkConfigurationStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The virtual network configuration state.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:40:19.385200-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VirtualNetworkConfigurationState {
  public static final String SERIALIZED_NAME_HOST_ERRORS = "hostErrors";
  @SerializedName(SERIALIZED_NAME_HOST_ERRORS)
  private List<VirtualNetworkConfigurationStatus> hostErrors = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "lastUpdatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
  private OffsetDateTime lastUpdatedTime;

  /**
   * The virtual network status.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    FAILURE("Failure"),
    
    WARNING("Warning"),
    
    SUCCESS("Success"),
    
    UNINITIALIZED("Uninitialized"),
    
    IN_PROGRESS("InProgress"),
    
    UNKNOWN("Unknown");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_VIRTUAL_NETWORK_INTERFACE_ERRORS = "virtualNetworkInterfaceErrors";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_NETWORK_INTERFACE_ERRORS)
  private List<VirtualNetworkConfigurationStatus> virtualNetworkInterfaceErrors = new ArrayList<>();

  public VirtualNetworkConfigurationState() {
  }

  public VirtualNetworkConfigurationState(
     OffsetDateTime lastUpdatedTime, 
     StatusEnum status
  ) {
    this();
    this.lastUpdatedTime = lastUpdatedTime;
    this.status = status;
  }

  public VirtualNetworkConfigurationState hostErrors(List<VirtualNetworkConfigurationStatus> hostErrors) {
    this.hostErrors = hostErrors;
    return this;
  }

  public VirtualNetworkConfigurationState addHostErrorsItem(VirtualNetworkConfigurationStatus hostErrorsItem) {
    if (this.hostErrors == null) {
      this.hostErrors = new ArrayList<>();
    }
    this.hostErrors.add(hostErrorsItem);
    return this;
  }

  /**
   * List of NIC errors associated with the resource.
   * @return hostErrors
   */
  @javax.annotation.Nullable
  public List<VirtualNetworkConfigurationStatus> getHostErrors() {
    return hostErrors;
  }

  public void setHostErrors(List<VirtualNetworkConfigurationStatus> hostErrors) {
    this.hostErrors = hostErrors;
  }


  /**
   * Last updated time for the running state.
   * @return lastUpdatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedTime() {
    return lastUpdatedTime;
  }



  /**
   * The virtual network status.
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }



  public VirtualNetworkConfigurationState virtualNetworkInterfaceErrors(List<VirtualNetworkConfigurationStatus> virtualNetworkInterfaceErrors) {
    this.virtualNetworkInterfaceErrors = virtualNetworkInterfaceErrors;
    return this;
  }

  public VirtualNetworkConfigurationState addVirtualNetworkInterfaceErrorsItem(VirtualNetworkConfigurationStatus virtualNetworkInterfaceErrorsItem) {
    if (this.virtualNetworkInterfaceErrors == null) {
      this.virtualNetworkInterfaceErrors = new ArrayList<>();
    }
    this.virtualNetworkInterfaceErrors.add(virtualNetworkInterfaceErrorsItem);
    return this;
  }

  /**
   * List of NIC errors associated with the resource.
   * @return virtualNetworkInterfaceErrors
   */
  @javax.annotation.Nullable
  public List<VirtualNetworkConfigurationStatus> getVirtualNetworkInterfaceErrors() {
    return virtualNetworkInterfaceErrors;
  }

  public void setVirtualNetworkInterfaceErrors(List<VirtualNetworkConfigurationStatus> virtualNetworkInterfaceErrors) {
    this.virtualNetworkInterfaceErrors = virtualNetworkInterfaceErrors;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualNetworkConfigurationState virtualNetworkConfigurationState = (VirtualNetworkConfigurationState) o;
    return Objects.equals(this.hostErrors, virtualNetworkConfigurationState.hostErrors) &&
        Objects.equals(this.lastUpdatedTime, virtualNetworkConfigurationState.lastUpdatedTime) &&
        Objects.equals(this.status, virtualNetworkConfigurationState.status) &&
        Objects.equals(this.virtualNetworkInterfaceErrors, virtualNetworkConfigurationState.virtualNetworkInterfaceErrors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hostErrors, lastUpdatedTime, status, virtualNetworkInterfaceErrors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualNetworkConfigurationState {\n");
    sb.append("    hostErrors: ").append(toIndentedString(hostErrors)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    virtualNetworkInterfaceErrors: ").append(toIndentedString(virtualNetworkInterfaceErrors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("hostErrors");
    openapiFields.add("lastUpdatedTime");
    openapiFields.add("status");
    openapiFields.add("virtualNetworkInterfaceErrors");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VirtualNetworkConfigurationState
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VirtualNetworkConfigurationState.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VirtualNetworkConfigurationState is not found in the empty JSON string", VirtualNetworkConfigurationState.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VirtualNetworkConfigurationState.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VirtualNetworkConfigurationState` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("hostErrors") != null && !jsonObj.get("hostErrors").isJsonNull()) {
        JsonArray jsonArrayhostErrors = jsonObj.getAsJsonArray("hostErrors");
        if (jsonArrayhostErrors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("hostErrors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `hostErrors` to be an array in the JSON string but got `%s`", jsonObj.get("hostErrors").toString()));
          }

          // validate the optional field `hostErrors` (array)
          for (int i = 0; i < jsonArrayhostErrors.size(); i++) {
            VirtualNetworkConfigurationStatus.validateJsonElement(jsonArrayhostErrors.get(i));
          };
        }
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
      if (jsonObj.get("virtualNetworkInterfaceErrors") != null && !jsonObj.get("virtualNetworkInterfaceErrors").isJsonNull()) {
        JsonArray jsonArrayvirtualNetworkInterfaceErrors = jsonObj.getAsJsonArray("virtualNetworkInterfaceErrors");
        if (jsonArrayvirtualNetworkInterfaceErrors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("virtualNetworkInterfaceErrors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `virtualNetworkInterfaceErrors` to be an array in the JSON string but got `%s`", jsonObj.get("virtualNetworkInterfaceErrors").toString()));
          }

          // validate the optional field `virtualNetworkInterfaceErrors` (array)
          for (int i = 0; i < jsonArrayvirtualNetworkInterfaceErrors.size(); i++) {
            VirtualNetworkConfigurationStatus.validateJsonElement(jsonArrayvirtualNetworkInterfaceErrors.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VirtualNetworkConfigurationState.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VirtualNetworkConfigurationState' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VirtualNetworkConfigurationState> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VirtualNetworkConfigurationState.class));

       return (TypeAdapter<T>) new TypeAdapter<VirtualNetworkConfigurationState>() {
           @Override
           public void write(JsonWriter out, VirtualNetworkConfigurationState value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VirtualNetworkConfigurationState read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VirtualNetworkConfigurationState given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VirtualNetworkConfigurationState
   * @throws IOException if the JSON string is invalid with respect to VirtualNetworkConfigurationState
   */
  public static VirtualNetworkConfigurationState fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VirtualNetworkConfigurationState.class);
  }

  /**
   * Convert an instance of VirtualNetworkConfigurationState to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

