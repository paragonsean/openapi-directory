# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.virtual_network_configuration_state import VirtualNetworkConfigurationState
from openapi_server import util


class VirtualNetworkProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_state: VirtualNetworkConfigurationState=None, provisioning_state: str=None, subscription_id: str=None, tenant_resource_uri: str=None):
        """VirtualNetworkProperties - a model defined in OpenAPI

        :param configuration_state: The configuration_state of this VirtualNetworkProperties.
        :param provisioning_state: The provisioning_state of this VirtualNetworkProperties.
        :param subscription_id: The subscription_id of this VirtualNetworkProperties.
        :param tenant_resource_uri: The tenant_resource_uri of this VirtualNetworkProperties.
        """
        self.openapi_types = {
            'configuration_state': VirtualNetworkConfigurationState,
            'provisioning_state': str,
            'subscription_id': str,
            'tenant_resource_uri': str
        }

        self.attribute_map = {
            'configuration_state': 'configurationState',
            'provisioning_state': 'provisioningState',
            'subscription_id': 'subscriptionId',
            'tenant_resource_uri': 'tenantResourceUri'
        }

        self._configuration_state = configuration_state
        self._provisioning_state = provisioning_state
        self._subscription_id = subscription_id
        self._tenant_resource_uri = tenant_resource_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualNetworkProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualNetworkProperties of this VirtualNetworkProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_state(self):
        """Gets the configuration_state of this VirtualNetworkProperties.


        :return: The configuration_state of this VirtualNetworkProperties.
        :rtype: VirtualNetworkConfigurationState
        """
        return self._configuration_state

    @configuration_state.setter
    def configuration_state(self, configuration_state):
        """Sets the configuration_state of this VirtualNetworkProperties.


        :param configuration_state: The configuration_state of this VirtualNetworkProperties.
        :type configuration_state: VirtualNetworkConfigurationState
        """

        self._configuration_state = configuration_state

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this VirtualNetworkProperties.

        The provisioning state.

        :return: The provisioning_state of this VirtualNetworkProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this VirtualNetworkProperties.

        The provisioning state.

        :param provisioning_state: The provisioning_state of this VirtualNetworkProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def subscription_id(self):
        """Gets the subscription_id of this VirtualNetworkProperties.

        The subscription ID.

        :return: The subscription_id of this VirtualNetworkProperties.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this VirtualNetworkProperties.

        The subscription ID.

        :param subscription_id: The subscription_id of this VirtualNetworkProperties.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def tenant_resource_uri(self):
        """Gets the tenant_resource_uri of this VirtualNetworkProperties.

        The tenant resource URI.

        :return: The tenant_resource_uri of this VirtualNetworkProperties.
        :rtype: str
        """
        return self._tenant_resource_uri

    @tenant_resource_uri.setter
    def tenant_resource_uri(self, tenant_resource_uri):
        """Sets the tenant_resource_uri of this VirtualNetworkProperties.

        The tenant resource URI.

        :param tenant_resource_uri: The tenant_resource_uri of this VirtualNetworkProperties.
        :type tenant_resource_uri: str
        """

        self._tenant_resource_uri = tenant_resource_uri
