# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.virtual_network_configuration_status import VirtualNetworkConfigurationStatus
from openapi_server import util


class VirtualNetworkConfigurationState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_errors: List[VirtualNetworkConfigurationStatus]=None, last_updated_time: datetime=None, status: str=None, virtual_network_interface_errors: List[VirtualNetworkConfigurationStatus]=None):
        """VirtualNetworkConfigurationState - a model defined in OpenAPI

        :param host_errors: The host_errors of this VirtualNetworkConfigurationState.
        :param last_updated_time: The last_updated_time of this VirtualNetworkConfigurationState.
        :param status: The status of this VirtualNetworkConfigurationState.
        :param virtual_network_interface_errors: The virtual_network_interface_errors of this VirtualNetworkConfigurationState.
        """
        self.openapi_types = {
            'host_errors': List[VirtualNetworkConfigurationStatus],
            'last_updated_time': datetime,
            'status': str,
            'virtual_network_interface_errors': List[VirtualNetworkConfigurationStatus]
        }

        self.attribute_map = {
            'host_errors': 'hostErrors',
            'last_updated_time': 'lastUpdatedTime',
            'status': 'status',
            'virtual_network_interface_errors': 'virtualNetworkInterfaceErrors'
        }

        self._host_errors = host_errors
        self._last_updated_time = last_updated_time
        self._status = status
        self._virtual_network_interface_errors = virtual_network_interface_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualNetworkConfigurationState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualNetworkConfigurationState of this VirtualNetworkConfigurationState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_errors(self):
        """Gets the host_errors of this VirtualNetworkConfigurationState.

        List of NIC errors associated with the resource.

        :return: The host_errors of this VirtualNetworkConfigurationState.
        :rtype: List[VirtualNetworkConfigurationStatus]
        """
        return self._host_errors

    @host_errors.setter
    def host_errors(self, host_errors):
        """Sets the host_errors of this VirtualNetworkConfigurationState.

        List of NIC errors associated with the resource.

        :param host_errors: The host_errors of this VirtualNetworkConfigurationState.
        :type host_errors: List[VirtualNetworkConfigurationStatus]
        """

        self._host_errors = host_errors

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this VirtualNetworkConfigurationState.

        Last updated time for the running state.

        :return: The last_updated_time of this VirtualNetworkConfigurationState.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this VirtualNetworkConfigurationState.

        Last updated time for the running state.

        :param last_updated_time: The last_updated_time of this VirtualNetworkConfigurationState.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def status(self):
        """Gets the status of this VirtualNetworkConfigurationState.

        The virtual network status.

        :return: The status of this VirtualNetworkConfigurationState.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this VirtualNetworkConfigurationState.

        The virtual network status.

        :param status: The status of this VirtualNetworkConfigurationState.
        :type status: str
        """
        allowed_values = ["Failure", "Warning", "Success", "Uninitialized", "InProgress", "Unknown"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def virtual_network_interface_errors(self):
        """Gets the virtual_network_interface_errors of this VirtualNetworkConfigurationState.

        List of NIC errors associated with the resource.

        :return: The virtual_network_interface_errors of this VirtualNetworkConfigurationState.
        :rtype: List[VirtualNetworkConfigurationStatus]
        """
        return self._virtual_network_interface_errors

    @virtual_network_interface_errors.setter
    def virtual_network_interface_errors(self, virtual_network_interface_errors):
        """Sets the virtual_network_interface_errors of this VirtualNetworkConfigurationState.

        List of NIC errors associated with the resource.

        :param virtual_network_interface_errors: The virtual_network_interface_errors of this VirtualNetworkConfigurationState.
        :type virtual_network_interface_errors: List[VirtualNetworkConfigurationStatus]
        """

        self._virtual_network_interface_errors = virtual_network_interface_errors
