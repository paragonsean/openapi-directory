openapi: 3.0.1
info:
  description: Role based access control provides you a way to apply granular level
    policy administration down to individual resources or resource groups. These operations
    allow you to manage role definitions. A role definition describes the set of actions
    that can be performed on resources.
  title: AuthorizationManagementClient
  version: 2018-01-01-preview
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/authorization/resource-manager/Microsoft.Authorization/preview/2018-01-01-preview/authorization-RoleDefinitionsCalls.json
    version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: authorization-authorization-RoleDefinitionsCalls
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions:
    get:
      description: Gets all permissions the caller has for a resource group.
      operationId: Permissions_ListForResourceGroup
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGetResult'
          description: OK - Returns an array of permissions.
      tags:
      - Permissions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            resourceGroupName: rgname
            subscriptionId: subID
          responses:
            "200":
              body:
                nextLink: nextlink
                value:
                - actions: []
                  dataActions: []
                  notActions: []
                  notDataActions: []
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions
  : get:
      description: Gets all permissions the caller has for a resource.
      operationId: Permissions_ListForResource
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The namespace of the resource provider.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The parent resource identity.
        in: path
        name: parentResourcePath
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The resource type of the resource.
        in: path
        name: resourceType
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the resource to get the permissions for.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGetResult'
          description: OK - Returns an array of permissions.
      tags:
      - Permissions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            parentResourcePath: parentResourcePath
            resourceGroupName: rgname
            resourceName: resourceName
            resourceProviderNamespace: rpnamespace
            resourceType: resourceType
            subscriptionId: subId
          responses:
            "200":
              body:
                value:
                - actions: []
                  notActions: []
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /{scope}/providers/Microsoft.Authorization/roleDefinitions:
    get:
      description: Get all role definitions that are applicable at scope and above.
      operationId: RoleDefinitions_List
      parameters:
      - description: The scope of the role definition.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The filter to apply on the operation. Use atScopeAndBelow filter
          to search below the given scope as well.
        in: query
        name: $filter
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinitionListResult'
          description: OK - Returns an array of role definitions.
      tags:
      - RoleDefinitions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2018-01-01-preview
            scope: scope
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId
                  name: roleDefinitionId
                  properties:
                    assignableScopes:
                    - /subscriptions/subId
                    description: Role description
                    permissions:
                    - actions:
                      - action
                      dataActions:
                      - dataAction
                      notActions: []
                      notDataActions: []
                    roleName: Role name
                    type: roletype
                  type: Microsoft.Authorization/roleDefinitions
      x-ms-odata: '#/definitions/RoleDefinitionFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}:
    delete:
      description: Deletes a role definition.
      operationId: RoleDefinitions_Delete
      parameters:
      - description: The scope of the role definition.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The ID of the role definition to delete.
        in: path
        name: roleDefinitionId
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
          description: OK - Returns information about the role definition.
      tags:
      - RoleDefinitions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2018-01-01-preview
            roleDefinitionId: roleDefinitionId
            scope: scope
          responses:
            "200":
              body:
                id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId
                name: roleDefinitionId
                properties:
                  assignableScopes:
                  - /subscriptions/subId
                  description: Role description
                  permissions:
                  - actions:
                    - action
                    dataActions:
                    - dataAction
                    notActions: []
                    notDataActions: []
                  roleName: Role name
                  type: roletype
                type: Microsoft.Authorization/roleDefinitions
      x-accepts:
      - application/json
    get:
      description: Get role definition by name (GUID).
      operationId: RoleDefinitions_Get
      parameters:
      - description: The scope of the role definition.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The ID of the role definition.
        in: path
        name: roleDefinitionId
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
          description: OK - Returns information about the role definition.
      tags:
      - RoleDefinitions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2018-01-01-preview
            roleDefinitionId: roleDefinitionId
            scope: scope
          responses:
            "200":
              body:
                id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId
                name: roleDefinitionId
                properties:
                  assignableScopes:
                  - /subscriptions/subId
                  description: Role description
                  permissions:
                  - actions:
                    - action
                    dataActions:
                    - dataAction
                    notActions: []
                    notDataActions: []
                  roleName: Role name
                  type: roletype
                type: Microsoft.Authorization/roleDefinitions
      x-accepts:
      - application/json
    put:
      description: Creates or updates a role definition.
      operationId: RoleDefinitions_CreateOrUpdate
      parameters:
      - description: The scope of the role definition.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The ID of the role definition.
        in: path
        name: roleDefinitionId
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDefinition'
        description: The values for the role definition.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
          description: OK - Returns information about the role definition.
      tags:
      - RoleDefinitions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2018-01-01-preview
            body:
              roleDefinition:
                assignableScopes:
                - /subscriptions/subId
                description: Role description
                id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId
                name: roleDefinitionId
                permissions:
                - actions:
                  - action
                  dataActions:
                  - dataAction
                  notActions: []
                  notDataActions: []
                roleName: Role name
                type: Microsoft.Authorization/roleDefinitions
            roleDefinition: {}
            roleDefinitionId: roleDefinitionId
            scope: scope
          responses:
            "201":
              body:
                id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId
                name: roleDefinitionId
                properties:
                  assignableScopes:
                  - /subscriptions/subId
                  description: Role description
                  permissions:
                  - actions:
                    - action
                    dataActions:
                    - dataAction
                    notActions: []
                    notDataActions: []
                  roleName: Role name
                  type: roletype
                type: Microsoft.Authorization/roleDefinitions
      x-codegen-request-body-name: roleDefinition
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    ApiVersionParameter:
      description: The API version to use for this operation.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    FilterParameter:
      description: "The filter to apply on the operation. Use $filter=atScope() to\
        \ return all deny assignments at or above the scope. Use $filter=denyAssignmentName\
        \ eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId\
        \ eq '{id}' to return all deny assignments at, above and below the scope for\
        \ the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to\
        \ return all deny assignments at, above and below the scope for the specified\
        \ principal. This filter is different from the principalId filter as it returns\
        \ not only those deny assignments that contain the specified principal is\
        \ the Principals list but also those deny assignments that contain the specified\
        \ principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId\
        \ filter is used, only the deny assignment name and description properties\
        \ are returned."
      in: query
      name: $filter
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ResourceGroupNameParameter:
      description: The name of the resource group.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ResourceProviderNamespaceParameter:
      description: The namespace of the resource provider.
      in: path
      name: resourceProviderNamespace
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: The ID of the target subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    Permission:
      description: Role definition permissions.
      example:
        notActions:
        - notActions
        - notActions
        dataActions:
        - dataActions
        - dataActions
        notDataActions:
        - notDataActions
        - notDataActions
        actions:
        - actions
        - actions
      properties:
        actions:
          description: Allowed actions.
          items:
            type: string
          type: array
        dataActions:
          description: Allowed Data actions.
          items:
            type: string
          type: array
        notActions:
          description: Denied actions.
          items:
            type: string
          type: array
        notDataActions:
          description: Denied Data actions.
          items:
            type: string
          type: array
      type: object
    PermissionGetResult:
      description: Permissions information.
      example:
        value:
        - notActions:
          - notActions
          - notActions
          dataActions:
          - dataActions
          - dataActions
          notDataActions:
          - notDataActions
          - notDataActions
          actions:
          - actions
          - actions
        - notActions:
          - notActions
          - notActions
          dataActions:
          - dataActions
          - dataActions
          notDataActions:
          - notDataActions
          - notDataActions
          actions:
          - actions
          - actions
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
        value:
          description: An array of permissions.
          items:
            $ref: '#/components/schemas/Permission'
          type: array
      type: object
    RoleDefinition:
      description: Role definition.
      example:
        name: name
        id: id
        type: type
        properties:
          permissions:
          - notActions:
            - notActions
            - notActions
            dataActions:
            - dataActions
            - dataActions
            notDataActions:
            - notDataActions
            - notDataActions
            actions:
            - actions
            - actions
          - notActions:
            - notActions
            - notActions
            dataActions:
            - dataActions
            - dataActions
            notDataActions:
            - notDataActions
            - notDataActions
            actions:
            - actions
            - actions
          roleName: roleName
          description: description
          type: type
          assignableScopes:
          - assignableScopes
          - assignableScopes
      properties:
        id:
          description: The role definition ID.
          readOnly: true
          type: string
        name:
          description: The role definition name.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/RoleDefinitionProperties'
        type:
          description: The role definition type.
          readOnly: true
          type: string
      type: object
    RoleDefinitionFilter:
      description: Role Definitions filter
      properties:
        roleName:
          description: Returns role definition with the specific name.
          type: string
        type:
          description: Returns role definition with the specific type.
          type: string
      type: object
    RoleDefinitionListResult:
      description: Role definition list operation result.
      example:
        value:
        - name: name
          id: id
          type: type
          properties:
            permissions:
            - notActions:
              - notActions
              - notActions
              dataActions:
              - dataActions
              - dataActions
              notDataActions:
              - notDataActions
              - notDataActions
              actions:
              - actions
              - actions
            - notActions:
              - notActions
              - notActions
              dataActions:
              - dataActions
              - dataActions
              notDataActions:
              - notDataActions
              - notDataActions
              actions:
              - actions
              - actions
            roleName: roleName
            description: description
            type: type
            assignableScopes:
            - assignableScopes
            - assignableScopes
        - name: name
          id: id
          type: type
          properties:
            permissions:
            - notActions:
              - notActions
              - notActions
              dataActions:
              - dataActions
              - dataActions
              notDataActions:
              - notDataActions
              - notDataActions
              actions:
              - actions
              - actions
            - notActions:
              - notActions
              - notActions
              dataActions:
              - dataActions
              - dataActions
              notDataActions:
              - notDataActions
              - notDataActions
              actions:
              - actions
              - actions
            roleName: roleName
            description: description
            type: type
            assignableScopes:
            - assignableScopes
            - assignableScopes
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
        value:
          description: Role definition list.
          items:
            $ref: '#/components/schemas/RoleDefinition'
          type: array
      type: object
    RoleDefinitionProperties:
      description: Role definition properties.
      example:
        permissions:
        - notActions:
          - notActions
          - notActions
          dataActions:
          - dataActions
          - dataActions
          notDataActions:
          - notDataActions
          - notDataActions
          actions:
          - actions
          - actions
        - notActions:
          - notActions
          - notActions
          dataActions:
          - dataActions
          - dataActions
          notDataActions:
          - notDataActions
          - notDataActions
          actions:
          - actions
          - actions
        roleName: roleName
        description: description
        type: type
        assignableScopes:
        - assignableScopes
        - assignableScopes
      properties:
        assignableScopes:
          description: Role definition assignable scopes.
          items:
            type: string
          type: array
        description:
          description: The role definition description.
          type: string
        permissions:
          description: Role definition permissions.
          items:
            $ref: '#/components/schemas/Permission'
          type: array
        roleName:
          description: The role name.
          type: string
        type:
          description: The role type.
          type: string
          x-ms-client-name: roleType
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-ms-paths:
  /{roleId}?disambiguation_dummy:
    get:
      description: Gets a role definition by ID.
      operationId: RoleDefinitions_GetById
      parameters:
      - description: "The fully qualified role definition ID. Use the format, /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}\
          \ for subscription level role definitions, or /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}\
          \ for tenant level role definitions."
        in: path
        name: roleId
        required: true
        type: string
        x-ms-skip-url-encoding: true
      - $ref: '#/parameters/ApiVersionParameter'
      responses:
        "200":
          description: OK - Returns information about the role definition.
          schema:
            $ref: '#/definitions/RoleDefinition'
      tags:
      - RoleDefinitions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2018-01-01-preview
            roleId: roleDefinitionId
          responses:
            "200":
              body:
                id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId
                name: roleDefinitionId
                properties:
                  assignableScopes:
                  - /subscriptions/subId
                  description: Role description
                  permissions:
                  - actions:
                    - action
                    dataActions:
                    - dataAction
                    notActions: []
                    notDataActions: []
                  roleName: Role name
                  type: roletype
                type: Microsoft.Authorization/roleDefinitions
x-original-swagger-version: "2.0"

