/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-06-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIValidateProbeInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIValidateProbeInput::OAIValidateProbeInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIValidateProbeInput::OAIValidateProbeInput() {
    this->initializeModel();
}

OAIValidateProbeInput::~OAIValidateProbeInput() {}

void OAIValidateProbeInput::initializeModel() {

    m_probe_url_isSet = false;
    m_probe_url_isValid = false;
}

void OAIValidateProbeInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIValidateProbeInput::fromJsonObject(QJsonObject json) {

    m_probe_url_isValid = ::OpenAPI::fromJsonValue(m_probe_url, json[QString("probeURL")]);
    m_probe_url_isSet = !json[QString("probeURL")].isNull() && m_probe_url_isValid;
}

QString OAIValidateProbeInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIValidateProbeInput::asJsonObject() const {
    QJsonObject obj;
    if (m_probe_url_isSet) {
        obj.insert(QString("probeURL"), ::OpenAPI::toJsonValue(m_probe_url));
    }
    return obj;
}

QString OAIValidateProbeInput::getProbeUrl() const {
    return m_probe_url;
}
void OAIValidateProbeInput::setProbeUrl(const QString &probe_url) {
    m_probe_url = probe_url;
    m_probe_url_isSet = true;
}

bool OAIValidateProbeInput::is_probe_url_Set() const{
    return m_probe_url_isSet;
}

bool OAIValidateProbeInput::is_probe_url_Valid() const{
    return m_probe_url_isValid;
}

bool OAIValidateProbeInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_probe_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIValidateProbeInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_probe_url_isValid && true;
}

} // namespace OpenAPI
