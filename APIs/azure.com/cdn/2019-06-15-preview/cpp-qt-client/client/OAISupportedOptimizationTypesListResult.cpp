/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-06-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISupportedOptimizationTypesListResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISupportedOptimizationTypesListResult::OAISupportedOptimizationTypesListResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISupportedOptimizationTypesListResult::OAISupportedOptimizationTypesListResult() {
    this->initializeModel();
}

OAISupportedOptimizationTypesListResult::~OAISupportedOptimizationTypesListResult() {}

void OAISupportedOptimizationTypesListResult::initializeModel() {

    m_supported_optimization_types_isSet = false;
    m_supported_optimization_types_isValid = false;
}

void OAISupportedOptimizationTypesListResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISupportedOptimizationTypesListResult::fromJsonObject(QJsonObject json) {

    m_supported_optimization_types_isValid = ::OpenAPI::fromJsonValue(m_supported_optimization_types, json[QString("supportedOptimizationTypes")]);
    m_supported_optimization_types_isSet = !json[QString("supportedOptimizationTypes")].isNull() && m_supported_optimization_types_isValid;
}

QString OAISupportedOptimizationTypesListResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISupportedOptimizationTypesListResult::asJsonObject() const {
    QJsonObject obj;
    if (m_supported_optimization_types.size() > 0) {
        obj.insert(QString("supportedOptimizationTypes"), ::OpenAPI::toJsonValue(m_supported_optimization_types));
    }
    return obj;
}

QList<OAIOptimizationType> OAISupportedOptimizationTypesListResult::getSupportedOptimizationTypes() const {
    return m_supported_optimization_types;
}
void OAISupportedOptimizationTypesListResult::setSupportedOptimizationTypes(const QList<OAIOptimizationType> &supported_optimization_types) {
    m_supported_optimization_types = supported_optimization_types;
    m_supported_optimization_types_isSet = true;
}

bool OAISupportedOptimizationTypesListResult::is_supported_optimization_types_Set() const{
    return m_supported_optimization_types_isSet;
}

bool OAISupportedOptimizationTypesListResult::is_supported_optimization_types_Valid() const{
    return m_supported_optimization_types_isValid;
}

bool OAISupportedOptimizationTypesListResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_supported_optimization_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISupportedOptimizationTypesListResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
