/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-06-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Profile from '../model/Profile';
import ProfileListResult from '../model/ProfileListResult';
import ProfileUpdateParameters from '../model/ProfileUpdateParameters';
import ResourceUsageListResult from '../model/ResourceUsageListResult';
import SsoUri from '../model/SsoUri';
import SupportedOptimizationTypesListResult from '../model/SupportedOptimizationTypesListResult';

/**
* Profiles service.
* @module api/ProfilesApi
* @version 2019-06-15-preview
*/
export default class ProfilesApi {

    /**
    * Constructs a new ProfilesApi. 
    * @alias module:api/ProfilesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the profilesCreate operation.
     * @callback module:api/ProfilesApi~profilesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Profile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new CDN profile with a profile name under the specified subscription and resource group.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:model/Profile} profile Profile properties needed to create a new profile.
     * @param {module:api/ProfilesApi~profilesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Profile}
     */
    profilesCreate(resourceGroupName, profileName, subscriptionId, apiVersion, profile, callback) {
      let postBody = profile;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling profilesCreate");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling profilesCreate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling profilesCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling profilesCreate");
      }
      // verify the required parameter 'profile' is set
      if (profile === undefined || profile === null) {
        throw new Error("Missing the required parameter 'profile' when calling profilesCreate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Profile;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the profilesDelete operation.
     * @callback module:api/ProfilesApi~profilesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an existing CDN profile with the specified parameters. Deleting a profile will result in the deletion of all of the sub-resources including endpoints, origins and custom domains.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/ProfilesApi~profilesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    profilesDelete(resourceGroupName, profileName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling profilesDelete");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling profilesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling profilesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling profilesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the profilesGenerateSsoUri operation.
     * @callback module:api/ProfilesApi~profilesGenerateSsoUriCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SsoUri} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is used to configure advanced feature capabilities that are not yet available in the Azure portal, such as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and alerts in a premium profile. The SSO URI changes approximately every 10 minutes.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/ProfilesApi~profilesGenerateSsoUriCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SsoUri}
     */
    profilesGenerateSsoUri(resourceGroupName, profileName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling profilesGenerateSsoUri");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling profilesGenerateSsoUri");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling profilesGenerateSsoUri");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling profilesGenerateSsoUri");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SsoUri;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/generateSsoUri', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the profilesGet operation.
     * @callback module:api/ProfilesApi~profilesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Profile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a CDN profile with the specified profile name under the specified subscription and resource group.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/ProfilesApi~profilesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Profile}
     */
    profilesGet(resourceGroupName, profileName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling profilesGet");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling profilesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling profilesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling profilesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Profile;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the profilesList operation.
     * @callback module:api/ProfilesApi~profilesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProfileListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the CDN profiles within an Azure subscription.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/ProfilesApi~profilesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProfileListResult}
     */
    profilesList(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling profilesList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling profilesList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProfileListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/profiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the profilesListByResourceGroup operation.
     * @callback module:api/ProfilesApi~profilesListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProfileListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the CDN profiles within a resource group.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/ProfilesApi~profilesListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProfileListResult}
     */
    profilesListByResourceGroup(resourceGroupName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling profilesListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling profilesListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling profilesListByResourceGroup");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProfileListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the profilesListResourceUsage operation.
     * @callback module:api/ProfilesApi~profilesListResourceUsageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceUsageListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks the quota and actual usage of endpoints under the given CDN profile.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/ProfilesApi~profilesListResourceUsageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceUsageListResult}
     */
    profilesListResourceUsage(resourceGroupName, profileName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling profilesListResourceUsage");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling profilesListResourceUsage");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling profilesListResourceUsage");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling profilesListResourceUsage");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceUsageListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/checkResourceUsage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the profilesListSupportedOptimizationTypes operation.
     * @callback module:api/ProfilesApi~profilesListSupportedOptimizationTypesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SupportedOptimizationTypesListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the supported optimization types for the current profile. A user can create an endpoint with an optimization type from the listed values.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/ProfilesApi~profilesListSupportedOptimizationTypesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SupportedOptimizationTypesListResult}
     */
    profilesListSupportedOptimizationTypes(resourceGroupName, profileName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling profilesListSupportedOptimizationTypes");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling profilesListSupportedOptimizationTypes");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling profilesListSupportedOptimizationTypes");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling profilesListSupportedOptimizationTypes");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SupportedOptimizationTypesListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getSupportedOptimizationTypes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the profilesUpdate operation.
     * @callback module:api/ProfilesApi~profilesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Profile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing CDN profile with the specified profile name under the specified subscription and resource group.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:model/ProfileUpdateParameters} profileUpdateParameters Profile properties needed to update an existing profile.
     * @param {module:api/ProfilesApi~profilesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Profile}
     */
    profilesUpdate(resourceGroupName, profileName, subscriptionId, apiVersion, profileUpdateParameters, callback) {
      let postBody = profileUpdateParameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling profilesUpdate");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling profilesUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling profilesUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling profilesUpdate");
      }
      // verify the required parameter 'profileUpdateParameters' is set
      if (profileUpdateParameters === undefined || profileUpdateParameters === null) {
        throw new Error("Missing the required parameter 'profileUpdateParameters' when calling profilesUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Profile;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
