/*
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
 *
 * The version of the OpenAPI document: 2015-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.Origin;
import org.openapitools.client.model.OriginListResult;
import org.openapitools.client.model.OriginParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OriginsApi
 */
@Disabled
public class OriginsApiTest {

    private final OriginsApi api = new OriginsApi();

    /**
     * Creates a new CDN origin within an endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void originsCreateTest() throws ApiException {
        String originName = null;
        String endpointName = null;
        String profileName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        OriginParameters originProperties = null;
        Origin response = api.originsCreate(originName, endpointName, profileName, resourceGroupName, subscriptionId, apiVersion, originProperties);
        // TODO: test validations
    }

    /**
     * Deletes an existing CDN origin within an endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void originsDeleteIfExistsTest() throws ApiException {
        String originName = null;
        String endpointName = null;
        String profileName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Origin response = api.originsDeleteIfExists(originName, endpointName, profileName, resourceGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets an existing CDN origin within an endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void originsGetTest() throws ApiException {
        String originName = null;
        String endpointName = null;
        String profileName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Origin response = api.originsGet(originName, endpointName, profileName, resourceGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists the existing CDN origins within an endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void originsListByEndpointTest() throws ApiException {
        String endpointName = null;
        String profileName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        OriginListResult response = api.originsListByEndpoint(endpointName, profileName, resourceGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates an existing CDN origin within an endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void originsUpdateTest() throws ApiException {
        String originName = null;
        String endpointName = null;
        String profileName = null;
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        OriginParameters originProperties = null;
        Origin response = api.originsUpdate(originName, endpointName, profileName, resourceGroupName, subscriptionId, apiVersion, originProperties);
        // TODO: test validations
    }

}
