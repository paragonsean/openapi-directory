# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CidrIpAddress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_ip_address: str=None, prefix_length: int=None):
        """CidrIpAddress - a model defined in OpenAPI

        :param base_ip_address: The base_ip_address of this CidrIpAddress.
        :param prefix_length: The prefix_length of this CidrIpAddress.
        """
        self.openapi_types = {
            'base_ip_address': str,
            'prefix_length': int
        }

        self.attribute_map = {
            'base_ip_address': 'baseIpAddress',
            'prefix_length': 'prefixLength'
        }

        self._base_ip_address = base_ip_address
        self._prefix_length = prefix_length

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CidrIpAddress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The cidrIpAddress of this CidrIpAddress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_ip_address(self):
        """Gets the base_ip_address of this CidrIpAddress.

        Ip address itself.

        :return: The base_ip_address of this CidrIpAddress.
        :rtype: str
        """
        return self._base_ip_address

    @base_ip_address.setter
    def base_ip_address(self, base_ip_address):
        """Sets the base_ip_address of this CidrIpAddress.

        Ip address itself.

        :param base_ip_address: The base_ip_address of this CidrIpAddress.
        :type base_ip_address: str
        """

        self._base_ip_address = base_ip_address

    @property
    def prefix_length(self):
        """Gets the prefix_length of this CidrIpAddress.

        The length of the prefix of the ip address.

        :return: The prefix_length of this CidrIpAddress.
        :rtype: int
        """
        return self._prefix_length

    @prefix_length.setter
    def prefix_length(self, prefix_length):
        """Sets the prefix_length of this CidrIpAddress.

        The length of the prefix of the ip address.

        :param prefix_length: The prefix_length of this CidrIpAddress.
        :type prefix_length: int
        """

        self._prefix_length = prefix_length
