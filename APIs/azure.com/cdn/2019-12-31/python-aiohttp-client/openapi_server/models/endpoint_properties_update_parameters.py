# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.endpoint_properties_update_parameters_delivery_policy import EndpointPropertiesUpdateParametersDeliveryPolicy
from openapi_server.models.geo_filter import GeoFilter
from openapi_server.models.optimization_type import OptimizationType
from openapi_server.models.query_string_caching_behavior import QueryStringCachingBehavior
from openapi_server.models.resource_reference import ResourceReference
from openapi_server import util


class EndpointPropertiesUpdateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_types_to_compress: List[str]=None, default_origin_group: ResourceReference=None, delivery_policy: EndpointPropertiesUpdateParametersDeliveryPolicy=None, geo_filters: List[GeoFilter]=None, is_compression_enabled: bool=None, is_http_allowed: bool=None, is_https_allowed: bool=None, optimization_type: OptimizationType=None, origin_host_header: str=None, origin_path: str=None, probe_path: str=None, query_string_caching_behavior: QueryStringCachingBehavior=None):
        """EndpointPropertiesUpdateParameters - a model defined in OpenAPI

        :param content_types_to_compress: The content_types_to_compress of this EndpointPropertiesUpdateParameters.
        :param default_origin_group: The default_origin_group of this EndpointPropertiesUpdateParameters.
        :param delivery_policy: The delivery_policy of this EndpointPropertiesUpdateParameters.
        :param geo_filters: The geo_filters of this EndpointPropertiesUpdateParameters.
        :param is_compression_enabled: The is_compression_enabled of this EndpointPropertiesUpdateParameters.
        :param is_http_allowed: The is_http_allowed of this EndpointPropertiesUpdateParameters.
        :param is_https_allowed: The is_https_allowed of this EndpointPropertiesUpdateParameters.
        :param optimization_type: The optimization_type of this EndpointPropertiesUpdateParameters.
        :param origin_host_header: The origin_host_header of this EndpointPropertiesUpdateParameters.
        :param origin_path: The origin_path of this EndpointPropertiesUpdateParameters.
        :param probe_path: The probe_path of this EndpointPropertiesUpdateParameters.
        :param query_string_caching_behavior: The query_string_caching_behavior of this EndpointPropertiesUpdateParameters.
        """
        self.openapi_types = {
            'content_types_to_compress': List[str],
            'default_origin_group': ResourceReference,
            'delivery_policy': EndpointPropertiesUpdateParametersDeliveryPolicy,
            'geo_filters': List[GeoFilter],
            'is_compression_enabled': bool,
            'is_http_allowed': bool,
            'is_https_allowed': bool,
            'optimization_type': OptimizationType,
            'origin_host_header': str,
            'origin_path': str,
            'probe_path': str,
            'query_string_caching_behavior': QueryStringCachingBehavior
        }

        self.attribute_map = {
            'content_types_to_compress': 'contentTypesToCompress',
            'default_origin_group': 'defaultOriginGroup',
            'delivery_policy': 'deliveryPolicy',
            'geo_filters': 'geoFilters',
            'is_compression_enabled': 'isCompressionEnabled',
            'is_http_allowed': 'isHttpAllowed',
            'is_https_allowed': 'isHttpsAllowed',
            'optimization_type': 'optimizationType',
            'origin_host_header': 'originHostHeader',
            'origin_path': 'originPath',
            'probe_path': 'probePath',
            'query_string_caching_behavior': 'queryStringCachingBehavior'
        }

        self._content_types_to_compress = content_types_to_compress
        self._default_origin_group = default_origin_group
        self._delivery_policy = delivery_policy
        self._geo_filters = geo_filters
        self._is_compression_enabled = is_compression_enabled
        self._is_http_allowed = is_http_allowed
        self._is_https_allowed = is_https_allowed
        self._optimization_type = optimization_type
        self._origin_host_header = origin_host_header
        self._origin_path = origin_path
        self._probe_path = probe_path
        self._query_string_caching_behavior = query_string_caching_behavior

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointPropertiesUpdateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndpointPropertiesUpdateParameters of this EndpointPropertiesUpdateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_types_to_compress(self):
        """Gets the content_types_to_compress of this EndpointPropertiesUpdateParameters.

        List of content types on which compression applies. The value should be a valid MIME type.

        :return: The content_types_to_compress of this EndpointPropertiesUpdateParameters.
        :rtype: List[str]
        """
        return self._content_types_to_compress

    @content_types_to_compress.setter
    def content_types_to_compress(self, content_types_to_compress):
        """Sets the content_types_to_compress of this EndpointPropertiesUpdateParameters.

        List of content types on which compression applies. The value should be a valid MIME type.

        :param content_types_to_compress: The content_types_to_compress of this EndpointPropertiesUpdateParameters.
        :type content_types_to_compress: List[str]
        """

        self._content_types_to_compress = content_types_to_compress

    @property
    def default_origin_group(self):
        """Gets the default_origin_group of this EndpointPropertiesUpdateParameters.


        :return: The default_origin_group of this EndpointPropertiesUpdateParameters.
        :rtype: ResourceReference
        """
        return self._default_origin_group

    @default_origin_group.setter
    def default_origin_group(self, default_origin_group):
        """Sets the default_origin_group of this EndpointPropertiesUpdateParameters.


        :param default_origin_group: The default_origin_group of this EndpointPropertiesUpdateParameters.
        :type default_origin_group: ResourceReference
        """

        self._default_origin_group = default_origin_group

    @property
    def delivery_policy(self):
        """Gets the delivery_policy of this EndpointPropertiesUpdateParameters.


        :return: The delivery_policy of this EndpointPropertiesUpdateParameters.
        :rtype: EndpointPropertiesUpdateParametersDeliveryPolicy
        """
        return self._delivery_policy

    @delivery_policy.setter
    def delivery_policy(self, delivery_policy):
        """Sets the delivery_policy of this EndpointPropertiesUpdateParameters.


        :param delivery_policy: The delivery_policy of this EndpointPropertiesUpdateParameters.
        :type delivery_policy: EndpointPropertiesUpdateParametersDeliveryPolicy
        """

        self._delivery_policy = delivery_policy

    @property
    def geo_filters(self):
        """Gets the geo_filters of this EndpointPropertiesUpdateParameters.

        List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/

        :return: The geo_filters of this EndpointPropertiesUpdateParameters.
        :rtype: List[GeoFilter]
        """
        return self._geo_filters

    @geo_filters.setter
    def geo_filters(self, geo_filters):
        """Sets the geo_filters of this EndpointPropertiesUpdateParameters.

        List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/

        :param geo_filters: The geo_filters of this EndpointPropertiesUpdateParameters.
        :type geo_filters: List[GeoFilter]
        """

        self._geo_filters = geo_filters

    @property
    def is_compression_enabled(self):
        """Gets the is_compression_enabled of this EndpointPropertiesUpdateParameters.

        Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.

        :return: The is_compression_enabled of this EndpointPropertiesUpdateParameters.
        :rtype: bool
        """
        return self._is_compression_enabled

    @is_compression_enabled.setter
    def is_compression_enabled(self, is_compression_enabled):
        """Sets the is_compression_enabled of this EndpointPropertiesUpdateParameters.

        Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.

        :param is_compression_enabled: The is_compression_enabled of this EndpointPropertiesUpdateParameters.
        :type is_compression_enabled: bool
        """

        self._is_compression_enabled = is_compression_enabled

    @property
    def is_http_allowed(self):
        """Gets the is_http_allowed of this EndpointPropertiesUpdateParameters.

        Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.

        :return: The is_http_allowed of this EndpointPropertiesUpdateParameters.
        :rtype: bool
        """
        return self._is_http_allowed

    @is_http_allowed.setter
    def is_http_allowed(self, is_http_allowed):
        """Sets the is_http_allowed of this EndpointPropertiesUpdateParameters.

        Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.

        :param is_http_allowed: The is_http_allowed of this EndpointPropertiesUpdateParameters.
        :type is_http_allowed: bool
        """

        self._is_http_allowed = is_http_allowed

    @property
    def is_https_allowed(self):
        """Gets the is_https_allowed of this EndpointPropertiesUpdateParameters.

        Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.

        :return: The is_https_allowed of this EndpointPropertiesUpdateParameters.
        :rtype: bool
        """
        return self._is_https_allowed

    @is_https_allowed.setter
    def is_https_allowed(self, is_https_allowed):
        """Sets the is_https_allowed of this EndpointPropertiesUpdateParameters.

        Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.

        :param is_https_allowed: The is_https_allowed of this EndpointPropertiesUpdateParameters.
        :type is_https_allowed: bool
        """

        self._is_https_allowed = is_https_allowed

    @property
    def optimization_type(self):
        """Gets the optimization_type of this EndpointPropertiesUpdateParameters.


        :return: The optimization_type of this EndpointPropertiesUpdateParameters.
        :rtype: OptimizationType
        """
        return self._optimization_type

    @optimization_type.setter
    def optimization_type(self, optimization_type):
        """Sets the optimization_type of this EndpointPropertiesUpdateParameters.


        :param optimization_type: The optimization_type of this EndpointPropertiesUpdateParameters.
        :type optimization_type: OptimizationType
        """

        self._optimization_type = optimization_type

    @property
    def origin_host_header(self):
        """Gets the origin_host_header of this EndpointPropertiesUpdateParameters.

        The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.

        :return: The origin_host_header of this EndpointPropertiesUpdateParameters.
        :rtype: str
        """
        return self._origin_host_header

    @origin_host_header.setter
    def origin_host_header(self, origin_host_header):
        """Sets the origin_host_header of this EndpointPropertiesUpdateParameters.

        The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.

        :param origin_host_header: The origin_host_header of this EndpointPropertiesUpdateParameters.
        :type origin_host_header: str
        """

        self._origin_host_header = origin_host_header

    @property
    def origin_path(self):
        """Gets the origin_path of this EndpointPropertiesUpdateParameters.

        A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.

        :return: The origin_path of this EndpointPropertiesUpdateParameters.
        :rtype: str
        """
        return self._origin_path

    @origin_path.setter
    def origin_path(self, origin_path):
        """Sets the origin_path of this EndpointPropertiesUpdateParameters.

        A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.

        :param origin_path: The origin_path of this EndpointPropertiesUpdateParameters.
        :type origin_path: str
        """

        self._origin_path = origin_path

    @property
    def probe_path(self):
        """Gets the probe_path of this EndpointPropertiesUpdateParameters.

        Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.

        :return: The probe_path of this EndpointPropertiesUpdateParameters.
        :rtype: str
        """
        return self._probe_path

    @probe_path.setter
    def probe_path(self, probe_path):
        """Sets the probe_path of this EndpointPropertiesUpdateParameters.

        Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.

        :param probe_path: The probe_path of this EndpointPropertiesUpdateParameters.
        :type probe_path: str
        """

        self._probe_path = probe_path

    @property
    def query_string_caching_behavior(self):
        """Gets the query_string_caching_behavior of this EndpointPropertiesUpdateParameters.


        :return: The query_string_caching_behavior of this EndpointPropertiesUpdateParameters.
        :rtype: QueryStringCachingBehavior
        """
        return self._query_string_caching_behavior

    @query_string_caching_behavior.setter
    def query_string_caching_behavior(self, query_string_caching_behavior):
        """Sets the query_string_caching_behavior of this EndpointPropertiesUpdateParameters.


        :param query_string_caching_behavior: The query_string_caching_behavior of this EndpointPropertiesUpdateParameters.
        :type query_string_caching_behavior: QueryStringCachingBehavior
        """

        self._query_string_caching_behavior = query_string_caching_behavior
