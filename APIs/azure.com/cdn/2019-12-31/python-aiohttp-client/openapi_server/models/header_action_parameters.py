# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HeaderActionParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, odata_type: str=None, header_action: str=None, header_name: str=None, value: str=None):
        """HeaderActionParameters - a model defined in OpenAPI

        :param odata_type: The odata_type of this HeaderActionParameters.
        :param header_action: The header_action of this HeaderActionParameters.
        :param header_name: The header_name of this HeaderActionParameters.
        :param value: The value of this HeaderActionParameters.
        """
        self.openapi_types = {
            'odata_type': str,
            'header_action': str,
            'header_name': str,
            'value': str
        }

        self.attribute_map = {
            'odata_type': '@odata.type',
            'header_action': 'headerAction',
            'header_name': 'headerName',
            'value': 'value'
        }

        self._odata_type = odata_type
        self._header_action = header_action
        self._header_name = header_name
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HeaderActionParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HeaderActionParameters of this HeaderActionParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def odata_type(self):
        """Gets the odata_type of this HeaderActionParameters.


        :return: The odata_type of this HeaderActionParameters.
        :rtype: str
        """
        return self._odata_type

    @odata_type.setter
    def odata_type(self, odata_type):
        """Sets the odata_type of this HeaderActionParameters.


        :param odata_type: The odata_type of this HeaderActionParameters.
        :type odata_type: str
        """
        allowed_values = ["#Microsoft.Azure.Cdn.Models.DeliveryRuleHeaderActionParameters"]  # noqa: E501
        if odata_type not in allowed_values:
            raise ValueError(
                "Invalid value for `odata_type` ({0}), must be one of {1}"
                .format(odata_type, allowed_values)
            )

        self._odata_type = odata_type

    @property
    def header_action(self):
        """Gets the header_action of this HeaderActionParameters.

        Action to perform

        :return: The header_action of this HeaderActionParameters.
        :rtype: str
        """
        return self._header_action

    @header_action.setter
    def header_action(self, header_action):
        """Sets the header_action of this HeaderActionParameters.

        Action to perform

        :param header_action: The header_action of this HeaderActionParameters.
        :type header_action: str
        """
        allowed_values = ["Append", "Overwrite", "Delete"]  # noqa: E501
        if header_action not in allowed_values:
            raise ValueError(
                "Invalid value for `header_action` ({0}), must be one of {1}"
                .format(header_action, allowed_values)
            )

        self._header_action = header_action

    @property
    def header_name(self):
        """Gets the header_name of this HeaderActionParameters.

        Name of the header to modify

        :return: The header_name of this HeaderActionParameters.
        :rtype: str
        """
        return self._header_name

    @header_name.setter
    def header_name(self, header_name):
        """Sets the header_name of this HeaderActionParameters.

        Name of the header to modify

        :param header_name: The header_name of this HeaderActionParameters.
        :type header_name: str
        """
        if header_name is None:
            raise ValueError("Invalid value for `header_name`, must not be `None`")

        self._header_name = header_name

    @property
    def value(self):
        """Gets the value of this HeaderActionParameters.

        Value for the specified action

        :return: The value of this HeaderActionParameters.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this HeaderActionParameters.

        Value for the specified action

        :param value: The value of this HeaderActionParameters.
        :type value: str
        """

        self._value = value
