# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cidr_ip_address import CidrIpAddress
from openapi_server import util


class IpAddressGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delivery_region: str=None, ipv4_addresses: List[CidrIpAddress]=None, ipv6_addresses: List[CidrIpAddress]=None):
        """IpAddressGroup - a model defined in OpenAPI

        :param delivery_region: The delivery_region of this IpAddressGroup.
        :param ipv4_addresses: The ipv4_addresses of this IpAddressGroup.
        :param ipv6_addresses: The ipv6_addresses of this IpAddressGroup.
        """
        self.openapi_types = {
            'delivery_region': str,
            'ipv4_addresses': List[CidrIpAddress],
            'ipv6_addresses': List[CidrIpAddress]
        }

        self.attribute_map = {
            'delivery_region': 'deliveryRegion',
            'ipv4_addresses': 'ipv4Addresses',
            'ipv6_addresses': 'ipv6Addresses'
        }

        self._delivery_region = delivery_region
        self._ipv4_addresses = ipv4_addresses
        self._ipv6_addresses = ipv6_addresses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IpAddressGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IpAddressGroup of this IpAddressGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delivery_region(self):
        """Gets the delivery_region of this IpAddressGroup.

        The delivery region of the ip address group

        :return: The delivery_region of this IpAddressGroup.
        :rtype: str
        """
        return self._delivery_region

    @delivery_region.setter
    def delivery_region(self, delivery_region):
        """Sets the delivery_region of this IpAddressGroup.

        The delivery region of the ip address group

        :param delivery_region: The delivery_region of this IpAddressGroup.
        :type delivery_region: str
        """

        self._delivery_region = delivery_region

    @property
    def ipv4_addresses(self):
        """Gets the ipv4_addresses of this IpAddressGroup.

        The list of ip v4 addresses.

        :return: The ipv4_addresses of this IpAddressGroup.
        :rtype: List[CidrIpAddress]
        """
        return self._ipv4_addresses

    @ipv4_addresses.setter
    def ipv4_addresses(self, ipv4_addresses):
        """Sets the ipv4_addresses of this IpAddressGroup.

        The list of ip v4 addresses.

        :param ipv4_addresses: The ipv4_addresses of this IpAddressGroup.
        :type ipv4_addresses: List[CidrIpAddress]
        """

        self._ipv4_addresses = ipv4_addresses

    @property
    def ipv6_addresses(self):
        """Gets the ipv6_addresses of this IpAddressGroup.

        The list of ip v6 addresses.

        :return: The ipv6_addresses of this IpAddressGroup.
        :rtype: List[CidrIpAddress]
        """
        return self._ipv6_addresses

    @ipv6_addresses.setter
    def ipv6_addresses(self, ipv6_addresses):
        """Sets the ipv6_addresses of this IpAddressGroup.

        The list of ip v6 addresses.

        :param ipv6_addresses: The ipv6_addresses of this IpAddressGroup.
        :type ipv6_addresses: List[CidrIpAddress]
        """

        self._ipv6_addresses = ipv6_addresses
