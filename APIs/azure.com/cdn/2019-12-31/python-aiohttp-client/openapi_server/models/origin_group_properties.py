# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_probe_parameters import HealthProbeParameters
from openapi_server.models.resource_reference import ResourceReference
from openapi_server.models.response_based_origin_error_detection_parameters import ResponseBasedOriginErrorDetectionParameters
from openapi_server import util


class OriginGroupProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provisioning_state: str=None, resource_state: str=None, health_probe_settings: HealthProbeParameters=None, origins: List[ResourceReference]=None, response_based_origin_error_detection_settings: ResponseBasedOriginErrorDetectionParameters=None, traffic_restoration_time_to_healed_or_new_endpoints_in_minutes: int=None):
        """OriginGroupProperties - a model defined in OpenAPI

        :param provisioning_state: The provisioning_state of this OriginGroupProperties.
        :param resource_state: The resource_state of this OriginGroupProperties.
        :param health_probe_settings: The health_probe_settings of this OriginGroupProperties.
        :param origins: The origins of this OriginGroupProperties.
        :param response_based_origin_error_detection_settings: The response_based_origin_error_detection_settings of this OriginGroupProperties.
        :param traffic_restoration_time_to_healed_or_new_endpoints_in_minutes: The traffic_restoration_time_to_healed_or_new_endpoints_in_minutes of this OriginGroupProperties.
        """
        self.openapi_types = {
            'provisioning_state': str,
            'resource_state': str,
            'health_probe_settings': HealthProbeParameters,
            'origins': List[ResourceReference],
            'response_based_origin_error_detection_settings': ResponseBasedOriginErrorDetectionParameters,
            'traffic_restoration_time_to_healed_or_new_endpoints_in_minutes': int
        }

        self.attribute_map = {
            'provisioning_state': 'provisioningState',
            'resource_state': 'resourceState',
            'health_probe_settings': 'healthProbeSettings',
            'origins': 'origins',
            'response_based_origin_error_detection_settings': 'responseBasedOriginErrorDetectionSettings',
            'traffic_restoration_time_to_healed_or_new_endpoints_in_minutes': 'trafficRestorationTimeToHealedOrNewEndpointsInMinutes'
        }

        self._provisioning_state = provisioning_state
        self._resource_state = resource_state
        self._health_probe_settings = health_probe_settings
        self._origins = origins
        self._response_based_origin_error_detection_settings = response_based_origin_error_detection_settings
        self._traffic_restoration_time_to_healed_or_new_endpoints_in_minutes = traffic_restoration_time_to_healed_or_new_endpoints_in_minutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OriginGroupProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OriginGroupProperties of this OriginGroupProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this OriginGroupProperties.

        Provisioning status of the origin group.

        :return: The provisioning_state of this OriginGroupProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this OriginGroupProperties.

        Provisioning status of the origin group.

        :param provisioning_state: The provisioning_state of this OriginGroupProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def resource_state(self):
        """Gets the resource_state of this OriginGroupProperties.

        Resource status of the origin group.

        :return: The resource_state of this OriginGroupProperties.
        :rtype: str
        """
        return self._resource_state

    @resource_state.setter
    def resource_state(self, resource_state):
        """Sets the resource_state of this OriginGroupProperties.

        Resource status of the origin group.

        :param resource_state: The resource_state of this OriginGroupProperties.
        :type resource_state: str
        """
        allowed_values = ["Creating", "Active", "Deleting"]  # noqa: E501
        if resource_state not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_state` ({0}), must be one of {1}"
                .format(resource_state, allowed_values)
            )

        self._resource_state = resource_state

    @property
    def health_probe_settings(self):
        """Gets the health_probe_settings of this OriginGroupProperties.


        :return: The health_probe_settings of this OriginGroupProperties.
        :rtype: HealthProbeParameters
        """
        return self._health_probe_settings

    @health_probe_settings.setter
    def health_probe_settings(self, health_probe_settings):
        """Sets the health_probe_settings of this OriginGroupProperties.


        :param health_probe_settings: The health_probe_settings of this OriginGroupProperties.
        :type health_probe_settings: HealthProbeParameters
        """

        self._health_probe_settings = health_probe_settings

    @property
    def origins(self):
        """Gets the origins of this OriginGroupProperties.

        The source of the content being delivered via CDN within given origin group.

        :return: The origins of this OriginGroupProperties.
        :rtype: List[ResourceReference]
        """
        return self._origins

    @origins.setter
    def origins(self, origins):
        """Sets the origins of this OriginGroupProperties.

        The source of the content being delivered via CDN within given origin group.

        :param origins: The origins of this OriginGroupProperties.
        :type origins: List[ResourceReference]
        """

        self._origins = origins

    @property
    def response_based_origin_error_detection_settings(self):
        """Gets the response_based_origin_error_detection_settings of this OriginGroupProperties.


        :return: The response_based_origin_error_detection_settings of this OriginGroupProperties.
        :rtype: ResponseBasedOriginErrorDetectionParameters
        """
        return self._response_based_origin_error_detection_settings

    @response_based_origin_error_detection_settings.setter
    def response_based_origin_error_detection_settings(self, response_based_origin_error_detection_settings):
        """Sets the response_based_origin_error_detection_settings of this OriginGroupProperties.


        :param response_based_origin_error_detection_settings: The response_based_origin_error_detection_settings of this OriginGroupProperties.
        :type response_based_origin_error_detection_settings: ResponseBasedOriginErrorDetectionParameters
        """

        self._response_based_origin_error_detection_settings = response_based_origin_error_detection_settings

    @property
    def traffic_restoration_time_to_healed_or_new_endpoints_in_minutes(self):
        """Gets the traffic_restoration_time_to_healed_or_new_endpoints_in_minutes of this OriginGroupProperties.

        Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.

        :return: The traffic_restoration_time_to_healed_or_new_endpoints_in_minutes of this OriginGroupProperties.
        :rtype: int
        """
        return self._traffic_restoration_time_to_healed_or_new_endpoints_in_minutes

    @traffic_restoration_time_to_healed_or_new_endpoints_in_minutes.setter
    def traffic_restoration_time_to_healed_or_new_endpoints_in_minutes(self, traffic_restoration_time_to_healed_or_new_endpoints_in_minutes):
        """Sets the traffic_restoration_time_to_healed_or_new_endpoints_in_minutes of this OriginGroupProperties.

        Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.

        :param traffic_restoration_time_to_healed_or_new_endpoints_in_minutes: The traffic_restoration_time_to_healed_or_new_endpoints_in_minutes of this OriginGroupProperties.
        :type traffic_restoration_time_to_healed_or_new_endpoints_in_minutes: int
        """
        if traffic_restoration_time_to_healed_or_new_endpoints_in_minutes is not None and traffic_restoration_time_to_healed_or_new_endpoints_in_minutes > 50:
            raise ValueError("Invalid value for `traffic_restoration_time_to_healed_or_new_endpoints_in_minutes`, must be a value less than or equal to `50`")
        if traffic_restoration_time_to_healed_or_new_endpoints_in_minutes is not None and traffic_restoration_time_to_healed_or_new_endpoints_in_minutes < 0:
            raise ValueError("Invalid value for `traffic_restoration_time_to_healed_or_new_endpoints_in_minutes`, must be a value greater than or equal to `0`")

        self._traffic_restoration_time_to_healed_or_new_endpoints_in_minutes = traffic_restoration_time_to_healed_or_new_endpoints_in_minutes
