/*
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.HealthProbeParameters;
import org.openapitools.client.model.ResourceReference;
import org.openapitools.client.model.ResponseBasedOriginErrorDetectionParameters;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The JSON object that contains the properties of the origin group.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:17:20.982534-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OriginGroupUpdatePropertiesParameters {
  public static final String SERIALIZED_NAME_HEALTH_PROBE_SETTINGS = "healthProbeSettings";
  @SerializedName(SERIALIZED_NAME_HEALTH_PROBE_SETTINGS)
  private HealthProbeParameters healthProbeSettings;

  public static final String SERIALIZED_NAME_ORIGINS = "origins";
  @SerializedName(SERIALIZED_NAME_ORIGINS)
  private List<ResourceReference> origins = new ArrayList<>();

  public static final String SERIALIZED_NAME_RESPONSE_BASED_ORIGIN_ERROR_DETECTION_SETTINGS = "responseBasedOriginErrorDetectionSettings";
  @SerializedName(SERIALIZED_NAME_RESPONSE_BASED_ORIGIN_ERROR_DETECTION_SETTINGS)
  private ResponseBasedOriginErrorDetectionParameters responseBasedOriginErrorDetectionSettings;

  public static final String SERIALIZED_NAME_TRAFFIC_RESTORATION_TIME_TO_HEALED_OR_NEW_ENDPOINTS_IN_MINUTES = "trafficRestorationTimeToHealedOrNewEndpointsInMinutes";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_RESTORATION_TIME_TO_HEALED_OR_NEW_ENDPOINTS_IN_MINUTES)
  private Integer trafficRestorationTimeToHealedOrNewEndpointsInMinutes;

  public OriginGroupUpdatePropertiesParameters() {
  }

  public OriginGroupUpdatePropertiesParameters healthProbeSettings(HealthProbeParameters healthProbeSettings) {
    this.healthProbeSettings = healthProbeSettings;
    return this;
  }

  /**
   * Get healthProbeSettings
   * @return healthProbeSettings
   */
  @javax.annotation.Nullable
  public HealthProbeParameters getHealthProbeSettings() {
    return healthProbeSettings;
  }

  public void setHealthProbeSettings(HealthProbeParameters healthProbeSettings) {
    this.healthProbeSettings = healthProbeSettings;
  }


  public OriginGroupUpdatePropertiesParameters origins(List<ResourceReference> origins) {
    this.origins = origins;
    return this;
  }

  public OriginGroupUpdatePropertiesParameters addOriginsItem(ResourceReference originsItem) {
    if (this.origins == null) {
      this.origins = new ArrayList<>();
    }
    this.origins.add(originsItem);
    return this;
  }

  /**
   * The source of the content being delivered via CDN within given origin group.
   * @return origins
   */
  @javax.annotation.Nullable
  public List<ResourceReference> getOrigins() {
    return origins;
  }

  public void setOrigins(List<ResourceReference> origins) {
    this.origins = origins;
  }


  public OriginGroupUpdatePropertiesParameters responseBasedOriginErrorDetectionSettings(ResponseBasedOriginErrorDetectionParameters responseBasedOriginErrorDetectionSettings) {
    this.responseBasedOriginErrorDetectionSettings = responseBasedOriginErrorDetectionSettings;
    return this;
  }

  /**
   * Get responseBasedOriginErrorDetectionSettings
   * @return responseBasedOriginErrorDetectionSettings
   */
  @javax.annotation.Nullable
  public ResponseBasedOriginErrorDetectionParameters getResponseBasedOriginErrorDetectionSettings() {
    return responseBasedOriginErrorDetectionSettings;
  }

  public void setResponseBasedOriginErrorDetectionSettings(ResponseBasedOriginErrorDetectionParameters responseBasedOriginErrorDetectionSettings) {
    this.responseBasedOriginErrorDetectionSettings = responseBasedOriginErrorDetectionSettings;
  }


  public OriginGroupUpdatePropertiesParameters trafficRestorationTimeToHealedOrNewEndpointsInMinutes(Integer trafficRestorationTimeToHealedOrNewEndpointsInMinutes) {
    this.trafficRestorationTimeToHealedOrNewEndpointsInMinutes = trafficRestorationTimeToHealedOrNewEndpointsInMinutes;
    return this;
  }

  /**
   * Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
   * minimum: 0
   * maximum: 50
   * @return trafficRestorationTimeToHealedOrNewEndpointsInMinutes
   */
  @javax.annotation.Nullable
  public Integer getTrafficRestorationTimeToHealedOrNewEndpointsInMinutes() {
    return trafficRestorationTimeToHealedOrNewEndpointsInMinutes;
  }

  public void setTrafficRestorationTimeToHealedOrNewEndpointsInMinutes(Integer trafficRestorationTimeToHealedOrNewEndpointsInMinutes) {
    this.trafficRestorationTimeToHealedOrNewEndpointsInMinutes = trafficRestorationTimeToHealedOrNewEndpointsInMinutes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OriginGroupUpdatePropertiesParameters originGroupUpdatePropertiesParameters = (OriginGroupUpdatePropertiesParameters) o;
    return Objects.equals(this.healthProbeSettings, originGroupUpdatePropertiesParameters.healthProbeSettings) &&
        Objects.equals(this.origins, originGroupUpdatePropertiesParameters.origins) &&
        Objects.equals(this.responseBasedOriginErrorDetectionSettings, originGroupUpdatePropertiesParameters.responseBasedOriginErrorDetectionSettings) &&
        Objects.equals(this.trafficRestorationTimeToHealedOrNewEndpointsInMinutes, originGroupUpdatePropertiesParameters.trafficRestorationTimeToHealedOrNewEndpointsInMinutes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(healthProbeSettings, origins, responseBasedOriginErrorDetectionSettings, trafficRestorationTimeToHealedOrNewEndpointsInMinutes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OriginGroupUpdatePropertiesParameters {\n");
    sb.append("    healthProbeSettings: ").append(toIndentedString(healthProbeSettings)).append("\n");
    sb.append("    origins: ").append(toIndentedString(origins)).append("\n");
    sb.append("    responseBasedOriginErrorDetectionSettings: ").append(toIndentedString(responseBasedOriginErrorDetectionSettings)).append("\n");
    sb.append("    trafficRestorationTimeToHealedOrNewEndpointsInMinutes: ").append(toIndentedString(trafficRestorationTimeToHealedOrNewEndpointsInMinutes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("healthProbeSettings");
    openapiFields.add("origins");
    openapiFields.add("responseBasedOriginErrorDetectionSettings");
    openapiFields.add("trafficRestorationTimeToHealedOrNewEndpointsInMinutes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OriginGroupUpdatePropertiesParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OriginGroupUpdatePropertiesParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OriginGroupUpdatePropertiesParameters is not found in the empty JSON string", OriginGroupUpdatePropertiesParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OriginGroupUpdatePropertiesParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OriginGroupUpdatePropertiesParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `healthProbeSettings`
      if (jsonObj.get("healthProbeSettings") != null && !jsonObj.get("healthProbeSettings").isJsonNull()) {
        HealthProbeParameters.validateJsonElement(jsonObj.get("healthProbeSettings"));
      }
      if (jsonObj.get("origins") != null && !jsonObj.get("origins").isJsonNull()) {
        JsonArray jsonArrayorigins = jsonObj.getAsJsonArray("origins");
        if (jsonArrayorigins != null) {
          // ensure the json data is an array
          if (!jsonObj.get("origins").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `origins` to be an array in the JSON string but got `%s`", jsonObj.get("origins").toString()));
          }

          // validate the optional field `origins` (array)
          for (int i = 0; i < jsonArrayorigins.size(); i++) {
            ResourceReference.validateJsonElement(jsonArrayorigins.get(i));
          };
        }
      }
      // validate the optional field `responseBasedOriginErrorDetectionSettings`
      if (jsonObj.get("responseBasedOriginErrorDetectionSettings") != null && !jsonObj.get("responseBasedOriginErrorDetectionSettings").isJsonNull()) {
        ResponseBasedOriginErrorDetectionParameters.validateJsonElement(jsonObj.get("responseBasedOriginErrorDetectionSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OriginGroupUpdatePropertiesParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OriginGroupUpdatePropertiesParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OriginGroupUpdatePropertiesParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OriginGroupUpdatePropertiesParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<OriginGroupUpdatePropertiesParameters>() {
           @Override
           public void write(JsonWriter out, OriginGroupUpdatePropertiesParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OriginGroupUpdatePropertiesParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OriginGroupUpdatePropertiesParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OriginGroupUpdatePropertiesParameters
   * @throws IOException if the JSON string is invalid with respect to OriginGroupUpdatePropertiesParameters
   */
  public static OriginGroupUpdatePropertiesParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OriginGroupUpdatePropertiesParameters.class);
  }

  /**
   * Convert an instance of OriginGroupUpdatePropertiesParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

