/*
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CustomDomain;
import org.openapitools.client.model.CustomDomainHttpsParameters;
import org.openapitools.client.model.CustomDomainListResult;
import org.openapitools.client.model.CustomDomainParameters;
import org.openapitools.client.model.ErrorResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CustomDomainsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CustomDomainsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CustomDomainsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for customDomainsCreate
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param customDomainProperties Properties required to create a new custom domain. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. The request has been fulfilled and a new custom domain has been created. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customDomainsCreateCall(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, CustomDomainParameters customDomainProperties, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = customDomainProperties;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "profileName" + "}", localVarApiClient.escapeString(profileName.toString()))
            .replace("{" + "endpointName" + "}", localVarApiClient.escapeString(endpointName.toString()))
            .replace("{" + "customDomainName" + "}", localVarApiClient.escapeString(customDomainName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call customDomainsCreateValidateBeforeCall(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, CustomDomainParameters customDomainProperties, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling customDomainsCreate(Async)");
        }

        // verify the required parameter 'profileName' is set
        if (profileName == null) {
            throw new ApiException("Missing the required parameter 'profileName' when calling customDomainsCreate(Async)");
        }

        // verify the required parameter 'endpointName' is set
        if (endpointName == null) {
            throw new ApiException("Missing the required parameter 'endpointName' when calling customDomainsCreate(Async)");
        }

        // verify the required parameter 'customDomainName' is set
        if (customDomainName == null) {
            throw new ApiException("Missing the required parameter 'customDomainName' when calling customDomainsCreate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling customDomainsCreate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling customDomainsCreate(Async)");
        }

        // verify the required parameter 'customDomainProperties' is set
        if (customDomainProperties == null) {
            throw new ApiException("Missing the required parameter 'customDomainProperties' when calling customDomainsCreate(Async)");
        }

        return customDomainsCreateCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, customDomainProperties, _callback);

    }

    /**
     * 
     * Creates a new custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param customDomainProperties Properties required to create a new custom domain. (required)
     * @return CustomDomain
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. The request has been fulfilled and a new custom domain has been created. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public CustomDomain customDomainsCreate(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, CustomDomainParameters customDomainProperties) throws ApiException {
        ApiResponse<CustomDomain> localVarResp = customDomainsCreateWithHttpInfo(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, customDomainProperties);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates a new custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param customDomainProperties Properties required to create a new custom domain. (required)
     * @return ApiResponse&lt;CustomDomain&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. The request has been fulfilled and a new custom domain has been created. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CustomDomain> customDomainsCreateWithHttpInfo(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, CustomDomainParameters customDomainProperties) throws ApiException {
        okhttp3.Call localVarCall = customDomainsCreateValidateBeforeCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, customDomainProperties, null);
        Type localVarReturnType = new TypeToken<CustomDomain>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates a new custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param customDomainProperties Properties required to create a new custom domain. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created. The request has been fulfilled and a new custom domain has been created. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customDomainsCreateAsync(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, CustomDomainParameters customDomainProperties, final ApiCallback<CustomDomain> _callback) throws ApiException {

        okhttp3.Call localVarCall = customDomainsCreateValidateBeforeCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, customDomainProperties, _callback);
        Type localVarReturnType = new TypeToken<CustomDomain>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for customDomainsDelete
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content. The request has been accepted but the custom domain was not found </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customDomainsDeleteCall(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "profileName" + "}", localVarApiClient.escapeString(profileName.toString()))
            .replace("{" + "endpointName" + "}", localVarApiClient.escapeString(endpointName.toString()))
            .replace("{" + "customDomainName" + "}", localVarApiClient.escapeString(customDomainName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call customDomainsDeleteValidateBeforeCall(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling customDomainsDelete(Async)");
        }

        // verify the required parameter 'profileName' is set
        if (profileName == null) {
            throw new ApiException("Missing the required parameter 'profileName' when calling customDomainsDelete(Async)");
        }

        // verify the required parameter 'endpointName' is set
        if (endpointName == null) {
            throw new ApiException("Missing the required parameter 'endpointName' when calling customDomainsDelete(Async)");
        }

        // verify the required parameter 'customDomainName' is set
        if (customDomainName == null) {
            throw new ApiException("Missing the required parameter 'customDomainName' when calling customDomainsDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling customDomainsDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling customDomainsDelete(Async)");
        }

        return customDomainsDeleteCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Deletes an existing custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content. The request has been accepted but the custom domain was not found </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void customDomainsDelete(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion) throws ApiException {
        customDomainsDeleteWithHttpInfo(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion);
    }

    /**
     * 
     * Deletes an existing custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content. The request has been accepted but the custom domain was not found </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> customDomainsDeleteWithHttpInfo(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = customDomainsDeleteValidateBeforeCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes an existing custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content. The request has been accepted but the custom domain was not found </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customDomainsDeleteAsync(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = customDomainsDeleteValidateBeforeCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for customDomainsDisableCustomHttps
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customDomainsDisableCustomHttpsCall(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/disableCustomHttps"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "profileName" + "}", localVarApiClient.escapeString(profileName.toString()))
            .replace("{" + "endpointName" + "}", localVarApiClient.escapeString(endpointName.toString()))
            .replace("{" + "customDomainName" + "}", localVarApiClient.escapeString(customDomainName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call customDomainsDisableCustomHttpsValidateBeforeCall(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling customDomainsDisableCustomHttps(Async)");
        }

        // verify the required parameter 'profileName' is set
        if (profileName == null) {
            throw new ApiException("Missing the required parameter 'profileName' when calling customDomainsDisableCustomHttps(Async)");
        }

        // verify the required parameter 'endpointName' is set
        if (endpointName == null) {
            throw new ApiException("Missing the required parameter 'endpointName' when calling customDomainsDisableCustomHttps(Async)");
        }

        // verify the required parameter 'customDomainName' is set
        if (customDomainName == null) {
            throw new ApiException("Missing the required parameter 'customDomainName' when calling customDomainsDisableCustomHttps(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling customDomainsDisableCustomHttps(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling customDomainsDisableCustomHttps(Async)");
        }

        return customDomainsDisableCustomHttpsCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Disable https delivery of the custom domain.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void customDomainsDisableCustomHttps(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion) throws ApiException {
        customDomainsDisableCustomHttpsWithHttpInfo(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion);
    }

    /**
     * 
     * Disable https delivery of the custom domain.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> customDomainsDisableCustomHttpsWithHttpInfo(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = customDomainsDisableCustomHttpsValidateBeforeCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Disable https delivery of the custom domain.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customDomainsDisableCustomHttpsAsync(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = customDomainsDisableCustomHttpsValidateBeforeCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for customDomainsEnableCustomHttps
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param customDomainHttpsParameters The configuration specifying how to enable HTTPS for the custom domain - using CDN managed certificate or user&#39;s own certificate. If not specified, enabling ssl uses CDN managed certificate by default. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customDomainsEnableCustomHttpsCall(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, CustomDomainHttpsParameters customDomainHttpsParameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = customDomainHttpsParameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/enableCustomHttps"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "profileName" + "}", localVarApiClient.escapeString(profileName.toString()))
            .replace("{" + "endpointName" + "}", localVarApiClient.escapeString(endpointName.toString()))
            .replace("{" + "customDomainName" + "}", localVarApiClient.escapeString(customDomainName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call customDomainsEnableCustomHttpsValidateBeforeCall(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, CustomDomainHttpsParameters customDomainHttpsParameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling customDomainsEnableCustomHttps(Async)");
        }

        // verify the required parameter 'profileName' is set
        if (profileName == null) {
            throw new ApiException("Missing the required parameter 'profileName' when calling customDomainsEnableCustomHttps(Async)");
        }

        // verify the required parameter 'endpointName' is set
        if (endpointName == null) {
            throw new ApiException("Missing the required parameter 'endpointName' when calling customDomainsEnableCustomHttps(Async)");
        }

        // verify the required parameter 'customDomainName' is set
        if (customDomainName == null) {
            throw new ApiException("Missing the required parameter 'customDomainName' when calling customDomainsEnableCustomHttps(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling customDomainsEnableCustomHttps(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling customDomainsEnableCustomHttps(Async)");
        }

        return customDomainsEnableCustomHttpsCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, customDomainHttpsParameters, _callback);

    }

    /**
     * 
     * Enable https delivery of the custom domain.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param customDomainHttpsParameters The configuration specifying how to enable HTTPS for the custom domain - using CDN managed certificate or user&#39;s own certificate. If not specified, enabling ssl uses CDN managed certificate by default. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void customDomainsEnableCustomHttps(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, CustomDomainHttpsParameters customDomainHttpsParameters) throws ApiException {
        customDomainsEnableCustomHttpsWithHttpInfo(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, customDomainHttpsParameters);
    }

    /**
     * 
     * Enable https delivery of the custom domain.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param customDomainHttpsParameters The configuration specifying how to enable HTTPS for the custom domain - using CDN managed certificate or user&#39;s own certificate. If not specified, enabling ssl uses CDN managed certificate by default. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> customDomainsEnableCustomHttpsWithHttpInfo(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, CustomDomainHttpsParameters customDomainHttpsParameters) throws ApiException {
        okhttp3.Call localVarCall = customDomainsEnableCustomHttpsValidateBeforeCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, customDomainHttpsParameters, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Enable https delivery of the custom domain.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param customDomainHttpsParameters The configuration specifying how to enable HTTPS for the custom domain - using CDN managed certificate or user&#39;s own certificate. If not specified, enabling ssl uses CDN managed certificate by default. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customDomainsEnableCustomHttpsAsync(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, CustomDomainHttpsParameters customDomainHttpsParameters, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = customDomainsEnableCustomHttpsValidateBeforeCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, customDomainHttpsParameters, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for customDomainsGet
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customDomainsGetCall(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "profileName" + "}", localVarApiClient.escapeString(profileName.toString()))
            .replace("{" + "endpointName" + "}", localVarApiClient.escapeString(endpointName.toString()))
            .replace("{" + "customDomainName" + "}", localVarApiClient.escapeString(customDomainName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call customDomainsGetValidateBeforeCall(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling customDomainsGet(Async)");
        }

        // verify the required parameter 'profileName' is set
        if (profileName == null) {
            throw new ApiException("Missing the required parameter 'profileName' when calling customDomainsGet(Async)");
        }

        // verify the required parameter 'endpointName' is set
        if (endpointName == null) {
            throw new ApiException("Missing the required parameter 'endpointName' when calling customDomainsGet(Async)");
        }

        // verify the required parameter 'customDomainName' is set
        if (customDomainName == null) {
            throw new ApiException("Missing the required parameter 'customDomainName' when calling customDomainsGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling customDomainsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling customDomainsGet(Async)");
        }

        return customDomainsGetCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Gets an existing custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @return CustomDomain
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public CustomDomain customDomainsGet(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion) throws ApiException {
        ApiResponse<CustomDomain> localVarResp = customDomainsGetWithHttpInfo(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets an existing custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @return ApiResponse&lt;CustomDomain&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CustomDomain> customDomainsGetWithHttpInfo(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = customDomainsGetValidateBeforeCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, null);
        Type localVarReturnType = new TypeToken<CustomDomain>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets an existing custom domain within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param customDomainName Name of the custom domain within an endpoint. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customDomainsGetAsync(String resourceGroupName, String profileName, String endpointName, String customDomainName, String subscriptionId, String apiVersion, final ApiCallback<CustomDomain> _callback) throws ApiException {

        okhttp3.Call localVarCall = customDomainsGetValidateBeforeCall(resourceGroupName, profileName, endpointName, customDomainName, subscriptionId, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<CustomDomain>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for customDomainsListByEndpoint
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customDomainsListByEndpointCall(String resourceGroupName, String profileName, String endpointName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "profileName" + "}", localVarApiClient.escapeString(profileName.toString()))
            .replace("{" + "endpointName" + "}", localVarApiClient.escapeString(endpointName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call customDomainsListByEndpointValidateBeforeCall(String resourceGroupName, String profileName, String endpointName, String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling customDomainsListByEndpoint(Async)");
        }

        // verify the required parameter 'profileName' is set
        if (profileName == null) {
            throw new ApiException("Missing the required parameter 'profileName' when calling customDomainsListByEndpoint(Async)");
        }

        // verify the required parameter 'endpointName' is set
        if (endpointName == null) {
            throw new ApiException("Missing the required parameter 'endpointName' when calling customDomainsListByEndpoint(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling customDomainsListByEndpoint(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling customDomainsListByEndpoint(Async)");
        }

        return customDomainsListByEndpointCall(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Lists all of the existing custom domains within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @return CustomDomainListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public CustomDomainListResult customDomainsListByEndpoint(String resourceGroupName, String profileName, String endpointName, String subscriptionId, String apiVersion) throws ApiException {
        ApiResponse<CustomDomainListResult> localVarResp = customDomainsListByEndpointWithHttpInfo(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all of the existing custom domains within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @return ApiResponse&lt;CustomDomainListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CustomDomainListResult> customDomainsListByEndpointWithHttpInfo(String resourceGroupName, String profileName, String endpointName, String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = customDomainsListByEndpointValidateBeforeCall(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, null);
        Type localVarReturnType = new TypeToken<CustomDomainListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all of the existing custom domains within an endpoint.
     * @param resourceGroupName Name of the Resource group within the Azure subscription. (required)
     * @param profileName Name of the CDN profile which is unique within the resource group. (required)
     * @param endpointName Name of the endpoint under the profile which is unique globally. (required)
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion Version of the API to be used with the client request. Current version is 2017-04-02. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request has succeeded. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> CDN error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call customDomainsListByEndpointAsync(String resourceGroupName, String profileName, String endpointName, String subscriptionId, String apiVersion, final ApiCallback<CustomDomainListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = customDomainsListByEndpointValidateBeforeCall(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<CustomDomainListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
