/*
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.Profile;
import org.openapitools.client.model.ProfileListResult;
import org.openapitools.client.model.ProfileUpdateParameters;
import org.openapitools.client.model.ResourceUsageListResult;
import org.openapitools.client.model.SsoUri;
import org.openapitools.client.model.SupportedOptimizationTypesListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProfilesApi
 */
@Disabled
public class ProfilesApiTest {

    private final ProfilesApi api = new ProfilesApi();

    /**
     * Creates a new CDN profile with a profile name under the specified subscription and resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void profilesCreateTest() throws ApiException {
        String resourceGroupName = null;
        String profileName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Profile profile = null;
        Profile response = api.profilesCreate(resourceGroupName, profileName, subscriptionId, apiVersion, profile);
        // TODO: test validations
    }

    /**
     * Deletes an existing CDN profile with the specified parameters. Deleting a profile will result in the deletion of all of the sub-resources including endpoints, origins and custom domains.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void profilesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String profileName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.profilesDelete(resourceGroupName, profileName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is used to configure advanced feature capabilities that are not yet available in the Azure portal, such as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and alerts in a premium profile. The SSO URI changes approximately every 10 minutes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void profilesGenerateSsoUriTest() throws ApiException {
        String resourceGroupName = null;
        String profileName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SsoUri response = api.profilesGenerateSsoUri(resourceGroupName, profileName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a CDN profile with the specified profile name under the specified subscription and resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void profilesGetTest() throws ApiException {
        String resourceGroupName = null;
        String profileName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Profile response = api.profilesGet(resourceGroupName, profileName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all of the CDN profiles within an Azure subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void profilesListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        ProfileListResult response = api.profilesList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all of the CDN profiles within a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void profilesListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ProfileListResult response = api.profilesListByResourceGroup(resourceGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Checks the quota and actual usage of endpoints under the given CDN profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void profilesListResourceUsageTest() throws ApiException {
        String resourceGroupName = null;
        String profileName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ResourceUsageListResult response = api.profilesListResourceUsage(resourceGroupName, profileName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the supported optimization types for the current profile. A user can create an endpoint with an optimization type from the listed values.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void profilesListSupportedOptimizationTypesTest() throws ApiException {
        String resourceGroupName = null;
        String profileName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SupportedOptimizationTypesListResult response = api.profilesListSupportedOptimizationTypes(resourceGroupName, profileName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates an existing CDN profile with the specified profile name under the specified subscription and resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void profilesUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String profileName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ProfileUpdateParameters profileUpdateParameters = null;
        Profile response = api.profilesUpdate(resourceGroupName, profileName, subscriptionId, apiVersion, profileUpdateParameters);
        // TODO: test validations
    }

}
