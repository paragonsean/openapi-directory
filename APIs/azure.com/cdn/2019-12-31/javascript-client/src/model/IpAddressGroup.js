/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CidrIpAddress from './CidrIpAddress';

/**
 * The IpAddressGroup model module.
 * @module model/IpAddressGroup
 * @version 2019-12-31
 */
class IpAddressGroup {
    /**
     * Constructs a new <code>IpAddressGroup</code>.
     * CDN Ip address group
     * @alias module:model/IpAddressGroup
     */
    constructor() { 
        
        IpAddressGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IpAddressGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IpAddressGroup} obj Optional instance to populate.
     * @return {module:model/IpAddressGroup} The populated <code>IpAddressGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IpAddressGroup();

            if (data.hasOwnProperty('deliveryRegion')) {
                obj['deliveryRegion'] = ApiClient.convertToType(data['deliveryRegion'], 'String');
            }
            if (data.hasOwnProperty('ipv4Addresses')) {
                obj['ipv4Addresses'] = ApiClient.convertToType(data['ipv4Addresses'], [CidrIpAddress]);
            }
            if (data.hasOwnProperty('ipv6Addresses')) {
                obj['ipv6Addresses'] = ApiClient.convertToType(data['ipv6Addresses'], [CidrIpAddress]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IpAddressGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IpAddressGroup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deliveryRegion'] && !(typeof data['deliveryRegion'] === 'string' || data['deliveryRegion'] instanceof String)) {
            throw new Error("Expected the field `deliveryRegion` to be a primitive type in the JSON string but got " + data['deliveryRegion']);
        }
        if (data['ipv4Addresses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ipv4Addresses'])) {
                throw new Error("Expected the field `ipv4Addresses` to be an array in the JSON data but got " + data['ipv4Addresses']);
            }
            // validate the optional field `ipv4Addresses` (array)
            for (const item of data['ipv4Addresses']) {
                CidrIpAddress.validateJSON(item);
            };
        }
        if (data['ipv6Addresses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ipv6Addresses'])) {
                throw new Error("Expected the field `ipv6Addresses` to be an array in the JSON data but got " + data['ipv6Addresses']);
            }
            // validate the optional field `ipv6Addresses` (array)
            for (const item of data['ipv6Addresses']) {
                CidrIpAddress.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The delivery region of the ip address group
 * @member {String} deliveryRegion
 */
IpAddressGroup.prototype['deliveryRegion'] = undefined;

/**
 * The list of ip v4 addresses.
 * @member {Array.<module:model/CidrIpAddress>} ipv4Addresses
 */
IpAddressGroup.prototype['ipv4Addresses'] = undefined;

/**
 * The list of ip v6 addresses.
 * @member {Array.<module:model/CidrIpAddress>} ipv6Addresses
 */
IpAddressGroup.prototype['ipv6Addresses'] = undefined;






export default IpAddressGroup;

