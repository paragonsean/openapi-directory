/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CacheKeyQueryStringActionParameters model module.
 * @module model/CacheKeyQueryStringActionParameters
 * @version 2019-12-31
 */
class CacheKeyQueryStringActionParameters {
    /**
     * Constructs a new <code>CacheKeyQueryStringActionParameters</code>.
     * Defines the parameters for the cache-key query string action.
     * @alias module:model/CacheKeyQueryStringActionParameters
     * @param odataType {module:model/CacheKeyQueryStringActionParameters.OdataTypeEnum} 
     * @param queryStringBehavior {module:model/CacheKeyQueryStringActionParameters.QueryStringBehaviorEnum} Caching behavior for the requests
     */
    constructor(odataType, queryStringBehavior) { 
        
        CacheKeyQueryStringActionParameters.initialize(this, odataType, queryStringBehavior);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType, queryStringBehavior) { 
        obj['@odata.type'] = odataType;
        obj['queryStringBehavior'] = queryStringBehavior;
    }

    /**
     * Constructs a <code>CacheKeyQueryStringActionParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CacheKeyQueryStringActionParameters} obj Optional instance to populate.
     * @return {module:model/CacheKeyQueryStringActionParameters} The populated <code>CacheKeyQueryStringActionParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CacheKeyQueryStringActionParameters();

            if (data.hasOwnProperty('@odata.type')) {
                obj['@odata.type'] = ApiClient.convertToType(data['@odata.type'], 'String');
            }
            if (data.hasOwnProperty('queryParameters')) {
                obj['queryParameters'] = ApiClient.convertToType(data['queryParameters'], 'String');
            }
            if (data.hasOwnProperty('queryStringBehavior')) {
                obj['queryStringBehavior'] = ApiClient.convertToType(data['queryStringBehavior'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CacheKeyQueryStringActionParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CacheKeyQueryStringActionParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CacheKeyQueryStringActionParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['@odata.type'] && !(typeof data['@odata.type'] === 'string' || data['@odata.type'] instanceof String)) {
            throw new Error("Expected the field `@odata.type` to be a primitive type in the JSON string but got " + data['@odata.type']);
        }
        // ensure the json data is a string
        if (data['queryParameters'] && !(typeof data['queryParameters'] === 'string' || data['queryParameters'] instanceof String)) {
            throw new Error("Expected the field `queryParameters` to be a primitive type in the JSON string but got " + data['queryParameters']);
        }
        // ensure the json data is a string
        if (data['queryStringBehavior'] && !(typeof data['queryStringBehavior'] === 'string' || data['queryStringBehavior'] instanceof String)) {
            throw new Error("Expected the field `queryStringBehavior` to be a primitive type in the JSON string but got " + data['queryStringBehavior']);
        }

        return true;
    }


}

CacheKeyQueryStringActionParameters.RequiredProperties = ["@odata.type", "queryStringBehavior"];

/**
 * @member {module:model/CacheKeyQueryStringActionParameters.OdataTypeEnum} @odata.type
 */
CacheKeyQueryStringActionParameters.prototype['@odata.type'] = undefined;

/**
 * query parameters to include or exclude (comma separated).
 * @member {String} queryParameters
 */
CacheKeyQueryStringActionParameters.prototype['queryParameters'] = undefined;

/**
 * Caching behavior for the requests
 * @member {module:model/CacheKeyQueryStringActionParameters.QueryStringBehaviorEnum} queryStringBehavior
 */
CacheKeyQueryStringActionParameters.prototype['queryStringBehavior'] = undefined;





/**
 * Allowed values for the <code>@odata.type</code> property.
 * @enum {String}
 * @readonly
 */
CacheKeyQueryStringActionParameters['OdataTypeEnum'] = {

    /**
     * value: "#Microsoft.Azure.Cdn.Models.DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"
     * @const
     */
    "#Microsoft.Azure.Cdn.Models.DeliveryRuleCacheKeyQueryStringBehaviorActionParameters": "#Microsoft.Azure.Cdn.Models.DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"
};


/**
 * Allowed values for the <code>queryStringBehavior</code> property.
 * @enum {String}
 * @readonly
 */
CacheKeyQueryStringActionParameters['QueryStringBehaviorEnum'] = {

    /**
     * value: "Include"
     * @const
     */
    "Include": "Include",

    /**
     * value: "IncludeAll"
     * @const
     */
    "IncludeAll": "IncludeAll",

    /**
     * value: "Exclude"
     * @const
     */
    "Exclude": "Exclude",

    /**
     * value: "ExcludeAll"
     * @const
     */
    "ExcludeAll": "ExcludeAll"
};



export default CacheKeyQueryStringActionParameters;

