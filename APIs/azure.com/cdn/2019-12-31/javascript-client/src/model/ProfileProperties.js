/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProfileProperties model module.
 * @module model/ProfileProperties
 * @version 2019-12-31
 */
class ProfileProperties {
    /**
     * Constructs a new <code>ProfileProperties</code>.
     * The JSON object that contains the properties required to create a profile.
     * @alias module:model/ProfileProperties
     */
    constructor() { 
        
        ProfileProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProfileProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProfileProperties} obj Optional instance to populate.
     * @return {module:model/ProfileProperties} The populated <code>ProfileProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProfileProperties();

            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('resourceState')) {
                obj['resourceState'] = ApiClient.convertToType(data['resourceState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProfileProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProfileProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['resourceState'] && !(typeof data['resourceState'] === 'string' || data['resourceState'] instanceof String)) {
            throw new Error("Expected the field `resourceState` to be a primitive type in the JSON string but got " + data['resourceState']);
        }

        return true;
    }


}



/**
 * Provisioning status of the profile.
 * @member {String} provisioningState
 */
ProfileProperties.prototype['provisioningState'] = undefined;

/**
 * Resource status of the profile.
 * @member {module:model/ProfileProperties.ResourceStateEnum} resourceState
 */
ProfileProperties.prototype['resourceState'] = undefined;





/**
 * Allowed values for the <code>resourceState</code> property.
 * @enum {String}
 * @readonly
 */
ProfileProperties['ResourceStateEnum'] = {

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};



export default ProfileProperties;

