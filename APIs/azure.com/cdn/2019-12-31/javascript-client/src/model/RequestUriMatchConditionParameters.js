/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Transform from './Transform';

/**
 * The RequestUriMatchConditionParameters model module.
 * @module model/RequestUriMatchConditionParameters
 * @version 2019-12-31
 */
class RequestUriMatchConditionParameters {
    /**
     * Constructs a new <code>RequestUriMatchConditionParameters</code>.
     * Defines the parameters for RequestUri match conditions
     * @alias module:model/RequestUriMatchConditionParameters
     * @param odataType {module:model/RequestUriMatchConditionParameters.OdataTypeEnum} 
     * @param matchValues {Array.<String>} The match value for the condition of the delivery rule
     * @param operator {module:model/RequestUriMatchConditionParameters.OperatorEnum} Describes operator to be matched
     */
    constructor(odataType, matchValues, operator) { 
        
        RequestUriMatchConditionParameters.initialize(this, odataType, matchValues, operator);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType, matchValues, operator) { 
        obj['@odata.type'] = odataType;
        obj['matchValues'] = matchValues;
        obj['operator'] = operator;
    }

    /**
     * Constructs a <code>RequestUriMatchConditionParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestUriMatchConditionParameters} obj Optional instance to populate.
     * @return {module:model/RequestUriMatchConditionParameters} The populated <code>RequestUriMatchConditionParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestUriMatchConditionParameters();

            if (data.hasOwnProperty('@odata.type')) {
                obj['@odata.type'] = ApiClient.convertToType(data['@odata.type'], 'String');
            }
            if (data.hasOwnProperty('matchValues')) {
                obj['matchValues'] = ApiClient.convertToType(data['matchValues'], ['String']);
            }
            if (data.hasOwnProperty('negateCondition')) {
                obj['negateCondition'] = ApiClient.convertToType(data['negateCondition'], 'Boolean');
            }
            if (data.hasOwnProperty('operator')) {
                obj['operator'] = ApiClient.convertToType(data['operator'], 'String');
            }
            if (data.hasOwnProperty('transforms')) {
                obj['transforms'] = ApiClient.convertToType(data['transforms'], [Transform]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RequestUriMatchConditionParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RequestUriMatchConditionParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RequestUriMatchConditionParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['@odata.type'] && !(typeof data['@odata.type'] === 'string' || data['@odata.type'] instanceof String)) {
            throw new Error("Expected the field `@odata.type` to be a primitive type in the JSON string but got " + data['@odata.type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['matchValues'])) {
            throw new Error("Expected the field `matchValues` to be an array in the JSON data but got " + data['matchValues']);
        }
        // ensure the json data is a string
        if (data['operator'] && !(typeof data['operator'] === 'string' || data['operator'] instanceof String)) {
            throw new Error("Expected the field `operator` to be a primitive type in the JSON string but got " + data['operator']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['transforms'])) {
            throw new Error("Expected the field `transforms` to be an array in the JSON data but got " + data['transforms']);
        }

        return true;
    }


}

RequestUriMatchConditionParameters.RequiredProperties = ["@odata.type", "matchValues", "operator"];

/**
 * @member {module:model/RequestUriMatchConditionParameters.OdataTypeEnum} @odata.type
 */
RequestUriMatchConditionParameters.prototype['@odata.type'] = undefined;

/**
 * The match value for the condition of the delivery rule
 * @member {Array.<String>} matchValues
 */
RequestUriMatchConditionParameters.prototype['matchValues'] = undefined;

/**
 * Describes if this is negate condition or not
 * @member {Boolean} negateCondition
 */
RequestUriMatchConditionParameters.prototype['negateCondition'] = undefined;

/**
 * Describes operator to be matched
 * @member {module:model/RequestUriMatchConditionParameters.OperatorEnum} operator
 */
RequestUriMatchConditionParameters.prototype['operator'] = undefined;

/**
 * List of transforms
 * @member {Array.<module:model/Transform>} transforms
 */
RequestUriMatchConditionParameters.prototype['transforms'] = undefined;





/**
 * Allowed values for the <code>@odata.type</code> property.
 * @enum {String}
 * @readonly
 */
RequestUriMatchConditionParameters['OdataTypeEnum'] = {

    /**
     * value: "#Microsoft.Azure.Cdn.Models.DeliveryRuleRequestUriConditionParameters"
     * @const
     */
    "#Microsoft.Azure.Cdn.Models.DeliveryRuleRequestUriConditionParameters": "#Microsoft.Azure.Cdn.Models.DeliveryRuleRequestUriConditionParameters"
};


/**
 * Allowed values for the <code>operator</code> property.
 * @enum {String}
 * @readonly
 */
RequestUriMatchConditionParameters['OperatorEnum'] = {

    /**
     * value: "Any"
     * @const
     */
    "Any": "Any",

    /**
     * value: "Equal"
     * @const
     */
    "Equal": "Equal",

    /**
     * value: "Contains"
     * @const
     */
    "Contains": "Contains",

    /**
     * value: "BeginsWith"
     * @const
     */
    "BeginsWith": "BeginsWith",

    /**
     * value: "EndsWith"
     * @const
     */
    "EndsWith": "EndsWith",

    /**
     * value: "LessThan"
     * @const
     */
    "LessThan": "LessThan",

    /**
     * value: "LessThanOrEqual"
     * @const
     */
    "LessThanOrEqual": "LessThanOrEqual",

    /**
     * value: "GreaterThan"
     * @const
     */
    "GreaterThan": "GreaterThan",

    /**
     * value: "GreaterThanOrEqual"
     * @const
     */
    "GreaterThanOrEqual": "GreaterThanOrEqual"
};



export default RequestUriMatchConditionParameters;

