/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UrlRedirectActionParameters model module.
 * @module model/UrlRedirectActionParameters
 * @version 2019-12-31
 */
class UrlRedirectActionParameters {
    /**
     * Constructs a new <code>UrlRedirectActionParameters</code>.
     * Defines the parameters for the url redirect action.
     * @alias module:model/UrlRedirectActionParameters
     * @param odataType {module:model/UrlRedirectActionParameters.OdataTypeEnum} 
     * @param redirectType {module:model/UrlRedirectActionParameters.RedirectTypeEnum} The redirect type the rule will use when redirecting traffic.
     */
    constructor(odataType, redirectType) { 
        
        UrlRedirectActionParameters.initialize(this, odataType, redirectType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType, redirectType) { 
        obj['@odata.type'] = odataType;
        obj['redirectType'] = redirectType;
    }

    /**
     * Constructs a <code>UrlRedirectActionParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UrlRedirectActionParameters} obj Optional instance to populate.
     * @return {module:model/UrlRedirectActionParameters} The populated <code>UrlRedirectActionParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UrlRedirectActionParameters();

            if (data.hasOwnProperty('@odata.type')) {
                obj['@odata.type'] = ApiClient.convertToType(data['@odata.type'], 'String');
            }
            if (data.hasOwnProperty('customFragment')) {
                obj['customFragment'] = ApiClient.convertToType(data['customFragment'], 'String');
            }
            if (data.hasOwnProperty('customHostname')) {
                obj['customHostname'] = ApiClient.convertToType(data['customHostname'], 'String');
            }
            if (data.hasOwnProperty('customPath')) {
                obj['customPath'] = ApiClient.convertToType(data['customPath'], 'String');
            }
            if (data.hasOwnProperty('customQueryString')) {
                obj['customQueryString'] = ApiClient.convertToType(data['customQueryString'], 'String');
            }
            if (data.hasOwnProperty('destinationProtocol')) {
                obj['destinationProtocol'] = ApiClient.convertToType(data['destinationProtocol'], 'String');
            }
            if (data.hasOwnProperty('redirectType')) {
                obj['redirectType'] = ApiClient.convertToType(data['redirectType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UrlRedirectActionParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UrlRedirectActionParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UrlRedirectActionParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['@odata.type'] && !(typeof data['@odata.type'] === 'string' || data['@odata.type'] instanceof String)) {
            throw new Error("Expected the field `@odata.type` to be a primitive type in the JSON string but got " + data['@odata.type']);
        }
        // ensure the json data is a string
        if (data['customFragment'] && !(typeof data['customFragment'] === 'string' || data['customFragment'] instanceof String)) {
            throw new Error("Expected the field `customFragment` to be a primitive type in the JSON string but got " + data['customFragment']);
        }
        // ensure the json data is a string
        if (data['customHostname'] && !(typeof data['customHostname'] === 'string' || data['customHostname'] instanceof String)) {
            throw new Error("Expected the field `customHostname` to be a primitive type in the JSON string but got " + data['customHostname']);
        }
        // ensure the json data is a string
        if (data['customPath'] && !(typeof data['customPath'] === 'string' || data['customPath'] instanceof String)) {
            throw new Error("Expected the field `customPath` to be a primitive type in the JSON string but got " + data['customPath']);
        }
        // ensure the json data is a string
        if (data['customQueryString'] && !(typeof data['customQueryString'] === 'string' || data['customQueryString'] instanceof String)) {
            throw new Error("Expected the field `customQueryString` to be a primitive type in the JSON string but got " + data['customQueryString']);
        }
        // ensure the json data is a string
        if (data['destinationProtocol'] && !(typeof data['destinationProtocol'] === 'string' || data['destinationProtocol'] instanceof String)) {
            throw new Error("Expected the field `destinationProtocol` to be a primitive type in the JSON string but got " + data['destinationProtocol']);
        }
        // ensure the json data is a string
        if (data['redirectType'] && !(typeof data['redirectType'] === 'string' || data['redirectType'] instanceof String)) {
            throw new Error("Expected the field `redirectType` to be a primitive type in the JSON string but got " + data['redirectType']);
        }

        return true;
    }


}

UrlRedirectActionParameters.RequiredProperties = ["@odata.type", "redirectType"];

/**
 * @member {module:model/UrlRedirectActionParameters.OdataTypeEnum} @odata.type
 */
UrlRedirectActionParameters.prototype['@odata.type'] = undefined;

/**
 * Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
 * @member {String} customFragment
 */
UrlRedirectActionParameters.prototype['customFragment'] = undefined;

/**
 * Host to redirect. Leave empty to use the incoming host as the destination host.
 * @member {String} customHostname
 */
UrlRedirectActionParameters.prototype['customHostname'] = undefined;

/**
 * The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
 * @member {String} customPath
 */
UrlRedirectActionParameters.prototype['customPath'] = undefined;

/**
 * The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
 * @member {String} customQueryString
 */
UrlRedirectActionParameters.prototype['customQueryString'] = undefined;

/**
 * Protocol to use for the redirect. The default value is MatchRequest
 * @member {module:model/UrlRedirectActionParameters.DestinationProtocolEnum} destinationProtocol
 */
UrlRedirectActionParameters.prototype['destinationProtocol'] = undefined;

/**
 * The redirect type the rule will use when redirecting traffic.
 * @member {module:model/UrlRedirectActionParameters.RedirectTypeEnum} redirectType
 */
UrlRedirectActionParameters.prototype['redirectType'] = undefined;





/**
 * Allowed values for the <code>@odata.type</code> property.
 * @enum {String}
 * @readonly
 */
UrlRedirectActionParameters['OdataTypeEnum'] = {

    /**
     * value: "#Microsoft.Azure.Cdn.Models.DeliveryRuleUrlRedirectActionParameters"
     * @const
     */
    "#Microsoft.Azure.Cdn.Models.DeliveryRuleUrlRedirectActionParameters": "#Microsoft.Azure.Cdn.Models.DeliveryRuleUrlRedirectActionParameters"
};


/**
 * Allowed values for the <code>destinationProtocol</code> property.
 * @enum {String}
 * @readonly
 */
UrlRedirectActionParameters['DestinationProtocolEnum'] = {

    /**
     * value: "MatchRequest"
     * @const
     */
    "MatchRequest": "MatchRequest",

    /**
     * value: "Http"
     * @const
     */
    "Http": "Http",

    /**
     * value: "Https"
     * @const
     */
    "Https": "Https"
};


/**
 * Allowed values for the <code>redirectType</code> property.
 * @enum {String}
 * @readonly
 */
UrlRedirectActionParameters['RedirectTypeEnum'] = {

    /**
     * value: "Moved"
     * @const
     */
    "Moved": "Moved",

    /**
     * value: "Found"
     * @const
     */
    "Found": "Found",

    /**
     * value: "TemporaryRedirect"
     * @const
     */
    "TemporaryRedirect": "TemporaryRedirect",

    /**
     * value: "PermanentRedirect"
     * @const
     */
    "PermanentRedirect": "PermanentRedirect"
};



export default UrlRedirectActionParameters;

