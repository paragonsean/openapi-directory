/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EndpointPropertiesUpdateParametersDeliveryPolicy from './EndpointPropertiesUpdateParametersDeliveryPolicy';
import GeoFilter from './GeoFilter';
import OptimizationType from './OptimizationType';
import QueryStringCachingBehavior from './QueryStringCachingBehavior';
import ResourceReference from './ResourceReference';

/**
 * The EndpointPropertiesUpdateParameters model module.
 * @module model/EndpointPropertiesUpdateParameters
 * @version 2019-12-31
 */
class EndpointPropertiesUpdateParameters {
    /**
     * Constructs a new <code>EndpointPropertiesUpdateParameters</code>.
     * The JSON object containing endpoint update parameters.
     * @alias module:model/EndpointPropertiesUpdateParameters
     */
    constructor() { 
        
        EndpointPropertiesUpdateParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EndpointPropertiesUpdateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EndpointPropertiesUpdateParameters} obj Optional instance to populate.
     * @return {module:model/EndpointPropertiesUpdateParameters} The populated <code>EndpointPropertiesUpdateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EndpointPropertiesUpdateParameters();

            if (data.hasOwnProperty('contentTypesToCompress')) {
                obj['contentTypesToCompress'] = ApiClient.convertToType(data['contentTypesToCompress'], ['String']);
            }
            if (data.hasOwnProperty('defaultOriginGroup')) {
                obj['defaultOriginGroup'] = ResourceReference.constructFromObject(data['defaultOriginGroup']);
            }
            if (data.hasOwnProperty('deliveryPolicy')) {
                obj['deliveryPolicy'] = EndpointPropertiesUpdateParametersDeliveryPolicy.constructFromObject(data['deliveryPolicy']);
            }
            if (data.hasOwnProperty('geoFilters')) {
                obj['geoFilters'] = ApiClient.convertToType(data['geoFilters'], [GeoFilter]);
            }
            if (data.hasOwnProperty('isCompressionEnabled')) {
                obj['isCompressionEnabled'] = ApiClient.convertToType(data['isCompressionEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('isHttpAllowed')) {
                obj['isHttpAllowed'] = ApiClient.convertToType(data['isHttpAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('isHttpsAllowed')) {
                obj['isHttpsAllowed'] = ApiClient.convertToType(data['isHttpsAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('optimizationType')) {
                obj['optimizationType'] = OptimizationType.constructFromObject(data['optimizationType']);
            }
            if (data.hasOwnProperty('originHostHeader')) {
                obj['originHostHeader'] = ApiClient.convertToType(data['originHostHeader'], 'String');
            }
            if (data.hasOwnProperty('originPath')) {
                obj['originPath'] = ApiClient.convertToType(data['originPath'], 'String');
            }
            if (data.hasOwnProperty('probePath')) {
                obj['probePath'] = ApiClient.convertToType(data['probePath'], 'String');
            }
            if (data.hasOwnProperty('queryStringCachingBehavior')) {
                obj['queryStringCachingBehavior'] = QueryStringCachingBehavior.constructFromObject(data['queryStringCachingBehavior']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EndpointPropertiesUpdateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EndpointPropertiesUpdateParameters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['contentTypesToCompress'])) {
            throw new Error("Expected the field `contentTypesToCompress` to be an array in the JSON data but got " + data['contentTypesToCompress']);
        }
        // validate the optional field `defaultOriginGroup`
        if (data['defaultOriginGroup']) { // data not null
          ResourceReference.validateJSON(data['defaultOriginGroup']);
        }
        // validate the optional field `deliveryPolicy`
        if (data['deliveryPolicy']) { // data not null
          EndpointPropertiesUpdateParametersDeliveryPolicy.validateJSON(data['deliveryPolicy']);
        }
        if (data['geoFilters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['geoFilters'])) {
                throw new Error("Expected the field `geoFilters` to be an array in the JSON data but got " + data['geoFilters']);
            }
            // validate the optional field `geoFilters` (array)
            for (const item of data['geoFilters']) {
                GeoFilter.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['originHostHeader'] && !(typeof data['originHostHeader'] === 'string' || data['originHostHeader'] instanceof String)) {
            throw new Error("Expected the field `originHostHeader` to be a primitive type in the JSON string but got " + data['originHostHeader']);
        }
        // ensure the json data is a string
        if (data['originPath'] && !(typeof data['originPath'] === 'string' || data['originPath'] instanceof String)) {
            throw new Error("Expected the field `originPath` to be a primitive type in the JSON string but got " + data['originPath']);
        }
        // ensure the json data is a string
        if (data['probePath'] && !(typeof data['probePath'] === 'string' || data['probePath'] instanceof String)) {
            throw new Error("Expected the field `probePath` to be a primitive type in the JSON string but got " + data['probePath']);
        }

        return true;
    }


}



/**
 * List of content types on which compression applies. The value should be a valid MIME type.
 * @member {Array.<String>} contentTypesToCompress
 */
EndpointPropertiesUpdateParameters.prototype['contentTypesToCompress'] = undefined;

/**
 * @member {module:model/ResourceReference} defaultOriginGroup
 */
EndpointPropertiesUpdateParameters.prototype['defaultOriginGroup'] = undefined;

/**
 * @member {module:model/EndpointPropertiesUpdateParametersDeliveryPolicy} deliveryPolicy
 */
EndpointPropertiesUpdateParameters.prototype['deliveryPolicy'] = undefined;

/**
 * List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
 * @member {Array.<module:model/GeoFilter>} geoFilters
 */
EndpointPropertiesUpdateParameters.prototype['geoFilters'] = undefined;

/**
 * Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
 * @member {Boolean} isCompressionEnabled
 */
EndpointPropertiesUpdateParameters.prototype['isCompressionEnabled'] = undefined;

/**
 * Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
 * @member {Boolean} isHttpAllowed
 */
EndpointPropertiesUpdateParameters.prototype['isHttpAllowed'] = undefined;

/**
 * Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
 * @member {Boolean} isHttpsAllowed
 */
EndpointPropertiesUpdateParameters.prototype['isHttpsAllowed'] = undefined;

/**
 * @member {module:model/OptimizationType} optimizationType
 */
EndpointPropertiesUpdateParameters.prototype['optimizationType'] = undefined;

/**
 * The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
 * @member {String} originHostHeader
 */
EndpointPropertiesUpdateParameters.prototype['originHostHeader'] = undefined;

/**
 * A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
 * @member {String} originPath
 */
EndpointPropertiesUpdateParameters.prototype['originPath'] = undefined;

/**
 * Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
 * @member {String} probePath
 */
EndpointPropertiesUpdateParameters.prototype['probePath'] = undefined;

/**
 * @member {module:model/QueryStringCachingBehavior} queryStringCachingBehavior
 */
EndpointPropertiesUpdateParameters.prototype['queryStringCachingBehavior'] = undefined;






export default EndpointPropertiesUpdateParameters;

