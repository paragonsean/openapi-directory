/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CacheExpirationActionParameters model module.
 * @module model/CacheExpirationActionParameters
 * @version 2019-12-31
 */
class CacheExpirationActionParameters {
    /**
     * Constructs a new <code>CacheExpirationActionParameters</code>.
     * Defines the parameters for the cache expiration action.
     * @alias module:model/CacheExpirationActionParameters
     * @param odataType {module:model/CacheExpirationActionParameters.OdataTypeEnum} 
     * @param cacheBehavior {module:model/CacheExpirationActionParameters.CacheBehaviorEnum} Caching behavior for the requests
     * @param cacheType {module:model/CacheExpirationActionParameters.CacheTypeEnum} The level at which the content needs to be cached.
     */
    constructor(odataType, cacheBehavior, cacheType) { 
        
        CacheExpirationActionParameters.initialize(this, odataType, cacheBehavior, cacheType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, odataType, cacheBehavior, cacheType) { 
        obj['@odata.type'] = odataType;
        obj['cacheBehavior'] = cacheBehavior;
        obj['cacheType'] = cacheType;
    }

    /**
     * Constructs a <code>CacheExpirationActionParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CacheExpirationActionParameters} obj Optional instance to populate.
     * @return {module:model/CacheExpirationActionParameters} The populated <code>CacheExpirationActionParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CacheExpirationActionParameters();

            if (data.hasOwnProperty('@odata.type')) {
                obj['@odata.type'] = ApiClient.convertToType(data['@odata.type'], 'String');
            }
            if (data.hasOwnProperty('cacheBehavior')) {
                obj['cacheBehavior'] = ApiClient.convertToType(data['cacheBehavior'], 'String');
            }
            if (data.hasOwnProperty('cacheDuration')) {
                obj['cacheDuration'] = ApiClient.convertToType(data['cacheDuration'], 'String');
            }
            if (data.hasOwnProperty('cacheType')) {
                obj['cacheType'] = ApiClient.convertToType(data['cacheType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CacheExpirationActionParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CacheExpirationActionParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CacheExpirationActionParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['@odata.type'] && !(typeof data['@odata.type'] === 'string' || data['@odata.type'] instanceof String)) {
            throw new Error("Expected the field `@odata.type` to be a primitive type in the JSON string but got " + data['@odata.type']);
        }
        // ensure the json data is a string
        if (data['cacheBehavior'] && !(typeof data['cacheBehavior'] === 'string' || data['cacheBehavior'] instanceof String)) {
            throw new Error("Expected the field `cacheBehavior` to be a primitive type in the JSON string but got " + data['cacheBehavior']);
        }
        // ensure the json data is a string
        if (data['cacheDuration'] && !(typeof data['cacheDuration'] === 'string' || data['cacheDuration'] instanceof String)) {
            throw new Error("Expected the field `cacheDuration` to be a primitive type in the JSON string but got " + data['cacheDuration']);
        }
        // ensure the json data is a string
        if (data['cacheType'] && !(typeof data['cacheType'] === 'string' || data['cacheType'] instanceof String)) {
            throw new Error("Expected the field `cacheType` to be a primitive type in the JSON string but got " + data['cacheType']);
        }

        return true;
    }


}

CacheExpirationActionParameters.RequiredProperties = ["@odata.type", "cacheBehavior", "cacheType"];

/**
 * @member {module:model/CacheExpirationActionParameters.OdataTypeEnum} @odata.type
 */
CacheExpirationActionParameters.prototype['@odata.type'] = undefined;

/**
 * Caching behavior for the requests
 * @member {module:model/CacheExpirationActionParameters.CacheBehaviorEnum} cacheBehavior
 */
CacheExpirationActionParameters.prototype['cacheBehavior'] = undefined;

/**
 * The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
 * @member {String} cacheDuration
 */
CacheExpirationActionParameters.prototype['cacheDuration'] = undefined;

/**
 * The level at which the content needs to be cached.
 * @member {module:model/CacheExpirationActionParameters.CacheTypeEnum} cacheType
 */
CacheExpirationActionParameters.prototype['cacheType'] = undefined;





/**
 * Allowed values for the <code>@odata.type</code> property.
 * @enum {String}
 * @readonly
 */
CacheExpirationActionParameters['OdataTypeEnum'] = {

    /**
     * value: "#Microsoft.Azure.Cdn.Models.DeliveryRuleCacheExpirationActionParameters"
     * @const
     */
    "#Microsoft.Azure.Cdn.Models.DeliveryRuleCacheExpirationActionParameters": "#Microsoft.Azure.Cdn.Models.DeliveryRuleCacheExpirationActionParameters"
};


/**
 * Allowed values for the <code>cacheBehavior</code> property.
 * @enum {String}
 * @readonly
 */
CacheExpirationActionParameters['CacheBehaviorEnum'] = {

    /**
     * value: "BypassCache"
     * @const
     */
    "BypassCache": "BypassCache",

    /**
     * value: "Override"
     * @const
     */
    "Override": "Override",

    /**
     * value: "SetIfMissing"
     * @const
     */
    "SetIfMissing": "SetIfMissing"
};


/**
 * Allowed values for the <code>cacheType</code> property.
 * @enum {String}
 * @readonly
 */
CacheExpirationActionParameters['CacheTypeEnum'] = {

    /**
     * value: "All"
     * @const
     */
    "All": "All"
};



export default CacheExpirationActionParameters;

