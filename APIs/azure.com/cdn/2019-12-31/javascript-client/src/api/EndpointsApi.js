/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Endpoint from '../model/Endpoint';
import EndpointListResult from '../model/EndpointListResult';
import EndpointUpdateParameters from '../model/EndpointUpdateParameters';
import ErrorResponse from '../model/ErrorResponse';
import LoadParameters from '../model/LoadParameters';
import PurgeParameters from '../model/PurgeParameters';
import ResourceUsageListResult from '../model/ResourceUsageListResult';
import ValidateCustomDomainInput from '../model/ValidateCustomDomainInput';
import ValidateCustomDomainOutput from '../model/ValidateCustomDomainOutput';

/**
* Endpoints service.
* @module api/EndpointsApi
* @version 2019-12-31
*/
export default class EndpointsApi {

    /**
    * Constructs a new EndpointsApi. 
    * @alias module:api/EndpointsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the endpointsCreate operation.
     * @callback module:api/EndpointsApi~endpointsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Endpoint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:model/Endpoint} endpoint Endpoint properties
     * @param {module:api/EndpointsApi~endpointsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Endpoint}
     */
    endpointsCreate(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, endpoint, callback) {
      let postBody = endpoint;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling endpointsCreate");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling endpointsCreate");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling endpointsCreate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling endpointsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling endpointsCreate");
      }
      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling endpointsCreate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Endpoint;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the endpointsDelete operation.
     * @callback module:api/EndpointsApi~endpointsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/EndpointsApi~endpointsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    endpointsDelete(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling endpointsDelete");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling endpointsDelete");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling endpointsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling endpointsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling endpointsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the endpointsGet operation.
     * @callback module:api/EndpointsApi~endpointsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Endpoint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/EndpointsApi~endpointsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Endpoint}
     */
    endpointsGet(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling endpointsGet");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling endpointsGet");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling endpointsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling endpointsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling endpointsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Endpoint;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the endpointsListByProfile operation.
     * @callback module:api/EndpointsApi~endpointsListByProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EndpointListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists existing CDN endpoints.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/EndpointsApi~endpointsListByProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EndpointListResult}
     */
    endpointsListByProfile(resourceGroupName, profileName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling endpointsListByProfile");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling endpointsListByProfile");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling endpointsListByProfile");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling endpointsListByProfile");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EndpointListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the endpointsListResourceUsage operation.
     * @callback module:api/EndpointsApi~endpointsListResourceUsageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceUsageListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks the quota and usage of geo filters and custom domains under the given endpoint.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/EndpointsApi~endpointsListResourceUsageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceUsageListResult}
     */
    endpointsListResourceUsage(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling endpointsListResourceUsage");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling endpointsListResourceUsage");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling endpointsListResourceUsage");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling endpointsListResourceUsage");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling endpointsListResourceUsage");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceUsageListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/checkResourceUsage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the endpointsLoadContent operation.
     * @callback module:api/EndpointsApi~endpointsLoadContentCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Pre-loads a content to CDN. Available for Verizon Profiles.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:model/LoadParameters} contentFilePaths The path to the content to be loaded. Path should be a full URL, e.g. ‘/pictures/city.png' which loads a single file 
     * @param {module:api/EndpointsApi~endpointsLoadContentCallback} callback The callback function, accepting three arguments: error, data, response
     */
    endpointsLoadContent(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, contentFilePaths, callback) {
      let postBody = contentFilePaths;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling endpointsLoadContent");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling endpointsLoadContent");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling endpointsLoadContent");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling endpointsLoadContent");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling endpointsLoadContent");
      }
      // verify the required parameter 'contentFilePaths' is set
      if (contentFilePaths === undefined || contentFilePaths === null) {
        throw new Error("Missing the required parameter 'contentFilePaths' when calling endpointsLoadContent");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/load', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the endpointsPurgeContent operation.
     * @callback module:api/EndpointsApi~endpointsPurgeContentCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes a content from CDN.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:model/PurgeParameters} contentFilePaths The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/_*' which removes all folders and files in the directory.
     * @param {module:api/EndpointsApi~endpointsPurgeContentCallback} callback The callback function, accepting three arguments: error, data, response
     */
    endpointsPurgeContent(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, contentFilePaths, callback) {
      let postBody = contentFilePaths;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling endpointsPurgeContent");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling endpointsPurgeContent");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling endpointsPurgeContent");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling endpointsPurgeContent");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling endpointsPurgeContent");
      }
      // verify the required parameter 'contentFilePaths' is set
      if (contentFilePaths === undefined || contentFilePaths === null) {
        throw new Error("Missing the required parameter 'contentFilePaths' when calling endpointsPurgeContent");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/purge', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the endpointsStart operation.
     * @callback module:api/EndpointsApi~endpointsStartCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Endpoint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Starts an existing CDN endpoint that is on a stopped state.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/EndpointsApi~endpointsStartCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Endpoint}
     */
    endpointsStart(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling endpointsStart");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling endpointsStart");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling endpointsStart");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling endpointsStart");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling endpointsStart");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Endpoint;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the endpointsStop operation.
     * @callback module:api/EndpointsApi~endpointsStopCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Endpoint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Stops an existing running CDN endpoint.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/EndpointsApi~endpointsStopCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Endpoint}
     */
    endpointsStop(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling endpointsStop");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling endpointsStop");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling endpointsStop");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling endpointsStop");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling endpointsStop");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Endpoint;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/stop', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the endpointsUpdate operation.
     * @callback module:api/EndpointsApi~endpointsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Endpoint} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. Only tags can be updated after creating an endpoint. To update origins, use the Update Origin operation. To update origin groups, use the Update Origin group operation. To update custom domains, use the Update Custom Domain operation.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:model/EndpointUpdateParameters} endpointUpdateProperties Endpoint update properties
     * @param {module:api/EndpointsApi~endpointsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Endpoint}
     */
    endpointsUpdate(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, endpointUpdateProperties, callback) {
      let postBody = endpointUpdateProperties;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling endpointsUpdate");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling endpointsUpdate");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling endpointsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling endpointsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling endpointsUpdate");
      }
      // verify the required parameter 'endpointUpdateProperties' is set
      if (endpointUpdateProperties === undefined || endpointUpdateProperties === null) {
        throw new Error("Missing the required parameter 'endpointUpdateProperties' when calling endpointsUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Endpoint;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the endpointsValidateCustomDomain operation.
     * @callback module:api/EndpointsApi~endpointsValidateCustomDomainCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidateCustomDomainOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:model/ValidateCustomDomainInput} customDomainProperties Custom domain to be validated.
     * @param {module:api/EndpointsApi~endpointsValidateCustomDomainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidateCustomDomainOutput}
     */
    endpointsValidateCustomDomain(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, customDomainProperties, callback) {
      let postBody = customDomainProperties;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling endpointsValidateCustomDomain");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling endpointsValidateCustomDomain");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling endpointsValidateCustomDomain");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling endpointsValidateCustomDomain");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling endpointsValidateCustomDomain");
      }
      // verify the required parameter 'customDomainProperties' is set
      if (customDomainProperties === undefined || customDomainProperties === null) {
        throw new Error("Missing the required parameter 'customDomainProperties' when calling endpointsValidateCustomDomain");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ValidateCustomDomainOutput;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/validateCustomDomain', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
