/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Origin from '../model/Origin';
import OriginListResult from '../model/OriginListResult';
import OriginUpdateParameters from '../model/OriginUpdateParameters';

/**
* Origins service.
* @module api/OriginsApi
* @version 2019-12-31
*/
export default class OriginsApi {

    /**
    * Constructs a new OriginsApi. 
    * @alias module:api/OriginsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the originsCreate operation.
     * @callback module:api/OriginsApi~originsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Origin} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new origin within the specified endpoint.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} originName Name of the origin that is unique within the endpoint.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:model/Origin} origin Origin properties
     * @param {module:api/OriginsApi~originsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Origin}
     */
    originsCreate(resourceGroupName, profileName, endpointName, originName, subscriptionId, apiVersion, origin, callback) {
      let postBody = origin;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling originsCreate");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling originsCreate");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling originsCreate");
      }
      // verify the required parameter 'originName' is set
      if (originName === undefined || originName === null) {
        throw new Error("Missing the required parameter 'originName' when calling originsCreate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling originsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling originsCreate");
      }
      // verify the required parameter 'origin' is set
      if (origin === undefined || origin === null) {
        throw new Error("Missing the required parameter 'origin' when calling originsCreate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'originName': originName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Origin;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the originsDelete operation.
     * @callback module:api/OriginsApi~originsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an existing origin within an endpoint.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} originName Name of the origin which is unique within the endpoint.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/OriginsApi~originsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    originsDelete(resourceGroupName, profileName, endpointName, originName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling originsDelete");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling originsDelete");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling originsDelete");
      }
      // verify the required parameter 'originName' is set
      if (originName === undefined || originName === null) {
        throw new Error("Missing the required parameter 'originName' when calling originsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling originsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling originsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'originName': originName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the originsGet operation.
     * @callback module:api/OriginsApi~originsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Origin} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an existing origin within an endpoint.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} originName Name of the origin which is unique within the endpoint.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/OriginsApi~originsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Origin}
     */
    originsGet(resourceGroupName, profileName, endpointName, originName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling originsGet");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling originsGet");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling originsGet");
      }
      // verify the required parameter 'originName' is set
      if (originName === undefined || originName === null) {
        throw new Error("Missing the required parameter 'originName' when calling originsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling originsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling originsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'originName': originName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Origin;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the originsListByEndpoint operation.
     * @callback module:api/OriginsApi~originsListByEndpointCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OriginListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the existing origins within an endpoint.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/OriginsApi~originsListByEndpointCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OriginListResult}
     */
    originsListByEndpoint(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling originsListByEndpoint");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling originsListByEndpoint");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling originsListByEndpoint");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling originsListByEndpoint");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling originsListByEndpoint");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OriginListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the originsUpdate operation.
     * @callback module:api/OriginsApi~originsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Origin} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing origin within an endpoint.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} originName Name of the origin which is unique within the endpoint.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:model/OriginUpdateParameters} originUpdateProperties Origin properties
     * @param {module:api/OriginsApi~originsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Origin}
     */
    originsUpdate(resourceGroupName, profileName, endpointName, originName, subscriptionId, apiVersion, originUpdateProperties, callback) {
      let postBody = originUpdateProperties;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling originsUpdate");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling originsUpdate");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling originsUpdate");
      }
      // verify the required parameter 'originName' is set
      if (originName === undefined || originName === null) {
        throw new Error("Missing the required parameter 'originName' when calling originsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling originsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling originsUpdate");
      }
      // verify the required parameter 'originUpdateProperties' is set
      if (originUpdateProperties === undefined || originUpdateProperties === null) {
        throw new Error("Missing the required parameter 'originUpdateProperties' when calling originsUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'originName': originName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Origin;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
