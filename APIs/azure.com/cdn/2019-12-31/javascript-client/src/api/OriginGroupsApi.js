/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import OriginGroup from '../model/OriginGroup';
import OriginGroupListResult from '../model/OriginGroupListResult';
import OriginGroupUpdateParameters from '../model/OriginGroupUpdateParameters';

/**
* OriginGroups service.
* @module api/OriginGroupsApi
* @version 2019-12-31
*/
export default class OriginGroupsApi {

    /**
    * Constructs a new OriginGroupsApi. 
    * @alias module:api/OriginGroupsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the originGroupsCreate operation.
     * @callback module:api/OriginGroupsApi~originGroupsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OriginGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new origin group within the specified endpoint.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} originGroupName Name of the origin group which is unique within the endpoint.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:model/OriginGroup} originGroup Origin group properties
     * @param {module:api/OriginGroupsApi~originGroupsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OriginGroup}
     */
    originGroupsCreate(resourceGroupName, profileName, endpointName, originGroupName, subscriptionId, apiVersion, originGroup, callback) {
      let postBody = originGroup;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling originGroupsCreate");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling originGroupsCreate");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling originGroupsCreate");
      }
      // verify the required parameter 'originGroupName' is set
      if (originGroupName === undefined || originGroupName === null) {
        throw new Error("Missing the required parameter 'originGroupName' when calling originGroupsCreate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling originGroupsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling originGroupsCreate");
      }
      // verify the required parameter 'originGroup' is set
      if (originGroup === undefined || originGroup === null) {
        throw new Error("Missing the required parameter 'originGroup' when calling originGroupsCreate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'originGroupName': originGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OriginGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the originGroupsDelete operation.
     * @callback module:api/OriginGroupsApi~originGroupsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an existing origin group within an endpoint.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} originGroupName Name of the origin group which is unique within the endpoint.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/OriginGroupsApi~originGroupsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    originGroupsDelete(resourceGroupName, profileName, endpointName, originGroupName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling originGroupsDelete");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling originGroupsDelete");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling originGroupsDelete");
      }
      // verify the required parameter 'originGroupName' is set
      if (originGroupName === undefined || originGroupName === null) {
        throw new Error("Missing the required parameter 'originGroupName' when calling originGroupsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling originGroupsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling originGroupsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'originGroupName': originGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the originGroupsGet operation.
     * @callback module:api/OriginGroupsApi~originGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OriginGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an existing origin group within an endpoint.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} originGroupName Name of the origin group which is unique within the endpoint.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/OriginGroupsApi~originGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OriginGroup}
     */
    originGroupsGet(resourceGroupName, profileName, endpointName, originGroupName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling originGroupsGet");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling originGroupsGet");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling originGroupsGet");
      }
      // verify the required parameter 'originGroupName' is set
      if (originGroupName === undefined || originGroupName === null) {
        throw new Error("Missing the required parameter 'originGroupName' when calling originGroupsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling originGroupsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling originGroupsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'originGroupName': originGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OriginGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the originGroupsListByEndpoint operation.
     * @callback module:api/OriginGroupsApi~originGroupsListByEndpointCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OriginGroupListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the existing origin groups within an endpoint.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:api/OriginGroupsApi~originGroupsListByEndpointCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OriginGroupListResult}
     */
    originGroupsListByEndpoint(resourceGroupName, profileName, endpointName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling originGroupsListByEndpoint");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling originGroupsListByEndpoint");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling originGroupsListByEndpoint");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling originGroupsListByEndpoint");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling originGroupsListByEndpoint");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OriginGroupListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the originGroupsUpdate operation.
     * @callback module:api/OriginGroupsApi~originGroupsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OriginGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing origin group within an endpoint.
     * @param {String} resourceGroupName Name of the Resource group within the Azure subscription.
     * @param {String} profileName Name of the CDN profile which is unique within the resource group.
     * @param {String} endpointName Name of the endpoint under the profile which is unique globally.
     * @param {String} originGroupName Name of the origin group which is unique within the endpoint.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion Version of the API to be used with the client request. Current version is 2017-04-02.
     * @param {module:model/OriginGroupUpdateParameters} originGroupUpdateProperties Origin group properties
     * @param {module:api/OriginGroupsApi~originGroupsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OriginGroup}
     */
    originGroupsUpdate(resourceGroupName, profileName, endpointName, originGroupName, subscriptionId, apiVersion, originGroupUpdateProperties, callback) {
      let postBody = originGroupUpdateProperties;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling originGroupsUpdate");
      }
      // verify the required parameter 'profileName' is set
      if (profileName === undefined || profileName === null) {
        throw new Error("Missing the required parameter 'profileName' when calling originGroupsUpdate");
      }
      // verify the required parameter 'endpointName' is set
      if (endpointName === undefined || endpointName === null) {
        throw new Error("Missing the required parameter 'endpointName' when calling originGroupsUpdate");
      }
      // verify the required parameter 'originGroupName' is set
      if (originGroupName === undefined || originGroupName === null) {
        throw new Error("Missing the required parameter 'originGroupName' when calling originGroupsUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling originGroupsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling originGroupsUpdate");
      }
      // verify the required parameter 'originGroupUpdateProperties' is set
      if (originGroupUpdateProperties === undefined || originGroupUpdateProperties === null) {
        throw new Error("Missing the required parameter 'originGroupUpdateProperties' when calling originGroupsUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'profileName': profileName,
        'endpointName': endpointName,
        'originGroupName': originGroupName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OriginGroup;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
