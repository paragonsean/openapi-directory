/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEndpointPropertiesUpdateParameters.h
 *
 * The JSON object containing endpoint update parameters.
 */

#ifndef OAIEndpointPropertiesUpdateParameters_H
#define OAIEndpointPropertiesUpdateParameters_H

#include <QJsonObject>

#include "OAIEndpointPropertiesUpdateParameters_deliveryPolicy.h"
#include "OAIGeoFilter.h"
#include "OAIOptimizationType.h"
#include "OAIQueryStringCachingBehavior.h"
#include "OAIResourceReference.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceReference;
class OAIEndpointPropertiesUpdateParameters_deliveryPolicy;
class OAIGeoFilter;

class OAIEndpointPropertiesUpdateParameters : public OAIObject {
public:
    OAIEndpointPropertiesUpdateParameters();
    OAIEndpointPropertiesUpdateParameters(QString json);
    ~OAIEndpointPropertiesUpdateParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getContentTypesToCompress() const;
    void setContentTypesToCompress(const QList<QString> &content_types_to_compress);
    bool is_content_types_to_compress_Set() const;
    bool is_content_types_to_compress_Valid() const;

    OAIResourceReference getDefaultOriginGroup() const;
    void setDefaultOriginGroup(const OAIResourceReference &default_origin_group);
    bool is_default_origin_group_Set() const;
    bool is_default_origin_group_Valid() const;

    OAIEndpointPropertiesUpdateParameters_deliveryPolicy getDeliveryPolicy() const;
    void setDeliveryPolicy(const OAIEndpointPropertiesUpdateParameters_deliveryPolicy &delivery_policy);
    bool is_delivery_policy_Set() const;
    bool is_delivery_policy_Valid() const;

    QList<OAIGeoFilter> getGeoFilters() const;
    void setGeoFilters(const QList<OAIGeoFilter> &geo_filters);
    bool is_geo_filters_Set() const;
    bool is_geo_filters_Valid() const;

    bool isIsCompressionEnabled() const;
    void setIsCompressionEnabled(const bool &is_compression_enabled);
    bool is_is_compression_enabled_Set() const;
    bool is_is_compression_enabled_Valid() const;

    bool isIsHttpAllowed() const;
    void setIsHttpAllowed(const bool &is_http_allowed);
    bool is_is_http_allowed_Set() const;
    bool is_is_http_allowed_Valid() const;

    bool isIsHttpsAllowed() const;
    void setIsHttpsAllowed(const bool &is_https_allowed);
    bool is_is_https_allowed_Set() const;
    bool is_is_https_allowed_Valid() const;

    OAIOptimizationType getOptimizationType() const;
    void setOptimizationType(const OAIOptimizationType &optimization_type);
    bool is_optimization_type_Set() const;
    bool is_optimization_type_Valid() const;

    QString getOriginHostHeader() const;
    void setOriginHostHeader(const QString &origin_host_header);
    bool is_origin_host_header_Set() const;
    bool is_origin_host_header_Valid() const;

    QString getOriginPath() const;
    void setOriginPath(const QString &origin_path);
    bool is_origin_path_Set() const;
    bool is_origin_path_Valid() const;

    QString getProbePath() const;
    void setProbePath(const QString &probe_path);
    bool is_probe_path_Set() const;
    bool is_probe_path_Valid() const;

    OAIQueryStringCachingBehavior getQueryStringCachingBehavior() const;
    void setQueryStringCachingBehavior(const OAIQueryStringCachingBehavior &query_string_caching_behavior);
    bool is_query_string_caching_behavior_Set() const;
    bool is_query_string_caching_behavior_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_content_types_to_compress;
    bool m_content_types_to_compress_isSet;
    bool m_content_types_to_compress_isValid;

    OAIResourceReference m_default_origin_group;
    bool m_default_origin_group_isSet;
    bool m_default_origin_group_isValid;

    OAIEndpointPropertiesUpdateParameters_deliveryPolicy m_delivery_policy;
    bool m_delivery_policy_isSet;
    bool m_delivery_policy_isValid;

    QList<OAIGeoFilter> m_geo_filters;
    bool m_geo_filters_isSet;
    bool m_geo_filters_isValid;

    bool m_is_compression_enabled;
    bool m_is_compression_enabled_isSet;
    bool m_is_compression_enabled_isValid;

    bool m_is_http_allowed;
    bool m_is_http_allowed_isSet;
    bool m_is_http_allowed_isValid;

    bool m_is_https_allowed;
    bool m_is_https_allowed_isSet;
    bool m_is_https_allowed_isValid;

    OAIOptimizationType m_optimization_type;
    bool m_optimization_type_isSet;
    bool m_optimization_type_isValid;

    QString m_origin_host_header;
    bool m_origin_host_header_isSet;
    bool m_origin_host_header_isValid;

    QString m_origin_path;
    bool m_origin_path_isSet;
    bool m_origin_path_isValid;

    QString m_probe_path;
    bool m_probe_path_isSet;
    bool m_probe_path_isValid;

    OAIQueryStringCachingBehavior m_query_string_caching_behavior;
    bool m_query_string_caching_behavior_isSet;
    bool m_query_string_caching_behavior_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEndpointPropertiesUpdateParameters)

#endif // OAIEndpointPropertiesUpdateParameters_H
