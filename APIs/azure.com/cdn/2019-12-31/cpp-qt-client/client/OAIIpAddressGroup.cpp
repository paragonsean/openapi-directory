/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIpAddressGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIpAddressGroup::OAIIpAddressGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIpAddressGroup::OAIIpAddressGroup() {
    this->initializeModel();
}

OAIIpAddressGroup::~OAIIpAddressGroup() {}

void OAIIpAddressGroup::initializeModel() {

    m_delivery_region_isSet = false;
    m_delivery_region_isValid = false;

    m_ipv4_addresses_isSet = false;
    m_ipv4_addresses_isValid = false;

    m_ipv6_addresses_isSet = false;
    m_ipv6_addresses_isValid = false;
}

void OAIIpAddressGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIpAddressGroup::fromJsonObject(QJsonObject json) {

    m_delivery_region_isValid = ::OpenAPI::fromJsonValue(m_delivery_region, json[QString("deliveryRegion")]);
    m_delivery_region_isSet = !json[QString("deliveryRegion")].isNull() && m_delivery_region_isValid;

    m_ipv4_addresses_isValid = ::OpenAPI::fromJsonValue(m_ipv4_addresses, json[QString("ipv4Addresses")]);
    m_ipv4_addresses_isSet = !json[QString("ipv4Addresses")].isNull() && m_ipv4_addresses_isValid;

    m_ipv6_addresses_isValid = ::OpenAPI::fromJsonValue(m_ipv6_addresses, json[QString("ipv6Addresses")]);
    m_ipv6_addresses_isSet = !json[QString("ipv6Addresses")].isNull() && m_ipv6_addresses_isValid;
}

QString OAIIpAddressGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIpAddressGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_delivery_region_isSet) {
        obj.insert(QString("deliveryRegion"), ::OpenAPI::toJsonValue(m_delivery_region));
    }
    if (m_ipv4_addresses.size() > 0) {
        obj.insert(QString("ipv4Addresses"), ::OpenAPI::toJsonValue(m_ipv4_addresses));
    }
    if (m_ipv6_addresses.size() > 0) {
        obj.insert(QString("ipv6Addresses"), ::OpenAPI::toJsonValue(m_ipv6_addresses));
    }
    return obj;
}

QString OAIIpAddressGroup::getDeliveryRegion() const {
    return m_delivery_region;
}
void OAIIpAddressGroup::setDeliveryRegion(const QString &delivery_region) {
    m_delivery_region = delivery_region;
    m_delivery_region_isSet = true;
}

bool OAIIpAddressGroup::is_delivery_region_Set() const{
    return m_delivery_region_isSet;
}

bool OAIIpAddressGroup::is_delivery_region_Valid() const{
    return m_delivery_region_isValid;
}

QList<OAICidrIpAddress> OAIIpAddressGroup::getIpv4Addresses() const {
    return m_ipv4_addresses;
}
void OAIIpAddressGroup::setIpv4Addresses(const QList<OAICidrIpAddress> &ipv4_addresses) {
    m_ipv4_addresses = ipv4_addresses;
    m_ipv4_addresses_isSet = true;
}

bool OAIIpAddressGroup::is_ipv4_addresses_Set() const{
    return m_ipv4_addresses_isSet;
}

bool OAIIpAddressGroup::is_ipv4_addresses_Valid() const{
    return m_ipv4_addresses_isValid;
}

QList<OAICidrIpAddress> OAIIpAddressGroup::getIpv6Addresses() const {
    return m_ipv6_addresses;
}
void OAIIpAddressGroup::setIpv6Addresses(const QList<OAICidrIpAddress> &ipv6_addresses) {
    m_ipv6_addresses = ipv6_addresses;
    m_ipv6_addresses_isSet = true;
}

bool OAIIpAddressGroup::is_ipv6_addresses_Set() const{
    return m_ipv6_addresses_isSet;
}

bool OAIIpAddressGroup::is_ipv6_addresses_Valid() const{
    return m_ipv6_addresses_isValid;
}

bool OAIIpAddressGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_delivery_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ipv4_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ipv6_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIpAddressGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
