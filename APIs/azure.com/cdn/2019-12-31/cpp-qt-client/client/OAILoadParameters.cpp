/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoadParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoadParameters::OAILoadParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoadParameters::OAILoadParameters() {
    this->initializeModel();
}

OAILoadParameters::~OAILoadParameters() {}

void OAILoadParameters::initializeModel() {

    m_content_paths_isSet = false;
    m_content_paths_isValid = false;
}

void OAILoadParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoadParameters::fromJsonObject(QJsonObject json) {

    m_content_paths_isValid = ::OpenAPI::fromJsonValue(m_content_paths, json[QString("contentPaths")]);
    m_content_paths_isSet = !json[QString("contentPaths")].isNull() && m_content_paths_isValid;
}

QString OAILoadParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoadParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_content_paths.size() > 0) {
        obj.insert(QString("contentPaths"), ::OpenAPI::toJsonValue(m_content_paths));
    }
    return obj;
}

QList<QString> OAILoadParameters::getContentPaths() const {
    return m_content_paths;
}
void OAILoadParameters::setContentPaths(const QList<QString> &content_paths) {
    m_content_paths = content_paths;
    m_content_paths_isSet = true;
}

bool OAILoadParameters::is_content_paths_Set() const{
    return m_content_paths_isSet;
}

bool OAILoadParameters::is_content_paths_Valid() const{
    return m_content_paths_isValid;
}

bool OAILoadParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoadParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_content_paths_isValid && true;
}

} // namespace OpenAPI
