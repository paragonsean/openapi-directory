/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeyVaultCertificateSourceParameters.h
 *
 * Describes the parameters for using a user&#39;s KeyVault certificate for securing custom domain.
 */

#ifndef OAIKeyVaultCertificateSourceParameters_H
#define OAIKeyVaultCertificateSourceParameters_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKeyVaultCertificateSourceParameters : public OAIObject {
public:
    OAIKeyVaultCertificateSourceParameters();
    OAIKeyVaultCertificateSourceParameters(QString json);
    ~OAIKeyVaultCertificateSourceParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOdataType() const;
    void setOdataType(const QString &odata_type);
    bool is_odata_type_Set() const;
    bool is_odata_type_Valid() const;

    QString getDeleteRule() const;
    void setDeleteRule(const QString &delete_rule);
    bool is_delete_rule_Set() const;
    bool is_delete_rule_Valid() const;

    QString getResourceGroupName() const;
    void setResourceGroupName(const QString &resource_group_name);
    bool is_resource_group_name_Set() const;
    bool is_resource_group_name_Valid() const;

    QString getSecretName() const;
    void setSecretName(const QString &secret_name);
    bool is_secret_name_Set() const;
    bool is_secret_name_Valid() const;

    QString getSecretVersion() const;
    void setSecretVersion(const QString &secret_version);
    bool is_secret_version_Set() const;
    bool is_secret_version_Valid() const;

    QString getSubscriptionId() const;
    void setSubscriptionId(const QString &subscription_id);
    bool is_subscription_id_Set() const;
    bool is_subscription_id_Valid() const;

    QString getUpdateRule() const;
    void setUpdateRule(const QString &update_rule);
    bool is_update_rule_Set() const;
    bool is_update_rule_Valid() const;

    QString getVaultName() const;
    void setVaultName(const QString &vault_name);
    bool is_vault_name_Set() const;
    bool is_vault_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_odata_type;
    bool m_odata_type_isSet;
    bool m_odata_type_isValid;

    QString m_delete_rule;
    bool m_delete_rule_isSet;
    bool m_delete_rule_isValid;

    QString m_resource_group_name;
    bool m_resource_group_name_isSet;
    bool m_resource_group_name_isValid;

    QString m_secret_name;
    bool m_secret_name_isSet;
    bool m_secret_name_isValid;

    QString m_secret_version;
    bool m_secret_version_isSet;
    bool m_secret_version_isValid;

    QString m_subscription_id;
    bool m_subscription_id_isSet;
    bool m_subscription_id_isValid;

    QString m_update_rule;
    bool m_update_rule_isSet;
    bool m_update_rule_isValid;

    QString m_vault_name;
    bool m_vault_name_isSet;
    bool m_vault_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeyVaultCertificateSourceParameters)

#endif // OAIKeyVaultCertificateSourceParameters_H
