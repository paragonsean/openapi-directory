/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICidrIpAddress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICidrIpAddress::OAICidrIpAddress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICidrIpAddress::OAICidrIpAddress() {
    this->initializeModel();
}

OAICidrIpAddress::~OAICidrIpAddress() {}

void OAICidrIpAddress::initializeModel() {

    m_base_ip_address_isSet = false;
    m_base_ip_address_isValid = false;

    m_prefix_length_isSet = false;
    m_prefix_length_isValid = false;
}

void OAICidrIpAddress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICidrIpAddress::fromJsonObject(QJsonObject json) {

    m_base_ip_address_isValid = ::OpenAPI::fromJsonValue(m_base_ip_address, json[QString("baseIpAddress")]);
    m_base_ip_address_isSet = !json[QString("baseIpAddress")].isNull() && m_base_ip_address_isValid;

    m_prefix_length_isValid = ::OpenAPI::fromJsonValue(m_prefix_length, json[QString("prefixLength")]);
    m_prefix_length_isSet = !json[QString("prefixLength")].isNull() && m_prefix_length_isValid;
}

QString OAICidrIpAddress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICidrIpAddress::asJsonObject() const {
    QJsonObject obj;
    if (m_base_ip_address_isSet) {
        obj.insert(QString("baseIpAddress"), ::OpenAPI::toJsonValue(m_base_ip_address));
    }
    if (m_prefix_length_isSet) {
        obj.insert(QString("prefixLength"), ::OpenAPI::toJsonValue(m_prefix_length));
    }
    return obj;
}

QString OAICidrIpAddress::getBaseIpAddress() const {
    return m_base_ip_address;
}
void OAICidrIpAddress::setBaseIpAddress(const QString &base_ip_address) {
    m_base_ip_address = base_ip_address;
    m_base_ip_address_isSet = true;
}

bool OAICidrIpAddress::is_base_ip_address_Set() const{
    return m_base_ip_address_isSet;
}

bool OAICidrIpAddress::is_base_ip_address_Valid() const{
    return m_base_ip_address_isValid;
}

qint32 OAICidrIpAddress::getPrefixLength() const {
    return m_prefix_length;
}
void OAICidrIpAddress::setPrefixLength(const qint32 &prefix_length) {
    m_prefix_length = prefix_length;
    m_prefix_length_isSet = true;
}

bool OAICidrIpAddress::is_prefix_length_Set() const{
    return m_prefix_length_isSet;
}

bool OAICidrIpAddress::is_prefix_length_Valid() const{
    return m_prefix_length_isValid;
}

bool OAICidrIpAddress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_base_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prefix_length_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICidrIpAddress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
