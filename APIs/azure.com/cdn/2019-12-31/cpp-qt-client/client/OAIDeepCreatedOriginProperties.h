/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeepCreatedOriginProperties.h
 *
 * Properties of the origin created on the CDN endpoint.
 */

#ifndef OAIDeepCreatedOriginProperties_H
#define OAIDeepCreatedOriginProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeepCreatedOriginProperties : public OAIObject {
public:
    OAIDeepCreatedOriginProperties();
    OAIDeepCreatedOriginProperties(QString json);
    ~OAIDeepCreatedOriginProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getHostName() const;
    void setHostName(const QString &host_name);
    bool is_host_name_Set() const;
    bool is_host_name_Valid() const;

    qint32 getHttpPort() const;
    void setHttpPort(const qint32 &http_port);
    bool is_http_port_Set() const;
    bool is_http_port_Valid() const;

    qint32 getHttpsPort() const;
    void setHttpsPort(const qint32 &https_port);
    bool is_https_port_Set() const;
    bool is_https_port_Valid() const;

    QString getOriginHostHeader() const;
    void setOriginHostHeader(const QString &origin_host_header);
    bool is_origin_host_header_Set() const;
    bool is_origin_host_header_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    qint32 getWeight() const;
    void setWeight(const qint32 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_host_name;
    bool m_host_name_isSet;
    bool m_host_name_isValid;

    qint32 m_http_port;
    bool m_http_port_isSet;
    bool m_http_port_isValid;

    qint32 m_https_port;
    bool m_https_port_isSet;
    bool m_https_port_isValid;

    QString m_origin_host_header;
    bool m_origin_host_header_isSet;
    bool m_origin_host_header_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    qint32 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeepCreatedOriginProperties)

#endif // OAIDeepCreatedOriginProperties_H
