/**
 * CdnManagementClient
 * Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.
 *
 * The version of the OpenAPI document: 2019-12-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOptimizationType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOptimizationType::OAIOptimizationType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOptimizationType::OAIOptimizationType() {
    this->initializeModel();
}

OAIOptimizationType::~OAIOptimizationType() {}

void OAIOptimizationType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOptimizationType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOptimizationType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("GeneralWebDelivery", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOptimizationType::GENERALWEBDELIVERY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GeneralMediaStreaming", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOptimizationType::GENERALMEDIASTREAMING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VideoOnDemandMediaStreaming", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOptimizationType::VIDEOONDEMANDMEDIASTREAMING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LargeFileDownload", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOptimizationType::LARGEFILEDOWNLOAD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DynamicSiteAcceleration", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOptimizationType::DYNAMICSITEACCELERATION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOptimizationType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOptimizationType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOptimizationType::GENERALWEBDELIVERY:
            val = "GeneralWebDelivery";
            break;
        case eOAIOptimizationType::GENERALMEDIASTREAMING:
            val = "GeneralMediaStreaming";
            break;
        case eOAIOptimizationType::VIDEOONDEMANDMEDIASTREAMING:
            val = "VideoOnDemandMediaStreaming";
            break;
        case eOAIOptimizationType::LARGEFILEDOWNLOAD:
            val = "LargeFileDownload";
            break;
        case eOAIOptimizationType::DYNAMICSITEACCELERATION:
            val = "DynamicSiteAcceleration";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOptimizationType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOptimizationType::eOAIOptimizationType OAIOptimizationType::getValue() const {
    return m_value;
}

void OAIOptimizationType::setValue(const OAIOptimizationType::eOAIOptimizationType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOptimizationType::isSet() const {
    
    return m_value_isSet;
}

bool OAIOptimizationType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
