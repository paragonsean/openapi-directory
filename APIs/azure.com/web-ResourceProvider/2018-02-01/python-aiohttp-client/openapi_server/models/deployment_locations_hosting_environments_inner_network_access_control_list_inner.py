# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, description: str=None, order: int=None, remote_subnet: str=None):
        """DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner - a model defined in OpenAPI

        :param action: The action of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        :param description: The description of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        :param order: The order of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        :param remote_subnet: The remote_subnet of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        """
        self.openapi_types = {
            'action': str,
            'description': str,
            'order': int,
            'remote_subnet': str
        }

        self.attribute_map = {
            'action': 'action',
            'description': 'description',
            'order': 'order',
            'remote_subnet': 'remoteSubnet'
        }

        self._action = action
        self._description = description
        self._order = order
        self._remote_subnet = remote_subnet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentLocations_hostingEnvironments_inner_networkAccessControlList_inner of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.

        Action object.

        :return: The action of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.

        Action object.

        :param action: The action of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        :type action: str
        """
        allowed_values = ["Permit", "Deny"]  # noqa: E501
        if action not in allowed_values:
            raise ValueError(
                "Invalid value for `action` ({0}), must be one of {1}"
                .format(action, allowed_values)
            )

        self._action = action

    @property
    def description(self):
        """Gets the description of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.

        Description of network access control entry.

        :return: The description of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.

        Description of network access control entry.

        :param description: The description of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        :type description: str
        """

        self._description = description

    @property
    def order(self):
        """Gets the order of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.

        Order of precedence.

        :return: The order of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        :rtype: int
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.

        Order of precedence.

        :param order: The order of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        :type order: int
        """

        self._order = order

    @property
    def remote_subnet(self):
        """Gets the remote_subnet of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.

        Remote subnet.

        :return: The remote_subnet of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        :rtype: str
        """
        return self._remote_subnet

    @remote_subnet.setter
    def remote_subnet(self, remote_subnet):
        """Sets the remote_subnet of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.

        Remote subnet.

        :param remote_subnet: The remote_subnet of this DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner.
        :type remote_subnet: str
        """

        self._remote_subnet = remote_subnet
