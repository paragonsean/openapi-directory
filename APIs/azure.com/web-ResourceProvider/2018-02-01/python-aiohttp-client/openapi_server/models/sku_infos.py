# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.global_csm_sku_description import GlobalCsmSkuDescription
from openapi_server import util


class SkuInfos(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_type: str=None, skus: List[GlobalCsmSkuDescription]=None):
        """SkuInfos - a model defined in OpenAPI

        :param resource_type: The resource_type of this SkuInfos.
        :param skus: The skus of this SkuInfos.
        """
        self.openapi_types = {
            'resource_type': str,
            'skus': List[GlobalCsmSkuDescription]
        }

        self.attribute_map = {
            'resource_type': 'resourceType',
            'skus': 'skus'
        }

        self._resource_type = resource_type
        self._skus = skus

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SkuInfos':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SkuInfos of this SkuInfos.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_type(self):
        """Gets the resource_type of this SkuInfos.

        Resource type that this SKU applies to.

        :return: The resource_type of this SkuInfos.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this SkuInfos.

        Resource type that this SKU applies to.

        :param resource_type: The resource_type of this SkuInfos.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def skus(self):
        """Gets the skus of this SkuInfos.

        List of SKUs the subscription is able to use.

        :return: The skus of this SkuInfos.
        :rtype: List[GlobalCsmSkuDescription]
        """
        return self._skus

    @skus.setter
    def skus(self, skus):
        """Sets the skus of this SkuInfos.

        List of SKUs the subscription is able to use.

        :param skus: The skus of this SkuInfos.
        :type skus: List[GlobalCsmSkuDescription]
        """

        self._skus = skus
