# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ValidateContainerSettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_url: str=None, password: str=None, platform: str=None, repository: str=None, tag: str=None, username: str=None):
        """ValidateContainerSettingsRequest - a model defined in OpenAPI

        :param base_url: The base_url of this ValidateContainerSettingsRequest.
        :param password: The password of this ValidateContainerSettingsRequest.
        :param platform: The platform of this ValidateContainerSettingsRequest.
        :param repository: The repository of this ValidateContainerSettingsRequest.
        :param tag: The tag of this ValidateContainerSettingsRequest.
        :param username: The username of this ValidateContainerSettingsRequest.
        """
        self.openapi_types = {
            'base_url': str,
            'password': str,
            'platform': str,
            'repository': str,
            'tag': str,
            'username': str
        }

        self.attribute_map = {
            'base_url': 'baseUrl',
            'password': 'password',
            'platform': 'platform',
            'repository': 'repository',
            'tag': 'tag',
            'username': 'username'
        }

        self._base_url = base_url
        self._password = password
        self._platform = platform
        self._repository = repository
        self._tag = tag
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ValidateContainerSettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ValidateContainerSettingsRequest of this ValidateContainerSettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_url(self):
        """Gets the base_url of this ValidateContainerSettingsRequest.

        Base URL of the container registry

        :return: The base_url of this ValidateContainerSettingsRequest.
        :rtype: str
        """
        return self._base_url

    @base_url.setter
    def base_url(self, base_url):
        """Sets the base_url of this ValidateContainerSettingsRequest.

        Base URL of the container registry

        :param base_url: The base_url of this ValidateContainerSettingsRequest.
        :type base_url: str
        """

        self._base_url = base_url

    @property
    def password(self):
        """Gets the password of this ValidateContainerSettingsRequest.

        Password for to access the container registry

        :return: The password of this ValidateContainerSettingsRequest.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this ValidateContainerSettingsRequest.

        Password for to access the container registry

        :param password: The password of this ValidateContainerSettingsRequest.
        :type password: str
        """

        self._password = password

    @property
    def platform(self):
        """Gets the platform of this ValidateContainerSettingsRequest.

        Platform (windows or linux)

        :return: The platform of this ValidateContainerSettingsRequest.
        :rtype: str
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this ValidateContainerSettingsRequest.

        Platform (windows or linux)

        :param platform: The platform of this ValidateContainerSettingsRequest.
        :type platform: str
        """

        self._platform = platform

    @property
    def repository(self):
        """Gets the repository of this ValidateContainerSettingsRequest.

        Repository name (image name)

        :return: The repository of this ValidateContainerSettingsRequest.
        :rtype: str
        """
        return self._repository

    @repository.setter
    def repository(self, repository):
        """Sets the repository of this ValidateContainerSettingsRequest.

        Repository name (image name)

        :param repository: The repository of this ValidateContainerSettingsRequest.
        :type repository: str
        """

        self._repository = repository

    @property
    def tag(self):
        """Gets the tag of this ValidateContainerSettingsRequest.

        Image tag

        :return: The tag of this ValidateContainerSettingsRequest.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this ValidateContainerSettingsRequest.

        Image tag

        :param tag: The tag of this ValidateContainerSettingsRequest.
        :type tag: str
        """

        self._tag = tag

    @property
    def username(self):
        """Gets the username of this ValidateContainerSettingsRequest.

        Username for to access the container registry

        :return: The username of this ValidateContainerSettingsRequest.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this ValidateContainerSettingsRequest.

        Username for to access the container registry

        :param username: The username of this ValidateContainerSettingsRequest.
        :type username: str
        """

        self._username = username
