/*
 *  API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DeploymentLocationsHostingEnvironmentsInnerClusterSettingsInner;
import org.openapitools.client.model.DeploymentLocationsHostingEnvironmentsInnerEnvironmentCapacitiesInner;
import org.openapitools.client.model.DeploymentLocationsHostingEnvironmentsInnerNetworkAccessControlListInner;
import org.openapitools.client.model.DeploymentLocationsHostingEnvironmentsInnerVipMappingsInner;
import org.openapitools.client.model.DeploymentLocationsHostingEnvironmentsInnerVirtualNetwork;
import org.openapitools.client.model.DeploymentLocationsHostingEnvironmentsInnerWorkerPoolsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DeploymentLocationsHostingEnvironmentsInner
 */
public class DeploymentLocationsHostingEnvironmentsInnerTest {
    private final DeploymentLocationsHostingEnvironmentsInner model = new DeploymentLocationsHostingEnvironmentsInner();

    /**
     * Model tests for DeploymentLocationsHostingEnvironmentsInner
     */
    @Test
    public void testDeploymentLocationsHostingEnvironmentsInner() {
        // TODO: test DeploymentLocationsHostingEnvironmentsInner
    }

    /**
     * Test the property 'allowedMultiSizes'
     */
    @Test
    public void allowedMultiSizesTest() {
        // TODO: test allowedMultiSizes
    }

    /**
     * Test the property 'allowedWorkerSizes'
     */
    @Test
    public void allowedWorkerSizesTest() {
        // TODO: test allowedWorkerSizes
    }

    /**
     * Test the property 'apiManagementAccountId'
     */
    @Test
    public void apiManagementAccountIdTest() {
        // TODO: test apiManagementAccountId
    }

    /**
     * Test the property 'clusterSettings'
     */
    @Test
    public void clusterSettingsTest() {
        // TODO: test clusterSettings
    }

    /**
     * Test the property 'databaseEdition'
     */
    @Test
    public void databaseEditionTest() {
        // TODO: test databaseEdition
    }

    /**
     * Test the property 'databaseServiceObjective'
     */
    @Test
    public void databaseServiceObjectiveTest() {
        // TODO: test databaseServiceObjective
    }

    /**
     * Test the property 'defaultFrontEndScaleFactor'
     */
    @Test
    public void defaultFrontEndScaleFactorTest() {
        // TODO: test defaultFrontEndScaleFactor
    }

    /**
     * Test the property 'dnsSuffix'
     */
    @Test
    public void dnsSuffixTest() {
        // TODO: test dnsSuffix
    }

    /**
     * Test the property 'dynamicCacheEnabled'
     */
    @Test
    public void dynamicCacheEnabledTest() {
        // TODO: test dynamicCacheEnabled
    }

    /**
     * Test the property 'environmentCapacities'
     */
    @Test
    public void environmentCapacitiesTest() {
        // TODO: test environmentCapacities
    }

    /**
     * Test the property 'environmentIsHealthy'
     */
    @Test
    public void environmentIsHealthyTest() {
        // TODO: test environmentIsHealthy
    }

    /**
     * Test the property 'environmentStatus'
     */
    @Test
    public void environmentStatusTest() {
        // TODO: test environmentStatus
    }

    /**
     * Test the property 'frontEndScaleFactor'
     */
    @Test
    public void frontEndScaleFactorTest() {
        // TODO: test frontEndScaleFactor
    }

    /**
     * Test the property 'hasLinuxWorkers'
     */
    @Test
    public void hasLinuxWorkersTest() {
        // TODO: test hasLinuxWorkers
    }

    /**
     * Test the property 'internalLoadBalancingMode'
     */
    @Test
    public void internalLoadBalancingModeTest() {
        // TODO: test internalLoadBalancingMode
    }

    /**
     * Test the property 'ipsslAddressCount'
     */
    @Test
    public void ipsslAddressCountTest() {
        // TODO: test ipsslAddressCount
    }

    /**
     * Test the property 'lastAction'
     */
    @Test
    public void lastActionTest() {
        // TODO: test lastAction
    }

    /**
     * Test the property 'lastActionResult'
     */
    @Test
    public void lastActionResultTest() {
        // TODO: test lastActionResult
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'maximumNumberOfMachines'
     */
    @Test
    public void maximumNumberOfMachinesTest() {
        // TODO: test maximumNumberOfMachines
    }

    /**
     * Test the property 'multiRoleCount'
     */
    @Test
    public void multiRoleCountTest() {
        // TODO: test multiRoleCount
    }

    /**
     * Test the property 'multiSize'
     */
    @Test
    public void multiSizeTest() {
        // TODO: test multiSize
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'networkAccessControlList'
     */
    @Test
    public void networkAccessControlListTest() {
        // TODO: test networkAccessControlList
    }

    /**
     * Test the property 'provisioningState'
     */
    @Test
    public void provisioningStateTest() {
        // TODO: test provisioningState
    }

    /**
     * Test the property 'resourceGroup'
     */
    @Test
    public void resourceGroupTest() {
        // TODO: test resourceGroup
    }

    /**
     * Test the property 'sslCertKeyVaultId'
     */
    @Test
    public void sslCertKeyVaultIdTest() {
        // TODO: test sslCertKeyVaultId
    }

    /**
     * Test the property 'sslCertKeyVaultSecretName'
     */
    @Test
    public void sslCertKeyVaultSecretNameTest() {
        // TODO: test sslCertKeyVaultSecretName
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'subscriptionId'
     */
    @Test
    public void subscriptionIdTest() {
        // TODO: test subscriptionId
    }

    /**
     * Test the property 'suspended'
     */
    @Test
    public void suspendedTest() {
        // TODO: test suspended
    }

    /**
     * Test the property 'upgradeDomains'
     */
    @Test
    public void upgradeDomainsTest() {
        // TODO: test upgradeDomains
    }

    /**
     * Test the property 'userWhitelistedIpRanges'
     */
    @Test
    public void userWhitelistedIpRangesTest() {
        // TODO: test userWhitelistedIpRanges
    }

    /**
     * Test the property 'vipMappings'
     */
    @Test
    public void vipMappingsTest() {
        // TODO: test vipMappings
    }

    /**
     * Test the property 'virtualNetwork'
     */
    @Test
    public void virtualNetworkTest() {
        // TODO: test virtualNetwork
    }

    /**
     * Test the property 'vnetName'
     */
    @Test
    public void vnetNameTest() {
        // TODO: test vnetName
    }

    /**
     * Test the property 'vnetResourceGroupName'
     */
    @Test
    public void vnetResourceGroupNameTest() {
        // TODO: test vnetResourceGroupName
    }

    /**
     * Test the property 'vnetSubnetName'
     */
    @Test
    public void vnetSubnetNameTest() {
        // TODO: test vnetSubnetName
    }

    /**
     * Test the property 'workerPools'
     */
    @Test
    public void workerPoolsTest() {
        // TODO: test workerPools
    }

}
