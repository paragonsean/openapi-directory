/**
 *  API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ValidateContainerSettingsRequest model module.
 * @module model/ValidateContainerSettingsRequest
 * @version 2018-02-01
 */
class ValidateContainerSettingsRequest {
    /**
     * Constructs a new <code>ValidateContainerSettingsRequest</code>.
     * Container settings validation request context
     * @alias module:model/ValidateContainerSettingsRequest
     */
    constructor() { 
        
        ValidateContainerSettingsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ValidateContainerSettingsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidateContainerSettingsRequest} obj Optional instance to populate.
     * @return {module:model/ValidateContainerSettingsRequest} The populated <code>ValidateContainerSettingsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidateContainerSettingsRequest();

            if (data.hasOwnProperty('baseUrl')) {
                obj['baseUrl'] = ApiClient.convertToType(data['baseUrl'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'String');
            }
            if (data.hasOwnProperty('repository')) {
                obj['repository'] = ApiClient.convertToType(data['repository'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidateContainerSettingsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidateContainerSettingsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['baseUrl'] && !(typeof data['baseUrl'] === 'string' || data['baseUrl'] instanceof String)) {
            throw new Error("Expected the field `baseUrl` to be a primitive type in the JSON string but got " + data['baseUrl']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['platform'] && !(typeof data['platform'] === 'string' || data['platform'] instanceof String)) {
            throw new Error("Expected the field `platform` to be a primitive type in the JSON string but got " + data['platform']);
        }
        // ensure the json data is a string
        if (data['repository'] && !(typeof data['repository'] === 'string' || data['repository'] instanceof String)) {
            throw new Error("Expected the field `repository` to be a primitive type in the JSON string but got " + data['repository']);
        }
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * Base URL of the container registry
 * @member {String} baseUrl
 */
ValidateContainerSettingsRequest.prototype['baseUrl'] = undefined;

/**
 * Password for to access the container registry
 * @member {String} password
 */
ValidateContainerSettingsRequest.prototype['password'] = undefined;

/**
 * Platform (windows or linux)
 * @member {String} platform
 */
ValidateContainerSettingsRequest.prototype['platform'] = undefined;

/**
 * Repository name (image name)
 * @member {String} repository
 */
ValidateContainerSettingsRequest.prototype['repository'] = undefined;

/**
 * Image tag
 * @member {String} tag
 */
ValidateContainerSettingsRequest.prototype['tag'] = undefined;

/**
 * Username for to access the container registry
 * @member {String} username
 */
ValidateContainerSettingsRequest.prototype['username'] = undefined;






export default ValidateContainerSettingsRequest;

