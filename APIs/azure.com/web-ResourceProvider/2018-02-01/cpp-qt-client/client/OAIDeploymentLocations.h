/**
 *  API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeploymentLocations.h
 *
 * List of available locations (regions or App Service Environments) for deployment of App Service resources.
 */

#ifndef OAIDeploymentLocations_H
#define OAIDeploymentLocations_H

#include <QJsonObject>

#include "OAIDeploymentLocations_hostingEnvironments_inner.h"
#include "OAIGeoRegion.h"
#include "OAIHostingEnvironmentDeploymentInfo.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHostingEnvironmentDeploymentInfo;
class OAIDeploymentLocations_hostingEnvironments_inner;
class OAIGeoRegion;

class OAIDeploymentLocations : public OAIObject {
public:
    OAIDeploymentLocations();
    OAIDeploymentLocations(QString json);
    ~OAIDeploymentLocations() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIHostingEnvironmentDeploymentInfo> getHostingEnvironmentDeploymentInfos() const;
    void setHostingEnvironmentDeploymentInfos(const QList<OAIHostingEnvironmentDeploymentInfo> &hosting_environment_deployment_infos);
    bool is_hosting_environment_deployment_infos_Set() const;
    bool is_hosting_environment_deployment_infos_Valid() const;

    QList<OAIDeploymentLocations_hostingEnvironments_inner> getHostingEnvironments() const;
    void setHostingEnvironments(const QList<OAIDeploymentLocations_hostingEnvironments_inner> &hosting_environments);
    bool is_hosting_environments_Set() const;
    bool is_hosting_environments_Valid() const;

    QList<OAIGeoRegion> getLocations() const;
    void setLocations(const QList<OAIGeoRegion> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIHostingEnvironmentDeploymentInfo> m_hosting_environment_deployment_infos;
    bool m_hosting_environment_deployment_infos_isSet;
    bool m_hosting_environment_deployment_infos_isValid;

    QList<OAIDeploymentLocations_hostingEnvironments_inner> m_hosting_environments;
    bool m_hosting_environments_isSet;
    bool m_hosting_environments_isValid;

    QList<OAIGeoRegion> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeploymentLocations)

#endif // OAIDeploymentLocations_H
