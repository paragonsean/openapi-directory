/**
 *  API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiClient);
  }
}(this, function(expect, ApiClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiClient.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('billingMetersList', function() {
      it('should call billingMetersList successfully', function(done) {
        //uncomment below and update the code to test billingMetersList
        //instance.billingMetersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkNameAvailability', function() {
      it('should call checkNameAvailability successfully', function(done) {
        //uncomment below and update the code to test checkNameAvailability
        //instance.checkNameAvailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPublishingUser', function() {
      it('should call getPublishingUser successfully', function(done) {
        //uncomment below and update the code to test getPublishingUser
        //instance.getPublishingUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSourceControl', function() {
      it('should call getSourceControl successfully', function(done) {
        //uncomment below and update the code to test getSourceControl
        //instance.getSourceControl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSubscriptionDeploymentLocations', function() {
      it('should call getSubscriptionDeploymentLocations successfully', function(done) {
        //uncomment below and update the code to test getSubscriptionDeploymentLocations
        //instance.getSubscriptionDeploymentLocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listGeoRegions', function() {
      it('should call listGeoRegions successfully', function(done) {
        //uncomment below and update the code to test listGeoRegions
        //instance.listGeoRegions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPremierAddOnOffers', function() {
      it('should call listPremierAddOnOffers successfully', function(done) {
        //uncomment below and update the code to test listPremierAddOnOffers
        //instance.listPremierAddOnOffers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteIdentifiersAssignedToHostName', function() {
      it('should call listSiteIdentifiersAssignedToHostName successfully', function(done) {
        //uncomment below and update the code to test listSiteIdentifiersAssignedToHostName
        //instance.listSiteIdentifiersAssignedToHostName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSkus', function() {
      it('should call listSkus successfully', function(done) {
        //uncomment below and update the code to test listSkus
        //instance.listSkus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSourceControls', function() {
      it('should call listSourceControls successfully', function(done) {
        //uncomment below and update the code to test listSourceControls
        //instance.listSourceControls(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('move', function() {
      it('should call move successfully', function(done) {
        //uncomment below and update the code to test move
        //instance.move(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePublishingUser', function() {
      it('should call updatePublishingUser successfully', function(done) {
        //uncomment below and update the code to test updatePublishingUser
        //instance.updatePublishingUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSourceControl', function() {
      it('should call updateSourceControl successfully', function(done) {
        //uncomment below and update the code to test updateSourceControl
        //instance.updateSourceControl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('validate', function() {
      it('should call validate successfully', function(done) {
        //uncomment below and update the code to test validate
        //instance.validate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('validateMove', function() {
      it('should call validateMove successfully', function(done) {
        //uncomment below and update the code to test validateMove
        //instance.validateMove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('verifyHostingEnvironmentVnet', function() {
      it('should call verifyHostingEnvironmentVnet successfully', function(done) {
        //uncomment below and update the code to test verifyHostingEnvironmentVnet
        //instance.verifyHostingEnvironmentVnet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
