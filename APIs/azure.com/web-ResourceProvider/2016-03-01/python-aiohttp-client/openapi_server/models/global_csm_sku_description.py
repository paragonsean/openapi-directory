# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.global_csm_sku_description_capabilities_inner import GlobalCsmSkuDescriptionCapabilitiesInner
from openapi_server.models.global_csm_sku_description_capacity import GlobalCsmSkuDescriptionCapacity
from openapi_server import util


class GlobalCsmSkuDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capabilities: List[GlobalCsmSkuDescriptionCapabilitiesInner]=None, capacity: GlobalCsmSkuDescriptionCapacity=None, family: str=None, locations: List[str]=None, name: str=None, size: str=None, tier: str=None):
        """GlobalCsmSkuDescription - a model defined in OpenAPI

        :param capabilities: The capabilities of this GlobalCsmSkuDescription.
        :param capacity: The capacity of this GlobalCsmSkuDescription.
        :param family: The family of this GlobalCsmSkuDescription.
        :param locations: The locations of this GlobalCsmSkuDescription.
        :param name: The name of this GlobalCsmSkuDescription.
        :param size: The size of this GlobalCsmSkuDescription.
        :param tier: The tier of this GlobalCsmSkuDescription.
        """
        self.openapi_types = {
            'capabilities': List[GlobalCsmSkuDescriptionCapabilitiesInner],
            'capacity': GlobalCsmSkuDescriptionCapacity,
            'family': str,
            'locations': List[str],
            'name': str,
            'size': str,
            'tier': str
        }

        self.attribute_map = {
            'capabilities': 'capabilities',
            'capacity': 'capacity',
            'family': 'family',
            'locations': 'locations',
            'name': 'name',
            'size': 'size',
            'tier': 'tier'
        }

        self._capabilities = capabilities
        self._capacity = capacity
        self._family = family
        self._locations = locations
        self._name = name
        self._size = size
        self._tier = tier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlobalCsmSkuDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlobalCsmSkuDescription of this GlobalCsmSkuDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capabilities(self):
        """Gets the capabilities of this GlobalCsmSkuDescription.

        Capabilities of the SKU, e.g., is traffic manager enabled?

        :return: The capabilities of this GlobalCsmSkuDescription.
        :rtype: List[GlobalCsmSkuDescriptionCapabilitiesInner]
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this GlobalCsmSkuDescription.

        Capabilities of the SKU, e.g., is traffic manager enabled?

        :param capabilities: The capabilities of this GlobalCsmSkuDescription.
        :type capabilities: List[GlobalCsmSkuDescriptionCapabilitiesInner]
        """

        self._capabilities = capabilities

    @property
    def capacity(self):
        """Gets the capacity of this GlobalCsmSkuDescription.


        :return: The capacity of this GlobalCsmSkuDescription.
        :rtype: GlobalCsmSkuDescriptionCapacity
        """
        return self._capacity

    @capacity.setter
    def capacity(self, capacity):
        """Sets the capacity of this GlobalCsmSkuDescription.


        :param capacity: The capacity of this GlobalCsmSkuDescription.
        :type capacity: GlobalCsmSkuDescriptionCapacity
        """

        self._capacity = capacity

    @property
    def family(self):
        """Gets the family of this GlobalCsmSkuDescription.

        Family code of the resource SKU.

        :return: The family of this GlobalCsmSkuDescription.
        :rtype: str
        """
        return self._family

    @family.setter
    def family(self, family):
        """Sets the family of this GlobalCsmSkuDescription.

        Family code of the resource SKU.

        :param family: The family of this GlobalCsmSkuDescription.
        :type family: str
        """

        self._family = family

    @property
    def locations(self):
        """Gets the locations of this GlobalCsmSkuDescription.

        Locations of the SKU.

        :return: The locations of this GlobalCsmSkuDescription.
        :rtype: List[str]
        """
        return self._locations

    @locations.setter
    def locations(self, locations):
        """Sets the locations of this GlobalCsmSkuDescription.

        Locations of the SKU.

        :param locations: The locations of this GlobalCsmSkuDescription.
        :type locations: List[str]
        """

        self._locations = locations

    @property
    def name(self):
        """Gets the name of this GlobalCsmSkuDescription.

        Name of the resource SKU.

        :return: The name of this GlobalCsmSkuDescription.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GlobalCsmSkuDescription.

        Name of the resource SKU.

        :param name: The name of this GlobalCsmSkuDescription.
        :type name: str
        """

        self._name = name

    @property
    def size(self):
        """Gets the size of this GlobalCsmSkuDescription.

        Size specifier of the resource SKU.

        :return: The size of this GlobalCsmSkuDescription.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this GlobalCsmSkuDescription.

        Size specifier of the resource SKU.

        :param size: The size of this GlobalCsmSkuDescription.
        :type size: str
        """

        self._size = size

    @property
    def tier(self):
        """Gets the tier of this GlobalCsmSkuDescription.

        Service Tier of the resource SKU.

        :return: The tier of this GlobalCsmSkuDescription.
        :rtype: str
        """
        return self._tier

    @tier.setter
    def tier(self, tier):
        """Sets the tier of this GlobalCsmSkuDescription.

        Service Tier of the resource SKU.

        :param tier: The tier of this GlobalCsmSkuDescription.
        :type tier: str
        """

        self._tier = tier
