/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServerDnsAliasProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServerDnsAliasProperties::OAIServerDnsAliasProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServerDnsAliasProperties::OAIServerDnsAliasProperties() {
    this->initializeModel();
}

OAIServerDnsAliasProperties::~OAIServerDnsAliasProperties() {}

void OAIServerDnsAliasProperties::initializeModel() {

    m_azure_dns_record_isSet = false;
    m_azure_dns_record_isValid = false;
}

void OAIServerDnsAliasProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServerDnsAliasProperties::fromJsonObject(QJsonObject json) {

    m_azure_dns_record_isValid = ::OpenAPI::fromJsonValue(m_azure_dns_record, json[QString("azureDnsRecord")]);
    m_azure_dns_record_isSet = !json[QString("azureDnsRecord")].isNull() && m_azure_dns_record_isValid;
}

QString OAIServerDnsAliasProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServerDnsAliasProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_azure_dns_record_isSet) {
        obj.insert(QString("azureDnsRecord"), ::OpenAPI::toJsonValue(m_azure_dns_record));
    }
    return obj;
}

QString OAIServerDnsAliasProperties::getAzureDnsRecord() const {
    return m_azure_dns_record;
}
void OAIServerDnsAliasProperties::setAzureDnsRecord(const QString &azure_dns_record) {
    m_azure_dns_record = azure_dns_record;
    m_azure_dns_record_isSet = true;
}

bool OAIServerDnsAliasProperties::is_azure_dns_record_Set() const{
    return m_azure_dns_record_isSet;
}

bool OAIServerDnsAliasProperties::is_azure_dns_record_Valid() const{
    return m_azure_dns_record_isValid;
}

bool OAIServerDnsAliasProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_azure_dns_record_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServerDnsAliasProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
