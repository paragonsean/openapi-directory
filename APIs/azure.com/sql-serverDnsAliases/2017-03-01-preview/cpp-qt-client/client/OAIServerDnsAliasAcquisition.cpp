/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServerDnsAliasAcquisition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServerDnsAliasAcquisition::OAIServerDnsAliasAcquisition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServerDnsAliasAcquisition::OAIServerDnsAliasAcquisition() {
    this->initializeModel();
}

OAIServerDnsAliasAcquisition::~OAIServerDnsAliasAcquisition() {}

void OAIServerDnsAliasAcquisition::initializeModel() {

    m_old_server_dns_alias_id_isSet = false;
    m_old_server_dns_alias_id_isValid = false;
}

void OAIServerDnsAliasAcquisition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServerDnsAliasAcquisition::fromJsonObject(QJsonObject json) {

    m_old_server_dns_alias_id_isValid = ::OpenAPI::fromJsonValue(m_old_server_dns_alias_id, json[QString("oldServerDnsAliasId")]);
    m_old_server_dns_alias_id_isSet = !json[QString("oldServerDnsAliasId")].isNull() && m_old_server_dns_alias_id_isValid;
}

QString OAIServerDnsAliasAcquisition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServerDnsAliasAcquisition::asJsonObject() const {
    QJsonObject obj;
    if (m_old_server_dns_alias_id_isSet) {
        obj.insert(QString("oldServerDnsAliasId"), ::OpenAPI::toJsonValue(m_old_server_dns_alias_id));
    }
    return obj;
}

QString OAIServerDnsAliasAcquisition::getOldServerDnsAliasId() const {
    return m_old_server_dns_alias_id;
}
void OAIServerDnsAliasAcquisition::setOldServerDnsAliasId(const QString &old_server_dns_alias_id) {
    m_old_server_dns_alias_id = old_server_dns_alias_id;
    m_old_server_dns_alias_id_isSet = true;
}

bool OAIServerDnsAliasAcquisition::is_old_server_dns_alias_id_Set() const{
    return m_old_server_dns_alias_id_isSet;
}

bool OAIServerDnsAliasAcquisition::is_old_server_dns_alias_id_Valid() const{
    return m_old_server_dns_alias_id_isValid;
}

bool OAIServerDnsAliasAcquisition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_old_server_dns_alias_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServerDnsAliasAcquisition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
