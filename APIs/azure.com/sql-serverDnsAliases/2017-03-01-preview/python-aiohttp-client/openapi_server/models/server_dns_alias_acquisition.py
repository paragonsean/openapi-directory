# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServerDnsAliasAcquisition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, old_server_dns_alias_id: str=None):
        """ServerDnsAliasAcquisition - a model defined in OpenAPI

        :param old_server_dns_alias_id: The old_server_dns_alias_id of this ServerDnsAliasAcquisition.
        """
        self.openapi_types = {
            'old_server_dns_alias_id': str
        }

        self.attribute_map = {
            'old_server_dns_alias_id': 'oldServerDnsAliasId'
        }

        self._old_server_dns_alias_id = old_server_dns_alias_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerDnsAliasAcquisition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerDnsAliasAcquisition of this ServerDnsAliasAcquisition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def old_server_dns_alias_id(self):
        """Gets the old_server_dns_alias_id of this ServerDnsAliasAcquisition.

        The id of the server alias that will be acquired to point to this server instead.

        :return: The old_server_dns_alias_id of this ServerDnsAliasAcquisition.
        :rtype: str
        """
        return self._old_server_dns_alias_id

    @old_server_dns_alias_id.setter
    def old_server_dns_alias_id(self, old_server_dns_alias_id):
        """Sets the old_server_dns_alias_id of this ServerDnsAliasAcquisition.

        The id of the server alias that will be acquired to point to this server instead.

        :param old_server_dns_alias_id: The old_server_dns_alias_id of this ServerDnsAliasAcquisition.
        :type old_server_dns_alias_id: str
        """

        self._old_server_dns_alias_id = old_server_dns_alias_id
