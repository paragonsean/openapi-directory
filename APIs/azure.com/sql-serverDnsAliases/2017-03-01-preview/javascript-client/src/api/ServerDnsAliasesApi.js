/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ServerDnsAlias from '../model/ServerDnsAlias';
import ServerDnsAliasAcquisition from '../model/ServerDnsAliasAcquisition';
import ServerDnsAliasListResult from '../model/ServerDnsAliasListResult';

/**
* ServerDnsAliases service.
* @module api/ServerDnsAliasesApi
* @version 2017-03-01-preview
*/
export default class ServerDnsAliasesApi {

    /**
    * Constructs a new ServerDnsAliasesApi. 
    * @alias module:api/ServerDnsAliasesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the serverDnsAliasesAcquire operation.
     * @callback module:api/ServerDnsAliasesApi~serverDnsAliasesAcquireCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Acquires server DNS alias from another server.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server that the alias is pointing to.
     * @param {String} dnsAliasName The name of the server dns alias.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:model/ServerDnsAliasAcquisition} parameters 
     * @param {module:api/ServerDnsAliasesApi~serverDnsAliasesAcquireCallback} callback The callback function, accepting three arguments: error, data, response
     */
    serverDnsAliasesAcquire(resourceGroupName, serverName, dnsAliasName, subscriptionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serverDnsAliasesAcquire");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling serverDnsAliasesAcquire");
      }
      // verify the required parameter 'dnsAliasName' is set
      if (dnsAliasName === undefined || dnsAliasName === null) {
        throw new Error("Missing the required parameter 'dnsAliasName' when calling serverDnsAliasesAcquire");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serverDnsAliasesAcquire");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serverDnsAliasesAcquire");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling serverDnsAliasesAcquire");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'dnsAliasName': dnsAliasName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}/acquire', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serverDnsAliasesCreateOrUpdate operation.
     * @callback module:api/ServerDnsAliasesApi~serverDnsAliasesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServerDnsAlias} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a server dns alias.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server that the alias is pointing to.
     * @param {String} dnsAliasName The name of the server DNS alias.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/ServerDnsAliasesApi~serverDnsAliasesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServerDnsAlias}
     */
    serverDnsAliasesCreateOrUpdate(resourceGroupName, serverName, dnsAliasName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serverDnsAliasesCreateOrUpdate");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling serverDnsAliasesCreateOrUpdate");
      }
      // verify the required parameter 'dnsAliasName' is set
      if (dnsAliasName === undefined || dnsAliasName === null) {
        throw new Error("Missing the required parameter 'dnsAliasName' when calling serverDnsAliasesCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serverDnsAliasesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serverDnsAliasesCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'dnsAliasName': dnsAliasName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServerDnsAlias;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serverDnsAliasesDelete operation.
     * @callback module:api/ServerDnsAliasesApi~serverDnsAliasesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the server DNS alias with the given name.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server that the alias is pointing to.
     * @param {String} dnsAliasName The name of the server DNS alias.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/ServerDnsAliasesApi~serverDnsAliasesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    serverDnsAliasesDelete(resourceGroupName, serverName, dnsAliasName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serverDnsAliasesDelete");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling serverDnsAliasesDelete");
      }
      // verify the required parameter 'dnsAliasName' is set
      if (dnsAliasName === undefined || dnsAliasName === null) {
        throw new Error("Missing the required parameter 'dnsAliasName' when calling serverDnsAliasesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serverDnsAliasesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serverDnsAliasesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'dnsAliasName': dnsAliasName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serverDnsAliasesGet operation.
     * @callback module:api/ServerDnsAliasesApi~serverDnsAliasesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServerDnsAlias} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a server DNS alias.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server that the alias is pointing to.
     * @param {String} dnsAliasName The name of the server DNS alias.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/ServerDnsAliasesApi~serverDnsAliasesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServerDnsAlias}
     */
    serverDnsAliasesGet(resourceGroupName, serverName, dnsAliasName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serverDnsAliasesGet");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling serverDnsAliasesGet");
      }
      // verify the required parameter 'dnsAliasName' is set
      if (dnsAliasName === undefined || dnsAliasName === null) {
        throw new Error("Missing the required parameter 'dnsAliasName' when calling serverDnsAliasesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serverDnsAliasesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serverDnsAliasesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'dnsAliasName': dnsAliasName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServerDnsAlias;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serverDnsAliasesListByServer operation.
     * @callback module:api/ServerDnsAliasesApi~serverDnsAliasesListByServerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServerDnsAliasListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of server DNS aliases for a server.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server that the alias is pointing to.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/ServerDnsAliasesApi~serverDnsAliasesListByServerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServerDnsAliasListResult}
     */
    serverDnsAliasesListByServer(resourceGroupName, serverName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serverDnsAliasesListByServer");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling serverDnsAliasesListByServer");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serverDnsAliasesListByServer");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serverDnsAliasesListByServer");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServerDnsAliasListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
