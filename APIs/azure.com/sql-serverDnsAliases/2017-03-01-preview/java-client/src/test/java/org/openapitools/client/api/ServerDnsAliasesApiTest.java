/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ServerDnsAlias;
import org.openapitools.client.model.ServerDnsAliasAcquisition;
import org.openapitools.client.model.ServerDnsAliasListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerDnsAliasesApi
 */
@Disabled
public class ServerDnsAliasesApiTest {

    private final ServerDnsAliasesApi api = new ServerDnsAliasesApi();

    /**
     * Acquires server DNS alias from another server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverDnsAliasesAcquireTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String dnsAliasName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ServerDnsAliasAcquisition parameters = null;
        api.serverDnsAliasesAcquire(resourceGroupName, serverName, dnsAliasName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Creates a server dns alias.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverDnsAliasesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String dnsAliasName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ServerDnsAlias response = api.serverDnsAliasesCreateOrUpdate(resourceGroupName, serverName, dnsAliasName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Deletes the server DNS alias with the given name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverDnsAliasesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String dnsAliasName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.serverDnsAliasesDelete(resourceGroupName, serverName, dnsAliasName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a server DNS alias.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverDnsAliasesGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String dnsAliasName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ServerDnsAlias response = api.serverDnsAliasesGet(resourceGroupName, serverName, dnsAliasName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of server DNS aliases for a server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverDnsAliasesListByServerTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ServerDnsAliasListResult response = api.serverDnsAliasesListByServer(resourceGroupName, serverName, subscriptionId, apiVersion);
        // TODO: test validations
    }

}
