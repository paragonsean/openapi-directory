# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assessments: List[str]=None, created_timestamp: datetime=None, machines: List[str]=None, updated_timestamp: datetime=None):
        """GroupProperties - a model defined in OpenAPI

        :param assessments: The assessments of this GroupProperties.
        :param created_timestamp: The created_timestamp of this GroupProperties.
        :param machines: The machines of this GroupProperties.
        :param updated_timestamp: The updated_timestamp of this GroupProperties.
        """
        self.openapi_types = {
            'assessments': List[str],
            'created_timestamp': datetime,
            'machines': List[str],
            'updated_timestamp': datetime
        }

        self.attribute_map = {
            'assessments': 'assessments',
            'created_timestamp': 'createdTimestamp',
            'machines': 'machines',
            'updated_timestamp': 'updatedTimestamp'
        }

        self._assessments = assessments
        self._created_timestamp = created_timestamp
        self._machines = machines
        self._updated_timestamp = updated_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroupProperties of this GroupProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assessments(self):
        """Gets the assessments of this GroupProperties.

        List of References to Assessments created on this group.

        :return: The assessments of this GroupProperties.
        :rtype: List[str]
        """
        return self._assessments

    @assessments.setter
    def assessments(self, assessments):
        """Sets the assessments of this GroupProperties.

        List of References to Assessments created on this group.

        :param assessments: The assessments of this GroupProperties.
        :type assessments: List[str]
        """

        self._assessments = assessments

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this GroupProperties.

        Time when this project was created. Date-Time represented in ISO-8601 format.

        :return: The created_timestamp of this GroupProperties.
        :rtype: datetime
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this GroupProperties.

        Time when this project was created. Date-Time represented in ISO-8601 format.

        :param created_timestamp: The created_timestamp of this GroupProperties.
        :type created_timestamp: datetime
        """

        self._created_timestamp = created_timestamp

    @property
    def machines(self):
        """Gets the machines of this GroupProperties.

        List of machine names that are part of this group.

        :return: The machines of this GroupProperties.
        :rtype: List[str]
        """
        return self._machines

    @machines.setter
    def machines(self, machines):
        """Sets the machines of this GroupProperties.

        List of machine names that are part of this group.

        :param machines: The machines of this GroupProperties.
        :type machines: List[str]
        """
        if machines is None:
            raise ValueError("Invalid value for `machines`, must not be `None`")

        self._machines = machines

    @property
    def updated_timestamp(self):
        """Gets the updated_timestamp of this GroupProperties.

        Time when this project was last updated. Date-Time represented in ISO-8601 format.

        :return: The updated_timestamp of this GroupProperties.
        :rtype: datetime
        """
        return self._updated_timestamp

    @updated_timestamp.setter
    def updated_timestamp(self, updated_timestamp):
        """Sets the updated_timestamp of this GroupProperties.

        Time when this project was last updated. Date-Time represented in ISO-8601 format.

        :param updated_timestamp: The updated_timestamp of this GroupProperties.
        :type updated_timestamp: datetime
        """

        self._updated_timestamp = updated_timestamp
