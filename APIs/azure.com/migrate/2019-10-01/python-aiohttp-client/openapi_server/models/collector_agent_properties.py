# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.collector_body_agent_spn_properties import CollectorBodyAgentSpnProperties
from openapi_server import util


class CollectorAgentProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, last_heartbeat_utc: datetime=None, spn_details: CollectorBodyAgentSpnProperties=None, version: str=None):
        """CollectorAgentProperties - a model defined in OpenAPI

        :param id: The id of this CollectorAgentProperties.
        :param last_heartbeat_utc: The last_heartbeat_utc of this CollectorAgentProperties.
        :param spn_details: The spn_details of this CollectorAgentProperties.
        :param version: The version of this CollectorAgentProperties.
        """
        self.openapi_types = {
            'id': str,
            'last_heartbeat_utc': datetime,
            'spn_details': CollectorBodyAgentSpnProperties,
            'version': str
        }

        self.attribute_map = {
            'id': 'id',
            'last_heartbeat_utc': 'lastHeartbeatUtc',
            'spn_details': 'spnDetails',
            'version': 'version'
        }

        self._id = id
        self._last_heartbeat_utc = last_heartbeat_utc
        self._spn_details = spn_details
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CollectorAgentProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CollectorAgentProperties of this CollectorAgentProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CollectorAgentProperties.


        :return: The id of this CollectorAgentProperties.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CollectorAgentProperties.


        :param id: The id of this CollectorAgentProperties.
        :type id: str
        """

        self._id = id

    @property
    def last_heartbeat_utc(self):
        """Gets the last_heartbeat_utc of this CollectorAgentProperties.


        :return: The last_heartbeat_utc of this CollectorAgentProperties.
        :rtype: datetime
        """
        return self._last_heartbeat_utc

    @last_heartbeat_utc.setter
    def last_heartbeat_utc(self, last_heartbeat_utc):
        """Sets the last_heartbeat_utc of this CollectorAgentProperties.


        :param last_heartbeat_utc: The last_heartbeat_utc of this CollectorAgentProperties.
        :type last_heartbeat_utc: datetime
        """

        self._last_heartbeat_utc = last_heartbeat_utc

    @property
    def spn_details(self):
        """Gets the spn_details of this CollectorAgentProperties.


        :return: The spn_details of this CollectorAgentProperties.
        :rtype: CollectorBodyAgentSpnProperties
        """
        return self._spn_details

    @spn_details.setter
    def spn_details(self, spn_details):
        """Sets the spn_details of this CollectorAgentProperties.


        :param spn_details: The spn_details of this CollectorAgentProperties.
        :type spn_details: CollectorBodyAgentSpnProperties
        """

        self._spn_details = spn_details

    @property
    def version(self):
        """Gets the version of this CollectorAgentProperties.


        :return: The version of this CollectorAgentProperties.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this CollectorAgentProperties.


        :param version: The version of this CollectorAgentProperties.
        :type version: str
        """

        self._version = version
