# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hyper_v_collector import HyperVCollector
from openapi_server import util


class HyperVCollectorList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value: List[HyperVCollector]=None):
        """HyperVCollectorList - a model defined in OpenAPI

        :param value: The value of this HyperVCollectorList.
        """
        self.openapi_types = {
            'value': List[HyperVCollector]
        }

        self.attribute_map = {
            'value': 'value'
        }

        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HyperVCollectorList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HyperVCollectorList of this HyperVCollectorList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self):
        """Gets the value of this HyperVCollectorList.

        List of Hyper-V collectors.

        :return: The value of this HyperVCollectorList.
        :rtype: List[HyperVCollector]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this HyperVCollectorList.

        List of Hyper-V collectors.

        :param value: The value of this HyperVCollectorList.
        :type value: List[HyperVCollector]
        """

        self._value = value
