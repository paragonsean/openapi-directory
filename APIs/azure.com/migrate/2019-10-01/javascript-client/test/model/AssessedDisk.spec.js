/**
 * Azure Migrate V2
 * Assess your workloads for Azure.
 *
 * The version of the OpenAPI document: 2019-10-01
 * Contact: azuremigrate@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureMigrateV2);
  }
}(this, function(expect, AzureMigrateV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureMigrateV2.AssessedDisk();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AssessedDisk', function() {
    it('should create an instance of AssessedDisk', function() {
      // uncomment below and update the code to test AssessedDisk
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be.a(AzureMigrateV2.AssessedDisk);
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property gigabytesForRecommendedDiskSize (base name: "gigabytesForRecommendedDiskSize")', function() {
      // uncomment below and update the code to test the property gigabytesForRecommendedDiskSize
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property gigabytesProvisioned (base name: "gigabytesProvisioned")', function() {
      // uncomment below and update the code to test the property gigabytesProvisioned
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property megabytesPerSecondOfRead (base name: "megabytesPerSecondOfRead")', function() {
      // uncomment below and update the code to test the property megabytesPerSecondOfRead
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property megabytesPerSecondOfWrite (base name: "megabytesPerSecondOfWrite")', function() {
      // uncomment below and update the code to test the property megabytesPerSecondOfWrite
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property monthlyStorageCost (base name: "monthlyStorageCost")', function() {
      // uncomment below and update the code to test the property monthlyStorageCost
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property numberOfReadOperationsPerSecond (base name: "numberOfReadOperationsPerSecond")', function() {
      // uncomment below and update the code to test the property numberOfReadOperationsPerSecond
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property numberOfWriteOperationsPerSecond (base name: "numberOfWriteOperationsPerSecond")', function() {
      // uncomment below and update the code to test the property numberOfWriteOperationsPerSecond
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property recommendedDiskSize (base name: "recommendedDiskSize")', function() {
      // uncomment below and update the code to test the property recommendedDiskSize
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property recommendedDiskType (base name: "recommendedDiskType")', function() {
      // uncomment below and update the code to test the property recommendedDiskType
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property suitability (base name: "suitability")', function() {
      // uncomment below and update the code to test the property suitability
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property suitabilityDetail (base name: "suitabilityDetail")', function() {
      // uncomment below and update the code to test the property suitabilityDetail
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

    it('should have the property suitabilityExplanation (base name: "suitabilityExplanation")', function() {
      // uncomment below and update the code to test the property suitabilityExplanation
      //var instance = new AzureMigrateV2.AssessedDisk();
      //expect(instance).to.be();
    });

  });

}));
