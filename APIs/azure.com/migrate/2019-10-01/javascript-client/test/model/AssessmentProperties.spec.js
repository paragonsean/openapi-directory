/**
 * Azure Migrate V2
 * Assess your workloads for Azure.
 *
 * The version of the OpenAPI document: 2019-10-01
 * Contact: azuremigrate@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureMigrateV2);
  }
}(this, function(expect, AzureMigrateV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureMigrateV2.AssessmentProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AssessmentProperties', function() {
    it('should create an instance of AssessmentProperties', function() {
      // uncomment below and update the code to test AssessmentProperties
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be.a(AzureMigrateV2.AssessmentProperties);
    });

    it('should have the property azureDiskType (base name: "azureDiskType")', function() {
      // uncomment below and update the code to test the property azureDiskType
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property azureHybridUseBenefit (base name: "azureHybridUseBenefit")', function() {
      // uncomment below and update the code to test the property azureHybridUseBenefit
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property azureLocation (base name: "azureLocation")', function() {
      // uncomment below and update the code to test the property azureLocation
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property azureOfferCode (base name: "azureOfferCode")', function() {
      // uncomment below and update the code to test the property azureOfferCode
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property azurePricingTier (base name: "azurePricingTier")', function() {
      // uncomment below and update the code to test the property azurePricingTier
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property azureStorageRedundancy (base name: "azureStorageRedundancy")', function() {
      // uncomment below and update the code to test the property azureStorageRedundancy
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property azureVmFamilies (base name: "azureVmFamilies")', function() {
      // uncomment below and update the code to test the property azureVmFamilies
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property confidenceRatingInPercentage (base name: "confidenceRatingInPercentage")', function() {
      // uncomment below and update the code to test the property confidenceRatingInPercentage
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property createdTimestamp (base name: "createdTimestamp")', function() {
      // uncomment below and update the code to test the property createdTimestamp
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property discountPercentage (base name: "discountPercentage")', function() {
      // uncomment below and update the code to test the property discountPercentage
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property eaSubscriptionId (base name: "eaSubscriptionId")', function() {
      // uncomment below and update the code to test the property eaSubscriptionId
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property monthlyBandwidthCost (base name: "monthlyBandwidthCost")', function() {
      // uncomment below and update the code to test the property monthlyBandwidthCost
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property monthlyComputeCost (base name: "monthlyComputeCost")', function() {
      // uncomment below and update the code to test the property monthlyComputeCost
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property monthlyPremiumStorageCost (base name: "monthlyPremiumStorageCost")', function() {
      // uncomment below and update the code to test the property monthlyPremiumStorageCost
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property monthlyStandardSSDStorageCost (base name: "monthlyStandardSSDStorageCost")', function() {
      // uncomment below and update the code to test the property monthlyStandardSSDStorageCost
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property monthlyStorageCost (base name: "monthlyStorageCost")', function() {
      // uncomment below and update the code to test the property monthlyStorageCost
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property numberOfMachines (base name: "numberOfMachines")', function() {
      // uncomment below and update the code to test the property numberOfMachines
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property percentile (base name: "percentile")', function() {
      // uncomment below and update the code to test the property percentile
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property perfDataEndTime (base name: "perfDataEndTime")', function() {
      // uncomment below and update the code to test the property perfDataEndTime
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property perfDataStartTime (base name: "perfDataStartTime")', function() {
      // uncomment below and update the code to test the property perfDataStartTime
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property pricesTimestamp (base name: "pricesTimestamp")', function() {
      // uncomment below and update the code to test the property pricesTimestamp
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property reservedInstance (base name: "reservedInstance")', function() {
      // uncomment below and update the code to test the property reservedInstance
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property scalingFactor (base name: "scalingFactor")', function() {
      // uncomment below and update the code to test the property scalingFactor
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property sizingCriterion (base name: "sizingCriterion")', function() {
      // uncomment below and update the code to test the property sizingCriterion
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property stage (base name: "stage")', function() {
      // uncomment below and update the code to test the property stage
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property timeRange (base name: "timeRange")', function() {
      // uncomment below and update the code to test the property timeRange
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property updatedTimestamp (base name: "updatedTimestamp")', function() {
      // uncomment below and update the code to test the property updatedTimestamp
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

    it('should have the property vmUptime (base name: "vmUptime")', function() {
      // uncomment below and update the code to test the property vmUptime
      //var instance = new AzureMigrateV2.AssessmentProperties();
      //expect(instance).to.be();
    });

  });

}));
