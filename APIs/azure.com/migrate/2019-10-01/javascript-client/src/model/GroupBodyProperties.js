/**
 * Azure Migrate V2
 * Assess your workloads for Azure.
 *
 * The version of the OpenAPI document: 2019-10-01
 * Contact: azuremigrate@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GroupBodyProperties model module.
 * @module model/GroupBodyProperties
 * @version 2019-10-01
 */
class GroupBodyProperties {
    /**
     * Constructs a new <code>GroupBodyProperties</code>.
     * Body properties of group update.
     * @alias module:model/GroupBodyProperties
     */
    constructor() { 
        
        GroupBodyProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GroupBodyProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupBodyProperties} obj Optional instance to populate.
     * @return {module:model/GroupBodyProperties} The populated <code>GroupBodyProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupBodyProperties();

            if (data.hasOwnProperty('machines')) {
                obj['machines'] = ApiClient.convertToType(data['machines'], ['String']);
            }
            if (data.hasOwnProperty('operationType')) {
                obj['operationType'] = ApiClient.convertToType(data['operationType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GroupBodyProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GroupBodyProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['machines'])) {
            throw new Error("Expected the field `machines` to be an array in the JSON data but got " + data['machines']);
        }
        // ensure the json data is a string
        if (data['operationType'] && !(typeof data['operationType'] === 'string' || data['operationType'] instanceof String)) {
            throw new Error("Expected the field `operationType` to be a primitive type in the JSON string but got " + data['operationType']);
        }

        return true;
    }


}



/**
 * List of machine names that are part of this group.
 * @member {Array.<String>} machines
 */
GroupBodyProperties.prototype['machines'] = undefined;

/**
 * Whether to add or remove the machines.
 * @member {module:model/GroupBodyProperties.OperationTypeEnum} operationType
 */
GroupBodyProperties.prototype['operationType'] = undefined;





/**
 * Allowed values for the <code>operationType</code> property.
 * @enum {String}
 * @readonly
 */
GroupBodyProperties['OperationTypeEnum'] = {

    /**
     * value: "Add"
     * @const
     */
    "Add": "Add",

    /**
     * value: "Remove"
     * @const
     */
    "Remove": "Remove"
};



export default GroupBodyProperties;

