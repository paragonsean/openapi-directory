/**
 * Azure Migrate V2
 * Assess your workloads for Azure.
 *
 * The version of the OpenAPI document: 2019-10-01
 * Contact: azuremigrate@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectProperties model module.
 * @module model/ProjectProperties
 * @version 2019-10-01
 */
class ProjectProperties {
    /**
     * Constructs a new <code>ProjectProperties</code>.
     * Properties of a project.
     * @alias module:model/ProjectProperties
     */
    constructor() { 
        
        ProjectProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectProperties} obj Optional instance to populate.
     * @return {module:model/ProjectProperties} The populated <code>ProjectProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectProperties();

            if (data.hasOwnProperty('assessmentSolutionId')) {
                obj['assessmentSolutionId'] = ApiClient.convertToType(data['assessmentSolutionId'], 'String');
            }
            if (data.hasOwnProperty('createdTimestamp')) {
                obj['createdTimestamp'] = ApiClient.convertToType(data['createdTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('customerWorkspaceId')) {
                obj['customerWorkspaceId'] = ApiClient.convertToType(data['customerWorkspaceId'], 'String');
            }
            if (data.hasOwnProperty('customerWorkspaceLocation')) {
                obj['customerWorkspaceLocation'] = ApiClient.convertToType(data['customerWorkspaceLocation'], 'String');
            }
            if (data.hasOwnProperty('lastAssessmentTimestamp')) {
                obj['lastAssessmentTimestamp'] = ApiClient.convertToType(data['lastAssessmentTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('numberOfAssessments')) {
                obj['numberOfAssessments'] = ApiClient.convertToType(data['numberOfAssessments'], 'Number');
            }
            if (data.hasOwnProperty('numberOfGroups')) {
                obj['numberOfGroups'] = ApiClient.convertToType(data['numberOfGroups'], 'Number');
            }
            if (data.hasOwnProperty('numberOfMachines')) {
                obj['numberOfMachines'] = ApiClient.convertToType(data['numberOfMachines'], 'Number');
            }
            if (data.hasOwnProperty('projectStatus')) {
                obj['projectStatus'] = ApiClient.convertToType(data['projectStatus'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('serviceEndpoint')) {
                obj['serviceEndpoint'] = ApiClient.convertToType(data['serviceEndpoint'], 'String');
            }
            if (data.hasOwnProperty('updatedTimestamp')) {
                obj['updatedTimestamp'] = ApiClient.convertToType(data['updatedTimestamp'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProjectProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProjectProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['assessmentSolutionId'] && !(typeof data['assessmentSolutionId'] === 'string' || data['assessmentSolutionId'] instanceof String)) {
            throw new Error("Expected the field `assessmentSolutionId` to be a primitive type in the JSON string but got " + data['assessmentSolutionId']);
        }
        // ensure the json data is a string
        if (data['customerWorkspaceId'] && !(typeof data['customerWorkspaceId'] === 'string' || data['customerWorkspaceId'] instanceof String)) {
            throw new Error("Expected the field `customerWorkspaceId` to be a primitive type in the JSON string but got " + data['customerWorkspaceId']);
        }
        // ensure the json data is a string
        if (data['customerWorkspaceLocation'] && !(typeof data['customerWorkspaceLocation'] === 'string' || data['customerWorkspaceLocation'] instanceof String)) {
            throw new Error("Expected the field `customerWorkspaceLocation` to be a primitive type in the JSON string but got " + data['customerWorkspaceLocation']);
        }
        // ensure the json data is a string
        if (data['projectStatus'] && !(typeof data['projectStatus'] === 'string' || data['projectStatus'] instanceof String)) {
            throw new Error("Expected the field `projectStatus` to be a primitive type in the JSON string but got " + data['projectStatus']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['serviceEndpoint'] && !(typeof data['serviceEndpoint'] === 'string' || data['serviceEndpoint'] instanceof String)) {
            throw new Error("Expected the field `serviceEndpoint` to be a primitive type in the JSON string but got " + data['serviceEndpoint']);
        }

        return true;
    }


}



/**
 * Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.
 * @member {String} assessmentSolutionId
 */
ProjectProperties.prototype['assessmentSolutionId'] = undefined;

/**
 * Time when this project was created. Date-Time represented in ISO-8601 format.
 * @member {Date} createdTimestamp
 */
ProjectProperties.prototype['createdTimestamp'] = undefined;

/**
 * The ARM id of service map workspace created by customer.
 * @member {String} customerWorkspaceId
 */
ProjectProperties.prototype['customerWorkspaceId'] = undefined;

/**
 * Location of service map workspace created by customer.
 * @member {String} customerWorkspaceLocation
 */
ProjectProperties.prototype['customerWorkspaceLocation'] = undefined;

/**
 * Time when last assessment was created. Date-Time represented in ISO-8601 format. This value will be null until assessment is created.
 * @member {Date} lastAssessmentTimestamp
 */
ProjectProperties.prototype['lastAssessmentTimestamp'] = undefined;

/**
 * Number of assessments created in the project.
 * @member {Number} numberOfAssessments
 */
ProjectProperties.prototype['numberOfAssessments'] = undefined;

/**
 * Number of groups created in the project.
 * @member {Number} numberOfGroups
 */
ProjectProperties.prototype['numberOfGroups'] = undefined;

/**
 * Number of machines in the project.
 * @member {Number} numberOfMachines
 */
ProjectProperties.prototype['numberOfMachines'] = undefined;

/**
 * Assessment project status.
 * @member {module:model/ProjectProperties.ProjectStatusEnum} projectStatus
 */
ProjectProperties.prototype['projectStatus'] = undefined;

/**
 * Provisioning state of the project.
 * @member {module:model/ProjectProperties.ProvisioningStateEnum} provisioningState
 */
ProjectProperties.prototype['provisioningState'] = undefined;

/**
 * Endpoint at which the collector agent can call agent REST API.
 * @member {String} serviceEndpoint
 */
ProjectProperties.prototype['serviceEndpoint'] = undefined;

/**
 * Time when this project was last updated. Date-Time represented in ISO-8601 format.
 * @member {Date} updatedTimestamp
 */
ProjectProperties.prototype['updatedTimestamp'] = undefined;





/**
 * Allowed values for the <code>projectStatus</code> property.
 * @enum {String}
 * @readonly
 */
ProjectProperties['ProjectStatusEnum'] = {

    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",

    /**
     * value: "Inactive"
     * @const
     */
    "Inactive": "Inactive"
};


/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
ProjectProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Accepted"
     * @const
     */
    "Accepted": "Accepted",

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Moving"
     * @const
     */
    "Moving": "Moving",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded"
};



export default ProjectProperties;

