/**
 * Azure Migrate V2
 * Assess your workloads for Azure.
 *
 * The version of the OpenAPI document: 2019-10-01
 * Contact: azuremigrate@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VmFamily from './VmFamily';

/**
 * The AssessmentOptionsProperties model module.
 * @module model/AssessmentOptionsProperties
 * @version 2019-10-01
 */
class AssessmentOptionsProperties {
    /**
     * Constructs a new <code>AssessmentOptionsProperties</code>.
     * Assessment options properties.
     * @alias module:model/AssessmentOptionsProperties
     */
    constructor() { 
        
        AssessmentOptionsProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssessmentOptionsProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssessmentOptionsProperties} obj Optional instance to populate.
     * @return {module:model/AssessmentOptionsProperties} The populated <code>AssessmentOptionsProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssessmentOptionsProperties();

            if (data.hasOwnProperty('reservedInstanceSupportedCurrencies')) {
                obj['reservedInstanceSupportedCurrencies'] = ApiClient.convertToType(data['reservedInstanceSupportedCurrencies'], ['String']);
            }
            if (data.hasOwnProperty('reservedInstanceSupportedLocations')) {
                obj['reservedInstanceSupportedLocations'] = ApiClient.convertToType(data['reservedInstanceSupportedLocations'], ['String']);
            }
            if (data.hasOwnProperty('reservedInstanceSupportedOffers')) {
                obj['reservedInstanceSupportedOffers'] = ApiClient.convertToType(data['reservedInstanceSupportedOffers'], ['String']);
            }
            if (data.hasOwnProperty('reservedInstanceVmFamilies')) {
                obj['reservedInstanceVmFamilies'] = ApiClient.convertToType(data['reservedInstanceVmFamilies'], ['String']);
            }
            if (data.hasOwnProperty('vmFamilies')) {
                obj['vmFamilies'] = ApiClient.convertToType(data['vmFamilies'], [VmFamily]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssessmentOptionsProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssessmentOptionsProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['reservedInstanceSupportedCurrencies'])) {
            throw new Error("Expected the field `reservedInstanceSupportedCurrencies` to be an array in the JSON data but got " + data['reservedInstanceSupportedCurrencies']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reservedInstanceSupportedLocations'])) {
            throw new Error("Expected the field `reservedInstanceSupportedLocations` to be an array in the JSON data but got " + data['reservedInstanceSupportedLocations']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reservedInstanceSupportedOffers'])) {
            throw new Error("Expected the field `reservedInstanceSupportedOffers` to be an array in the JSON data but got " + data['reservedInstanceSupportedOffers']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reservedInstanceVmFamilies'])) {
            throw new Error("Expected the field `reservedInstanceVmFamilies` to be an array in the JSON data but got " + data['reservedInstanceVmFamilies']);
        }
        if (data['vmFamilies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vmFamilies'])) {
                throw new Error("Expected the field `vmFamilies` to be an array in the JSON data but got " + data['vmFamilies']);
            }
            // validate the optional field `vmFamilies` (array)
            for (const item of data['vmFamilies']) {
                VmFamily.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of supported currencies for reserved instances.
 * @member {Array.<String>} reservedInstanceSupportedCurrencies
 */
AssessmentOptionsProperties.prototype['reservedInstanceSupportedCurrencies'] = undefined;

/**
 * List of supported Azure regions for reserved instances.
 * @member {Array.<String>} reservedInstanceSupportedLocations
 */
AssessmentOptionsProperties.prototype['reservedInstanceSupportedLocations'] = undefined;

/**
 * List of supported Azure offer codes for reserved instances.
 * @member {Array.<String>} reservedInstanceSupportedOffers
 */
AssessmentOptionsProperties.prototype['reservedInstanceSupportedOffers'] = undefined;

/**
 * List of supported VM Families.
 * @member {Array.<String>} reservedInstanceVmFamilies
 */
AssessmentOptionsProperties.prototype['reservedInstanceVmFamilies'] = undefined;

/**
 * Dictionary of VM families grouped by vm family name describing the targeted azure locations of VM family and the category of the family.
 * @member {Array.<module:model/VmFamily>} vmFamilies
 */
AssessmentOptionsProperties.prototype['vmFamilies'] = undefined;






export default AssessmentOptionsProperties;

