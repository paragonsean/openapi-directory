/**
 * Azure Migrate V2
 * Assess your workloads for Azure.
 *
 * The version of the OpenAPI document: 2019-10-01
 * Contact: azuremigrate@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVmUptime.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVmUptime::OAIVmUptime(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVmUptime::OAIVmUptime() {
    this->initializeModel();
}

OAIVmUptime::~OAIVmUptime() {}

void OAIVmUptime::initializeModel() {

    m_days_per_month_isSet = false;
    m_days_per_month_isValid = false;

    m_hours_per_day_isSet = false;
    m_hours_per_day_isValid = false;
}

void OAIVmUptime::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVmUptime::fromJsonObject(QJsonObject json) {

    m_days_per_month_isValid = ::OpenAPI::fromJsonValue(m_days_per_month, json[QString("daysPerMonth")]);
    m_days_per_month_isSet = !json[QString("daysPerMonth")].isNull() && m_days_per_month_isValid;

    m_hours_per_day_isValid = ::OpenAPI::fromJsonValue(m_hours_per_day, json[QString("hoursPerDay")]);
    m_hours_per_day_isSet = !json[QString("hoursPerDay")].isNull() && m_hours_per_day_isValid;
}

QString OAIVmUptime::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVmUptime::asJsonObject() const {
    QJsonObject obj;
    if (m_days_per_month_isSet) {
        obj.insert(QString("daysPerMonth"), ::OpenAPI::toJsonValue(m_days_per_month));
    }
    if (m_hours_per_day_isSet) {
        obj.insert(QString("hoursPerDay"), ::OpenAPI::toJsonValue(m_hours_per_day));
    }
    return obj;
}

double OAIVmUptime::getDaysPerMonth() const {
    return m_days_per_month;
}
void OAIVmUptime::setDaysPerMonth(const double &days_per_month) {
    m_days_per_month = days_per_month;
    m_days_per_month_isSet = true;
}

bool OAIVmUptime::is_days_per_month_Set() const{
    return m_days_per_month_isSet;
}

bool OAIVmUptime::is_days_per_month_Valid() const{
    return m_days_per_month_isValid;
}

double OAIVmUptime::getHoursPerDay() const {
    return m_hours_per_day;
}
void OAIVmUptime::setHoursPerDay(const double &hours_per_day) {
    m_hours_per_day = hours_per_day;
    m_hours_per_day_isSet = true;
}

bool OAIVmUptime::is_hours_per_day_Set() const{
    return m_hours_per_day_isSet;
}

bool OAIVmUptime::is_hours_per_day_Valid() const{
    return m_hours_per_day_isValid;
}

bool OAIVmUptime::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_days_per_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hours_per_day_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVmUptime::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
