/**
 * Azure Migrate V2
 * Assess your workloads for Azure.
 *
 * The version of the OpenAPI document: 2019-10-01
 * Contact: azuremigrate@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssessmentOptionsProperties.h
 *
 * Assessment options properties.
 */

#ifndef OAIAssessmentOptionsProperties_H
#define OAIAssessmentOptionsProperties_H

#include <QJsonObject>

#include "OAIVmFamily.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVmFamily;

class OAIAssessmentOptionsProperties : public OAIObject {
public:
    OAIAssessmentOptionsProperties();
    OAIAssessmentOptionsProperties(QString json);
    ~OAIAssessmentOptionsProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getReservedInstanceSupportedCurrencies() const;
    void setReservedInstanceSupportedCurrencies(const QList<QString> &reserved_instance_supported_currencies);
    bool is_reserved_instance_supported_currencies_Set() const;
    bool is_reserved_instance_supported_currencies_Valid() const;

    QList<QString> getReservedInstanceSupportedLocations() const;
    void setReservedInstanceSupportedLocations(const QList<QString> &reserved_instance_supported_locations);
    bool is_reserved_instance_supported_locations_Set() const;
    bool is_reserved_instance_supported_locations_Valid() const;

    QList<QString> getReservedInstanceSupportedOffers() const;
    void setReservedInstanceSupportedOffers(const QList<QString> &reserved_instance_supported_offers);
    bool is_reserved_instance_supported_offers_Set() const;
    bool is_reserved_instance_supported_offers_Valid() const;

    QList<QString> getReservedInstanceVmFamilies() const;
    void setReservedInstanceVmFamilies(const QList<QString> &reserved_instance_vm_families);
    bool is_reserved_instance_vm_families_Set() const;
    bool is_reserved_instance_vm_families_Valid() const;

    QList<OAIVmFamily> getVmFamilies() const;
    void setVmFamilies(const QList<OAIVmFamily> &vm_families);
    bool is_vm_families_Set() const;
    bool is_vm_families_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_reserved_instance_supported_currencies;
    bool m_reserved_instance_supported_currencies_isSet;
    bool m_reserved_instance_supported_currencies_isValid;

    QList<QString> m_reserved_instance_supported_locations;
    bool m_reserved_instance_supported_locations_isSet;
    bool m_reserved_instance_supported_locations_isValid;

    QList<QString> m_reserved_instance_supported_offers;
    bool m_reserved_instance_supported_offers_isSet;
    bool m_reserved_instance_supported_offers_isValid;

    QList<QString> m_reserved_instance_vm_families;
    bool m_reserved_instance_vm_families_isSet;
    bool m_reserved_instance_vm_families_isValid;

    QList<OAIVmFamily> m_vm_families;
    bool m_vm_families_isSet;
    bool m_vm_families_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssessmentOptionsProperties)

#endif // OAIAssessmentOptionsProperties_H
