/*
 * Azure Migrate
 * Move your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-02-02
 * Contact: azuremigrate@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AssessedDisk
 */
public class AssessedDiskTest {
    private final AssessedDisk model = new AssessedDisk();

    /**
     * Model tests for AssessedDisk
     */
    @Test
    public void testAssessedDisk() {
        // TODO: test AssessedDisk
    }

    /**
     * Test the property 'gigabytesConsumed'
     */
    @Test
    public void gigabytesConsumedTest() {
        // TODO: test gigabytesConsumed
    }

    /**
     * Test the property 'gigabytesForRecommendedDiskSize'
     */
    @Test
    public void gigabytesForRecommendedDiskSizeTest() {
        // TODO: test gigabytesForRecommendedDiskSize
    }

    /**
     * Test the property 'gigabytesProvisioned'
     */
    @Test
    public void gigabytesProvisionedTest() {
        // TODO: test gigabytesProvisioned
    }

    /**
     * Test the property 'megabytesPerSecondOfRead'
     */
    @Test
    public void megabytesPerSecondOfReadTest() {
        // TODO: test megabytesPerSecondOfRead
    }

    /**
     * Test the property 'megabytesPerSecondOfReadDataPointsExpected'
     */
    @Test
    public void megabytesPerSecondOfReadDataPointsExpectedTest() {
        // TODO: test megabytesPerSecondOfReadDataPointsExpected
    }

    /**
     * Test the property 'megabytesPerSecondOfReadDataPointsReceived'
     */
    @Test
    public void megabytesPerSecondOfReadDataPointsReceivedTest() {
        // TODO: test megabytesPerSecondOfReadDataPointsReceived
    }

    /**
     * Test the property 'megabytesPerSecondOfWrite'
     */
    @Test
    public void megabytesPerSecondOfWriteTest() {
        // TODO: test megabytesPerSecondOfWrite
    }

    /**
     * Test the property 'megabytesPerSecondOfWriteDataPointsExpected'
     */
    @Test
    public void megabytesPerSecondOfWriteDataPointsExpectedTest() {
        // TODO: test megabytesPerSecondOfWriteDataPointsExpected
    }

    /**
     * Test the property 'megabytesPerSecondOfWriteDataPointsReceived'
     */
    @Test
    public void megabytesPerSecondOfWriteDataPointsReceivedTest() {
        // TODO: test megabytesPerSecondOfWriteDataPointsReceived
    }

    /**
     * Test the property 'monthlyStorageCost'
     */
    @Test
    public void monthlyStorageCostTest() {
        // TODO: test monthlyStorageCost
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'numberOfReadOperationsPerSecond'
     */
    @Test
    public void numberOfReadOperationsPerSecondTest() {
        // TODO: test numberOfReadOperationsPerSecond
    }

    /**
     * Test the property 'numberOfReadOperationsPerSecondDataPointsExpected'
     */
    @Test
    public void numberOfReadOperationsPerSecondDataPointsExpectedTest() {
        // TODO: test numberOfReadOperationsPerSecondDataPointsExpected
    }

    /**
     * Test the property 'numberOfReadOperationsPerSecondDataPointsReceived'
     */
    @Test
    public void numberOfReadOperationsPerSecondDataPointsReceivedTest() {
        // TODO: test numberOfReadOperationsPerSecondDataPointsReceived
    }

    /**
     * Test the property 'numberOfWriteOperationsPerSecond'
     */
    @Test
    public void numberOfWriteOperationsPerSecondTest() {
        // TODO: test numberOfWriteOperationsPerSecond
    }

    /**
     * Test the property 'numberOfWriteOperationsPerSecondDataPointsExpected'
     */
    @Test
    public void numberOfWriteOperationsPerSecondDataPointsExpectedTest() {
        // TODO: test numberOfWriteOperationsPerSecondDataPointsExpected
    }

    /**
     * Test the property 'numberOfWriteOperationsPerSecondDataPointsReceived'
     */
    @Test
    public void numberOfWriteOperationsPerSecondDataPointsReceivedTest() {
        // TODO: test numberOfWriteOperationsPerSecondDataPointsReceived
    }

    /**
     * Test the property 'recommendedDiskSize'
     */
    @Test
    public void recommendedDiskSizeTest() {
        // TODO: test recommendedDiskSize
    }

    /**
     * Test the property 'recommendedDiskType'
     */
    @Test
    public void recommendedDiskTypeTest() {
        // TODO: test recommendedDiskType
    }

    /**
     * Test the property 'suitability'
     */
    @Test
    public void suitabilityTest() {
        // TODO: test suitability
    }

    /**
     * Test the property 'suitabilityExplanation'
     */
    @Test
    public void suitabilityExplanationTest() {
        // TODO: test suitabilityExplanation
    }

}
