/**
 * Azure Migrate
 * Move your workloads to Azure.
 *
 * The version of the OpenAPI document: 2018-02-02
 * Contact: azuremigrate@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssessmentOptionsResultList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssessmentOptionsResultList::OAIAssessmentOptionsResultList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssessmentOptionsResultList::OAIAssessmentOptionsResultList() {
    this->initializeModel();
}

OAIAssessmentOptionsResultList::~OAIAssessmentOptionsResultList() {}

void OAIAssessmentOptionsResultList::initializeModel() {

    m_reserved_instance_vm_families_isSet = false;
    m_reserved_instance_vm_families_isValid = false;

    m_vm_families_isSet = false;
    m_vm_families_isValid = false;
}

void OAIAssessmentOptionsResultList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssessmentOptionsResultList::fromJsonObject(QJsonObject json) {

    m_reserved_instance_vm_families_isValid = ::OpenAPI::fromJsonValue(m_reserved_instance_vm_families, json[QString("reservedInstanceVmFamilies")]);
    m_reserved_instance_vm_families_isSet = !json[QString("reservedInstanceVmFamilies")].isNull() && m_reserved_instance_vm_families_isValid;

    m_vm_families_isValid = ::OpenAPI::fromJsonValue(m_vm_families, json[QString("vmFamilies")]);
    m_vm_families_isSet = !json[QString("vmFamilies")].isNull() && m_vm_families_isValid;
}

QString OAIAssessmentOptionsResultList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssessmentOptionsResultList::asJsonObject() const {
    QJsonObject obj;
    if (m_reserved_instance_vm_families.size() > 0) {
        obj.insert(QString("reservedInstanceVmFamilies"), ::OpenAPI::toJsonValue(m_reserved_instance_vm_families));
    }
    if (m_vm_families.size() > 0) {
        obj.insert(QString("vmFamilies"), ::OpenAPI::toJsonValue(m_vm_families));
    }
    return obj;
}

QList<QString> OAIAssessmentOptionsResultList::getReservedInstanceVmFamilies() const {
    return m_reserved_instance_vm_families;
}
void OAIAssessmentOptionsResultList::setReservedInstanceVmFamilies(const QList<QString> &reserved_instance_vm_families) {
    m_reserved_instance_vm_families = reserved_instance_vm_families;
    m_reserved_instance_vm_families_isSet = true;
}

bool OAIAssessmentOptionsResultList::is_reserved_instance_vm_families_Set() const{
    return m_reserved_instance_vm_families_isSet;
}

bool OAIAssessmentOptionsResultList::is_reserved_instance_vm_families_Valid() const{
    return m_reserved_instance_vm_families_isValid;
}

QList<OAIVmFamily> OAIAssessmentOptionsResultList::getVmFamilies() const {
    return m_vm_families;
}
void OAIAssessmentOptionsResultList::setVmFamilies(const QList<OAIVmFamily> &vm_families) {
    m_vm_families = vm_families;
    m_vm_families_isSet = true;
}

bool OAIAssessmentOptionsResultList::is_vm_families_Set() const{
    return m_vm_families_isSet;
}

bool OAIAssessmentOptionsResultList::is_vm_families_Valid() const{
    return m_vm_families_isValid;
}

bool OAIAssessmentOptionsResultList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_reserved_instance_vm_families.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_vm_families.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssessmentOptionsResultList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
