# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VmFamily(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: List[str]=None, family_name: str=None, target_locations: List[str]=None):
        """VmFamily - a model defined in OpenAPI

        :param category: The category of this VmFamily.
        :param family_name: The family_name of this VmFamily.
        :param target_locations: The target_locations of this VmFamily.
        """
        self.openapi_types = {
            'category': List[str],
            'family_name': str,
            'target_locations': List[str]
        }

        self.attribute_map = {
            'category': 'category',
            'family_name': 'familyName',
            'target_locations': 'targetLocations'
        }

        self._category = category
        self._family_name = family_name
        self._target_locations = target_locations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmFamily':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmFamily of this VmFamily.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this VmFamily.

        Category of the VM family.

        :return: The category of this VmFamily.
        :rtype: List[str]
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this VmFamily.

        Category of the VM family.

        :param category: The category of this VmFamily.
        :type category: List[str]
        """

        self._category = category

    @property
    def family_name(self):
        """Gets the family_name of this VmFamily.

        Name of the VM family.

        :return: The family_name of this VmFamily.
        :rtype: str
        """
        return self._family_name

    @family_name.setter
    def family_name(self, family_name):
        """Sets the family_name of this VmFamily.

        Name of the VM family.

        :param family_name: The family_name of this VmFamily.
        :type family_name: str
        """

        self._family_name = family_name

    @property
    def target_locations(self):
        """Gets the target_locations of this VmFamily.

        List of Azure regions.

        :return: The target_locations of this VmFamily.
        :rtype: List[str]
        """
        return self._target_locations

    @target_locations.setter
    def target_locations(self, target_locations):
        """Sets the target_locations of this VmFamily.

        List of Azure regions.

        :param target_locations: The target_locations of this VmFamily.
        :type target_locations: List[str]
        """

        self._target_locations = target_locations
