/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkloadGroupProperties.h
 *
 * Workload group definition. For more information look at sys.workload_management_workload_groups (DMV).
 */

#ifndef OAIWorkloadGroupProperties_H
#define OAIWorkloadGroupProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWorkloadGroupProperties : public OAIObject {
public:
    OAIWorkloadGroupProperties();
    OAIWorkloadGroupProperties(QString json);
    ~OAIWorkloadGroupProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getImportance() const;
    void setImportance(const QString &importance);
    bool is_importance_Set() const;
    bool is_importance_Valid() const;

    qint32 getMaxResourcePercent() const;
    void setMaxResourcePercent(const qint32 &max_resource_percent);
    bool is_max_resource_percent_Set() const;
    bool is_max_resource_percent_Valid() const;

    double getMaxResourcePercentPerRequest() const;
    void setMaxResourcePercentPerRequest(const double &max_resource_percent_per_request);
    bool is_max_resource_percent_per_request_Set() const;
    bool is_max_resource_percent_per_request_Valid() const;

    qint32 getMinResourcePercent() const;
    void setMinResourcePercent(const qint32 &min_resource_percent);
    bool is_min_resource_percent_Set() const;
    bool is_min_resource_percent_Valid() const;

    double getMinResourcePercentPerRequest() const;
    void setMinResourcePercentPerRequest(const double &min_resource_percent_per_request);
    bool is_min_resource_percent_per_request_Set() const;
    bool is_min_resource_percent_per_request_Valid() const;

    qint32 getQueryExecutionTimeout() const;
    void setQueryExecutionTimeout(const qint32 &query_execution_timeout);
    bool is_query_execution_timeout_Set() const;
    bool is_query_execution_timeout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_importance;
    bool m_importance_isSet;
    bool m_importance_isValid;

    qint32 m_max_resource_percent;
    bool m_max_resource_percent_isSet;
    bool m_max_resource_percent_isValid;

    double m_max_resource_percent_per_request;
    bool m_max_resource_percent_per_request_isSet;
    bool m_max_resource_percent_per_request_isValid;

    qint32 m_min_resource_percent;
    bool m_min_resource_percent_isSet;
    bool m_min_resource_percent_isValid;

    double m_min_resource_percent_per_request;
    bool m_min_resource_percent_per_request_isSet;
    bool m_min_resource_percent_per_request_isValid;

    qint32 m_query_execution_timeout;
    bool m_query_execution_timeout_isSet;
    bool m_query_execution_timeout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkloadGroupProperties)

#endif // OAIWorkloadGroupProperties_H
