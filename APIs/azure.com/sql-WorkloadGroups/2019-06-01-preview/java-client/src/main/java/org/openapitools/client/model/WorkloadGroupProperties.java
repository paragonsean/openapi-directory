/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Workload group definition. For more information look at sys.workload_management_workload_groups (DMV).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:11:52.605664-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WorkloadGroupProperties {
  public static final String SERIALIZED_NAME_IMPORTANCE = "importance";
  @SerializedName(SERIALIZED_NAME_IMPORTANCE)
  private String importance;

  public static final String SERIALIZED_NAME_MAX_RESOURCE_PERCENT = "maxResourcePercent";
  @SerializedName(SERIALIZED_NAME_MAX_RESOURCE_PERCENT)
  private Integer maxResourcePercent;

  public static final String SERIALIZED_NAME_MAX_RESOURCE_PERCENT_PER_REQUEST = "maxResourcePercentPerRequest";
  @SerializedName(SERIALIZED_NAME_MAX_RESOURCE_PERCENT_PER_REQUEST)
  private Double maxResourcePercentPerRequest;

  public static final String SERIALIZED_NAME_MIN_RESOURCE_PERCENT = "minResourcePercent";
  @SerializedName(SERIALIZED_NAME_MIN_RESOURCE_PERCENT)
  private Integer minResourcePercent;

  public static final String SERIALIZED_NAME_MIN_RESOURCE_PERCENT_PER_REQUEST = "minResourcePercentPerRequest";
  @SerializedName(SERIALIZED_NAME_MIN_RESOURCE_PERCENT_PER_REQUEST)
  private Double minResourcePercentPerRequest;

  public static final String SERIALIZED_NAME_QUERY_EXECUTION_TIMEOUT = "queryExecutionTimeout";
  @SerializedName(SERIALIZED_NAME_QUERY_EXECUTION_TIMEOUT)
  private Integer queryExecutionTimeout;

  public WorkloadGroupProperties() {
  }

  public WorkloadGroupProperties importance(String importance) {
    this.importance = importance;
    return this;
  }

  /**
   * The workload group importance level.
   * @return importance
   */
  @javax.annotation.Nullable
  public String getImportance() {
    return importance;
  }

  public void setImportance(String importance) {
    this.importance = importance;
  }


  public WorkloadGroupProperties maxResourcePercent(Integer maxResourcePercent) {
    this.maxResourcePercent = maxResourcePercent;
    return this;
  }

  /**
   * The workload group cap percentage resource.
   * @return maxResourcePercent
   */
  @javax.annotation.Nonnull
  public Integer getMaxResourcePercent() {
    return maxResourcePercent;
  }

  public void setMaxResourcePercent(Integer maxResourcePercent) {
    this.maxResourcePercent = maxResourcePercent;
  }


  public WorkloadGroupProperties maxResourcePercentPerRequest(Double maxResourcePercentPerRequest) {
    this.maxResourcePercentPerRequest = maxResourcePercentPerRequest;
    return this;
  }

  /**
   * The workload group request maximum grant percentage.
   * @return maxResourcePercentPerRequest
   */
  @javax.annotation.Nullable
  public Double getMaxResourcePercentPerRequest() {
    return maxResourcePercentPerRequest;
  }

  public void setMaxResourcePercentPerRequest(Double maxResourcePercentPerRequest) {
    this.maxResourcePercentPerRequest = maxResourcePercentPerRequest;
  }


  public WorkloadGroupProperties minResourcePercent(Integer minResourcePercent) {
    this.minResourcePercent = minResourcePercent;
    return this;
  }

  /**
   * The workload group minimum percentage resource.
   * @return minResourcePercent
   */
  @javax.annotation.Nonnull
  public Integer getMinResourcePercent() {
    return minResourcePercent;
  }

  public void setMinResourcePercent(Integer minResourcePercent) {
    this.minResourcePercent = minResourcePercent;
  }


  public WorkloadGroupProperties minResourcePercentPerRequest(Double minResourcePercentPerRequest) {
    this.minResourcePercentPerRequest = minResourcePercentPerRequest;
    return this;
  }

  /**
   * The workload group request minimum grant percentage.
   * @return minResourcePercentPerRequest
   */
  @javax.annotation.Nonnull
  public Double getMinResourcePercentPerRequest() {
    return minResourcePercentPerRequest;
  }

  public void setMinResourcePercentPerRequest(Double minResourcePercentPerRequest) {
    this.minResourcePercentPerRequest = minResourcePercentPerRequest;
  }


  public WorkloadGroupProperties queryExecutionTimeout(Integer queryExecutionTimeout) {
    this.queryExecutionTimeout = queryExecutionTimeout;
    return this;
  }

  /**
   * The workload group query execution timeout.
   * @return queryExecutionTimeout
   */
  @javax.annotation.Nullable
  public Integer getQueryExecutionTimeout() {
    return queryExecutionTimeout;
  }

  public void setQueryExecutionTimeout(Integer queryExecutionTimeout) {
    this.queryExecutionTimeout = queryExecutionTimeout;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkloadGroupProperties workloadGroupProperties = (WorkloadGroupProperties) o;
    return Objects.equals(this.importance, workloadGroupProperties.importance) &&
        Objects.equals(this.maxResourcePercent, workloadGroupProperties.maxResourcePercent) &&
        Objects.equals(this.maxResourcePercentPerRequest, workloadGroupProperties.maxResourcePercentPerRequest) &&
        Objects.equals(this.minResourcePercent, workloadGroupProperties.minResourcePercent) &&
        Objects.equals(this.minResourcePercentPerRequest, workloadGroupProperties.minResourcePercentPerRequest) &&
        Objects.equals(this.queryExecutionTimeout, workloadGroupProperties.queryExecutionTimeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(importance, maxResourcePercent, maxResourcePercentPerRequest, minResourcePercent, minResourcePercentPerRequest, queryExecutionTimeout);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkloadGroupProperties {\n");
    sb.append("    importance: ").append(toIndentedString(importance)).append("\n");
    sb.append("    maxResourcePercent: ").append(toIndentedString(maxResourcePercent)).append("\n");
    sb.append("    maxResourcePercentPerRequest: ").append(toIndentedString(maxResourcePercentPerRequest)).append("\n");
    sb.append("    minResourcePercent: ").append(toIndentedString(minResourcePercent)).append("\n");
    sb.append("    minResourcePercentPerRequest: ").append(toIndentedString(minResourcePercentPerRequest)).append("\n");
    sb.append("    queryExecutionTimeout: ").append(toIndentedString(queryExecutionTimeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("importance");
    openapiFields.add("maxResourcePercent");
    openapiFields.add("maxResourcePercentPerRequest");
    openapiFields.add("minResourcePercent");
    openapiFields.add("minResourcePercentPerRequest");
    openapiFields.add("queryExecutionTimeout");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("maxResourcePercent");
    openapiRequiredFields.add("minResourcePercent");
    openapiRequiredFields.add("minResourcePercentPerRequest");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WorkloadGroupProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WorkloadGroupProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkloadGroupProperties is not found in the empty JSON string", WorkloadGroupProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WorkloadGroupProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WorkloadGroupProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WorkloadGroupProperties.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("importance") != null && !jsonObj.get("importance").isJsonNull()) && !jsonObj.get("importance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `importance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("importance").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkloadGroupProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkloadGroupProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkloadGroupProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkloadGroupProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkloadGroupProperties>() {
           @Override
           public void write(JsonWriter out, WorkloadGroupProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkloadGroupProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WorkloadGroupProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WorkloadGroupProperties
   * @throws IOException if the JSON string is invalid with respect to WorkloadGroupProperties
   */
  public static WorkloadGroupProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkloadGroupProperties.class);
  }

  /**
   * Convert an instance of WorkloadGroupProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

