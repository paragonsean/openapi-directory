/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Property entity associated with your Azure API Management deployment. API Management policies are a powerful capability of the system that allow the publisher to change the behavior of the API through configuration. Policies are a collection of statements that are executed sequentially on the request or response of an API. Policy statements can be constructed using literal text values, policy expressions, and properties. Each API Management service instance has a properties collection of key/value pairs that are global to the service instance. These properties can be used to manage constant string values across all API configuration and policies.
 *
 * The version of the OpenAPI document: 2016-10-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import PropertyCollection from './model/PropertyCollection';
import PropertyContract from './model/PropertyContract';
import PropertyCreateParameters from './model/PropertyCreateParameters';
import PropertyGetDefaultResponse from './model/PropertyGetDefaultResponse';
import PropertyGetDefaultResponseDetailsInner from './model/PropertyGetDefaultResponseDetailsInner';
import PropertyUpdateParameters from './model/PropertyUpdateParameters';
import PropertyApi from './api/PropertyApi';


/**
* Use these REST APIs for performing operations on Property entity associated with your Azure API Management deployment. API Management policies are a powerful capability of the system that allow the publisher to change the behavior of the API through configuration. Policies are a collection of statements that are executed sequentially on the request or response of an API. Policy statements can be constructed using literal text values, policy expressions, and properties. Each API Management service instance has a properties collection of key/value pairs that are global to the service instance. These properties can be used to manage constant string values across all API configuration and policies..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiManagementClient = require('index'); // See note below*.
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2016-10-10
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The PropertyCollection model constructor.
     * @property {module:model/PropertyCollection}
     */
    PropertyCollection,

    /**
     * The PropertyContract model constructor.
     * @property {module:model/PropertyContract}
     */
    PropertyContract,

    /**
     * The PropertyCreateParameters model constructor.
     * @property {module:model/PropertyCreateParameters}
     */
    PropertyCreateParameters,

    /**
     * The PropertyGetDefaultResponse model constructor.
     * @property {module:model/PropertyGetDefaultResponse}
     */
    PropertyGetDefaultResponse,

    /**
     * The PropertyGetDefaultResponseDetailsInner model constructor.
     * @property {module:model/PropertyGetDefaultResponseDetailsInner}
     */
    PropertyGetDefaultResponseDetailsInner,

    /**
     * The PropertyUpdateParameters model constructor.
     * @property {module:model/PropertyUpdateParameters}
     */
    PropertyUpdateParameters,

    /**
    * The PropertyApi service constructor.
    * @property {module:api/PropertyApi}
    */
    PropertyApi
};
