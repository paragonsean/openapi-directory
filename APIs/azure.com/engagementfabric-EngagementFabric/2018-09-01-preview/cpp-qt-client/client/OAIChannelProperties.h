/**
 * EngagementFabric
 * Microsoft Customer Engagement Fabric
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChannelProperties.h
 *
 * The EngagementFabric channel properties
 */

#ifndef OAIChannelProperties_H
#define OAIChannelProperties_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIChannelProperties : public OAIObject {
public:
    OAIChannelProperties();
    OAIChannelProperties(QString json);
    ~OAIChannelProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getChannelFunctions() const;
    void setChannelFunctions(const QList<QString> &channel_functions);
    bool is_channel_functions_Set() const;
    bool is_channel_functions_Valid() const;

    QString getChannelType() const;
    void setChannelType(const QString &channel_type);
    bool is_channel_type_Set() const;
    bool is_channel_type_Valid() const;

    QMap<QString, QString> getCredentials() const;
    void setCredentials(const QMap<QString, QString> &credentials);
    bool is_credentials_Set() const;
    bool is_credentials_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_channel_functions;
    bool m_channel_functions_isSet;
    bool m_channel_functions_isValid;

    QString m_channel_type;
    bool m_channel_type_isSet;
    bool m_channel_type_isValid;

    QMap<QString, QString> m_credentials;
    bool m_credentials_isSet;
    bool m_credentials_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChannelProperties)

#endif // OAIChannelProperties_H
