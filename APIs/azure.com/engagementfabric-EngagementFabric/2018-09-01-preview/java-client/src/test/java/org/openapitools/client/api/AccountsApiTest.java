/*
 * EngagementFabric
 * Microsoft Customer Engagement Fabric
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Account;
import org.openapitools.client.model.AccountList;
import org.openapitools.client.model.AccountPatch;
import org.openapitools.client.model.ChannelTypeDescriptionList;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.KeyDescription;
import org.openapitools.client.model.KeyDescriptionList;
import org.openapitools.client.model.RegenerateKeyParameter;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountsApi
 */
@Disabled
public class AccountsApiTest {

    private final AccountsApi api = new AccountsApi();

    /**
     * Create or Update the EngagementFabric account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        Account account = null;
        Account response = api.accountsCreateOrUpdate(subscriptionId, resourceGroupName, accountName, apiVersion, account);
        // TODO: test validations
    }

    /**
     * Delete the EngagementFabric account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        api.accountsDelete(subscriptionId, resourceGroupName, accountName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get the EngagementFabric account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        Account response = api.accountsGet(subscriptionId, resourceGroupName, accountName, apiVersion);
        // TODO: test validations
    }

    /**
     * List the EngagementFabric accounts in given subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        AccountList response = api.accountsList(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * List EngagementFabric accounts in given resource group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        AccountList response = api.accountsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * List available EngagementFabric channel types and functions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsListChannelTypesTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        ChannelTypeDescriptionList response = api.accountsListChannelTypes(subscriptionId, resourceGroupName, accountName, apiVersion);
        // TODO: test validations
    }

    /**
     * List keys of the EngagementFabric account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsListKeysTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        KeyDescriptionList response = api.accountsListKeys(subscriptionId, resourceGroupName, accountName, apiVersion);
        // TODO: test validations
    }

    /**
     * Regenerate key of the EngagementFabric account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsRegenerateKeyTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        RegenerateKeyParameter parameter = null;
        KeyDescription response = api.accountsRegenerateKey(subscriptionId, resourceGroupName, accountName, apiVersion, parameter);
        // TODO: test validations
    }

    /**
     * Update EngagementFabric account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        AccountPatch accountPatch = null;
        Account response = api.accountsUpdate(subscriptionId, resourceGroupName, accountName, apiVersion, accountPatch);
        // TODO: test validations
    }

}
