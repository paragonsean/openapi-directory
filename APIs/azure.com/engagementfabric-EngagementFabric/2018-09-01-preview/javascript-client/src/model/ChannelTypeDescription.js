/**
 * EngagementFabric
 * Microsoft Customer Engagement Fabric
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChannelTypeDescription model module.
 * @module model/ChannelTypeDescription
 * @version 2018-09-01-preview
 */
class ChannelTypeDescription {
    /**
     * Constructs a new <code>ChannelTypeDescription</code>.
     * EngagementFabric channel description
     * @alias module:model/ChannelTypeDescription
     */
    constructor() { 
        
        ChannelTypeDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelTypeDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelTypeDescription} obj Optional instance to populate.
     * @return {module:model/ChannelTypeDescription} The populated <code>ChannelTypeDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelTypeDescription();

            if (data.hasOwnProperty('channelDescription')) {
                obj['channelDescription'] = ApiClient.convertToType(data['channelDescription'], 'String');
            }
            if (data.hasOwnProperty('channelFunctions')) {
                obj['channelFunctions'] = ApiClient.convertToType(data['channelFunctions'], ['String']);
            }
            if (data.hasOwnProperty('channelType')) {
                obj['channelType'] = ApiClient.convertToType(data['channelType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelTypeDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelTypeDescription</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['channelDescription'] && !(typeof data['channelDescription'] === 'string' || data['channelDescription'] instanceof String)) {
            throw new Error("Expected the field `channelDescription` to be a primitive type in the JSON string but got " + data['channelDescription']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['channelFunctions'])) {
            throw new Error("Expected the field `channelFunctions` to be an array in the JSON data but got " + data['channelFunctions']);
        }
        // ensure the json data is a string
        if (data['channelType'] && !(typeof data['channelType'] === 'string' || data['channelType'] instanceof String)) {
            throw new Error("Expected the field `channelType` to be a primitive type in the JSON string but got " + data['channelType']);
        }

        return true;
    }


}



/**
 * Text description for the channel
 * @member {String} channelDescription
 */
ChannelTypeDescription.prototype['channelDescription'] = undefined;

/**
 * All the available functions for the channel
 * @member {Array.<String>} channelFunctions
 */
ChannelTypeDescription.prototype['channelFunctions'] = undefined;

/**
 * Channel type
 * @member {String} channelType
 */
ChannelTypeDescription.prototype['channelType'] = undefined;






export default ChannelTypeDescription;

