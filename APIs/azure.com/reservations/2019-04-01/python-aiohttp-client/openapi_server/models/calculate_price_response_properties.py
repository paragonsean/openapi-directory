# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.calculate_price_response_properties_billing_currency_total import CalculatePriceResponsePropertiesBillingCurrencyTotal
from openapi_server.models.calculate_price_response_properties_pricing_currency_total import CalculatePriceResponsePropertiesPricingCurrencyTotal
from openapi_server.models.payment_detail import PaymentDetail
from openapi_server import util


class CalculatePriceResponseProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_currency_total: CalculatePriceResponsePropertiesBillingCurrencyTotal=None, is_billing_partner_managed: bool=None, payment_schedule: List[PaymentDetail]=None, pricing_currency_total: CalculatePriceResponsePropertiesPricingCurrencyTotal=None, reservation_order_id: str=None, sku_description: str=None, sku_title: str=None):
        """CalculatePriceResponseProperties - a model defined in OpenAPI

        :param billing_currency_total: The billing_currency_total of this CalculatePriceResponseProperties.
        :param is_billing_partner_managed: The is_billing_partner_managed of this CalculatePriceResponseProperties.
        :param payment_schedule: The payment_schedule of this CalculatePriceResponseProperties.
        :param pricing_currency_total: The pricing_currency_total of this CalculatePriceResponseProperties.
        :param reservation_order_id: The reservation_order_id of this CalculatePriceResponseProperties.
        :param sku_description: The sku_description of this CalculatePriceResponseProperties.
        :param sku_title: The sku_title of this CalculatePriceResponseProperties.
        """
        self.openapi_types = {
            'billing_currency_total': CalculatePriceResponsePropertiesBillingCurrencyTotal,
            'is_billing_partner_managed': bool,
            'payment_schedule': List[PaymentDetail],
            'pricing_currency_total': CalculatePriceResponsePropertiesPricingCurrencyTotal,
            'reservation_order_id': str,
            'sku_description': str,
            'sku_title': str
        }

        self.attribute_map = {
            'billing_currency_total': 'billingCurrencyTotal',
            'is_billing_partner_managed': 'isBillingPartnerManaged',
            'payment_schedule': 'paymentSchedule',
            'pricing_currency_total': 'pricingCurrencyTotal',
            'reservation_order_id': 'reservationOrderId',
            'sku_description': 'skuDescription',
            'sku_title': 'skuTitle'
        }

        self._billing_currency_total = billing_currency_total
        self._is_billing_partner_managed = is_billing_partner_managed
        self._payment_schedule = payment_schedule
        self._pricing_currency_total = pricing_currency_total
        self._reservation_order_id = reservation_order_id
        self._sku_description = sku_description
        self._sku_title = sku_title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CalculatePriceResponseProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CalculatePriceResponseProperties of this CalculatePriceResponseProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_currency_total(self):
        """Gets the billing_currency_total of this CalculatePriceResponseProperties.


        :return: The billing_currency_total of this CalculatePriceResponseProperties.
        :rtype: CalculatePriceResponsePropertiesBillingCurrencyTotal
        """
        return self._billing_currency_total

    @billing_currency_total.setter
    def billing_currency_total(self, billing_currency_total):
        """Sets the billing_currency_total of this CalculatePriceResponseProperties.


        :param billing_currency_total: The billing_currency_total of this CalculatePriceResponseProperties.
        :type billing_currency_total: CalculatePriceResponsePropertiesBillingCurrencyTotal
        """

        self._billing_currency_total = billing_currency_total

    @property
    def is_billing_partner_managed(self):
        """Gets the is_billing_partner_managed of this CalculatePriceResponseProperties.

        True if billing is managed by Microsoft Partner. Used only for CSP accounts.

        :return: The is_billing_partner_managed of this CalculatePriceResponseProperties.
        :rtype: bool
        """
        return self._is_billing_partner_managed

    @is_billing_partner_managed.setter
    def is_billing_partner_managed(self, is_billing_partner_managed):
        """Sets the is_billing_partner_managed of this CalculatePriceResponseProperties.

        True if billing is managed by Microsoft Partner. Used only for CSP accounts.

        :param is_billing_partner_managed: The is_billing_partner_managed of this CalculatePriceResponseProperties.
        :type is_billing_partner_managed: bool
        """

        self._is_billing_partner_managed = is_billing_partner_managed

    @property
    def payment_schedule(self):
        """Gets the payment_schedule of this CalculatePriceResponseProperties.


        :return: The payment_schedule of this CalculatePriceResponseProperties.
        :rtype: List[PaymentDetail]
        """
        return self._payment_schedule

    @payment_schedule.setter
    def payment_schedule(self, payment_schedule):
        """Sets the payment_schedule of this CalculatePriceResponseProperties.


        :param payment_schedule: The payment_schedule of this CalculatePriceResponseProperties.
        :type payment_schedule: List[PaymentDetail]
        """

        self._payment_schedule = payment_schedule

    @property
    def pricing_currency_total(self):
        """Gets the pricing_currency_total of this CalculatePriceResponseProperties.


        :return: The pricing_currency_total of this CalculatePriceResponseProperties.
        :rtype: CalculatePriceResponsePropertiesPricingCurrencyTotal
        """
        return self._pricing_currency_total

    @pricing_currency_total.setter
    def pricing_currency_total(self, pricing_currency_total):
        """Sets the pricing_currency_total of this CalculatePriceResponseProperties.


        :param pricing_currency_total: The pricing_currency_total of this CalculatePriceResponseProperties.
        :type pricing_currency_total: CalculatePriceResponsePropertiesPricingCurrencyTotal
        """

        self._pricing_currency_total = pricing_currency_total

    @property
    def reservation_order_id(self):
        """Gets the reservation_order_id of this CalculatePriceResponseProperties.

        GUID that represents reservation order that can be placed after calculating price.

        :return: The reservation_order_id of this CalculatePriceResponseProperties.
        :rtype: str
        """
        return self._reservation_order_id

    @reservation_order_id.setter
    def reservation_order_id(self, reservation_order_id):
        """Sets the reservation_order_id of this CalculatePriceResponseProperties.

        GUID that represents reservation order that can be placed after calculating price.

        :param reservation_order_id: The reservation_order_id of this CalculatePriceResponseProperties.
        :type reservation_order_id: str
        """

        self._reservation_order_id = reservation_order_id

    @property
    def sku_description(self):
        """Gets the sku_description of this CalculatePriceResponseProperties.

        Description of SKU that is being purchased.

        :return: The sku_description of this CalculatePriceResponseProperties.
        :rtype: str
        """
        return self._sku_description

    @sku_description.setter
    def sku_description(self, sku_description):
        """Sets the sku_description of this CalculatePriceResponseProperties.

        Description of SKU that is being purchased.

        :param sku_description: The sku_description of this CalculatePriceResponseProperties.
        :type sku_description: str
        """

        self._sku_description = sku_description

    @property
    def sku_title(self):
        """Gets the sku_title of this CalculatePriceResponseProperties.

        Title of SKU that is being purchased.

        :return: The sku_title of this CalculatePriceResponseProperties.
        :rtype: str
        """
        return self._sku_title

    @sku_title.setter
    def sku_title(self, sku_title):
        """Sets the sku_title of this CalculatePriceResponseProperties.

        Title of SKU that is being purchased.

        :param sku_title: The sku_title of this CalculatePriceResponseProperties.
        :type sku_title: str
        """

        self._sku_title = sku_title
