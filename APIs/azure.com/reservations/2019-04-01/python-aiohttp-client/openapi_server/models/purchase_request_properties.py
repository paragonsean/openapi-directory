# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.applied_scope_type import AppliedScopeType
from openapi_server.models.purchase_request_properties_reserved_resource_properties import PurchaseRequestPropertiesReservedResourceProperties
from openapi_server.models.reservation_billing_plan import ReservationBillingPlan
from openapi_server.models.reservation_term import ReservationTerm
from openapi_server.models.reserved_resource_type import ReservedResourceType
from openapi_server import util


class PurchaseRequestProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, applied_scope_type: AppliedScopeType=None, applied_scopes: List[str]=None, billing_plan: ReservationBillingPlan=None, billing_scope_id: str=None, display_name: str=None, quantity: int=None, renew: bool=False, reserved_resource_properties: PurchaseRequestPropertiesReservedResourceProperties=None, reserved_resource_type: ReservedResourceType=None, term: ReservationTerm=None):
        """PurchaseRequestProperties - a model defined in OpenAPI

        :param applied_scope_type: The applied_scope_type of this PurchaseRequestProperties.
        :param applied_scopes: The applied_scopes of this PurchaseRequestProperties.
        :param billing_plan: The billing_plan of this PurchaseRequestProperties.
        :param billing_scope_id: The billing_scope_id of this PurchaseRequestProperties.
        :param display_name: The display_name of this PurchaseRequestProperties.
        :param quantity: The quantity of this PurchaseRequestProperties.
        :param renew: The renew of this PurchaseRequestProperties.
        :param reserved_resource_properties: The reserved_resource_properties of this PurchaseRequestProperties.
        :param reserved_resource_type: The reserved_resource_type of this PurchaseRequestProperties.
        :param term: The term of this PurchaseRequestProperties.
        """
        self.openapi_types = {
            'applied_scope_type': AppliedScopeType,
            'applied_scopes': List[str],
            'billing_plan': ReservationBillingPlan,
            'billing_scope_id': str,
            'display_name': str,
            'quantity': int,
            'renew': bool,
            'reserved_resource_properties': PurchaseRequestPropertiesReservedResourceProperties,
            'reserved_resource_type': ReservedResourceType,
            'term': ReservationTerm
        }

        self.attribute_map = {
            'applied_scope_type': 'appliedScopeType',
            'applied_scopes': 'appliedScopes',
            'billing_plan': 'billingPlan',
            'billing_scope_id': 'billingScopeId',
            'display_name': 'displayName',
            'quantity': 'quantity',
            'renew': 'renew',
            'reserved_resource_properties': 'reservedResourceProperties',
            'reserved_resource_type': 'reservedResourceType',
            'term': 'term'
        }

        self._applied_scope_type = applied_scope_type
        self._applied_scopes = applied_scopes
        self._billing_plan = billing_plan
        self._billing_scope_id = billing_scope_id
        self._display_name = display_name
        self._quantity = quantity
        self._renew = renew
        self._reserved_resource_properties = reserved_resource_properties
        self._reserved_resource_type = reserved_resource_type
        self._term = term

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PurchaseRequestProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PurchaseRequestProperties of this PurchaseRequestProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def applied_scope_type(self):
        """Gets the applied_scope_type of this PurchaseRequestProperties.


        :return: The applied_scope_type of this PurchaseRequestProperties.
        :rtype: AppliedScopeType
        """
        return self._applied_scope_type

    @applied_scope_type.setter
    def applied_scope_type(self, applied_scope_type):
        """Sets the applied_scope_type of this PurchaseRequestProperties.


        :param applied_scope_type: The applied_scope_type of this PurchaseRequestProperties.
        :type applied_scope_type: AppliedScopeType
        """

        self._applied_scope_type = applied_scope_type

    @property
    def applied_scopes(self):
        """Gets the applied_scopes of this PurchaseRequestProperties.

        List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.

        :return: The applied_scopes of this PurchaseRequestProperties.
        :rtype: List[str]
        """
        return self._applied_scopes

    @applied_scopes.setter
    def applied_scopes(self, applied_scopes):
        """Sets the applied_scopes of this PurchaseRequestProperties.

        List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.

        :param applied_scopes: The applied_scopes of this PurchaseRequestProperties.
        :type applied_scopes: List[str]
        """

        self._applied_scopes = applied_scopes

    @property
    def billing_plan(self):
        """Gets the billing_plan of this PurchaseRequestProperties.


        :return: The billing_plan of this PurchaseRequestProperties.
        :rtype: ReservationBillingPlan
        """
        return self._billing_plan

    @billing_plan.setter
    def billing_plan(self, billing_plan):
        """Sets the billing_plan of this PurchaseRequestProperties.


        :param billing_plan: The billing_plan of this PurchaseRequestProperties.
        :type billing_plan: ReservationBillingPlan
        """

        self._billing_plan = billing_plan

    @property
    def billing_scope_id(self):
        """Gets the billing_scope_id of this PurchaseRequestProperties.

        Subscription that will be charged for purchasing Reservation

        :return: The billing_scope_id of this PurchaseRequestProperties.
        :rtype: str
        """
        return self._billing_scope_id

    @billing_scope_id.setter
    def billing_scope_id(self, billing_scope_id):
        """Sets the billing_scope_id of this PurchaseRequestProperties.

        Subscription that will be charged for purchasing Reservation

        :param billing_scope_id: The billing_scope_id of this PurchaseRequestProperties.
        :type billing_scope_id: str
        """

        self._billing_scope_id = billing_scope_id

    @property
    def display_name(self):
        """Gets the display_name of this PurchaseRequestProperties.

        Friendly name of the Reservation

        :return: The display_name of this PurchaseRequestProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this PurchaseRequestProperties.

        Friendly name of the Reservation

        :param display_name: The display_name of this PurchaseRequestProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def quantity(self):
        """Gets the quantity of this PurchaseRequestProperties.

        Quantity of the SKUs that are part of the Reservation. Must be greater than zero.

        :return: The quantity of this PurchaseRequestProperties.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this PurchaseRequestProperties.

        Quantity of the SKUs that are part of the Reservation. Must be greater than zero.

        :param quantity: The quantity of this PurchaseRequestProperties.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def renew(self):
        """Gets the renew of this PurchaseRequestProperties.

        Setting this to true will automatically purchase a new reservation on the expiration date time.

        :return: The renew of this PurchaseRequestProperties.
        :rtype: bool
        """
        return self._renew

    @renew.setter
    def renew(self, renew):
        """Sets the renew of this PurchaseRequestProperties.

        Setting this to true will automatically purchase a new reservation on the expiration date time.

        :param renew: The renew of this PurchaseRequestProperties.
        :type renew: bool
        """

        self._renew = renew

    @property
    def reserved_resource_properties(self):
        """Gets the reserved_resource_properties of this PurchaseRequestProperties.


        :return: The reserved_resource_properties of this PurchaseRequestProperties.
        :rtype: PurchaseRequestPropertiesReservedResourceProperties
        """
        return self._reserved_resource_properties

    @reserved_resource_properties.setter
    def reserved_resource_properties(self, reserved_resource_properties):
        """Sets the reserved_resource_properties of this PurchaseRequestProperties.


        :param reserved_resource_properties: The reserved_resource_properties of this PurchaseRequestProperties.
        :type reserved_resource_properties: PurchaseRequestPropertiesReservedResourceProperties
        """

        self._reserved_resource_properties = reserved_resource_properties

    @property
    def reserved_resource_type(self):
        """Gets the reserved_resource_type of this PurchaseRequestProperties.


        :return: The reserved_resource_type of this PurchaseRequestProperties.
        :rtype: ReservedResourceType
        """
        return self._reserved_resource_type

    @reserved_resource_type.setter
    def reserved_resource_type(self, reserved_resource_type):
        """Sets the reserved_resource_type of this PurchaseRequestProperties.


        :param reserved_resource_type: The reserved_resource_type of this PurchaseRequestProperties.
        :type reserved_resource_type: ReservedResourceType
        """

        self._reserved_resource_type = reserved_resource_type

    @property
    def term(self):
        """Gets the term of this PurchaseRequestProperties.


        :return: The term of this PurchaseRequestProperties.
        :rtype: ReservationTerm
        """
        return self._term

    @term.setter
    def term(self, term):
        """Sets the term of this PurchaseRequestProperties.


        :param term: The term of this PurchaseRequestProperties.
        :type term: ReservationTerm
        """

        self._term = term
