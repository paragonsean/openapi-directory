# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scope_properties import ScopeProperties
from openapi_server import util


class SubscriptionScopeProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scopes: List[ScopeProperties]=None):
        """SubscriptionScopeProperties - a model defined in OpenAPI

        :param scopes: The scopes of this SubscriptionScopeProperties.
        """
        self.openapi_types = {
            'scopes': List[ScopeProperties]
        }

        self.attribute_map = {
            'scopes': 'scopes'
        }

        self._scopes = scopes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionScopeProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionScopeProperties of this SubscriptionScopeProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scopes(self):
        """Gets the scopes of this SubscriptionScopeProperties.


        :return: The scopes of this SubscriptionScopeProperties.
        :rtype: List[ScopeProperties]
        """
        return self._scopes

    @scopes.setter
    def scopes(self, scopes):
        """Sets the scopes of this SubscriptionScopeProperties.


        :param scopes: The scopes of this SubscriptionScopeProperties.
        :type scopes: List[ScopeProperties]
        """

        self._scopes = scopes
