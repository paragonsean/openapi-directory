/**
 * Azure Reservation
 * This API describe Azure Reservation
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPurchaseRequestProperties.h
 *
 * 
 */

#ifndef OAIPurchaseRequestProperties_H
#define OAIPurchaseRequestProperties_H

#include <QJsonObject>

#include "OAIAppliedScopeType.h"
#include "OAIPurchaseRequestProperties_reservedResourceProperties.h"
#include "OAIReservationBillingPlan.h"
#include "OAIReservationTerm.h"
#include "OAIReservedResourceType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPurchaseRequestProperties_reservedResourceProperties;

class OAIPurchaseRequestProperties : public OAIObject {
public:
    OAIPurchaseRequestProperties();
    OAIPurchaseRequestProperties(QString json);
    ~OAIPurchaseRequestProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAppliedScopeType getAppliedScopeType() const;
    void setAppliedScopeType(const OAIAppliedScopeType &applied_scope_type);
    bool is_applied_scope_type_Set() const;
    bool is_applied_scope_type_Valid() const;

    QList<QString> getAppliedScopes() const;
    void setAppliedScopes(const QList<QString> &applied_scopes);
    bool is_applied_scopes_Set() const;
    bool is_applied_scopes_Valid() const;

    OAIReservationBillingPlan getBillingPlan() const;
    void setBillingPlan(const OAIReservationBillingPlan &billing_plan);
    bool is_billing_plan_Set() const;
    bool is_billing_plan_Valid() const;

    QString getBillingScopeId() const;
    void setBillingScopeId(const QString &billing_scope_id);
    bool is_billing_scope_id_Set() const;
    bool is_billing_scope_id_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    bool isRenew() const;
    void setRenew(const bool &renew);
    bool is_renew_Set() const;
    bool is_renew_Valid() const;

    OAIPurchaseRequestProperties_reservedResourceProperties getReservedResourceProperties() const;
    void setReservedResourceProperties(const OAIPurchaseRequestProperties_reservedResourceProperties &reserved_resource_properties);
    bool is_reserved_resource_properties_Set() const;
    bool is_reserved_resource_properties_Valid() const;

    OAIReservedResourceType getReservedResourceType() const;
    void setReservedResourceType(const OAIReservedResourceType &reserved_resource_type);
    bool is_reserved_resource_type_Set() const;
    bool is_reserved_resource_type_Valid() const;

    OAIReservationTerm getTerm() const;
    void setTerm(const OAIReservationTerm &term);
    bool is_term_Set() const;
    bool is_term_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAppliedScopeType m_applied_scope_type;
    bool m_applied_scope_type_isSet;
    bool m_applied_scope_type_isValid;

    QList<QString> m_applied_scopes;
    bool m_applied_scopes_isSet;
    bool m_applied_scopes_isValid;

    OAIReservationBillingPlan m_billing_plan;
    bool m_billing_plan_isSet;
    bool m_billing_plan_isValid;

    QString m_billing_scope_id;
    bool m_billing_scope_id_isSet;
    bool m_billing_scope_id_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    bool m_renew;
    bool m_renew_isSet;
    bool m_renew_isValid;

    OAIPurchaseRequestProperties_reservedResourceProperties m_reserved_resource_properties;
    bool m_reserved_resource_properties_isSet;
    bool m_reserved_resource_properties_isValid;

    OAIReservedResourceType m_reserved_resource_type;
    bool m_reserved_resource_type_isSet;
    bool m_reserved_resource_type_isValid;

    OAIReservationTerm m_term;
    bool m_term_isSet;
    bool m_term_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPurchaseRequestProperties)

#endif // OAIPurchaseRequestProperties_H
