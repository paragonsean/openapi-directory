/**
 * Azure Reservation
 * This API describe Azure Reservation
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICalculatePriceResponseProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICalculatePriceResponseProperties::OAICalculatePriceResponseProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICalculatePriceResponseProperties::OAICalculatePriceResponseProperties() {
    this->initializeModel();
}

OAICalculatePriceResponseProperties::~OAICalculatePriceResponseProperties() {}

void OAICalculatePriceResponseProperties::initializeModel() {

    m_billing_currency_total_isSet = false;
    m_billing_currency_total_isValid = false;

    m_is_billing_partner_managed_isSet = false;
    m_is_billing_partner_managed_isValid = false;

    m_payment_schedule_isSet = false;
    m_payment_schedule_isValid = false;

    m_pricing_currency_total_isSet = false;
    m_pricing_currency_total_isValid = false;

    m_reservation_order_id_isSet = false;
    m_reservation_order_id_isValid = false;

    m_sku_description_isSet = false;
    m_sku_description_isValid = false;

    m_sku_title_isSet = false;
    m_sku_title_isValid = false;
}

void OAICalculatePriceResponseProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICalculatePriceResponseProperties::fromJsonObject(QJsonObject json) {

    m_billing_currency_total_isValid = ::OpenAPI::fromJsonValue(m_billing_currency_total, json[QString("billingCurrencyTotal")]);
    m_billing_currency_total_isSet = !json[QString("billingCurrencyTotal")].isNull() && m_billing_currency_total_isValid;

    m_is_billing_partner_managed_isValid = ::OpenAPI::fromJsonValue(m_is_billing_partner_managed, json[QString("isBillingPartnerManaged")]);
    m_is_billing_partner_managed_isSet = !json[QString("isBillingPartnerManaged")].isNull() && m_is_billing_partner_managed_isValid;

    m_payment_schedule_isValid = ::OpenAPI::fromJsonValue(m_payment_schedule, json[QString("paymentSchedule")]);
    m_payment_schedule_isSet = !json[QString("paymentSchedule")].isNull() && m_payment_schedule_isValid;

    m_pricing_currency_total_isValid = ::OpenAPI::fromJsonValue(m_pricing_currency_total, json[QString("pricingCurrencyTotal")]);
    m_pricing_currency_total_isSet = !json[QString("pricingCurrencyTotal")].isNull() && m_pricing_currency_total_isValid;

    m_reservation_order_id_isValid = ::OpenAPI::fromJsonValue(m_reservation_order_id, json[QString("reservationOrderId")]);
    m_reservation_order_id_isSet = !json[QString("reservationOrderId")].isNull() && m_reservation_order_id_isValid;

    m_sku_description_isValid = ::OpenAPI::fromJsonValue(m_sku_description, json[QString("skuDescription")]);
    m_sku_description_isSet = !json[QString("skuDescription")].isNull() && m_sku_description_isValid;

    m_sku_title_isValid = ::OpenAPI::fromJsonValue(m_sku_title, json[QString("skuTitle")]);
    m_sku_title_isSet = !json[QString("skuTitle")].isNull() && m_sku_title_isValid;
}

QString OAICalculatePriceResponseProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICalculatePriceResponseProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_currency_total.isSet()) {
        obj.insert(QString("billingCurrencyTotal"), ::OpenAPI::toJsonValue(m_billing_currency_total));
    }
    if (m_is_billing_partner_managed_isSet) {
        obj.insert(QString("isBillingPartnerManaged"), ::OpenAPI::toJsonValue(m_is_billing_partner_managed));
    }
    if (m_payment_schedule.size() > 0) {
        obj.insert(QString("paymentSchedule"), ::OpenAPI::toJsonValue(m_payment_schedule));
    }
    if (m_pricing_currency_total.isSet()) {
        obj.insert(QString("pricingCurrencyTotal"), ::OpenAPI::toJsonValue(m_pricing_currency_total));
    }
    if (m_reservation_order_id_isSet) {
        obj.insert(QString("reservationOrderId"), ::OpenAPI::toJsonValue(m_reservation_order_id));
    }
    if (m_sku_description_isSet) {
        obj.insert(QString("skuDescription"), ::OpenAPI::toJsonValue(m_sku_description));
    }
    if (m_sku_title_isSet) {
        obj.insert(QString("skuTitle"), ::OpenAPI::toJsonValue(m_sku_title));
    }
    return obj;
}

OAICalculatePriceResponseProperties_billingCurrencyTotal OAICalculatePriceResponseProperties::getBillingCurrencyTotal() const {
    return m_billing_currency_total;
}
void OAICalculatePriceResponseProperties::setBillingCurrencyTotal(const OAICalculatePriceResponseProperties_billingCurrencyTotal &billing_currency_total) {
    m_billing_currency_total = billing_currency_total;
    m_billing_currency_total_isSet = true;
}

bool OAICalculatePriceResponseProperties::is_billing_currency_total_Set() const{
    return m_billing_currency_total_isSet;
}

bool OAICalculatePriceResponseProperties::is_billing_currency_total_Valid() const{
    return m_billing_currency_total_isValid;
}

bool OAICalculatePriceResponseProperties::isIsBillingPartnerManaged() const {
    return m_is_billing_partner_managed;
}
void OAICalculatePriceResponseProperties::setIsBillingPartnerManaged(const bool &is_billing_partner_managed) {
    m_is_billing_partner_managed = is_billing_partner_managed;
    m_is_billing_partner_managed_isSet = true;
}

bool OAICalculatePriceResponseProperties::is_is_billing_partner_managed_Set() const{
    return m_is_billing_partner_managed_isSet;
}

bool OAICalculatePriceResponseProperties::is_is_billing_partner_managed_Valid() const{
    return m_is_billing_partner_managed_isValid;
}

QList<OAIPaymentDetail> OAICalculatePriceResponseProperties::getPaymentSchedule() const {
    return m_payment_schedule;
}
void OAICalculatePriceResponseProperties::setPaymentSchedule(const QList<OAIPaymentDetail> &payment_schedule) {
    m_payment_schedule = payment_schedule;
    m_payment_schedule_isSet = true;
}

bool OAICalculatePriceResponseProperties::is_payment_schedule_Set() const{
    return m_payment_schedule_isSet;
}

bool OAICalculatePriceResponseProperties::is_payment_schedule_Valid() const{
    return m_payment_schedule_isValid;
}

OAICalculatePriceResponseProperties_pricingCurrencyTotal OAICalculatePriceResponseProperties::getPricingCurrencyTotal() const {
    return m_pricing_currency_total;
}
void OAICalculatePriceResponseProperties::setPricingCurrencyTotal(const OAICalculatePriceResponseProperties_pricingCurrencyTotal &pricing_currency_total) {
    m_pricing_currency_total = pricing_currency_total;
    m_pricing_currency_total_isSet = true;
}

bool OAICalculatePriceResponseProperties::is_pricing_currency_total_Set() const{
    return m_pricing_currency_total_isSet;
}

bool OAICalculatePriceResponseProperties::is_pricing_currency_total_Valid() const{
    return m_pricing_currency_total_isValid;
}

QString OAICalculatePriceResponseProperties::getReservationOrderId() const {
    return m_reservation_order_id;
}
void OAICalculatePriceResponseProperties::setReservationOrderId(const QString &reservation_order_id) {
    m_reservation_order_id = reservation_order_id;
    m_reservation_order_id_isSet = true;
}

bool OAICalculatePriceResponseProperties::is_reservation_order_id_Set() const{
    return m_reservation_order_id_isSet;
}

bool OAICalculatePriceResponseProperties::is_reservation_order_id_Valid() const{
    return m_reservation_order_id_isValid;
}

QString OAICalculatePriceResponseProperties::getSkuDescription() const {
    return m_sku_description;
}
void OAICalculatePriceResponseProperties::setSkuDescription(const QString &sku_description) {
    m_sku_description = sku_description;
    m_sku_description_isSet = true;
}

bool OAICalculatePriceResponseProperties::is_sku_description_Set() const{
    return m_sku_description_isSet;
}

bool OAICalculatePriceResponseProperties::is_sku_description_Valid() const{
    return m_sku_description_isValid;
}

QString OAICalculatePriceResponseProperties::getSkuTitle() const {
    return m_sku_title;
}
void OAICalculatePriceResponseProperties::setSkuTitle(const QString &sku_title) {
    m_sku_title = sku_title;
    m_sku_title_isSet = true;
}

bool OAICalculatePriceResponseProperties::is_sku_title_Set() const{
    return m_sku_title_isSet;
}

bool OAICalculatePriceResponseProperties::is_sku_title_Valid() const{
    return m_sku_title_isValid;
}

bool OAICalculatePriceResponseProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_currency_total.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_billing_partner_managed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_schedule.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_currency_total.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reservation_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICalculatePriceResponseProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
