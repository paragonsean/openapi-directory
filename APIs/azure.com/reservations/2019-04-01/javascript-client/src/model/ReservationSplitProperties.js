/**
 * Azure Reservation
 * This API describe Azure Reservation
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReservationSplitProperties model module.
 * @module model/ReservationSplitProperties
 * @version 2019-04-01
 */
class ReservationSplitProperties {
    /**
     * Constructs a new <code>ReservationSplitProperties</code>.
     * @alias module:model/ReservationSplitProperties
     */
    constructor() { 
        
        ReservationSplitProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReservationSplitProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReservationSplitProperties} obj Optional instance to populate.
     * @return {module:model/ReservationSplitProperties} The populated <code>ReservationSplitProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReservationSplitProperties();

            if (data.hasOwnProperty('splitDestinations')) {
                obj['splitDestinations'] = ApiClient.convertToType(data['splitDestinations'], ['String']);
            }
            if (data.hasOwnProperty('splitSource')) {
                obj['splitSource'] = ApiClient.convertToType(data['splitSource'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReservationSplitProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReservationSplitProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['splitDestinations'])) {
            throw new Error("Expected the field `splitDestinations` to be an array in the JSON data but got " + data['splitDestinations']);
        }
        // ensure the json data is a string
        if (data['splitSource'] && !(typeof data['splitSource'] === 'string' || data['splitSource'] instanceof String)) {
            throw new Error("Expected the field `splitSource` to be a primitive type in the JSON string but got " + data['splitSource']);
        }

        return true;
    }


}



/**
 * List of destination Resource Id that are created due to split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 * @member {Array.<String>} splitDestinations
 */
ReservationSplitProperties.prototype['splitDestinations'] = undefined;

/**
 * Resource Id of the Reservation from which this is split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 * @member {String} splitSource
 */
ReservationSplitProperties.prototype['splitSource'] = undefined;






export default ReservationSplitProperties;

