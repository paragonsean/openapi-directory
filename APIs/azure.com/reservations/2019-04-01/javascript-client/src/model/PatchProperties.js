/**
 * Azure Reservation
 * This API describe Azure Reservation
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppliedScopeType from './AppliedScopeType';
import InstanceFlexibility from './InstanceFlexibility';
import PatchPropertiesRenewProperties from './PatchPropertiesRenewProperties';

/**
 * The PatchProperties model module.
 * @module model/PatchProperties
 * @version 2019-04-01
 */
class PatchProperties {
    /**
     * Constructs a new <code>PatchProperties</code>.
     * @alias module:model/PatchProperties
     */
    constructor() { 
        
        PatchProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['renew'] = false;
    }

    /**
     * Constructs a <code>PatchProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchProperties} obj Optional instance to populate.
     * @return {module:model/PatchProperties} The populated <code>PatchProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchProperties();

            if (data.hasOwnProperty('appliedScopeType')) {
                obj['appliedScopeType'] = AppliedScopeType.constructFromObject(data['appliedScopeType']);
            }
            if (data.hasOwnProperty('appliedScopes')) {
                obj['appliedScopes'] = ApiClient.convertToType(data['appliedScopes'], ['String']);
            }
            if (data.hasOwnProperty('instanceFlexibility')) {
                obj['instanceFlexibility'] = InstanceFlexibility.constructFromObject(data['instanceFlexibility']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('renew')) {
                obj['renew'] = ApiClient.convertToType(data['renew'], 'Boolean');
            }
            if (data.hasOwnProperty('renewProperties')) {
                obj['renewProperties'] = PatchPropertiesRenewProperties.constructFromObject(data['renewProperties']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatchProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['appliedScopes'])) {
            throw new Error("Expected the field `appliedScopes` to be an array in the JSON data but got " + data['appliedScopes']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `renewProperties`
        if (data['renewProperties']) { // data not null
          PatchPropertiesRenewProperties.validateJSON(data['renewProperties']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppliedScopeType} appliedScopeType
 */
PatchProperties.prototype['appliedScopeType'] = undefined;

/**
 * List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
 * @member {Array.<String>} appliedScopes
 */
PatchProperties.prototype['appliedScopes'] = undefined;

/**
 * @member {module:model/InstanceFlexibility} instanceFlexibility
 */
PatchProperties.prototype['instanceFlexibility'] = undefined;

/**
 * Name of the Reservation
 * @member {String} name
 */
PatchProperties.prototype['name'] = undefined;

/**
 * Setting this to true will automatically purchase a new reservation on the expiration date time.
 * @member {Boolean} renew
 * @default false
 */
PatchProperties.prototype['renew'] = false;

/**
 * @member {module:model/PatchPropertiesRenewProperties} renewProperties
 */
PatchProperties.prototype['renewProperties'] = undefined;






export default PatchProperties;

