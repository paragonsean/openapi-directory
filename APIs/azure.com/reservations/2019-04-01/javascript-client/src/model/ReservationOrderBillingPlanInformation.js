/**
 * Azure Reservation
 * This API describe Azure Reservation
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentDetail from './PaymentDetail';
import Price from './Price';

/**
 * The ReservationOrderBillingPlanInformation model module.
 * @module model/ReservationOrderBillingPlanInformation
 * @version 2019-04-01
 */
class ReservationOrderBillingPlanInformation {
    /**
     * Constructs a new <code>ReservationOrderBillingPlanInformation</code>.
     * Information describing the type of billing plan for this reservation.
     * @alias module:model/ReservationOrderBillingPlanInformation
     */
    constructor() { 
        
        ReservationOrderBillingPlanInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReservationOrderBillingPlanInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReservationOrderBillingPlanInformation} obj Optional instance to populate.
     * @return {module:model/ReservationOrderBillingPlanInformation} The populated <code>ReservationOrderBillingPlanInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReservationOrderBillingPlanInformation();

            if (data.hasOwnProperty('nextPaymentDueDate')) {
                obj['nextPaymentDueDate'] = ApiClient.convertToType(data['nextPaymentDueDate'], 'Date');
            }
            if (data.hasOwnProperty('pricingCurrencyTotal')) {
                obj['pricingCurrencyTotal'] = Price.constructFromObject(data['pricingCurrencyTotal']);
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('transactions')) {
                obj['transactions'] = ApiClient.convertToType(data['transactions'], [PaymentDetail]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReservationOrderBillingPlanInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReservationOrderBillingPlanInformation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `pricingCurrencyTotal`
        if (data['pricingCurrencyTotal']) { // data not null
          Price.validateJSON(data['pricingCurrencyTotal']);
        }
        if (data['transactions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['transactions'])) {
                throw new Error("Expected the field `transactions` to be an array in the JSON data but got " + data['transactions']);
            }
            // validate the optional field `transactions` (array)
            for (const item of data['transactions']) {
                PaymentDetail.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.
 * @member {Date} nextPaymentDueDate
 */
ReservationOrderBillingPlanInformation.prototype['nextPaymentDueDate'] = undefined;

/**
 * @member {module:model/Price} pricingCurrencyTotal
 */
ReservationOrderBillingPlanInformation.prototype['pricingCurrencyTotal'] = undefined;

/**
 * Date when the billing plan has started.
 * @member {Date} startDate
 */
ReservationOrderBillingPlanInformation.prototype['startDate'] = undefined;

/**
 * @member {Array.<module:model/PaymentDetail>} transactions
 */
ReservationOrderBillingPlanInformation.prototype['transactions'] = undefined;






export default ReservationOrderBillingPlanInformation;

