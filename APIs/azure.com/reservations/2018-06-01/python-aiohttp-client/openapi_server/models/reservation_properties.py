# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.applied_scope_type import AppliedScopeType
from openapi_server.models.extended_status_info import ExtendedStatusInfo
from openapi_server.models.instance_flexibility import InstanceFlexibility
from openapi_server.models.reservation_merge_properties import ReservationMergeProperties
from openapi_server.models.reservation_split_properties import ReservationSplitProperties
from openapi_server.models.reserved_resource_type import ReservedResourceType
from openapi_server import util


class ReservationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, applied_scope_type: AppliedScopeType=None, applied_scopes: List[str]=None, display_name: str=None, effective_date_time: datetime=None, expiry_date: date=None, extended_status_info: ExtendedStatusInfo=None, instance_flexibility: InstanceFlexibility=None, last_updated_date_time: datetime=None, merge_properties: ReservationMergeProperties=None, provisioning_state: str=None, quantity: int=None, reserved_resource_type: ReservedResourceType=None, sku_description: str=None, split_properties: ReservationSplitProperties=None):
        """ReservationProperties - a model defined in OpenAPI

        :param applied_scope_type: The applied_scope_type of this ReservationProperties.
        :param applied_scopes: The applied_scopes of this ReservationProperties.
        :param display_name: The display_name of this ReservationProperties.
        :param effective_date_time: The effective_date_time of this ReservationProperties.
        :param expiry_date: The expiry_date of this ReservationProperties.
        :param extended_status_info: The extended_status_info of this ReservationProperties.
        :param instance_flexibility: The instance_flexibility of this ReservationProperties.
        :param last_updated_date_time: The last_updated_date_time of this ReservationProperties.
        :param merge_properties: The merge_properties of this ReservationProperties.
        :param provisioning_state: The provisioning_state of this ReservationProperties.
        :param quantity: The quantity of this ReservationProperties.
        :param reserved_resource_type: The reserved_resource_type of this ReservationProperties.
        :param sku_description: The sku_description of this ReservationProperties.
        :param split_properties: The split_properties of this ReservationProperties.
        """
        self.openapi_types = {
            'applied_scope_type': AppliedScopeType,
            'applied_scopes': List[str],
            'display_name': str,
            'effective_date_time': datetime,
            'expiry_date': date,
            'extended_status_info': ExtendedStatusInfo,
            'instance_flexibility': InstanceFlexibility,
            'last_updated_date_time': datetime,
            'merge_properties': ReservationMergeProperties,
            'provisioning_state': str,
            'quantity': int,
            'reserved_resource_type': ReservedResourceType,
            'sku_description': str,
            'split_properties': ReservationSplitProperties
        }

        self.attribute_map = {
            'applied_scope_type': 'appliedScopeType',
            'applied_scopes': 'appliedScopes',
            'display_name': 'displayName',
            'effective_date_time': 'effectiveDateTime',
            'expiry_date': 'expiryDate',
            'extended_status_info': 'extendedStatusInfo',
            'instance_flexibility': 'instanceFlexibility',
            'last_updated_date_time': 'lastUpdatedDateTime',
            'merge_properties': 'mergeProperties',
            'provisioning_state': 'provisioningState',
            'quantity': 'quantity',
            'reserved_resource_type': 'reservedResourceType',
            'sku_description': 'skuDescription',
            'split_properties': 'splitProperties'
        }

        self._applied_scope_type = applied_scope_type
        self._applied_scopes = applied_scopes
        self._display_name = display_name
        self._effective_date_time = effective_date_time
        self._expiry_date = expiry_date
        self._extended_status_info = extended_status_info
        self._instance_flexibility = instance_flexibility
        self._last_updated_date_time = last_updated_date_time
        self._merge_properties = merge_properties
        self._provisioning_state = provisioning_state
        self._quantity = quantity
        self._reserved_resource_type = reserved_resource_type
        self._sku_description = sku_description
        self._split_properties = split_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReservationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReservationProperties of this ReservationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def applied_scope_type(self):
        """Gets the applied_scope_type of this ReservationProperties.


        :return: The applied_scope_type of this ReservationProperties.
        :rtype: AppliedScopeType
        """
        return self._applied_scope_type

    @applied_scope_type.setter
    def applied_scope_type(self, applied_scope_type):
        """Sets the applied_scope_type of this ReservationProperties.


        :param applied_scope_type: The applied_scope_type of this ReservationProperties.
        :type applied_scope_type: AppliedScopeType
        """

        self._applied_scope_type = applied_scope_type

    @property
    def applied_scopes(self):
        """Gets the applied_scopes of this ReservationProperties.

        List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.

        :return: The applied_scopes of this ReservationProperties.
        :rtype: List[str]
        """
        return self._applied_scopes

    @applied_scopes.setter
    def applied_scopes(self, applied_scopes):
        """Sets the applied_scopes of this ReservationProperties.

        List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.

        :param applied_scopes: The applied_scopes of this ReservationProperties.
        :type applied_scopes: List[str]
        """

        self._applied_scopes = applied_scopes

    @property
    def display_name(self):
        """Gets the display_name of this ReservationProperties.

        Friendly name for user to easily identify the reservation

        :return: The display_name of this ReservationProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ReservationProperties.

        Friendly name for user to easily identify the reservation

        :param display_name: The display_name of this ReservationProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def effective_date_time(self):
        """Gets the effective_date_time of this ReservationProperties.

        DateTime of the Reservation starting when this version is effective from.

        :return: The effective_date_time of this ReservationProperties.
        :rtype: datetime
        """
        return self._effective_date_time

    @effective_date_time.setter
    def effective_date_time(self, effective_date_time):
        """Sets the effective_date_time of this ReservationProperties.

        DateTime of the Reservation starting when this version is effective from.

        :param effective_date_time: The effective_date_time of this ReservationProperties.
        :type effective_date_time: datetime
        """

        self._effective_date_time = effective_date_time

    @property
    def expiry_date(self):
        """Gets the expiry_date of this ReservationProperties.

        This is the date when the Reservation will expire.

        :return: The expiry_date of this ReservationProperties.
        :rtype: date
        """
        return self._expiry_date

    @expiry_date.setter
    def expiry_date(self, expiry_date):
        """Sets the expiry_date of this ReservationProperties.

        This is the date when the Reservation will expire.

        :param expiry_date: The expiry_date of this ReservationProperties.
        :type expiry_date: date
        """

        self._expiry_date = expiry_date

    @property
    def extended_status_info(self):
        """Gets the extended_status_info of this ReservationProperties.


        :return: The extended_status_info of this ReservationProperties.
        :rtype: ExtendedStatusInfo
        """
        return self._extended_status_info

    @extended_status_info.setter
    def extended_status_info(self, extended_status_info):
        """Sets the extended_status_info of this ReservationProperties.


        :param extended_status_info: The extended_status_info of this ReservationProperties.
        :type extended_status_info: ExtendedStatusInfo
        """

        self._extended_status_info = extended_status_info

    @property
    def instance_flexibility(self):
        """Gets the instance_flexibility of this ReservationProperties.


        :return: The instance_flexibility of this ReservationProperties.
        :rtype: InstanceFlexibility
        """
        return self._instance_flexibility

    @instance_flexibility.setter
    def instance_flexibility(self, instance_flexibility):
        """Sets the instance_flexibility of this ReservationProperties.


        :param instance_flexibility: The instance_flexibility of this ReservationProperties.
        :type instance_flexibility: InstanceFlexibility
        """

        self._instance_flexibility = instance_flexibility

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this ReservationProperties.

        DateTime of the last time the Reservation was updated.

        :return: The last_updated_date_time of this ReservationProperties.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this ReservationProperties.

        DateTime of the last time the Reservation was updated.

        :param last_updated_date_time: The last_updated_date_time of this ReservationProperties.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time

    @property
    def merge_properties(self):
        """Gets the merge_properties of this ReservationProperties.


        :return: The merge_properties of this ReservationProperties.
        :rtype: ReservationMergeProperties
        """
        return self._merge_properties

    @merge_properties.setter
    def merge_properties(self, merge_properties):
        """Sets the merge_properties of this ReservationProperties.


        :param merge_properties: The merge_properties of this ReservationProperties.
        :type merge_properties: ReservationMergeProperties
        """

        self._merge_properties = merge_properties

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this ReservationProperties.

        Current state of the reservation.

        :return: The provisioning_state of this ReservationProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this ReservationProperties.

        Current state of the reservation.

        :param provisioning_state: The provisioning_state of this ReservationProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def quantity(self):
        """Gets the quantity of this ReservationProperties.

        Quantity of the SKUs that are part of the Reservation.

        :return: The quantity of this ReservationProperties.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ReservationProperties.

        Quantity of the SKUs that are part of the Reservation.

        :param quantity: The quantity of this ReservationProperties.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def reserved_resource_type(self):
        """Gets the reserved_resource_type of this ReservationProperties.


        :return: The reserved_resource_type of this ReservationProperties.
        :rtype: ReservedResourceType
        """
        return self._reserved_resource_type

    @reserved_resource_type.setter
    def reserved_resource_type(self, reserved_resource_type):
        """Sets the reserved_resource_type of this ReservationProperties.


        :param reserved_resource_type: The reserved_resource_type of this ReservationProperties.
        :type reserved_resource_type: ReservedResourceType
        """

        self._reserved_resource_type = reserved_resource_type

    @property
    def sku_description(self):
        """Gets the sku_description of this ReservationProperties.

        Description of the SKU in english.

        :return: The sku_description of this ReservationProperties.
        :rtype: str
        """
        return self._sku_description

    @sku_description.setter
    def sku_description(self, sku_description):
        """Sets the sku_description of this ReservationProperties.

        Description of the SKU in english.

        :param sku_description: The sku_description of this ReservationProperties.
        :type sku_description: str
        """

        self._sku_description = sku_description

    @property
    def split_properties(self):
        """Gets the split_properties of this ReservationProperties.


        :return: The split_properties of this ReservationProperties.
        :rtype: ReservationSplitProperties
        """
        return self._split_properties

    @split_properties.setter
    def split_properties(self, split_properties):
        """Sets the split_properties of this ReservationProperties.


        :param split_properties: The split_properties of this ReservationProperties.
        :type split_properties: ReservationSplitProperties
        """

        self._split_properties = split_properties
