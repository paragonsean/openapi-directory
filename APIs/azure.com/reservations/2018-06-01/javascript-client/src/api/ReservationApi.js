/**
 * Azure Reservation
 * This API describe Azure Reservation
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import Patch from '../model/Patch';
import ReservationList from '../model/ReservationList';
import ReservationOrderList from '../model/ReservationOrderList';
import ReservationOrderResponse from '../model/ReservationOrderResponse';
import ReservationResponse from '../model/ReservationResponse';

/**
* Reservation service.
* @module api/ReservationApi
* @version 2018-06-01
*/
export default class ReservationApi {

    /**
    * Constructs a new ReservationApi. 
    * @alias module:api/ReservationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the reservationGet operation.
     * @callback module:api/ReservationApi~reservationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get `Reservation` details.
     * Get specific `Reservation` details.
     * @param {String} reservationId Id of the Reservation Item
     * @param {String} reservationOrderId Order Id of the reservation 
     * @param {String} apiVersion Supported version.
     * @param {module:api/ReservationApi~reservationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationResponse}
     */
    reservationGet(reservationId, reservationOrderId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'reservationId' is set
      if (reservationId === undefined || reservationId === null) {
        throw new Error("Missing the required parameter 'reservationId' when calling reservationGet");
      }
      // verify the required parameter 'reservationOrderId' is set
      if (reservationOrderId === undefined || reservationOrderId === null) {
        throw new Error("Missing the required parameter 'reservationOrderId' when calling reservationGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationGet");
      }

      let pathParams = {
        'reservationId': reservationId,
        'reservationOrderId': reservationOrderId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReservationResponse;
      return this.apiClient.callApi(
        '/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reservationList operation.
     * @callback module:api/ReservationApi~reservationListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get `Reservation`s in a given reservation Order
     * List `Reservation`s within a single `ReservationOrder`.
     * @param {String} reservationOrderId Order Id of the reservation 
     * @param {String} apiVersion Supported version.
     * @param {module:api/ReservationApi~reservationListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationList}
     */
    reservationList(reservationOrderId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'reservationOrderId' is set
      if (reservationOrderId === undefined || reservationOrderId === null) {
        throw new Error("Missing the required parameter 'reservationOrderId' when calling reservationList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationList");
      }

      let pathParams = {
        'reservationOrderId': reservationOrderId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReservationList;
      return this.apiClient.callApi(
        '/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reservationListRevisions operation.
     * @callback module:api/ReservationApi~reservationListRevisionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get `Reservation` revisions.
     * List of all the revisions for the `Reservation`. 
     * @param {String} reservationId Id of the Reservation Item
     * @param {String} reservationOrderId Order Id of the reservation 
     * @param {String} apiVersion Supported version.
     * @param {module:api/ReservationApi~reservationListRevisionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationList}
     */
    reservationListRevisions(reservationId, reservationOrderId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'reservationId' is set
      if (reservationId === undefined || reservationId === null) {
        throw new Error("Missing the required parameter 'reservationId' when calling reservationListRevisions");
      }
      // verify the required parameter 'reservationOrderId' is set
      if (reservationOrderId === undefined || reservationOrderId === null) {
        throw new Error("Missing the required parameter 'reservationOrderId' when calling reservationListRevisions");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationListRevisions");
      }

      let pathParams = {
        'reservationId': reservationId,
        'reservationOrderId': reservationOrderId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReservationList;
      return this.apiClient.callApi(
        '/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/revisions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reservationOrderGet operation.
     * @callback module:api/ReservationApi~reservationOrderGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationOrderResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a specific `ReservationOrder`.
     * Get the details of the `ReservationOrder`.
     * @param {String} reservationOrderId Order Id of the reservation 
     * @param {String} apiVersion Supported version.
     * @param {module:api/ReservationApi~reservationOrderGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationOrderResponse}
     */
    reservationOrderGet(reservationOrderId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'reservationOrderId' is set
      if (reservationOrderId === undefined || reservationOrderId === null) {
        throw new Error("Missing the required parameter 'reservationOrderId' when calling reservationOrderGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationOrderGet");
      }

      let pathParams = {
        'reservationOrderId': reservationOrderId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReservationOrderResponse;
      return this.apiClient.callApi(
        '/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reservationOrderList operation.
     * @callback module:api/ReservationApi~reservationOrderListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationOrderList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all `ReservationOrder`s.
     * List of all the `ReservationOrder`s that the user has access to in the current tenant.
     * @param {String} apiVersion Supported version.
     * @param {module:api/ReservationApi~reservationOrderListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationOrderList}
     */
    reservationOrderList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationOrderList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReservationOrderList;
      return this.apiClient.callApi(
        '/providers/Microsoft.Capacity/reservationOrders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reservationUpdate operation.
     * @callback module:api/ReservationApi~reservationUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReservationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a `Reservation`.
     * Updates the applied scopes of the `Reservation`.
     * @param {String} reservationOrderId Order Id of the reservation 
     * @param {String} reservationId Id of the Reservation Item
     * @param {String} apiVersion Supported version.
     * @param {module:model/Patch} parameters Information needed to patch a reservation item
     * @param {module:api/ReservationApi~reservationUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReservationResponse}
     */
    reservationUpdate(reservationOrderId, reservationId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'reservationOrderId' is set
      if (reservationOrderId === undefined || reservationOrderId === null) {
        throw new Error("Missing the required parameter 'reservationOrderId' when calling reservationUpdate");
      }
      // verify the required parameter 'reservationId' is set
      if (reservationId === undefined || reservationId === null) {
        throw new Error("Missing the required parameter 'reservationId' when calling reservationUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling reservationUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling reservationUpdate");
      }

      let pathParams = {
        'reservationOrderId': reservationOrderId,
        'reservationId': reservationId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReservationResponse;
      return this.apiClient.callApi(
        '/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
