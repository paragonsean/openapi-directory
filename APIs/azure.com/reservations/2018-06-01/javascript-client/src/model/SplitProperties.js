/**
 * Azure Reservation
 * This API describe Azure Reservation
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SplitProperties model module.
 * @module model/SplitProperties
 * @version 2018-06-01
 */
class SplitProperties {
    /**
     * Constructs a new <code>SplitProperties</code>.
     * @alias module:model/SplitProperties
     */
    constructor() { 
        
        SplitProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SplitProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SplitProperties} obj Optional instance to populate.
     * @return {module:model/SplitProperties} The populated <code>SplitProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SplitProperties();

            if (data.hasOwnProperty('quantities')) {
                obj['quantities'] = ApiClient.convertToType(data['quantities'], ['Number']);
            }
            if (data.hasOwnProperty('reservationId')) {
                obj['reservationId'] = ApiClient.convertToType(data['reservationId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SplitProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SplitProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['quantities'])) {
            throw new Error("Expected the field `quantities` to be an array in the JSON data but got " + data['quantities']);
        }
        // ensure the json data is a string
        if (data['reservationId'] && !(typeof data['reservationId'] === 'string' || data['reservationId'] instanceof String)) {
            throw new Error("Expected the field `reservationId` to be a primitive type in the JSON string but got " + data['reservationId']);
        }

        return true;
    }


}



/**
 * List of the quantities in the new reservations to create.
 * @member {Array.<Number>} quantities
 */
SplitProperties.prototype['quantities'] = undefined;

/**
 * Resource id of the reservation to be split. Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 * @member {String} reservationId
 */
SplitProperties.prototype['reservationId'] = undefined;






export default SplitProperties;

