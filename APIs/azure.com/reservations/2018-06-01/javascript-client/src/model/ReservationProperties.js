/**
 * Azure Reservation
 * This API describe Azure Reservation
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppliedScopeType from './AppliedScopeType';
import ExtendedStatusInfo from './ExtendedStatusInfo';
import InstanceFlexibility from './InstanceFlexibility';
import ReservationMergeProperties from './ReservationMergeProperties';
import ReservationSplitProperties from './ReservationSplitProperties';
import ReservedResourceType from './ReservedResourceType';

/**
 * The ReservationProperties model module.
 * @module model/ReservationProperties
 * @version 2018-06-01
 */
class ReservationProperties {
    /**
     * Constructs a new <code>ReservationProperties</code>.
     * @alias module:model/ReservationProperties
     */
    constructor() { 
        
        ReservationProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReservationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReservationProperties} obj Optional instance to populate.
     * @return {module:model/ReservationProperties} The populated <code>ReservationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReservationProperties();

            if (data.hasOwnProperty('appliedScopeType')) {
                obj['appliedScopeType'] = AppliedScopeType.constructFromObject(data['appliedScopeType']);
            }
            if (data.hasOwnProperty('appliedScopes')) {
                obj['appliedScopes'] = ApiClient.convertToType(data['appliedScopes'], ['String']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('effectiveDateTime')) {
                obj['effectiveDateTime'] = ApiClient.convertToType(data['effectiveDateTime'], 'Date');
            }
            if (data.hasOwnProperty('expiryDate')) {
                obj['expiryDate'] = ApiClient.convertToType(data['expiryDate'], 'Date');
            }
            if (data.hasOwnProperty('extendedStatusInfo')) {
                obj['extendedStatusInfo'] = ExtendedStatusInfo.constructFromObject(data['extendedStatusInfo']);
            }
            if (data.hasOwnProperty('instanceFlexibility')) {
                obj['instanceFlexibility'] = InstanceFlexibility.constructFromObject(data['instanceFlexibility']);
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('mergeProperties')) {
                obj['mergeProperties'] = ReservationMergeProperties.constructFromObject(data['mergeProperties']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('reservedResourceType')) {
                obj['reservedResourceType'] = ReservedResourceType.constructFromObject(data['reservedResourceType']);
            }
            if (data.hasOwnProperty('skuDescription')) {
                obj['skuDescription'] = ApiClient.convertToType(data['skuDescription'], 'String');
            }
            if (data.hasOwnProperty('splitProperties')) {
                obj['splitProperties'] = ReservationSplitProperties.constructFromObject(data['splitProperties']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReservationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReservationProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['appliedScopes'])) {
            throw new Error("Expected the field `appliedScopes` to be an array in the JSON data but got " + data['appliedScopes']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `extendedStatusInfo`
        if (data['extendedStatusInfo']) { // data not null
          ExtendedStatusInfo.validateJSON(data['extendedStatusInfo']);
        }
        // validate the optional field `mergeProperties`
        if (data['mergeProperties']) { // data not null
          ReservationMergeProperties.validateJSON(data['mergeProperties']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['skuDescription'] && !(typeof data['skuDescription'] === 'string' || data['skuDescription'] instanceof String)) {
            throw new Error("Expected the field `skuDescription` to be a primitive type in the JSON string but got " + data['skuDescription']);
        }
        // validate the optional field `splitProperties`
        if (data['splitProperties']) { // data not null
          ReservationSplitProperties.validateJSON(data['splitProperties']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppliedScopeType} appliedScopeType
 */
ReservationProperties.prototype['appliedScopeType'] = undefined;

/**
 * List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
 * @member {Array.<String>} appliedScopes
 */
ReservationProperties.prototype['appliedScopes'] = undefined;

/**
 * Friendly name for user to easily identify the reservation
 * @member {String} displayName
 */
ReservationProperties.prototype['displayName'] = undefined;

/**
 * DateTime of the Reservation starting when this version is effective from.
 * @member {Date} effectiveDateTime
 */
ReservationProperties.prototype['effectiveDateTime'] = undefined;

/**
 * This is the date when the Reservation will expire.
 * @member {Date} expiryDate
 */
ReservationProperties.prototype['expiryDate'] = undefined;

/**
 * @member {module:model/ExtendedStatusInfo} extendedStatusInfo
 */
ReservationProperties.prototype['extendedStatusInfo'] = undefined;

/**
 * @member {module:model/InstanceFlexibility} instanceFlexibility
 */
ReservationProperties.prototype['instanceFlexibility'] = undefined;

/**
 * DateTime of the last time the Reservation was updated.
 * @member {Date} lastUpdatedDateTime
 */
ReservationProperties.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {module:model/ReservationMergeProperties} mergeProperties
 */
ReservationProperties.prototype['mergeProperties'] = undefined;

/**
 * Current state of the reservation.
 * @member {String} provisioningState
 */
ReservationProperties.prototype['provisioningState'] = undefined;

/**
 * Quantity of the SKUs that are part of the Reservation.
 * @member {Number} quantity
 */
ReservationProperties.prototype['quantity'] = undefined;

/**
 * @member {module:model/ReservedResourceType} reservedResourceType
 */
ReservationProperties.prototype['reservedResourceType'] = undefined;

/**
 * Description of the SKU in english.
 * @member {String} skuDescription
 */
ReservationProperties.prototype['skuDescription'] = undefined;

/**
 * @member {module:model/ReservationSplitProperties} splitProperties
 */
ReservationProperties.prototype['splitProperties'] = undefined;






export default ReservationProperties;

