/**
 * Azure Reservation
 * This API describe Azure Reservation
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReservationStatusCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReservationStatusCode::OAIReservationStatusCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReservationStatusCode::OAIReservationStatusCode() {
    this->initializeModel();
}

OAIReservationStatusCode::~OAIReservationStatusCode() {}

void OAIReservationStatusCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIReservationStatusCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIReservationStatusCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationStatusCode::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Pending", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationStatusCode::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Active", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationStatusCode::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PurchaseError", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationStatusCode::PURCHASEERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PaymentInstrumentError", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationStatusCode::PAYMENTINSTRUMENTERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Split", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationStatusCode::SPLIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Merged", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationStatusCode::MERGED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Expired", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationStatusCode::EXPIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Succeeded", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationStatusCode::SUCCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIReservationStatusCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIReservationStatusCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIReservationStatusCode::NONE:
            val = "None";
            break;
        case eOAIReservationStatusCode::PENDING:
            val = "Pending";
            break;
        case eOAIReservationStatusCode::ACTIVE:
            val = "Active";
            break;
        case eOAIReservationStatusCode::PURCHASEERROR:
            val = "PurchaseError";
            break;
        case eOAIReservationStatusCode::PAYMENTINSTRUMENTERROR:
            val = "PaymentInstrumentError";
            break;
        case eOAIReservationStatusCode::SPLIT:
            val = "Split";
            break;
        case eOAIReservationStatusCode::MERGED:
            val = "Merged";
            break;
        case eOAIReservationStatusCode::EXPIRED:
            val = "Expired";
            break;
        case eOAIReservationStatusCode::SUCCEEDED:
            val = "Succeeded";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIReservationStatusCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIReservationStatusCode::eOAIReservationStatusCode OAIReservationStatusCode::getValue() const {
    return m_value;
}

void OAIReservationStatusCode::setValue(const OAIReservationStatusCode::eOAIReservationStatusCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIReservationStatusCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIReservationStatusCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
