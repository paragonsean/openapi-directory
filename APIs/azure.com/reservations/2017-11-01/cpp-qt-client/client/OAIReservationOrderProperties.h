/**
 * Azure Reservation
 * This API describe Azure Reservation
 *
 * The version of the OpenAPI document: 2017-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReservationOrderProperties.h
 *
 * 
 */

#ifndef OAIReservationOrderProperties_H
#define OAIReservationOrderProperties_H

#include <QJsonObject>

#include "OAIProvisioningState.h"
#include "OAIReservationResponse.h"
#include "OAIReservationTerm.h"
#include <QDate>
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReservationResponse;

class OAIReservationOrderProperties : public OAIObject {
public:
    OAIReservationOrderProperties();
    OAIReservationOrderProperties(QString json);
    ~OAIReservationOrderProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedDateTime() const;
    void setCreatedDateTime(const QDateTime &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QDate getExpiryDate() const;
    void setExpiryDate(const QDate &expiry_date);
    bool is_expiry_date_Set() const;
    bool is_expiry_date_Valid() const;

    qint32 getOriginalQuantity() const;
    void setOriginalQuantity(const qint32 &original_quantity);
    bool is_original_quantity_Set() const;
    bool is_original_quantity_Valid() const;

    OAIProvisioningState getProvisioningState() const;
    void setProvisioningState(const OAIProvisioningState &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QDateTime getRequestDateTime() const;
    void setRequestDateTime(const QDateTime &request_date_time);
    bool is_request_date_time_Set() const;
    bool is_request_date_time_Valid() const;

    QList<OAIReservationResponse> getReservations() const;
    void setReservations(const QList<OAIReservationResponse> &reservations);
    bool is_reservations_Set() const;
    bool is_reservations_Valid() const;

    OAIReservationTerm getTerm() const;
    void setTerm(const OAIReservationTerm &term);
    bool is_term_Set() const;
    bool is_term_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QDate m_expiry_date;
    bool m_expiry_date_isSet;
    bool m_expiry_date_isValid;

    qint32 m_original_quantity;
    bool m_original_quantity_isSet;
    bool m_original_quantity_isValid;

    OAIProvisioningState m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QDateTime m_request_date_time;
    bool m_request_date_time_isSet;
    bool m_request_date_time_isValid;

    QList<OAIReservationResponse> m_reservations;
    bool m_reservations_isSet;
    bool m_reservations_isValid;

    OAIReservationTerm m_term;
    bool m_term_isSet;
    bool m_term_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReservationOrderProperties)

#endif // OAIReservationOrderProperties_H
