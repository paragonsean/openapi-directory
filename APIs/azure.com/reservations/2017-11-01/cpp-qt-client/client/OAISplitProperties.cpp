/**
 * Azure Reservation
 * This API describe Azure Reservation
 *
 * The version of the OpenAPI document: 2017-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISplitProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISplitProperties::OAISplitProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISplitProperties::OAISplitProperties() {
    this->initializeModel();
}

OAISplitProperties::~OAISplitProperties() {}

void OAISplitProperties::initializeModel() {

    m_quantities_isSet = false;
    m_quantities_isValid = false;

    m_reservation_id_isSet = false;
    m_reservation_id_isValid = false;
}

void OAISplitProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISplitProperties::fromJsonObject(QJsonObject json) {

    m_quantities_isValid = ::OpenAPI::fromJsonValue(m_quantities, json[QString("quantities")]);
    m_quantities_isSet = !json[QString("quantities")].isNull() && m_quantities_isValid;

    m_reservation_id_isValid = ::OpenAPI::fromJsonValue(m_reservation_id, json[QString("reservationId")]);
    m_reservation_id_isSet = !json[QString("reservationId")].isNull() && m_reservation_id_isValid;
}

QString OAISplitProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISplitProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_quantities.size() > 0) {
        obj.insert(QString("quantities"), ::OpenAPI::toJsonValue(m_quantities));
    }
    if (m_reservation_id_isSet) {
        obj.insert(QString("reservationId"), ::OpenAPI::toJsonValue(m_reservation_id));
    }
    return obj;
}

QList<qint32> OAISplitProperties::getQuantities() const {
    return m_quantities;
}
void OAISplitProperties::setQuantities(const QList<qint32> &quantities) {
    m_quantities = quantities;
    m_quantities_isSet = true;
}

bool OAISplitProperties::is_quantities_Set() const{
    return m_quantities_isSet;
}

bool OAISplitProperties::is_quantities_Valid() const{
    return m_quantities_isValid;
}

QString OAISplitProperties::getReservationId() const {
    return m_reservation_id;
}
void OAISplitProperties::setReservationId(const QString &reservation_id) {
    m_reservation_id = reservation_id;
    m_reservation_id_isSet = true;
}

bool OAISplitProperties::is_reservation_id_Set() const{
    return m_reservation_id_isSet;
}

bool OAISplitProperties::is_reservation_id_Valid() const{
    return m_reservation_id_isValid;
}

bool OAISplitProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_quantities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_reservation_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISplitProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
