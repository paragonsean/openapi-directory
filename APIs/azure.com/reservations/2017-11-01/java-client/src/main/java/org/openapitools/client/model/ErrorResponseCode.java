/*
 * Azure Reservation
 * This API describe Azure Reservation
 *
 * The version of the OpenAPI document: 2017-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ErrorResponseCode
 */
@JsonAdapter(ErrorResponseCode.Adapter.class)
public enum ErrorResponseCode {
  
  NOT_SPECIFIED("NotSpecified"),
  
  INTERNAL_SERVER_ERROR("InternalServerError"),
  
  SERVER_TIMEOUT("ServerTimeout"),
  
  AUTHORIZATION_FAILED("AuthorizationFailed"),
  
  BAD_REQUEST("BadRequest"),
  
  CLIENT_CERTIFICATE_THUMBPRINT_NOT_SET("ClientCertificateThumbprintNotSet"),
  
  INVALID_REQUEST_CONTENT("InvalidRequestContent"),
  
  OPERATION_FAILED("OperationFailed"),
  
  HTTP_METHOD_NOT_SUPPORTED("HttpMethodNotSupported"),
  
  INVALID_REQUEST_URI("InvalidRequestUri"),
  
  MISSING_TENANT_ID("MissingTenantId"),
  
  INVALID_TENANT_ID("InvalidTenantId"),
  
  INVALID_RESERVATION_ORDER_ID("InvalidReservationOrderId"),
  
  INVALID_RESERVATION_ID("InvalidReservationId"),
  
  RESERVATION_ID_NOT_IN_RESERVATION_ORDER("ReservationIdNotInReservationOrder"),
  
  RESERVATION_ORDER_NOT_FOUND("ReservationOrderNotFound"),
  
  INVALID_SUBSCRIPTION_ID("InvalidSubscriptionId"),
  
  INVALID_ACCESS_TOKEN("InvalidAccessToken"),
  
  INVALID_LOCATION_ID("InvalidLocationId"),
  
  UNAUTHENTICATED_REQUESTS_THROTTLED("UnauthenticatedRequestsThrottled"),
  
  INVALID_HEALTH_CHECK_TYPE("InvalidHealthCheckType"),
  
  FORBIDDEN("Forbidden"),
  
  BILLING_SCOPE_ID_CANNOT_BE_CHANGED("BillingScopeIdCannotBeChanged"),
  
  APPLIED_SCOPES_NOT_ASSOCIATED_WITH_COMMERCE_ACCOUNT("AppliedScopesNotAssociatedWithCommerceAccount"),
  
  APPLIED_SCOPES_SAME_AS_EXISTING("AppliedScopesSameAsExisting"),
  
  ROLE_ASSIGNMENT_CREATION_FAILED("RoleAssignmentCreationFailed"),
  
  RESERVATION_ORDER_CREATION_FAILED("ReservationOrderCreationFailed"),
  
  RESERVATION_ORDER_NOT_ENABLED("ReservationOrderNotEnabled"),
  
  CAPACITY_UPDATE_SCOPES_FAILED("CapacityUpdateScopesFailed"),
  
  UNSUPPORTED_RESERVATION_TERM("UnsupportedReservationTerm"),
  
  RESERVATION_ORDER_ID_ALREADY_EXISTS("ReservationOrderIdAlreadyExists"),
  
  RISK_CHECK_FAILED("RiskCheckFailed"),
  
  CREATE_QUOTE_FAILED("CreateQuoteFailed"),
  
  ACTIVATE_QUOTE_FAILED("ActivateQuoteFailed"),
  
  NONSUPPORTED_ACCOUNT_ID("NonsupportedAccountId"),
  
  PAYMENT_INSTRUMENT_NOT_FOUND("PaymentInstrumentNotFound"),
  
  MISSING_APPLIED_SCOPES_FOR_SINGLE("MissingAppliedScopesForSingle"),
  
  NO_VALID_RESERVATIONS_TO_RE_RATE("NoValidReservationsToReRate"),
  
  RE_RATE_ONLY_ALLOWED_FOR_EA("ReRateOnlyAllowedForEA"),
  
  OPERATION_CANNOT_BE_PERFORMED_IN_CURRENT_STATE("OperationCannotBePerformedInCurrentState"),
  
  INVALID_SINGLE_APPLIED_SCOPES_COUNT("InvalidSingleAppliedScopesCount"),
  
  INVALID_FULFILLMENT_REQUEST_PARAMETERS("InvalidFulfillmentRequestParameters"),
  
  NOT_SUPPORTED_COUNTRY("NotSupportedCountry"),
  
  INVALID_REFUND_QUANTITY("InvalidRefundQuantity"),
  
  PURCHASE_ERROR("PurchaseError"),
  
  BILLING_CUSTOMER_INPUT_ERROR("BillingCustomerInputError"),
  
  BILLING_PAYMENT_INSTRUMENT_SOFT_ERROR("BillingPaymentInstrumentSoftError"),
  
  BILLING_PAYMENT_INSTRUMENT_HARD_ERROR("BillingPaymentInstrumentHardError"),
  
  BILLING_TRANSIENT_ERROR("BillingTransientError"),
  
  BILLING_ERROR("BillingError"),
  
  FULFILLMENT_CONFIGURATION_ERROR("FulfillmentConfigurationError"),
  
  FULFILLMENT_OUT_OF_STOCK_ERROR("FulfillmentOutOfStockError"),
  
  FULFILLMENT_TRANSIENT_ERROR("FulfillmentTransientError"),
  
  FULFILLMENT_ERROR("FulfillmentError"),
  
  CALCULATE_PRICE_FAILED("CalculatePriceFailed");

  private String value;

  ErrorResponseCode(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ErrorResponseCode fromValue(String value) {
    for (ErrorResponseCode b : ErrorResponseCode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ErrorResponseCode> {
    @Override
    public void write(final JsonWriter jsonWriter, final ErrorResponseCode enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ErrorResponseCode read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ErrorResponseCode.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ErrorResponseCode.fromValue(value);
  }
}

