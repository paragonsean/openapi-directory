# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Location(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    WESTUS = 'westus'
    EASTUS = 'eastus'
    EASTUS2 = 'eastus2'
    NORTHCENTRALUS = 'northcentralus'
    WESTUS2 = 'westus2'
    SOUTHCENTRALUS = 'southcentralus'
    CENTRALUS = 'centralus'
    WESTEUROPE = 'westeurope'
    NORTHEUROPE = 'northeurope'
    EASTASIA = 'eastasia'
    SOUTHEASTASIA = 'southeastasia'
    JAPANEAST = 'japaneast'
    JAPANWEST = 'japanwest'
    BRAZILSOUTH = 'brazilsouth'
    AUSTRALIAEAST = 'australiaeast'
    AUSTRALIASOUTHEAST = 'australiasoutheast'
    SOUTHINDIA = 'southindia'
    WESTINDIA = 'westindia'
    CENTRALINDIA = 'centralindia'
    CANADACENTRAL = 'canadacentral'
    CANADAEAST = 'canadaeast'
    UKSOUTH = 'uksouth'
    WESTCENTRALUS = 'westcentralus'
    UKWEST = 'ukwest'

    def __init__(self):
        """Location - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Location':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Location of this Location.
        """
        return util.deserialize_model(dikt, cls)
