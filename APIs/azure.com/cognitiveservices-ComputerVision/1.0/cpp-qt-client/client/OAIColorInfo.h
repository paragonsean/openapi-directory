/**
 * Computer Vision
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIColorInfo.h
 *
 * An object providing additional metadata describing color attributes.
 */

#ifndef OAIColorInfo_H
#define OAIColorInfo_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIColorInfo : public OAIObject {
public:
    OAIColorInfo();
    OAIColorInfo(QString json);
    ~OAIColorInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccentColor() const;
    void setAccentColor(const QString &accent_color);
    bool is_accent_color_Set() const;
    bool is_accent_color_Valid() const;

    QString getDominantColorBackground() const;
    void setDominantColorBackground(const QString &dominant_color_background);
    bool is_dominant_color_background_Set() const;
    bool is_dominant_color_background_Valid() const;

    QString getDominantColorForeground() const;
    void setDominantColorForeground(const QString &dominant_color_foreground);
    bool is_dominant_color_foreground_Set() const;
    bool is_dominant_color_foreground_Valid() const;

    QList<QString> getDominantColors() const;
    void setDominantColors(const QList<QString> &dominant_colors);
    bool is_dominant_colors_Set() const;
    bool is_dominant_colors_Valid() const;

    bool isIsBwImg() const;
    void setIsBwImg(const bool &is_bw_img);
    bool is_is_bw_img_Set() const;
    bool is_is_bw_img_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accent_color;
    bool m_accent_color_isSet;
    bool m_accent_color_isValid;

    QString m_dominant_color_background;
    bool m_dominant_color_background_isSet;
    bool m_dominant_color_background_isValid;

    QString m_dominant_color_foreground;
    bool m_dominant_color_foreground_isSet;
    bool m_dominant_color_foreground_isValid;

    QList<QString> m_dominant_colors;
    bool m_dominant_colors_isSet;
    bool m_dominant_colors_isValid;

    bool m_is_bw_img;
    bool m_is_bw_img_isSet;
    bool m_is_bw_img_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIColorInfo)

#endif // OAIColorInfo_H
