/**
 * Computer Vision
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageType.h
 *
 * An object providing possible image types and matching confidence levels.
 */

#ifndef OAIImageType_H
#define OAIImageType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImageType : public OAIObject {
public:
    OAIImageType();
    OAIImageType(QString json);
    ~OAIImageType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getClipArtType() const;
    void setClipArtType(const double &clip_art_type);
    bool is_clip_art_type_Set() const;
    bool is_clip_art_type_Valid() const;

    double getLineDrawingType() const;
    void setLineDrawingType(const double &line_drawing_type);
    bool is_line_drawing_type_Set() const;
    bool is_line_drawing_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_clip_art_type;
    bool m_clip_art_type_isSet;
    bool m_clip_art_type_isValid;

    double m_line_drawing_type;
    bool m_line_drawing_type_isSet;
    bool m_line_drawing_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageType)

#endif // OAIImageType_H
