/**
 * Computer Vision
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICelebritiesModel.h
 *
 * An object describing possible celebrity identification.
 */

#ifndef OAICelebritiesModel_H
#define OAICelebritiesModel_H

#include <QJsonObject>

#include "OAIFaceRectangle.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFaceRectangle;

class OAICelebritiesModel : public OAIObject {
public:
    OAICelebritiesModel();
    OAICelebritiesModel(QString json);
    ~OAICelebritiesModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getConfidence() const;
    void setConfidence(const double &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    OAIFaceRectangle getFaceRectangle() const;
    void setFaceRectangle(const OAIFaceRectangle &face_rectangle);
    bool is_face_rectangle_Set() const;
    bool is_face_rectangle_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    OAIFaceRectangle m_face_rectangle;
    bool m_face_rectangle_isSet;
    bool m_face_rectangle_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICelebritiesModel)

#endif // OAICelebritiesModel_H
