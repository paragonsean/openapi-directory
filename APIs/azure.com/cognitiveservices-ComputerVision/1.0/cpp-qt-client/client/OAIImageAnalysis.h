/**
 * Computer Vision
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageAnalysis.h
 *
 * Result of AnalyzeImage operation.
 */

#ifndef OAIImageAnalysis_H
#define OAIImageAnalysis_H

#include <QJsonObject>

#include "OAIAdultInfo.h"
#include "OAICategory.h"
#include "OAIColorInfo.h"
#include "OAIFaceDescription.h"
#include "OAIImageDescriptionDetails.h"
#include "OAIImageMetadata.h"
#include "OAIImageTag.h"
#include "OAIImageType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdultInfo;
class OAICategory;
class OAIColorInfo;
class OAIImageDescriptionDetails;
class OAIFaceDescription;
class OAIImageType;
class OAIImageMetadata;
class OAIImageTag;

class OAIImageAnalysis : public OAIObject {
public:
    OAIImageAnalysis();
    OAIImageAnalysis(QString json);
    ~OAIImageAnalysis() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAdultInfo getAdult() const;
    void setAdult(const OAIAdultInfo &adult);
    bool is_adult_Set() const;
    bool is_adult_Valid() const;

    QList<OAICategory> getCategories() const;
    void setCategories(const QList<OAICategory> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    OAIColorInfo getColor() const;
    void setColor(const OAIColorInfo &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    OAIImageDescriptionDetails getDescription() const;
    void setDescription(const OAIImageDescriptionDetails &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIFaceDescription> getFaces() const;
    void setFaces(const QList<OAIFaceDescription> &faces);
    bool is_faces_Set() const;
    bool is_faces_Valid() const;

    OAIImageType getImageType() const;
    void setImageType(const OAIImageType &image_type);
    bool is_image_type_Set() const;
    bool is_image_type_Valid() const;

    OAIImageMetadata getMetadata() const;
    void setMetadata(const OAIImageMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QList<OAIImageTag> getTags() const;
    void setTags(const QList<OAIImageTag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAdultInfo m_adult;
    bool m_adult_isSet;
    bool m_adult_isValid;

    QList<OAICategory> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    OAIColorInfo m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    OAIImageDescriptionDetails m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIFaceDescription> m_faces;
    bool m_faces_isSet;
    bool m_faces_isValid;

    OAIImageType m_image_type;
    bool m_image_type_isSet;
    bool m_image_type_isValid;

    OAIImageMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QList<OAIImageTag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageAnalysis)

#endif // OAIImageAnalysis_H
