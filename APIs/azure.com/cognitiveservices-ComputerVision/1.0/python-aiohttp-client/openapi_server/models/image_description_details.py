# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_caption import ImageCaption
from openapi_server.models.image_metadata import ImageMetadata
from openapi_server import util


class ImageDescriptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, captions: List[ImageCaption]=None, metadata: ImageMetadata=None, request_id: str=None, tags: List[str]=None):
        """ImageDescriptionDetails - a model defined in OpenAPI

        :param captions: The captions of this ImageDescriptionDetails.
        :param metadata: The metadata of this ImageDescriptionDetails.
        :param request_id: The request_id of this ImageDescriptionDetails.
        :param tags: The tags of this ImageDescriptionDetails.
        """
        self.openapi_types = {
            'captions': List[ImageCaption],
            'metadata': ImageMetadata,
            'request_id': str,
            'tags': List[str]
        }

        self.attribute_map = {
            'captions': 'captions',
            'metadata': 'metadata',
            'request_id': 'requestId',
            'tags': 'tags'
        }

        self._captions = captions
        self._metadata = metadata
        self._request_id = request_id
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageDescriptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageDescriptionDetails of this ImageDescriptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def captions(self):
        """Gets the captions of this ImageDescriptionDetails.

        A list of captions, sorted by confidence level.

        :return: The captions of this ImageDescriptionDetails.
        :rtype: List[ImageCaption]
        """
        return self._captions

    @captions.setter
    def captions(self, captions):
        """Sets the captions of this ImageDescriptionDetails.

        A list of captions, sorted by confidence level.

        :param captions: The captions of this ImageDescriptionDetails.
        :type captions: List[ImageCaption]
        """

        self._captions = captions

    @property
    def metadata(self):
        """Gets the metadata of this ImageDescriptionDetails.


        :return: The metadata of this ImageDescriptionDetails.
        :rtype: ImageMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ImageDescriptionDetails.


        :param metadata: The metadata of this ImageDescriptionDetails.
        :type metadata: ImageMetadata
        """

        self._metadata = metadata

    @property
    def request_id(self):
        """Gets the request_id of this ImageDescriptionDetails.

        Id of the REST API request.

        :return: The request_id of this ImageDescriptionDetails.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this ImageDescriptionDetails.

        Id of the REST API request.

        :param request_id: The request_id of this ImageDescriptionDetails.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def tags(self):
        """Gets the tags of this ImageDescriptionDetails.

        A collection of image tags.

        :return: The tags of this ImageDescriptionDetails.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ImageDescriptionDetails.

        A collection of image tags.

        :param tags: The tags of this ImageDescriptionDetails.
        :type tags: List[str]
        """

        self._tags = tags
