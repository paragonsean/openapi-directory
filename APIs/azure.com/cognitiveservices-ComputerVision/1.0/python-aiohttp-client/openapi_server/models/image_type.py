# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clip_art_type: float=None, line_drawing_type: float=None):
        """ImageType - a model defined in OpenAPI

        :param clip_art_type: The clip_art_type of this ImageType.
        :param line_drawing_type: The line_drawing_type of this ImageType.
        """
        self.openapi_types = {
            'clip_art_type': float,
            'line_drawing_type': float
        }

        self.attribute_map = {
            'clip_art_type': 'clipArtType',
            'line_drawing_type': 'lineDrawingType'
        }

        self._clip_art_type = clip_art_type
        self._line_drawing_type = line_drawing_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageType of this ImageType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clip_art_type(self):
        """Gets the clip_art_type of this ImageType.

        Confidence level that the image is a clip art.

        :return: The clip_art_type of this ImageType.
        :rtype: float
        """
        return self._clip_art_type

    @clip_art_type.setter
    def clip_art_type(self, clip_art_type):
        """Sets the clip_art_type of this ImageType.

        Confidence level that the image is a clip art.

        :param clip_art_type: The clip_art_type of this ImageType.
        :type clip_art_type: float
        """

        self._clip_art_type = clip_art_type

    @property
    def line_drawing_type(self):
        """Gets the line_drawing_type of this ImageType.

        Confidence level that the image is a line drawing.

        :return: The line_drawing_type of this ImageType.
        :rtype: float
        """
        return self._line_drawing_type

    @line_drawing_type.setter
    def line_drawing_type(self, line_drawing_type):
        """Sets the line_drawing_type of this ImageType.

        Confidence level that the image is a line drawing.

        :param line_drawing_type: The line_drawing_type of this ImageType.
        :type line_drawing_type: float
        """

        self._line_drawing_type = line_drawing_type
