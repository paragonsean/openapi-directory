/**
 * Computer Vision
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdultInfo from './model/AdultInfo';
import AnalyzeImageRequest from './model/AnalyzeImageRequest';
import Category from './model/Category';
import CategoryDetail from './model/CategoryDetail';
import CelebritiesModel from './model/CelebritiesModel';
import CelebrityResults from './model/CelebrityResults';
import ColorInfo from './model/ColorInfo';
import ComputerVisionError from './model/ComputerVisionError';
import DomainModelResults from './model/DomainModelResults';
import FaceDescription from './model/FaceDescription';
import FaceRectangle from './model/FaceRectangle';
import ImageAnalysis from './model/ImageAnalysis';
import ImageCaption from './model/ImageCaption';
import ImageDescription from './model/ImageDescription';
import ImageDescriptionDetails from './model/ImageDescriptionDetails';
import ImageMetadata from './model/ImageMetadata';
import ImageTag from './model/ImageTag';
import ImageType from './model/ImageType';
import LandmarkResults from './model/LandmarkResults';
import LandmarkResultsLandmarksInner from './model/LandmarkResultsLandmarksInner';
import Line from './model/Line';
import ListModelsResult from './model/ListModelsResult';
import ModelDescription from './model/ModelDescription';
import OcrLine from './model/OcrLine';
import OcrRegion from './model/OcrRegion';
import OcrResult from './model/OcrResult';
import OcrWord from './model/OcrWord';
import RecognitionResult from './model/RecognitionResult';
import TagResult from './model/TagResult';
import TextOperationResult from './model/TextOperationResult';
import Word from './model/Word';
import DefaultApi from './api/DefaultApi';


/**
* The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ComputerVision = require('index'); // See note below*.
* var xxxSvc = new ComputerVision.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ComputerVision.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ComputerVision.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ComputerVision.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdultInfo model constructor.
     * @property {module:model/AdultInfo}
     */
    AdultInfo,

    /**
     * The AnalyzeImageRequest model constructor.
     * @property {module:model/AnalyzeImageRequest}
     */
    AnalyzeImageRequest,

    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category,

    /**
     * The CategoryDetail model constructor.
     * @property {module:model/CategoryDetail}
     */
    CategoryDetail,

    /**
     * The CelebritiesModel model constructor.
     * @property {module:model/CelebritiesModel}
     */
    CelebritiesModel,

    /**
     * The CelebrityResults model constructor.
     * @property {module:model/CelebrityResults}
     */
    CelebrityResults,

    /**
     * The ColorInfo model constructor.
     * @property {module:model/ColorInfo}
     */
    ColorInfo,

    /**
     * The ComputerVisionError model constructor.
     * @property {module:model/ComputerVisionError}
     */
    ComputerVisionError,

    /**
     * The DomainModelResults model constructor.
     * @property {module:model/DomainModelResults}
     */
    DomainModelResults,

    /**
     * The FaceDescription model constructor.
     * @property {module:model/FaceDescription}
     */
    FaceDescription,

    /**
     * The FaceRectangle model constructor.
     * @property {module:model/FaceRectangle}
     */
    FaceRectangle,

    /**
     * The ImageAnalysis model constructor.
     * @property {module:model/ImageAnalysis}
     */
    ImageAnalysis,

    /**
     * The ImageCaption model constructor.
     * @property {module:model/ImageCaption}
     */
    ImageCaption,

    /**
     * The ImageDescription model constructor.
     * @property {module:model/ImageDescription}
     */
    ImageDescription,

    /**
     * The ImageDescriptionDetails model constructor.
     * @property {module:model/ImageDescriptionDetails}
     */
    ImageDescriptionDetails,

    /**
     * The ImageMetadata model constructor.
     * @property {module:model/ImageMetadata}
     */
    ImageMetadata,

    /**
     * The ImageTag model constructor.
     * @property {module:model/ImageTag}
     */
    ImageTag,

    /**
     * The ImageType model constructor.
     * @property {module:model/ImageType}
     */
    ImageType,

    /**
     * The LandmarkResults model constructor.
     * @property {module:model/LandmarkResults}
     */
    LandmarkResults,

    /**
     * The LandmarkResultsLandmarksInner model constructor.
     * @property {module:model/LandmarkResultsLandmarksInner}
     */
    LandmarkResultsLandmarksInner,

    /**
     * The Line model constructor.
     * @property {module:model/Line}
     */
    Line,

    /**
     * The ListModelsResult model constructor.
     * @property {module:model/ListModelsResult}
     */
    ListModelsResult,

    /**
     * The ModelDescription model constructor.
     * @property {module:model/ModelDescription}
     */
    ModelDescription,

    /**
     * The OcrLine model constructor.
     * @property {module:model/OcrLine}
     */
    OcrLine,

    /**
     * The OcrRegion model constructor.
     * @property {module:model/OcrRegion}
     */
    OcrRegion,

    /**
     * The OcrResult model constructor.
     * @property {module:model/OcrResult}
     */
    OcrResult,

    /**
     * The OcrWord model constructor.
     * @property {module:model/OcrWord}
     */
    OcrWord,

    /**
     * The RecognitionResult model constructor.
     * @property {module:model/RecognitionResult}
     */
    RecognitionResult,

    /**
     * The TagResult model constructor.
     * @property {module:model/TagResult}
     */
    TagResult,

    /**
     * The TextOperationResult model constructor.
     * @property {module:model/TextOperationResult}
     */
    TextOperationResult,

    /**
     * The Word model constructor.
     * @property {module:model/Word}
     */
    Word,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
