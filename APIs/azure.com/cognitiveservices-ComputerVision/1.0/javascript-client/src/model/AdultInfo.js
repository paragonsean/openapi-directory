/**
 * Computer Vision
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdultInfo model module.
 * @module model/AdultInfo
 * @version 1.0
 */
class AdultInfo {
    /**
     * Constructs a new <code>AdultInfo</code>.
     * An object describing whether the image contains adult-oriented content and/or is racy.
     * @alias module:model/AdultInfo
     */
    constructor() { 
        
        AdultInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdultInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdultInfo} obj Optional instance to populate.
     * @return {module:model/AdultInfo} The populated <code>AdultInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdultInfo();

            if (data.hasOwnProperty('adultScore')) {
                obj['adultScore'] = ApiClient.convertToType(data['adultScore'], 'Number');
            }
            if (data.hasOwnProperty('isAdultContent')) {
                obj['isAdultContent'] = ApiClient.convertToType(data['isAdultContent'], 'Boolean');
            }
            if (data.hasOwnProperty('isRacyContent')) {
                obj['isRacyContent'] = ApiClient.convertToType(data['isRacyContent'], 'Boolean');
            }
            if (data.hasOwnProperty('racyScore')) {
                obj['racyScore'] = ApiClient.convertToType(data['racyScore'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdultInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdultInfo</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Score from 0 to 1 that indicates how much of adult content is within the image.
 * @member {Number} adultScore
 */
AdultInfo.prototype['adultScore'] = undefined;

/**
 * A value indicating if the image contains adult-oriented content.
 * @member {Boolean} isAdultContent
 */
AdultInfo.prototype['isAdultContent'] = undefined;

/**
 * A value indicating if the image is race.
 * @member {Boolean} isRacyContent
 */
AdultInfo.prototype['isRacyContent'] = undefined;

/**
 * Score from 0 to 1 that indicates how suggestive is the image.
 * @member {Number} racyScore
 */
AdultInfo.prototype['racyScore'] = undefined;






export default AdultInfo;

