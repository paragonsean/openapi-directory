/**
 * Computer Vision
 * The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image.  It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for displaying large images effectively.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Word model module.
 * @module model/Word
 * @version 1.0
 */
class Word {
    /**
     * Constructs a new <code>Word</code>.
     * @alias module:model/Word
     */
    constructor() { 
        
        Word.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Word</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Word} obj Optional instance to populate.
     * @return {module:model/Word} The populated <code>Word</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Word();

            if (data.hasOwnProperty('boundingBox')) {
                obj['boundingBox'] = ApiClient.convertToType(data['boundingBox'], ['Number']);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Word</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Word</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['boundingBox'])) {
            throw new Error("Expected the field `boundingBox` to be an array in the JSON data but got " + data['boundingBox']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }

        return true;
    }


}



/**
 * @member {Array.<Number>} boundingBox
 */
Word.prototype['boundingBox'] = undefined;

/**
 * @member {String} text
 */
Word.prototype['text'] = undefined;






export default Word;

