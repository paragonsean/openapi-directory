/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-12-01.8.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceStatistics.h
 *
 * 
 */

#ifndef OAIResourceStatistics_H
#define OAIResourceStatistics_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResourceStatistics : public OAIObject {
public:
    OAIResourceStatistics();
    OAIResourceStatistics(QString json);
    ~OAIResourceStatistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAvgCpuPercentage() const;
    void setAvgCpuPercentage(const double &avg_cpu_percentage);
    bool is_avg_cpu_percentage_Set() const;
    bool is_avg_cpu_percentage_Valid() const;

    double getAvgDiskGiB() const;
    void setAvgDiskGiB(const double &avg_disk_gi_b);
    bool is_avg_disk_gi_b_Set() const;
    bool is_avg_disk_gi_b_Valid() const;

    double getAvgMemoryGiB() const;
    void setAvgMemoryGiB(const double &avg_memory_gi_b);
    bool is_avg_memory_gi_b_Set() const;
    bool is_avg_memory_gi_b_Valid() const;

    double getDiskReadGiB() const;
    void setDiskReadGiB(const double &disk_read_gi_b);
    bool is_disk_read_gi_b_Set() const;
    bool is_disk_read_gi_b_Valid() const;

    qint64 getDiskReadIOps() const;
    void setDiskReadIOps(const qint64 &disk_read_i_ops);
    bool is_disk_read_i_ops_Set() const;
    bool is_disk_read_i_ops_Valid() const;

    double getDiskWriteGiB() const;
    void setDiskWriteGiB(const double &disk_write_gi_b);
    bool is_disk_write_gi_b_Set() const;
    bool is_disk_write_gi_b_Valid() const;

    qint64 getDiskWriteIOps() const;
    void setDiskWriteIOps(const qint64 &disk_write_i_ops);
    bool is_disk_write_i_ops_Set() const;
    bool is_disk_write_i_ops_Valid() const;

    QDateTime getLastUpdateTime() const;
    void setLastUpdateTime(const QDateTime &last_update_time);
    bool is_last_update_time_Set() const;
    bool is_last_update_time_Valid() const;

    double getNetworkReadGiB() const;
    void setNetworkReadGiB(const double &network_read_gi_b);
    bool is_network_read_gi_b_Set() const;
    bool is_network_read_gi_b_Valid() const;

    double getNetworkWriteGiB() const;
    void setNetworkWriteGiB(const double &network_write_gi_b);
    bool is_network_write_gi_b_Set() const;
    bool is_network_write_gi_b_Valid() const;

    double getPeakDiskGiB() const;
    void setPeakDiskGiB(const double &peak_disk_gi_b);
    bool is_peak_disk_gi_b_Set() const;
    bool is_peak_disk_gi_b_Valid() const;

    double getPeakMemoryGiB() const;
    void setPeakMemoryGiB(const double &peak_memory_gi_b);
    bool is_peak_memory_gi_b_Set() const;
    bool is_peak_memory_gi_b_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_avg_cpu_percentage;
    bool m_avg_cpu_percentage_isSet;
    bool m_avg_cpu_percentage_isValid;

    double m_avg_disk_gi_b;
    bool m_avg_disk_gi_b_isSet;
    bool m_avg_disk_gi_b_isValid;

    double m_avg_memory_gi_b;
    bool m_avg_memory_gi_b_isSet;
    bool m_avg_memory_gi_b_isValid;

    double m_disk_read_gi_b;
    bool m_disk_read_gi_b_isSet;
    bool m_disk_read_gi_b_isValid;

    qint64 m_disk_read_i_ops;
    bool m_disk_read_i_ops_isSet;
    bool m_disk_read_i_ops_isValid;

    double m_disk_write_gi_b;
    bool m_disk_write_gi_b_isSet;
    bool m_disk_write_gi_b_isValid;

    qint64 m_disk_write_i_ops;
    bool m_disk_write_i_ops_isSet;
    bool m_disk_write_i_ops_isValid;

    QDateTime m_last_update_time;
    bool m_last_update_time_isSet;
    bool m_last_update_time_isValid;

    double m_network_read_gi_b;
    bool m_network_read_gi_b_isSet;
    bool m_network_read_gi_b_isValid;

    double m_network_write_gi_b;
    bool m_network_write_gi_b_isSet;
    bool m_network_write_gi_b_isValid;

    double m_peak_disk_gi_b;
    bool m_peak_disk_gi_b_isSet;
    bool m_peak_disk_gi_b_isValid;

    double m_peak_memory_gi_b;
    bool m_peak_memory_gi_b_isSet;
    bool m_peak_memory_gi_b_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceStatistics)

#endif // OAIResourceStatistics_H
