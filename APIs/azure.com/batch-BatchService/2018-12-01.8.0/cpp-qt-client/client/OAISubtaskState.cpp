/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-12-01.8.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubtaskState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubtaskState::OAISubtaskState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubtaskState::OAISubtaskState() {
    this->initializeModel();
}

OAISubtaskState::~OAISubtaskState() {}

void OAISubtaskState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISubtaskState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISubtaskState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("preparing", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubtaskState::PREPARING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("running", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubtaskState::RUNNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("completed", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubtaskState::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISubtaskState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISubtaskState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISubtaskState::PREPARING:
            val = "preparing";
            break;
        case eOAISubtaskState::RUNNING:
            val = "running";
            break;
        case eOAISubtaskState::COMPLETED:
            val = "completed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISubtaskState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISubtaskState::eOAISubtaskState OAISubtaskState::getValue() const {
    return m_value;
}

void OAISubtaskState::setValue(const OAISubtaskState::eOAISubtaskState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISubtaskState::isSet() const {
    
    return m_value_isSet;
}

bool OAISubtaskState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
