/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-12-01.8.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutputFile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutputFile::OAIOutputFile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutputFile::OAIOutputFile() {
    this->initializeModel();
}

OAIOutputFile::~OAIOutputFile() {}

void OAIOutputFile::initializeModel() {

    m_destination_isSet = false;
    m_destination_isValid = false;

    m_file_pattern_isSet = false;
    m_file_pattern_isValid = false;

    m_upload_options_isSet = false;
    m_upload_options_isValid = false;
}

void OAIOutputFile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOutputFile::fromJsonObject(QJsonObject json) {

    m_destination_isValid = ::OpenAPI::fromJsonValue(m_destination, json[QString("destination")]);
    m_destination_isSet = !json[QString("destination")].isNull() && m_destination_isValid;

    m_file_pattern_isValid = ::OpenAPI::fromJsonValue(m_file_pattern, json[QString("filePattern")]);
    m_file_pattern_isSet = !json[QString("filePattern")].isNull() && m_file_pattern_isValid;

    m_upload_options_isValid = ::OpenAPI::fromJsonValue(m_upload_options, json[QString("uploadOptions")]);
    m_upload_options_isSet = !json[QString("uploadOptions")].isNull() && m_upload_options_isValid;
}

QString OAIOutputFile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOutputFile::asJsonObject() const {
    QJsonObject obj;
    if (m_destination.isSet()) {
        obj.insert(QString("destination"), ::OpenAPI::toJsonValue(m_destination));
    }
    if (m_file_pattern_isSet) {
        obj.insert(QString("filePattern"), ::OpenAPI::toJsonValue(m_file_pattern));
    }
    if (m_upload_options.isSet()) {
        obj.insert(QString("uploadOptions"), ::OpenAPI::toJsonValue(m_upload_options));
    }
    return obj;
}

OAIOutputFileDestination OAIOutputFile::getDestination() const {
    return m_destination;
}
void OAIOutputFile::setDestination(const OAIOutputFileDestination &destination) {
    m_destination = destination;
    m_destination_isSet = true;
}

bool OAIOutputFile::is_destination_Set() const{
    return m_destination_isSet;
}

bool OAIOutputFile::is_destination_Valid() const{
    return m_destination_isValid;
}

QString OAIOutputFile::getFilePattern() const {
    return m_file_pattern;
}
void OAIOutputFile::setFilePattern(const QString &file_pattern) {
    m_file_pattern = file_pattern;
    m_file_pattern_isSet = true;
}

bool OAIOutputFile::is_file_pattern_Set() const{
    return m_file_pattern_isSet;
}

bool OAIOutputFile::is_file_pattern_Valid() const{
    return m_file_pattern_isValid;
}

OAIOutputFileUploadOptions OAIOutputFile::getUploadOptions() const {
    return m_upload_options;
}
void OAIOutputFile::setUploadOptions(const OAIOutputFileUploadOptions &upload_options) {
    m_upload_options = upload_options;
    m_upload_options_isSet = true;
}

bool OAIOutputFile::is_upload_options_Set() const{
    return m_upload_options_isSet;
}

bool OAIOutputFile::is_upload_options_Valid() const{
    return m_upload_options_isValid;
}

bool OAIOutputFile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upload_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOutputFile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_destination_isValid && m_file_pattern_isValid && m_upload_options_isValid && true;
}

} // namespace OpenAPI
