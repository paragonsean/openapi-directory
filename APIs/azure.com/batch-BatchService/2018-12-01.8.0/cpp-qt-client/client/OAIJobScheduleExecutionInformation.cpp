/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-12-01.8.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobScheduleExecutionInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobScheduleExecutionInformation::OAIJobScheduleExecutionInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobScheduleExecutionInformation::OAIJobScheduleExecutionInformation() {
    this->initializeModel();
}

OAIJobScheduleExecutionInformation::~OAIJobScheduleExecutionInformation() {}

void OAIJobScheduleExecutionInformation::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_next_run_time_isSet = false;
    m_next_run_time_isValid = false;

    m_recent_job_isSet = false;
    m_recent_job_isValid = false;
}

void OAIJobScheduleExecutionInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobScheduleExecutionInformation::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_next_run_time_isValid = ::OpenAPI::fromJsonValue(m_next_run_time, json[QString("nextRunTime")]);
    m_next_run_time_isSet = !json[QString("nextRunTime")].isNull() && m_next_run_time_isValid;

    m_recent_job_isValid = ::OpenAPI::fromJsonValue(m_recent_job, json[QString("recentJob")]);
    m_recent_job_isSet = !json[QString("recentJob")].isNull() && m_recent_job_isValid;
}

QString OAIJobScheduleExecutionInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobScheduleExecutionInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_next_run_time_isSet) {
        obj.insert(QString("nextRunTime"), ::OpenAPI::toJsonValue(m_next_run_time));
    }
    if (m_recent_job.isSet()) {
        obj.insert(QString("recentJob"), ::OpenAPI::toJsonValue(m_recent_job));
    }
    return obj;
}

QDateTime OAIJobScheduleExecutionInformation::getEndTime() const {
    return m_end_time;
}
void OAIJobScheduleExecutionInformation::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIJobScheduleExecutionInformation::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIJobScheduleExecutionInformation::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QDateTime OAIJobScheduleExecutionInformation::getNextRunTime() const {
    return m_next_run_time;
}
void OAIJobScheduleExecutionInformation::setNextRunTime(const QDateTime &next_run_time) {
    m_next_run_time = next_run_time;
    m_next_run_time_isSet = true;
}

bool OAIJobScheduleExecutionInformation::is_next_run_time_Set() const{
    return m_next_run_time_isSet;
}

bool OAIJobScheduleExecutionInformation::is_next_run_time_Valid() const{
    return m_next_run_time_isValid;
}

OAIRecentJob OAIJobScheduleExecutionInformation::getRecentJob() const {
    return m_recent_job;
}
void OAIJobScheduleExecutionInformation::setRecentJob(const OAIRecentJob &recent_job) {
    m_recent_job = recent_job;
    m_recent_job_isSet = true;
}

bool OAIJobScheduleExecutionInformation::is_recent_job_Set() const{
    return m_recent_job_isSet;
}

bool OAIJobScheduleExecutionInformation::is_recent_job_Valid() const{
    return m_recent_job_isValid;
}

bool OAIJobScheduleExecutionInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_run_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recent_job.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobScheduleExecutionInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
