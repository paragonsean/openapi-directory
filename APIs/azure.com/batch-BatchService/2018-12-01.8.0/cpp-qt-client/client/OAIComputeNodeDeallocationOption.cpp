/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-12-01.8.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComputeNodeDeallocationOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComputeNodeDeallocationOption::OAIComputeNodeDeallocationOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComputeNodeDeallocationOption::OAIComputeNodeDeallocationOption() {
    this->initializeModel();
}

OAIComputeNodeDeallocationOption::~OAIComputeNodeDeallocationOption() {}

void OAIComputeNodeDeallocationOption::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIComputeNodeDeallocationOption::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIComputeNodeDeallocationOption::fromJson(QString jsonString) {
    
    if ( jsonString.compare("requeue", Qt::CaseInsensitive) == 0) {
        m_value = eOAIComputeNodeDeallocationOption::REQUEUE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("terminate", Qt::CaseInsensitive) == 0) {
        m_value = eOAIComputeNodeDeallocationOption::TERMINATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("taskcompletion", Qt::CaseInsensitive) == 0) {
        m_value = eOAIComputeNodeDeallocationOption::TASKCOMPLETION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("retaineddata", Qt::CaseInsensitive) == 0) {
        m_value = eOAIComputeNodeDeallocationOption::RETAINEDDATA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIComputeNodeDeallocationOption::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIComputeNodeDeallocationOption::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIComputeNodeDeallocationOption::REQUEUE:
            val = "requeue";
            break;
        case eOAIComputeNodeDeallocationOption::TERMINATE:
            val = "terminate";
            break;
        case eOAIComputeNodeDeallocationOption::TASKCOMPLETION:
            val = "taskcompletion";
            break;
        case eOAIComputeNodeDeallocationOption::RETAINEDDATA:
            val = "retaineddata";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIComputeNodeDeallocationOption::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIComputeNodeDeallocationOption::eOAIComputeNodeDeallocationOption OAIComputeNodeDeallocationOption::getValue() const {
    return m_value;
}

void OAIComputeNodeDeallocationOption::setValue(const OAIComputeNodeDeallocationOption::eOAIComputeNodeDeallocationOption& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIComputeNodeDeallocationOption::isSet() const {
    
    return m_value_isSet;
}

bool OAIComputeNodeDeallocationOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
