/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-12-01.8.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComputeNodeGetRemoteLoginSettingsResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComputeNodeGetRemoteLoginSettingsResult::OAIComputeNodeGetRemoteLoginSettingsResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComputeNodeGetRemoteLoginSettingsResult::OAIComputeNodeGetRemoteLoginSettingsResult() {
    this->initializeModel();
}

OAIComputeNodeGetRemoteLoginSettingsResult::~OAIComputeNodeGetRemoteLoginSettingsResult() {}

void OAIComputeNodeGetRemoteLoginSettingsResult::initializeModel() {

    m_remote_login_ip_address_isSet = false;
    m_remote_login_ip_address_isValid = false;

    m_remote_login_port_isSet = false;
    m_remote_login_port_isValid = false;
}

void OAIComputeNodeGetRemoteLoginSettingsResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIComputeNodeGetRemoteLoginSettingsResult::fromJsonObject(QJsonObject json) {

    m_remote_login_ip_address_isValid = ::OpenAPI::fromJsonValue(m_remote_login_ip_address, json[QString("remoteLoginIPAddress")]);
    m_remote_login_ip_address_isSet = !json[QString("remoteLoginIPAddress")].isNull() && m_remote_login_ip_address_isValid;

    m_remote_login_port_isValid = ::OpenAPI::fromJsonValue(m_remote_login_port, json[QString("remoteLoginPort")]);
    m_remote_login_port_isSet = !json[QString("remoteLoginPort")].isNull() && m_remote_login_port_isValid;
}

QString OAIComputeNodeGetRemoteLoginSettingsResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIComputeNodeGetRemoteLoginSettingsResult::asJsonObject() const {
    QJsonObject obj;
    if (m_remote_login_ip_address_isSet) {
        obj.insert(QString("remoteLoginIPAddress"), ::OpenAPI::toJsonValue(m_remote_login_ip_address));
    }
    if (m_remote_login_port_isSet) {
        obj.insert(QString("remoteLoginPort"), ::OpenAPI::toJsonValue(m_remote_login_port));
    }
    return obj;
}

QString OAIComputeNodeGetRemoteLoginSettingsResult::getRemoteLoginIpAddress() const {
    return m_remote_login_ip_address;
}
void OAIComputeNodeGetRemoteLoginSettingsResult::setRemoteLoginIpAddress(const QString &remote_login_ip_address) {
    m_remote_login_ip_address = remote_login_ip_address;
    m_remote_login_ip_address_isSet = true;
}

bool OAIComputeNodeGetRemoteLoginSettingsResult::is_remote_login_ip_address_Set() const{
    return m_remote_login_ip_address_isSet;
}

bool OAIComputeNodeGetRemoteLoginSettingsResult::is_remote_login_ip_address_Valid() const{
    return m_remote_login_ip_address_isValid;
}

qint32 OAIComputeNodeGetRemoteLoginSettingsResult::getRemoteLoginPort() const {
    return m_remote_login_port;
}
void OAIComputeNodeGetRemoteLoginSettingsResult::setRemoteLoginPort(const qint32 &remote_login_port) {
    m_remote_login_port = remote_login_port;
    m_remote_login_port_isSet = true;
}

bool OAIComputeNodeGetRemoteLoginSettingsResult::is_remote_login_port_Set() const{
    return m_remote_login_port_isSet;
}

bool OAIComputeNodeGetRemoteLoginSettingsResult::is_remote_login_port_Valid() const{
    return m_remote_login_port_isValid;
}

bool OAIComputeNodeGetRemoteLoginSettingsResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_remote_login_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remote_login_port_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIComputeNodeGetRemoteLoginSettingsResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_remote_login_ip_address_isValid && m_remote_login_port_isValid && true;
}

} // namespace OpenAPI
