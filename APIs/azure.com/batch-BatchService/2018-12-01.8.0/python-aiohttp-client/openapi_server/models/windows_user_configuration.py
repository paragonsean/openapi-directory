# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WindowsUserConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, login_mode: str=None):
        """WindowsUserConfiguration - a model defined in OpenAPI

        :param login_mode: The login_mode of this WindowsUserConfiguration.
        """
        self.openapi_types = {
            'login_mode': str
        }

        self.attribute_map = {
            'login_mode': 'loginMode'
        }

        self._login_mode = login_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WindowsUserConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WindowsUserConfiguration of this WindowsUserConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def login_mode(self):
        """Gets the login_mode of this WindowsUserConfiguration.

        The default value for VirtualMachineConfiguration pools is batch and for CloudServiceConfiguration pools is interactive.

        :return: The login_mode of this WindowsUserConfiguration.
        :rtype: str
        """
        return self._login_mode

    @login_mode.setter
    def login_mode(self, login_mode):
        """Sets the login_mode of this WindowsUserConfiguration.

        The default value for VirtualMachineConfiguration pools is batch and for CloudServiceConfiguration pools is interactive.

        :param login_mode: The login_mode of this WindowsUserConfiguration.
        :type login_mode: str
        """
        allowed_values = ["batch", "interactive"]  # noqa: E501
        if login_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `login_mode` ({0}), must be one of {1}"
                .format(login_mode, allowed_values)
            )

        self._login_mode = login_mode
