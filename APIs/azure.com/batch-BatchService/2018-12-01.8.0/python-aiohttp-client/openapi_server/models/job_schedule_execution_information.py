# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recent_job import RecentJob
from openapi_server import util


class JobScheduleExecutionInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_time: datetime=None, next_run_time: datetime=None, recent_job: RecentJob=None):
        """JobScheduleExecutionInformation - a model defined in OpenAPI

        :param end_time: The end_time of this JobScheduleExecutionInformation.
        :param next_run_time: The next_run_time of this JobScheduleExecutionInformation.
        :param recent_job: The recent_job of this JobScheduleExecutionInformation.
        """
        self.openapi_types = {
            'end_time': datetime,
            'next_run_time': datetime,
            'recent_job': RecentJob
        }

        self.attribute_map = {
            'end_time': 'endTime',
            'next_run_time': 'nextRunTime',
            'recent_job': 'recentJob'
        }

        self._end_time = end_time
        self._next_run_time = next_run_time
        self._recent_job = recent_job

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobScheduleExecutionInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobScheduleExecutionInformation of this JobScheduleExecutionInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_time(self):
        """Gets the end_time of this JobScheduleExecutionInformation.

        This property is set only if the job schedule is in the completed state.

        :return: The end_time of this JobScheduleExecutionInformation.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this JobScheduleExecutionInformation.

        This property is set only if the job schedule is in the completed state.

        :param end_time: The end_time of this JobScheduleExecutionInformation.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def next_run_time(self):
        """Gets the next_run_time of this JobScheduleExecutionInformation.

        This property is meaningful only if the schedule is in the active state when the time comes around. For example, if the schedule is disabled, no job will be created at nextRunTime unless the job is enabled before then.

        :return: The next_run_time of this JobScheduleExecutionInformation.
        :rtype: datetime
        """
        return self._next_run_time

    @next_run_time.setter
    def next_run_time(self, next_run_time):
        """Sets the next_run_time of this JobScheduleExecutionInformation.

        This property is meaningful only if the schedule is in the active state when the time comes around. For example, if the schedule is disabled, no job will be created at nextRunTime unless the job is enabled before then.

        :param next_run_time: The next_run_time of this JobScheduleExecutionInformation.
        :type next_run_time: datetime
        """

        self._next_run_time = next_run_time

    @property
    def recent_job(self):
        """Gets the recent_job of this JobScheduleExecutionInformation.


        :return: The recent_job of this JobScheduleExecutionInformation.
        :rtype: RecentJob
        """
        return self._recent_job

    @recent_job.setter
    def recent_job(self, recent_job):
        """Sets the recent_job of this JobScheduleExecutionInformation.


        :param recent_job: The recent_job of this JobScheduleExecutionInformation.
        :type recent_job: RecentJob
        """

        self._recent_job = recent_job
