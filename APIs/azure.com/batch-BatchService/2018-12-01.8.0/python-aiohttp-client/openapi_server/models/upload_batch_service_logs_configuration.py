# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UploadBatchServiceLogsConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_url: str=None, end_time: datetime=None, start_time: datetime=None):
        """UploadBatchServiceLogsConfiguration - a model defined in OpenAPI

        :param container_url: The container_url of this UploadBatchServiceLogsConfiguration.
        :param end_time: The end_time of this UploadBatchServiceLogsConfiguration.
        :param start_time: The start_time of this UploadBatchServiceLogsConfiguration.
        """
        self.openapi_types = {
            'container_url': str,
            'end_time': datetime,
            'start_time': datetime
        }

        self.attribute_map = {
            'container_url': 'containerUrl',
            'end_time': 'endTime',
            'start_time': 'startTime'
        }

        self._container_url = container_url
        self._end_time = end_time
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UploadBatchServiceLogsConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UploadBatchServiceLogsConfiguration of this UploadBatchServiceLogsConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_url(self):
        """Gets the container_url of this UploadBatchServiceLogsConfiguration.

        The URL must include a Shared Access Signature (SAS) granting write permissions to the container. The SAS duration must allow enough time for the upload to finish. The start time for SAS is optional and recommended to not be specified.

        :return: The container_url of this UploadBatchServiceLogsConfiguration.
        :rtype: str
        """
        return self._container_url

    @container_url.setter
    def container_url(self, container_url):
        """Sets the container_url of this UploadBatchServiceLogsConfiguration.

        The URL must include a Shared Access Signature (SAS) granting write permissions to the container. The SAS duration must allow enough time for the upload to finish. The start time for SAS is optional and recommended to not be specified.

        :param container_url: The container_url of this UploadBatchServiceLogsConfiguration.
        :type container_url: str
        """
        if container_url is None:
            raise ValueError("Invalid value for `container_url`, must not be `None`")

        self._container_url = container_url

    @property
    def end_time(self):
        """Gets the end_time of this UploadBatchServiceLogsConfiguration.

        Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested. If omitted, the default is to upload all logs available after the startTime.

        :return: The end_time of this UploadBatchServiceLogsConfiguration.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this UploadBatchServiceLogsConfiguration.

        Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested. If omitted, the default is to upload all logs available after the startTime.

        :param end_time: The end_time of this UploadBatchServiceLogsConfiguration.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def start_time(self):
        """Gets the start_time of this UploadBatchServiceLogsConfiguration.

        Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested.

        :return: The start_time of this UploadBatchServiceLogsConfiguration.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this UploadBatchServiceLogsConfiguration.

        Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested.

        :param start_time: The start_time of this UploadBatchServiceLogsConfiguration.
        :type start_time: datetime
        """
        if start_time is None:
            raise ValueError("Invalid value for `start_time`, must not be `None`")

        self._start_time = start_time
