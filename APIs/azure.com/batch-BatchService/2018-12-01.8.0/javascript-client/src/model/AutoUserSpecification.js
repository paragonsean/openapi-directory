/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-12-01.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ElevationLevel from './ElevationLevel';

/**
 * The AutoUserSpecification model module.
 * @module model/AutoUserSpecification
 * @version 2018-12-01.8.0
 */
class AutoUserSpecification {
    /**
     * Constructs a new <code>AutoUserSpecification</code>.
     * @alias module:model/AutoUserSpecification
     */
    constructor() { 
        
        AutoUserSpecification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutoUserSpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoUserSpecification} obj Optional instance to populate.
     * @return {module:model/AutoUserSpecification} The populated <code>AutoUserSpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoUserSpecification();

            if (data.hasOwnProperty('elevationLevel')) {
                obj['elevationLevel'] = ElevationLevel.constructFromObject(data['elevationLevel']);
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoUserSpecification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoUserSpecification</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['scope'] && !(typeof data['scope'] === 'string' || data['scope'] instanceof String)) {
            throw new Error("Expected the field `scope` to be a primitive type in the JSON string but got " + data['scope']);
        }

        return true;
    }


}



/**
 * @member {module:model/ElevationLevel} elevationLevel
 */
AutoUserSpecification.prototype['elevationLevel'] = undefined;

/**
 * The default value is task.
 * @member {module:model/AutoUserSpecification.ScopeEnum} scope
 */
AutoUserSpecification.prototype['scope'] = undefined;





/**
 * Allowed values for the <code>scope</code> property.
 * @enum {String}
 * @readonly
 */
AutoUserSpecification['ScopeEnum'] = {

    /**
     * value: "task"
     * @const
     */
    "task": "task",

    /**
     * value: "pool"
     * @const
     */
    "pool": "pool"
};



export default AutoUserSpecification;

