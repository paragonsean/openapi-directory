/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2019-08-01.10.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobPreparationAndReleaseTaskExecutionInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobPreparationAndReleaseTaskExecutionInformation::OAIJobPreparationAndReleaseTaskExecutionInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobPreparationAndReleaseTaskExecutionInformation::OAIJobPreparationAndReleaseTaskExecutionInformation() {
    this->initializeModel();
}

OAIJobPreparationAndReleaseTaskExecutionInformation::~OAIJobPreparationAndReleaseTaskExecutionInformation() {}

void OAIJobPreparationAndReleaseTaskExecutionInformation::initializeModel() {

    m_job_preparation_task_execution_info_isSet = false;
    m_job_preparation_task_execution_info_isValid = false;

    m_job_release_task_execution_info_isSet = false;
    m_job_release_task_execution_info_isValid = false;

    m_node_id_isSet = false;
    m_node_id_isValid = false;

    m_node_url_isSet = false;
    m_node_url_isValid = false;

    m_pool_id_isSet = false;
    m_pool_id_isValid = false;
}

void OAIJobPreparationAndReleaseTaskExecutionInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobPreparationAndReleaseTaskExecutionInformation::fromJsonObject(QJsonObject json) {

    m_job_preparation_task_execution_info_isValid = ::OpenAPI::fromJsonValue(m_job_preparation_task_execution_info, json[QString("jobPreparationTaskExecutionInfo")]);
    m_job_preparation_task_execution_info_isSet = !json[QString("jobPreparationTaskExecutionInfo")].isNull() && m_job_preparation_task_execution_info_isValid;

    m_job_release_task_execution_info_isValid = ::OpenAPI::fromJsonValue(m_job_release_task_execution_info, json[QString("jobReleaseTaskExecutionInfo")]);
    m_job_release_task_execution_info_isSet = !json[QString("jobReleaseTaskExecutionInfo")].isNull() && m_job_release_task_execution_info_isValid;

    m_node_id_isValid = ::OpenAPI::fromJsonValue(m_node_id, json[QString("nodeId")]);
    m_node_id_isSet = !json[QString("nodeId")].isNull() && m_node_id_isValid;

    m_node_url_isValid = ::OpenAPI::fromJsonValue(m_node_url, json[QString("nodeUrl")]);
    m_node_url_isSet = !json[QString("nodeUrl")].isNull() && m_node_url_isValid;

    m_pool_id_isValid = ::OpenAPI::fromJsonValue(m_pool_id, json[QString("poolId")]);
    m_pool_id_isSet = !json[QString("poolId")].isNull() && m_pool_id_isValid;
}

QString OAIJobPreparationAndReleaseTaskExecutionInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobPreparationAndReleaseTaskExecutionInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_job_preparation_task_execution_info.isSet()) {
        obj.insert(QString("jobPreparationTaskExecutionInfo"), ::OpenAPI::toJsonValue(m_job_preparation_task_execution_info));
    }
    if (m_job_release_task_execution_info.isSet()) {
        obj.insert(QString("jobReleaseTaskExecutionInfo"), ::OpenAPI::toJsonValue(m_job_release_task_execution_info));
    }
    if (m_node_id_isSet) {
        obj.insert(QString("nodeId"), ::OpenAPI::toJsonValue(m_node_id));
    }
    if (m_node_url_isSet) {
        obj.insert(QString("nodeUrl"), ::OpenAPI::toJsonValue(m_node_url));
    }
    if (m_pool_id_isSet) {
        obj.insert(QString("poolId"), ::OpenAPI::toJsonValue(m_pool_id));
    }
    return obj;
}

OAIJobPreparationTaskExecutionInformation OAIJobPreparationAndReleaseTaskExecutionInformation::getJobPreparationTaskExecutionInfo() const {
    return m_job_preparation_task_execution_info;
}
void OAIJobPreparationAndReleaseTaskExecutionInformation::setJobPreparationTaskExecutionInfo(const OAIJobPreparationTaskExecutionInformation &job_preparation_task_execution_info) {
    m_job_preparation_task_execution_info = job_preparation_task_execution_info;
    m_job_preparation_task_execution_info_isSet = true;
}

bool OAIJobPreparationAndReleaseTaskExecutionInformation::is_job_preparation_task_execution_info_Set() const{
    return m_job_preparation_task_execution_info_isSet;
}

bool OAIJobPreparationAndReleaseTaskExecutionInformation::is_job_preparation_task_execution_info_Valid() const{
    return m_job_preparation_task_execution_info_isValid;
}

OAIJobReleaseTaskExecutionInformation OAIJobPreparationAndReleaseTaskExecutionInformation::getJobReleaseTaskExecutionInfo() const {
    return m_job_release_task_execution_info;
}
void OAIJobPreparationAndReleaseTaskExecutionInformation::setJobReleaseTaskExecutionInfo(const OAIJobReleaseTaskExecutionInformation &job_release_task_execution_info) {
    m_job_release_task_execution_info = job_release_task_execution_info;
    m_job_release_task_execution_info_isSet = true;
}

bool OAIJobPreparationAndReleaseTaskExecutionInformation::is_job_release_task_execution_info_Set() const{
    return m_job_release_task_execution_info_isSet;
}

bool OAIJobPreparationAndReleaseTaskExecutionInformation::is_job_release_task_execution_info_Valid() const{
    return m_job_release_task_execution_info_isValid;
}

QString OAIJobPreparationAndReleaseTaskExecutionInformation::getNodeId() const {
    return m_node_id;
}
void OAIJobPreparationAndReleaseTaskExecutionInformation::setNodeId(const QString &node_id) {
    m_node_id = node_id;
    m_node_id_isSet = true;
}

bool OAIJobPreparationAndReleaseTaskExecutionInformation::is_node_id_Set() const{
    return m_node_id_isSet;
}

bool OAIJobPreparationAndReleaseTaskExecutionInformation::is_node_id_Valid() const{
    return m_node_id_isValid;
}

QString OAIJobPreparationAndReleaseTaskExecutionInformation::getNodeUrl() const {
    return m_node_url;
}
void OAIJobPreparationAndReleaseTaskExecutionInformation::setNodeUrl(const QString &node_url) {
    m_node_url = node_url;
    m_node_url_isSet = true;
}

bool OAIJobPreparationAndReleaseTaskExecutionInformation::is_node_url_Set() const{
    return m_node_url_isSet;
}

bool OAIJobPreparationAndReleaseTaskExecutionInformation::is_node_url_Valid() const{
    return m_node_url_isValid;
}

QString OAIJobPreparationAndReleaseTaskExecutionInformation::getPoolId() const {
    return m_pool_id;
}
void OAIJobPreparationAndReleaseTaskExecutionInformation::setPoolId(const QString &pool_id) {
    m_pool_id = pool_id;
    m_pool_id_isSet = true;
}

bool OAIJobPreparationAndReleaseTaskExecutionInformation::is_pool_id_Set() const{
    return m_pool_id_isSet;
}

bool OAIJobPreparationAndReleaseTaskExecutionInformation::is_pool_id_Valid() const{
    return m_pool_id_isValid;
}

bool OAIJobPreparationAndReleaseTaskExecutionInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_preparation_task_execution_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_release_task_execution_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pool_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobPreparationAndReleaseTaskExecutionInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
