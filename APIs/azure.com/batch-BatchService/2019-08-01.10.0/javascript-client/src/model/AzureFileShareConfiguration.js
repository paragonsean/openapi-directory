/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2019-08-01.10.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AzureFileShareConfiguration model module.
 * @module model/AzureFileShareConfiguration
 * @version 2019-08-01.10.0
 */
class AzureFileShareConfiguration {
    /**
     * Constructs a new <code>AzureFileShareConfiguration</code>.
     * @alias module:model/AzureFileShareConfiguration
     * @param accountKey {String} 
     * @param accountName {String} 
     * @param azureFileUrl {String} This is of the form 'https://{account}.file.core.windows.net/'.
     * @param relativeMountPath {String} All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
     */
    constructor(accountKey, accountName, azureFileUrl, relativeMountPath) { 
        
        AzureFileShareConfiguration.initialize(this, accountKey, accountName, azureFileUrl, relativeMountPath);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountKey, accountName, azureFileUrl, relativeMountPath) { 
        obj['accountKey'] = accountKey;
        obj['accountName'] = accountName;
        obj['azureFileUrl'] = azureFileUrl;
        obj['relativeMountPath'] = relativeMountPath;
    }

    /**
     * Constructs a <code>AzureFileShareConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AzureFileShareConfiguration} obj Optional instance to populate.
     * @return {module:model/AzureFileShareConfiguration} The populated <code>AzureFileShareConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AzureFileShareConfiguration();

            if (data.hasOwnProperty('accountKey')) {
                obj['accountKey'] = ApiClient.convertToType(data['accountKey'], 'String');
            }
            if (data.hasOwnProperty('accountName')) {
                obj['accountName'] = ApiClient.convertToType(data['accountName'], 'String');
            }
            if (data.hasOwnProperty('azureFileUrl')) {
                obj['azureFileUrl'] = ApiClient.convertToType(data['azureFileUrl'], 'String');
            }
            if (data.hasOwnProperty('mountOptions')) {
                obj['mountOptions'] = ApiClient.convertToType(data['mountOptions'], 'String');
            }
            if (data.hasOwnProperty('relativeMountPath')) {
                obj['relativeMountPath'] = ApiClient.convertToType(data['relativeMountPath'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AzureFileShareConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AzureFileShareConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AzureFileShareConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accountKey'] && !(typeof data['accountKey'] === 'string' || data['accountKey'] instanceof String)) {
            throw new Error("Expected the field `accountKey` to be a primitive type in the JSON string but got " + data['accountKey']);
        }
        // ensure the json data is a string
        if (data['accountName'] && !(typeof data['accountName'] === 'string' || data['accountName'] instanceof String)) {
            throw new Error("Expected the field `accountName` to be a primitive type in the JSON string but got " + data['accountName']);
        }
        // ensure the json data is a string
        if (data['azureFileUrl'] && !(typeof data['azureFileUrl'] === 'string' || data['azureFileUrl'] instanceof String)) {
            throw new Error("Expected the field `azureFileUrl` to be a primitive type in the JSON string but got " + data['azureFileUrl']);
        }
        // ensure the json data is a string
        if (data['mountOptions'] && !(typeof data['mountOptions'] === 'string' || data['mountOptions'] instanceof String)) {
            throw new Error("Expected the field `mountOptions` to be a primitive type in the JSON string but got " + data['mountOptions']);
        }
        // ensure the json data is a string
        if (data['relativeMountPath'] && !(typeof data['relativeMountPath'] === 'string' || data['relativeMountPath'] instanceof String)) {
            throw new Error("Expected the field `relativeMountPath` to be a primitive type in the JSON string but got " + data['relativeMountPath']);
        }

        return true;
    }


}

AzureFileShareConfiguration.RequiredProperties = ["accountKey", "accountName", "azureFileUrl", "relativeMountPath"];

/**
 * @member {String} accountKey
 */
AzureFileShareConfiguration.prototype['accountKey'] = undefined;

/**
 * @member {String} accountName
 */
AzureFileShareConfiguration.prototype['accountName'] = undefined;

/**
 * This is of the form 'https://{account}.file.core.windows.net/'.
 * @member {String} azureFileUrl
 */
AzureFileShareConfiguration.prototype['azureFileUrl'] = undefined;

/**
 * These are 'net use' options in Windows and 'mount' options in Linux.
 * @member {String} mountOptions
 */
AzureFileShareConfiguration.prototype['mountOptions'] = undefined;

/**
 * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
 * @member {String} relativeMountPath
 */
AzureFileShareConfiguration.prototype['relativeMountPath'] = undefined;






export default AzureFileShareConfiguration;

