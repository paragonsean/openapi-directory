/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2019-08-01.10.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobScheduleExecutionInformation from './JobScheduleExecutionInformation';
import JobScheduleState from './JobScheduleState';
import JobScheduleStatistics from './JobScheduleStatistics';
import JobSpecification from './JobSpecification';
import MetadataItem from './MetadataItem';
import Schedule from './Schedule';

/**
 * The CloudJobSchedule model module.
 * @module model/CloudJobSchedule
 * @version 2019-08-01.10.0
 */
class CloudJobSchedule {
    /**
     * Constructs a new <code>CloudJobSchedule</code>.
     * @alias module:model/CloudJobSchedule
     */
    constructor() { 
        
        CloudJobSchedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CloudJobSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudJobSchedule} obj Optional instance to populate.
     * @return {module:model/CloudJobSchedule} The populated <code>CloudJobSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudJobSchedule();

            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('eTag')) {
                obj['eTag'] = ApiClient.convertToType(data['eTag'], 'String');
            }
            if (data.hasOwnProperty('executionInfo')) {
                obj['executionInfo'] = JobScheduleExecutionInformation.constructFromObject(data['executionInfo']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('jobSpecification')) {
                obj['jobSpecification'] = JobSpecification.constructFromObject(data['jobSpecification']);
            }
            if (data.hasOwnProperty('lastModified')) {
                obj['lastModified'] = ApiClient.convertToType(data['lastModified'], 'Date');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], [MetadataItem]);
            }
            if (data.hasOwnProperty('previousState')) {
                obj['previousState'] = JobScheduleState.constructFromObject(data['previousState']);
            }
            if (data.hasOwnProperty('previousStateTransitionTime')) {
                obj['previousStateTransitionTime'] = ApiClient.convertToType(data['previousStateTransitionTime'], 'Date');
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = Schedule.constructFromObject(data['schedule']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = JobScheduleState.constructFromObject(data['state']);
            }
            if (data.hasOwnProperty('stateTransitionTime')) {
                obj['stateTransitionTime'] = ApiClient.convertToType(data['stateTransitionTime'], 'Date');
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = JobScheduleStatistics.constructFromObject(data['stats']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudJobSchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudJobSchedule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['eTag'] && !(typeof data['eTag'] === 'string' || data['eTag'] instanceof String)) {
            throw new Error("Expected the field `eTag` to be a primitive type in the JSON string but got " + data['eTag']);
        }
        // validate the optional field `executionInfo`
        if (data['executionInfo']) { // data not null
          JobScheduleExecutionInformation.validateJSON(data['executionInfo']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `jobSpecification`
        if (data['jobSpecification']) { // data not null
          JobSpecification.validateJSON(data['jobSpecification']);
        }
        if (data['metadata']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metadata'])) {
                throw new Error("Expected the field `metadata` to be an array in the JSON data but got " + data['metadata']);
            }
            // validate the optional field `metadata` (array)
            for (const item of data['metadata']) {
                MetadataItem.validateJSON(item);
            };
        }
        // validate the optional field `schedule`
        if (data['schedule']) { // data not null
          Schedule.validateJSON(data['schedule']);
        }
        // validate the optional field `stats`
        if (data['stats']) { // data not null
          JobScheduleStatistics.validateJSON(data['stats']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {Date} creationTime
 */
CloudJobSchedule.prototype['creationTime'] = undefined;

/**
 * @member {String} displayName
 */
CloudJobSchedule.prototype['displayName'] = undefined;

/**
 * This is an opaque string. You can use it to detect whether the Job Schedule has changed between requests. In particular, you can be pass the ETag with an Update Job Schedule request to specify that your changes should take effect only if nobody else has modified the schedule in the meantime.
 * @member {String} eTag
 */
CloudJobSchedule.prototype['eTag'] = undefined;

/**
 * @member {module:model/JobScheduleExecutionInformation} executionInfo
 */
CloudJobSchedule.prototype['executionInfo'] = undefined;

/**
 * @member {String} id
 */
CloudJobSchedule.prototype['id'] = undefined;

/**
 * @member {module:model/JobSpecification} jobSpecification
 */
CloudJobSchedule.prototype['jobSpecification'] = undefined;

/**
 * This is the last time at which the schedule level data, such as the Job specification or recurrence information, changed. It does not factor in job-level changes such as new Jobs being created or Jobs changing state.
 * @member {Date} lastModified
 */
CloudJobSchedule.prototype['lastModified'] = undefined;

/**
 * The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
 * @member {Array.<module:model/MetadataItem>} metadata
 */
CloudJobSchedule.prototype['metadata'] = undefined;

/**
 * @member {module:model/JobScheduleState} previousState
 */
CloudJobSchedule.prototype['previousState'] = undefined;

/**
 * This property is not present if the Job Schedule is in its initial active state.
 * @member {Date} previousStateTransitionTime
 */
CloudJobSchedule.prototype['previousStateTransitionTime'] = undefined;

/**
 * @member {module:model/Schedule} schedule
 */
CloudJobSchedule.prototype['schedule'] = undefined;

/**
 * @member {module:model/JobScheduleState} state
 */
CloudJobSchedule.prototype['state'] = undefined;

/**
 * @member {Date} stateTransitionTime
 */
CloudJobSchedule.prototype['stateTransitionTime'] = undefined;

/**
 * @member {module:model/JobScheduleStatistics} stats
 */
CloudJobSchedule.prototype['stats'] = undefined;

/**
 * @member {String} url
 */
CloudJobSchedule.prototype['url'] = undefined;






export default CloudJobSchedule;

