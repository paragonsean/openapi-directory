/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2019-08-01.10.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AutoScaleRun from '../model/AutoScaleRun';
import BatchError from '../model/BatchError';
import CloudPool from '../model/CloudPool';
import CloudPoolListResult from '../model/CloudPoolListResult';
import PoolAddParameter from '../model/PoolAddParameter';
import PoolEnableAutoScaleParameter from '../model/PoolEnableAutoScaleParameter';
import PoolEvaluateAutoScaleParameter from '../model/PoolEvaluateAutoScaleParameter';
import PoolListUsageMetricsResult from '../model/PoolListUsageMetricsResult';
import PoolPatchParameter from '../model/PoolPatchParameter';
import PoolResizeParameter from '../model/PoolResizeParameter';
import PoolStatistics from '../model/PoolStatistics';
import PoolUpdatePropertiesParameter from '../model/PoolUpdatePropertiesParameter';

/**
* Pools service.
* @module api/PoolsApi
* @version 2019-08-01.10.0
*/
export default class PoolsApi {

    /**
    * Constructs a new PoolsApi. 
    * @alias module:api/PoolsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the poolAdd operation.
     * @callback module:api/PoolsApi~poolAddCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a Pool to the specified Account.
     * When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/PoolAddParameter} pool The Pool to be added.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {module:api/PoolsApi~poolAddCallback} callback The callback function, accepting three arguments: error, data, response
     */
    poolAdd(apiVersion, pool, opts, callback) {
      opts = opts || {};
      let postBody = pool;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolAdd");
      }
      // verify the required parameter 'pool' is set
      if (pool === undefined || pool === null) {
        throw new Error("Missing the required parameter 'pool' when calling poolAdd");
      }

      let pathParams = {
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = ['application/json; odata=minimalmetadata'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pools', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolDelete operation.
     * @callback module:api/PoolsApi~poolDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Pool from the specified Account.
     * When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.
     * @param {String} poolId The ID of the Pool to delete.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {String} [ifMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
     * @param {String} [ifNoneMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
     * @param {String} [ifModifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
     * @param {String} [ifUnmodifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
     * @param {module:api/PoolsApi~poolDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    poolDelete(poolId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'poolId' is set
      if (poolId === undefined || poolId === null) {
        throw new Error("Missing the required parameter 'poolId' when calling poolDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolDelete");
      }

      let pathParams = {
        'poolId': poolId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pools/{poolId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolDisableAutoScale operation.
     * @callback module:api/PoolsApi~poolDisableAutoScaleCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disables automatic scaling for a Pool.
     * @param {String} poolId The ID of the Pool on which to disable automatic scaling.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {module:api/PoolsApi~poolDisableAutoScaleCallback} callback The callback function, accepting three arguments: error, data, response
     */
    poolDisableAutoScale(poolId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'poolId' is set
      if (poolId === undefined || poolId === null) {
        throw new Error("Missing the required parameter 'poolId' when calling poolDisableAutoScale");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolDisableAutoScale");
      }

      let pathParams = {
        'poolId': poolId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pools/{poolId}/disableautoscale', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolEnableAutoScale operation.
     * @callback module:api/PoolsApi~poolEnableAutoScaleCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enables automatic scaling for a Pool.
     * You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds.
     * @param {String} poolId The ID of the Pool on which to enable automatic scaling.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/PoolEnableAutoScaleParameter} poolEnableAutoScaleParameter The parameters for the request.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {String} [ifMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
     * @param {String} [ifNoneMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
     * @param {String} [ifModifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
     * @param {String} [ifUnmodifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
     * @param {module:api/PoolsApi~poolEnableAutoScaleCallback} callback The callback function, accepting three arguments: error, data, response
     */
    poolEnableAutoScale(poolId, apiVersion, poolEnableAutoScaleParameter, opts, callback) {
      opts = opts || {};
      let postBody = poolEnableAutoScaleParameter;
      // verify the required parameter 'poolId' is set
      if (poolId === undefined || poolId === null) {
        throw new Error("Missing the required parameter 'poolId' when calling poolEnableAutoScale");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolEnableAutoScale");
      }
      // verify the required parameter 'poolEnableAutoScaleParameter' is set
      if (poolEnableAutoScaleParameter === undefined || poolEnableAutoScaleParameter === null) {
        throw new Error("Missing the required parameter 'poolEnableAutoScaleParameter' when calling poolEnableAutoScale");
      }

      let pathParams = {
        'poolId': poolId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = ['application/json; odata=minimalmetadata'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pools/{poolId}/enableautoscale', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolEvaluateAutoScale operation.
     * @callback module:api/PoolsApi~poolEvaluateAutoScaleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AutoScaleRun} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the result of evaluating an automatic scaling formula on the Pool.
     * This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula.
     * @param {String} poolId The ID of the Pool on which to evaluate the automatic scaling formula.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/PoolEvaluateAutoScaleParameter} poolEvaluateAutoScaleParameter The parameters for the request.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {module:api/PoolsApi~poolEvaluateAutoScaleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AutoScaleRun}
     */
    poolEvaluateAutoScale(poolId, apiVersion, poolEvaluateAutoScaleParameter, opts, callback) {
      opts = opts || {};
      let postBody = poolEvaluateAutoScaleParameter;
      // verify the required parameter 'poolId' is set
      if (poolId === undefined || poolId === null) {
        throw new Error("Missing the required parameter 'poolId' when calling poolEvaluateAutoScale");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolEvaluateAutoScale");
      }
      // verify the required parameter 'poolEvaluateAutoScaleParameter' is set
      if (poolEvaluateAutoScaleParameter === undefined || poolEvaluateAutoScaleParameter === null) {
        throw new Error("Missing the required parameter 'poolEvaluateAutoScaleParameter' when calling poolEvaluateAutoScale");
      }

      let pathParams = {
        'poolId': poolId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = ['application/json; odata=minimalmetadata'];
      let accepts = ['application/json'];
      let returnType = AutoScaleRun;
      return this.apiClient.callApi(
        '/pools/{poolId}/evaluateautoscale', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolExists operation.
     * @callback module:api/PoolsApi~poolExistsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets basic properties of a Pool.
     * @param {String} poolId The ID of the Pool to get.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {String} [ifMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
     * @param {String} [ifNoneMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
     * @param {String} [ifModifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
     * @param {String} [ifUnmodifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
     * @param {module:api/PoolsApi~poolExistsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    poolExists(poolId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'poolId' is set
      if (poolId === undefined || poolId === null) {
        throw new Error("Missing the required parameter 'poolId' when calling poolExists");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolExists");
      }

      let pathParams = {
        'poolId': poolId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pools/{poolId}', 'HEAD',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolGet operation.
     * @callback module:api/PoolsApi~poolGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CloudPool} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets information about the specified Pool.
     * @param {String} poolId The ID of the Pool to get.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {String} [select] An OData $select clause.
     * @param {String} [expand] An OData $expand clause.
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {String} [ifMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
     * @param {String} [ifNoneMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
     * @param {String} [ifModifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
     * @param {String} [ifUnmodifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
     * @param {module:api/PoolsApi~poolGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CloudPool}
     */
    poolGet(poolId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'poolId' is set
      if (poolId === undefined || poolId === null) {
        throw new Error("Missing the required parameter 'poolId' when calling poolGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolGet");
      }

      let pathParams = {
        'poolId': poolId
      };
      let queryParams = {
        '$select': opts['select'],
        '$expand': opts['expand'],
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CloudPool;
      return this.apiClient.callApi(
        '/pools/{poolId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolGetAllLifetimeStatistics operation.
     * @callback module:api/PoolsApi~poolGetAllLifetimeStatisticsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PoolStatistics} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets lifetime summary statistics for all of the Pools in the specified Account.
     * Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {module:api/PoolsApi~poolGetAllLifetimeStatisticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PoolStatistics}
     */
    poolGetAllLifetimeStatistics(apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolGetAllLifetimeStatistics");
      }

      let pathParams = {
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PoolStatistics;
      return this.apiClient.callApi(
        '/lifetimepoolstats', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolList operation.
     * @callback module:api/PoolsApi~poolListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CloudPoolListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the Pools in the specified Account.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-pools.
     * @param {String} [select] An OData $select clause.
     * @param {String} [expand] An OData $expand clause.
     * @param {Number} [maxresults = 1000)] The maximum number of items to return in the response. A maximum of 1000 Pools can be returned.
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {module:api/PoolsApi~poolListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CloudPoolListResult}
     */
    poolList(apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolList");
      }

      let pathParams = {
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$select': opts['select'],
        '$expand': opts['expand'],
        'maxresults': opts['maxresults'],
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CloudPoolListResult;
      return this.apiClient.callApi(
        '/pools', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolListUsageMetrics operation.
     * @callback module:api/PoolsApi~poolListUsageMetricsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PoolListUsageMetricsResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account.
     * If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {Date} [starttime] The earliest time from which to include metrics. This must be at least two and a half hours before the current time. If not specified this defaults to the start time of the last aggregation interval currently available.
     * @param {Date} [endtime] The latest time from which to include metrics. This must be at least two hours before the current time. If not specified this defaults to the end time of the last aggregation interval currently available.
     * @param {String} [filter] An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics.
     * @param {Number} [maxresults = 1000)] The maximum number of items to return in the response. A maximum of 1000 results will be returned.
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {module:api/PoolsApi~poolListUsageMetricsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PoolListUsageMetricsResult}
     */
    poolListUsageMetrics(apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolListUsageMetrics");
      }

      let pathParams = {
      };
      let queryParams = {
        'starttime': opts['starttime'],
        'endtime': opts['endtime'],
        '$filter': opts['filter'],
        'maxresults': opts['maxresults'],
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PoolListUsageMetricsResult;
      return this.apiClient.callApi(
        '/poolusagemetrics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolPatch operation.
     * @callback module:api/PoolsApi~poolPatchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the properties of the specified Pool.
     * This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask.
     * @param {String} poolId The ID of the Pool to update.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/PoolPatchParameter} poolPatchParameter The parameters for the request.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {String} [ifMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
     * @param {String} [ifNoneMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
     * @param {String} [ifModifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
     * @param {String} [ifUnmodifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
     * @param {module:api/PoolsApi~poolPatchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    poolPatch(poolId, apiVersion, poolPatchParameter, opts, callback) {
      opts = opts || {};
      let postBody = poolPatchParameter;
      // verify the required parameter 'poolId' is set
      if (poolId === undefined || poolId === null) {
        throw new Error("Missing the required parameter 'poolId' when calling poolPatch");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolPatch");
      }
      // verify the required parameter 'poolPatchParameter' is set
      if (poolPatchParameter === undefined || poolPatchParameter === null) {
        throw new Error("Missing the required parameter 'poolPatchParameter' when calling poolPatch");
      }

      let pathParams = {
        'poolId': poolId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = ['application/json; odata=minimalmetadata'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pools/{poolId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolResize operation.
     * @callback module:api/PoolsApi~poolResizeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Changes the number of Compute Nodes that are assigned to a Pool.
     * You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead.
     * @param {String} poolId The ID of the Pool to resize.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/PoolResizeParameter} poolResizeParameter The parameters for the request.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {String} [ifMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
     * @param {String} [ifNoneMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
     * @param {String} [ifModifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
     * @param {String} [ifUnmodifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
     * @param {module:api/PoolsApi~poolResizeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    poolResize(poolId, apiVersion, poolResizeParameter, opts, callback) {
      opts = opts || {};
      let postBody = poolResizeParameter;
      // verify the required parameter 'poolId' is set
      if (poolId === undefined || poolId === null) {
        throw new Error("Missing the required parameter 'poolId' when calling poolResize");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolResize");
      }
      // verify the required parameter 'poolResizeParameter' is set
      if (poolResizeParameter === undefined || poolResizeParameter === null) {
        throw new Error("Missing the required parameter 'poolResizeParameter' when calling poolResize");
      }

      let pathParams = {
        'poolId': poolId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = ['application/json; odata=minimalmetadata'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pools/{poolId}/resize', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolStopResize operation.
     * @callback module:api/PoolsApi~poolStopResizeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Stops an ongoing resize operation on the Pool.
     * This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created.
     * @param {String} poolId The ID of the Pool whose resizing you want to stop.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {String} [ifMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
     * @param {String} [ifNoneMatch] An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
     * @param {String} [ifModifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
     * @param {String} [ifUnmodifiedSince] A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
     * @param {module:api/PoolsApi~poolStopResizeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    poolStopResize(poolId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'poolId' is set
      if (poolId === undefined || poolId === null) {
        throw new Error("Missing the required parameter 'poolId' when calling poolStopResize");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolStopResize");
      }

      let pathParams = {
        'poolId': poolId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pools/{poolId}/stopresize', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the poolUpdateProperties operation.
     * @callback module:api/PoolsApi~poolUpdatePropertiesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the properties of the specified Pool.
     * This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask.
     * @param {String} poolId The ID of the Pool to update.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/PoolUpdatePropertiesParameter} poolUpdatePropertiesParameter The parameters for the request.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
     * @param {module:api/PoolsApi~poolUpdatePropertiesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    poolUpdateProperties(poolId, apiVersion, poolUpdatePropertiesParameter, opts, callback) {
      opts = opts || {};
      let postBody = poolUpdatePropertiesParameter;
      // verify the required parameter 'poolId' is set
      if (poolId === undefined || poolId === null) {
        throw new Error("Missing the required parameter 'poolId' when calling poolUpdateProperties");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling poolUpdateProperties");
      }
      // verify the required parameter 'poolUpdatePropertiesParameter' is set
      if (poolUpdatePropertiesParameter === undefined || poolUpdatePropertiesParameter === null) {
        throw new Error("Missing the required parameter 'poolUpdatePropertiesParameter' when calling poolUpdateProperties");
      }

      let pathParams = {
        'poolId': poolId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate']
      };
      let formParams = {
      };

      let authNames = ['api_key', 'azure_auth'];
      let contentTypes = ['application/json; odata=minimalmetadata'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/pools/{poolId}/updateproperties', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
