# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AzureFileShareConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_key: str=None, account_name: str=None, azure_file_url: str=None, mount_options: str=None, relative_mount_path: str=None):
        """AzureFileShareConfiguration - a model defined in OpenAPI

        :param account_key: The account_key of this AzureFileShareConfiguration.
        :param account_name: The account_name of this AzureFileShareConfiguration.
        :param azure_file_url: The azure_file_url of this AzureFileShareConfiguration.
        :param mount_options: The mount_options of this AzureFileShareConfiguration.
        :param relative_mount_path: The relative_mount_path of this AzureFileShareConfiguration.
        """
        self.openapi_types = {
            'account_key': str,
            'account_name': str,
            'azure_file_url': str,
            'mount_options': str,
            'relative_mount_path': str
        }

        self.attribute_map = {
            'account_key': 'accountKey',
            'account_name': 'accountName',
            'azure_file_url': 'azureFileUrl',
            'mount_options': 'mountOptions',
            'relative_mount_path': 'relativeMountPath'
        }

        self._account_key = account_key
        self._account_name = account_name
        self._azure_file_url = azure_file_url
        self._mount_options = mount_options
        self._relative_mount_path = relative_mount_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureFileShareConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureFileShareConfiguration of this AzureFileShareConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_key(self):
        """Gets the account_key of this AzureFileShareConfiguration.


        :return: The account_key of this AzureFileShareConfiguration.
        :rtype: str
        """
        return self._account_key

    @account_key.setter
    def account_key(self, account_key):
        """Sets the account_key of this AzureFileShareConfiguration.


        :param account_key: The account_key of this AzureFileShareConfiguration.
        :type account_key: str
        """
        if account_key is None:
            raise ValueError("Invalid value for `account_key`, must not be `None`")

        self._account_key = account_key

    @property
    def account_name(self):
        """Gets the account_name of this AzureFileShareConfiguration.


        :return: The account_name of this AzureFileShareConfiguration.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this AzureFileShareConfiguration.


        :param account_name: The account_name of this AzureFileShareConfiguration.
        :type account_name: str
        """
        if account_name is None:
            raise ValueError("Invalid value for `account_name`, must not be `None`")

        self._account_name = account_name

    @property
    def azure_file_url(self):
        """Gets the azure_file_url of this AzureFileShareConfiguration.

        This is of the form 'https://{account}.file.core.windows.net/'.

        :return: The azure_file_url of this AzureFileShareConfiguration.
        :rtype: str
        """
        return self._azure_file_url

    @azure_file_url.setter
    def azure_file_url(self, azure_file_url):
        """Sets the azure_file_url of this AzureFileShareConfiguration.

        This is of the form 'https://{account}.file.core.windows.net/'.

        :param azure_file_url: The azure_file_url of this AzureFileShareConfiguration.
        :type azure_file_url: str
        """
        if azure_file_url is None:
            raise ValueError("Invalid value for `azure_file_url`, must not be `None`")

        self._azure_file_url = azure_file_url

    @property
    def mount_options(self):
        """Gets the mount_options of this AzureFileShareConfiguration.

        These are 'net use' options in Windows and 'mount' options in Linux.

        :return: The mount_options of this AzureFileShareConfiguration.
        :rtype: str
        """
        return self._mount_options

    @mount_options.setter
    def mount_options(self, mount_options):
        """Sets the mount_options of this AzureFileShareConfiguration.

        These are 'net use' options in Windows and 'mount' options in Linux.

        :param mount_options: The mount_options of this AzureFileShareConfiguration.
        :type mount_options: str
        """

        self._mount_options = mount_options

    @property
    def relative_mount_path(self):
        """Gets the relative_mount_path of this AzureFileShareConfiguration.

        All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.

        :return: The relative_mount_path of this AzureFileShareConfiguration.
        :rtype: str
        """
        return self._relative_mount_path

    @relative_mount_path.setter
    def relative_mount_path(self, relative_mount_path):
        """Sets the relative_mount_path of this AzureFileShareConfiguration.

        All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.

        :param relative_mount_path: The relative_mount_path of this AzureFileShareConfiguration.
        :type relative_mount_path: str
        """
        if relative_mount_path is None:
            raise ValueError("Invalid value for `relative_mount_path`, must not be `None`")

        self._relative_mount_path = relative_mount_path
