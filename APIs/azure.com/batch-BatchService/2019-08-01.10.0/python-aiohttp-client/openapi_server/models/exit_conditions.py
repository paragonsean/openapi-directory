# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.exit_code_mapping import ExitCodeMapping
from openapi_server.models.exit_code_range_mapping import ExitCodeRangeMapping
from openapi_server.models.exit_options import ExitOptions
from openapi_server import util


class ExitConditions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default: ExitOptions=None, exit_code_ranges: List[ExitCodeRangeMapping]=None, exit_codes: List[ExitCodeMapping]=None, file_upload_error: ExitOptions=None, pre_processing_error: ExitOptions=None):
        """ExitConditions - a model defined in OpenAPI

        :param default: The default of this ExitConditions.
        :param exit_code_ranges: The exit_code_ranges of this ExitConditions.
        :param exit_codes: The exit_codes of this ExitConditions.
        :param file_upload_error: The file_upload_error of this ExitConditions.
        :param pre_processing_error: The pre_processing_error of this ExitConditions.
        """
        self.openapi_types = {
            'default': ExitOptions,
            'exit_code_ranges': List[ExitCodeRangeMapping],
            'exit_codes': List[ExitCodeMapping],
            'file_upload_error': ExitOptions,
            'pre_processing_error': ExitOptions
        }

        self.attribute_map = {
            'default': 'default',
            'exit_code_ranges': 'exitCodeRanges',
            'exit_codes': 'exitCodes',
            'file_upload_error': 'fileUploadError',
            'pre_processing_error': 'preProcessingError'
        }

        self._default = default
        self._exit_code_ranges = exit_code_ranges
        self._exit_codes = exit_codes
        self._file_upload_error = file_upload_error
        self._pre_processing_error = pre_processing_error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExitConditions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExitConditions of this ExitConditions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default(self):
        """Gets the default of this ExitConditions.


        :return: The default of this ExitConditions.
        :rtype: ExitOptions
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this ExitConditions.


        :param default: The default of this ExitConditions.
        :type default: ExitOptions
        """

        self._default = default

    @property
    def exit_code_ranges(self):
        """Gets the exit_code_ranges of this ExitConditions.


        :return: The exit_code_ranges of this ExitConditions.
        :rtype: List[ExitCodeRangeMapping]
        """
        return self._exit_code_ranges

    @exit_code_ranges.setter
    def exit_code_ranges(self, exit_code_ranges):
        """Sets the exit_code_ranges of this ExitConditions.


        :param exit_code_ranges: The exit_code_ranges of this ExitConditions.
        :type exit_code_ranges: List[ExitCodeRangeMapping]
        """

        self._exit_code_ranges = exit_code_ranges

    @property
    def exit_codes(self):
        """Gets the exit_codes of this ExitConditions.


        :return: The exit_codes of this ExitConditions.
        :rtype: List[ExitCodeMapping]
        """
        return self._exit_codes

    @exit_codes.setter
    def exit_codes(self, exit_codes):
        """Sets the exit_codes of this ExitConditions.


        :param exit_codes: The exit_codes of this ExitConditions.
        :type exit_codes: List[ExitCodeMapping]
        """

        self._exit_codes = exit_codes

    @property
    def file_upload_error(self):
        """Gets the file_upload_error of this ExitConditions.


        :return: The file_upload_error of this ExitConditions.
        :rtype: ExitOptions
        """
        return self._file_upload_error

    @file_upload_error.setter
    def file_upload_error(self, file_upload_error):
        """Sets the file_upload_error of this ExitConditions.


        :param file_upload_error: The file_upload_error of this ExitConditions.
        :type file_upload_error: ExitOptions
        """

        self._file_upload_error = file_upload_error

    @property
    def pre_processing_error(self):
        """Gets the pre_processing_error of this ExitConditions.


        :return: The pre_processing_error of this ExitConditions.
        :rtype: ExitOptions
        """
        return self._pre_processing_error

    @pre_processing_error.setter
    def pre_processing_error(self, pre_processing_error):
        """Sets the pre_processing_error of this ExitConditions.


        :param pre_processing_error: The pre_processing_error of this ExitConditions.
        :type pre_processing_error: ExitOptions
        """

        self._pre_processing_error = pre_processing_error
