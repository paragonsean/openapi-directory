/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2019-06-01.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOnAllTasksComplete.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOnAllTasksComplete::OAIOnAllTasksComplete(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOnAllTasksComplete::OAIOnAllTasksComplete() {
    this->initializeModel();
}

OAIOnAllTasksComplete::~OAIOnAllTasksComplete() {}

void OAIOnAllTasksComplete::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOnAllTasksComplete::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOnAllTasksComplete::fromJson(QString jsonString) {
    
    if ( jsonString.compare("noaction", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOnAllTasksComplete::NOACTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("terminatejob", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOnAllTasksComplete::TERMINATEJOB;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOnAllTasksComplete::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOnAllTasksComplete::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOnAllTasksComplete::NOACTION:
            val = "noaction";
            break;
        case eOAIOnAllTasksComplete::TERMINATEJOB:
            val = "terminatejob";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOnAllTasksComplete::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOnAllTasksComplete::eOAIOnAllTasksComplete OAIOnAllTasksComplete::getValue() const {
    return m_value;
}

void OAIOnAllTasksComplete::setValue(const OAIOnAllTasksComplete::eOAIOnAllTasksComplete& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOnAllTasksComplete::isSet() const {
    
    return m_value_isSet;
}

bool OAIOnAllTasksComplete::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
