/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2019-06-01.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualMachineConfiguration.h
 *
 * 
 */

#ifndef OAIVirtualMachineConfiguration_H
#define OAIVirtualMachineConfiguration_H

#include <QJsonObject>

#include "OAIContainerConfiguration.h"
#include "OAIDataDisk.h"
#include "OAIImageReference.h"
#include "OAIWindowsConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContainerConfiguration;
class OAIDataDisk;
class OAIImageReference;
class OAIWindowsConfiguration;

class OAIVirtualMachineConfiguration : public OAIObject {
public:
    OAIVirtualMachineConfiguration();
    OAIVirtualMachineConfiguration(QString json);
    ~OAIVirtualMachineConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContainerConfiguration getContainerConfiguration() const;
    void setContainerConfiguration(const OAIContainerConfiguration &container_configuration);
    bool is_container_configuration_Set() const;
    bool is_container_configuration_Valid() const;

    QList<OAIDataDisk> getDataDisks() const;
    void setDataDisks(const QList<OAIDataDisk> &data_disks);
    bool is_data_disks_Set() const;
    bool is_data_disks_Valid() const;

    OAIImageReference getImageReference() const;
    void setImageReference(const OAIImageReference &image_reference);
    bool is_image_reference_Set() const;
    bool is_image_reference_Valid() const;

    QString getLicenseType() const;
    void setLicenseType(const QString &license_type);
    bool is_license_type_Set() const;
    bool is_license_type_Valid() const;

    QString getNodeAgentSkuid() const;
    void setNodeAgentSkuid(const QString &node_agent_skuid);
    bool is_node_agent_skuid_Set() const;
    bool is_node_agent_skuid_Valid() const;

    OAIWindowsConfiguration getWindowsConfiguration() const;
    void setWindowsConfiguration(const OAIWindowsConfiguration &windows_configuration);
    bool is_windows_configuration_Set() const;
    bool is_windows_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContainerConfiguration m_container_configuration;
    bool m_container_configuration_isSet;
    bool m_container_configuration_isValid;

    QList<OAIDataDisk> m_data_disks;
    bool m_data_disks_isSet;
    bool m_data_disks_isValid;

    OAIImageReference m_image_reference;
    bool m_image_reference_isSet;
    bool m_image_reference_isValid;

    QString m_license_type;
    bool m_license_type_isSet;
    bool m_license_type_isValid;

    QString m_node_agent_skuid;
    bool m_node_agent_skuid_isSet;
    bool m_node_agent_skuid_isValid;

    OAIWindowsConfiguration m_windows_configuration;
    bool m_windows_configuration_isSet;
    bool m_windows_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualMachineConfiguration)

#endif // OAIVirtualMachineConfiguration_H
