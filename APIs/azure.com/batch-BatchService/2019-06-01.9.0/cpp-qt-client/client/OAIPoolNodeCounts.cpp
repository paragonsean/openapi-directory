/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2019-06-01.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPoolNodeCounts.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPoolNodeCounts::OAIPoolNodeCounts(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPoolNodeCounts::OAIPoolNodeCounts() {
    this->initializeModel();
}

OAIPoolNodeCounts::~OAIPoolNodeCounts() {}

void OAIPoolNodeCounts::initializeModel() {

    m_dedicated_isSet = false;
    m_dedicated_isValid = false;

    m_low_priority_isSet = false;
    m_low_priority_isValid = false;

    m_pool_id_isSet = false;
    m_pool_id_isValid = false;
}

void OAIPoolNodeCounts::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPoolNodeCounts::fromJsonObject(QJsonObject json) {

    m_dedicated_isValid = ::OpenAPI::fromJsonValue(m_dedicated, json[QString("dedicated")]);
    m_dedicated_isSet = !json[QString("dedicated")].isNull() && m_dedicated_isValid;

    m_low_priority_isValid = ::OpenAPI::fromJsonValue(m_low_priority, json[QString("lowPriority")]);
    m_low_priority_isSet = !json[QString("lowPriority")].isNull() && m_low_priority_isValid;

    m_pool_id_isValid = ::OpenAPI::fromJsonValue(m_pool_id, json[QString("poolId")]);
    m_pool_id_isSet = !json[QString("poolId")].isNull() && m_pool_id_isValid;
}

QString OAIPoolNodeCounts::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPoolNodeCounts::asJsonObject() const {
    QJsonObject obj;
    if (m_dedicated.isSet()) {
        obj.insert(QString("dedicated"), ::OpenAPI::toJsonValue(m_dedicated));
    }
    if (m_low_priority.isSet()) {
        obj.insert(QString("lowPriority"), ::OpenAPI::toJsonValue(m_low_priority));
    }
    if (m_pool_id_isSet) {
        obj.insert(QString("poolId"), ::OpenAPI::toJsonValue(m_pool_id));
    }
    return obj;
}

OAINodeCounts OAIPoolNodeCounts::getDedicated() const {
    return m_dedicated;
}
void OAIPoolNodeCounts::setDedicated(const OAINodeCounts &dedicated) {
    m_dedicated = dedicated;
    m_dedicated_isSet = true;
}

bool OAIPoolNodeCounts::is_dedicated_Set() const{
    return m_dedicated_isSet;
}

bool OAIPoolNodeCounts::is_dedicated_Valid() const{
    return m_dedicated_isValid;
}

OAINodeCounts OAIPoolNodeCounts::getLowPriority() const {
    return m_low_priority;
}
void OAIPoolNodeCounts::setLowPriority(const OAINodeCounts &low_priority) {
    m_low_priority = low_priority;
    m_low_priority_isSet = true;
}

bool OAIPoolNodeCounts::is_low_priority_Set() const{
    return m_low_priority_isSet;
}

bool OAIPoolNodeCounts::is_low_priority_Valid() const{
    return m_low_priority_isValid;
}

QString OAIPoolNodeCounts::getPoolId() const {
    return m_pool_id;
}
void OAIPoolNodeCounts::setPoolId(const QString &pool_id) {
    m_pool_id = pool_id;
    m_pool_id_isSet = true;
}

bool OAIPoolNodeCounts::is_pool_id_Set() const{
    return m_pool_id_isSet;
}

bool OAIPoolNodeCounts::is_pool_id_Valid() const{
    return m_pool_id_isValid;
}

bool OAIPoolNodeCounts::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dedicated.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_low_priority.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pool_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPoolNodeCounts::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pool_id_isValid && true;
}

} // namespace OpenAPI
