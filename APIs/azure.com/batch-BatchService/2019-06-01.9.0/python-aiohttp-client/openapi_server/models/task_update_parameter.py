# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_constraints import TaskConstraints
from openapi_server import util


class TaskUpdateParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, constraints: TaskConstraints=None):
        """TaskUpdateParameter - a model defined in OpenAPI

        :param constraints: The constraints of this TaskUpdateParameter.
        """
        self.openapi_types = {
            'constraints': TaskConstraints
        }

        self.attribute_map = {
            'constraints': 'constraints'
        }

        self._constraints = constraints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskUpdateParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskUpdateParameter of this TaskUpdateParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def constraints(self):
        """Gets the constraints of this TaskUpdateParameter.


        :return: The constraints of this TaskUpdateParameter.
        :rtype: TaskConstraints
        """
        return self._constraints

    @constraints.setter
    def constraints(self, constraints):
        """Sets the constraints of this TaskUpdateParameter.


        :param constraints: The constraints of this TaskUpdateParameter.
        :type constraints: TaskConstraints
        """

        self._constraints = constraints
