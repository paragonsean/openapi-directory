/*
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2019-06-01.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.BatchError;
import org.openapitools.client.model.CloudJob;
import org.openapitools.client.model.CloudJobListPreparationAndReleaseTaskStatusResult;
import org.openapitools.client.model.CloudJobListResult;
import org.openapitools.client.model.JobAddParameter;
import org.openapitools.client.model.JobDisableParameter;
import org.openapitools.client.model.JobPatchParameter;
import org.openapitools.client.model.JobStatistics;
import org.openapitools.client.model.JobTerminateParameter;
import org.openapitools.client.model.JobUpdateParameter;
import org.openapitools.client.model.TaskCounts;
import java.util.UUID;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class JobsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public JobsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public JobsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for jobAdd
     * @param apiVersion Client API Version. (required)
     * @param job The Job to be added. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobAddCall(String apiVersion, JobAddParameter job, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = job;

        // create path and map variables
        String localVarPath = "/jobs";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; odata=minimalmetadata"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobAddValidateBeforeCall(String apiVersion, JobAddParameter job, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobAdd(Async)");
        }

        // verify the required parameter 'job' is set
        if (job == null) {
            throw new ApiException("Missing the required parameter 'job' when calling jobAdd(Async)");
        }

        return jobAddCall(apiVersion, job, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * Adds a Job to the specified Account.
     * The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
     * @param apiVersion Client API Version. (required)
     * @param job The Job to be added. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobAdd(String apiVersion, JobAddParameter job, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        jobAddWithHttpInfo(apiVersion, job, timeout, clientRequestId, returnClientRequestId, ocpDate);
    }

    /**
     * Adds a Job to the specified Account.
     * The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
     * @param apiVersion Client API Version. (required)
     * @param job The Job to be added. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobAddWithHttpInfo(String apiVersion, JobAddParameter job, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = jobAddValidateBeforeCall(apiVersion, job, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Adds a Job to the specified Account. (asynchronously)
     * The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
     * @param apiVersion Client API Version. (required)
     * @param job The Job to be added. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobAddAsync(String apiVersion, JobAddParameter job, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobAddValidateBeforeCall(apiVersion, job, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobDelete
     * @param jobId The ID of the Job to delete. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobDeleteCall(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobDeleteValidateBeforeCall(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobDelete(Async)");
        }

        return jobDeleteCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * Deletes a Job.
     * Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks&#39; working directories and all their contents.  When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted.
     * @param jobId The ID of the Job to delete. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobDelete(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        jobDeleteWithHttpInfo(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * Deletes a Job.
     * Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks&#39; working directories and all their contents.  When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted.
     * @param jobId The ID of the Job to delete. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobDeleteWithHttpInfo(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = jobDeleteValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Deletes a Job. (asynchronously)
     * Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks&#39; working directories and all their contents.  When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted.
     * @param jobId The ID of the Job to delete. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobDeleteAsync(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobDeleteValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobDisable
     * @param jobId The ID of the Job to disable. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobDisableParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobDisableCall(String jobId, String apiVersion, JobDisableParameter jobDisableParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = jobDisableParameter;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/disable"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; odata=minimalmetadata"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobDisableValidateBeforeCall(String jobId, String apiVersion, JobDisableParameter jobDisableParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobDisable(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobDisable(Async)");
        }

        // verify the required parameter 'jobDisableParameter' is set
        if (jobDisableParameter == null) {
            throw new ApiException("Missing the required parameter 'jobDisableParameter' when calling jobDisable(Async)");
        }

        return jobDisableCall(jobId, apiVersion, jobDisableParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * Disables the specified Job, preventing new Tasks from running.
     * The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409.
     * @param jobId The ID of the Job to disable. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobDisableParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobDisable(String jobId, String apiVersion, JobDisableParameter jobDisableParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        jobDisableWithHttpInfo(jobId, apiVersion, jobDisableParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * Disables the specified Job, preventing new Tasks from running.
     * The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409.
     * @param jobId The ID of the Job to disable. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobDisableParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobDisableWithHttpInfo(String jobId, String apiVersion, JobDisableParameter jobDisableParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = jobDisableValidateBeforeCall(jobId, apiVersion, jobDisableParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Disables the specified Job, preventing new Tasks from running. (asynchronously)
     * The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409.
     * @param jobId The ID of the Job to disable. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobDisableParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobDisableAsync(String jobId, String apiVersion, JobDisableParameter jobDisableParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobDisableValidateBeforeCall(jobId, apiVersion, jobDisableParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobEnable
     * @param jobId The ID of the Job to enable. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobEnableCall(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/enable"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobEnableValidateBeforeCall(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobEnable(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobEnable(Async)");
        }

        return jobEnableCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * Enables the specified Job, allowing new Tasks to run.
     * When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run.
     * @param jobId The ID of the Job to enable. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobEnable(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        jobEnableWithHttpInfo(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * Enables the specified Job, allowing new Tasks to run.
     * When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run.
     * @param jobId The ID of the Job to enable. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobEnableWithHttpInfo(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = jobEnableValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Enables the specified Job, allowing new Tasks to run. (asynchronously)
     * When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run.
     * @param jobId The ID of the Job to enable. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobEnableAsync(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobEnableValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobGet
     * @param jobId The ID of the Job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the Job. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobGetCall(String jobId, String apiVersion, String $select, String $expand, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($select != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$select", $select));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobGetValidateBeforeCall(String jobId, String apiVersion, String $select, String $expand, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobGet(Async)");
        }

        return jobGetCall(jobId, apiVersion, $select, $expand, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * Gets information about the specified Job.
     * 
     * @param jobId The ID of the Job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @return CloudJob
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the Job. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public CloudJob jobGet(String jobId, String apiVersion, String $select, String $expand, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        ApiResponse<CloudJob> localVarResp = jobGetWithHttpInfo(jobId, apiVersion, $select, $expand, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
        return localVarResp.getData();
    }

    /**
     * Gets information about the specified Job.
     * 
     * @param jobId The ID of the Job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @return ApiResponse&lt;CloudJob&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the Job. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CloudJob> jobGetWithHttpInfo(String jobId, String apiVersion, String $select, String $expand, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = jobGetValidateBeforeCall(jobId, apiVersion, $select, $expand, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        Type localVarReturnType = new TypeToken<CloudJob>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Gets information about the specified Job. (asynchronously)
     * 
     * @param jobId The ID of the Job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the Job. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobGetAsync(String jobId, String apiVersion, String $select, String $expand, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<CloudJob> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobGetValidateBeforeCall(jobId, apiVersion, $select, $expand, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        Type localVarReturnType = new TypeToken<CloudJob>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobGetAllLifetimeStatistics
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the Job statistics for the lifetime of the Batch Account. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobGetAllLifetimeStatisticsCall(String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/lifetimejobstats";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobGetAllLifetimeStatisticsValidateBeforeCall(String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobGetAllLifetimeStatistics(Async)");
        }

        return jobGetAllLifetimeStatisticsCall(apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * Gets lifetime summary statistics for all of the Jobs in the specified Account.
     * Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @return JobStatistics
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the Job statistics for the lifetime of the Batch Account. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public JobStatistics jobGetAllLifetimeStatistics(String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        ApiResponse<JobStatistics> localVarResp = jobGetAllLifetimeStatisticsWithHttpInfo(apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate);
        return localVarResp.getData();
    }

    /**
     * Gets lifetime summary statistics for all of the Jobs in the specified Account.
     * Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @return ApiResponse&lt;JobStatistics&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the Job statistics for the lifetime of the Batch Account. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<JobStatistics> jobGetAllLifetimeStatisticsWithHttpInfo(String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = jobGetAllLifetimeStatisticsValidateBeforeCall(apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        Type localVarReturnType = new TypeToken<JobStatistics>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Gets lifetime summary statistics for all of the Jobs in the specified Account. (asynchronously)
     * Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the Job statistics for the lifetime of the Batch Account. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobGetAllLifetimeStatisticsAsync(String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<JobStatistics> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobGetAllLifetimeStatisticsValidateBeforeCall(apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        Type localVarReturnType = new TypeToken<JobStatistics>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobGetTaskCounts
     * @param jobId The ID of the Job. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the Task counts for the specified Job. </td><td>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobGetTaskCountsCall(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/taskcounts"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobGetTaskCountsValidateBeforeCall(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobGetTaskCounts(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobGetTaskCounts(Async)");
        }

        return jobGetTaskCountsCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * Gets the Task counts for the specified Job.
     * Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.
     * @param jobId The ID of the Job. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @return TaskCounts
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the Task counts for the specified Job. </td><td>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public TaskCounts jobGetTaskCounts(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        ApiResponse<TaskCounts> localVarResp = jobGetTaskCountsWithHttpInfo(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate);
        return localVarResp.getData();
    }

    /**
     * Gets the Task counts for the specified Job.
     * Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.
     * @param jobId The ID of the Job. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @return ApiResponse&lt;TaskCounts&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the Task counts for the specified Job. </td><td>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TaskCounts> jobGetTaskCountsWithHttpInfo(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = jobGetTaskCountsValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        Type localVarReturnType = new TypeToken<TaskCounts>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Gets the Task counts for the specified Job. (asynchronously)
     * Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.
     * @param jobId The ID of the Job. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the Task counts for the specified Job. </td><td>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobGetTaskCountsAsync(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<TaskCounts> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobGetTaskCountsValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        Type localVarReturnType = new TypeToken<TaskCounts>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobList
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. A maximum of 1000 Jobs can be returned. (optional, default to 1000)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the list of Jobs. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobListCall(String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($select != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$select", $select));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (maxresults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxresults", maxresults));
        }

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobListValidateBeforeCall(String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobList(Async)");
        }

        return jobListCall(apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * Lists all of the Jobs in the specified Account.
     * 
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. A maximum of 1000 Jobs can be returned. (optional, default to 1000)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @return CloudJobListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the list of Jobs. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public CloudJobListResult jobList(String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        ApiResponse<CloudJobListResult> localVarResp = jobListWithHttpInfo(apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate);
        return localVarResp.getData();
    }

    /**
     * Lists all of the Jobs in the specified Account.
     * 
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. A maximum of 1000 Jobs can be returned. (optional, default to 1000)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @return ApiResponse&lt;CloudJobListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the list of Jobs. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CloudJobListResult> jobListWithHttpInfo(String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = jobListValidateBeforeCall(apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        Type localVarReturnType = new TypeToken<CloudJobListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Lists all of the Jobs in the specified Account. (asynchronously)
     * 
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. A maximum of 1000 Jobs can be returned. (optional, default to 1000)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the list of Jobs. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobListAsync(String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<CloudJobListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobListValidateBeforeCall(apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        Type localVarReturnType = new TypeToken<CloudJobListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobListFromJobSchedule
     * @param jobScheduleId The ID of the Job Schedule from which you want to get a list of Jobs. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. A maximum of 1000 Jobs can be returned. (optional, default to 1000)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the list of Jobs. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobListFromJobScheduleCall(String jobScheduleId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobschedules/{jobScheduleId}/jobs"
            .replace("{" + "jobScheduleId" + "}", localVarApiClient.escapeString(jobScheduleId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($select != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$select", $select));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (maxresults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxresults", maxresults));
        }

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobListFromJobScheduleValidateBeforeCall(String jobScheduleId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobScheduleId' is set
        if (jobScheduleId == null) {
            throw new ApiException("Missing the required parameter 'jobScheduleId' when calling jobListFromJobSchedule(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobListFromJobSchedule(Async)");
        }

        return jobListFromJobScheduleCall(jobScheduleId, apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * Lists the Jobs that have been created under the specified Job Schedule.
     * 
     * @param jobScheduleId The ID of the Job Schedule from which you want to get a list of Jobs. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. A maximum of 1000 Jobs can be returned. (optional, default to 1000)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @return CloudJobListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the list of Jobs. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public CloudJobListResult jobListFromJobSchedule(String jobScheduleId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        ApiResponse<CloudJobListResult> localVarResp = jobListFromJobScheduleWithHttpInfo(jobScheduleId, apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate);
        return localVarResp.getData();
    }

    /**
     * Lists the Jobs that have been created under the specified Job Schedule.
     * 
     * @param jobScheduleId The ID of the Job Schedule from which you want to get a list of Jobs. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. A maximum of 1000 Jobs can be returned. (optional, default to 1000)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @return ApiResponse&lt;CloudJobListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the list of Jobs. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CloudJobListResult> jobListFromJobScheduleWithHttpInfo(String jobScheduleId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = jobListFromJobScheduleValidateBeforeCall(jobScheduleId, apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        Type localVarReturnType = new TypeToken<CloudJobListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Lists the Jobs that have been created under the specified Job Schedule. (asynchronously)
     * 
     * @param jobScheduleId The ID of the Job Schedule from which you want to get a list of Jobs. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. A maximum of 1000 Jobs can be returned. (optional, default to 1000)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing the list of Jobs. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobListFromJobScheduleAsync(String jobScheduleId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<CloudJobListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobListFromJobScheduleValidateBeforeCall(jobScheduleId, apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        Type localVarReturnType = new TypeToken<CloudJobListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobListPreparationAndReleaseTaskStatus
     * @param jobId The ID of the Job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status. (optional)
     * @param $select An OData $select clause. (optional)
     * @param maxresults The maximum number of items to return in the response. A maximum of 1000 Tasks can be returned. (optional, default to 1000)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing a list of Job Preparation and Job Release Task statuses. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobListPreparationAndReleaseTaskStatusCall(String jobId, String apiVersion, String $filter, String $select, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/jobpreparationandreleasetaskstatus"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($select != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$select", $select));
        }

        if (maxresults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxresults", maxresults));
        }

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobListPreparationAndReleaseTaskStatusValidateBeforeCall(String jobId, String apiVersion, String $filter, String $select, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobListPreparationAndReleaseTaskStatus(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobListPreparationAndReleaseTaskStatus(Async)");
        }

        return jobListPreparationAndReleaseTaskStatusCall(jobId, apiVersion, $filter, $select, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run.
     * This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
     * @param jobId The ID of the Job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status. (optional)
     * @param $select An OData $select clause. (optional)
     * @param maxresults The maximum number of items to return in the response. A maximum of 1000 Tasks can be returned. (optional, default to 1000)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @return CloudJobListPreparationAndReleaseTaskStatusResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing a list of Job Preparation and Job Release Task statuses. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409. </td><td>  -  </td></tr>
     </table>
     */
    public CloudJobListPreparationAndReleaseTaskStatusResult jobListPreparationAndReleaseTaskStatus(String jobId, String apiVersion, String $filter, String $select, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        ApiResponse<CloudJobListPreparationAndReleaseTaskStatusResult> localVarResp = jobListPreparationAndReleaseTaskStatusWithHttpInfo(jobId, apiVersion, $filter, $select, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate);
        return localVarResp.getData();
    }

    /**
     * Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run.
     * This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
     * @param jobId The ID of the Job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status. (optional)
     * @param $select An OData $select clause. (optional)
     * @param maxresults The maximum number of items to return in the response. A maximum of 1000 Tasks can be returned. (optional, default to 1000)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @return ApiResponse&lt;CloudJobListPreparationAndReleaseTaskStatusResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing a list of Job Preparation and Job Release Task statuses. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CloudJobListPreparationAndReleaseTaskStatusResult> jobListPreparationAndReleaseTaskStatusWithHttpInfo(String jobId, String apiVersion, String $filter, String $select, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = jobListPreparationAndReleaseTaskStatusValidateBeforeCall(jobId, apiVersion, $filter, $select, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        Type localVarReturnType = new TypeToken<CloudJobListPreparationAndReleaseTaskStatusResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. (asynchronously)
     * This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
     * @param jobId The ID of the Job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status. (optional)
     * @param $select An OData $select clause. (optional)
     * @param maxresults The maximum number of items to return in the response. A maximum of 1000 Tasks can be returned. (optional, default to 1000)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A response containing a list of Job Preparation and Job Release Task statuses. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobListPreparationAndReleaseTaskStatusAsync(String jobId, String apiVersion, String $filter, String $select, Integer maxresults, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<CloudJobListPreparationAndReleaseTaskStatusResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobListPreparationAndReleaseTaskStatusValidateBeforeCall(jobId, apiVersion, $filter, $select, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        Type localVarReturnType = new TypeToken<CloudJobListPreparationAndReleaseTaskStatusResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobPatch
     * @param jobId The ID of the Job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobPatchParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobPatchCall(String jobId, String apiVersion, JobPatchParameter jobPatchParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = jobPatchParameter;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; odata=minimalmetadata"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobPatchValidateBeforeCall(String jobId, String apiVersion, JobPatchParameter jobPatchParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobPatch(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobPatch(Async)");
        }

        // verify the required parameter 'jobPatchParameter' is set
        if (jobPatchParameter == null) {
            throw new ApiException("Missing the required parameter 'jobPatchParameter' when calling jobPatch(Async)");
        }

        return jobPatchCall(jobId, apiVersion, jobPatchParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * Updates the properties of the specified Job.
     * This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints.
     * @param jobId The ID of the Job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobPatchParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobPatch(String jobId, String apiVersion, JobPatchParameter jobPatchParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        jobPatchWithHttpInfo(jobId, apiVersion, jobPatchParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * Updates the properties of the specified Job.
     * This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints.
     * @param jobId The ID of the Job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobPatchParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobPatchWithHttpInfo(String jobId, String apiVersion, JobPatchParameter jobPatchParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = jobPatchValidateBeforeCall(jobId, apiVersion, jobPatchParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Updates the properties of the specified Job. (asynchronously)
     * This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints.
     * @param jobId The ID of the Job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobPatchParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobPatchAsync(String jobId, String apiVersion, JobPatchParameter jobPatchParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobPatchValidateBeforeCall(jobId, apiVersion, jobPatchParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobTerminate
     * @param jobId The ID of the Job to terminate. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param jobTerminateParameter The parameters for the request. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobTerminateCall(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, JobTerminateParameter jobTerminateParameter, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = jobTerminateParameter;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/terminate"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; odata=minimalmetadata"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobTerminateValidateBeforeCall(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, JobTerminateParameter jobTerminateParameter, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobTerminate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobTerminate(Async)");
        }

        return jobTerminateCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, jobTerminateParameter, _callback);

    }

    /**
     * Terminates the specified Job, marking it as completed.
     * When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled.
     * @param jobId The ID of the Job to terminate. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param jobTerminateParameter The parameters for the request. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobTerminate(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, JobTerminateParameter jobTerminateParameter) throws ApiException {
        jobTerminateWithHttpInfo(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, jobTerminateParameter);
    }

    /**
     * Terminates the specified Job, marking it as completed.
     * When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled.
     * @param jobId The ID of the Job to terminate. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param jobTerminateParameter The parameters for the request. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobTerminateWithHttpInfo(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, JobTerminateParameter jobTerminateParameter) throws ApiException {
        okhttp3.Call localVarCall = jobTerminateValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, jobTerminateParameter, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Terminates the specified Job, marking it as completed. (asynchronously)
     * When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled.
     * @param jobId The ID of the Job to terminate. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param jobTerminateParameter The parameters for the request. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobTerminateAsync(String jobId, String apiVersion, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, JobTerminateParameter jobTerminateParameter, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobTerminateValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, jobTerminateParameter, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobUpdate
     * @param jobId The ID of the Job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobUpdateParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobUpdateCall(String jobId, String apiVersion, JobUpdateParameter jobUpdateParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = jobUpdateParameter;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; odata=minimalmetadata"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key", "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobUpdateValidateBeforeCall(String jobId, String apiVersion, JobUpdateParameter jobUpdateParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobUpdate(Async)");
        }

        // verify the required parameter 'jobUpdateParameter' is set
        if (jobUpdateParameter == null) {
            throw new ApiException("Missing the required parameter 'jobUpdateParameter' when calling jobUpdate(Async)");
        }

        return jobUpdateCall(jobId, apiVersion, jobUpdateParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * Updates the properties of the specified Job.
     * This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.
     * @param jobId The ID of the Job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobUpdateParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobUpdate(String jobId, String apiVersion, JobUpdateParameter jobUpdateParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        jobUpdateWithHttpInfo(jobId, apiVersion, jobUpdateParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * Updates the properties of the specified Job.
     * This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.
     * @param jobId The ID of the Job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobUpdateParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobUpdateWithHttpInfo(String jobId, String apiVersion, JobUpdateParameter jobUpdateParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = jobUpdateValidateBeforeCall(jobId, apiVersion, jobUpdateParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Updates the properties of the specified Job. (asynchronously)
     * This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.
     * @param jobId The ID of the Job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobUpdateParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id in the response. (optional, default to false)
     * @param ocpDate The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly. (optional)
     * @param ifMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service exactly matches the value specified by the client. (optional)
     * @param ifNoneMatch An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource&#39;s current ETag on the service does not match the value specified by the client. (optional)
     * @param ifModifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time. (optional)
     * @param ifUnmodifiedSince A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The request to the Batch service was successful. </td><td>  * ETag - The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers. <br>  * client-request-id - The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true. <br>  * DataServiceId - The OData ID of the resource to which the request applied. <br>  * Last-Modified - The time at which the resource was last modified. <br>  * request-id - A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobUpdateAsync(String jobId, String apiVersion, JobUpdateParameter jobUpdateParameter, Integer timeout, UUID clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobUpdateValidateBeforeCall(jobId, apiVersion, jobUpdateParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
