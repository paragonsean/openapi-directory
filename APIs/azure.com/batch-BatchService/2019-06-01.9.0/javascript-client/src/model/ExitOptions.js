/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2019-06-01.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExitOptions model module.
 * @module model/ExitOptions
 * @version 2019-06-01.9.0
 */
class ExitOptions {
    /**
     * Constructs a new <code>ExitOptions</code>.
     * @alias module:model/ExitOptions
     */
    constructor() { 
        
        ExitOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExitOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExitOptions} obj Optional instance to populate.
     * @return {module:model/ExitOptions} The populated <code>ExitOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExitOptions();

            if (data.hasOwnProperty('dependencyAction')) {
                obj['dependencyAction'] = ApiClient.convertToType(data['dependencyAction'], 'String');
            }
            if (data.hasOwnProperty('jobAction')) {
                obj['jobAction'] = ApiClient.convertToType(data['jobAction'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExitOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExitOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dependencyAction'] && !(typeof data['dependencyAction'] === 'string' || data['dependencyAction'] instanceof String)) {
            throw new Error("Expected the field `dependencyAction` to be a primitive type in the JSON string but got " + data['dependencyAction']);
        }
        // ensure the json data is a string
        if (data['jobAction'] && !(typeof data['jobAction'] === 'string' || data['jobAction'] instanceof String)) {
            throw new Error("Expected the field `jobAction` to be a primitive type in the JSON string but got " + data['jobAction']);
        }

        return true;
    }


}



/**
 * The default is 'satisfy' for exit code 0, and 'block' for all other exit conditions. If the Job's usesTaskDependencies property is set to false, then specifying the dependencyAction property returns an error and the add Task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400  (Bad Request).
 * @member {module:model/ExitOptions.DependencyActionEnum} dependencyAction
 */
ExitOptions.prototype['dependencyAction'] = undefined;

/**
 * The default is none for exit code 0 and terminate for all other exit conditions. If the Job's onTaskFailed property is noaction, then specifying this property returns an error and the add Task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
 * @member {module:model/ExitOptions.JobActionEnum} jobAction
 */
ExitOptions.prototype['jobAction'] = undefined;





/**
 * Allowed values for the <code>dependencyAction</code> property.
 * @enum {String}
 * @readonly
 */
ExitOptions['DependencyActionEnum'] = {

    /**
     * value: "satisfy"
     * @const
     */
    "satisfy": "satisfy",

    /**
     * value: "block"
     * @const
     */
    "block": "block"
};


/**
 * Allowed values for the <code>jobAction</code> property.
 * @enum {String}
 * @readonly
 */
ExitOptions['JobActionEnum'] = {

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "disable"
     * @const
     */
    "disable": "disable",

    /**
     * value: "terminate"
     * @const
     */
    "terminate": "terminate"
};



export default ExitOptions;

