/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2019-06-01.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImageReference model module.
 * @module model/ImageReference
 * @version 2019-06-01.9.0
 */
class ImageReference {
    /**
     * Constructs a new <code>ImageReference</code>.
     * @alias module:model/ImageReference
     */
    constructor() { 
        
        ImageReference.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageReference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageReference} obj Optional instance to populate.
     * @return {module:model/ImageReference} The populated <code>ImageReference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageReference();

            if (data.hasOwnProperty('offer')) {
                obj['offer'] = ApiClient.convertToType(data['offer'], 'String');
            }
            if (data.hasOwnProperty('publisher')) {
                obj['publisher'] = ApiClient.convertToType(data['publisher'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('virtualMachineImageId')) {
                obj['virtualMachineImageId'] = ApiClient.convertToType(data['virtualMachineImageId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageReference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageReference</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['offer'] && !(typeof data['offer'] === 'string' || data['offer'] instanceof String)) {
            throw new Error("Expected the field `offer` to be a primitive type in the JSON string but got " + data['offer']);
        }
        // ensure the json data is a string
        if (data['publisher'] && !(typeof data['publisher'] === 'string' || data['publisher'] instanceof String)) {
            throw new Error("Expected the field `publisher` to be a primitive type in the JSON string but got " + data['publisher']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }
        // ensure the json data is a string
        if (data['virtualMachineImageId'] && !(typeof data['virtualMachineImageId'] === 'string' || data['virtualMachineImageId'] instanceof String)) {
            throw new Error("Expected the field `virtualMachineImageId` to be a primitive type in the JSON string but got " + data['virtualMachineImageId']);
        }

        return true;
    }


}



/**
 * For example, UbuntuServer or WindowsServer.
 * @member {String} offer
 */
ImageReference.prototype['offer'] = undefined;

/**
 * For example, Canonical or MicrosoftWindowsServer.
 * @member {String} publisher
 */
ImageReference.prototype['publisher'] = undefined;

/**
 * For example, 14.04.0-LTS or 2012-R2-Datacenter.
 * @member {String} sku
 */
ImageReference.prototype['sku'] = undefined;

/**
 * A value of 'latest' can be specified to select the latest version of an Image. If omitted, the default is 'latest'.
 * @member {String} version
 */
ImageReference.prototype['version'] = undefined;

/**
 * This property is mutually exclusive with other ImageReference properties. The Virtual Machine Image must be in the same region and subscription as the Azure Batch Account. For information about the firewall settings for the Batch Compute Node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
 * @member {String} virtualMachineImageId
 */
ImageReference.prototype['virtualMachineImageId'] = undefined;






export default ImageReference;

