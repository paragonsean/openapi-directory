/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2019-06-01.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UploadBatchServiceLogsConfiguration model module.
 * @module model/UploadBatchServiceLogsConfiguration
 * @version 2019-06-01.9.0
 */
class UploadBatchServiceLogsConfiguration {
    /**
     * Constructs a new <code>UploadBatchServiceLogsConfiguration</code>.
     * @alias module:model/UploadBatchServiceLogsConfiguration
     * @param containerUrl {String} The URL must include a Shared Access Signature (SAS) granting write permissions to the container. The SAS duration must allow enough time for the upload to finish. The start time for SAS is optional and recommended to not be specified.
     * @param startTime {Date} Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested.
     */
    constructor(containerUrl, startTime) { 
        
        UploadBatchServiceLogsConfiguration.initialize(this, containerUrl, startTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, containerUrl, startTime) { 
        obj['containerUrl'] = containerUrl;
        obj['startTime'] = startTime;
    }

    /**
     * Constructs a <code>UploadBatchServiceLogsConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UploadBatchServiceLogsConfiguration} obj Optional instance to populate.
     * @return {module:model/UploadBatchServiceLogsConfiguration} The populated <code>UploadBatchServiceLogsConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UploadBatchServiceLogsConfiguration();

            if (data.hasOwnProperty('containerUrl')) {
                obj['containerUrl'] = ApiClient.convertToType(data['containerUrl'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UploadBatchServiceLogsConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UploadBatchServiceLogsConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UploadBatchServiceLogsConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['containerUrl'] && !(typeof data['containerUrl'] === 'string' || data['containerUrl'] instanceof String)) {
            throw new Error("Expected the field `containerUrl` to be a primitive type in the JSON string but got " + data['containerUrl']);
        }

        return true;
    }


}

UploadBatchServiceLogsConfiguration.RequiredProperties = ["containerUrl", "startTime"];

/**
 * The URL must include a Shared Access Signature (SAS) granting write permissions to the container. The SAS duration must allow enough time for the upload to finish. The start time for SAS is optional and recommended to not be specified.
 * @member {String} containerUrl
 */
UploadBatchServiceLogsConfiguration.prototype['containerUrl'] = undefined;

/**
 * Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested. If omitted, the default is to upload all logs available after the startTime.
 * @member {Date} endTime
 */
UploadBatchServiceLogsConfiguration.prototype['endTime'] = undefined;

/**
 * Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested.
 * @member {Date} startTime
 */
UploadBatchServiceLogsConfiguration.prototype['startTime'] = undefined;






export default UploadBatchServiceLogsConfiguration;

