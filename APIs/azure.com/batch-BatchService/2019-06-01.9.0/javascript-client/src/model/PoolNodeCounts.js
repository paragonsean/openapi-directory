/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2019-06-01.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NodeCounts from './NodeCounts';

/**
 * The PoolNodeCounts model module.
 * @module model/PoolNodeCounts
 * @version 2019-06-01.9.0
 */
class PoolNodeCounts {
    /**
     * Constructs a new <code>PoolNodeCounts</code>.
     * @alias module:model/PoolNodeCounts
     * @param poolId {String} 
     */
    constructor(poolId) { 
        
        PoolNodeCounts.initialize(this, poolId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, poolId) { 
        obj['poolId'] = poolId;
    }

    /**
     * Constructs a <code>PoolNodeCounts</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PoolNodeCounts} obj Optional instance to populate.
     * @return {module:model/PoolNodeCounts} The populated <code>PoolNodeCounts</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PoolNodeCounts();

            if (data.hasOwnProperty('dedicated')) {
                obj['dedicated'] = NodeCounts.constructFromObject(data['dedicated']);
            }
            if (data.hasOwnProperty('lowPriority')) {
                obj['lowPriority'] = NodeCounts.constructFromObject(data['lowPriority']);
            }
            if (data.hasOwnProperty('poolId')) {
                obj['poolId'] = ApiClient.convertToType(data['poolId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PoolNodeCounts</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PoolNodeCounts</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PoolNodeCounts.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `dedicated`
        if (data['dedicated']) { // data not null
          NodeCounts.validateJSON(data['dedicated']);
        }
        // validate the optional field `lowPriority`
        if (data['lowPriority']) { // data not null
          NodeCounts.validateJSON(data['lowPriority']);
        }
        // ensure the json data is a string
        if (data['poolId'] && !(typeof data['poolId'] === 'string' || data['poolId'] instanceof String)) {
            throw new Error("Expected the field `poolId` to be a primitive type in the JSON string but got " + data['poolId']);
        }

        return true;
    }


}

PoolNodeCounts.RequiredProperties = ["poolId"];

/**
 * @member {module:model/NodeCounts} dedicated
 */
PoolNodeCounts.prototype['dedicated'] = undefined;

/**
 * @member {module:model/NodeCounts} lowPriority
 */
PoolNodeCounts.prototype['lowPriority'] = undefined;

/**
 * @member {String} poolId
 */
PoolNodeCounts.prototype['poolId'] = undefined;






export default PoolNodeCounts;

