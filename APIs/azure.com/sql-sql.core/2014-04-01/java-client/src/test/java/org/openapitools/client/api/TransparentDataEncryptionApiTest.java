/*
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database resources including recommendations and operations.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.TransparentDataEncryption;
import org.openapitools.client.model.TransparentDataEncryptionActivityListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransparentDataEncryptionApi
 */
@Disabled
public class TransparentDataEncryptionApiTest {

    private final TransparentDataEncryptionApi api = new TransparentDataEncryptionApi();

    /**
     * Returns a database&#39;s transparent data encryption operation result.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transparentDataEncryptionActivitiesListByConfigurationTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String transparentDataEncryptionName = null;
        TransparentDataEncryptionActivityListResult response = api.transparentDataEncryptionActivitiesListByConfiguration(apiVersion, subscriptionId, resourceGroupName, serverName, databaseName, transparentDataEncryptionName);
        // TODO: test validations
    }

    /**
     * Creates or updates a database&#39;s transparent data encryption configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transparentDataEncryptionsCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String transparentDataEncryptionName = null;
        TransparentDataEncryption parameters = null;
        TransparentDataEncryption response = api.transparentDataEncryptionsCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, serverName, databaseName, transparentDataEncryptionName, parameters);
        // TODO: test validations
    }

    /**
     * Gets a database&#39;s transparent data encryption configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transparentDataEncryptionsGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String transparentDataEncryptionName = null;
        TransparentDataEncryption response = api.transparentDataEncryptionsGet(apiVersion, subscriptionId, resourceGroupName, serverName, databaseName, transparentDataEncryptionName);
        // TODO: test validations
    }

}
