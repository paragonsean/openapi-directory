# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.slo_usage_metric import SloUsageMetric
from openapi_server import util


class ServiceTierAdvisorProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_time_ratio: float=None, avg_dtu: float=None, confidence: float=None, current_service_level_objective: str=None, current_service_level_objective_id: str=None, database_size_based_recommendation_service_level_objective: str=None, database_size_based_recommendation_service_level_objective_id: str=None, disaster_plan_based_recommendation_service_level_objective: str=None, disaster_plan_based_recommendation_service_level_objective_id: str=None, max_dtu: float=None, max_size_in_gb: float=None, min_dtu: float=None, observation_period_end: datetime=None, observation_period_start: datetime=None, overall_recommendation_service_level_objective: str=None, overall_recommendation_service_level_objective_id: str=None, service_level_objective_usage_metrics: List[SloUsageMetric]=None, usage_based_recommendation_service_level_objective: str=None, usage_based_recommendation_service_level_objective_id: str=None):
        """ServiceTierAdvisorProperties - a model defined in OpenAPI

        :param active_time_ratio: The active_time_ratio of this ServiceTierAdvisorProperties.
        :param avg_dtu: The avg_dtu of this ServiceTierAdvisorProperties.
        :param confidence: The confidence of this ServiceTierAdvisorProperties.
        :param current_service_level_objective: The current_service_level_objective of this ServiceTierAdvisorProperties.
        :param current_service_level_objective_id: The current_service_level_objective_id of this ServiceTierAdvisorProperties.
        :param database_size_based_recommendation_service_level_objective: The database_size_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.
        :param database_size_based_recommendation_service_level_objective_id: The database_size_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.
        :param disaster_plan_based_recommendation_service_level_objective: The disaster_plan_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.
        :param disaster_plan_based_recommendation_service_level_objective_id: The disaster_plan_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.
        :param max_dtu: The max_dtu of this ServiceTierAdvisorProperties.
        :param max_size_in_gb: The max_size_in_gb of this ServiceTierAdvisorProperties.
        :param min_dtu: The min_dtu of this ServiceTierAdvisorProperties.
        :param observation_period_end: The observation_period_end of this ServiceTierAdvisorProperties.
        :param observation_period_start: The observation_period_start of this ServiceTierAdvisorProperties.
        :param overall_recommendation_service_level_objective: The overall_recommendation_service_level_objective of this ServiceTierAdvisorProperties.
        :param overall_recommendation_service_level_objective_id: The overall_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.
        :param service_level_objective_usage_metrics: The service_level_objective_usage_metrics of this ServiceTierAdvisorProperties.
        :param usage_based_recommendation_service_level_objective: The usage_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.
        :param usage_based_recommendation_service_level_objective_id: The usage_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.
        """
        self.openapi_types = {
            'active_time_ratio': float,
            'avg_dtu': float,
            'confidence': float,
            'current_service_level_objective': str,
            'current_service_level_objective_id': str,
            'database_size_based_recommendation_service_level_objective': str,
            'database_size_based_recommendation_service_level_objective_id': str,
            'disaster_plan_based_recommendation_service_level_objective': str,
            'disaster_plan_based_recommendation_service_level_objective_id': str,
            'max_dtu': float,
            'max_size_in_gb': float,
            'min_dtu': float,
            'observation_period_end': datetime,
            'observation_period_start': datetime,
            'overall_recommendation_service_level_objective': str,
            'overall_recommendation_service_level_objective_id': str,
            'service_level_objective_usage_metrics': List[SloUsageMetric],
            'usage_based_recommendation_service_level_objective': str,
            'usage_based_recommendation_service_level_objective_id': str
        }

        self.attribute_map = {
            'active_time_ratio': 'activeTimeRatio',
            'avg_dtu': 'avgDtu',
            'confidence': 'confidence',
            'current_service_level_objective': 'currentServiceLevelObjective',
            'current_service_level_objective_id': 'currentServiceLevelObjectiveId',
            'database_size_based_recommendation_service_level_objective': 'databaseSizeBasedRecommendationServiceLevelObjective',
            'database_size_based_recommendation_service_level_objective_id': 'databaseSizeBasedRecommendationServiceLevelObjectiveId',
            'disaster_plan_based_recommendation_service_level_objective': 'disasterPlanBasedRecommendationServiceLevelObjective',
            'disaster_plan_based_recommendation_service_level_objective_id': 'disasterPlanBasedRecommendationServiceLevelObjectiveId',
            'max_dtu': 'maxDtu',
            'max_size_in_gb': 'maxSizeInGB',
            'min_dtu': 'minDtu',
            'observation_period_end': 'observationPeriodEnd',
            'observation_period_start': 'observationPeriodStart',
            'overall_recommendation_service_level_objective': 'overallRecommendationServiceLevelObjective',
            'overall_recommendation_service_level_objective_id': 'overallRecommendationServiceLevelObjectiveId',
            'service_level_objective_usage_metrics': 'serviceLevelObjectiveUsageMetrics',
            'usage_based_recommendation_service_level_objective': 'usageBasedRecommendationServiceLevelObjective',
            'usage_based_recommendation_service_level_objective_id': 'usageBasedRecommendationServiceLevelObjectiveId'
        }

        self._active_time_ratio = active_time_ratio
        self._avg_dtu = avg_dtu
        self._confidence = confidence
        self._current_service_level_objective = current_service_level_objective
        self._current_service_level_objective_id = current_service_level_objective_id
        self._database_size_based_recommendation_service_level_objective = database_size_based_recommendation_service_level_objective
        self._database_size_based_recommendation_service_level_objective_id = database_size_based_recommendation_service_level_objective_id
        self._disaster_plan_based_recommendation_service_level_objective = disaster_plan_based_recommendation_service_level_objective
        self._disaster_plan_based_recommendation_service_level_objective_id = disaster_plan_based_recommendation_service_level_objective_id
        self._max_dtu = max_dtu
        self._max_size_in_gb = max_size_in_gb
        self._min_dtu = min_dtu
        self._observation_period_end = observation_period_end
        self._observation_period_start = observation_period_start
        self._overall_recommendation_service_level_objective = overall_recommendation_service_level_objective
        self._overall_recommendation_service_level_objective_id = overall_recommendation_service_level_objective_id
        self._service_level_objective_usage_metrics = service_level_objective_usage_metrics
        self._usage_based_recommendation_service_level_objective = usage_based_recommendation_service_level_objective
        self._usage_based_recommendation_service_level_objective_id = usage_based_recommendation_service_level_objective_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceTierAdvisorProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceTierAdvisorProperties of this ServiceTierAdvisorProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_time_ratio(self):
        """Gets the active_time_ratio of this ServiceTierAdvisorProperties.

        The activeTimeRatio for service tier advisor.

        :return: The active_time_ratio of this ServiceTierAdvisorProperties.
        :rtype: float
        """
        return self._active_time_ratio

    @active_time_ratio.setter
    def active_time_ratio(self, active_time_ratio):
        """Sets the active_time_ratio of this ServiceTierAdvisorProperties.

        The activeTimeRatio for service tier advisor.

        :param active_time_ratio: The active_time_ratio of this ServiceTierAdvisorProperties.
        :type active_time_ratio: float
        """

        self._active_time_ratio = active_time_ratio

    @property
    def avg_dtu(self):
        """Gets the avg_dtu of this ServiceTierAdvisorProperties.

        Gets or sets avgDtu for service tier advisor.

        :return: The avg_dtu of this ServiceTierAdvisorProperties.
        :rtype: float
        """
        return self._avg_dtu

    @avg_dtu.setter
    def avg_dtu(self, avg_dtu):
        """Sets the avg_dtu of this ServiceTierAdvisorProperties.

        Gets or sets avgDtu for service tier advisor.

        :param avg_dtu: The avg_dtu of this ServiceTierAdvisorProperties.
        :type avg_dtu: float
        """

        self._avg_dtu = avg_dtu

    @property
    def confidence(self):
        """Gets the confidence of this ServiceTierAdvisorProperties.

        Gets or sets confidence for service tier advisor.

        :return: The confidence of this ServiceTierAdvisorProperties.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this ServiceTierAdvisorProperties.

        Gets or sets confidence for service tier advisor.

        :param confidence: The confidence of this ServiceTierAdvisorProperties.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def current_service_level_objective(self):
        """Gets the current_service_level_objective of this ServiceTierAdvisorProperties.

        Gets or sets currentServiceLevelObjective for service tier advisor.

        :return: The current_service_level_objective of this ServiceTierAdvisorProperties.
        :rtype: str
        """
        return self._current_service_level_objective

    @current_service_level_objective.setter
    def current_service_level_objective(self, current_service_level_objective):
        """Sets the current_service_level_objective of this ServiceTierAdvisorProperties.

        Gets or sets currentServiceLevelObjective for service tier advisor.

        :param current_service_level_objective: The current_service_level_objective of this ServiceTierAdvisorProperties.
        :type current_service_level_objective: str
        """

        self._current_service_level_objective = current_service_level_objective

    @property
    def current_service_level_objective_id(self):
        """Gets the current_service_level_objective_id of this ServiceTierAdvisorProperties.

        Gets or sets currentServiceLevelObjectiveId for service tier advisor.

        :return: The current_service_level_objective_id of this ServiceTierAdvisorProperties.
        :rtype: str
        """
        return self._current_service_level_objective_id

    @current_service_level_objective_id.setter
    def current_service_level_objective_id(self, current_service_level_objective_id):
        """Sets the current_service_level_objective_id of this ServiceTierAdvisorProperties.

        Gets or sets currentServiceLevelObjectiveId for service tier advisor.

        :param current_service_level_objective_id: The current_service_level_objective_id of this ServiceTierAdvisorProperties.
        :type current_service_level_objective_id: str
        """

        self._current_service_level_objective_id = current_service_level_objective_id

    @property
    def database_size_based_recommendation_service_level_objective(self):
        """Gets the database_size_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.

        Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for service tier advisor.

        :return: The database_size_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.
        :rtype: str
        """
        return self._database_size_based_recommendation_service_level_objective

    @database_size_based_recommendation_service_level_objective.setter
    def database_size_based_recommendation_service_level_objective(self, database_size_based_recommendation_service_level_objective):
        """Sets the database_size_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.

        Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for service tier advisor.

        :param database_size_based_recommendation_service_level_objective: The database_size_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.
        :type database_size_based_recommendation_service_level_objective: str
        """

        self._database_size_based_recommendation_service_level_objective = database_size_based_recommendation_service_level_objective

    @property
    def database_size_based_recommendation_service_level_objective_id(self):
        """Gets the database_size_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.

        Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for service tier advisor.

        :return: The database_size_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.
        :rtype: str
        """
        return self._database_size_based_recommendation_service_level_objective_id

    @database_size_based_recommendation_service_level_objective_id.setter
    def database_size_based_recommendation_service_level_objective_id(self, database_size_based_recommendation_service_level_objective_id):
        """Sets the database_size_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.

        Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for service tier advisor.

        :param database_size_based_recommendation_service_level_objective_id: The database_size_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.
        :type database_size_based_recommendation_service_level_objective_id: str
        """

        self._database_size_based_recommendation_service_level_objective_id = database_size_based_recommendation_service_level_objective_id

    @property
    def disaster_plan_based_recommendation_service_level_objective(self):
        """Gets the disaster_plan_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.

        Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for service tier advisor.

        :return: The disaster_plan_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.
        :rtype: str
        """
        return self._disaster_plan_based_recommendation_service_level_objective

    @disaster_plan_based_recommendation_service_level_objective.setter
    def disaster_plan_based_recommendation_service_level_objective(self, disaster_plan_based_recommendation_service_level_objective):
        """Sets the disaster_plan_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.

        Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for service tier advisor.

        :param disaster_plan_based_recommendation_service_level_objective: The disaster_plan_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.
        :type disaster_plan_based_recommendation_service_level_objective: str
        """

        self._disaster_plan_based_recommendation_service_level_objective = disaster_plan_based_recommendation_service_level_objective

    @property
    def disaster_plan_based_recommendation_service_level_objective_id(self):
        """Gets the disaster_plan_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.

        Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for service tier advisor.

        :return: The disaster_plan_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.
        :rtype: str
        """
        return self._disaster_plan_based_recommendation_service_level_objective_id

    @disaster_plan_based_recommendation_service_level_objective_id.setter
    def disaster_plan_based_recommendation_service_level_objective_id(self, disaster_plan_based_recommendation_service_level_objective_id):
        """Sets the disaster_plan_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.

        Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for service tier advisor.

        :param disaster_plan_based_recommendation_service_level_objective_id: The disaster_plan_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.
        :type disaster_plan_based_recommendation_service_level_objective_id: str
        """

        self._disaster_plan_based_recommendation_service_level_objective_id = disaster_plan_based_recommendation_service_level_objective_id

    @property
    def max_dtu(self):
        """Gets the max_dtu of this ServiceTierAdvisorProperties.

        Gets or sets maxDtu for service tier advisor.

        :return: The max_dtu of this ServiceTierAdvisorProperties.
        :rtype: float
        """
        return self._max_dtu

    @max_dtu.setter
    def max_dtu(self, max_dtu):
        """Sets the max_dtu of this ServiceTierAdvisorProperties.

        Gets or sets maxDtu for service tier advisor.

        :param max_dtu: The max_dtu of this ServiceTierAdvisorProperties.
        :type max_dtu: float
        """

        self._max_dtu = max_dtu

    @property
    def max_size_in_gb(self):
        """Gets the max_size_in_gb of this ServiceTierAdvisorProperties.

        Gets or sets maxSizeInGB for service tier advisor.

        :return: The max_size_in_gb of this ServiceTierAdvisorProperties.
        :rtype: float
        """
        return self._max_size_in_gb

    @max_size_in_gb.setter
    def max_size_in_gb(self, max_size_in_gb):
        """Sets the max_size_in_gb of this ServiceTierAdvisorProperties.

        Gets or sets maxSizeInGB for service tier advisor.

        :param max_size_in_gb: The max_size_in_gb of this ServiceTierAdvisorProperties.
        :type max_size_in_gb: float
        """

        self._max_size_in_gb = max_size_in_gb

    @property
    def min_dtu(self):
        """Gets the min_dtu of this ServiceTierAdvisorProperties.

        Gets or sets minDtu for service tier advisor.

        :return: The min_dtu of this ServiceTierAdvisorProperties.
        :rtype: float
        """
        return self._min_dtu

    @min_dtu.setter
    def min_dtu(self, min_dtu):
        """Sets the min_dtu of this ServiceTierAdvisorProperties.

        Gets or sets minDtu for service tier advisor.

        :param min_dtu: The min_dtu of this ServiceTierAdvisorProperties.
        :type min_dtu: float
        """

        self._min_dtu = min_dtu

    @property
    def observation_period_end(self):
        """Gets the observation_period_end of this ServiceTierAdvisorProperties.

        The observation period start (ISO8601 format).

        :return: The observation_period_end of this ServiceTierAdvisorProperties.
        :rtype: datetime
        """
        return self._observation_period_end

    @observation_period_end.setter
    def observation_period_end(self, observation_period_end):
        """Sets the observation_period_end of this ServiceTierAdvisorProperties.

        The observation period start (ISO8601 format).

        :param observation_period_end: The observation_period_end of this ServiceTierAdvisorProperties.
        :type observation_period_end: datetime
        """

        self._observation_period_end = observation_period_end

    @property
    def observation_period_start(self):
        """Gets the observation_period_start of this ServiceTierAdvisorProperties.

        The observation period start (ISO8601 format).

        :return: The observation_period_start of this ServiceTierAdvisorProperties.
        :rtype: datetime
        """
        return self._observation_period_start

    @observation_period_start.setter
    def observation_period_start(self, observation_period_start):
        """Sets the observation_period_start of this ServiceTierAdvisorProperties.

        The observation period start (ISO8601 format).

        :param observation_period_start: The observation_period_start of this ServiceTierAdvisorProperties.
        :type observation_period_start: datetime
        """

        self._observation_period_start = observation_period_start

    @property
    def overall_recommendation_service_level_objective(self):
        """Gets the overall_recommendation_service_level_objective of this ServiceTierAdvisorProperties.

        Gets or sets overallRecommendationServiceLevelObjective for service tier advisor.

        :return: The overall_recommendation_service_level_objective of this ServiceTierAdvisorProperties.
        :rtype: str
        """
        return self._overall_recommendation_service_level_objective

    @overall_recommendation_service_level_objective.setter
    def overall_recommendation_service_level_objective(self, overall_recommendation_service_level_objective):
        """Sets the overall_recommendation_service_level_objective of this ServiceTierAdvisorProperties.

        Gets or sets overallRecommendationServiceLevelObjective for service tier advisor.

        :param overall_recommendation_service_level_objective: The overall_recommendation_service_level_objective of this ServiceTierAdvisorProperties.
        :type overall_recommendation_service_level_objective: str
        """

        self._overall_recommendation_service_level_objective = overall_recommendation_service_level_objective

    @property
    def overall_recommendation_service_level_objective_id(self):
        """Gets the overall_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.

        Gets or sets overallRecommendationServiceLevelObjectiveId for service tier advisor.

        :return: The overall_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.
        :rtype: str
        """
        return self._overall_recommendation_service_level_objective_id

    @overall_recommendation_service_level_objective_id.setter
    def overall_recommendation_service_level_objective_id(self, overall_recommendation_service_level_objective_id):
        """Sets the overall_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.

        Gets or sets overallRecommendationServiceLevelObjectiveId for service tier advisor.

        :param overall_recommendation_service_level_objective_id: The overall_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.
        :type overall_recommendation_service_level_objective_id: str
        """

        self._overall_recommendation_service_level_objective_id = overall_recommendation_service_level_objective_id

    @property
    def service_level_objective_usage_metrics(self):
        """Gets the service_level_objective_usage_metrics of this ServiceTierAdvisorProperties.

        Gets or sets serviceLevelObjectiveUsageMetrics for the service tier advisor.

        :return: The service_level_objective_usage_metrics of this ServiceTierAdvisorProperties.
        :rtype: List[SloUsageMetric]
        """
        return self._service_level_objective_usage_metrics

    @service_level_objective_usage_metrics.setter
    def service_level_objective_usage_metrics(self, service_level_objective_usage_metrics):
        """Sets the service_level_objective_usage_metrics of this ServiceTierAdvisorProperties.

        Gets or sets serviceLevelObjectiveUsageMetrics for the service tier advisor.

        :param service_level_objective_usage_metrics: The service_level_objective_usage_metrics of this ServiceTierAdvisorProperties.
        :type service_level_objective_usage_metrics: List[SloUsageMetric]
        """

        self._service_level_objective_usage_metrics = service_level_objective_usage_metrics

    @property
    def usage_based_recommendation_service_level_objective(self):
        """Gets the usage_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.

        Gets or sets usageBasedRecommendationServiceLevelObjective for service tier advisor.

        :return: The usage_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.
        :rtype: str
        """
        return self._usage_based_recommendation_service_level_objective

    @usage_based_recommendation_service_level_objective.setter
    def usage_based_recommendation_service_level_objective(self, usage_based_recommendation_service_level_objective):
        """Sets the usage_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.

        Gets or sets usageBasedRecommendationServiceLevelObjective for service tier advisor.

        :param usage_based_recommendation_service_level_objective: The usage_based_recommendation_service_level_objective of this ServiceTierAdvisorProperties.
        :type usage_based_recommendation_service_level_objective: str
        """

        self._usage_based_recommendation_service_level_objective = usage_based_recommendation_service_level_objective

    @property
    def usage_based_recommendation_service_level_objective_id(self):
        """Gets the usage_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.

        Gets or sets usageBasedRecommendationServiceLevelObjectiveId for service tier advisor.

        :return: The usage_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.
        :rtype: str
        """
        return self._usage_based_recommendation_service_level_objective_id

    @usage_based_recommendation_service_level_objective_id.setter
    def usage_based_recommendation_service_level_objective_id(self, usage_based_recommendation_service_level_objective_id):
        """Sets the usage_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.

        Gets or sets usageBasedRecommendationServiceLevelObjectiveId for service tier advisor.

        :param usage_based_recommendation_service_level_objective_id: The usage_based_recommendation_service_level_objective_id of this ServiceTierAdvisorProperties.
        :type usage_based_recommendation_service_level_objective_id: str
        """

        self._usage_based_recommendation_service_level_objective_id = usage_based_recommendation_service_level_objective_id
