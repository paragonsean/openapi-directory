/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExtendedServerBlobAuditingPolicyProperties.h
 *
 * Properties of an extended server blob auditing policy.
 */

#ifndef OAIExtendedServerBlobAuditingPolicyProperties_H
#define OAIExtendedServerBlobAuditingPolicyProperties_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExtendedServerBlobAuditingPolicyProperties : public OAIObject {
public:
    OAIExtendedServerBlobAuditingPolicyProperties();
    OAIExtendedServerBlobAuditingPolicyProperties(QString json);
    ~OAIExtendedServerBlobAuditingPolicyProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAuditActionsAndGroups() const;
    void setAuditActionsAndGroups(const QList<QString> &audit_actions_and_groups);
    bool is_audit_actions_and_groups_Set() const;
    bool is_audit_actions_and_groups_Valid() const;

    bool isIsAzureMonitorTargetEnabled() const;
    void setIsAzureMonitorTargetEnabled(const bool &is_azure_monitor_target_enabled);
    bool is_is_azure_monitor_target_enabled_Set() const;
    bool is_is_azure_monitor_target_enabled_Valid() const;

    bool isIsStorageSecondaryKeyInUse() const;
    void setIsStorageSecondaryKeyInUse(const bool &is_storage_secondary_key_in_use);
    bool is_is_storage_secondary_key_in_use_Set() const;
    bool is_is_storage_secondary_key_in_use_Valid() const;

    QString getPredicateExpression() const;
    void setPredicateExpression(const QString &predicate_expression);
    bool is_predicate_expression_Set() const;
    bool is_predicate_expression_Valid() const;

    qint32 getQueueDelayMs() const;
    void setQueueDelayMs(const qint32 &queue_delay_ms);
    bool is_queue_delay_ms_Set() const;
    bool is_queue_delay_ms_Valid() const;

    qint32 getRetentionDays() const;
    void setRetentionDays(const qint32 &retention_days);
    bool is_retention_days_Set() const;
    bool is_retention_days_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStorageAccountAccessKey() const;
    void setStorageAccountAccessKey(const QString &storage_account_access_key);
    bool is_storage_account_access_key_Set() const;
    bool is_storage_account_access_key_Valid() const;

    QString getStorageAccountSubscriptionId() const;
    void setStorageAccountSubscriptionId(const QString &storage_account_subscription_id);
    bool is_storage_account_subscription_id_Set() const;
    bool is_storage_account_subscription_id_Valid() const;

    QString getStorageEndpoint() const;
    void setStorageEndpoint(const QString &storage_endpoint);
    bool is_storage_endpoint_Set() const;
    bool is_storage_endpoint_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_audit_actions_and_groups;
    bool m_audit_actions_and_groups_isSet;
    bool m_audit_actions_and_groups_isValid;

    bool m_is_azure_monitor_target_enabled;
    bool m_is_azure_monitor_target_enabled_isSet;
    bool m_is_azure_monitor_target_enabled_isValid;

    bool m_is_storage_secondary_key_in_use;
    bool m_is_storage_secondary_key_in_use_isSet;
    bool m_is_storage_secondary_key_in_use_isValid;

    QString m_predicate_expression;
    bool m_predicate_expression_isSet;
    bool m_predicate_expression_isValid;

    qint32 m_queue_delay_ms;
    bool m_queue_delay_ms_isSet;
    bool m_queue_delay_ms_isValid;

    qint32 m_retention_days;
    bool m_retention_days_isSet;
    bool m_retention_days_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_storage_account_access_key;
    bool m_storage_account_access_key_isSet;
    bool m_storage_account_access_key_isValid;

    QString m_storage_account_subscription_id;
    bool m_storage_account_subscription_id_isSet;
    bool m_storage_account_subscription_id_isValid;

    QString m_storage_endpoint;
    bool m_storage_endpoint_isSet;
    bool m_storage_endpoint_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExtendedServerBlobAuditingPolicyProperties)

#endif // OAIExtendedServerBlobAuditingPolicyProperties_H
