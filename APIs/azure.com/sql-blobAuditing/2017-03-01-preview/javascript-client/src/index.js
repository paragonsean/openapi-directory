/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DatabaseBlobAuditingPolicy from './model/DatabaseBlobAuditingPolicy';
import DatabaseBlobAuditingPolicyListResult from './model/DatabaseBlobAuditingPolicyListResult';
import DatabaseBlobAuditingPolicyProperties from './model/DatabaseBlobAuditingPolicyProperties';
import ExtendedDatabaseBlobAuditingPolicy from './model/ExtendedDatabaseBlobAuditingPolicy';
import ExtendedDatabaseBlobAuditingPolicyProperties from './model/ExtendedDatabaseBlobAuditingPolicyProperties';
import ExtendedServerBlobAuditingPolicy from './model/ExtendedServerBlobAuditingPolicy';
import ExtendedServerBlobAuditingPolicyProperties from './model/ExtendedServerBlobAuditingPolicyProperties';
import ServerBlobAuditingPolicy from './model/ServerBlobAuditingPolicy';
import ServerBlobAuditingPolicyListResult from './model/ServerBlobAuditingPolicyListResult';
import ServerBlobAuditingPolicyProperties from './model/ServerBlobAuditingPolicyProperties';
import BlobAuditingApi from './api/BlobAuditingApi';


/**
* The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SqlManagementClient = require('index'); // See note below*.
* var xxxSvc = new SqlManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SqlManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SqlManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SqlManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-03-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DatabaseBlobAuditingPolicy model constructor.
     * @property {module:model/DatabaseBlobAuditingPolicy}
     */
    DatabaseBlobAuditingPolicy,

    /**
     * The DatabaseBlobAuditingPolicyListResult model constructor.
     * @property {module:model/DatabaseBlobAuditingPolicyListResult}
     */
    DatabaseBlobAuditingPolicyListResult,

    /**
     * The DatabaseBlobAuditingPolicyProperties model constructor.
     * @property {module:model/DatabaseBlobAuditingPolicyProperties}
     */
    DatabaseBlobAuditingPolicyProperties,

    /**
     * The ExtendedDatabaseBlobAuditingPolicy model constructor.
     * @property {module:model/ExtendedDatabaseBlobAuditingPolicy}
     */
    ExtendedDatabaseBlobAuditingPolicy,

    /**
     * The ExtendedDatabaseBlobAuditingPolicyProperties model constructor.
     * @property {module:model/ExtendedDatabaseBlobAuditingPolicyProperties}
     */
    ExtendedDatabaseBlobAuditingPolicyProperties,

    /**
     * The ExtendedServerBlobAuditingPolicy model constructor.
     * @property {module:model/ExtendedServerBlobAuditingPolicy}
     */
    ExtendedServerBlobAuditingPolicy,

    /**
     * The ExtendedServerBlobAuditingPolicyProperties model constructor.
     * @property {module:model/ExtendedServerBlobAuditingPolicyProperties}
     */
    ExtendedServerBlobAuditingPolicyProperties,

    /**
     * The ServerBlobAuditingPolicy model constructor.
     * @property {module:model/ServerBlobAuditingPolicy}
     */
    ServerBlobAuditingPolicy,

    /**
     * The ServerBlobAuditingPolicyListResult model constructor.
     * @property {module:model/ServerBlobAuditingPolicyListResult}
     */
    ServerBlobAuditingPolicyListResult,

    /**
     * The ServerBlobAuditingPolicyProperties model constructor.
     * @property {module:model/ServerBlobAuditingPolicyProperties}
     */
    ServerBlobAuditingPolicyProperties,

    /**
    * The BlobAuditingApi service constructor.
    * @property {module:api/BlobAuditingApi}
    */
    BlobAuditingApi
};
