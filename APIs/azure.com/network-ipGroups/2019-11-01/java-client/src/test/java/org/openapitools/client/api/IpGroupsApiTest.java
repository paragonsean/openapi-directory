/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.IpGroup;
import org.openapitools.client.model.IpGroupListResult;
import org.openapitools.client.model.IpGroupsListDefaultResponse;
import org.openapitools.client.model.IpGroupsUpdateGroupsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IpGroupsApi
 */
@Disabled
public class IpGroupsApiTest {

    private final IpGroupsApi api = new IpGroupsApi();

    /**
     * Creates or updates an ipGroups in a specified resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipGroupsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String ipGroupsName = null;
        String apiVersion = null;
        String subscriptionId = null;
        IpGroup parameters = null;
        IpGroup response = api.ipGroupsCreateOrUpdate(resourceGroupName, ipGroupsName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the specified ipGroups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipGroupsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String ipGroupsName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.ipGroupsDelete(resourceGroupName, ipGroupsName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets the specified ipGroups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipGroupsGetTest() throws ApiException {
        String resourceGroupName = null;
        String ipGroupsName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String $expand = null;
        IpGroup response = api.ipGroupsGet(resourceGroupName, ipGroupsName, apiVersion, subscriptionId, $expand);
        // TODO: test validations
    }

    /**
     * Gets all IpGroups in a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipGroupsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        IpGroupListResult response = api.ipGroupsList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all IpGroups in a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipGroupsListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        IpGroupListResult response = api.ipGroupsListByResourceGroup(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates tags of an IpGroups resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipGroupsUpdateGroupsTest() throws ApiException {
        String resourceGroupName = null;
        String ipGroupsName = null;
        String apiVersion = null;
        String subscriptionId = null;
        IpGroupsUpdateGroupsRequest parameters = null;
        IpGroup response = api.ipGroupsUpdateGroups(resourceGroupName, ipGroupsName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
