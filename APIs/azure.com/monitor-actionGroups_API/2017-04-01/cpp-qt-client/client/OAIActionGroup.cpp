/**
 * Azure Action Groups
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActionGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActionGroup::OAIActionGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActionGroup::OAIActionGroup() {
    this->initializeModel();
}

OAIActionGroup::~OAIActionGroup() {}

void OAIActionGroup::initializeModel() {

    m_automation_runbook_receivers_isSet = false;
    m_automation_runbook_receivers_isValid = false;

    m_azure_app_push_receivers_isSet = false;
    m_azure_app_push_receivers_isValid = false;

    m_email_receivers_isSet = false;
    m_email_receivers_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_group_short_name_isSet = false;
    m_group_short_name_isValid = false;

    m_itsm_receivers_isSet = false;
    m_itsm_receivers_isValid = false;

    m_sms_receivers_isSet = false;
    m_sms_receivers_isValid = false;

    m_webhook_receivers_isSet = false;
    m_webhook_receivers_isValid = false;
}

void OAIActionGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActionGroup::fromJsonObject(QJsonObject json) {

    m_automation_runbook_receivers_isValid = ::OpenAPI::fromJsonValue(m_automation_runbook_receivers, json[QString("automationRunbookReceivers")]);
    m_automation_runbook_receivers_isSet = !json[QString("automationRunbookReceivers")].isNull() && m_automation_runbook_receivers_isValid;

    m_azure_app_push_receivers_isValid = ::OpenAPI::fromJsonValue(m_azure_app_push_receivers, json[QString("azureAppPushReceivers")]);
    m_azure_app_push_receivers_isSet = !json[QString("azureAppPushReceivers")].isNull() && m_azure_app_push_receivers_isValid;

    m_email_receivers_isValid = ::OpenAPI::fromJsonValue(m_email_receivers, json[QString("emailReceivers")]);
    m_email_receivers_isSet = !json[QString("emailReceivers")].isNull() && m_email_receivers_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_group_short_name_isValid = ::OpenAPI::fromJsonValue(m_group_short_name, json[QString("groupShortName")]);
    m_group_short_name_isSet = !json[QString("groupShortName")].isNull() && m_group_short_name_isValid;

    m_itsm_receivers_isValid = ::OpenAPI::fromJsonValue(m_itsm_receivers, json[QString("itsmReceivers")]);
    m_itsm_receivers_isSet = !json[QString("itsmReceivers")].isNull() && m_itsm_receivers_isValid;

    m_sms_receivers_isValid = ::OpenAPI::fromJsonValue(m_sms_receivers, json[QString("smsReceivers")]);
    m_sms_receivers_isSet = !json[QString("smsReceivers")].isNull() && m_sms_receivers_isValid;

    m_webhook_receivers_isValid = ::OpenAPI::fromJsonValue(m_webhook_receivers, json[QString("webhookReceivers")]);
    m_webhook_receivers_isSet = !json[QString("webhookReceivers")].isNull() && m_webhook_receivers_isValid;
}

QString OAIActionGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActionGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_automation_runbook_receivers.size() > 0) {
        obj.insert(QString("automationRunbookReceivers"), ::OpenAPI::toJsonValue(m_automation_runbook_receivers));
    }
    if (m_azure_app_push_receivers.size() > 0) {
        obj.insert(QString("azureAppPushReceivers"), ::OpenAPI::toJsonValue(m_azure_app_push_receivers));
    }
    if (m_email_receivers.size() > 0) {
        obj.insert(QString("emailReceivers"), ::OpenAPI::toJsonValue(m_email_receivers));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_group_short_name_isSet) {
        obj.insert(QString("groupShortName"), ::OpenAPI::toJsonValue(m_group_short_name));
    }
    if (m_itsm_receivers.size() > 0) {
        obj.insert(QString("itsmReceivers"), ::OpenAPI::toJsonValue(m_itsm_receivers));
    }
    if (m_sms_receivers.size() > 0) {
        obj.insert(QString("smsReceivers"), ::OpenAPI::toJsonValue(m_sms_receivers));
    }
    if (m_webhook_receivers.size() > 0) {
        obj.insert(QString("webhookReceivers"), ::OpenAPI::toJsonValue(m_webhook_receivers));
    }
    return obj;
}

QList<OAIAutomationRunbookReceiver> OAIActionGroup::getAutomationRunbookReceivers() const {
    return m_automation_runbook_receivers;
}
void OAIActionGroup::setAutomationRunbookReceivers(const QList<OAIAutomationRunbookReceiver> &automation_runbook_receivers) {
    m_automation_runbook_receivers = automation_runbook_receivers;
    m_automation_runbook_receivers_isSet = true;
}

bool OAIActionGroup::is_automation_runbook_receivers_Set() const{
    return m_automation_runbook_receivers_isSet;
}

bool OAIActionGroup::is_automation_runbook_receivers_Valid() const{
    return m_automation_runbook_receivers_isValid;
}

QList<OAIAzureAppPushReceiver> OAIActionGroup::getAzureAppPushReceivers() const {
    return m_azure_app_push_receivers;
}
void OAIActionGroup::setAzureAppPushReceivers(const QList<OAIAzureAppPushReceiver> &azure_app_push_receivers) {
    m_azure_app_push_receivers = azure_app_push_receivers;
    m_azure_app_push_receivers_isSet = true;
}

bool OAIActionGroup::is_azure_app_push_receivers_Set() const{
    return m_azure_app_push_receivers_isSet;
}

bool OAIActionGroup::is_azure_app_push_receivers_Valid() const{
    return m_azure_app_push_receivers_isValid;
}

QList<OAIEmailReceiver> OAIActionGroup::getEmailReceivers() const {
    return m_email_receivers;
}
void OAIActionGroup::setEmailReceivers(const QList<OAIEmailReceiver> &email_receivers) {
    m_email_receivers = email_receivers;
    m_email_receivers_isSet = true;
}

bool OAIActionGroup::is_email_receivers_Set() const{
    return m_email_receivers_isSet;
}

bool OAIActionGroup::is_email_receivers_Valid() const{
    return m_email_receivers_isValid;
}

bool OAIActionGroup::isEnabled() const {
    return m_enabled;
}
void OAIActionGroup::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIActionGroup::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIActionGroup::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIActionGroup::getGroupShortName() const {
    return m_group_short_name;
}
void OAIActionGroup::setGroupShortName(const QString &group_short_name) {
    m_group_short_name = group_short_name;
    m_group_short_name_isSet = true;
}

bool OAIActionGroup::is_group_short_name_Set() const{
    return m_group_short_name_isSet;
}

bool OAIActionGroup::is_group_short_name_Valid() const{
    return m_group_short_name_isValid;
}

QList<OAIItsmReceiver> OAIActionGroup::getItsmReceivers() const {
    return m_itsm_receivers;
}
void OAIActionGroup::setItsmReceivers(const QList<OAIItsmReceiver> &itsm_receivers) {
    m_itsm_receivers = itsm_receivers;
    m_itsm_receivers_isSet = true;
}

bool OAIActionGroup::is_itsm_receivers_Set() const{
    return m_itsm_receivers_isSet;
}

bool OAIActionGroup::is_itsm_receivers_Valid() const{
    return m_itsm_receivers_isValid;
}

QList<OAISmsReceiver> OAIActionGroup::getSmsReceivers() const {
    return m_sms_receivers;
}
void OAIActionGroup::setSmsReceivers(const QList<OAISmsReceiver> &sms_receivers) {
    m_sms_receivers = sms_receivers;
    m_sms_receivers_isSet = true;
}

bool OAIActionGroup::is_sms_receivers_Set() const{
    return m_sms_receivers_isSet;
}

bool OAIActionGroup::is_sms_receivers_Valid() const{
    return m_sms_receivers_isValid;
}

QList<OAIWebhookReceiver> OAIActionGroup::getWebhookReceivers() const {
    return m_webhook_receivers;
}
void OAIActionGroup::setWebhookReceivers(const QList<OAIWebhookReceiver> &webhook_receivers) {
    m_webhook_receivers = webhook_receivers;
    m_webhook_receivers_isSet = true;
}

bool OAIActionGroup::is_webhook_receivers_Set() const{
    return m_webhook_receivers_isSet;
}

bool OAIActionGroup::is_webhook_receivers_Valid() const{
    return m_webhook_receivers_isValid;
}

bool OAIActionGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automation_runbook_receivers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_azure_app_push_receivers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_receivers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_short_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_itsm_receivers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_receivers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook_receivers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActionGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enabled_isValid && m_group_short_name_isValid && true;
}

} // namespace OpenAPI
