/*
 * Azure Action Groups
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AutomationRunbookReceiver;
import org.openapitools.client.model.AzureAppPushReceiver;
import org.openapitools.client.model.EmailReceiver;
import org.openapitools.client.model.ItsmReceiver;
import org.openapitools.client.model.SmsReceiver;
import org.openapitools.client.model.WebhookReceiver;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An Azure action group.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:56:25.685336-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ActionGroup {
  public static final String SERIALIZED_NAME_AUTOMATION_RUNBOOK_RECEIVERS = "automationRunbookReceivers";
  @SerializedName(SERIALIZED_NAME_AUTOMATION_RUNBOOK_RECEIVERS)
  private List<AutomationRunbookReceiver> automationRunbookReceivers = new ArrayList<>();

  public static final String SERIALIZED_NAME_AZURE_APP_PUSH_RECEIVERS = "azureAppPushReceivers";
  @SerializedName(SERIALIZED_NAME_AZURE_APP_PUSH_RECEIVERS)
  private List<AzureAppPushReceiver> azureAppPushReceivers = new ArrayList<>();

  public static final String SERIALIZED_NAME_EMAIL_RECEIVERS = "emailReceivers";
  @SerializedName(SERIALIZED_NAME_EMAIL_RECEIVERS)
  private List<EmailReceiver> emailReceivers = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled = true;

  public static final String SERIALIZED_NAME_GROUP_SHORT_NAME = "groupShortName";
  @SerializedName(SERIALIZED_NAME_GROUP_SHORT_NAME)
  private String groupShortName;

  public static final String SERIALIZED_NAME_ITSM_RECEIVERS = "itsmReceivers";
  @SerializedName(SERIALIZED_NAME_ITSM_RECEIVERS)
  private List<ItsmReceiver> itsmReceivers = new ArrayList<>();

  public static final String SERIALIZED_NAME_SMS_RECEIVERS = "smsReceivers";
  @SerializedName(SERIALIZED_NAME_SMS_RECEIVERS)
  private List<SmsReceiver> smsReceivers = new ArrayList<>();

  public static final String SERIALIZED_NAME_WEBHOOK_RECEIVERS = "webhookReceivers";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_RECEIVERS)
  private List<WebhookReceiver> webhookReceivers = new ArrayList<>();

  public ActionGroup() {
  }

  public ActionGroup automationRunbookReceivers(List<AutomationRunbookReceiver> automationRunbookReceivers) {
    this.automationRunbookReceivers = automationRunbookReceivers;
    return this;
  }

  public ActionGroup addAutomationRunbookReceiversItem(AutomationRunbookReceiver automationRunbookReceiversItem) {
    if (this.automationRunbookReceivers == null) {
      this.automationRunbookReceivers = new ArrayList<>();
    }
    this.automationRunbookReceivers.add(automationRunbookReceiversItem);
    return this;
  }

  /**
   * The list of AutomationRunbook receivers that are part of this action group.
   * @return automationRunbookReceivers
   */
  @javax.annotation.Nullable
  public List<AutomationRunbookReceiver> getAutomationRunbookReceivers() {
    return automationRunbookReceivers;
  }

  public void setAutomationRunbookReceivers(List<AutomationRunbookReceiver> automationRunbookReceivers) {
    this.automationRunbookReceivers = automationRunbookReceivers;
  }


  public ActionGroup azureAppPushReceivers(List<AzureAppPushReceiver> azureAppPushReceivers) {
    this.azureAppPushReceivers = azureAppPushReceivers;
    return this;
  }

  public ActionGroup addAzureAppPushReceiversItem(AzureAppPushReceiver azureAppPushReceiversItem) {
    if (this.azureAppPushReceivers == null) {
      this.azureAppPushReceivers = new ArrayList<>();
    }
    this.azureAppPushReceivers.add(azureAppPushReceiversItem);
    return this;
  }

  /**
   * The list of AzureAppPush receivers that are part of this action group.
   * @return azureAppPushReceivers
   */
  @javax.annotation.Nullable
  public List<AzureAppPushReceiver> getAzureAppPushReceivers() {
    return azureAppPushReceivers;
  }

  public void setAzureAppPushReceivers(List<AzureAppPushReceiver> azureAppPushReceivers) {
    this.azureAppPushReceivers = azureAppPushReceivers;
  }


  public ActionGroup emailReceivers(List<EmailReceiver> emailReceivers) {
    this.emailReceivers = emailReceivers;
    return this;
  }

  public ActionGroup addEmailReceiversItem(EmailReceiver emailReceiversItem) {
    if (this.emailReceivers == null) {
      this.emailReceivers = new ArrayList<>();
    }
    this.emailReceivers.add(emailReceiversItem);
    return this;
  }

  /**
   * The list of email receivers that are part of this action group.
   * @return emailReceivers
   */
  @javax.annotation.Nullable
  public List<EmailReceiver> getEmailReceivers() {
    return emailReceivers;
  }

  public void setEmailReceivers(List<EmailReceiver> emailReceivers) {
    this.emailReceivers = emailReceivers;
  }


  public ActionGroup enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Indicates whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications.
   * @return enabled
   */
  @javax.annotation.Nonnull
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ActionGroup groupShortName(String groupShortName) {
    this.groupShortName = groupShortName;
    return this;
  }

  /**
   * The short name of the action group. This will be used in SMS messages.
   * @return groupShortName
   */
  @javax.annotation.Nonnull
  public String getGroupShortName() {
    return groupShortName;
  }

  public void setGroupShortName(String groupShortName) {
    this.groupShortName = groupShortName;
  }


  public ActionGroup itsmReceivers(List<ItsmReceiver> itsmReceivers) {
    this.itsmReceivers = itsmReceivers;
    return this;
  }

  public ActionGroup addItsmReceiversItem(ItsmReceiver itsmReceiversItem) {
    if (this.itsmReceivers == null) {
      this.itsmReceivers = new ArrayList<>();
    }
    this.itsmReceivers.add(itsmReceiversItem);
    return this;
  }

  /**
   * The list of ITSM receivers that are part of this action group.
   * @return itsmReceivers
   */
  @javax.annotation.Nullable
  public List<ItsmReceiver> getItsmReceivers() {
    return itsmReceivers;
  }

  public void setItsmReceivers(List<ItsmReceiver> itsmReceivers) {
    this.itsmReceivers = itsmReceivers;
  }


  public ActionGroup smsReceivers(List<SmsReceiver> smsReceivers) {
    this.smsReceivers = smsReceivers;
    return this;
  }

  public ActionGroup addSmsReceiversItem(SmsReceiver smsReceiversItem) {
    if (this.smsReceivers == null) {
      this.smsReceivers = new ArrayList<>();
    }
    this.smsReceivers.add(smsReceiversItem);
    return this;
  }

  /**
   * The list of SMS receivers that are part of this action group.
   * @return smsReceivers
   */
  @javax.annotation.Nullable
  public List<SmsReceiver> getSmsReceivers() {
    return smsReceivers;
  }

  public void setSmsReceivers(List<SmsReceiver> smsReceivers) {
    this.smsReceivers = smsReceivers;
  }


  public ActionGroup webhookReceivers(List<WebhookReceiver> webhookReceivers) {
    this.webhookReceivers = webhookReceivers;
    return this;
  }

  public ActionGroup addWebhookReceiversItem(WebhookReceiver webhookReceiversItem) {
    if (this.webhookReceivers == null) {
      this.webhookReceivers = new ArrayList<>();
    }
    this.webhookReceivers.add(webhookReceiversItem);
    return this;
  }

  /**
   * The list of webhook receivers that are part of this action group.
   * @return webhookReceivers
   */
  @javax.annotation.Nullable
  public List<WebhookReceiver> getWebhookReceivers() {
    return webhookReceivers;
  }

  public void setWebhookReceivers(List<WebhookReceiver> webhookReceivers) {
    this.webhookReceivers = webhookReceivers;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActionGroup actionGroup = (ActionGroup) o;
    return Objects.equals(this.automationRunbookReceivers, actionGroup.automationRunbookReceivers) &&
        Objects.equals(this.azureAppPushReceivers, actionGroup.azureAppPushReceivers) &&
        Objects.equals(this.emailReceivers, actionGroup.emailReceivers) &&
        Objects.equals(this.enabled, actionGroup.enabled) &&
        Objects.equals(this.groupShortName, actionGroup.groupShortName) &&
        Objects.equals(this.itsmReceivers, actionGroup.itsmReceivers) &&
        Objects.equals(this.smsReceivers, actionGroup.smsReceivers) &&
        Objects.equals(this.webhookReceivers, actionGroup.webhookReceivers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automationRunbookReceivers, azureAppPushReceivers, emailReceivers, enabled, groupShortName, itsmReceivers, smsReceivers, webhookReceivers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActionGroup {\n");
    sb.append("    automationRunbookReceivers: ").append(toIndentedString(automationRunbookReceivers)).append("\n");
    sb.append("    azureAppPushReceivers: ").append(toIndentedString(azureAppPushReceivers)).append("\n");
    sb.append("    emailReceivers: ").append(toIndentedString(emailReceivers)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    groupShortName: ").append(toIndentedString(groupShortName)).append("\n");
    sb.append("    itsmReceivers: ").append(toIndentedString(itsmReceivers)).append("\n");
    sb.append("    smsReceivers: ").append(toIndentedString(smsReceivers)).append("\n");
    sb.append("    webhookReceivers: ").append(toIndentedString(webhookReceivers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("automationRunbookReceivers");
    openapiFields.add("azureAppPushReceivers");
    openapiFields.add("emailReceivers");
    openapiFields.add("enabled");
    openapiFields.add("groupShortName");
    openapiFields.add("itsmReceivers");
    openapiFields.add("smsReceivers");
    openapiFields.add("webhookReceivers");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("enabled");
    openapiRequiredFields.add("groupShortName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ActionGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ActionGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ActionGroup is not found in the empty JSON string", ActionGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ActionGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ActionGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ActionGroup.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("automationRunbookReceivers") != null && !jsonObj.get("automationRunbookReceivers").isJsonNull()) {
        JsonArray jsonArrayautomationRunbookReceivers = jsonObj.getAsJsonArray("automationRunbookReceivers");
        if (jsonArrayautomationRunbookReceivers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("automationRunbookReceivers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `automationRunbookReceivers` to be an array in the JSON string but got `%s`", jsonObj.get("automationRunbookReceivers").toString()));
          }

          // validate the optional field `automationRunbookReceivers` (array)
          for (int i = 0; i < jsonArrayautomationRunbookReceivers.size(); i++) {
            AutomationRunbookReceiver.validateJsonElement(jsonArrayautomationRunbookReceivers.get(i));
          };
        }
      }
      if (jsonObj.get("azureAppPushReceivers") != null && !jsonObj.get("azureAppPushReceivers").isJsonNull()) {
        JsonArray jsonArrayazureAppPushReceivers = jsonObj.getAsJsonArray("azureAppPushReceivers");
        if (jsonArrayazureAppPushReceivers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("azureAppPushReceivers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `azureAppPushReceivers` to be an array in the JSON string but got `%s`", jsonObj.get("azureAppPushReceivers").toString()));
          }

          // validate the optional field `azureAppPushReceivers` (array)
          for (int i = 0; i < jsonArrayazureAppPushReceivers.size(); i++) {
            AzureAppPushReceiver.validateJsonElement(jsonArrayazureAppPushReceivers.get(i));
          };
        }
      }
      if (jsonObj.get("emailReceivers") != null && !jsonObj.get("emailReceivers").isJsonNull()) {
        JsonArray jsonArrayemailReceivers = jsonObj.getAsJsonArray("emailReceivers");
        if (jsonArrayemailReceivers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("emailReceivers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `emailReceivers` to be an array in the JSON string but got `%s`", jsonObj.get("emailReceivers").toString()));
          }

          // validate the optional field `emailReceivers` (array)
          for (int i = 0; i < jsonArrayemailReceivers.size(); i++) {
            EmailReceiver.validateJsonElement(jsonArrayemailReceivers.get(i));
          };
        }
      }
      if (!jsonObj.get("groupShortName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `groupShortName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("groupShortName").toString()));
      }
      if (jsonObj.get("itsmReceivers") != null && !jsonObj.get("itsmReceivers").isJsonNull()) {
        JsonArray jsonArrayitsmReceivers = jsonObj.getAsJsonArray("itsmReceivers");
        if (jsonArrayitsmReceivers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("itsmReceivers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `itsmReceivers` to be an array in the JSON string but got `%s`", jsonObj.get("itsmReceivers").toString()));
          }

          // validate the optional field `itsmReceivers` (array)
          for (int i = 0; i < jsonArrayitsmReceivers.size(); i++) {
            ItsmReceiver.validateJsonElement(jsonArrayitsmReceivers.get(i));
          };
        }
      }
      if (jsonObj.get("smsReceivers") != null && !jsonObj.get("smsReceivers").isJsonNull()) {
        JsonArray jsonArraysmsReceivers = jsonObj.getAsJsonArray("smsReceivers");
        if (jsonArraysmsReceivers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("smsReceivers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `smsReceivers` to be an array in the JSON string but got `%s`", jsonObj.get("smsReceivers").toString()));
          }

          // validate the optional field `smsReceivers` (array)
          for (int i = 0; i < jsonArraysmsReceivers.size(); i++) {
            SmsReceiver.validateJsonElement(jsonArraysmsReceivers.get(i));
          };
        }
      }
      if (jsonObj.get("webhookReceivers") != null && !jsonObj.get("webhookReceivers").isJsonNull()) {
        JsonArray jsonArraywebhookReceivers = jsonObj.getAsJsonArray("webhookReceivers");
        if (jsonArraywebhookReceivers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("webhookReceivers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `webhookReceivers` to be an array in the JSON string but got `%s`", jsonObj.get("webhookReceivers").toString()));
          }

          // validate the optional field `webhookReceivers` (array)
          for (int i = 0; i < jsonArraywebhookReceivers.size(); i++) {
            WebhookReceiver.validateJsonElement(jsonArraywebhookReceivers.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ActionGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ActionGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ActionGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ActionGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<ActionGroup>() {
           @Override
           public void write(JsonWriter out, ActionGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ActionGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ActionGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ActionGroup
   * @throws IOException if the JSON string is invalid with respect to ActionGroup
   */
  public static ActionGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ActionGroup.class);
  }

  /**
   * Convert an instance of ActionGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

