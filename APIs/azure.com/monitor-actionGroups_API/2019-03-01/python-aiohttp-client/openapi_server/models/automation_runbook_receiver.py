# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AutomationRunbookReceiver(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automation_account_id: str=None, is_global_runbook: bool=None, name: str=None, runbook_name: str=None, service_uri: str=None, use_common_alert_schema: bool=None, webhook_resource_id: str=None):
        """AutomationRunbookReceiver - a model defined in OpenAPI

        :param automation_account_id: The automation_account_id of this AutomationRunbookReceiver.
        :param is_global_runbook: The is_global_runbook of this AutomationRunbookReceiver.
        :param name: The name of this AutomationRunbookReceiver.
        :param runbook_name: The runbook_name of this AutomationRunbookReceiver.
        :param service_uri: The service_uri of this AutomationRunbookReceiver.
        :param use_common_alert_schema: The use_common_alert_schema of this AutomationRunbookReceiver.
        :param webhook_resource_id: The webhook_resource_id of this AutomationRunbookReceiver.
        """
        self.openapi_types = {
            'automation_account_id': str,
            'is_global_runbook': bool,
            'name': str,
            'runbook_name': str,
            'service_uri': str,
            'use_common_alert_schema': bool,
            'webhook_resource_id': str
        }

        self.attribute_map = {
            'automation_account_id': 'automationAccountId',
            'is_global_runbook': 'isGlobalRunbook',
            'name': 'name',
            'runbook_name': 'runbookName',
            'service_uri': 'serviceUri',
            'use_common_alert_schema': 'useCommonAlertSchema',
            'webhook_resource_id': 'webhookResourceId'
        }

        self._automation_account_id = automation_account_id
        self._is_global_runbook = is_global_runbook
        self._name = name
        self._runbook_name = runbook_name
        self._service_uri = service_uri
        self._use_common_alert_schema = use_common_alert_schema
        self._webhook_resource_id = webhook_resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutomationRunbookReceiver':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutomationRunbookReceiver of this AutomationRunbookReceiver.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automation_account_id(self):
        """Gets the automation_account_id of this AutomationRunbookReceiver.

        The Azure automation account Id which holds this runbook and authenticate to Azure resource.

        :return: The automation_account_id of this AutomationRunbookReceiver.
        :rtype: str
        """
        return self._automation_account_id

    @automation_account_id.setter
    def automation_account_id(self, automation_account_id):
        """Sets the automation_account_id of this AutomationRunbookReceiver.

        The Azure automation account Id which holds this runbook and authenticate to Azure resource.

        :param automation_account_id: The automation_account_id of this AutomationRunbookReceiver.
        :type automation_account_id: str
        """
        if automation_account_id is None:
            raise ValueError("Invalid value for `automation_account_id`, must not be `None`")

        self._automation_account_id = automation_account_id

    @property
    def is_global_runbook(self):
        """Gets the is_global_runbook of this AutomationRunbookReceiver.

        Indicates whether this instance is global runbook.

        :return: The is_global_runbook of this AutomationRunbookReceiver.
        :rtype: bool
        """
        return self._is_global_runbook

    @is_global_runbook.setter
    def is_global_runbook(self, is_global_runbook):
        """Sets the is_global_runbook of this AutomationRunbookReceiver.

        Indicates whether this instance is global runbook.

        :param is_global_runbook: The is_global_runbook of this AutomationRunbookReceiver.
        :type is_global_runbook: bool
        """
        if is_global_runbook is None:
            raise ValueError("Invalid value for `is_global_runbook`, must not be `None`")

        self._is_global_runbook = is_global_runbook

    @property
    def name(self):
        """Gets the name of this AutomationRunbookReceiver.

        Indicates name of the webhook.

        :return: The name of this AutomationRunbookReceiver.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AutomationRunbookReceiver.

        Indicates name of the webhook.

        :param name: The name of this AutomationRunbookReceiver.
        :type name: str
        """

        self._name = name

    @property
    def runbook_name(self):
        """Gets the runbook_name of this AutomationRunbookReceiver.

        The name for this runbook.

        :return: The runbook_name of this AutomationRunbookReceiver.
        :rtype: str
        """
        return self._runbook_name

    @runbook_name.setter
    def runbook_name(self, runbook_name):
        """Sets the runbook_name of this AutomationRunbookReceiver.

        The name for this runbook.

        :param runbook_name: The runbook_name of this AutomationRunbookReceiver.
        :type runbook_name: str
        """
        if runbook_name is None:
            raise ValueError("Invalid value for `runbook_name`, must not be `None`")

        self._runbook_name = runbook_name

    @property
    def service_uri(self):
        """Gets the service_uri of this AutomationRunbookReceiver.

        The URI where webhooks should be sent.

        :return: The service_uri of this AutomationRunbookReceiver.
        :rtype: str
        """
        return self._service_uri

    @service_uri.setter
    def service_uri(self, service_uri):
        """Sets the service_uri of this AutomationRunbookReceiver.

        The URI where webhooks should be sent.

        :param service_uri: The service_uri of this AutomationRunbookReceiver.
        :type service_uri: str
        """

        self._service_uri = service_uri

    @property
    def use_common_alert_schema(self):
        """Gets the use_common_alert_schema of this AutomationRunbookReceiver.

        Indicates whether to use common alert schema.

        :return: The use_common_alert_schema of this AutomationRunbookReceiver.
        :rtype: bool
        """
        return self._use_common_alert_schema

    @use_common_alert_schema.setter
    def use_common_alert_schema(self, use_common_alert_schema):
        """Sets the use_common_alert_schema of this AutomationRunbookReceiver.

        Indicates whether to use common alert schema.

        :param use_common_alert_schema: The use_common_alert_schema of this AutomationRunbookReceiver.
        :type use_common_alert_schema: bool
        """
        if use_common_alert_schema is None:
            raise ValueError("Invalid value for `use_common_alert_schema`, must not be `None`")

        self._use_common_alert_schema = use_common_alert_schema

    @property
    def webhook_resource_id(self):
        """Gets the webhook_resource_id of this AutomationRunbookReceiver.

        The resource id for webhook linked to this runbook.

        :return: The webhook_resource_id of this AutomationRunbookReceiver.
        :rtype: str
        """
        return self._webhook_resource_id

    @webhook_resource_id.setter
    def webhook_resource_id(self, webhook_resource_id):
        """Sets the webhook_resource_id of this AutomationRunbookReceiver.

        The resource id for webhook linked to this runbook.

        :param webhook_resource_id: The webhook_resource_id of this AutomationRunbookReceiver.
        :type webhook_resource_id: str
        """
        if webhook_resource_id is None:
            raise ValueError("Invalid value for `webhook_resource_id`, must not be `None`")

        self._webhook_resource_id = webhook_resource_id
