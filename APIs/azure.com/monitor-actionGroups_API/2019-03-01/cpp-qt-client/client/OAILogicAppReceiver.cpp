/**
 * Azure Action Groups
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILogicAppReceiver.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILogicAppReceiver::OAILogicAppReceiver(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILogicAppReceiver::OAILogicAppReceiver() {
    this->initializeModel();
}

OAILogicAppReceiver::~OAILogicAppReceiver() {}

void OAILogicAppReceiver::initializeModel() {

    m_callback_url_isSet = false;
    m_callback_url_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_resource_id_isSet = false;
    m_resource_id_isValid = false;

    m_use_common_alert_schema_isSet = false;
    m_use_common_alert_schema_isValid = false;
}

void OAILogicAppReceiver::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILogicAppReceiver::fromJsonObject(QJsonObject json) {

    m_callback_url_isValid = ::OpenAPI::fromJsonValue(m_callback_url, json[QString("callbackUrl")]);
    m_callback_url_isSet = !json[QString("callbackUrl")].isNull() && m_callback_url_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_resource_id_isValid = ::OpenAPI::fromJsonValue(m_resource_id, json[QString("resourceId")]);
    m_resource_id_isSet = !json[QString("resourceId")].isNull() && m_resource_id_isValid;

    m_use_common_alert_schema_isValid = ::OpenAPI::fromJsonValue(m_use_common_alert_schema, json[QString("useCommonAlertSchema")]);
    m_use_common_alert_schema_isSet = !json[QString("useCommonAlertSchema")].isNull() && m_use_common_alert_schema_isValid;
}

QString OAILogicAppReceiver::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILogicAppReceiver::asJsonObject() const {
    QJsonObject obj;
    if (m_callback_url_isSet) {
        obj.insert(QString("callbackUrl"), ::OpenAPI::toJsonValue(m_callback_url));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_resource_id_isSet) {
        obj.insert(QString("resourceId"), ::OpenAPI::toJsonValue(m_resource_id));
    }
    if (m_use_common_alert_schema_isSet) {
        obj.insert(QString("useCommonAlertSchema"), ::OpenAPI::toJsonValue(m_use_common_alert_schema));
    }
    return obj;
}

QString OAILogicAppReceiver::getCallbackUrl() const {
    return m_callback_url;
}
void OAILogicAppReceiver::setCallbackUrl(const QString &callback_url) {
    m_callback_url = callback_url;
    m_callback_url_isSet = true;
}

bool OAILogicAppReceiver::is_callback_url_Set() const{
    return m_callback_url_isSet;
}

bool OAILogicAppReceiver::is_callback_url_Valid() const{
    return m_callback_url_isValid;
}

QString OAILogicAppReceiver::getName() const {
    return m_name;
}
void OAILogicAppReceiver::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILogicAppReceiver::is_name_Set() const{
    return m_name_isSet;
}

bool OAILogicAppReceiver::is_name_Valid() const{
    return m_name_isValid;
}

QString OAILogicAppReceiver::getResourceId() const {
    return m_resource_id;
}
void OAILogicAppReceiver::setResourceId(const QString &resource_id) {
    m_resource_id = resource_id;
    m_resource_id_isSet = true;
}

bool OAILogicAppReceiver::is_resource_id_Set() const{
    return m_resource_id_isSet;
}

bool OAILogicAppReceiver::is_resource_id_Valid() const{
    return m_resource_id_isValid;
}

bool OAILogicAppReceiver::isUseCommonAlertSchema() const {
    return m_use_common_alert_schema;
}
void OAILogicAppReceiver::setUseCommonAlertSchema(const bool &use_common_alert_schema) {
    m_use_common_alert_schema = use_common_alert_schema;
    m_use_common_alert_schema_isSet = true;
}

bool OAILogicAppReceiver::is_use_common_alert_schema_Set() const{
    return m_use_common_alert_schema_isSet;
}

bool OAILogicAppReceiver::is_use_common_alert_schema_Valid() const{
    return m_use_common_alert_schema_isValid;
}

bool OAILogicAppReceiver::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_callback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_common_alert_schema_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILogicAppReceiver::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_callback_url_isValid && m_name_isValid && m_resource_id_isValid && m_use_common_alert_schema_isValid && true;
}

} // namespace OpenAPI
