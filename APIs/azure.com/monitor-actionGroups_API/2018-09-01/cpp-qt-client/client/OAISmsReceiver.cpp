/**
 * Azure Action Groups
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISmsReceiver.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISmsReceiver::OAISmsReceiver(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISmsReceiver::OAISmsReceiver() {
    this->initializeModel();
}

OAISmsReceiver::~OAISmsReceiver() {}

void OAISmsReceiver::initializeModel() {

    m_country_code_isSet = false;
    m_country_code_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAISmsReceiver::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISmsReceiver::fromJsonObject(QJsonObject json) {

    m_country_code_isValid = ::OpenAPI::fromJsonValue(m_country_code, json[QString("countryCode")]);
    m_country_code_isSet = !json[QString("countryCode")].isNull() && m_country_code_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phoneNumber")]);
    m_phone_number_isSet = !json[QString("phoneNumber")].isNull() && m_phone_number_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAISmsReceiver::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISmsReceiver::asJsonObject() const {
    QJsonObject obj;
    if (m_country_code_isSet) {
        obj.insert(QString("countryCode"), ::OpenAPI::toJsonValue(m_country_code));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAISmsReceiver::getCountryCode() const {
    return m_country_code;
}
void OAISmsReceiver::setCountryCode(const QString &country_code) {
    m_country_code = country_code;
    m_country_code_isSet = true;
}

bool OAISmsReceiver::is_country_code_Set() const{
    return m_country_code_isSet;
}

bool OAISmsReceiver::is_country_code_Valid() const{
    return m_country_code_isValid;
}

QString OAISmsReceiver::getName() const {
    return m_name;
}
void OAISmsReceiver::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISmsReceiver::is_name_Set() const{
    return m_name_isSet;
}

bool OAISmsReceiver::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISmsReceiver::getPhoneNumber() const {
    return m_phone_number;
}
void OAISmsReceiver::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAISmsReceiver::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAISmsReceiver::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

OAIReceiverStatus OAISmsReceiver::getStatus() const {
    return m_status;
}
void OAISmsReceiver::setStatus(const OAIReceiverStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAISmsReceiver::is_status_Set() const{
    return m_status_isSet;
}

bool OAISmsReceiver::is_status_Valid() const{
    return m_status_isValid;
}

bool OAISmsReceiver::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISmsReceiver::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_country_code_isValid && m_name_isValid && m_phone_number_isValid && true;
}

} // namespace OpenAPI
