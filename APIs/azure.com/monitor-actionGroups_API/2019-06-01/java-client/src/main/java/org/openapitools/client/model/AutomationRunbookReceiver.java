/*
 * Azure Action Groups
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The Azure Automation Runbook notification receiver.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:56:20.782491-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AutomationRunbookReceiver {
  public static final String SERIALIZED_NAME_AUTOMATION_ACCOUNT_ID = "automationAccountId";
  @SerializedName(SERIALIZED_NAME_AUTOMATION_ACCOUNT_ID)
  private String automationAccountId;

  public static final String SERIALIZED_NAME_IS_GLOBAL_RUNBOOK = "isGlobalRunbook";
  @SerializedName(SERIALIZED_NAME_IS_GLOBAL_RUNBOOK)
  private Boolean isGlobalRunbook;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RUNBOOK_NAME = "runbookName";
  @SerializedName(SERIALIZED_NAME_RUNBOOK_NAME)
  private String runbookName;

  public static final String SERIALIZED_NAME_SERVICE_URI = "serviceUri";
  @SerializedName(SERIALIZED_NAME_SERVICE_URI)
  private String serviceUri;

  public static final String SERIALIZED_NAME_USE_COMMON_ALERT_SCHEMA = "useCommonAlertSchema";
  @SerializedName(SERIALIZED_NAME_USE_COMMON_ALERT_SCHEMA)
  private Boolean useCommonAlertSchema;

  public static final String SERIALIZED_NAME_WEBHOOK_RESOURCE_ID = "webhookResourceId";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_RESOURCE_ID)
  private String webhookResourceId;

  public AutomationRunbookReceiver() {
  }

  public AutomationRunbookReceiver automationAccountId(String automationAccountId) {
    this.automationAccountId = automationAccountId;
    return this;
  }

  /**
   * The Azure automation account Id which holds this runbook and authenticate to Azure resource.
   * @return automationAccountId
   */
  @javax.annotation.Nonnull
  public String getAutomationAccountId() {
    return automationAccountId;
  }

  public void setAutomationAccountId(String automationAccountId) {
    this.automationAccountId = automationAccountId;
  }


  public AutomationRunbookReceiver isGlobalRunbook(Boolean isGlobalRunbook) {
    this.isGlobalRunbook = isGlobalRunbook;
    return this;
  }

  /**
   * Indicates whether this instance is global runbook.
   * @return isGlobalRunbook
   */
  @javax.annotation.Nonnull
  public Boolean getIsGlobalRunbook() {
    return isGlobalRunbook;
  }

  public void setIsGlobalRunbook(Boolean isGlobalRunbook) {
    this.isGlobalRunbook = isGlobalRunbook;
  }


  public AutomationRunbookReceiver name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Indicates name of the webhook.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AutomationRunbookReceiver runbookName(String runbookName) {
    this.runbookName = runbookName;
    return this;
  }

  /**
   * The name for this runbook.
   * @return runbookName
   */
  @javax.annotation.Nonnull
  public String getRunbookName() {
    return runbookName;
  }

  public void setRunbookName(String runbookName) {
    this.runbookName = runbookName;
  }


  public AutomationRunbookReceiver serviceUri(String serviceUri) {
    this.serviceUri = serviceUri;
    return this;
  }

  /**
   * The URI where webhooks should be sent.
   * @return serviceUri
   */
  @javax.annotation.Nullable
  public String getServiceUri() {
    return serviceUri;
  }

  public void setServiceUri(String serviceUri) {
    this.serviceUri = serviceUri;
  }


  public AutomationRunbookReceiver useCommonAlertSchema(Boolean useCommonAlertSchema) {
    this.useCommonAlertSchema = useCommonAlertSchema;
    return this;
  }

  /**
   * Indicates whether to use common alert schema.
   * @return useCommonAlertSchema
   */
  @javax.annotation.Nonnull
  public Boolean getUseCommonAlertSchema() {
    return useCommonAlertSchema;
  }

  public void setUseCommonAlertSchema(Boolean useCommonAlertSchema) {
    this.useCommonAlertSchema = useCommonAlertSchema;
  }


  public AutomationRunbookReceiver webhookResourceId(String webhookResourceId) {
    this.webhookResourceId = webhookResourceId;
    return this;
  }

  /**
   * The resource id for webhook linked to this runbook.
   * @return webhookResourceId
   */
  @javax.annotation.Nonnull
  public String getWebhookResourceId() {
    return webhookResourceId;
  }

  public void setWebhookResourceId(String webhookResourceId) {
    this.webhookResourceId = webhookResourceId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationRunbookReceiver automationRunbookReceiver = (AutomationRunbookReceiver) o;
    return Objects.equals(this.automationAccountId, automationRunbookReceiver.automationAccountId) &&
        Objects.equals(this.isGlobalRunbook, automationRunbookReceiver.isGlobalRunbook) &&
        Objects.equals(this.name, automationRunbookReceiver.name) &&
        Objects.equals(this.runbookName, automationRunbookReceiver.runbookName) &&
        Objects.equals(this.serviceUri, automationRunbookReceiver.serviceUri) &&
        Objects.equals(this.useCommonAlertSchema, automationRunbookReceiver.useCommonAlertSchema) &&
        Objects.equals(this.webhookResourceId, automationRunbookReceiver.webhookResourceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automationAccountId, isGlobalRunbook, name, runbookName, serviceUri, useCommonAlertSchema, webhookResourceId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationRunbookReceiver {\n");
    sb.append("    automationAccountId: ").append(toIndentedString(automationAccountId)).append("\n");
    sb.append("    isGlobalRunbook: ").append(toIndentedString(isGlobalRunbook)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    runbookName: ").append(toIndentedString(runbookName)).append("\n");
    sb.append("    serviceUri: ").append(toIndentedString(serviceUri)).append("\n");
    sb.append("    useCommonAlertSchema: ").append(toIndentedString(useCommonAlertSchema)).append("\n");
    sb.append("    webhookResourceId: ").append(toIndentedString(webhookResourceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("automationAccountId");
    openapiFields.add("isGlobalRunbook");
    openapiFields.add("name");
    openapiFields.add("runbookName");
    openapiFields.add("serviceUri");
    openapiFields.add("useCommonAlertSchema");
    openapiFields.add("webhookResourceId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("automationAccountId");
    openapiRequiredFields.add("isGlobalRunbook");
    openapiRequiredFields.add("runbookName");
    openapiRequiredFields.add("useCommonAlertSchema");
    openapiRequiredFields.add("webhookResourceId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutomationRunbookReceiver
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutomationRunbookReceiver.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutomationRunbookReceiver is not found in the empty JSON string", AutomationRunbookReceiver.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutomationRunbookReceiver.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutomationRunbookReceiver` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AutomationRunbookReceiver.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("automationAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `automationAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("automationAccountId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("runbookName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `runbookName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("runbookName").toString()));
      }
      if ((jsonObj.get("serviceUri") != null && !jsonObj.get("serviceUri").isJsonNull()) && !jsonObj.get("serviceUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceUri").toString()));
      }
      if (!jsonObj.get("webhookResourceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhookResourceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhookResourceId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutomationRunbookReceiver.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutomationRunbookReceiver' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutomationRunbookReceiver> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutomationRunbookReceiver.class));

       return (TypeAdapter<T>) new TypeAdapter<AutomationRunbookReceiver>() {
           @Override
           public void write(JsonWriter out, AutomationRunbookReceiver value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutomationRunbookReceiver read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutomationRunbookReceiver given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutomationRunbookReceiver
   * @throws IOException if the JSON string is invalid with respect to AutomationRunbookReceiver
   */
  public static AutomationRunbookReceiver fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutomationRunbookReceiver.class);
  }

  /**
   * Convert an instance of AutomationRunbookReceiver to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

