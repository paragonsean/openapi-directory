/**
 * Azure Action Groups
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReceiverStatus from './ReceiverStatus';

/**
 * The EmailReceiver model module.
 * @module model/EmailReceiver
 * @version 2019-06-01
 */
class EmailReceiver {
    /**
     * Constructs a new <code>EmailReceiver</code>.
     * An email receiver.
     * @alias module:model/EmailReceiver
     * @param emailAddress {String} The email address of this receiver.
     * @param name {String} The name of the email receiver. Names must be unique across all receivers within an action group.
     * @param useCommonAlertSchema {Boolean} Indicates whether to use common alert schema.
     */
    constructor(emailAddress, name, useCommonAlertSchema) { 
        
        EmailReceiver.initialize(this, emailAddress, name, useCommonAlertSchema);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, emailAddress, name, useCommonAlertSchema) { 
        obj['emailAddress'] = emailAddress;
        obj['name'] = name;
        obj['useCommonAlertSchema'] = useCommonAlertSchema;
    }

    /**
     * Constructs a <code>EmailReceiver</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmailReceiver} obj Optional instance to populate.
     * @return {module:model/EmailReceiver} The populated <code>EmailReceiver</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmailReceiver();

            if (data.hasOwnProperty('emailAddress')) {
                obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ReceiverStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('useCommonAlertSchema')) {
                obj['useCommonAlertSchema'] = ApiClient.convertToType(data['useCommonAlertSchema'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmailReceiver</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmailReceiver</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EmailReceiver.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['emailAddress'] && !(typeof data['emailAddress'] === 'string' || data['emailAddress'] instanceof String)) {
            throw new Error("Expected the field `emailAddress` to be a primitive type in the JSON string but got " + data['emailAddress']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

EmailReceiver.RequiredProperties = ["emailAddress", "name", "useCommonAlertSchema"];

/**
 * The email address of this receiver.
 * @member {String} emailAddress
 */
EmailReceiver.prototype['emailAddress'] = undefined;

/**
 * The name of the email receiver. Names must be unique across all receivers within an action group.
 * @member {String} name
 */
EmailReceiver.prototype['name'] = undefined;

/**
 * @member {module:model/ReceiverStatus} status
 */
EmailReceiver.prototype['status'] = undefined;

/**
 * Indicates whether to use common alert schema.
 * @member {Boolean} useCommonAlertSchema
 */
EmailReceiver.prototype['useCommonAlertSchema'] = undefined;






export default EmailReceiver;

