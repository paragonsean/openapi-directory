/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.FirewallRule;
import org.openapitools.client.model.FirewallRuleList;
import org.openapitools.client.model.FirewallRuleListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FirewallRulesApi
 */
@Disabled
public class FirewallRulesApiTest {

    private final FirewallRulesApi api = new FirewallRulesApi();

    /**
     * Creates or updates a firewall rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firewallRulesCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String firewallRuleName = null;
        String subscriptionId = null;
        String apiVersion = null;
        FirewallRule parameters = null;
        FirewallRule response = api.firewallRulesCreateOrUpdate(resourceGroupName, serverName, firewallRuleName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a firewall rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firewallRulesDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String firewallRuleName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.firewallRulesDelete(resourceGroupName, serverName, firewallRuleName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a firewall rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firewallRulesGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String firewallRuleName = null;
        String subscriptionId = null;
        String apiVersion = null;
        FirewallRule response = api.firewallRulesGet(resourceGroupName, serverName, firewallRuleName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of firewall rules.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firewallRulesListByServerTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String subscriptionId = null;
        String apiVersion = null;
        FirewallRuleListResult response = api.firewallRulesListByServer(resourceGroupName, serverName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Replaces all firewall rules on the server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firewallRulesReplaceTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String subscriptionId = null;
        String apiVersion = null;
        FirewallRuleList parameters = null;
        FirewallRule response = api.firewallRulesReplace(resourceGroupName, serverName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
