/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The properties of a server firewall rule.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:16:17.123951-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ServerFirewallRuleProperties {
  public static final String SERIALIZED_NAME_END_IP_ADDRESS = "endIpAddress";
  @SerializedName(SERIALIZED_NAME_END_IP_ADDRESS)
  private String endIpAddress;

  public static final String SERIALIZED_NAME_START_IP_ADDRESS = "startIpAddress";
  @SerializedName(SERIALIZED_NAME_START_IP_ADDRESS)
  private String startIpAddress;

  public ServerFirewallRuleProperties() {
  }

  public ServerFirewallRuleProperties endIpAddress(String endIpAddress) {
    this.endIpAddress = endIpAddress;
    return this;
  }

  /**
   * The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress. Use value &#39;0.0.0.0&#39; for all Azure-internal IP addresses.
   * @return endIpAddress
   */
  @javax.annotation.Nullable
  public String getEndIpAddress() {
    return endIpAddress;
  }

  public void setEndIpAddress(String endIpAddress) {
    this.endIpAddress = endIpAddress;
  }


  public ServerFirewallRuleProperties startIpAddress(String startIpAddress) {
    this.startIpAddress = startIpAddress;
    return this;
  }

  /**
   * The start IP address of the firewall rule. Must be IPv4 format. Use value &#39;0.0.0.0&#39; for all Azure-internal IP addresses.
   * @return startIpAddress
   */
  @javax.annotation.Nullable
  public String getStartIpAddress() {
    return startIpAddress;
  }

  public void setStartIpAddress(String startIpAddress) {
    this.startIpAddress = startIpAddress;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServerFirewallRuleProperties serverFirewallRuleProperties = (ServerFirewallRuleProperties) o;
    return Objects.equals(this.endIpAddress, serverFirewallRuleProperties.endIpAddress) &&
        Objects.equals(this.startIpAddress, serverFirewallRuleProperties.startIpAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endIpAddress, startIpAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServerFirewallRuleProperties {\n");
    sb.append("    endIpAddress: ").append(toIndentedString(endIpAddress)).append("\n");
    sb.append("    startIpAddress: ").append(toIndentedString(startIpAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("endIpAddress");
    openapiFields.add("startIpAddress");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServerFirewallRuleProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServerFirewallRuleProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServerFirewallRuleProperties is not found in the empty JSON string", ServerFirewallRuleProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServerFirewallRuleProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServerFirewallRuleProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("endIpAddress") != null && !jsonObj.get("endIpAddress").isJsonNull()) && !jsonObj.get("endIpAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endIpAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endIpAddress").toString()));
      }
      if ((jsonObj.get("startIpAddress") != null && !jsonObj.get("startIpAddress").isJsonNull()) && !jsonObj.get("startIpAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startIpAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startIpAddress").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServerFirewallRuleProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServerFirewallRuleProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServerFirewallRuleProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServerFirewallRuleProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ServerFirewallRuleProperties>() {
           @Override
           public void write(JsonWriter out, ServerFirewallRuleProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServerFirewallRuleProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServerFirewallRuleProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServerFirewallRuleProperties
   * @throws IOException if the JSON string is invalid with respect to ServerFirewallRuleProperties
   */
  public static ServerFirewallRuleProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServerFirewallRuleProperties.class);
  }

  /**
   * Convert an instance of ServerFirewallRuleProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

