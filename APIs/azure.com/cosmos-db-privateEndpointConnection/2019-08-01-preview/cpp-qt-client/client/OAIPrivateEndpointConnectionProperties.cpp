/**
 * Cosmos DB
 * Azure Cosmos DB Database Service Resource Provider REST API
 *
 * The version of the OpenAPI document: 2019-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrivateEndpointConnectionProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrivateEndpointConnectionProperties::OAIPrivateEndpointConnectionProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrivateEndpointConnectionProperties::OAIPrivateEndpointConnectionProperties() {
    this->initializeModel();
}

OAIPrivateEndpointConnectionProperties::~OAIPrivateEndpointConnectionProperties() {}

void OAIPrivateEndpointConnectionProperties::initializeModel() {

    m_private_endpoint_isSet = false;
    m_private_endpoint_isValid = false;

    m_private_link_service_connection_state_isSet = false;
    m_private_link_service_connection_state_isValid = false;
}

void OAIPrivateEndpointConnectionProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrivateEndpointConnectionProperties::fromJsonObject(QJsonObject json) {

    m_private_endpoint_isValid = ::OpenAPI::fromJsonValue(m_private_endpoint, json[QString("privateEndpoint")]);
    m_private_endpoint_isSet = !json[QString("privateEndpoint")].isNull() && m_private_endpoint_isValid;

    m_private_link_service_connection_state_isValid = ::OpenAPI::fromJsonValue(m_private_link_service_connection_state, json[QString("privateLinkServiceConnectionState")]);
    m_private_link_service_connection_state_isSet = !json[QString("privateLinkServiceConnectionState")].isNull() && m_private_link_service_connection_state_isValid;
}

QString OAIPrivateEndpointConnectionProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrivateEndpointConnectionProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_private_endpoint.isSet()) {
        obj.insert(QString("privateEndpoint"), ::OpenAPI::toJsonValue(m_private_endpoint));
    }
    if (m_private_link_service_connection_state.isSet()) {
        obj.insert(QString("privateLinkServiceConnectionState"), ::OpenAPI::toJsonValue(m_private_link_service_connection_state));
    }
    return obj;
}

OAIPrivateEndpointProperty OAIPrivateEndpointConnectionProperties::getPrivateEndpoint() const {
    return m_private_endpoint;
}
void OAIPrivateEndpointConnectionProperties::setPrivateEndpoint(const OAIPrivateEndpointProperty &private_endpoint) {
    m_private_endpoint = private_endpoint;
    m_private_endpoint_isSet = true;
}

bool OAIPrivateEndpointConnectionProperties::is_private_endpoint_Set() const{
    return m_private_endpoint_isSet;
}

bool OAIPrivateEndpointConnectionProperties::is_private_endpoint_Valid() const{
    return m_private_endpoint_isValid;
}

OAIPrivateLinkServiceConnectionStateProperty OAIPrivateEndpointConnectionProperties::getPrivateLinkServiceConnectionState() const {
    return m_private_link_service_connection_state;
}
void OAIPrivateEndpointConnectionProperties::setPrivateLinkServiceConnectionState(const OAIPrivateLinkServiceConnectionStateProperty &private_link_service_connection_state) {
    m_private_link_service_connection_state = private_link_service_connection_state;
    m_private_link_service_connection_state_isSet = true;
}

bool OAIPrivateEndpointConnectionProperties::is_private_link_service_connection_state_Set() const{
    return m_private_link_service_connection_state_isSet;
}

bool OAIPrivateEndpointConnectionProperties::is_private_link_service_connection_state_Valid() const{
    return m_private_link_service_connection_state_isValid;
}

bool OAIPrivateEndpointConnectionProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_private_endpoint.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_link_service_connection_state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrivateEndpointConnectionProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
