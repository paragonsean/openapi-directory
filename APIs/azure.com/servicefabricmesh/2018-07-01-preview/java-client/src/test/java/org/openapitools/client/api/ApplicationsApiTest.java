/*
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApplicationResourceDescription;
import org.openapitools.client.model.ApplicationResourceDescriptionList;
import org.openapitools.client.model.ErrorModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationsApi
 */
@Disabled
public class ApplicationsApiTest {

    private final ApplicationsApi api = new ApplicationsApi();

    /**
     * Creates or updates an application resource.
     *
     * Creates an application resource with the specified name and description. If an application with the same name already exists, then its description is updated to the one indicated in this request.  Use network resources to provide public connectivity to the services of an application. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationCreateTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String applicationName = null;
        ApplicationResourceDescription applicationResourceDescription = null;
        ApplicationResourceDescription response = api.applicationCreate(subscriptionId, apiVersion, resourceGroupName, applicationName, applicationResourceDescription);
        // TODO: test validations
    }

    /**
     * Deletes the application resource.
     *
     * Deletes the application resource identified by the name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationDeleteTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String applicationName = null;
        api.applicationDelete(subscriptionId, apiVersion, resourceGroupName, applicationName);
        // TODO: test validations
    }

    /**
     * Gets the application resource.
     *
     * Gets the information about the application resource with a given name. The information includes the information about the application&#39;s services and other runtime properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationGetTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String applicationName = null;
        ApplicationResourceDescription response = api.applicationGet(subscriptionId, apiVersion, resourceGroupName, applicationName);
        // TODO: test validations
    }

    /**
     * Gets all the application resources in a given resource group.
     *
     * Gets the information about all application resources in a given resource group. The information includes the information about the application&#39;s services and other runtime properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        ApplicationResourceDescriptionList response = api.applicationListByResourceGroup(subscriptionId, apiVersion, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Gets all the application resources in a given subscription.
     *
     * Gets the information about all application resources in a given subscription. The information includes the information about the application&#39;s services and other runtime properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applicationListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        ApplicationResourceDescriptionList response = api.applicationListBySubscription(subscriptionId, apiVersion);
        // TODO: test validations
    }

}
