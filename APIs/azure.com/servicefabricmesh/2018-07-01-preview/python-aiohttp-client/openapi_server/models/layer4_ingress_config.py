# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Layer4IngressConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, endpoint_name: str=None, name: str=None, public_port: int=None, service_name: str=None):
        """Layer4IngressConfig - a model defined in OpenAPI

        :param application_name: The application_name of this Layer4IngressConfig.
        :param endpoint_name: The endpoint_name of this Layer4IngressConfig.
        :param name: The name of this Layer4IngressConfig.
        :param public_port: The public_port of this Layer4IngressConfig.
        :param service_name: The service_name of this Layer4IngressConfig.
        """
        self.openapi_types = {
            'application_name': str,
            'endpoint_name': str,
            'name': str,
            'public_port': int,
            'service_name': str
        }

        self.attribute_map = {
            'application_name': 'applicationName',
            'endpoint_name': 'endpointName',
            'name': 'name',
            'public_port': 'publicPort',
            'service_name': 'serviceName'
        }

        self._application_name = application_name
        self._endpoint_name = endpoint_name
        self._name = name
        self._public_port = public_port
        self._service_name = service_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Layer4IngressConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Layer4IngressConfig of this Layer4IngressConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this Layer4IngressConfig.

        The application name which contains the service to be exposed.

        :return: The application_name of this Layer4IngressConfig.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this Layer4IngressConfig.

        The application name which contains the service to be exposed.

        :param application_name: The application_name of this Layer4IngressConfig.
        :type application_name: str
        """

        self._application_name = application_name

    @property
    def endpoint_name(self):
        """Gets the endpoint_name of this Layer4IngressConfig.

        The service endpoint that needs to be exposed.

        :return: The endpoint_name of this Layer4IngressConfig.
        :rtype: str
        """
        return self._endpoint_name

    @endpoint_name.setter
    def endpoint_name(self, endpoint_name):
        """Sets the endpoint_name of this Layer4IngressConfig.

        The service endpoint that needs to be exposed.

        :param endpoint_name: The endpoint_name of this Layer4IngressConfig.
        :type endpoint_name: str
        """

        self._endpoint_name = endpoint_name

    @property
    def name(self):
        """Gets the name of this Layer4IngressConfig.

        Layer4 ingress config name.

        :return: The name of this Layer4IngressConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Layer4IngressConfig.

        Layer4 ingress config name.

        :param name: The name of this Layer4IngressConfig.
        :type name: str
        """

        self._name = name

    @property
    def public_port(self):
        """Gets the public_port of this Layer4IngressConfig.

        Specifies the public port at which the service endpoint below needs to be exposed.

        :return: The public_port of this Layer4IngressConfig.
        :rtype: int
        """
        return self._public_port

    @public_port.setter
    def public_port(self, public_port):
        """Sets the public_port of this Layer4IngressConfig.

        Specifies the public port at which the service endpoint below needs to be exposed.

        :param public_port: The public_port of this Layer4IngressConfig.
        :type public_port: int
        """

        self._public_port = public_port

    @property
    def service_name(self):
        """Gets the service_name of this Layer4IngressConfig.

        The service whose endpoint needs to be exposed at the public port.

        :return: The service_name of this Layer4IngressConfig.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this Layer4IngressConfig.

        The service whose endpoint needs to be exposed at the public port.

        :param service_name: The service_name of this Layer4IngressConfig.
        :type service_name: str
        """

        self._service_name = service_name
