/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIngressConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIngressConfig::OAIIngressConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIngressConfig::OAIIngressConfig() {
    this->initializeModel();
}

OAIIngressConfig::~OAIIngressConfig() {}

void OAIIngressConfig::initializeModel() {

    m_layer4_isSet = false;
    m_layer4_isValid = false;

    m_public_ip_address_isSet = false;
    m_public_ip_address_isValid = false;

    m_qos_level_isSet = false;
    m_qos_level_isValid = false;
}

void OAIIngressConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIngressConfig::fromJsonObject(QJsonObject json) {

    m_layer4_isValid = ::OpenAPI::fromJsonValue(m_layer4, json[QString("layer4")]);
    m_layer4_isSet = !json[QString("layer4")].isNull() && m_layer4_isValid;

    m_public_ip_address_isValid = ::OpenAPI::fromJsonValue(m_public_ip_address, json[QString("publicIPAddress")]);
    m_public_ip_address_isSet = !json[QString("publicIPAddress")].isNull() && m_public_ip_address_isValid;

    m_qos_level_isValid = ::OpenAPI::fromJsonValue(m_qos_level, json[QString("qosLevel")]);
    m_qos_level_isSet = !json[QString("qosLevel")].isNull() && m_qos_level_isValid;
}

QString OAIIngressConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIngressConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_layer4.size() > 0) {
        obj.insert(QString("layer4"), ::OpenAPI::toJsonValue(m_layer4));
    }
    if (m_public_ip_address_isSet) {
        obj.insert(QString("publicIPAddress"), ::OpenAPI::toJsonValue(m_public_ip_address));
    }
    if (m_qos_level_isSet) {
        obj.insert(QString("qosLevel"), ::OpenAPI::toJsonValue(m_qos_level));
    }
    return obj;
}

QList<OAILayer4IngressConfig> OAIIngressConfig::getLayer4() const {
    return m_layer4;
}
void OAIIngressConfig::setLayer4(const QList<OAILayer4IngressConfig> &layer4) {
    m_layer4 = layer4;
    m_layer4_isSet = true;
}

bool OAIIngressConfig::is_layer4_Set() const{
    return m_layer4_isSet;
}

bool OAIIngressConfig::is_layer4_Valid() const{
    return m_layer4_isValid;
}

QString OAIIngressConfig::getPublicIpAddress() const {
    return m_public_ip_address;
}
void OAIIngressConfig::setPublicIpAddress(const QString &public_ip_address) {
    m_public_ip_address = public_ip_address;
    m_public_ip_address_isSet = true;
}

bool OAIIngressConfig::is_public_ip_address_Set() const{
    return m_public_ip_address_isSet;
}

bool OAIIngressConfig::is_public_ip_address_Valid() const{
    return m_public_ip_address_isValid;
}

QString OAIIngressConfig::getQosLevel() const {
    return m_qos_level;
}
void OAIIngressConfig::setQosLevel(const QString &qos_level) {
    m_qos_level = qos_level;
    m_qos_level_isSet = true;
}

bool OAIIngressConfig::is_qos_level_Set() const{
    return m_qos_level_isSet;
}

bool OAIIngressConfig::is_qos_level_Valid() const{
    return m_qos_level_isValid;
}

bool OAIIngressConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_layer4.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qos_level_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIngressConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
