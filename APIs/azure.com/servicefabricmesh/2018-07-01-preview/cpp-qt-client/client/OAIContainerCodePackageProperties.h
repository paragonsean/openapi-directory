/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerCodePackageProperties.h
 *
 * Describes a container and its runtime properties.
 */

#ifndef OAIContainerCodePackageProperties_H
#define OAIContainerCodePackageProperties_H

#include <QJsonObject>

#include "OAIContainerInstanceView.h"
#include "OAIContainerLabel.h"
#include "OAIContainerVolume.h"
#include "OAIDiagnosticsRef.h"
#include "OAIEndpointProperties.h"
#include "OAIEnvironmentVariable.h"
#include "OAIImageRegistryCredential.h"
#include "OAIResourceRequirements.h"
#include "OAISetting.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiagnosticsRef;
class OAIEndpointProperties;
class OAIEnvironmentVariable;
class OAIImageRegistryCredential;
class OAIContainerInstanceView;
class OAIContainerLabel;
class OAIResourceRequirements;
class OAISetting;
class OAIContainerVolume;

class OAIContainerCodePackageProperties : public OAIObject {
public:
    OAIContainerCodePackageProperties();
    OAIContainerCodePackageProperties(QString json);
    ~OAIContainerCodePackageProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCommands() const;
    void setCommands(const QList<QString> &commands);
    bool is_commands_Set() const;
    bool is_commands_Valid() const;

    OAIDiagnosticsRef getDiagnostics() const;
    void setDiagnostics(const OAIDiagnosticsRef &diagnostics);
    bool is_diagnostics_Set() const;
    bool is_diagnostics_Valid() const;

    QList<OAIEndpointProperties> getEndpoints() const;
    void setEndpoints(const QList<OAIEndpointProperties> &endpoints);
    bool is_endpoints_Set() const;
    bool is_endpoints_Valid() const;

    QString getEntrypoint() const;
    void setEntrypoint(const QString &entrypoint);
    bool is_entrypoint_Set() const;
    bool is_entrypoint_Valid() const;

    QList<OAIEnvironmentVariable> getEnvironmentVariables() const;
    void setEnvironmentVariables(const QList<OAIEnvironmentVariable> &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    QString getImage() const;
    void setImage(const QString &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    OAIImageRegistryCredential getImageRegistryCredential() const;
    void setImageRegistryCredential(const OAIImageRegistryCredential &image_registry_credential);
    bool is_image_registry_credential_Set() const;
    bool is_image_registry_credential_Valid() const;

    OAIContainerInstanceView getInstanceView() const;
    void setInstanceView(const OAIContainerInstanceView &instance_view);
    bool is_instance_view_Set() const;
    bool is_instance_view_Valid() const;

    QList<OAIContainerLabel> getLabels() const;
    void setLabels(const QList<OAIContainerLabel> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIResourceRequirements getResources() const;
    void setResources(const OAIResourceRequirements &resources);
    bool is_resources_Set() const;
    bool is_resources_Valid() const;

    QList<OAISetting> getSettings() const;
    void setSettings(const QList<OAISetting> &settings);
    bool is_settings_Set() const;
    bool is_settings_Valid() const;

    QList<OAIContainerVolume> getVolumeRefs() const;
    void setVolumeRefs(const QList<OAIContainerVolume> &volume_refs);
    bool is_volume_refs_Set() const;
    bool is_volume_refs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_commands;
    bool m_commands_isSet;
    bool m_commands_isValid;

    OAIDiagnosticsRef m_diagnostics;
    bool m_diagnostics_isSet;
    bool m_diagnostics_isValid;

    QList<OAIEndpointProperties> m_endpoints;
    bool m_endpoints_isSet;
    bool m_endpoints_isValid;

    QString m_entrypoint;
    bool m_entrypoint_isSet;
    bool m_entrypoint_isValid;

    QList<OAIEnvironmentVariable> m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;

    QString m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    OAIImageRegistryCredential m_image_registry_credential;
    bool m_image_registry_credential_isSet;
    bool m_image_registry_credential_isValid;

    OAIContainerInstanceView m_instance_view;
    bool m_instance_view_isSet;
    bool m_instance_view_isValid;

    QList<OAIContainerLabel> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIResourceRequirements m_resources;
    bool m_resources_isSet;
    bool m_resources_isValid;

    QList<OAISetting> m_settings;
    bool m_settings_isSet;
    bool m_settings_isValid;

    QList<OAIContainerVolume> m_volume_refs;
    bool m_volume_refs_isSet;
    bool m_volume_refs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerCodePackageProperties)

#endif // OAIContainerCodePackageProperties_H
