/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Layer4IngressConfig model module.
 * @module model/Layer4IngressConfig
 * @version 2018-07-01-preview
 */
class Layer4IngressConfig {
    /**
     * Constructs a new <code>Layer4IngressConfig</code>.
     * Describes the layer4 configuration for public connectivity for this network.
     * @alias module:model/Layer4IngressConfig
     */
    constructor() { 
        
        Layer4IngressConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Layer4IngressConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Layer4IngressConfig} obj Optional instance to populate.
     * @return {module:model/Layer4IngressConfig} The populated <code>Layer4IngressConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Layer4IngressConfig();

            if (data.hasOwnProperty('applicationName')) {
                obj['applicationName'] = ApiClient.convertToType(data['applicationName'], 'String');
            }
            if (data.hasOwnProperty('endpointName')) {
                obj['endpointName'] = ApiClient.convertToType(data['endpointName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('publicPort')) {
                obj['publicPort'] = ApiClient.convertToType(data['publicPort'], 'Number');
            }
            if (data.hasOwnProperty('serviceName')) {
                obj['serviceName'] = ApiClient.convertToType(data['serviceName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Layer4IngressConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Layer4IngressConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['applicationName'] && !(typeof data['applicationName'] === 'string' || data['applicationName'] instanceof String)) {
            throw new Error("Expected the field `applicationName` to be a primitive type in the JSON string but got " + data['applicationName']);
        }
        // ensure the json data is a string
        if (data['endpointName'] && !(typeof data['endpointName'] === 'string' || data['endpointName'] instanceof String)) {
            throw new Error("Expected the field `endpointName` to be a primitive type in the JSON string but got " + data['endpointName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['serviceName'] && !(typeof data['serviceName'] === 'string' || data['serviceName'] instanceof String)) {
            throw new Error("Expected the field `serviceName` to be a primitive type in the JSON string but got " + data['serviceName']);
        }

        return true;
    }


}



/**
 * The application name which contains the service to be exposed.
 * @member {String} applicationName
 */
Layer4IngressConfig.prototype['applicationName'] = undefined;

/**
 * The service endpoint that needs to be exposed.
 * @member {String} endpointName
 */
Layer4IngressConfig.prototype['endpointName'] = undefined;

/**
 * Layer4 ingress config name.
 * @member {String} name
 */
Layer4IngressConfig.prototype['name'] = undefined;

/**
 * Specifies the public port at which the service endpoint below needs to be exposed.
 * @member {Number} publicPort
 */
Layer4IngressConfig.prototype['publicPort'] = undefined;

/**
 * The service whose endpoint needs to be exposed at the public port.
 * @member {String} serviceName
 */
Layer4IngressConfig.prototype['serviceName'] = undefined;






export default Layer4IngressConfig;

