/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VolumeProviderParametersAzureFile model module.
 * @module model/VolumeProviderParametersAzureFile
 * @version 2018-07-01-preview
 */
class VolumeProviderParametersAzureFile {
    /**
     * Constructs a new <code>VolumeProviderParametersAzureFile</code>.
     * This type describes a volume provided by an Azure Files file share.
     * @alias module:model/VolumeProviderParametersAzureFile
     * @param accountName {String} Name of the Azure storage account for the File Share.
     * @param shareName {String} Name of the Azure Files file share that provides storage for the volume.
     */
    constructor(accountName, shareName) { 
        
        VolumeProviderParametersAzureFile.initialize(this, accountName, shareName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountName, shareName) { 
        obj['accountName'] = accountName;
        obj['shareName'] = shareName;
    }

    /**
     * Constructs a <code>VolumeProviderParametersAzureFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VolumeProviderParametersAzureFile} obj Optional instance to populate.
     * @return {module:model/VolumeProviderParametersAzureFile} The populated <code>VolumeProviderParametersAzureFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VolumeProviderParametersAzureFile();

            if (data.hasOwnProperty('accountKey')) {
                obj['accountKey'] = ApiClient.convertToType(data['accountKey'], 'String');
            }
            if (data.hasOwnProperty('accountName')) {
                obj['accountName'] = ApiClient.convertToType(data['accountName'], 'String');
            }
            if (data.hasOwnProperty('shareName')) {
                obj['shareName'] = ApiClient.convertToType(data['shareName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VolumeProviderParametersAzureFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VolumeProviderParametersAzureFile</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VolumeProviderParametersAzureFile.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accountKey'] && !(typeof data['accountKey'] === 'string' || data['accountKey'] instanceof String)) {
            throw new Error("Expected the field `accountKey` to be a primitive type in the JSON string but got " + data['accountKey']);
        }
        // ensure the json data is a string
        if (data['accountName'] && !(typeof data['accountName'] === 'string' || data['accountName'] instanceof String)) {
            throw new Error("Expected the field `accountName` to be a primitive type in the JSON string but got " + data['accountName']);
        }
        // ensure the json data is a string
        if (data['shareName'] && !(typeof data['shareName'] === 'string' || data['shareName'] instanceof String)) {
            throw new Error("Expected the field `shareName` to be a primitive type in the JSON string but got " + data['shareName']);
        }

        return true;
    }


}

VolumeProviderParametersAzureFile.RequiredProperties = ["accountName", "shareName"];

/**
 * Access key of the Azure storage account for the File Share.
 * @member {String} accountKey
 */
VolumeProviderParametersAzureFile.prototype['accountKey'] = undefined;

/**
 * Name of the Azure storage account for the File Share.
 * @member {String} accountName
 */
VolumeProviderParametersAzureFile.prototype['accountName'] = undefined;

/**
 * Name of the Azure Files file share that provides storage for the volume.
 * @member {String} shareName
 */
VolumeProviderParametersAzureFile.prototype['shareName'] = undefined;






export default VolumeProviderParametersAzureFile;

