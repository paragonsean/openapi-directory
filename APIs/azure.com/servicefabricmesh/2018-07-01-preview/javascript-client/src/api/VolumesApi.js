/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorModel from '../model/ErrorModel';
import VolumeResourceDescription from '../model/VolumeResourceDescription';
import VolumeResourceDescriptionList from '../model/VolumeResourceDescriptionList';

/**
* Volumes service.
* @module api/VolumesApi
* @version 2018-07-01-preview
*/
export default class VolumesApi {

    /**
    * Constructs a new VolumesApi. 
    * @alias module:api/VolumesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the volumeCreate operation.
     * @callback module:api/VolumesApi~volumeCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VolumeResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a volume resource.
     * Creates a volume resource with the specified name and description. If a volume with the same name already exists, then its description is updated to the one indicated in this request. 
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-07-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {String} volumeName The identity of the volume.
     * @param {module:model/VolumeResourceDescription} volumeResourceDescription Description for creating a volume resource.
     * @param {module:api/VolumesApi~volumeCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VolumeResourceDescription}
     */
    volumeCreate(subscriptionId, apiVersion, resourceGroupName, volumeName, volumeResourceDescription, callback) {
      let postBody = volumeResourceDescription;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling volumeCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling volumeCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling volumeCreate");
      }
      // verify the required parameter 'volumeName' is set
      if (volumeName === undefined || volumeName === null) {
        throw new Error("Missing the required parameter 'volumeName' when calling volumeCreate");
      }
      // verify the required parameter 'volumeResourceDescription' is set
      if (volumeResourceDescription === undefined || volumeResourceDescription === null) {
        throw new Error("Missing the required parameter 'volumeResourceDescription' when calling volumeCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'volumeName': volumeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VolumeResourceDescription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/{volumeName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the volumeDelete operation.
     * @callback module:api/VolumesApi~volumeDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the volume resource.
     * Deletes the volume identified by the name.
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-07-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {String} volumeName The identity of the volume.
     * @param {module:api/VolumesApi~volumeDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    volumeDelete(subscriptionId, apiVersion, resourceGroupName, volumeName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling volumeDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling volumeDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling volumeDelete");
      }
      // verify the required parameter 'volumeName' is set
      if (volumeName === undefined || volumeName === null) {
        throw new Error("Missing the required parameter 'volumeName' when calling volumeDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'volumeName': volumeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/{volumeName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the volumeGet operation.
     * @callback module:api/VolumesApi~volumeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VolumeResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the volume resource.
     * Gets the information about the volume resource with a given name. This information includes the volume description and other runtime information. 
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-07-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {String} volumeName The identity of the volume.
     * @param {module:api/VolumesApi~volumeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VolumeResourceDescription}
     */
    volumeGet(subscriptionId, apiVersion, resourceGroupName, volumeName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling volumeGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling volumeGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling volumeGet");
      }
      // verify the required parameter 'volumeName' is set
      if (volumeName === undefined || volumeName === null) {
        throw new Error("Missing the required parameter 'volumeName' when calling volumeGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'volumeName': volumeName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VolumeResourceDescription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/{volumeName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the volumeListByResourceGroup operation.
     * @callback module:api/VolumesApi~volumeListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VolumeResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the volume resources in a given resource group.
     * Gets the information about all volume resources in a given resource group. The information includes the volume description and other runtime information. 
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-07-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {module:api/VolumesApi~volumeListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VolumeResourceDescriptionList}
     */
    volumeListByResourceGroup(subscriptionId, apiVersion, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling volumeListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling volumeListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling volumeListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VolumeResourceDescriptionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the volumeListBySubscription operation.
     * @callback module:api/VolumesApi~volumeListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VolumeResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the volume resources in a given subscription.
     * Gets the information about all volume resources in a given subscription. The information includes the volume description and other runtime information. 
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-07-01-preview`.
     * @param {module:api/VolumesApi~volumeListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VolumeResourceDescriptionList}
     */
    volumeListBySubscription(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling volumeListBySubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling volumeListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VolumeResourceDescriptionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/volumes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
