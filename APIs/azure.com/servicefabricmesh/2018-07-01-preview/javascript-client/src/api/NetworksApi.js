/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-07-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorModel from '../model/ErrorModel';
import NetworkResourceDescription from '../model/NetworkResourceDescription';
import NetworkResourceDescriptionList from '../model/NetworkResourceDescriptionList';

/**
* Networks service.
* @module api/NetworksApi
* @version 2018-07-01-preview
*/
export default class NetworksApi {

    /**
    * Constructs a new NetworksApi. 
    * @alias module:api/NetworksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the networkCreate operation.
     * @callback module:api/NetworksApi~networkCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a network resource.
     * Creates a network resource with the specified name and description. If a network with the same name already exists, then its description is updated to the one indicated in this request.  Use network resources to create private network and configure public connectivity for services within your application.  
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-07-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {String} networkName The identity of the network.
     * @param {module:model/NetworkResourceDescription} networkResourceDescription Description for creating a network resource.
     * @param {module:api/NetworksApi~networkCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkResourceDescription}
     */
    networkCreate(subscriptionId, apiVersion, resourceGroupName, networkName, networkResourceDescription, callback) {
      let postBody = networkResourceDescription;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkCreate");
      }
      // verify the required parameter 'networkName' is set
      if (networkName === undefined || networkName === null) {
        throw new Error("Missing the required parameter 'networkName' when calling networkCreate");
      }
      // verify the required parameter 'networkResourceDescription' is set
      if (networkResourceDescription === undefined || networkResourceDescription === null) {
        throw new Error("Missing the required parameter 'networkResourceDescription' when calling networkCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'networkName': networkName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = NetworkResourceDescription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks/{networkName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkDelete operation.
     * @callback module:api/NetworksApi~networkDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the network resource.
     * Deletes the network resource identified by the name.
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-07-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {String} networkName The identity of the network.
     * @param {module:api/NetworksApi~networkDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    networkDelete(subscriptionId, apiVersion, resourceGroupName, networkName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkDelete");
      }
      // verify the required parameter 'networkName' is set
      if (networkName === undefined || networkName === null) {
        throw new Error("Missing the required parameter 'networkName' when calling networkDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'networkName': networkName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks/{networkName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkGet operation.
     * @callback module:api/NetworksApi~networkGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the network resource.
     * Gets the information about the network resource with a given name. This information includes the network description and other runtime information. 
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-07-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {String} networkName The identity of the network.
     * @param {module:api/NetworksApi~networkGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkResourceDescription}
     */
    networkGet(subscriptionId, apiVersion, resourceGroupName, networkName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkGet");
      }
      // verify the required parameter 'networkName' is set
      if (networkName === undefined || networkName === null) {
        throw new Error("Missing the required parameter 'networkName' when calling networkGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'networkName': networkName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NetworkResourceDescription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks/{networkName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkListByResourceGroup operation.
     * @callback module:api/NetworksApi~networkListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the network resources in a given resource group.
     * Gets the information about all network resources in a given resource group. The information includes the network description and other runtime properties. 
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-07-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {module:api/NetworksApi~networkListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkResourceDescriptionList}
     */
    networkListByResourceGroup(subscriptionId, apiVersion, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NetworkResourceDescriptionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkListBySubscription operation.
     * @callback module:api/NetworksApi~networkListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NetworkResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the network resources in a given subscription.
     * Gets the information about all network resources in a given subscription. The information includes the network description and other runtime properties.
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-07-01-preview`.
     * @param {module:api/NetworksApi~networkListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NetworkResourceDescriptionList}
     */
    networkListBySubscription(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkListBySubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NetworkResourceDescriptionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/networks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
