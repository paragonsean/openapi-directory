/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorModel from '../model/ErrorModel';
import ServiceResourceDescription from '../model/ServiceResourceDescription';
import ServiceResourceDescriptionList from '../model/ServiceResourceDescriptionList';

/**
* Services service.
* @module api/ServicesApi
* @version 2018-09-01-preview
*/
export default class ServicesApi {

    /**
    * Constructs a new ServicesApi. 
    * @alias module:api/ServicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the serviceGet operation.
     * @callback module:api/ServicesApi~serviceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the service resource with the given name.
     * Gets the information about the service resource with the given name. The information include the description and other properties of the service.
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-09-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {String} applicationResourceName The identity of the application.
     * @param {String} serviceResourceName The identity of the service.
     * @param {module:api/ServicesApi~serviceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceResourceDescription}
     */
    serviceGet(subscriptionId, apiVersion, resourceGroupName, applicationResourceName, serviceResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serviceGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serviceGet");
      }
      // verify the required parameter 'applicationResourceName' is set
      if (applicationResourceName === undefined || applicationResourceName === null) {
        throw new Error("Missing the required parameter 'applicationResourceName' when calling serviceGet");
      }
      // verify the required parameter 'serviceResourceName' is set
      if (serviceResourceName === undefined || serviceResourceName === null) {
        throw new Error("Missing the required parameter 'serviceResourceName' when calling serviceGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'applicationResourceName': applicationResourceName,
        'serviceResourceName': serviceResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceResourceDescription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the serviceList operation.
     * @callback module:api/ServicesApi~serviceListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the service resources.
     * Gets the information about all services of an application resource. The information include the description and other properties of the Service.
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-09-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {String} applicationResourceName The identity of the application.
     * @param {module:api/ServicesApi~serviceListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceResourceDescriptionList}
     */
    serviceList(subscriptionId, apiVersion, resourceGroupName, applicationResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling serviceList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling serviceList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling serviceList");
      }
      // verify the required parameter 'applicationResourceName' is set
      if (applicationResourceName === undefined || applicationResourceName === null) {
        throw new Error("Missing the required parameter 'applicationResourceName' when calling serviceList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'applicationResourceName': applicationResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceResourceDescriptionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
