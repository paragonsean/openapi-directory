/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorModel from '../model/ErrorModel';
import GatewayResourceDescription from '../model/GatewayResourceDescription';
import GatewayResourceDescriptionList from '../model/GatewayResourceDescriptionList';

/**
* Gateways service.
* @module api/GatewaysApi
* @version 2018-09-01-preview
*/
export default class GatewaysApi {

    /**
    * Constructs a new GatewaysApi. 
    * @alias module:api/GatewaysApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gatewayCreate operation.
     * @callback module:api/GatewaysApi~gatewayCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GatewayResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a gateway resource.
     * Creates a gateway resource with the specified name, description and properties. If a gateway resource with the same name exists, then it is updated with the specified description and properties. Use gateway resources to create a gateway for public connectivity for services within your application.
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-09-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {String} gatewayResourceName The identity of the gateway.
     * @param {module:model/GatewayResourceDescription} gatewayResourceDescription Description for creating a Gateway resource.
     * @param {module:api/GatewaysApi~gatewayCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GatewayResourceDescription}
     */
    gatewayCreate(subscriptionId, apiVersion, resourceGroupName, gatewayResourceName, gatewayResourceDescription, callback) {
      let postBody = gatewayResourceDescription;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling gatewayCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling gatewayCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling gatewayCreate");
      }
      // verify the required parameter 'gatewayResourceName' is set
      if (gatewayResourceName === undefined || gatewayResourceName === null) {
        throw new Error("Missing the required parameter 'gatewayResourceName' when calling gatewayCreate");
      }
      // verify the required parameter 'gatewayResourceDescription' is set
      if (gatewayResourceDescription === undefined || gatewayResourceDescription === null) {
        throw new Error("Missing the required parameter 'gatewayResourceDescription' when calling gatewayCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'gatewayResourceName': gatewayResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GatewayResourceDescription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways/{gatewayResourceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gatewayDelete operation.
     * @callback module:api/GatewaysApi~gatewayDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the gateway resource.
     * Deletes the gateway resource identified by the name.
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-09-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {String} gatewayResourceName The identity of the gateway.
     * @param {module:api/GatewaysApi~gatewayDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gatewayDelete(subscriptionId, apiVersion, resourceGroupName, gatewayResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling gatewayDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling gatewayDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling gatewayDelete");
      }
      // verify the required parameter 'gatewayResourceName' is set
      if (gatewayResourceName === undefined || gatewayResourceName === null) {
        throw new Error("Missing the required parameter 'gatewayResourceName' when calling gatewayDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'gatewayResourceName': gatewayResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways/{gatewayResourceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gatewayGet operation.
     * @callback module:api/GatewaysApi~gatewayGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GatewayResourceDescription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the gateway resource with the given name.
     * Gets the information about the gateway resource with the given name. The information include the description and other properties of the gateway.
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-09-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {String} gatewayResourceName The identity of the gateway.
     * @param {module:api/GatewaysApi~gatewayGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GatewayResourceDescription}
     */
    gatewayGet(subscriptionId, apiVersion, resourceGroupName, gatewayResourceName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling gatewayGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling gatewayGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling gatewayGet");
      }
      // verify the required parameter 'gatewayResourceName' is set
      if (gatewayResourceName === undefined || gatewayResourceName === null) {
        throw new Error("Missing the required parameter 'gatewayResourceName' when calling gatewayGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'gatewayResourceName': gatewayResourceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GatewayResourceDescription;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways/{gatewayResourceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gatewayListByResourceGroup operation.
     * @callback module:api/GatewaysApi~gatewayListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GatewayResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the gateway resources in a given resource group.
     * Gets the information about all gateway resources in a given resource group. The information include the description and other properties of the Gateway.
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-09-01-preview`.
     * @param {String} resourceGroupName Azure resource group name
     * @param {module:api/GatewaysApi~gatewayListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GatewayResourceDescriptionList}
     */
    gatewayListByResourceGroup(subscriptionId, apiVersion, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling gatewayListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling gatewayListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling gatewayListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GatewayResourceDescriptionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gatewayListBySubscription operation.
     * @callback module:api/GatewaysApi~gatewayListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GatewayResourceDescriptionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the gateway resources in a given subscription.
     * Gets the information about all gateway resources in a given resource group. The information include the description and other properties of the gateway.
     * @param {String} subscriptionId The customer subscription identifier
     * @param {module:model/String} apiVersion The version of the API. This parameter is required and its value must be `2018-09-01-preview`.
     * @param {module:api/GatewaysApi~gatewayListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GatewayResourceDescriptionList}
     */
    gatewayListBySubscription(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling gatewayListBySubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling gatewayListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GatewayResourceDescriptionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/gateways', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
