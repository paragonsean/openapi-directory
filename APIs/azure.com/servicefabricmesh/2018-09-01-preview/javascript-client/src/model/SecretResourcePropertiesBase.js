/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProvisionedResourceProperties from './ProvisionedResourceProperties';
import SecretKind from './SecretKind';

/**
 * The SecretResourcePropertiesBase model module.
 * @module model/SecretResourcePropertiesBase
 * @version 2018-09-01-preview
 */
class SecretResourcePropertiesBase {
    /**
     * Constructs a new <code>SecretResourcePropertiesBase</code>.
     * This type describes the properties of a secret resource, including its kind.
     * @alias module:model/SecretResourcePropertiesBase
     * @implements module:model/ProvisionedResourceProperties
     */
    constructor() { 
        ProvisionedResourceProperties.initialize(this);
        SecretResourcePropertiesBase.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = kind;
    }

    /**
     * Constructs a <code>SecretResourcePropertiesBase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecretResourcePropertiesBase} obj Optional instance to populate.
     * @return {module:model/SecretResourcePropertiesBase} The populated <code>SecretResourcePropertiesBase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecretResourcePropertiesBase();
            ProvisionedResourceProperties.constructFromObject(data, obj);

            if (data.hasOwnProperty('kind')) {
                obj['kind'] = SecretKind.constructFromObject(data['kind']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SecretResourcePropertiesBase</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SecretResourcePropertiesBase</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SecretResourcePropertiesBase.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}

SecretResourcePropertiesBase.RequiredProperties = ["kind"];

/**
 * @member {module:model/SecretKind} kind
 */
SecretResourcePropertiesBase.prototype['kind'] = undefined;

/**
 * State of the resource.
 * @member {String} provisioningState
 */
SecretResourcePropertiesBase.prototype['provisioningState'] = undefined;


// Implement ProvisionedResourceProperties interface:
/**
 * State of the resource.
 * @member {String} provisioningState
 */
ProvisionedResourceProperties.prototype['provisioningState'] = undefined;




export default SecretResourcePropertiesBase;

