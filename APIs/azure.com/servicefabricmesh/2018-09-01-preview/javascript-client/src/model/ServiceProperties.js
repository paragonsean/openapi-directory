/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoScalingPolicy from './AutoScalingPolicy';
import HealthState from './HealthState';
import ResourceStatus from './ResourceStatus';

/**
 * The ServiceProperties model module.
 * @module model/ServiceProperties
 * @version 2018-09-01-preview
 */
class ServiceProperties {
    /**
     * Constructs a new <code>ServiceProperties</code>.
     * Describes properties of a service resource.
     * @alias module:model/ServiceProperties
     */
    constructor() { 
        
        ServiceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceProperties} obj Optional instance to populate.
     * @return {module:model/ServiceProperties} The populated <code>ServiceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceProperties();

            if (data.hasOwnProperty('autoScalingPolicies')) {
                obj['autoScalingPolicies'] = ApiClient.convertToType(data['autoScalingPolicies'], [AutoScalingPolicy]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('healthState')) {
                obj['healthState'] = HealthState.constructFromObject(data['healthState']);
            }
            if (data.hasOwnProperty('replicaCount')) {
                obj['replicaCount'] = ApiClient.convertToType(data['replicaCount'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ResourceStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('statusDetails')) {
                obj['statusDetails'] = ApiClient.convertToType(data['statusDetails'], 'String');
            }
            if (data.hasOwnProperty('unhealthyEvaluation')) {
                obj['unhealthyEvaluation'] = ApiClient.convertToType(data['unhealthyEvaluation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceProperties</code>.
     */
    static validateJSON(data) {
        if (data['autoScalingPolicies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['autoScalingPolicies'])) {
                throw new Error("Expected the field `autoScalingPolicies` to be an array in the JSON data but got " + data['autoScalingPolicies']);
            }
            // validate the optional field `autoScalingPolicies` (array)
            for (const item of data['autoScalingPolicies']) {
                AutoScalingPolicy.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['statusDetails'] && !(typeof data['statusDetails'] === 'string' || data['statusDetails'] instanceof String)) {
            throw new Error("Expected the field `statusDetails` to be a primitive type in the JSON string but got " + data['statusDetails']);
        }
        // ensure the json data is a string
        if (data['unhealthyEvaluation'] && !(typeof data['unhealthyEvaluation'] === 'string' || data['unhealthyEvaluation'] instanceof String)) {
            throw new Error("Expected the field `unhealthyEvaluation` to be a primitive type in the JSON string but got " + data['unhealthyEvaluation']);
        }

        return true;
    }


}



/**
 * Auto scaling policies
 * @member {Array.<module:model/AutoScalingPolicy>} autoScalingPolicies
 */
ServiceProperties.prototype['autoScalingPolicies'] = undefined;

/**
 * User readable description of the service.
 * @member {String} description
 */
ServiceProperties.prototype['description'] = undefined;

/**
 * @member {module:model/HealthState} healthState
 */
ServiceProperties.prototype['healthState'] = undefined;

/**
 * The number of replicas of the service to create. Defaults to 1 if not specified.
 * @member {Number} replicaCount
 */
ServiceProperties.prototype['replicaCount'] = undefined;

/**
 * @member {module:model/ResourceStatus} status
 */
ServiceProperties.prototype['status'] = undefined;

/**
 * Gives additional information about the current status of the service.
 * @member {String} statusDetails
 */
ServiceProperties.prototype['statusDetails'] = undefined;

/**
 * When the service's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the service is marked unhealthy.
 * @member {String} unhealthyEvaluation
 */
ServiceProperties.prototype['unhealthyEvaluation'] = undefined;






export default ServiceProperties;

