/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResourceStatus from './ResourceStatus';
import VolumeProvider from './VolumeProvider';
import VolumeProviderParametersAzureFile from './VolumeProviderParametersAzureFile';

/**
 * The VolumeProperties model module.
 * @module model/VolumeProperties
 * @version 2018-09-01-preview
 */
class VolumeProperties {
    /**
     * Constructs a new <code>VolumeProperties</code>.
     * Describes properties of a volume resource.
     * @alias module:model/VolumeProperties
     * @param provider {module:model/VolumeProvider} 
     */
    constructor(provider) { 
        
        VolumeProperties.initialize(this, provider);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, provider) { 
        obj['provider'] = provider;
    }

    /**
     * Constructs a <code>VolumeProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VolumeProperties} obj Optional instance to populate.
     * @return {module:model/VolumeProperties} The populated <code>VolumeProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VolumeProperties();

            if (data.hasOwnProperty('azureFileParameters')) {
                obj['azureFileParameters'] = VolumeProviderParametersAzureFile.constructFromObject(data['azureFileParameters']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = VolumeProvider.constructFromObject(data['provider']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ResourceStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('statusDetails')) {
                obj['statusDetails'] = ApiClient.convertToType(data['statusDetails'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VolumeProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VolumeProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VolumeProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `azureFileParameters`
        if (data['azureFileParameters']) { // data not null
          VolumeProviderParametersAzureFile.validateJSON(data['azureFileParameters']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['statusDetails'] && !(typeof data['statusDetails'] === 'string' || data['statusDetails'] instanceof String)) {
            throw new Error("Expected the field `statusDetails` to be a primitive type in the JSON string but got " + data['statusDetails']);
        }

        return true;
    }


}

VolumeProperties.RequiredProperties = ["provider"];

/**
 * @member {module:model/VolumeProviderParametersAzureFile} azureFileParameters
 */
VolumeProperties.prototype['azureFileParameters'] = undefined;

/**
 * User readable description of the volume.
 * @member {String} description
 */
VolumeProperties.prototype['description'] = undefined;

/**
 * @member {module:model/VolumeProvider} provider
 */
VolumeProperties.prototype['provider'] = undefined;

/**
 * @member {module:model/ResourceStatus} status
 */
VolumeProperties.prototype['status'] = undefined;

/**
 * Gives additional information about the current status of the volume.
 * @member {String} statusDetails
 */
VolumeProperties.prototype['statusDetails'] = undefined;






export default VolumeProperties;

