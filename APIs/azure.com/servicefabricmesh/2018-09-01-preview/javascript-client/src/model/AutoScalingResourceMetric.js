/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoScalingMetric from './AutoScalingMetric';
import AutoScalingMetricKind from './AutoScalingMetricKind';
import AutoScalingResourceMetricName from './AutoScalingResourceMetricName';

/**
 * The AutoScalingResourceMetric model module.
 * @module model/AutoScalingResourceMetric
 * @version 2018-09-01-preview
 */
class AutoScalingResourceMetric {
    /**
     * Constructs a new <code>AutoScalingResourceMetric</code>.
     * Describes the resource that is used for triggering auto scaling.
     * @alias module:model/AutoScalingResourceMetric
     * @extends module:model/AutoScalingMetric
     * @implements module:model/AutoScalingMetric
     * @param kind {module:model/AutoScalingMetricKind} 
     */
    constructor(kind) { 
        AutoScalingMetric.initialize(this, kind);
        AutoScalingResourceMetric.initialize(this, kind);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>AutoScalingResourceMetric</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoScalingResourceMetric} obj Optional instance to populate.
     * @return {module:model/AutoScalingResourceMetric} The populated <code>AutoScalingResourceMetric</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoScalingResourceMetric();
            AutoScalingMetric.constructFromObject(data, obj);
            AutoScalingMetric.constructFromObject(data, obj);

            if (data.hasOwnProperty('name')) {
                obj['name'] = AutoScalingResourceMetricName.constructFromObject(data['name']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoScalingResourceMetric</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoScalingResourceMetric</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AutoScalingResourceMetric.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

AutoScalingResourceMetric.RequiredProperties = ["name", "kind"];

/**
 * @member {module:model/AutoScalingResourceMetricName} name
 */
AutoScalingResourceMetric.prototype['name'] = undefined;


// Implement AutoScalingMetric interface:
/**
 * @member {module:model/AutoScalingMetricKind} kind
 */
AutoScalingMetric.prototype['kind'] = undefined;




export default AutoScalingResourceMetric;

