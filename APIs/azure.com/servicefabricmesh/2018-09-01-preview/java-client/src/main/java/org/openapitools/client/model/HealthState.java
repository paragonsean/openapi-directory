/*
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.
 */
@JsonAdapter(HealthState.Adapter.class)
public enum HealthState {
  
  INVALID("Invalid"),
  
  OK("Ok"),
  
  WARNING("Warning"),
  
  ERROR("Error"),
  
  UNKNOWN("Unknown");

  private String value;

  HealthState(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static HealthState fromValue(String value) {
    for (HealthState b : HealthState.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<HealthState> {
    @Override
    public void write(final JsonWriter jsonWriter, final HealthState enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public HealthState read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return HealthState.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    HealthState.fromValue(value);
  }
}

