/*
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorModel;
import org.openapitools.client.model.NetworkResourceDescription;
import org.openapitools.client.model.NetworkResourceDescriptionList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NetworksApi
 */
@Disabled
public class NetworksApiTest {

    private final NetworksApi api = new NetworksApi();

    /**
     * Creates or updates a network resource.
     *
     * Creates a network resource with the specified name, description and properties. If a network resource with the same name exists, then it is updated with the specified description and properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkCreateTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String networkResourceName = null;
        NetworkResourceDescription networkResourceDescription = null;
        NetworkResourceDescription response = api.networkCreate(subscriptionId, apiVersion, resourceGroupName, networkResourceName, networkResourceDescription);
        // TODO: test validations
    }

    /**
     * Deletes the network resource.
     *
     * Deletes the network resource identified by the name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkDeleteTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String networkResourceName = null;
        api.networkDelete(subscriptionId, apiVersion, resourceGroupName, networkResourceName);
        // TODO: test validations
    }

    /**
     * Gets the network resource with the given name.
     *
     * Gets the information about the network resource with the given name. The information include the description and other properties of the network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkGetTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String networkResourceName = null;
        NetworkResourceDescription response = api.networkGet(subscriptionId, apiVersion, resourceGroupName, networkResourceName);
        // TODO: test validations
    }

    /**
     * Gets all the network resources in a given resource group.
     *
     * Gets the information about all network resources in a given resource group. The information include the description and other properties of the Network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        NetworkResourceDescriptionList response = api.networkListByResourceGroup(subscriptionId, apiVersion, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Gets all the network resources in a given subscription.
     *
     * Gets the information about all network resources in a given resource group. The information include the description and other properties of the network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        NetworkResourceDescriptionList response = api.networkListBySubscription(subscriptionId, apiVersion);
        // TODO: test validations
    }

}
