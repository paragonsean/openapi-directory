/*
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorModel;
import org.openapitools.client.model.VolumeResourceDescription;
import org.openapitools.client.model.VolumeResourceDescriptionList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VolumesApi
 */
@Disabled
public class VolumesApiTest {

    private final VolumesApi api = new VolumesApi();

    /**
     * Creates or updates a volume resource.
     *
     * Creates a volume resource with the specified name, description and properties. If a volume resource with the same name exists, then it is updated with the specified description and properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumeCreateTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String volumeResourceName = null;
        VolumeResourceDescription volumeResourceDescription = null;
        VolumeResourceDescription response = api.volumeCreate(subscriptionId, apiVersion, resourceGroupName, volumeResourceName, volumeResourceDescription);
        // TODO: test validations
    }

    /**
     * Deletes the volume resource.
     *
     * Deletes the volume resource identified by the name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumeDeleteTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String volumeResourceName = null;
        api.volumeDelete(subscriptionId, apiVersion, resourceGroupName, volumeResourceName);
        // TODO: test validations
    }

    /**
     * Gets the volume resource with the given name.
     *
     * Gets the information about the volume resource with the given name. The information include the description and other properties of the volume.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumeGetTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String volumeResourceName = null;
        VolumeResourceDescription response = api.volumeGet(subscriptionId, apiVersion, resourceGroupName, volumeResourceName);
        // TODO: test validations
    }

    /**
     * Gets all the volume resources in a given resource group.
     *
     * Gets the information about all volume resources in a given resource group. The information include the description and other properties of the Volume.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumeListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        VolumeResourceDescriptionList response = api.volumeListByResourceGroup(subscriptionId, apiVersion, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Gets all the volume resources in a given subscription.
     *
     * Gets the information about all volume resources in a given resource group. The information include the description and other properties of the volume.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumeListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        VolumeResourceDescriptionList response = api.volumeListBySubscription(subscriptionId, apiVersion);
        // TODO: test validations
    }

}
