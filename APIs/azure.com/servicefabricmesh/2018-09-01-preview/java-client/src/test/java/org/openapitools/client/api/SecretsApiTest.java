/*
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorModel;
import org.openapitools.client.model.SecretResourceDescription;
import org.openapitools.client.model.SecretResourceDescriptionList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SecretsApi
 */
@Disabled
public class SecretsApiTest {

    private final SecretsApi api = new SecretsApi();

    /**
     * Creates or updates a secret resource.
     *
     * Creates a secret resource with the specified name, description and properties. If a secret resource with the same name exists, then it is updated with the specified description and properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secretCreateTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String secretResourceName = null;
        SecretResourceDescription secretResourceDescription = null;
        SecretResourceDescription response = api.secretCreate(subscriptionId, apiVersion, resourceGroupName, secretResourceName, secretResourceDescription);
        // TODO: test validations
    }

    /**
     * Deletes the secret resource.
     *
     * Deletes the secret resource identified by the name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secretDeleteTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String secretResourceName = null;
        api.secretDelete(subscriptionId, apiVersion, resourceGroupName, secretResourceName);
        // TODO: test validations
    }

    /**
     * Gets the secret resource with the given name.
     *
     * Gets the information about the secret resource with the given name. The information include the description and other properties of the secret.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secretGetTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String secretResourceName = null;
        SecretResourceDescription response = api.secretGet(subscriptionId, apiVersion, resourceGroupName, secretResourceName);
        // TODO: test validations
    }

    /**
     * Gets all the secret resources in a given resource group.
     *
     * Gets the information about all secret resources in a given resource group. The information include the description and other properties of the Secret.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secretListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        SecretResourceDescriptionList response = api.secretListByResourceGroup(subscriptionId, apiVersion, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Gets all the secret resources in a given subscription.
     *
     * Gets the information about all secret resources in a given resource group. The information include the description and other properties of the secret.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void secretListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        SecretResourceDescriptionList response = api.secretListBySubscription(subscriptionId, apiVersion);
        // TODO: test validations
    }

}
