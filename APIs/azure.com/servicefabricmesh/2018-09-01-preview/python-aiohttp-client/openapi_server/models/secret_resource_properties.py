# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_status import ResourceStatus
from openapi_server.models.secret_kind import SecretKind
from openapi_server import util


class SecretResourceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_type: str=None, description: str=None, status: ResourceStatus=None, status_details: str=None, kind: SecretKind=None, provisioning_state: str=None):
        """SecretResourceProperties - a model defined in OpenAPI

        :param content_type: The content_type of this SecretResourceProperties.
        :param description: The description of this SecretResourceProperties.
        :param status: The status of this SecretResourceProperties.
        :param status_details: The status_details of this SecretResourceProperties.
        :param kind: The kind of this SecretResourceProperties.
        :param provisioning_state: The provisioning_state of this SecretResourceProperties.
        """
        self.openapi_types = {
            'content_type': str,
            'description': str,
            'status': ResourceStatus,
            'status_details': str,
            'kind': SecretKind,
            'provisioning_state': str
        }

        self.attribute_map = {
            'content_type': 'contentType',
            'description': 'description',
            'status': 'status',
            'status_details': 'statusDetails',
            'kind': 'kind',
            'provisioning_state': 'provisioningState'
        }

        self._content_type = content_type
        self._description = description
        self._status = status
        self._status_details = status_details
        self._kind = kind
        self._provisioning_state = provisioning_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecretResourceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecretResourceProperties of this SecretResourceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_type(self):
        """Gets the content_type of this SecretResourceProperties.

        The type of the content stored in the secret value. The value of this property is opaque to Service Fabric. Once set, the value of this property cannot be changed.

        :return: The content_type of this SecretResourceProperties.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this SecretResourceProperties.

        The type of the content stored in the secret value. The value of this property is opaque to Service Fabric. Once set, the value of this property cannot be changed.

        :param content_type: The content_type of this SecretResourceProperties.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def description(self):
        """Gets the description of this SecretResourceProperties.

        User readable description of the secret.

        :return: The description of this SecretResourceProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SecretResourceProperties.

        User readable description of the secret.

        :param description: The description of this SecretResourceProperties.
        :type description: str
        """

        self._description = description

    @property
    def status(self):
        """Gets the status of this SecretResourceProperties.


        :return: The status of this SecretResourceProperties.
        :rtype: ResourceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SecretResourceProperties.


        :param status: The status of this SecretResourceProperties.
        :type status: ResourceStatus
        """

        self._status = status

    @property
    def status_details(self):
        """Gets the status_details of this SecretResourceProperties.

        Gives additional information about the current status of the secret.

        :return: The status_details of this SecretResourceProperties.
        :rtype: str
        """
        return self._status_details

    @status_details.setter
    def status_details(self, status_details):
        """Sets the status_details of this SecretResourceProperties.

        Gives additional information about the current status of the secret.

        :param status_details: The status_details of this SecretResourceProperties.
        :type status_details: str
        """

        self._status_details = status_details

    @property
    def kind(self):
        """Gets the kind of this SecretResourceProperties.


        :return: The kind of this SecretResourceProperties.
        :rtype: SecretKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this SecretResourceProperties.


        :param kind: The kind of this SecretResourceProperties.
        :type kind: SecretKind
        """
        if kind is None:
            raise ValueError("Invalid value for `kind`, must not be `None`")

        self._kind = kind

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this SecretResourceProperties.

        State of the resource.

        :return: The provisioning_state of this SecretResourceProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this SecretResourceProperties.

        State of the resource.

        :param provisioning_state: The provisioning_state of this SecretResourceProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state
