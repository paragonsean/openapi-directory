# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.diagnostics_description import DiagnosticsDescription
from openapi_server.models.health_state import HealthState
from openapi_server.models.resource_status import ResourceStatus
from openapi_server.models.service_resource_description import ServiceResourceDescription
from openapi_server import util


class ApplicationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, debug_params: str=None, description: str=None, diagnostics: DiagnosticsDescription=None, health_state: HealthState=None, service_names: List[str]=None, services: List[ServiceResourceDescription]=None, status: ResourceStatus=None, status_details: str=None, unhealthy_evaluation: str=None):
        """ApplicationProperties - a model defined in OpenAPI

        :param debug_params: The debug_params of this ApplicationProperties.
        :param description: The description of this ApplicationProperties.
        :param diagnostics: The diagnostics of this ApplicationProperties.
        :param health_state: The health_state of this ApplicationProperties.
        :param service_names: The service_names of this ApplicationProperties.
        :param services: The services of this ApplicationProperties.
        :param status: The status of this ApplicationProperties.
        :param status_details: The status_details of this ApplicationProperties.
        :param unhealthy_evaluation: The unhealthy_evaluation of this ApplicationProperties.
        """
        self.openapi_types = {
            'debug_params': str,
            'description': str,
            'diagnostics': DiagnosticsDescription,
            'health_state': HealthState,
            'service_names': List[str],
            'services': List[ServiceResourceDescription],
            'status': ResourceStatus,
            'status_details': str,
            'unhealthy_evaluation': str
        }

        self.attribute_map = {
            'debug_params': 'debugParams',
            'description': 'description',
            'diagnostics': 'diagnostics',
            'health_state': 'healthState',
            'service_names': 'serviceNames',
            'services': 'services',
            'status': 'status',
            'status_details': 'statusDetails',
            'unhealthy_evaluation': 'unhealthyEvaluation'
        }

        self._debug_params = debug_params
        self._description = description
        self._diagnostics = diagnostics
        self._health_state = health_state
        self._service_names = service_names
        self._services = services
        self._status = status
        self._status_details = status_details
        self._unhealthy_evaluation = unhealthy_evaluation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationProperties of this ApplicationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def debug_params(self):
        """Gets the debug_params of this ApplicationProperties.

        Internal - used by Visual Studio to setup the debugging session on the local development environment.

        :return: The debug_params of this ApplicationProperties.
        :rtype: str
        """
        return self._debug_params

    @debug_params.setter
    def debug_params(self, debug_params):
        """Sets the debug_params of this ApplicationProperties.

        Internal - used by Visual Studio to setup the debugging session on the local development environment.

        :param debug_params: The debug_params of this ApplicationProperties.
        :type debug_params: str
        """

        self._debug_params = debug_params

    @property
    def description(self):
        """Gets the description of this ApplicationProperties.

        User readable description of the application.

        :return: The description of this ApplicationProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApplicationProperties.

        User readable description of the application.

        :param description: The description of this ApplicationProperties.
        :type description: str
        """

        self._description = description

    @property
    def diagnostics(self):
        """Gets the diagnostics of this ApplicationProperties.


        :return: The diagnostics of this ApplicationProperties.
        :rtype: DiagnosticsDescription
        """
        return self._diagnostics

    @diagnostics.setter
    def diagnostics(self, diagnostics):
        """Sets the diagnostics of this ApplicationProperties.


        :param diagnostics: The diagnostics of this ApplicationProperties.
        :type diagnostics: DiagnosticsDescription
        """

        self._diagnostics = diagnostics

    @property
    def health_state(self):
        """Gets the health_state of this ApplicationProperties.


        :return: The health_state of this ApplicationProperties.
        :rtype: HealthState
        """
        return self._health_state

    @health_state.setter
    def health_state(self, health_state):
        """Sets the health_state of this ApplicationProperties.


        :param health_state: The health_state of this ApplicationProperties.
        :type health_state: HealthState
        """

        self._health_state = health_state

    @property
    def service_names(self):
        """Gets the service_names of this ApplicationProperties.

        Names of the services in the application.

        :return: The service_names of this ApplicationProperties.
        :rtype: List[str]
        """
        return self._service_names

    @service_names.setter
    def service_names(self, service_names):
        """Sets the service_names of this ApplicationProperties.

        Names of the services in the application.

        :param service_names: The service_names of this ApplicationProperties.
        :type service_names: List[str]
        """

        self._service_names = service_names

    @property
    def services(self):
        """Gets the services of this ApplicationProperties.

        Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.

        :return: The services of this ApplicationProperties.
        :rtype: List[ServiceResourceDescription]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this ApplicationProperties.

        Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.

        :param services: The services of this ApplicationProperties.
        :type services: List[ServiceResourceDescription]
        """

        self._services = services

    @property
    def status(self):
        """Gets the status of this ApplicationProperties.


        :return: The status of this ApplicationProperties.
        :rtype: ResourceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApplicationProperties.


        :param status: The status of this ApplicationProperties.
        :type status: ResourceStatus
        """

        self._status = status

    @property
    def status_details(self):
        """Gets the status_details of this ApplicationProperties.

        Gives additional information about the current status of the application.

        :return: The status_details of this ApplicationProperties.
        :rtype: str
        """
        return self._status_details

    @status_details.setter
    def status_details(self, status_details):
        """Sets the status_details of this ApplicationProperties.

        Gives additional information about the current status of the application.

        :param status_details: The status_details of this ApplicationProperties.
        :type status_details: str
        """

        self._status_details = status_details

    @property
    def unhealthy_evaluation(self):
        """Gets the unhealthy_evaluation of this ApplicationProperties.

        When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the application is marked unhealthy.

        :return: The unhealthy_evaluation of this ApplicationProperties.
        :rtype: str
        """
        return self._unhealthy_evaluation

    @unhealthy_evaluation.setter
    def unhealthy_evaluation(self, unhealthy_evaluation):
        """Sets the unhealthy_evaluation of this ApplicationProperties.

        When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the application is marked unhealthy.

        :param unhealthy_evaluation: The unhealthy_evaluation of this ApplicationProperties.
        :type unhealthy_evaluation: str
        """

        self._unhealthy_evaluation = unhealthy_evaluation
