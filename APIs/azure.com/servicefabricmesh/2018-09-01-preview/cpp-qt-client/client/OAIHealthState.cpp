/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHealthState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHealthState::OAIHealthState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHealthState::OAIHealthState() {
    this->initializeModel();
}

OAIHealthState::~OAIHealthState() {}

void OAIHealthState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIHealthState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIHealthState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Invalid", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHealthState::INVALID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Ok", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHealthState::OK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Warning", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHealthState::WARNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Error", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHealthState::ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Unknown", Qt::CaseInsensitive) == 0) {
        m_value = eOAIHealthState::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIHealthState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIHealthState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIHealthState::INVALID:
            val = "Invalid";
            break;
        case eOAIHealthState::OK:
            val = "Ok";
            break;
        case eOAIHealthState::WARNING:
            val = "Warning";
            break;
        case eOAIHealthState::ERROR:
            val = "Error";
            break;
        case eOAIHealthState::UNKNOWN:
            val = "Unknown";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIHealthState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIHealthState::eOAIHealthState OAIHealthState::getValue() const {
    return m_value;
}

void OAIHealthState::setValue(const OAIHealthState::eOAIHealthState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIHealthState::isSet() const {
    
    return m_value_isSet;
}

bool OAIHealthState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
