/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddRemoveReplicaScalingMechanism.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddRemoveReplicaScalingMechanism::OAIAddRemoveReplicaScalingMechanism(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddRemoveReplicaScalingMechanism::OAIAddRemoveReplicaScalingMechanism() {
    this->initializeModel();
}

OAIAddRemoveReplicaScalingMechanism::~OAIAddRemoveReplicaScalingMechanism() {}

void OAIAddRemoveReplicaScalingMechanism::initializeModel() {

    m_max_count_isSet = false;
    m_max_count_isValid = false;

    m_min_count_isSet = false;
    m_min_count_isValid = false;

    m_scale_increment_isSet = false;
    m_scale_increment_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;
}

void OAIAddRemoveReplicaScalingMechanism::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddRemoveReplicaScalingMechanism::fromJsonObject(QJsonObject json) {

    m_max_count_isValid = ::OpenAPI::fromJsonValue(m_max_count, json[QString("maxCount")]);
    m_max_count_isSet = !json[QString("maxCount")].isNull() && m_max_count_isValid;

    m_min_count_isValid = ::OpenAPI::fromJsonValue(m_min_count, json[QString("minCount")]);
    m_min_count_isSet = !json[QString("minCount")].isNull() && m_min_count_isValid;

    m_scale_increment_isValid = ::OpenAPI::fromJsonValue(m_scale_increment, json[QString("scaleIncrement")]);
    m_scale_increment_isSet = !json[QString("scaleIncrement")].isNull() && m_scale_increment_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;
}

QString OAIAddRemoveReplicaScalingMechanism::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddRemoveReplicaScalingMechanism::asJsonObject() const {
    QJsonObject obj;
    if (m_max_count_isSet) {
        obj.insert(QString("maxCount"), ::OpenAPI::toJsonValue(m_max_count));
    }
    if (m_min_count_isSet) {
        obj.insert(QString("minCount"), ::OpenAPI::toJsonValue(m_min_count));
    }
    if (m_scale_increment_isSet) {
        obj.insert(QString("scaleIncrement"), ::OpenAPI::toJsonValue(m_scale_increment));
    }
    if (m_kind.isSet()) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    return obj;
}

qint32 OAIAddRemoveReplicaScalingMechanism::getMaxCount() const {
    return m_max_count;
}
void OAIAddRemoveReplicaScalingMechanism::setMaxCount(const qint32 &max_count) {
    m_max_count = max_count;
    m_max_count_isSet = true;
}

bool OAIAddRemoveReplicaScalingMechanism::is_max_count_Set() const{
    return m_max_count_isSet;
}

bool OAIAddRemoveReplicaScalingMechanism::is_max_count_Valid() const{
    return m_max_count_isValid;
}

qint32 OAIAddRemoveReplicaScalingMechanism::getMinCount() const {
    return m_min_count;
}
void OAIAddRemoveReplicaScalingMechanism::setMinCount(const qint32 &min_count) {
    m_min_count = min_count;
    m_min_count_isSet = true;
}

bool OAIAddRemoveReplicaScalingMechanism::is_min_count_Set() const{
    return m_min_count_isSet;
}

bool OAIAddRemoveReplicaScalingMechanism::is_min_count_Valid() const{
    return m_min_count_isValid;
}

qint32 OAIAddRemoveReplicaScalingMechanism::getScaleIncrement() const {
    return m_scale_increment;
}
void OAIAddRemoveReplicaScalingMechanism::setScaleIncrement(const qint32 &scale_increment) {
    m_scale_increment = scale_increment;
    m_scale_increment_isSet = true;
}

bool OAIAddRemoveReplicaScalingMechanism::is_scale_increment_Set() const{
    return m_scale_increment_isSet;
}

bool OAIAddRemoveReplicaScalingMechanism::is_scale_increment_Valid() const{
    return m_scale_increment_isValid;
}

OAIAutoScalingMechanismKind OAIAddRemoveReplicaScalingMechanism::getKind() const {
    return m_kind;
}
void OAIAddRemoveReplicaScalingMechanism::setKind(const OAIAutoScalingMechanismKind &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIAddRemoveReplicaScalingMechanism::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIAddRemoveReplicaScalingMechanism::is_kind_Valid() const{
    return m_kind_isValid;
}

bool OAIAddRemoveReplicaScalingMechanism::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scale_increment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddRemoveReplicaScalingMechanism::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_max_count_isValid && m_min_count_isValid && m_scale_increment_isValid && m_kind_isValid && true;
}

} // namespace OpenAPI
