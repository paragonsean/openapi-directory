/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationProperties.h
 *
 * Describes properties of a application resource.
 */

#ifndef OAIApplicationProperties_H
#define OAIApplicationProperties_H

#include <QJsonObject>

#include "OAIDiagnosticsDescription.h"
#include "OAIHealthState.h"
#include "OAIResourceStatus.h"
#include "OAIServiceResourceDescription.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiagnosticsDescription;
class OAIServiceResourceDescription;

class OAIApplicationProperties : public OAIObject {
public:
    OAIApplicationProperties();
    OAIApplicationProperties(QString json);
    ~OAIApplicationProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDebugParams() const;
    void setDebugParams(const QString &debug_params);
    bool is_debug_params_Set() const;
    bool is_debug_params_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIDiagnosticsDescription getDiagnostics() const;
    void setDiagnostics(const OAIDiagnosticsDescription &diagnostics);
    bool is_diagnostics_Set() const;
    bool is_diagnostics_Valid() const;

    OAIHealthState getHealthState() const;
    void setHealthState(const OAIHealthState &health_state);
    bool is_health_state_Set() const;
    bool is_health_state_Valid() const;

    QList<QString> getServiceNames() const;
    void setServiceNames(const QList<QString> &service_names);
    bool is_service_names_Set() const;
    bool is_service_names_Valid() const;

    QList<OAIServiceResourceDescription> getServices() const;
    void setServices(const QList<OAIServiceResourceDescription> &services);
    bool is_services_Set() const;
    bool is_services_Valid() const;

    OAIResourceStatus getStatus() const;
    void setStatus(const OAIResourceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusDetails() const;
    void setStatusDetails(const QString &status_details);
    bool is_status_details_Set() const;
    bool is_status_details_Valid() const;

    QString getUnhealthyEvaluation() const;
    void setUnhealthyEvaluation(const QString &unhealthy_evaluation);
    bool is_unhealthy_evaluation_Set() const;
    bool is_unhealthy_evaluation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_debug_params;
    bool m_debug_params_isSet;
    bool m_debug_params_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIDiagnosticsDescription m_diagnostics;
    bool m_diagnostics_isSet;
    bool m_diagnostics_isValid;

    OAIHealthState m_health_state;
    bool m_health_state_isSet;
    bool m_health_state_isValid;

    QList<QString> m_service_names;
    bool m_service_names_isSet;
    bool m_service_names_isValid;

    QList<OAIServiceResourceDescription> m_services;
    bool m_services_isSet;
    bool m_services_isValid;

    OAIResourceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_details;
    bool m_status_details_isSet;
    bool m_status_details_isValid;

    QString m_unhealthy_evaluation;
    bool m_unhealthy_evaluation_isSet;
    bool m_unhealthy_evaluation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationProperties)

#endif // OAIApplicationProperties_H
