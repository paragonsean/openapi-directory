/**
 * SeaBreezeManagementClient
 * APIs to deploy and manage resources to SeaBreeze.
 *
 * The version of the OpenAPI document: 2018-09-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGatewayResourceProperties.h
 *
 * This type describes properties of a gateway resource.
 */

#ifndef OAIGatewayResourceProperties_H
#define OAIGatewayResourceProperties_H

#include <QJsonObject>

#include "OAIHttpConfig.h"
#include "OAINetworkRef.h"
#include "OAIResourceStatus.h"
#include "OAITcpConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINetworkRef;
class OAIHttpConfig;
class OAITcpConfig;

class OAIGatewayResourceProperties : public OAIObject {
public:
    OAIGatewayResourceProperties();
    OAIGatewayResourceProperties(QString json);
    ~OAIGatewayResourceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAINetworkRef getDestinationNetwork() const;
    void setDestinationNetwork(const OAINetworkRef &destination_network);
    bool is_destination_network_Set() const;
    bool is_destination_network_Valid() const;

    QList<OAIHttpConfig> getHttp() const;
    void setHttp(const QList<OAIHttpConfig> &http);
    bool is_http_Set() const;
    bool is_http_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    OAINetworkRef getSourceNetwork() const;
    void setSourceNetwork(const OAINetworkRef &source_network);
    bool is_source_network_Set() const;
    bool is_source_network_Valid() const;

    OAIResourceStatus getStatus() const;
    void setStatus(const OAIResourceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusDetails() const;
    void setStatusDetails(const QString &status_details);
    bool is_status_details_Set() const;
    bool is_status_details_Valid() const;

    QList<OAITcpConfig> getTcp() const;
    void setTcp(const QList<OAITcpConfig> &tcp);
    bool is_tcp_Set() const;
    bool is_tcp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAINetworkRef m_destination_network;
    bool m_destination_network_isSet;
    bool m_destination_network_isValid;

    QList<OAIHttpConfig> m_http;
    bool m_http_isSet;
    bool m_http_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    OAINetworkRef m_source_network;
    bool m_source_network_isSet;
    bool m_source_network_isValid;

    OAIResourceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_details;
    bool m_status_details_isSet;
    bool m_status_details_isValid;

    QList<OAITcpConfig> m_tcp;
    bool m_tcp_isSet;
    bool m_tcp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGatewayResourceProperties)

#endif // OAIGatewayResourceProperties_H
