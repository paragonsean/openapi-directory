/*
 * Content Moderator Client
 * You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.    When using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB.   Text can be at most 1024 characters long.   If the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIError;
import org.openapitools.client.model.ImageList;
import org.openapitools.client.model.ListManagementImageListsCreateRequest;
import org.openapitools.client.model.RefreshIndex;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ListManagementImageListsApi
 */
@Disabled
public class ListManagementImageListsApiTest {

    private final ListManagementImageListsApi api = new ListManagementImageListsApi();

    /**
     * Creates an image list.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listManagementImageListsCreateTest() throws ApiException {
        String contentType = null;
        ListManagementImageListsCreateRequest body = null;
        ImageList response = api.listManagementImageListsCreate(contentType, body);
        // TODO: test validations
    }

    /**
     * Deletes image list with the list Id equal to list Id passed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listManagementImageListsDeleteTest() throws ApiException {
        String listId = null;
        String response = api.listManagementImageListsDelete(listId);
        // TODO: test validations
    }

    /**
     * Gets all the Image Lists.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listManagementImageListsGetAllImageListsTest() throws ApiException {
        List<ImageList> response = api.listManagementImageListsGetAllImageLists();
        // TODO: test validations
    }

    /**
     * Returns the details of the image list with list Id equal to list Id passed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listManagementImageListsGetDetailsTest() throws ApiException {
        String listId = null;
        ImageList response = api.listManagementImageListsGetDetails(listId);
        // TODO: test validations
    }

    /**
     * Refreshes the index of the list with list Id equal to list Id passed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listManagementImageListsRefreshIndexTest() throws ApiException {
        String listId = null;
        RefreshIndex response = api.listManagementImageListsRefreshIndex(listId);
        // TODO: test validations
    }

    /**
     * Updates an image list with list Id equal to list Id passed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listManagementImageListsUpdateTest() throws ApiException {
        String listId = null;
        String contentType = null;
        ListManagementImageListsCreateRequest body = null;
        ImageList response = api.listManagementImageListsUpdate(listId, contentType, body);
        // TODO: test validations
    }

}
