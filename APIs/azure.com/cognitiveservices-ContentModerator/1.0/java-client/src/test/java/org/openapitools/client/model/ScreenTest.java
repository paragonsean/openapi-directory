/*
 * Content Moderator Client
 * You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.    When using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB.   Text can be at most 1024 characters long.   If the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Classification;
import org.openapitools.client.model.DetectedTerms;
import org.openapitools.client.model.PII;
import org.openapitools.client.model.Status;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Screen
 */
public class ScreenTest {
    private final Screen model = new Screen();

    /**
     * Model tests for Screen
     */
    @Test
    public void testScreen() {
        // TODO: test Screen
    }

    /**
     * Test the property 'autoCorrectedText'
     */
    @Test
    public void autoCorrectedTextTest() {
        // TODO: test autoCorrectedText
    }

    /**
     * Test the property 'classification'
     */
    @Test
    public void classificationTest() {
        // TODO: test classification
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'misrepresentation'
     */
    @Test
    public void misrepresentationTest() {
        // TODO: test misrepresentation
    }

    /**
     * Test the property 'normalizedText'
     */
    @Test
    public void normalizedTextTest() {
        // TODO: test normalizedText
    }

    /**
     * Test the property 'originalText'
     */
    @Test
    public void originalTextTest() {
        // TODO: test originalText
    }

    /**
     * Test the property 'pii'
     */
    @Test
    public void piiTest() {
        // TODO: test pii
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'terms'
     */
    @Test
    public void termsTest() {
        // TODO: test terms
    }

    /**
     * Test the property 'trackingId'
     */
    @Test
    public void trackingIdTest() {
        // TODO: test trackingId
    }

}
