/*
 * Content Moderator Client
 * You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.    When using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB.   Text can be at most 1024 characters long.   If the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIError;
import org.openapitools.client.model.DetectedLanguage;
import org.openapitools.client.model.Screen;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TextModerationApi
 */
@Disabled
public class TextModerationApiTest {

    private final TextModerationApi api = new TextModerationApi();

    /**
     * This operation will detect the language of given input content. Returns the &lt;a href&#x3D;\&quot;http://www-01.sil.org/iso639-3/codes.asp\&quot;&gt;ISO 639-3 code&lt;/a&gt; for the predominant language comprising the submitted text. Over 110 languages supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void textModerationDetectLanguageTest() throws ApiException {
        String contentType = null;
        Object textContent = null;
        DetectedLanguage response = api.textModerationDetectLanguage(contentType, textContent);
        // TODO: test validations
    }

    /**
     * Detect profanity and match against custom and shared blacklists
     *
     * Detects profanity in more than 100 languages and match against custom and shared blacklists.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void textModerationScreenTextTest() throws ApiException {
        String contentType = null;
        Object textContent = null;
        String language = null;
        Boolean autocorrect = null;
        Boolean PII = null;
        String listId = null;
        Boolean classify = null;
        Screen response = api.textModerationScreenText(contentType, textContent, language, autocorrect, PII, listId, classify);
        // TODO: test validations
    }

}
