openapi: 3.0.1
info:
  description: "You use the API to scan your content as it is generated. Content Moderator\
    \ then processes your content and sends the results along with relevant information\
    \ either back to your systems or to the built-in review tool. You can use this\
    \ information to take decisions e.g. take it down, send to human judge, etc.\r\
    \n\r\nWhen using the API, images need to have a minimum of 128 pixels and a maximum\
    \ file size of 4MB. \r\nText can be at most 1024 characters long. \r\nIf the content\
    \ passed to the text API or the image API exceeds the size limits, the API will\
    \ return an error code that informs about the issue."
  title: Content Moderator Client
  version: "1.0"
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/ContentModerator/stable/v1.0/ContentModerator.json
    version: "2.0"
  x-providerName: azure.com
  x-serviceName: cognitiveservices-ContentModerator
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://azure.local/
security:
- apim_key: []
paths:
  /contentmoderator/lists/v1.0/imagelists:
    get:
      description: Gets all the Image Lists.
      operationId: ListManagementImageLists_GetAllImageLists
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageLists'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementImageLists
      x-ms-examples:
        Get All Imagelists request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
              - Description: List of images with racy content.
                Id: 99083
                Metadata:
                  Contentsource: content source A
                  Purpose: task A
                Name: RacyContentList
              - Description: List of images with abuse content.
                Id: 89117
                Metadata:
                  Contentsource: content source B
                  TaggedAs: abuse
                Name: AbuseContentList
              headers: {}
      x-accepts:
      - application/json
    post:
      description: Creates an image list.
      operationId: ListManagementImageLists_Create
      parameters:
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListManagementImageLists_Create_request'
        description: Schema of the body.
        required: true
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementImageLists
      x-ms-examples:
        Create Imagelist request:
          parameters:
            Content-Type: application/json
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            body:
              Description: List of images with racy content
              Metadata:
                ContentSource: Content Source A
                TaggedAs: Racy
              Name: ImageList B
          responses:
            "200":
              body:
                Description: List of images with racy content
                Id: 89023
                Metadata:
                  ContentSource: Content Source A
                  TaggedAs: Racy
                Name: ImageList B
              headers: {}
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /contentmoderator/lists/v1.0/imagelists/{listId}:
    delete:
      description: Deletes image list with the list Id equal to list Id passed.
      operationId: ListManagementImageLists_Delete
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementImageLists
      x-ms-examples:
        Delete Imagelist request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: "89003"
          responses:
            "200":
              body: ""
              headers: {}
      x-accepts:
      - application/json
    get:
      description: Returns the details of the image list with list Id equal to list
        Id passed.
      operationId: ListManagementImageLists_GetDetails
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementImageLists
      x-ms-examples:
        Get List Id Details request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: "123"
            listId: "123"
          responses:
            "200":
              body:
                Description: sample string 3
                Id: 94557
                Metadata:
                  Sample string 1: sample string 2
                  Sample string 3: sample string 4
                Name: ImageList A
              headers: {}
      x-accepts:
      - application/json
    put:
      description: Updates an image list with list Id equal to list Id passed.
      operationId: ListManagementImageLists_Update
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListManagementImageLists_Create_request'
        description: Schema of the body.
        required: true
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementImageLists
      x-ms-examples:
        Update Imagelist request:
          parameters:
            Content-Type: application/json
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            body:
              Description: List of images with bad content
              Metadata:
                ContentSource: Content Source A
                TaggedAs: Racy
              Name: ImageList B
            listId: "89003"
          responses:
            "200":
              body:
                Description: List of images.
                Id: 89023
                Metadata:
                  ContentSource: Content Source A
                  TaggedAs: Racy
                Name: ImageList B
              headers: {}
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /contentmoderator/lists/v1.0/imagelists/{listId}/RefreshIndex:
    post:
      description: Refreshes the index of the list with list Id equal to list Id passed.
      operationId: ListManagementImageLists_RefreshIndex
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshIndex'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementImageLists
      x-ms-examples:
        Refresh Image Index request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: "89003"
          responses:
            "200":
              body:
                AdvancedInfo: []
                ContentSourceId: "89003"
                IsUpdateSuccess: true
                Status:
                  Code: 3000
                  Description: RefreshIndex successfully completed.
                  Exception: ""
                TrackingId: WE_7be12265b82742749e6b6b1b0_ContentModerator.Preview_e220d7be-49d0-4553-94f6-fa5ad4ae488e
              headers: {}
      x-accepts:
      - application/json
  /contentmoderator/lists/v1.0/imagelists/{listId}/images:
    delete:
      description: Deletes all images from the list with list Id equal to list Id
        passed.
      operationId: ListManagementImage_DeleteAllImages
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementImage
      x-ms-examples:
        Delete All Images request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: "89003"
          responses:
            "200":
              body: ""
              headers: {}
      x-accepts:
      - application/json
    get:
      description: Gets all image Ids from the list with list Id equal to list Id
        passed.
      operationId: ListManagementImage_GetAllImageIds
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageIds'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementImage
      x-ms-examples:
        Get All Image Ids request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: "89003"
          responses:
            "200":
              body:
                ContentIds:
                - 89207
                - 89209
                - 94162
                ContentSource: "79017"
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ""
                TrackingId: WE_7be12265b8014274baea9219e6cg6b1b0_ContentModerator.Preview_5614wrl328-ba52-40b2-a220-16e55uha78a
              headers: {}
      x-accepts:
      - application/json
    post:
      description: Add an image to the list with list Id equal to list Id passed.
      operationId: ListManagementImage_AddImage
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Tag for the image.
        in: query
        name: tag
        schema:
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The image label.
        in: query
        name: label
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementImage
      x-ms-examples:
        Add Image request:
          parameters:
            Content-Type: application/json
            Endpoint: "{Endpoint}"
            ImageUrl:
              DataRepresentation: URL
              Value: https://moderatorsampleimages.blob.core.windows.net/samples/img_300.jpg
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            label: test
            listId: "89003"
          responses:
            "200":
              body:
                AdditionalInfo:
                - Key: Source
                  Value: "81117"
                ContentId: "90102"
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ""
                TrackingId: WE_7be12265b8274274baea18e6b6b1b0_ContentModerator.Preview_e7dfcfe4-af54-2b1c-8a43-e1400c10893b9
              headers: {}
      x-accepts:
      - application/json
  /contentmoderator/lists/v1.0/imagelists/{listId}/images/{ImageId}:
    delete:
      description: Deletes an image from the list with list Id and image Id passed.
      operationId: ListManagementImage_DeleteImage
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Id of the image.
        in: path
        name: ImageId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementImage
      x-ms-examples:
        Delete Image request:
          parameters:
            Endpoint: "{Endpoint}"
            ImageId: "34562"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: "89003"
          responses:
            "200":
              body: ""
              headers: {}
      x-accepts:
      - application/json
  /contentmoderator/lists/v1.0/termlists:
    get:
      description: gets all the Term Lists
      operationId: ListManagementTermLists_GetAllTermLists
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermLists'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementTermLists
      x-ms-examples:
        Get All Termlists request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
              - Description: List of racy terms.
                Id: 99083
                Metadata:
                  Contentsource: content source A
                  Purpose: task A
                Name: RacyContentList
              - Description: List of abusive terms.
                Id: 89117
                Metadata:
                  Contentsource: content source B
                  TaggedAs: abuse
                Name: AbuseContentList
              headers: {}
      x-accepts:
      - application/json
    post:
      description: Creates a Term List
      operationId: ListManagementTermLists_Create
      parameters:
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListManagementImageLists_Create_request'
        description: Schema of the body.
        required: true
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementTermLists
      x-ms-examples:
        Create Termlist request:
          parameters:
            Content-Type: application/json
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            body:
              Description: List of racy terms.
              Metadata:
                ContentSource: Content Source A
                TaggedAs: Racy
              Name: TermList B
          responses:
            "200":
              body:
                Description: List of racy terms.
                Id: 89023
                Metadata:
                  ContentSource: Content Source A
                  TaggedAs: Racy
                Name: TermList B
              headers: {}
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /contentmoderator/lists/v1.0/termlists/{listId}:
    delete:
      description: Deletes term list with the list Id equal to list Id passed.
      operationId: ListManagementTermLists_Delete
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementTermLists
      x-ms-examples:
        Delete Termlist request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: "89003"
          responses:
            "200":
              body: ""
              headers: {}
      x-accepts:
      - application/json
    get:
      description: Returns list Id details of the term list with list Id equal to
        list Id passed.
      operationId: ListManagementTermLists_GetDetails
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementTermLists
      x-ms-examples:
        Get Term ListId Details request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            listId: "89003"
          responses:
            "200":
              body:
                Description: sample string 3
                Id: 89003
                Metadata:
                  Sample string 1: sample string 2
                  Sample string 3: sample string 4
                Name: TermList A
              headers: {}
      x-accepts:
      - application/json
    put:
      description: Updates an Term List.
      operationId: ListManagementTermLists_Update
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListManagementImageLists_Create_request'
        description: Schema of the body.
        required: true
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementTermLists
      x-ms-examples:
        Update Termlist request:
          parameters:
            Content-Type: application/json
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            body:
              Description: List of offensive terms.
              Metadata:
                ContentSource: Content Source A
                TaggedAs: Offensive
              Name: TermList B
            listId: "89003"
          responses:
            "200":
              body:
                Description: List of offensive terms.
                Id: 89023
                Metadata:
                  ContentSource: Content Source A
                  TaggedAs: Offensive
                Name: TermList B
              headers: {}
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /contentmoderator/lists/v1.0/termlists/{listId}/RefreshIndex:
    post:
      description: Refreshes the index of the list with list Id equal to list ID passed.
      operationId: ListManagementTermLists_RefreshIndex
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Language of the terms.
        in: query
        name: language
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshIndex'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementTermLists
      x-ms-examples:
        Refresh Term Index request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            language: eng
            listId: "89003"
          responses:
            "200":
              body:
                AdvancedInfo: []
                ContentSourceId: "89003"
                IsUpdateSuccess: true
                Status:
                  Code: 3000
                  Description: RefreshIndex successfully completed.
                  Exception: ""
                TrackingId: WE_7be12265b82742749e6b6b1b0_ContentModerator.Preview_e220d7be-49d0-4553-94f6-fa5ad4ae488e
              headers: {}
      x-accepts:
      - application/json
  /contentmoderator/lists/v1.0/termlists/{listId}/terms:
    delete:
      description: Deletes all terms from the list with list Id equal to the list
        Id passed.
      operationId: ListManagementTerm_DeleteAllTerms
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Language of the terms.
        in: query
        name: language
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "204":
          content:
            application/json:
              schema:
                type: string
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementTerm
      x-ms-examples:
        Delete AllTerms request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            language: eng
            listId: "89003"
          responses:
            "204":
              body: ""
              headers: {}
      x-accepts:
      - application/json
    get:
      description: Gets all terms from the list with list Id equal to the list Id
        passed.
      operationId: ListManagementTerm_GetAllTerms
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Language of the terms.
        in: query
        name: language
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The pagination start index.
        in: query
        name: offset
        schema:
          type: integer
      - description: The max limit.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terms'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementTerm
      x-ms-examples:
        Get All Terms request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            language: eng
            listId: "89003"
          responses:
            "200":
              body:
                Data:
                  Language: eng
                  Status:
                    Code: 3000
                    Description: OK
                    Exception: ""
                  Terms:
                  - Term: testA
                  - Term: testB
                  TrackingId: 1239cc41a-b123-4983-8446-ef1df9a6768
                Paging:
                  Limit: 50
                  Offset: 0
                  Returned: 2
                  Total: 2
              headers: {}
      x-accepts:
      - application/json
  /contentmoderator/lists/v1.0/termlists/{listId}/terms/{term}:
    delete:
      description: Deletes a term from the list with list Id equal to the list Id
        passed.
      operationId: ListManagementTerm_DeleteTerm
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Term to be deleted
        in: path
        name: term
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Language of the terms.
        in: query
        name: language
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "204":
          content:
            application/json:
              schema:
                type: string
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementTerm
      x-ms-examples:
        Delete Term request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            language: eng
            listId: "89003"
            term: hell
          responses:
            "204":
              body: ""
              headers: {}
      x-accepts:
      - application/json
    post:
      description: Add a term to the term list with list Id equal to list Id passed.
      operationId: ListManagementTerm_AddTerm
      parameters:
      - description: List Id of the image list.
        in: path
        name: listId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Term to be deleted
        in: path
        name: term
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Language of the terms.
        in: query
        name: language
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "201":
          content: {}
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ListManagementTerm
      x-ms-examples:
        Add Term request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            language: eng
            listId: "89003"
            term: hell
          responses:
            "201": {}
      x-accepts:
      - application/json
  /contentmoderator/moderate/v1.0/ProcessImage/Evaluate:
    post:
      description: Returns probabilities of the image containing racy or adult content.
      operationId: ImageModeration_Evaluate
      parameters:
      - description: Whether to retain the submitted image for future use; defaults
          to false if omitted.
        in: query
        name: CacheImage
        schema:
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluate'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ImageModeration
      x-accepts:
      - application/json
  /contentmoderator/moderate/v1.0/ProcessImage/FindFaces:
    post:
      description: Returns the list of faces found.
      operationId: ImageModeration_FindFaces
      parameters:
      - description: Whether to retain the submitted image for future use; defaults
          to false if omitted.
        in: query
        name: CacheImage
        schema:
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoundFaces'
          description: The list of faces found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ImageModeration
      x-accepts:
      - application/json
  /contentmoderator/moderate/v1.0/ProcessImage/Match:
    post:
      description: "Fuzzily match an image against one of your custom Image Lists.\
        \ You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\"\
        >this</a> API. \r\n\r\nReturns ID and tags of matching image.<br/>\r\n<br/>\r\
        \nNote: Refresh Index must be run on the corresponding Image List before additions\
        \ and removals are reflected in the response."
      operationId: ImageModeration_Match
      parameters:
      - description: The list Id.
        in: query
        name: listId
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Whether to retain the submitted image for future use; defaults
          to false if omitted.
        in: query
        name: CacheImage
        schema:
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchResponse'
          description: "Supported values for tags are:\r\n<ul>\r\n<li>101: Nudity</li>\r\
            \n<li>102: Sexual Content</li>\r\n<li>201: Alcohol</li>\r\n<li>202: Tobacco</li>\r\
            \n<li>203: Drugs</li>\r\n<li>301: Child Exploitation</li>\r\n<li>401:\
            \ Violence</li>\r\n<li>402: Weapons</li>\r\n<li>403: Gore</li>\r\n<li>501:\
            \ Profanity</li>\r\n<li>502: Vulgarity</li>\r\n</ul>."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ImageModeration
      x-accepts:
      - application/json
  /contentmoderator/moderate/v1.0/ProcessImage/OCR:
    post:
      description: Returns any text found in the image for the language specified.
        If no language is specified in input then the detection defaults to English.
      operationId: ImageModeration_OCR
      parameters:
      - description: Language of the terms.
        in: query
        name: language
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Whether to retain the submitted image for future use; defaults
          to false if omitted.
        in: query
        name: CacheImage
        schema:
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |-
          When set to True, the image goes through additional processing to come with additional candidates.

          image/tiff is not supported when enhanced is set to true

          Note: This impacts the response time.
        in: query
        name: enhanced
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OCR'
          description: The text found and list of candidate text details.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - ImageModeration
      x-accepts:
      - application/json
  /contentmoderator/moderate/v1.0/ProcessText/DetectLanguage:
    post:
      description: This operation will detect the language of given input content.
        Returns the <a href="http://www-01.sil.org/iso639-3/codes.asp">ISO 639-3 code</a>
        for the predominant language comprising the submitted text. Over 110 languages
        supported.
      operationId: TextModeration_DetectLanguage
      parameters:
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - text/plain
          - text/html
          - text/xml
          - text/markdown
          type: string
          x-ms-client-name: textContentType
        x-ms-client-name: textContentType
      requestBody:
        content:
          text/plain:
            schema:
              format: file
              type: object
          text/html:
            schema:
              format: file
              type: object
          text/xml:
            schema:
              format: file
              type: object
          text/markdown:
            schema:
              format: file
              type: object
        description: Content to screen.
        required: true
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectedLanguage'
          description: The detected language result.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - TextModeration
      x-ms-examples:
        Detect Language request:
          parameters:
            Content-Type: text/plain
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            Text Content: "Is this a crap email abcdef@abcd.com, phone: 6657789887,\
              \ IP: 255.255.255.255, 1 Microsoft Way, Redmond, WA 98052"
          responses:
            "200":
              body:
                DetectedLanguage: eng
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ""
                TrackingId: 2826a49-b976-419e-98e8-c5532c1n78c6
              headers: {}
      x-codegen-request-body-name: Text Content
      x-content-type: text/plain
      x-accepts:
      - application/json
  /contentmoderator/moderate/v1.0/ProcessText/Screen/:
    post:
      description: Detects profanity in more than 100 languages and match against
        custom and shared blacklists.
      operationId: TextModeration_ScreenText
      parameters:
      - description: Language of the text.
        in: query
        name: language
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Autocorrect text.
        in: query
        name: autocorrect
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Detect personal identifiable information.
        in: query
        name: PII
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The list Id.
        in: query
        name: listId
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Classify input.
        in: query
        name: classify
        schema:
          default: false
          type: boolean
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - text/plain
          - text/html
          - text/xml
          - text/markdown
          type: string
          x-ms-client-name: textContentType
        x-ms-client-name: textContentType
      requestBody:
        content:
          text/plain:
            schema:
              format: file
              type: object
          text/html:
            schema:
              format: file
              type: object
          text/xml:
            schema:
              format: file
              type: object
          text/markdown:
            schema:
              format: file
              type: object
        description: Content to screen.
        required: true
        x-ms-parameter-location: method
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screen'
          description: Status 200
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      summary: Detect profanity and match against custom and shared blacklists
      tags:
      - TextModeration
      x-ms-examples:
        Detect Language request:
          parameters:
            Content-Type: text/plain
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            PII: false
            Text Content: "Is this a crap email abcdef@abcd.com, phone: 6657789887,\
              \ IP: 255.255.255.255, 1 Microsoft Way, Redmond, WA 98052"
            autocorrect: false
            classify: false
            language: eng
            listId: ""
          responses:
            "200":
              body:
                Classification:
                  Category1:
                    Score: 4.0505084325559437E-4
                  Category2:
                    Score: 0.2234508991241455
                  Category3:
                    Score: 0.9879999756813049
                  ReviewRecommended: true
                Language: eng
                Misrepresentation: []
                NormalizedText: "Is this a crap email abcdef@ abcd. com, phone: 6657789887,\
                  \ IP: 255. 255. 255. 255, 1 Microsoft Way, Redmond, WA 98052"
                OriginalText: "Is this a crap email abcdef@abcd.com, phone: 6657789887,\
                  \ IP: 255.255.255.255, 1 Microsoft Way, Redmond, WA 98052"
                PII:
                  Address:
                  - Index: 78
                    Text: "1 Microsoft Way, Redmond, WA 98052"
                  Email:
                  - Detected: abcdef@abcd.com
                    Index: 21
                    SubType: Regular
                    Text: abcdef@abcd.com
                  IPA:
                  - Index: 61
                    SubType: IPV4
                    Text: 255.255.255.255
                  Phone:
                  - CountryCode: US
                    Index: 45
                    Text: "6657789887"
                  SSN:
                  - Index: 45
                    Text: "665778988"
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ""
                Terms:
                - Index: 10
                  ListId: 0
                  OriginalIndex: 10
                  Term: crap
                TrackingId: 9fdfef70-6ed8-4a88-99a0-5b6d0b8d7108
              headers: {}
      x-codegen-request-body-name: Text Content
      x-content-type: text/plain
      x-accepts:
      - application/json
  /contentmoderator/review/v1.0/teams/{teamName}/jobs:
    post:
      description: "A job Id will be returned for the content posted on this endpoint.\
        \ \r\n\r\nOnce the content is evaluated against the Workflow provided the\
        \ review will be created or ignored based on the workflow expression.\r\n\r\
        \n<h3>CallBack Schemas </h3>\r\n\r\n<p>\r\n<h4>Job Completion CallBack Sample</h4><br/>\r\
        \n\r\n{<br/>\r\n  \"JobId\": \"<Job Id>,<br/>\r\n  \"ReviewId\": \"<Review\
        \ Id, if the Job resulted in a Review to be created>\",<br/>\r\n  \"WorkFlowId\"\
        : \"default\",<br/>\r\n  \"Status\": \"<This will be one of Complete, InProgress,\
        \ Error>\",<br/>\r\n  \"ContentType\": \"Image\",<br/>\r\n  \"ContentId\"\
        : \"<This is the ContentId that was specified on input>\",<br/>\r\n  \"CallBackType\"\
        : \"Job\",<br/>\r\n  \"Metadata\": {<br/>\r\n    \"adultscore\": \"0.xxx\"\
        ,<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"racyscore\": \"0.xxx\",<br/>\r\
        \n    \"r\": \"True\"<br/>\r\n  }<br/>\r\n}<br/>\r\n\r\n</p>\r\n<p>\r\n<h4>Review\
        \ Completion CallBack Sample</h4><br/>\r\n\r\n{\r\n  \"ReviewId\": \"<Review\
        \ Id>\",<br/>\r\n  \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\
        \n  \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\n  \"CallBackType\"\
        : \"Review\",<br/>\r\n  \"ContentId\": \"<The ContentId that was specified\
        \ input>\",<br/>\r\n  \"Metadata\": {<br/>\r\n    \"adultscore\": \"0.xxx\"\
        ,\r\n    \"a\": \"False\",<br/>\r\n    \"racyscore\": \"0.xxx\",<br/>\r\n\
        \    \"r\": \"True\"<br/>\r\n  },<br/>\r\n  \"ReviewerResultTags\": {<br/>\r\
        \n    \"a\": \"False\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  }<br/>\r\n}<br/>\r\
        \n\r\n</p>."
      operationId: Reviews_CreateJob
      parameters:
      - description: Your team name.
        in: path
        name: teamName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "Image, Text or Video."
        in: query
        name: ContentType
        required: true
        schema:
          enum:
          - Image
          - Text
          - Video
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Id/Name to identify the content submitted.
        in: query
        name: ContentId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Workflow Name that you want to invoke.
        in: query
        name: WorkflowName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Callback endpoint for posting the create job result.
        in: query
        name: CallBackEndpoint
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - application/json
          - image/jpeg
          type: string
          x-ms-client-name: jobContentType
        x-ms-client-name: jobContentType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reviews_CreateJob_request'
          image/jpeg:
            schema:
              $ref: '#/components/schemas/Reviews_CreateJob_request'
        description: Content to evaluate.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobId'
            text/json:
              schema:
                $ref: '#/components/schemas/JobId'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            text/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - Reviews
      x-ms-examples:
        Create Job request:
          parameters:
            CallBackEndpoint: ""
            Content:
              ContentValue: https://moderatorsampleimages.blob.core.windows.net/samples/sample.jpg
            Content-Type: application/json
            ContentId: ContentID A
            ContentType: Image
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            WorkflowName: TestWorkflow
            teamName: sonaliProdTeam
          responses:
            "200":
              body:
                JobId: "234"
              headers: {}
      x-codegen-request-body-name: Content
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /contentmoderator/review/v1.0/teams/{teamName}/jobs/{JobId}:
    get:
      description: Get the Job Details for a Job Id.
      operationId: Reviews_GetJobDetails
      parameters:
      - description: Your Team Name.
        in: path
        name: teamName
        required: true
        schema:
          type: string
      - description: Id of the job.
        in: path
        name: JobId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - Reviews
      x-ms-examples:
        Get Job Details request:
          parameters:
            Endpoint: "{Endpoint}"
            JobId: 201709i96f295aa5748101436064c42ddf
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            teamName: ModeratorTeam
          responses:
            "200":
              body:
                CallBackEndpoint: ""
                Id: 2017213fee37b184345gu9606e5d14e3
                JobExecutionReport:
                - Msg: Job marked completed and job content has been removed
                  Ts: 2017-09-21T22:00:47.4920565
                - Msg: Execution Complete
                  Ts: 2017-09-21T22:00:47.420048
                - Msg: Successfully got isadult response from Moderator
                  Ts: 2017-09-21T22:00:47.3900424
                - Msg: Getting isadult from Moderator
                  Ts: 2017-09-21T22:00:46.3538907
                - Msg: Starting Execution - Try 1
                  Ts: 2017-09-21T22:00:46.1098543
                ResultMetaData:
                - Key: adultScore
                  Value: "0.007"
                - Key: isAdult
                  Value: "False"
                - Key: racyScore
                  Value: "0.022"
                - Key: isRacy
                  Value: "False"
                ReviewId: ""
                Status: Complete
                TeamName: teamA
                Type: Image
                WorkflowId: default
              headers: {}
      x-accepts:
      - application/json
  /contentmoderator/review/v1.0/teams/{teamName}/reviews:
    post:
      description: "The reviews created would show up for Reviewers on your team.\
        \ As Reviewers complete reviewing, results of the Review would be POSTED (i.e.\
        \ HTTP POST) on the specified CallBackEndpoint.\r\n\r\n<h3>CallBack Schemas\
        \ </h3>\r\n<h4>Review Completion CallBack Sample</h4>\r\n<p>\r\n{<br/>\r\n\
        \  \"ReviewId\": \"<Review Id>\",<br/>\r\n  \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\"\
        ,<br/>\r\n  \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\n  \"CallBackType\"\
        : \"Review\",<br/>\r\n  \"ContentId\": \"<The ContentId that was specified\
        \ input>\",<br/>\r\n  \"Metadata\": {<br/>\r\n    \"adultscore\": \"0.xxx\"\
        ,<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"racyscore\": \"0.xxx\",<br/>\r\
        \n    \"r\": \"True\"<br/>\r\n  },<br/>\r\n  \"ReviewerResultTags\": {<br/>\r\
        \n    \"a\": \"False\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  }<br/>\r\n}<br/>\r\
        \n\r\n</p>."
      operationId: Reviews_CreateReviews
      parameters:
      - description: The content type.
        in: header
        name: UrlContentType
        required: true
        schema:
          type: string
      - description: Your team name.
        in: path
        name: teamName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: "SubTeam of your team, you want to assign the created review\
          \ to."
        in: query
        name: subTeam
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              description: Schema of the body.
              items:
                $ref: '#/components/schemas/Reviews_CreateReviews_request_inner'
              type: array
        description: Body for create reviews API
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - Reviews
      x-ms-examples:
        Create Review request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            UrlContentType: application/json
            createReviewBody:
            - CallbackEndpoint: ""
              Content: https://www.w3schools.com/css/trolltunga.jpg
              ContentId: ContentID A
              Metadata:
              - Key: string A
                Value: string B
              Type: Image
            subTeam: SubteamA
            teamName: ModeratorTeam
          responses:
            "200":
              body:
              - 201709i9srfj128775481f9955033096ddf
              headers: {}
      x-codegen-request-body-name: createReviewBody
      x-content-type: application/json
      x-accepts:
      - application/json
  /contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}:
    get:
      description: Returns review details for the review Id passed.
      operationId: Reviews_GetReview
      parameters:
      - description: Your Team Name.
        in: path
        name: teamName
        required: true
        schema:
          type: string
      - description: Id of the review.
        in: path
        name: reviewId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - Reviews
      x-ms-examples:
        Get Review request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            reviewId: 201709i96f295aa5748101436064c42ddf
            teamName: ModeratorTeam
          responses:
            "200":
              body:
                CallbackEndpoint: ""
                Content: https://reviewcontentstoragesea.blob.core.windows.net/ModeratorTeam/IMG_201709i96f295987701f9955036064c42ddf
                ContentId: contentIdA
                CreatedBy: ModeratorTeam
                Metadata:
                - Key: string
                  Value: string
                ReviewId: 201709i96f295aa5748101436064c42ddf
                ReviewerResultTags: []
                Status: Pending
                SubTeam: public
                Type: Image
              headers: {}
      x-accepts:
      - application/json
  /contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames:
    get:
      description: "The reviews created would show up for Reviewers on your team.\
        \ As Reviewers complete reviewing, results of the Review would be POSTED (i.e.\
        \ HTTP POST) on the specified CallBackEndpoint.\r\n\r\n<h3>CallBack Schemas\
        \ </h3>\r\n<h4>Review Completion CallBack Sample</h4>\r\n<p>\r\n{<br/>\r\n\
        \  \"ReviewId\": \"<Review Id>\",<br/>\r\n  \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\"\
        ,<br/>\r\n  \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\n  \"CallBackType\"\
        : \"Review\",<br/>\r\n  \"ContentId\": \"<The ContentId that was specified\
        \ input>\",<br/>\r\n  \"Metadata\": {<br/>\r\n    \"adultscore\": \"0.xxx\"\
        ,<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"racyscore\": \"0.xxx\",<br/>\r\
        \n    \"r\": \"True\"<br/>\r\n  },<br/>\r\n  \"ReviewerResultTags\": {<br/>\r\
        \n    \"a\": \"False\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  }<br/>\r\n}<br/>\r\
        \n\r\n</p>."
      operationId: Reviews_GetVideoFrames
      parameters:
      - description: Your team name.
        in: path
        name: teamName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Id of the review.
        in: path
        name: reviewId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Time stamp of the frame from where you want to start fetching
          the frames.
        in: query
        name: startSeed
        schema:
          type: integer
      - description: Number of frames to fetch.
        in: query
        name: noOfRecords
        schema:
          type: integer
      - description: Get frames filtered by tags.
        in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Frames'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - Reviews
      x-ms-examples:
        Get Frames Request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            reviewId: 201711v18ea829372b14f9e9d382621e62429a9
            teamName: Content moderator
          responses:
            "200":
              body:
                ReviewId: 201711v18ea829372b14f9e9d382621e62429a9
                VideoFrames:
                - FrameImage: https://rtsvccontentwu.blob.core.windows.net/580040/FRM_201711v18ea829372b14f9e9d382621e62429a9_1122.jpg
                  Metadata:
                  - Key: apiScoreVal
                    Value: "0.206"
                  - Key: a
                    Value: "False"
                  ReviewerResultTags: []
                  Timestamp: "1122"
              headers: {}
      x-accepts:
      - application/json
    post:
      description: "The reviews created would show up for Reviewers on your team.\
        \ As Reviewers complete reviewing, results of the Review would be POSTED (i.e.\
        \ HTTP POST) on the specified CallBackEndpoint.\r\n\r\n<h3>CallBack Schemas\
        \ </h3>\r\n<h4>Review Completion CallBack Sample</h4>\r\n<p>\r\n{<br/>\r\n\
        \  \"ReviewId\": \"<Review Id>\",<br/>\r\n  \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\"\
        ,<br/>\r\n  \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\n  \"CallBackType\"\
        : \"Review\",<br/>\r\n  \"ContentId\": \"<The ContentId that was specified\
        \ input>\",<br/>\r\n  \"Metadata\": {<br/>\r\n    \"adultscore\": \"0.xxx\"\
        ,<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"racyscore\": \"0.xxx\",<br/>\r\
        \n    \"r\": \"True\"<br/>\r\n  },<br/>\r\n  \"ReviewerResultTags\": {<br/>\r\
        \n    \"a\": \"False\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  }<br/>\r\n}<br/>\r\
        \n\r\n</p>."
      operationId: Reviews_AddVideoFrame
      parameters:
      - description: Your team name.
        in: path
        name: teamName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Id of the review.
        in: path
        name: reviewId
        required: true
        schema:
          type: string
      - description: Timescale of the video you are adding frames to.
        in: query
        name: timescale
        schema:
          type: integer
      responses:
        "200":
          content: {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - Reviews
      x-accepts:
      - application/json
  /contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/publish:
    post:
      description: Publish video review to make it available for review.
      operationId: Reviews_PublishVideoReview
      parameters:
      - description: Your team name.
        in: path
        name: teamName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Id of the review.
        in: path
        name: reviewId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - Reviews
      x-ms-examples:
        publish video request:
          parameters:
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            reviewId: 201711v18ea829372b14f9e9d382621e62429a9
            teamName: Content moderator
          responses:
            "204":
              headers: {}
      x-accepts:
      - application/json
  /contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/transcript:
    put:
      description: This API adds a transcript file (text version of all the words
        spoken in a video) to a video review. The file should be a valid WebVTT format.
      operationId: Reviews_AddVideoTranscript
      parameters:
      - description: Your team name.
        in: path
        name: teamName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Id of the review.
        in: path
        name: reviewId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - text/plain
          type: string
          x-ms-client-name: ContentType
        x-ms-client-name: ContentType
      requestBody:
        content:
          text/plain:
            schema:
              format: file
              type: object
        description: Transcript file of the video.
        required: true
        x-ms-parameter-location: method
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - Reviews
      x-ms-examples:
        Add transcript request:
          parameters:
            Content-Type: text/plain
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            VTT file: 01010111 01000101 01000010 01010110 01010100 01010100 00001101
              00001010 01001110 01001111 01010100 01000101 00100000 01000011 01101111
              01101110 01100110 01101001 01100100 01100101 01101110 01100011 01100101
              00111010 00100000 00110000 00101110 00110111 00111001 00110111 00110101
              00110101 00111001 00110101 00001101 00001010 00110000 00110000 00111010
              00110000 00110000 00111010 00110000 00110101 00101110 00110110 00110110
              00110000 00100000 00101101 00101101 00111110 00100000 00110000 00110000
              00111010 00110000 00110000 00111010 00110001 00110000 00101110 00110010
              00110100 00110000 00001101 00001010 01010100 01101000 01101001 01110011
              00100000 01100011 01101111 01101101 01110000 01100001 01101110 01101001
              01100101 01110011 00100000 01101000 01100001 01100100 00100000 00110011
              00100000 01000011 01000101 01001111 01110011 00101100 00100000 01110100
              01101000 01100101 01110010 01100101 00100000 01100001 01101100 01101100
              00100000 01110010 01101001 01100111 01101000 01110100 00100000 01101000
              01100101 01110010 01100101 00101110 00100000 01010100 01101000 01101001
              01110011 00100000 01101001 01110011 00100000 01100001 01101100 01101100
              00101110
            reviewId: 201711v18ea829372b14f9e9d382621e62429a9
            teamName: Content moderator
          responses:
            "204":
              headers: {}
      x-codegen-request-body-name: VTT file
      x-content-type: text/plain
      x-accepts:
      - application/json
  /contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/transcriptmoderationresult:
    put:
      description: "This API adds a transcript screen text result file for a video\
        \ review. Transcript screen text result file is a result of Screen Text API\
        \ . In order to generate transcript screen text result file , a transcript\
        \ file has to be screened for profanity using Screen Text API."
      operationId: Reviews_AddVideoTranscriptModerationResult
      parameters:
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
          x-ms-client-name: ContentType
        x-ms-client-name: ContentType
      - description: Your team name.
        in: path
        name: teamName
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Id of the review.
        in: path
        name: reviewId
        required: true
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      requestBody:
        content:
          application/json:
            schema:
              description: Schema of the body.
              items:
                $ref: '#/components/schemas/Reviews_AddVideoTranscriptModerationResult_request_inner'
              type: array
        description: Body for add video transcript moderation result API
        required: true
        x-ms-parameter-location: method
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      tags:
      - Reviews
      x-ms-examples:
        Transcript moderation result request:
          parameters:
            Content-Type: application/json
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            reviewId: 201711v627c579149ec4220bc674214d93f5fe5
            teamName: ModeratorTeam
            transcriptModerationBody:
            - Terms:
              - Index: 1
                Term: bad
              Timestamp: "2334"
          responses:
            "204":
              headers: {}
      x-codegen-request-body-name: transcriptModerationBody
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    CacheImage:
      description: Whether to retain the submitted image for future use; defaults
        to false if omitted.
      in: query
      name: CacheImage
      schema:
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    CallBackEndpoint:
      description: Callback endpoint for posting the create job result.
      in: query
      name: CallBackEndpoint
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ContentId:
      description: Id/Name to identify the content submitted.
      in: query
      name: ContentId
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ContentType:
      description: "Image, Text or Video."
      in: query
      name: ContentType
      required: true
      schema:
        enum:
        - Image
        - Text
        - Video
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    Endpoint:
      description: "Supported Cognitive Services endpoints (protocol and hostname,\
        \ for example: https://westus.api.cognitive.microsoft.com)."
      in: path
      name: Endpoint
      required: true
      schema:
        type: string
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
    ImageId:
      description: Id of the image.
      in: path
      name: ImageId
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    PII:
      description: Detect personal identifiable information.
      in: query
      name: PII
      schema:
        default: false
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    WorkflowName:
      description: Workflow Name that you want to invoke.
      in: query
      name: WorkflowName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    autocorrect:
      description: Autocorrect text.
      in: query
      name: autocorrect
      schema:
        default: false
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    classify:
      description: Classify input.
      in: query
      name: classify
      schema:
        default: false
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    enhanced:
      description: |-
        When set to True, the image goes through additional processing to come with additional candidates.

        image/tiff is not supported when enhanced is set to true

        Note: This impacts the response time.
      in: query
      name: enhanced
      schema:
        default: false
        type: boolean
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    label:
      description: The image label.
      in: query
      name: label
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    language:
      description: Language of the terms.
      in: query
      name: language
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    listId:
      description: List Id of the image list.
      in: path
      name: listId
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    listIdQueryParameter:
      description: The list Id.
      in: query
      name: listId
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    reviewId:
      description: Id of the review.
      in: path
      name: reviewId
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    subTeam:
      description: "SubTeam of your team, you want to assign the created review to."
      in: query
      name: subTeam
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    tag:
      description: Tag for the image.
      in: query
      name: tag
      schema:
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    teamName:
      description: Your team name.
      in: path
      name: teamName
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    term:
      description: Term to be deleted
      in: path
      name: term
      required: true
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    textLanguage:
      description: Language of the text.
      in: query
      name: language
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    timescale:
      description: Timescale of the video.
      in: query
      name: timescale
      schema:
        type: integer
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  requestBodies:
    CreateVideoReviewsBody:
      content:
        '*/*':
          schema:
            description: Schema of the body.
            items:
              description: Schema items of the body.
              properties:
                CallbackEndpoint:
                  description: Optional CallbackEndpoint.
                  type: string
                Content:
                  description: Video content url to review.
                  type: string
                ContentId:
                  description: Content Identifier.
                  type: string
                Metadata:
                  description: Optional metadata details.
                  items:
                    properties:
                      Key:
                        description: Your key parameter.
                        type: string
                      Value:
                        description: Your value parameter.
                        type: string
                    required:
                    - Key
                    - Value
                    type: object
                  type: array
                Status:
                  description: "Status of the video(Complete,Unpublished,Pending)"
                  enum:
                  - Complete
                  - Unpublished
                  - Pending
                  type: string
                Timescale:
                  description: Timescale of the video.
                  type: integer
                Type:
                  description: Type of the content.
                  enum:
                  - Video
                  type: string
                VideoFrames:
                  description: Optional metadata details.
                  items:
                    properties:
                      FrameImage:
                        description: Frame image Url.
                        type: string
                      Id:
                        description: Id of the frame.
                        type: string
                      Metadata:
                        description: Optional metadata details.
                        items:
                          properties:
                            Key:
                              description: Your key parameter.
                              type: string
                            Value:
                              description: Your value parameter.
                              type: string
                          required:
                          - Key
                          - Value
                          type: object
                        type: array
                      ReviewerResultTags:
                        items:
                          properties:
                            Key:
                              description: Your key parameter.
                              type: string
                            Value:
                              description: Your value parameter.
                              type: string
                          required:
                          - Key
                          - Value
                          type: object
                        type: array
                      Timestamp:
                        description: Timestamp of the frame.
                        type: integer
                    required:
                    - FrameImage
                    - Id
                    - Timestamp
                    type: object
                  type: array
              required:
              - Content
              - ContentId
              - Status
              - Type
              type: object
            type: array
      description: Body for create reviews API
      required: true
      x-ms-parameter-location: method
    ImageStreamParameter:
      content:
        '*/*':
          schema:
            format: file
            type: object
      description: The image file.
      required: true
      x-ms-parameter-location: method
    ImageUrlParameter:
      content:
        '*/*':
          schema:
            properties:
              DataRepresentation:
                default: URL
                type: string
              Value:
                type: string
            type: object
      description: The image url.
      required: true
      x-ms-parameter-location: method
    body:
      content:
        '*/*':
          schema:
            properties:
              Description:
                description: Description of the list.
                type: string
              Metadata:
                additionalProperties:
                  type: string
                description: Metadata of the list.
                type: object
              Name:
                description: Name of the list.
                type: string
            type: object
      description: Schema of the body.
      required: true
      x-ms-parameter-location: method
    textContent:
      content:
        '*/*':
          schema:
            format: file
            type: object
      description: Content to screen.
      required: true
      x-ms-parameter-location: method
    transcriptFile:
      content:
        '*/*':
          schema:
            format: file
            type: object
      description: Transcript file of the video.
      required: true
      x-ms-parameter-location: method
    transcriptModerationBody:
      content:
        '*/*':
          schema:
            description: Schema of the body.
            items:
              description: Schema items of the body.
              properties:
                Terms:
                  description: Optional metadata details.
                  items:
                    properties:
                      Index:
                        description: Index of the word
                        type: integer
                      Term:
                        description: Detected word.
                        type: string
                    required:
                    - Index
                    - Term
                    type: object
                  type: array
                Timestamp:
                  description: Timestamp of the image.
                  type: string
              required:
              - Terms
              - Timestamp
              type: object
            type: array
      description: Body for add video transcript moderation result API
      required: true
      x-ms-parameter-location: method
    videoFrameBody:
      content:
        '*/*':
          schema:
            description: Schema of the body.
            items:
              description: Schema items of the body.
              properties:
                FrameImage:
                  description: Content to review.
                  type: string
                Metadata:
                  description: Optional metadata details.
                  items:
                    properties:
                      Key:
                        description: Your key parameter.
                        type: string
                      Value:
                        description: Your value parameter.
                        type: string
                    required:
                    - Key
                    - Value
                    type: object
                  type: array
                ReviewerResultTags:
                  items:
                    properties:
                      Key:
                        description: Your key parameter.
                        type: string
                      Value:
                        description: Your value parameter.
                        type: string
                    required:
                    - Key
                    - Value
                    type: object
                  type: array
                Timestamp:
                  description: Timestamp of the frame.
                  type: string
              required:
              - FrameImage
              - Timestamp
              type: object
            type: array
      description: Body for add video frames API
      required: true
      x-ms-parameter-location: method
  schemas:
    APIError:
      description: Error information returned by the API
      example:
        Error:
          Message: Message
          Code: Code
      properties:
        Error:
          $ref: '#/components/schemas/Error'
      type: object
    Address:
      description: Address details.
      example:
        Index: 5
        Text: Text
      properties:
        Index:
          description: Index(Location) of the Address in the input text content.
          type: integer
        Text:
          description: Detected Address.
          type: string
      type: object
    Candidate:
      description: OCR candidate text.
      example:
        Confidence: 0.8008281904610115
        Text: Text
      properties:
        Confidence:
          description: The confidence level.
          type: number
        Text:
          description: The text found.
          type: string
      type: object
    Classification:
      description: The classification details of the text.
      example:
        Category3:
          Score: 1.4658129805029452
        Category2:
          Score: 6.027456183070403
        Category1:
          Score: 0.8008281904610115
        ReviewRecommended: true
      properties:
        Category1:
          $ref: '#/components/schemas/Classification_Category1'
        Category2:
          $ref: '#/components/schemas/Classification_Category2'
        Category3:
          $ref: '#/components/schemas/Classification_Category3'
        ReviewRecommended:
          description: The review recommended flag.
          type: boolean
      type: object
    DetectedLanguage:
      description: Detect language result.
      example:
        Status:
          Description: Description
          Code: 0
          Exception: Exception
        DetectedLanguage: DetectedLanguage
        TrackingId: TrackingId
      properties:
        DetectedLanguage:
          description: The detected language.
          type: string
        Status:
          $ref: '#/components/schemas/Status'
        TrackingId:
          description: The tracking id.
          type: string
      type: object
    DetectedTerms:
      description: Detected Terms details.
      example:
        ListId: 2
        OriginalIndex: 4
        Index: 3
        Term: Term
      properties:
        Index:
          description: Index(Location) of the detected profanity term in the input
            text content.
          type: integer
        ListId:
          description: Matched Terms list Id.
          type: integer
        OriginalIndex:
          description: Original Index(Location) of the detected profanity term in
            the input text content.
          type: integer
        Term:
          description: Detected profanity term.
          type: string
      type: object
    Email:
      description: Email Address details.
      example:
        SubType: SubType
        Detected: Detected
        Index: 5
        Text: Text
      properties:
        Detected:
          description: Detected Email Address from the input text content.
          type: string
        Index:
          description: Index(Location) of the Email address in the input text content.
          type: integer
        SubType:
          description: Subtype of the detected Email Address.
          type: string
        Text:
          description: Email Address in the input text content.
          type: string
      type: object
    Error:
      description: Error body.
      example:
        Message: Message
        Code: Code
      properties:
        Code:
          type: string
        Message:
          type: string
      type: object
    Evaluate:
      description: Evaluate response object.
      example:
        AdvancedInfo:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        IsImageRacyClassified: true
        Status:
          Description: Description
          Code: 0
          Exception: Exception
        IsImageAdultClassified: true
        CacheID: CacheID
        RacyClassificationScore: 6.027456183070403
        TrackingId: TrackingId
        AdultClassificationScore: 0.8008281904610115
        Result: true
      properties:
        AdultClassificationScore:
          description: The adult classification score.
          type: number
        AdvancedInfo:
          description: The advanced info.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
        CacheID:
          description: The cache id.
          type: string
        IsImageAdultClassified:
          description: Indicates if an image is classified as adult.
          type: boolean
        IsImageRacyClassified:
          description: Indicates if the image is classified as racy.
          type: boolean
        RacyClassificationScore:
          description: The racy classification score.
          type: number
        Result:
          description: Evaluate result.
          type: boolean
        Status:
          $ref: '#/components/schemas/Status'
        TrackingId:
          description: The tracking id.
          type: string
      type: object
    Face:
      description: Coordinates to the found face.
      example:
        Left: 1
        Top: 5
        Right: 5
        Bottom: 6
      properties:
        Bottom:
          description: The bottom coordinate.
          type: integer
        Left:
          description: The left coordinate.
          type: integer
        Right:
          description: The right coordinate.
          type: integer
        Top:
          description: The top coordinate.
          type: integer
      type: object
    FoundFaces:
      description: Request object the contains found faces.
      example:
        AdvancedInfo:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        Status:
          Description: Description
          Code: 0
          Exception: Exception
        CacheId: CacheId
        Count: 0
        TrackingId: TrackingId
        Faces:
        - Left: 1
          Top: 5
          Right: 5
          Bottom: 6
        - Left: 1
          Top: 5
          Right: 5
          Bottom: 6
        Result: true
      properties:
        AdvancedInfo:
          description: The advanced info.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
        CacheId:
          description: The cache id.
          type: string
        Count:
          description: Number of faces found.
          type: integer
        Faces:
          description: The list of faces.
          items:
            $ref: '#/components/schemas/Face'
          type: array
        Result:
          description: True if result was found.
          type: boolean
        Status:
          $ref: '#/components/schemas/Status'
        TrackingId:
          description: The tracking id.
          type: string
      type: object
    Frame:
      description: Video frame property details.
      example:
        FrameImage: FrameImage
        ReviewerResultTags:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        Metadata:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        Timestamp: Timestamp
      properties:
        FrameImage:
          description: Frame image.
          type: string
        Metadata:
          description: Array of KeyValue.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
        ReviewerResultTags:
          description: Reviewer result tags.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        Timestamp:
          description: Timestamp of the frame.
          type: string
      type: object
    Frames:
      description: The response for a Get Frames request.
      example:
        VideoFrames:
        - FrameImage: FrameImage
          ReviewerResultTags:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          Metadata:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          Timestamp: Timestamp
        - FrameImage: FrameImage
          ReviewerResultTags:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          Metadata:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          Timestamp: Timestamp
        ReviewId: ReviewId
      properties:
        ReviewId:
          description: Id of the review.
          type: string
        VideoFrames:
          items:
            $ref: '#/components/schemas/Frame'
          type: array
      type: object
    IPA:
      description: IP Address details.
      example:
        SubType: SubType
        Index: 2
        Text: Text
      properties:
        Index:
          description: Index(Location) of the IP Address in the input text content.
          type: integer
        SubType:
          description: Subtype of the detected IP Address.
          type: string
        Text:
          description: Detected IP Address.
          type: string
      type: object
    Image:
      description: Image Properties.
      example:
        Status:
          Description: Description
          Code: 0
          Exception: Exception
        AdditionalInfo:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        ContentId: ContentId
        TrackingId: TrackingId
      properties:
        AdditionalInfo:
          description: Advanced info list.
          items:
            $ref: '#/components/schemas/Image_AdditionalInfo_inner'
          type: array
        ContentId:
          description: Content Id.
          type: string
        Status:
          $ref: '#/components/schemas/Status'
        TrackingId:
          description: Tracking Id.
          type: string
      type: object
    ImageIds:
      description: Image Id properties.
      example:
        Status:
          Description: Description
          Code: 0
          Exception: Exception
        ContentSource: ContentSource
        ContentIds:
        - 0
        - 0
        TrackingId: TrackingId
      properties:
        ContentIds:
          description: Id of the contents.
          items:
            type: integer
          type: array
        ContentSource:
          description: Source of the content.
          type: string
        Status:
          $ref: '#/components/schemas/Status'
        TrackingId:
          description: Tracking Id.
          type: string
      type: object
    ImageList:
      description: Image List Properties.
      example:
        Description: Description
        Metadata:
          key: Metadata
        Id: 0
        Name: Name
      properties:
        Description:
          description: Description for image list.
          type: string
        Id:
          description: Image List Id.
          type: integer
        Metadata:
          additionalProperties:
            type: string
          description: Image List Metadata.
          type: object
        Name:
          description: Image List Name.
          type: string
      type: object
    ImageLists:
      items:
        $ref: '#/components/schemas/ImageList'
      type: array
    Job:
      description: The Job object.
      example:
        Status: Status
        Type: Type
        CallBackEndpoint: CallBackEndpoint
        JobExecutionReport:
        - Msg: Msg
          Ts: Ts
        - Msg: Msg
          Ts: Ts
        ResultMetaData:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        Id: Id
        ReviewId: ReviewId
        TeamName: TeamName
        WorkflowId: WorkflowId
      properties:
        CallBackEndpoint:
          description: The callback endpoint.
          type: string
        Id:
          description: The job id.
          type: string
        JobExecutionReport:
          description: Job execution report- Array of KeyValue pairs object.
          items:
            $ref: '#/components/schemas/JobExecutionReportDetails'
          type: array
        ResultMetaData:
          description: Array of KeyValue pairs.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
        ReviewId:
          description: Review Id if one is created.
          type: string
        Status:
          description: "The status string (<Pending, Failed, Completed>)."
          type: string
        TeamName:
          description: The team name associated with the job.
          type: string
        Type:
          description: Type of the content.
          type: string
        WorkflowId:
          description: The Id of the workflow.
          type: string
      type: object
    JobExecutionReportDetails:
      description: Job Execution Report Values.
      example:
        Msg: Msg
        Ts: Ts
      properties:
        Msg:
          description: Message details.
          type: string
        Ts:
          description: Time details.
          type: string
      type: object
    JobId:
      example:
        JobId: JobId
      properties:
        JobId:
          description: Id of the created job.
          type: string
      type: object
    JobListResult:
      description: The list of job ids.
      properties:
        Value:
          description: The job id.
          items:
            type: string
          type: array
      type: object
    KeyValuePair:
      description: The key value pair object properties.
      example:
        Value: Value
        Key: Key
      properties:
        Key:
          description: The key parameter.
          type: string
        Value:
          description: The value parameter.
          type: string
      type: object
    Match:
      description: The match details.
      example:
        Score: 6.027456183070403
        MatchId: 0
        Label: Label
        Source: Source
        Tags:
        - 1
        - 1
      properties:
        Label:
          description: The label.
          type: string
        MatchId:
          description: The match id.
          type: integer
        Score:
          description: Confidence score of the image match.
          type: number
        Source:
          description: The source.
          type: string
        Tags:
          description: The tags for match details.
          items:
            type: integer
          type: array
      type: object
    MatchResponse:
      description: The response for a Match request.
      example:
        Status:
          Description: Description
          Code: 0
          Exception: Exception
        IsMatch: true
        Matches:
        - Score: 6.027456183070403
          MatchId: 0
          Label: Label
          Source: Source
          Tags:
          - 1
          - 1
        - Score: 6.027456183070403
          MatchId: 0
          Label: Label
          Source: Source
          Tags:
          - 1
          - 1
        CacheID: CacheID
        TrackingId: TrackingId
      properties:
        CacheID:
          description: The cache id.
          type: string
        IsMatch:
          description: Indicates if there is a match.
          type: boolean
        Matches:
          description: The match details.
          items:
            $ref: '#/components/schemas/Match'
          type: array
        Status:
          $ref: '#/components/schemas/Status'
        TrackingId:
          description: The tracking id.
          type: string
      type: object
    OCR:
      description: Contains the text found in image for the language specified.
      example:
        Status:
          Description: Description
          Code: 0
          Exception: Exception
        Candidates:
        - Confidence: 0.8008281904610115
          Text: Text
        - Confidence: 0.8008281904610115
          Text: Text
        Language: Language
        CacheId: CacheId
        Metadata:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        Text: Text
        TrackingId: TrackingId
      properties:
        CacheId:
          description: The cache id.
          type: string
        Candidates:
          description: The list of candidate text.
          items:
            $ref: '#/components/schemas/Candidate'
          type: array
        Language:
          description: The ISO 639-3 code.
          type: string
        Metadata:
          description: Array of KeyValue.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
        Status:
          $ref: '#/components/schemas/Status'
        Text:
          description: The found text.
          type: string
        TrackingId:
          description: The tracking id.
          type: string
      type: object
    PII:
      description: Personal Identifier Information details.
      example:
        Email:
        - SubType: SubType
          Detected: Detected
          Index: 5
          Text: Text
        - SubType: SubType
          Detected: Detected
          Index: 5
          Text: Text
        Address:
        - Index: 5
          Text: Text
        - Index: 5
          Text: Text
        Phone:
        - Index: 7
          Text: Text
          CountryCode: CountryCode
        - Index: 7
          Text: Text
          CountryCode: CountryCode
        IPA:
        - SubType: SubType
          Index: 2
          Text: Text
        - SubType: SubType
          Index: 2
          Text: Text
        SSN:
        - Index: 9
          Text: Text
        - Index: 9
          Text: Text
      properties:
        Address:
          items:
            $ref: '#/components/schemas/Address'
          type: array
        Email:
          items:
            $ref: '#/components/schemas/Email'
          type: array
        IPA:
          items:
            $ref: '#/components/schemas/IPA'
          type: array
        Phone:
          items:
            $ref: '#/components/schemas/Phone'
          type: array
        SSN:
          items:
            $ref: '#/components/schemas/SSN'
          type: array
      type: object
    Phone:
      description: Phone Property details.
      example:
        Index: 7
        Text: Text
        CountryCode: CountryCode
      properties:
        CountryCode:
          description: CountryCode of the detected Phone number.
          type: string
        Index:
          description: Index(Location) of the Phone number in the input text content.
          type: integer
        Text:
          description: Detected Phone number.
          type: string
      type: object
    RefreshIndex:
      description: Refresh Index Response.
      example:
        AdvancedInfo:
        - key: AdvancedInfo
        - key: AdvancedInfo
        ContentSourceId: ContentSourceId
        Status:
          Description: Description
          Code: 0
          Exception: Exception
        IsUpdateSuccess: true
        TrackingId: TrackingId
      properties:
        AdvancedInfo:
          description: Advanced info list.
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        ContentSourceId:
          description: Content source Id.
          type: string
        IsUpdateSuccess:
          description: Update success status.
          type: boolean
        Status:
          $ref: '#/components/schemas/Status'
        TrackingId:
          description: Tracking Id.
          type: string
      type: object
    Review:
      description: The Review object.
      example:
        Status: Status
        Type: Type
        CreatedBy: CreatedBy
        SubTeam: SubTeam
        Content: Content
        ReviewerResultTags:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        Metadata:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        CallbackEndpoint: CallbackEndpoint
        ContentId: ContentId
        ReviewId: ReviewId
      properties:
        CallbackEndpoint:
          description: The callback endpoint.
          type: string
        Content:
          description: The content value.
          type: string
        ContentId:
          description: Id of the content.
          type: string
        CreatedBy:
          description: The reviewer name.
          type: string
        Metadata:
          description: Array of KeyValue.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
        ReviewId:
          description: Id of the review.
          type: string
        ReviewerResultTags:
          description: Array of KeyValue with Reviewer set Tags.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
        Status:
          description: "The status string (<Pending, Complete>)."
          type: string
        SubTeam:
          description: Name of the subteam.
          type: string
        Type:
          description: The type of content.
          type: string
      type: object
    ReviewList:
      description: The list of review ids.
      items:
        type: string
      type: array
    SSN:
      description: Detected SSN details.
      example:
        Index: 9
        Text: Text
      properties:
        Index:
          description: Index(Location) of the SSN in the input text content.
          type: integer
        Text:
          description: Detected SSN in the input text content.
          type: string
      type: object
    Screen:
      description: The response for a Screen text request.
      example:
        Status:
          Description: Description
          Code: 0
          Exception: Exception
        PII:
          Email:
          - SubType: SubType
            Detected: Detected
            Index: 5
            Text: Text
          - SubType: SubType
            Detected: Detected
            Index: 5
            Text: Text
          Address:
          - Index: 5
            Text: Text
          - Index: 5
            Text: Text
          Phone:
          - Index: 7
            Text: Text
            CountryCode: CountryCode
          - Index: 7
            Text: Text
            CountryCode: CountryCode
          IPA:
          - SubType: SubType
            Index: 2
            Text: Text
          - SubType: SubType
            Index: 2
            Text: Text
          SSN:
          - Index: 9
            Text: Text
          - Index: 9
            Text: Text
        NormalizedText: NormalizedText
        Language: Language
        OriginalText: OriginalText
        Classification:
          Category3:
            Score: 1.4658129805029452
          Category2:
            Score: 6.027456183070403
          Category1:
            Score: 0.8008281904610115
          ReviewRecommended: true
        Misrepresentation:
        - Misrepresentation
        - Misrepresentation
        Terms:
        - ListId: 2
          OriginalIndex: 4
          Index: 3
          Term: Term
        - ListId: 2
          OriginalIndex: 4
          Index: 3
          Term: Term
        TrackingId: TrackingId
        AutoCorrectedText: AutoCorrectedText
      properties:
        AutoCorrectedText:
          description: The autocorrected text
          type: string
        Classification:
          $ref: '#/components/schemas/Classification'
        Language:
          description: Language of the input text content.
          type: string
        Misrepresentation:
          description: The misrepresentation text.
          items:
            type: string
          type: array
        NormalizedText:
          description: The normalized text.
          type: string
        OriginalText:
          description: The original text.
          type: string
        PII:
          $ref: '#/components/schemas/PII'
        Status:
          $ref: '#/components/schemas/Status'
        Terms:
          items:
            $ref: '#/components/schemas/DetectedTerms'
          type: array
        TrackingId:
          description: Unique Content Moderator transaction Id.
          type: string
      type: object
    Status:
      description: Status properties.
      example:
        Description: Description
        Code: 0
        Exception: Exception
      properties:
        Code:
          description: Status code.
          type: integer
        Description:
          description: Status description.
          type: string
        Exception:
          description: Exception status.
          type: string
      type: object
    Tag:
      description: Tag details.
      example:
        Value: Value
        Key: Key
      properties:
        Key:
          description: The key parameter.
          type: string
        Value:
          description: The value parameter.
          type: string
      type: object
    TermList:
      description: Term List  Properties.
      example:
        Description: Description
        Metadata:
          key: Metadata
        Id: 0
        Name: Name
      properties:
        Description:
          description: Description for term list.
          type: string
        Id:
          description: Term list Id.
          type: integer
        Metadata:
          additionalProperties:
            type: string
          description: Term list metadata.
          type: object
        Name:
          description: Term list name.
          type: string
      type: object
    TermLists:
      items:
        $ref: '#/components/schemas/TermList'
      type: array
    Terms:
      description: Terms properties.
      example:
        Paging:
          Returned: 1
          Total: 5
          Limit: 0
          Offset: 6
        Data:
          Status:
            Description: Description
            Code: 0
            Exception: Exception
          Language: Language
          Terms:
          - Term: Term
          - Term: Term
          TrackingId: TrackingId
      properties:
        Data:
          $ref: '#/components/schemas/TermsData'
        Paging:
          $ref: '#/components/schemas/Terms_Paging'
      type: object
    TermsData:
      description: All term Id response properties.
      example:
        Status:
          Description: Description
          Code: 0
          Exception: Exception
        Language: Language
        Terms:
        - Term: Term
        - Term: Term
        TrackingId: TrackingId
      properties:
        Language:
          description: Language of the terms.
          type: string
        Status:
          $ref: '#/components/schemas/Status'
        Terms:
          description: List of terms.
          items:
            $ref: '#/components/schemas/TermsInList'
          type: array
        TrackingId:
          description: Tracking Id.
          type: string
      type: object
    TermsInList:
      description: Terms in list Id passed.
      example:
        Term: Term
      properties:
        Term:
          description: Added term details.
          type: string
      type: object
    ListManagementImageLists_Create_request:
      properties:
        Description:
          description: Description of the list.
          type: string
        Metadata:
          additionalProperties:
            type: string
          description: Metadata of the list.
          type: object
        Name:
          description: Name of the list.
          type: string
      type: object
    Reviews_CreateJob_request:
      properties:
        ContentValue:
          description: Content to evaluate for a job.
          type: string
      required:
      - ContentValue
      type: object
    Reviews_CreateReviews_request_inner_Metadata_inner:
      properties:
        Key:
          description: Your key parameter.
          type: string
        Value:
          description: Your value parameter.
          type: string
      required:
      - Key
      - Value
      type: object
    Reviews_CreateReviews_request_inner:
      description: Schema items of the body.
      properties:
        CallbackEndpoint:
          description: Optional CallbackEndpoint.
          type: string
        Content:
          description: Content to review.
          type: string
        ContentId:
          description: Content Identifier.
          type: string
        Metadata:
          description: Optional metadata details.
          items:
            $ref: '#/components/schemas/Reviews_CreateReviews_request_inner_Metadata_inner'
          type: array
        Type:
          description: Type of the content.
          enum:
          - Image
          - Text
          type: string
      required:
      - Content
      - ContentId
      - Type
      type: object
    Reviews_AddVideoTranscriptModerationResult_request_inner_Terms_inner:
      properties:
        Index:
          description: Index of the word
          type: integer
        Term:
          description: Detected word.
          type: string
      required:
      - Index
      - Term
      type: object
    Reviews_AddVideoTranscriptModerationResult_request_inner:
      description: Schema items of the body.
      properties:
        Terms:
          description: Optional metadata details.
          items:
            $ref: '#/components/schemas/Reviews_AddVideoTranscriptModerationResult_request_inner_Terms_inner'
          type: array
        Timestamp:
          description: Timestamp of the image.
          type: string
      required:
      - Terms
      - Timestamp
      type: object
    Classification_Category1:
      description: The category1 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
        here</a> for more details on category classification.
      example:
        Score: 0.8008281904610115
      properties:
        Score:
          description: The category1 score.
          type: number
      type: object
    Classification_Category2:
      description: The category2 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
        here</a> for more details on category classification.
      example:
        Score: 6.027456183070403
      properties:
        Score:
          description: The category2 score.
          type: number
      type: object
    Classification_Category3:
      description: The category3 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
        here</a> for more details on category classification.
      example:
        Score: 1.4658129805029452
      properties:
        Score:
          description: The category3 score.
          type: number
      type: object
    Image_AdditionalInfo_inner:
      example:
        Value: Value
        Key: Key
      properties:
        Key:
          description: Key parameter.
          type: string
        Value:
          description: Value parameter.
          type: string
      type: object
    Terms_Paging:
      description: Paging details.
      example:
        Returned: 1
        Total: 5
        Limit: 0
        Offset: 6
      properties:
        Limit:
          description: Limit details.
          type: integer
        Offset:
          description: Offset details.
          type: integer
        Returned:
          description: Returned text details.
          type: integer
        Total:
          description: Total details.
          type: integer
      type: object
  securitySchemes:
    apim_key:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
x-ms-parameterized-host:
  hostTemplate: "{Endpoint}"
  parameters:
  - $ref: '#/parameters/Endpoint'
  useSchemePrefix: false
x-ms-paths:
  /contentmoderator/lists/v1.0/imagelists/{listId}/images?overload=stream:
    post:
      consumes:
      - image/gif
      - image/jpeg
      - image/png
      - image/bmp
      - image/tiff
      description: Add an image to the list with list Id equal to list Id passed.
      operationId: ListManagementImage_AddImageFileInput
      parameters:
      - $ref: '#/parameters/listId'
      - $ref: '#/parameters/tag'
      - $ref: '#/parameters/label'
      - $ref: '#/parameters/ImageStreamParameter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Image'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - ListManagementImage
  /contentmoderator/lists/v1.0/imagelists/{listId}/images?overload=url:
    post:
      consumes:
      - application/json
      description: Add an image to the list with list Id equal to list Id passed.
      operationId: ListManagementImage_AddImageUrlInput
      parameters:
      - $ref: '#/parameters/listId'
      - $ref: '#/parameters/tag'
      - $ref: '#/parameters/label'
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        type: string
      - $ref: '#/parameters/ImageUrlParameter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Image'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - ListManagementImage
      x-ms-examples:
        Add Image request:
          parameters:
            Content-Type: application/json
            Endpoint: "{Endpoint}"
            ImageUrl:
              DataRepresentation: URL
              Value: https://moderatorsampleimages.blob.core.windows.net/samples/img_300.jpg
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            label: test
            listId: "89003"
          responses:
            "200":
              body:
                AdditionalInfo:
                - Key: Source
                  Value: "81117"
                ContentId: "90102"
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ""
                TrackingId: WE_7be12265b8274274baea18e6b6b1b0_ContentModerator.Preview_e7dfcfe4-af54-2b1c-8a43-e1400c10893b9
              headers: {}
  /contentmoderator/moderate/v1.0/ProcessImage/Evaluate?overload=stream:
    post:
      consumes:
      - image/gif
      - image/jpeg
      - image/png
      - image/bmp
      - image/tiff
      description: Returns probabilities of the image containing racy or adult content.
      operationId: ImageModeration_EvaluateFileInput
      parameters:
      - $ref: '#/parameters/CacheImage'
      - $ref: '#/parameters/ImageStreamParameter'
      produces:
      - application/json
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/Evaluate'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - ImageModeration
  /contentmoderator/moderate/v1.0/ProcessImage/Evaluate?overload=url:
    post:
      consumes:
      - application/json
      description: Returns probabilities of the image containing racy or adult content.
      operationId: ImageModeration_EvaluateUrlInput
      parameters:
      - $ref: '#/parameters/CacheImage'
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        type: string
      - $ref: '#/parameters/ImageUrlParameter'
      produces:
      - application/json
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/Evaluate'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - ImageModeration
      x-ms-examples:
        Evaluate Image request:
          parameters:
            Content-Type: application/json
            Endpoint: "{Endpoint}"
            ImageUrl:
              DataRepresentation: URL
              Value: https://moderatorsampleimages.blob.core.windows.net/samples/sample.jpg
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
          responses:
            "200":
              body:
                AdultClassificationScore: 0.021854378283023834
                AdvancedInfo:
                - Key: ImageDownloadTimeInMs
                  Value: "2328"
                CacheID: c660dfa6-eba9-4950-aa58-a6967de57ea8_636422189473647994
                IsImageAdultClassified: false
                IsImageRacyClassified: false
                RacyClassificationScore: 0.045791395008563995
                Result: false
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ""
                TrackingId: SEA_ad975eeae1f24f81bebb40be0c3ba4fd_ContentModerator.Preview_c6ca58fc-dc30-4961-9526-e8bdfb3b3bf5
              headers: {}
  /contentmoderator/moderate/v1.0/ProcessImage/FindFaces?overload=stream:
    post:
      consumes:
      - image/gif
      - image/jpeg
      - image/png
      - image/bmp
      - image/tiff
      description: Returns the list of faces found.
      operationId: ImageModeration_FindFacesFileInput
      parameters:
      - $ref: '#/parameters/CacheImage'
      - $ref: '#/parameters/ImageStreamParameter'
      produces:
      - application/json
      responses:
        "200":
          description: The list of faces found.
          schema:
            $ref: '#/definitions/FoundFaces'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - ImageModeration
  /contentmoderator/moderate/v1.0/ProcessImage/FindFaces?overload=url:
    post:
      consumes:
      - application/json
      description: Returns the list of faces found.
      operationId: ImageModeration_FindFacesUrlInput
      parameters:
      - $ref: '#/parameters/CacheImage'
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        type: string
      - $ref: '#/parameters/ImageUrlParameter'
      produces:
      - application/json
      responses:
        "200":
          description: The list of faces found.
          schema:
            $ref: '#/definitions/FoundFaces'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - ImageModeration
      x-ms-examples:
        Find Faces request:
          parameters:
            Content-Type: application/json
            Endpoint: "{Endpoint}"
            ImageUrl:
              DataRepresentation: URL
              Value: https://moderatorsampleimages.blob.core.windows.net/samples/img_300.jpg
            Ocp-Apim-Subscription-Key: a79e5f9eeafa4f059ac507a93e1a9ff1
          responses:
            "200":
              body:
                AdvancedInfo: []
                Count: 1
                Faces:
                - Bottom: 82
                  Left: 80
                  Right: 118
                  Top: 44
                Result: true
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ""
                TrackingId: SEA_ad975eeae1f24f81bebb40be0c3ba4fd_ContentModerator.Preview_01158625-4fea-4dd5-8f21-5e2657ea2eee
              headers: {}
  /contentmoderator/moderate/v1.0/ProcessImage/Match?overload=stream:
    post:
      consumes:
      - image/gif
      - image/jpeg
      - image/png
      - image/bmp
      - image/tiff
      description: "Fuzzily match an image against one of your custom Image Lists.\
        \ You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\"\
        >this</a> API. \r\n\r\nReturns ID and tags of matching image.<br/>\r\n<br/>\r\
        \nNote: Refresh Index must be run on the corresponding Image List before additions\
        \ and removals are reflected in the response."
      operationId: ImageModeration_MatchFileInput
      parameters:
      - $ref: '#/parameters/listIdQueryParameter'
      - $ref: '#/parameters/CacheImage'
      - $ref: '#/parameters/ImageStreamParameter'
      produces:
      - application/json
      responses:
        "200":
          description: "Supported values for tags are:\r\n<ul>\r\n<li>101: Nudity</li>\r\
            \n<li>102: Sexual Content</li>\r\n<li>201: Alcohol</li>\r\n<li>202: Tobacco</li>\r\
            \n<li>203: Drugs</li>\r\n<li>301: Child Exploitation</li>\r\n<li>401:\
            \ Violence</li>\r\n<li>402: Weapons</li>\r\n<li>403: Gore</li>\r\n<li>501:\
            \ Profanity</li>\r\n<li>502: Vulgarity</li>\r\n</ul>."
          schema:
            $ref: '#/definitions/MatchResponse'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - ImageModeration
  /contentmoderator/moderate/v1.0/ProcessImage/Match?overload=url:
    post:
      consumes:
      - application/json
      description: "Fuzzily match an image against one of your custom Image Lists.\
        \ You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\"\
        >this</a> API. \r\n\r\nReturns ID and tags of matching image.<br/>\r\n<br/>\r\
        \nNote: Refresh Index must be run on the corresponding Image List before additions\
        \ and removals are reflected in the response."
      operationId: ImageModeration_MatchUrlInput
      parameters:
      - $ref: '#/parameters/listIdQueryParameter'
      - $ref: '#/parameters/CacheImage'
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        type: string
      - $ref: '#/parameters/ImageUrlParameter'
      produces:
      - application/json
      responses:
        "200":
          description: "Supported values for tags are:\r\n<ul>\r\n<li>101: Nudity</li>\r\
            \n<li>102: Sexual Content</li>\r\n<li>201: Alcohol</li>\r\n<li>202: Tobacco</li>\r\
            \n<li>203: Drugs</li>\r\n<li>301: Child Exploitation</li>\r\n<li>401:\
            \ Violence</li>\r\n<li>402: Weapons</li>\r\n<li>403: Gore</li>\r\n<li>501:\
            \ Profanity</li>\r\n<li>502: Vulgarity</li>\r\n</ul>."
          schema:
            $ref: '#/definitions/MatchResponse'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - ImageModeration
      x-ms-examples:
        Match Image request:
          parameters:
            Content-Type: application/json
            Endpoint: "{Endpoint}"
            ImageUrl:
              DataRepresentation: URL
              Value: https://moderatorsampleimages.blob.core.windows.net/samples/sample.jpg
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            cacheimage: true
            listId: "12345"
          responses:
            "200":
              body:
                CacheID: c660dfa6-eba9-4950-aa58-a6967de57ea8_636422189473647994
                IsMatch: true
                Matches:
                - Label: ImageA
                  MatchId: 89203
                  Score: 1
                  Source: "89117"
                  Tags: []
                - Label: ImageB
                  MatchId: 92708
                  Score: 1
                  Source: "89083"
                  Tags: []
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ""
                TrackingId: WE_7be19175b8274274baea9219e6b6b1b0_ContentModerator.Preview_44b1f691-35ee-4d49-a981-0d01d07f18d6
              headers: {}
  /contentmoderator/moderate/v1.0/ProcessImage/OCR?overload=stream:
    post:
      consumes:
      - image/gif
      - image/jpeg
      - image/png
      - image/bmp
      - image/tiff
      description: Returns any text found in the image for the language specified.
        If no language is specified in input then the detection defaults to English.
      operationId: ImageModeration_OCRFileInput
      parameters:
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/CacheImage'
      - $ref: '#/parameters/enhanced'
      - $ref: '#/parameters/ImageStreamParameter'
      produces:
      - application/json
      responses:
        "200":
          description: The found text and list of candidate text.
          schema:
            $ref: '#/definitions/OCR'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - ImageModeration
  /contentmoderator/moderate/v1.0/ProcessImage/OCR?overload=url:
    post:
      consumes:
      - application/json
      description: Returns any text found in the image for the language specified.
        If no language is specified in input then the detection defaults to English.
      operationId: ImageModeration_OCRUrlInput
      parameters:
      - $ref: '#/parameters/language'
      - $ref: '#/parameters/CacheImage'
      - $ref: '#/parameters/enhanced'
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        type: string
      - $ref: '#/parameters/ImageUrlParameter'
      produces:
      - application/json
      responses:
        "200":
          description: The found text and list of candidate text.
          schema:
            $ref: '#/definitions/OCR'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - ImageModeration
      x-ms-examples:
        Image OCR request:
          parameters:
            CacheImage: false
            Content-Type: application/json
            Endpoint: "{Endpoint}"
            ImageUrl:
              DataRepresentation: URL
              Value: https://moderatorsampleimages.blob.core.windows.net/samples/img_300.jpg
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            enhanced: false
            language: eng
          responses:
            "200":
              body:
                Candidates: []
                Language: eng
                Metadata:
                - Key: ImageDownloadTimeInMs
                  Value: "2239"
                - Key: ImageSizeInBytes
                  Value: "273405"
                Status:
                  Code: 3000
                  Description: OK
                  Exception: ""
                Text: "IF WE DID \r\nALL \r\nTHE THINGS \r\nWE ARE \r\nCAPABLE \r\n\
                  OF DOING, \r\nWE WOULD \r\nLITERALLY \r\nASTOUND \r\nOURSELVE \r\
                  \n"
                TrackingId: SEA_ad975eeae1f24f81bebb40be0c3ba4fd_ContentModerator.Preview_e68fa0d1-6c83-499d-958c-9abd96263e10
              headers: {}
  /contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames?overload=stream:
    post:
      consumes:
      - multipart/form-data
      description: "Use this method to add frames for a video review.Timescale: This\
        \ parameter is a factor which is used to convert the timestamp on a frame\
        \ into milliseconds. Timescale is provided in the output of the Content Moderator\
        \ video media processor on the Azure Media Services platform.Timescale in\
        \ the Video Moderation output is Ticks/Second."
      operationId: Reviews_AddVideoFrameStream
      parameters:
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        type: string
      - description: Your team name.
        in: path
        name: teamName
        required: true
        type: string
      - description: Id of the review.
        in: path
        name: reviewId
        required: true
        type: string
      - description: Timescale of the video .
        in: query
        name: timescale
        required: false
        type: integer
      - description: Zip file containing frame images.
        in: formData
        name: frameImageZip
        required: true
        type: file
      - description: Metadata of the frame.
        in: formData
        name: frameMetadata
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - Reviews
  /contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames?overload=url:
    post:
      consumes:
      - application/json
      description: "Use this method to add frames for a video review.Timescale: This\
        \ parameter is a factor which is used to convert the timestamp on a frame\
        \ into milliseconds. Timescale is provided in the output of the Content Moderator\
        \ video media processor on the Azure Media Services platform.Timescale in\
        \ the Video Moderation output is Ticks/Second."
      operationId: Reviews_AddVideoFrameUrl
      parameters:
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        type: string
      - $ref: '#/parameters/teamName'
      - $ref: '#/parameters/reviewId'
      - $ref: '#/parameters/timescale'
      - $ref: '#/parameters/videoFrameBody'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - Reviews
      x-ms-examples:
        Add video frame url input request:
          parameters:
            Content-Type: application/json
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            reviewId: 201711v18ea829372b14f9e9d382621e62429a9
            teamName: ModeratorTeam
            videoFrameBody:
            - FrameImage: https://ae01.alicdn.com/kf/HTB1QMvNMVXXXXbpapXXq6xXFXXXJ/Sexy-Europe-font-b-Racy-b-font-Lingerie-Lace-font-b-Red-b-font-Bow-Bride.jpg
              Metadata:
              - Key: apiScoreVal
                Value: "0.206"
              - Key: a
                Value: "False"
              Timestamp: "2334"
          responses:
            "204":
              headers: {}
  /contentmoderator/review/v1.0/teams/{teamName}/reviews?overload=video:
    post:
      consumes:
      - application/json
      description: "The reviews created would show up for Reviewers on your team.\
        \ As Reviewers complete reviewing, results of the Review would be POSTED (i.e.\
        \ HTTP POST) on the specified CallBackEndpoint.\r\n\r\n<h3>CallBack Schemas\
        \ </h3>\r\n<h4>Review Completion CallBack Sample</h4>\r\n<p>\r\n{<br/>\r\n\
        \  \"ReviewId\": \"<Review Id>\",<br/>\r\n  \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\"\
        ,<br/>\r\n  \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\n  \"CallBackType\"\
        : \"Review\",<br/>\r\n  \"ContentId\": \"<The ContentId that was specified\
        \ input>\",<br/>\r\n  \"Metadata\": {<br/>\r\n    \"adultscore\": \"0.xxx\"\
        ,<br/>\r\n    \"a\": \"False\",<br/>\r\n    \"racyscore\": \"0.xxx\",<br/>\r\
        \n    \"r\": \"True\"<br/>\r\n  },<br/>\r\n  \"ReviewerResultTags\": {<br/>\r\
        \n    \"a\": \"False\",<br/>\r\n    \"r\": \"True\"<br/>\r\n  }<br/>\r\n}<br/>\r\
        \n\r\n</p>."
      operationId: Reviews_CreateVideoReviews
      parameters:
      - description: The content type.
        in: header
        name: Content-Type
        required: true
        type: string
      - $ref: '#/parameters/teamName'
      - $ref: '#/parameters/subTeam'
      - $ref: '#/parameters/CreateVideoReviewsBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ReviewList'
        default:
          description: Error response.
          schema:
            $ref: '#/definitions/APIError'
      tags:
      - Reviews
      x-ms-examples:
        Create video review request:
          parameters:
            Content-Type: application/json
            CreateVideoReviewsBody:
            - CallbackEndpoint: ""
              Content: https://rvdevmediaservicetest.streaming.mediaservices.windows.net/6405af61-e9d7-42e9-ac1f-f18ec094dfcb/YouTube_chef_c.ism/manifest
              ContentId: sample video
              Metadata:
              - Key: apiScoreVal
                Value: "0.206"
              - Key: a
                Value: "False"
              - Key: racyScore
                Value: "0.151"
              - Key: r
                Value: "False"
              - Key: ExternalId
                Value: Video1.mp4
              Status: UnPublished
              Type: Video
              VideoFrames:
              - FrameImage: https://ae01.alicdn.com/kf/HTB1QMvNMVXXXXbpapXXq6xXFXXXJ/Sexy-Europe-font-b-Racy-b-font-Lingerie-Lace-font-b-Red-b-font-Bow-Bride.jpg
                Id: frm1
                Metadata:
                - Key: apiScoreVal
                  Value: "0.206"
                - Key: a
                  Value: "False"
                ReviewerResultTags: []
                Timestamp: "2334"
            Endpoint: "{Endpoint}"
            Ocp-Apim-Subscription-Key: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345
            subTeam: SubteamA
            teamName: ModeratorTeam
          responses:
            "200":
              body:
              - 201709i9srfj128775481f9955033096ddf
              headers: {}
x-original-swagger-version: "2.0"

