/**
 * Content Moderator Client
 * You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.    When using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB.   Text can be at most 1024 characters long.   If the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ContentModeratorClient);
  }
}(this, function(expect, ContentModeratorClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ContentModeratorClient.ReviewsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReviewsApi', function() {
    describe('reviewsAddVideoFrame', function() {
      it('should call reviewsAddVideoFrame successfully', function(done) {
        //uncomment below and update the code to test reviewsAddVideoFrame
        //instance.reviewsAddVideoFrame(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reviewsAddVideoTranscript', function() {
      it('should call reviewsAddVideoTranscript successfully', function(done) {
        //uncomment below and update the code to test reviewsAddVideoTranscript
        //instance.reviewsAddVideoTranscript(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reviewsAddVideoTranscriptModerationResult', function() {
      it('should call reviewsAddVideoTranscriptModerationResult successfully', function(done) {
        //uncomment below and update the code to test reviewsAddVideoTranscriptModerationResult
        //instance.reviewsAddVideoTranscriptModerationResult(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reviewsCreateJob', function() {
      it('should call reviewsCreateJob successfully', function(done) {
        //uncomment below and update the code to test reviewsCreateJob
        //instance.reviewsCreateJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reviewsCreateReviews', function() {
      it('should call reviewsCreateReviews successfully', function(done) {
        //uncomment below and update the code to test reviewsCreateReviews
        //instance.reviewsCreateReviews(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reviewsGetJobDetails', function() {
      it('should call reviewsGetJobDetails successfully', function(done) {
        //uncomment below and update the code to test reviewsGetJobDetails
        //instance.reviewsGetJobDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reviewsGetReview', function() {
      it('should call reviewsGetReview successfully', function(done) {
        //uncomment below and update the code to test reviewsGetReview
        //instance.reviewsGetReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reviewsGetVideoFrames', function() {
      it('should call reviewsGetVideoFrames successfully', function(done) {
        //uncomment below and update the code to test reviewsGetVideoFrames
        //instance.reviewsGetVideoFrames(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reviewsPublishVideoReview', function() {
      it('should call reviewsPublishVideoReview successfully', function(done) {
        //uncomment below and update the code to test reviewsPublishVideoReview
        //instance.reviewsPublishVideoReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
