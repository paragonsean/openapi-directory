/**
 * Content Moderator Client
 * You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.    When using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB.   Text can be at most 1024 characters long.   If the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ContentModeratorClient);
  }
}(this, function(expect, ContentModeratorClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ContentModeratorClient.ListManagementTermListsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ListManagementTermListsApi', function() {
    describe('listManagementTermListsCreate', function() {
      it('should call listManagementTermListsCreate successfully', function(done) {
        //uncomment below and update the code to test listManagementTermListsCreate
        //instance.listManagementTermListsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listManagementTermListsDelete', function() {
      it('should call listManagementTermListsDelete successfully', function(done) {
        //uncomment below and update the code to test listManagementTermListsDelete
        //instance.listManagementTermListsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listManagementTermListsGetAllTermLists', function() {
      it('should call listManagementTermListsGetAllTermLists successfully', function(done) {
        //uncomment below and update the code to test listManagementTermListsGetAllTermLists
        //instance.listManagementTermListsGetAllTermLists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listManagementTermListsGetDetails', function() {
      it('should call listManagementTermListsGetDetails successfully', function(done) {
        //uncomment below and update the code to test listManagementTermListsGetDetails
        //instance.listManagementTermListsGetDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listManagementTermListsRefreshIndex', function() {
      it('should call listManagementTermListsRefreshIndex successfully', function(done) {
        //uncomment below and update the code to test listManagementTermListsRefreshIndex
        //instance.listManagementTermListsRefreshIndex(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listManagementTermListsUpdate', function() {
      it('should call listManagementTermListsUpdate successfully', function(done) {
        //uncomment below and update the code to test listManagementTermListsUpdate
        //instance.listManagementTermListsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
