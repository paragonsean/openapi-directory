/**
 * Content Moderator Client
 * You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.    When using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB.   Text can be at most 1024 characters long.   If the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import APIError from './model/APIError';
import Address from './model/Address';
import Candidate from './model/Candidate';
import Classification from './model/Classification';
import ClassificationCategory1 from './model/ClassificationCategory1';
import ClassificationCategory2 from './model/ClassificationCategory2';
import ClassificationCategory3 from './model/ClassificationCategory3';
import DetectedLanguage from './model/DetectedLanguage';
import DetectedTerms from './model/DetectedTerms';
import Email from './model/Email';
import Error from './model/Error';
import Evaluate from './model/Evaluate';
import Face from './model/Face';
import FoundFaces from './model/FoundFaces';
import Frame from './model/Frame';
import Frames from './model/Frames';
import IPA from './model/IPA';
import Image from './model/Image';
import ImageAdditionalInfoInner from './model/ImageAdditionalInfoInner';
import ImageIds from './model/ImageIds';
import ImageList from './model/ImageList';
import Job from './model/Job';
import JobExecutionReportDetails from './model/JobExecutionReportDetails';
import JobId from './model/JobId';
import JobListResult from './model/JobListResult';
import KeyValuePair from './model/KeyValuePair';
import ListManagementImageListsCreateRequest from './model/ListManagementImageListsCreateRequest';
import Match from './model/Match';
import MatchResponse from './model/MatchResponse';
import OCR from './model/OCR';
import PII from './model/PII';
import Phone from './model/Phone';
import RefreshIndex from './model/RefreshIndex';
import Review from './model/Review';
import ReviewsAddVideoTranscriptModerationResultRequestInner from './model/ReviewsAddVideoTranscriptModerationResultRequestInner';
import ReviewsAddVideoTranscriptModerationResultRequestInnerTermsInner from './model/ReviewsAddVideoTranscriptModerationResultRequestInnerTermsInner';
import ReviewsCreateJobRequest from './model/ReviewsCreateJobRequest';
import ReviewsCreateReviewsRequestInner from './model/ReviewsCreateReviewsRequestInner';
import ReviewsCreateReviewsRequestInnerMetadataInner from './model/ReviewsCreateReviewsRequestInnerMetadataInner';
import SSN from './model/SSN';
import Screen from './model/Screen';
import Status from './model/Status';
import Tag from './model/Tag';
import TermList from './model/TermList';
import Terms from './model/Terms';
import TermsData from './model/TermsData';
import TermsInList from './model/TermsInList';
import TermsPaging from './model/TermsPaging';
import ImageModerationApi from './api/ImageModerationApi';
import ListManagementImageApi from './api/ListManagementImageApi';
import ListManagementImageListsApi from './api/ListManagementImageListsApi';
import ListManagementTermApi from './api/ListManagementTermApi';
import ListManagementTermListsApi from './api/ListManagementTermListsApi';
import ReviewsApi from './api/ReviewsApi';
import TextModerationApi from './api/TextModerationApi';


/**
* You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.    When using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB.   Text can be at most 1024 characters long.   If the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ContentModeratorClient = require('index'); // See note below*.
* var xxxSvc = new ContentModeratorClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ContentModeratorClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ContentModeratorClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ContentModeratorClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The APIError model constructor.
     * @property {module:model/APIError}
     */
    APIError,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The Candidate model constructor.
     * @property {module:model/Candidate}
     */
    Candidate,

    /**
     * The Classification model constructor.
     * @property {module:model/Classification}
     */
    Classification,

    /**
     * The ClassificationCategory1 model constructor.
     * @property {module:model/ClassificationCategory1}
     */
    ClassificationCategory1,

    /**
     * The ClassificationCategory2 model constructor.
     * @property {module:model/ClassificationCategory2}
     */
    ClassificationCategory2,

    /**
     * The ClassificationCategory3 model constructor.
     * @property {module:model/ClassificationCategory3}
     */
    ClassificationCategory3,

    /**
     * The DetectedLanguage model constructor.
     * @property {module:model/DetectedLanguage}
     */
    DetectedLanguage,

    /**
     * The DetectedTerms model constructor.
     * @property {module:model/DetectedTerms}
     */
    DetectedTerms,

    /**
     * The Email model constructor.
     * @property {module:model/Email}
     */
    Email,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The Evaluate model constructor.
     * @property {module:model/Evaluate}
     */
    Evaluate,

    /**
     * The Face model constructor.
     * @property {module:model/Face}
     */
    Face,

    /**
     * The FoundFaces model constructor.
     * @property {module:model/FoundFaces}
     */
    FoundFaces,

    /**
     * The Frame model constructor.
     * @property {module:model/Frame}
     */
    Frame,

    /**
     * The Frames model constructor.
     * @property {module:model/Frames}
     */
    Frames,

    /**
     * The IPA model constructor.
     * @property {module:model/IPA}
     */
    IPA,

    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image,

    /**
     * The ImageAdditionalInfoInner model constructor.
     * @property {module:model/ImageAdditionalInfoInner}
     */
    ImageAdditionalInfoInner,

    /**
     * The ImageIds model constructor.
     * @property {module:model/ImageIds}
     */
    ImageIds,

    /**
     * The ImageList model constructor.
     * @property {module:model/ImageList}
     */
    ImageList,

    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job,

    /**
     * The JobExecutionReportDetails model constructor.
     * @property {module:model/JobExecutionReportDetails}
     */
    JobExecutionReportDetails,

    /**
     * The JobId model constructor.
     * @property {module:model/JobId}
     */
    JobId,

    /**
     * The JobListResult model constructor.
     * @property {module:model/JobListResult}
     */
    JobListResult,

    /**
     * The KeyValuePair model constructor.
     * @property {module:model/KeyValuePair}
     */
    KeyValuePair,

    /**
     * The ListManagementImageListsCreateRequest model constructor.
     * @property {module:model/ListManagementImageListsCreateRequest}
     */
    ListManagementImageListsCreateRequest,

    /**
     * The Match model constructor.
     * @property {module:model/Match}
     */
    Match,

    /**
     * The MatchResponse model constructor.
     * @property {module:model/MatchResponse}
     */
    MatchResponse,

    /**
     * The OCR model constructor.
     * @property {module:model/OCR}
     */
    OCR,

    /**
     * The PII model constructor.
     * @property {module:model/PII}
     */
    PII,

    /**
     * The Phone model constructor.
     * @property {module:model/Phone}
     */
    Phone,

    /**
     * The RefreshIndex model constructor.
     * @property {module:model/RefreshIndex}
     */
    RefreshIndex,

    /**
     * The Review model constructor.
     * @property {module:model/Review}
     */
    Review,

    /**
     * The ReviewsAddVideoTranscriptModerationResultRequestInner model constructor.
     * @property {module:model/ReviewsAddVideoTranscriptModerationResultRequestInner}
     */
    ReviewsAddVideoTranscriptModerationResultRequestInner,

    /**
     * The ReviewsAddVideoTranscriptModerationResultRequestInnerTermsInner model constructor.
     * @property {module:model/ReviewsAddVideoTranscriptModerationResultRequestInnerTermsInner}
     */
    ReviewsAddVideoTranscriptModerationResultRequestInnerTermsInner,

    /**
     * The ReviewsCreateJobRequest model constructor.
     * @property {module:model/ReviewsCreateJobRequest}
     */
    ReviewsCreateJobRequest,

    /**
     * The ReviewsCreateReviewsRequestInner model constructor.
     * @property {module:model/ReviewsCreateReviewsRequestInner}
     */
    ReviewsCreateReviewsRequestInner,

    /**
     * The ReviewsCreateReviewsRequestInnerMetadataInner model constructor.
     * @property {module:model/ReviewsCreateReviewsRequestInnerMetadataInner}
     */
    ReviewsCreateReviewsRequestInnerMetadataInner,

    /**
     * The SSN model constructor.
     * @property {module:model/SSN}
     */
    SSN,

    /**
     * The Screen model constructor.
     * @property {module:model/Screen}
     */
    Screen,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The TermList model constructor.
     * @property {module:model/TermList}
     */
    TermList,

    /**
     * The Terms model constructor.
     * @property {module:model/Terms}
     */
    Terms,

    /**
     * The TermsData model constructor.
     * @property {module:model/TermsData}
     */
    TermsData,

    /**
     * The TermsInList model constructor.
     * @property {module:model/TermsInList}
     */
    TermsInList,

    /**
     * The TermsPaging model constructor.
     * @property {module:model/TermsPaging}
     */
    TermsPaging,

    /**
    * The ImageModerationApi service constructor.
    * @property {module:api/ImageModerationApi}
    */
    ImageModerationApi,

    /**
    * The ListManagementImageApi service constructor.
    * @property {module:api/ListManagementImageApi}
    */
    ListManagementImageApi,

    /**
    * The ListManagementImageListsApi service constructor.
    * @property {module:api/ListManagementImageListsApi}
    */
    ListManagementImageListsApi,

    /**
    * The ListManagementTermApi service constructor.
    * @property {module:api/ListManagementTermApi}
    */
    ListManagementTermApi,

    /**
    * The ListManagementTermListsApi service constructor.
    * @property {module:api/ListManagementTermListsApi}
    */
    ListManagementTermListsApi,

    /**
    * The ReviewsApi service constructor.
    * @property {module:api/ReviewsApi}
    */
    ReviewsApi,

    /**
    * The TextModerationApi service constructor.
    * @property {module:api/TextModerationApi}
    */
    TextModerationApi
};
