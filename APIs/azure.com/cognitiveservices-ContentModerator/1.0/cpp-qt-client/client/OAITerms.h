/**
 * Content Moderator Client
 * You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.    When using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB.   Text can be at most 1024 characters long.   If the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITerms.h
 *
 * Terms properties.
 */

#ifndef OAITerms_H
#define OAITerms_H

#include <QJsonObject>

#include "OAITermsData.h"
#include "OAITerms_Paging.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITermsData;
class OAITerms_Paging;

class OAITerms : public OAIObject {
public:
    OAITerms();
    OAITerms(QString json);
    ~OAITerms() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITermsData getData() const;
    void setData(const OAITermsData &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    OAITerms_Paging getPaging() const;
    void setPaging(const OAITerms_Paging &paging);
    bool is_paging_Set() const;
    bool is_paging_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITermsData m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    OAITerms_Paging m_paging;
    bool m_paging_isSet;
    bool m_paging_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITerms)

#endif // OAITerms_H
