/**
 * Content Moderator Client
 * You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.    When using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB.   Text can be at most 1024 characters long.   If the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITermsData.h
 *
 * All term Id response properties.
 */

#ifndef OAITermsData_H
#define OAITermsData_H

#include <QJsonObject>

#include "OAIStatus.h"
#include "OAITermsInList.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStatus;
class OAITermsInList;

class OAITermsData : public OAIObject {
public:
    OAITermsData();
    OAITermsData(QString json);
    ~OAITermsData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAITermsInList> getTerms() const;
    void setTerms(const QList<OAITermsInList> &terms);
    bool is_terms_Set() const;
    bool is_terms_Valid() const;

    QString getTrackingId() const;
    void setTrackingId(const QString &tracking_id);
    bool is_tracking_id_Set() const;
    bool is_tracking_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAITermsInList> m_terms;
    bool m_terms_isSet;
    bool m_terms_isValid;

    QString m_tracking_id;
    bool m_tracking_id_isSet;
    bool m_tracking_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITermsData)

#endif // OAITermsData_H
