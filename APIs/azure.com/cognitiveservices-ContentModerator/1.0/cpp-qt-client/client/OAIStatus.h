/**
 * Content Moderator Client
 * You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.    When using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB.   Text can be at most 1024 characters long.   If the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStatus.h
 *
 * Status properties.
 */

#ifndef OAIStatus_H
#define OAIStatus_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStatus : public OAIObject {
public:
    OAIStatus();
    OAIStatus(QString json);
    ~OAIStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCode() const;
    void setCode(const qint32 &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getException() const;
    void setException(const QString &exception);
    bool is_exception_Set() const;
    bool is_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_exception;
    bool m_exception_isSet;
    bool m_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStatus)

#endif // OAIStatus_H
