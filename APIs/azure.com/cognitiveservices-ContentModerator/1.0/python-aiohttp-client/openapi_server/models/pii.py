# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.email import Email
from openapi_server.models.ipa import IPA
from openapi_server.models.phone import Phone
from openapi_server.models.ssn import SSN
from openapi_server import util


class PII(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: List[Address]=None, email: List[Email]=None, ipa: List[IPA]=None, phone: List[Phone]=None, ssn: List[SSN]=None):
        """PII - a model defined in OpenAPI

        :param address: The address of this PII.
        :param email: The email of this PII.
        :param ipa: The ipa of this PII.
        :param phone: The phone of this PII.
        :param ssn: The ssn of this PII.
        """
        self.openapi_types = {
            'address': List[Address],
            'email': List[Email],
            'ipa': List[IPA],
            'phone': List[Phone],
            'ssn': List[SSN]
        }

        self.attribute_map = {
            'address': 'Address',
            'email': 'Email',
            'ipa': 'IPA',
            'phone': 'Phone',
            'ssn': 'SSN'
        }

        self._address = address
        self._email = email
        self._ipa = ipa
        self._phone = phone
        self._ssn = ssn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PII':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PII of this PII.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this PII.


        :return: The address of this PII.
        :rtype: List[Address]
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this PII.


        :param address: The address of this PII.
        :type address: List[Address]
        """

        self._address = address

    @property
    def email(self):
        """Gets the email of this PII.


        :return: The email of this PII.
        :rtype: List[Email]
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this PII.


        :param email: The email of this PII.
        :type email: List[Email]
        """

        self._email = email

    @property
    def ipa(self):
        """Gets the ipa of this PII.


        :return: The ipa of this PII.
        :rtype: List[IPA]
        """
        return self._ipa

    @ipa.setter
    def ipa(self, ipa):
        """Sets the ipa of this PII.


        :param ipa: The ipa of this PII.
        :type ipa: List[IPA]
        """

        self._ipa = ipa

    @property
    def phone(self):
        """Gets the phone of this PII.


        :return: The phone of this PII.
        :rtype: List[Phone]
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this PII.


        :param phone: The phone of this PII.
        :type phone: List[Phone]
        """

        self._phone = phone

    @property
    def ssn(self):
        """Gets the ssn of this PII.


        :return: The ssn of this PII.
        :rtype: List[SSN]
        """
        return self._ssn

    @ssn.setter
    def ssn(self, ssn):
        """Sets the ssn of this PII.


        :param ssn: The ssn of this PII.
        :type ssn: List[SSN]
        """

        self._ssn = ssn
