# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TermsPaging(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, limit: int=None, offset: int=None, returned: int=None, total: int=None):
        """TermsPaging - a model defined in OpenAPI

        :param limit: The limit of this TermsPaging.
        :param offset: The offset of this TermsPaging.
        :param returned: The returned of this TermsPaging.
        :param total: The total of this TermsPaging.
        """
        self.openapi_types = {
            'limit': int,
            'offset': int,
            'returned': int,
            'total': int
        }

        self.attribute_map = {
            'limit': 'Limit',
            'offset': 'Offset',
            'returned': 'Returned',
            'total': 'Total'
        }

        self._limit = limit
        self._offset = offset
        self._returned = returned
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TermsPaging':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Terms_Paging of this TermsPaging.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def limit(self):
        """Gets the limit of this TermsPaging.

        Limit details.

        :return: The limit of this TermsPaging.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this TermsPaging.

        Limit details.

        :param limit: The limit of this TermsPaging.
        :type limit: int
        """

        self._limit = limit

    @property
    def offset(self):
        """Gets the offset of this TermsPaging.

        Offset details.

        :return: The offset of this TermsPaging.
        :rtype: int
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this TermsPaging.

        Offset details.

        :param offset: The offset of this TermsPaging.
        :type offset: int
        """

        self._offset = offset

    @property
    def returned(self):
        """Gets the returned of this TermsPaging.

        Returned text details.

        :return: The returned of this TermsPaging.
        :rtype: int
        """
        return self._returned

    @returned.setter
    def returned(self, returned):
        """Sets the returned of this TermsPaging.

        Returned text details.

        :param returned: The returned of this TermsPaging.
        :type returned: int
        """

        self._returned = returned

    @property
    def total(self):
        """Gets the total of this TermsPaging.

        Total details.

        :return: The total of this TermsPaging.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this TermsPaging.

        Total details.

        :param total: The total of this TermsPaging.
        :type total: int
        """

        self._total = total
