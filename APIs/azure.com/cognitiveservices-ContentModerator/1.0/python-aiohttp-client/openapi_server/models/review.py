# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key_value_pair import KeyValuePair
from openapi_server import util


class Review(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, callback_endpoint: str=None, content: str=None, content_id: str=None, created_by: str=None, metadata: List[KeyValuePair]=None, review_id: str=None, reviewer_result_tags: List[KeyValuePair]=None, status: str=None, sub_team: str=None, type: str=None):
        """Review - a model defined in OpenAPI

        :param callback_endpoint: The callback_endpoint of this Review.
        :param content: The content of this Review.
        :param content_id: The content_id of this Review.
        :param created_by: The created_by of this Review.
        :param metadata: The metadata of this Review.
        :param review_id: The review_id of this Review.
        :param reviewer_result_tags: The reviewer_result_tags of this Review.
        :param status: The status of this Review.
        :param sub_team: The sub_team of this Review.
        :param type: The type of this Review.
        """
        self.openapi_types = {
            'callback_endpoint': str,
            'content': str,
            'content_id': str,
            'created_by': str,
            'metadata': List[KeyValuePair],
            'review_id': str,
            'reviewer_result_tags': List[KeyValuePair],
            'status': str,
            'sub_team': str,
            'type': str
        }

        self.attribute_map = {
            'callback_endpoint': 'CallbackEndpoint',
            'content': 'Content',
            'content_id': 'ContentId',
            'created_by': 'CreatedBy',
            'metadata': 'Metadata',
            'review_id': 'ReviewId',
            'reviewer_result_tags': 'ReviewerResultTags',
            'status': 'Status',
            'sub_team': 'SubTeam',
            'type': 'Type'
        }

        self._callback_endpoint = callback_endpoint
        self._content = content
        self._content_id = content_id
        self._created_by = created_by
        self._metadata = metadata
        self._review_id = review_id
        self._reviewer_result_tags = reviewer_result_tags
        self._status = status
        self._sub_team = sub_team
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Review':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Review of this Review.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callback_endpoint(self):
        """Gets the callback_endpoint of this Review.

        The callback endpoint.

        :return: The callback_endpoint of this Review.
        :rtype: str
        """
        return self._callback_endpoint

    @callback_endpoint.setter
    def callback_endpoint(self, callback_endpoint):
        """Sets the callback_endpoint of this Review.

        The callback endpoint.

        :param callback_endpoint: The callback_endpoint of this Review.
        :type callback_endpoint: str
        """

        self._callback_endpoint = callback_endpoint

    @property
    def content(self):
        """Gets the content of this Review.

        The content value.

        :return: The content of this Review.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this Review.

        The content value.

        :param content: The content of this Review.
        :type content: str
        """

        self._content = content

    @property
    def content_id(self):
        """Gets the content_id of this Review.

        Id of the content.

        :return: The content_id of this Review.
        :rtype: str
        """
        return self._content_id

    @content_id.setter
    def content_id(self, content_id):
        """Sets the content_id of this Review.

        Id of the content.

        :param content_id: The content_id of this Review.
        :type content_id: str
        """

        self._content_id = content_id

    @property
    def created_by(self):
        """Gets the created_by of this Review.

        The reviewer name.

        :return: The created_by of this Review.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Review.

        The reviewer name.

        :param created_by: The created_by of this Review.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def metadata(self):
        """Gets the metadata of this Review.

        Array of KeyValue.

        :return: The metadata of this Review.
        :rtype: List[KeyValuePair]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this Review.

        Array of KeyValue.

        :param metadata: The metadata of this Review.
        :type metadata: List[KeyValuePair]
        """

        self._metadata = metadata

    @property
    def review_id(self):
        """Gets the review_id of this Review.

        Id of the review.

        :return: The review_id of this Review.
        :rtype: str
        """
        return self._review_id

    @review_id.setter
    def review_id(self, review_id):
        """Sets the review_id of this Review.

        Id of the review.

        :param review_id: The review_id of this Review.
        :type review_id: str
        """

        self._review_id = review_id

    @property
    def reviewer_result_tags(self):
        """Gets the reviewer_result_tags of this Review.

        Array of KeyValue with Reviewer set Tags.

        :return: The reviewer_result_tags of this Review.
        :rtype: List[KeyValuePair]
        """
        return self._reviewer_result_tags

    @reviewer_result_tags.setter
    def reviewer_result_tags(self, reviewer_result_tags):
        """Sets the reviewer_result_tags of this Review.

        Array of KeyValue with Reviewer set Tags.

        :param reviewer_result_tags: The reviewer_result_tags of this Review.
        :type reviewer_result_tags: List[KeyValuePair]
        """

        self._reviewer_result_tags = reviewer_result_tags

    @property
    def status(self):
        """Gets the status of this Review.

        The status string (<Pending, Complete>).

        :return: The status of this Review.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Review.

        The status string (<Pending, Complete>).

        :param status: The status of this Review.
        :type status: str
        """

        self._status = status

    @property
    def sub_team(self):
        """Gets the sub_team of this Review.

        Name of the subteam.

        :return: The sub_team of this Review.
        :rtype: str
        """
        return self._sub_team

    @sub_team.setter
    def sub_team(self, sub_team):
        """Sets the sub_team of this Review.

        Name of the subteam.

        :param sub_team: The sub_team of this Review.
        :type sub_team: str
        """

        self._sub_team = sub_team

    @property
    def type(self):
        """Gets the type of this Review.

        The type of content.

        :return: The type of this Review.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Review.

        The type of content.

        :param type: The type of this Review.
        :type type: str
        """

        self._type = type
