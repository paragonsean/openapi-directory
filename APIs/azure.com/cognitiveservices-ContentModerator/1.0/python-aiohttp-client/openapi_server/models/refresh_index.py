# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class RefreshIndex(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advanced_info: List[Dict[str, str]]=None, content_source_id: str=None, is_update_success: bool=None, status: Status=None, tracking_id: str=None):
        """RefreshIndex - a model defined in OpenAPI

        :param advanced_info: The advanced_info of this RefreshIndex.
        :param content_source_id: The content_source_id of this RefreshIndex.
        :param is_update_success: The is_update_success of this RefreshIndex.
        :param status: The status of this RefreshIndex.
        :param tracking_id: The tracking_id of this RefreshIndex.
        """
        self.openapi_types = {
            'advanced_info': List[Dict[str, str]],
            'content_source_id': str,
            'is_update_success': bool,
            'status': Status,
            'tracking_id': str
        }

        self.attribute_map = {
            'advanced_info': 'AdvancedInfo',
            'content_source_id': 'ContentSourceId',
            'is_update_success': 'IsUpdateSuccess',
            'status': 'Status',
            'tracking_id': 'TrackingId'
        }

        self._advanced_info = advanced_info
        self._content_source_id = content_source_id
        self._is_update_success = is_update_success
        self._status = status
        self._tracking_id = tracking_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RefreshIndex':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RefreshIndex of this RefreshIndex.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advanced_info(self):
        """Gets the advanced_info of this RefreshIndex.

        Advanced info list.

        :return: The advanced_info of this RefreshIndex.
        :rtype: List[Dict[str, str]]
        """
        return self._advanced_info

    @advanced_info.setter
    def advanced_info(self, advanced_info):
        """Sets the advanced_info of this RefreshIndex.

        Advanced info list.

        :param advanced_info: The advanced_info of this RefreshIndex.
        :type advanced_info: List[Dict[str, str]]
        """

        self._advanced_info = advanced_info

    @property
    def content_source_id(self):
        """Gets the content_source_id of this RefreshIndex.

        Content source Id.

        :return: The content_source_id of this RefreshIndex.
        :rtype: str
        """
        return self._content_source_id

    @content_source_id.setter
    def content_source_id(self, content_source_id):
        """Sets the content_source_id of this RefreshIndex.

        Content source Id.

        :param content_source_id: The content_source_id of this RefreshIndex.
        :type content_source_id: str
        """

        self._content_source_id = content_source_id

    @property
    def is_update_success(self):
        """Gets the is_update_success of this RefreshIndex.

        Update success status.

        :return: The is_update_success of this RefreshIndex.
        :rtype: bool
        """
        return self._is_update_success

    @is_update_success.setter
    def is_update_success(self, is_update_success):
        """Sets the is_update_success of this RefreshIndex.

        Update success status.

        :param is_update_success: The is_update_success of this RefreshIndex.
        :type is_update_success: bool
        """

        self._is_update_success = is_update_success

    @property
    def status(self):
        """Gets the status of this RefreshIndex.


        :return: The status of this RefreshIndex.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RefreshIndex.


        :param status: The status of this RefreshIndex.
        :type status: Status
        """

        self._status = status

    @property
    def tracking_id(self):
        """Gets the tracking_id of this RefreshIndex.

        Tracking Id.

        :return: The tracking_id of this RefreshIndex.
        :rtype: str
        """
        return self._tracking_id

    @tracking_id.setter
    def tracking_id(self, tracking_id):
        """Sets the tracking_id of this RefreshIndex.

        Tracking Id.

        :param tracking_id: The tracking_id of this RefreshIndex.
        :type tracking_id: str
        """

        self._tracking_id = tracking_id
