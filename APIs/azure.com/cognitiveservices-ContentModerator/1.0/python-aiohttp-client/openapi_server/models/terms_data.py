# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server.models.terms_in_list import TermsInList
from openapi_server import util


class TermsData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, language: str=None, status: Status=None, terms: List[TermsInList]=None, tracking_id: str=None):
        """TermsData - a model defined in OpenAPI

        :param language: The language of this TermsData.
        :param status: The status of this TermsData.
        :param terms: The terms of this TermsData.
        :param tracking_id: The tracking_id of this TermsData.
        """
        self.openapi_types = {
            'language': str,
            'status': Status,
            'terms': List[TermsInList],
            'tracking_id': str
        }

        self.attribute_map = {
            'language': 'Language',
            'status': 'Status',
            'terms': 'Terms',
            'tracking_id': 'TrackingId'
        }

        self._language = language
        self._status = status
        self._terms = terms
        self._tracking_id = tracking_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TermsData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TermsData of this TermsData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def language(self):
        """Gets the language of this TermsData.

        Language of the terms.

        :return: The language of this TermsData.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this TermsData.

        Language of the terms.

        :param language: The language of this TermsData.
        :type language: str
        """

        self._language = language

    @property
    def status(self):
        """Gets the status of this TermsData.


        :return: The status of this TermsData.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TermsData.


        :param status: The status of this TermsData.
        :type status: Status
        """

        self._status = status

    @property
    def terms(self):
        """Gets the terms of this TermsData.

        List of terms.

        :return: The terms of this TermsData.
        :rtype: List[TermsInList]
        """
        return self._terms

    @terms.setter
    def terms(self, terms):
        """Sets the terms of this TermsData.

        List of terms.

        :param terms: The terms of this TermsData.
        :type terms: List[TermsInList]
        """

        self._terms = terms

    @property
    def tracking_id(self):
        """Gets the tracking_id of this TermsData.

        Tracking Id.

        :return: The tracking_id of this TermsData.
        :rtype: str
        """
        return self._tracking_id

    @tracking_id.setter
    def tracking_id(self, tracking_id):
        """Sets the tracking_id of this TermsData.

        Tracking Id.

        :param tracking_id: The tracking_id of this TermsData.
        :type tracking_id: str
        """

        self._tracking_id = tracking_id
