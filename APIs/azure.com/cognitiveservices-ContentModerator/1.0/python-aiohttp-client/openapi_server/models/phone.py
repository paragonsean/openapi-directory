# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Phone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_code: str=None, index: int=None, text: str=None):
        """Phone - a model defined in OpenAPI

        :param country_code: The country_code of this Phone.
        :param index: The index of this Phone.
        :param text: The text of this Phone.
        """
        self.openapi_types = {
            'country_code': str,
            'index': int,
            'text': str
        }

        self.attribute_map = {
            'country_code': 'CountryCode',
            'index': 'Index',
            'text': 'Text'
        }

        self._country_code = country_code
        self._index = index
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Phone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Phone of this Phone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_code(self):
        """Gets the country_code of this Phone.

        CountryCode of the detected Phone number.

        :return: The country_code of this Phone.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this Phone.

        CountryCode of the detected Phone number.

        :param country_code: The country_code of this Phone.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def index(self):
        """Gets the index of this Phone.

        Index(Location) of the Phone number in the input text content.

        :return: The index of this Phone.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this Phone.

        Index(Location) of the Phone number in the input text content.

        :param index: The index of this Phone.
        :type index: int
        """

        self._index = index

    @property
    def text(self):
        """Gets the text of this Phone.

        Detected Phone number.

        :return: The text of this Phone.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Phone.

        Detected Phone number.

        :param text: The text of this Phone.
        :type text: str
        """

        self._text = text
