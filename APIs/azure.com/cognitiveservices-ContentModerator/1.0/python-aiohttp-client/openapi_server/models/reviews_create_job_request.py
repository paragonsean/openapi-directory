# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReviewsCreateJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_value: str=None):
        """ReviewsCreateJobRequest - a model defined in OpenAPI

        :param content_value: The content_value of this ReviewsCreateJobRequest.
        """
        self.openapi_types = {
            'content_value': str
        }

        self.attribute_map = {
            'content_value': 'ContentValue'
        }

        self._content_value = content_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReviewsCreateJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Reviews_CreateJob_request of this ReviewsCreateJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_value(self):
        """Gets the content_value of this ReviewsCreateJobRequest.

        Content to evaluate for a job.

        :return: The content_value of this ReviewsCreateJobRequest.
        :rtype: str
        """
        return self._content_value

    @content_value.setter
    def content_value(self, content_value):
        """Sets the content_value of this ReviewsCreateJobRequest.

        Content to evaluate for a job.

        :param content_value: The content_value of this ReviewsCreateJobRequest.
        :type content_value: str
        """
        if content_value is None:
            raise ValueError("Invalid value for `content_value`, must not be `None`")

        self._content_value = content_value
