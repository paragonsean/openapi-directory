# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key_value_pair import KeyValuePair
from openapi_server.models.tag import Tag
from openapi_server import util


class Frame(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, frame_image: str=None, metadata: List[KeyValuePair]=None, reviewer_result_tags: List[Tag]=None, timestamp: str=None):
        """Frame - a model defined in OpenAPI

        :param frame_image: The frame_image of this Frame.
        :param metadata: The metadata of this Frame.
        :param reviewer_result_tags: The reviewer_result_tags of this Frame.
        :param timestamp: The timestamp of this Frame.
        """
        self.openapi_types = {
            'frame_image': str,
            'metadata': List[KeyValuePair],
            'reviewer_result_tags': List[Tag],
            'timestamp': str
        }

        self.attribute_map = {
            'frame_image': 'FrameImage',
            'metadata': 'Metadata',
            'reviewer_result_tags': 'ReviewerResultTags',
            'timestamp': 'Timestamp'
        }

        self._frame_image = frame_image
        self._metadata = metadata
        self._reviewer_result_tags = reviewer_result_tags
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Frame':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Frame of this Frame.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def frame_image(self):
        """Gets the frame_image of this Frame.

        Frame image.

        :return: The frame_image of this Frame.
        :rtype: str
        """
        return self._frame_image

    @frame_image.setter
    def frame_image(self, frame_image):
        """Sets the frame_image of this Frame.

        Frame image.

        :param frame_image: The frame_image of this Frame.
        :type frame_image: str
        """

        self._frame_image = frame_image

    @property
    def metadata(self):
        """Gets the metadata of this Frame.

        Array of KeyValue.

        :return: The metadata of this Frame.
        :rtype: List[KeyValuePair]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this Frame.

        Array of KeyValue.

        :param metadata: The metadata of this Frame.
        :type metadata: List[KeyValuePair]
        """

        self._metadata = metadata

    @property
    def reviewer_result_tags(self):
        """Gets the reviewer_result_tags of this Frame.

        Reviewer result tags.

        :return: The reviewer_result_tags of this Frame.
        :rtype: List[Tag]
        """
        return self._reviewer_result_tags

    @reviewer_result_tags.setter
    def reviewer_result_tags(self, reviewer_result_tags):
        """Sets the reviewer_result_tags of this Frame.

        Reviewer result tags.

        :param reviewer_result_tags: The reviewer_result_tags of this Frame.
        :type reviewer_result_tags: List[Tag]
        """

        self._reviewer_result_tags = reviewer_result_tags

    @property
    def timestamp(self):
        """Gets the timestamp of this Frame.

        Timestamp of the frame.

        :return: The timestamp of this Frame.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this Frame.

        Timestamp of the frame.

        :param timestamp: The timestamp of this Frame.
        :type timestamp: str
        """

        self._timestamp = timestamp
