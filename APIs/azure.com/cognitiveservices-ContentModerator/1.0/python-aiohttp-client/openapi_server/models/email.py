# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Email(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detected: str=None, index: int=None, sub_type: str=None, text: str=None):
        """Email - a model defined in OpenAPI

        :param detected: The detected of this Email.
        :param index: The index of this Email.
        :param sub_type: The sub_type of this Email.
        :param text: The text of this Email.
        """
        self.openapi_types = {
            'detected': str,
            'index': int,
            'sub_type': str,
            'text': str
        }

        self.attribute_map = {
            'detected': 'Detected',
            'index': 'Index',
            'sub_type': 'SubType',
            'text': 'Text'
        }

        self._detected = detected
        self._index = index
        self._sub_type = sub_type
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Email':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Email of this Email.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detected(self):
        """Gets the detected of this Email.

        Detected Email Address from the input text content.

        :return: The detected of this Email.
        :rtype: str
        """
        return self._detected

    @detected.setter
    def detected(self, detected):
        """Sets the detected of this Email.

        Detected Email Address from the input text content.

        :param detected: The detected of this Email.
        :type detected: str
        """

        self._detected = detected

    @property
    def index(self):
        """Gets the index of this Email.

        Index(Location) of the Email address in the input text content.

        :return: The index of this Email.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this Email.

        Index(Location) of the Email address in the input text content.

        :param index: The index of this Email.
        :type index: int
        """

        self._index = index

    @property
    def sub_type(self):
        """Gets the sub_type of this Email.

        Subtype of the detected Email Address.

        :return: The sub_type of this Email.
        :rtype: str
        """
        return self._sub_type

    @sub_type.setter
    def sub_type(self, sub_type):
        """Sets the sub_type of this Email.

        Subtype of the detected Email Address.

        :param sub_type: The sub_type of this Email.
        :type sub_type: str
        """

        self._sub_type = sub_type

    @property
    def text(self):
        """Gets the text of this Email.

        Email Address in the input text content.

        :return: The text of this Email.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Email.

        Email Address in the input text content.

        :param text: The text of this Email.
        :type text: str
        """

        self._text = text
