/*
 * MySQLManagementClient
 * The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files, encryption keys, active directory administrator and configurations.
 *
 * The version of the OpenAPI document: 2020-01-01-privatepreview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.ServerKey;
import org.openapitools.client.model.ServerKeyListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerKeysApi
 */
@Disabled
public class ServerKeysApiTest {

    private final ServerKeysApi api = new ServerKeysApi();

    /**
     * Creates or updates a MySQL Server key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverKeysCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String keyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ServerKey parameters = null;
        ServerKey response = api.serverKeysCreateOrUpdate(resourceGroupName, serverName, keyName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the MySQL Server key with the given name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverKeysDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String keyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.serverKeysDelete(resourceGroupName, serverName, keyName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a MySQL Server key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverKeysGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String keyName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ServerKey response = api.serverKeysGet(resourceGroupName, serverName, keyName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of  Server keys.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverKeysListByInstanceTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ServerKeyListResult response = api.serverKeysListByInstance(resourceGroupName, serverName, subscriptionId, apiVersion);
        // TODO: test validations
    }

}
