openapi: 3.0.1
info:
  description: Role based access control provides you a way to apply granular level
    policy administration down to individual resources or resource groups. These operations
    enable you to manage role definitions and role assignments. A role definition
    describes the set of actions that can be performed on resources. A role assignment
    grants access to Azure Active Directory users.
  title: AuthorizationManagementClient
  version: 2017-10-01-preview
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/authorization/resource-manager/Microsoft.Authorization/preview/2017-10-01-preview/authorization-RACalls.json
    version: "2.0"
  x-providerName: azure.com
  x-serviceName: authorization-authorization-RACalls
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments:
    get:
      description: Gets all role assignments for the subscription.
      operationId: RoleAssignments_List
      parameters:
      - description: "The filter to apply on the operation. Use $filter=atScope()\
          \ to return all role assignments at or above the scope. Use $filter=principalId\
          \ eq {id} to return all role assignments at, above or below the scope for\
          \ the specified principal."
        in: query
        name: $filter
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
          description: OK - Returns an array of role assignments.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2017-10-01-preview
            subscriptionId: subId
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                  name: raId
                  properties:
                    canDelegate: false
                    principalId: Pid
                    roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                    scope: /subscriptions/subId/resourcegroups/rgname
                  type: Microsoft.Authorization/roleAssignments
      x-ms-odata: '#/definitions/RoleAssignmentFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments:
    get:
      description: Gets role assignments for a resource group.
      operationId: RoleAssignments_ListForResourceGroup
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: "The filter to apply on the operation. Use $filter=atScope()\
          \ to return all role assignments at or above the scope. Use $filter=principalId\
          \ eq {id} to return all role assignments at, above or below the scope for\
          \ the specified principal."
        in: query
        name: $filter
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
          description: OK - Returns an array of role assignments.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2017-10-01-preview
            resourceGroupName: rgname
            subscriptionId: subId
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                  name: raId
                  properties:
                    canDelegate: false
                    principalId: Pid
                    roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                    scope: /subscriptions/subId/resourcegroups/rgname
                  type: Microsoft.Authorization/roleAssignments
      x-ms-odata: '#/definitions/RoleAssignmentFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments
  : get:
      description: Gets role assignments for a resource.
      operationId: RoleAssignments_ListForResource
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The namespace of the resource provider.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The parent resource identity.
        in: path
        name: parentResourcePath
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The resource type of the resource.
        in: path
        name: resourceType
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the resource to get role assignments for.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      - description: "The filter to apply on the operation. Use $filter=atScope()\
          \ to return all role assignments at or above the scope. Use $filter=principalId\
          \ eq {id} to return all role assignments at, above or below the scope for\
          \ the specified principal."
        in: query
        name: $filter
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
          description: OK - Returns an array of role assignments.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2017-10-01-preview
            parentResourcePath: parentResourcePath
            resourceGroupName: rgname
            resourceName: resourceName
            resourceProviderNamespace: resourceProviderNamespace
            resourceType: resourceType
            subscriptionId: subId
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                  name: raId
                  properties:
                    canDelegate: false
                    principalId: Pid
                    roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                    scope: /subscriptions/subId/resourcegroups/rgname
                  type: Microsoft.Authorization/roleAssignments
      x-ms-odata: '#/definitions/RoleAssignmentFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /{roleAssignmentId}:
    delete:
      description: Deletes a role assignment.
      operationId: RoleAssignments_DeleteById
      parameters:
      - description: The ID of the role assignment to delete.
        in: path
        name: roleAssignmentId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
          description: OK - Returns information about the role assignment.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2017-10-01-preview
            roleAssignmentId: roleAssignmentId
            scope: scope
          responses:
            "200":
              body:
                id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                name: roleassignmentId
                properties:
                  canDelegate: false
                  principalId: Pid
                  roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                  scope: /subscriptions/subId/resourcegroups/rgname
                type: Microsoft.Authorization/roleAssignments
      x-accepts:
      - application/json
    get:
      description: Gets a role assignment by ID.
      operationId: RoleAssignments_GetById
      parameters:
      - description: The ID of the role assignment to get.
        in: path
        name: roleAssignmentId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
          description: OK - Returns the role assignment.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2017-10-01-preview
            roleAssignmentId: roleassignmentId
          responses:
            "200":
              body:
                id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                name: roleassignmentId
                properties:
                  canDelegate: false
                  principalId: Pid
                  roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                  scope: /subscriptions/subId/resourcegroups/rgname
                type: Microsoft.Authorization/roleAssignments
      x-accepts:
      - application/json
    put:
      description: Creates a role assignment by ID.
      operationId: RoleAssignments_CreateById
      parameters:
      - description: The ID of the role assignment to create.
        in: path
        name: roleAssignmentId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCreateParameters'
        description: Parameters for the role assignment.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
          description: Created - Returns the role assignment.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2017-10-01-preview
            parameters:
              properties:
                canDelegate: false
                principalId: d93a38bc-d029-4160-bfb0-fbda779ac214
                roleDefinitionId: /subscriptions/4004a9fd-d58e-48dc-aeb2-4a4aec58606f/providers/Microsoft.Authorization/roleDefinitions/de139f84-1756-47ae-9be6-808fbbe84772
            roleAssignmentId: roleAssignmentId
            scope: scope
          responses:
            "201":
              body:
                id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                name: roleassignmentId
                properties:
                  canDelegate: false
                  principalId: Pid
                  roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                  scope: /subscriptions/subId/resourcegroups/rgname
                type: Microsoft.Authorization/roleAssignments
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /{scope}/providers/Microsoft.Authorization/roleAssignments:
    get:
      description: Gets role assignments for a scope.
      operationId: RoleAssignments_ListForScope
      parameters:
      - description: The scope of the role assignments.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: "The filter to apply on the operation. Use $filter=atScope()\
          \ to return all role assignments at or above the scope. Use $filter=principalId\
          \ eq {id} to return all role assignments at, above or below the scope for\
          \ the specified principal."
        in: query
        name: $filter
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
          description: OK - Returns an array of role assignments.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2017-10-01-preview
            scope: scope
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                  name: raId
                  properties:
                    canDelegate: false
                    principalId: Pid
                    roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                    scope: /subscriptions/subId/resourcegroups/rgname
                  type: Microsoft.Authorization/roleAssignments
      x-ms-odata: '#/definitions/RoleAssignmentFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}:
    delete:
      description: Deletes a role assignment.
      operationId: RoleAssignments_Delete
      parameters:
      - description: The scope of the role assignment to delete.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the role assignment to delete.
        in: path
        name: roleAssignmentName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
          description: OK - Returns information about the role assignment.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2017-10-01-preview
            roleAssignmentName: roleAssignmentName
            scope: scope
          responses:
            "200":
              body:
                id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                name: roleassignmentId
                properties:
                  canDelegate: false
                  principalId: Pid
                  roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                  scope: /subscriptions/subId/resourcegroups/rgname
                type: Microsoft.Authorization/roleAssignments
      x-accepts:
      - application/json
    get:
      description: Get the specified role assignment.
      operationId: RoleAssignments_Get
      parameters:
      - description: The scope of the role assignment.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the role assignment to get.
        in: path
        name: roleAssignmentName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
          description: OK - Returns information about the role assignment.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2017-10-01-preview
            roleAssignmentName: roleAssignmentName
            scope: scope
            subscriptionId: subId
          responses:
            "200":
              body:
                id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                name: raId
                properties:
                  canDelegate: false
                  principalId: Pid
                  roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                  scope: /subscriptions/subId/resourcegroups/rgname
                type: Microsoft.Authorization/roleAssignments
      x-accepts:
      - application/json
    put:
      description: Creates a role assignment.
      operationId: RoleAssignments_Create
      parameters:
      - description: "The scope of the role assignment to create. The scope can be\
          \ any REST resource instance. For example, use '/subscriptions/{subscription-id}/'\
          \ for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'\
          \ for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'\
          \ for a resource."
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the role assignment to create. It can be any valid
          GUID.
        in: path
        name: roleAssignmentName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCreateParameters'
        description: Parameters for the role assignment.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
          description: Created - Returns information about the role assignment.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2017-10-01-preview
            parameters:
              properties:
                canDelegate: false
                principalId: d93a38bc-d029-4160-bfb0-fbda779ac214
                roleDefinitionId: /subscriptions/4004a9fd-d58e-48dc-aeb2-4a4aec58606f/providers/Microsoft.Authorization/roleDefinitions/de139f84-1756-47ae-9be6-808fbbe84772
            roleAssignmentName: roleAssignmentName
            scope: scope
          responses:
            "201":
              body:
                id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                name: roleassignmentId
                properties:
                  canDelegate: false
                  principalId: Pid
                  roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                  scope: /subscriptions/subId/resourcegroups/rgname
                type: Microsoft.Authorization/roleAssignments
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    ApiVersionParameter:
      description: The API version to use for this operation.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: The ID of the target subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    RoleAssignment:
      description: Role Assignments
      example:
        name: name
        id: id
        type: type
        properties:
          roleDefinitionId: roleDefinitionId
          scope: scope
          canDelegate: true
          principalId: principalId
      properties:
        id:
          description: The role assignment ID.
          readOnly: true
          type: string
        name:
          description: The role assignment name.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/RoleAssignmentPropertiesWithScope'
        type:
          description: The role assignment type.
          readOnly: true
          type: string
      type: object
    RoleAssignmentCreateParameters:
      description: Role assignment create parameters.
      example:
        properties:
          roleDefinitionId: roleDefinitionId
          canDelegate: true
          principalId: principalId
      properties:
        properties:
          $ref: '#/components/schemas/RoleAssignmentProperties'
      type: object
    RoleAssignmentFilter:
      description: Role Assignments filter
      properties:
        canDelegate:
          description: The Delegation flag for the role assignment
          type: boolean
        principalId:
          description: Returns role assignment of the specific principal.
          type: string
      type: object
    RoleAssignmentListResult:
      description: Role assignment list operation result.
      example:
        value:
        - name: name
          id: id
          type: type
          properties:
            roleDefinitionId: roleDefinitionId
            scope: scope
            canDelegate: true
            principalId: principalId
        - name: name
          id: id
          type: type
          properties:
            roleDefinitionId: roleDefinitionId
            scope: scope
            canDelegate: true
            principalId: principalId
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
        value:
          description: Role assignment list.
          items:
            $ref: '#/components/schemas/RoleAssignment'
          type: array
      type: object
    RoleAssignmentProperties:
      description: Role assignment properties.
      example:
        roleDefinitionId: roleDefinitionId
        canDelegate: true
        principalId: principalId
      properties:
        canDelegate:
          description: The delegation flag used for creating a role assignment
          type: boolean
        principalId:
          description: "The principal ID assigned to the role. This maps to the ID\
            \ inside the Active Directory. It can point to a user, service principal,\
            \ or security group."
          type: string
        roleDefinitionId:
          description: The role definition ID used in the role assignment.
          type: string
      type: object
    RoleAssignmentPropertiesWithScope:
      description: Role assignment properties with scope.
      example:
        roleDefinitionId: roleDefinitionId
        scope: scope
        canDelegate: true
        principalId: principalId
      properties:
        canDelegate:
          description: The Delegation flag for the role assignment
          type: boolean
        principalId:
          description: The principal ID.
          type: string
        roleDefinitionId:
          description: The role definition ID.
          type: string
        scope:
          description: The role assignment scope.
          type: string
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

