/*
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database resources including servers, databases, elastic pools, recommendations, operations, and usage metrics.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.QueryStatistic;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TopQueries
 */
public class TopQueriesTest {
    private final TopQueries model = new TopQueries();

    /**
     * Model tests for TopQueries
     */
    @Test
    public void testTopQueries() {
        // TODO: test TopQueries
    }

    /**
     * Test the property 'aggregationFunction'
     */
    @Test
    public void aggregationFunctionTest() {
        // TODO: test aggregationFunction
    }

    /**
     * Test the property 'executionType'
     */
    @Test
    public void executionTypeTest() {
        // TODO: test executionType
    }

    /**
     * Test the property 'intervalType'
     */
    @Test
    public void intervalTypeTest() {
        // TODO: test intervalType
    }

    /**
     * Test the property 'numberOfTopQueries'
     */
    @Test
    public void numberOfTopQueriesTest() {
        // TODO: test numberOfTopQueries
    }

    /**
     * Test the property 'observationEndTime'
     */
    @Test
    public void observationEndTimeTest() {
        // TODO: test observationEndTime
    }

    /**
     * Test the property 'observationStartTime'
     */
    @Test
    public void observationStartTimeTest() {
        // TODO: test observationStartTime
    }

    /**
     * Test the property 'observedMetric'
     */
    @Test
    public void observedMetricTest() {
        // TODO: test observedMetric
    }

    /**
     * Test the property 'queries'
     */
    @Test
    public void queriesTest() {
        // TODO: test queries
    }

}
