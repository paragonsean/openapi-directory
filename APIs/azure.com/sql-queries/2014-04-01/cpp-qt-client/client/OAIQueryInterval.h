/**
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database resources including servers, databases, elastic pools, recommendations, operations, and usage metrics.
 *
 * The version of the OpenAPI document: 2014-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryInterval.h
 *
 * A database query.
 */

#ifndef OAIQueryInterval_H
#define OAIQueryInterval_H

#include <QJsonObject>

#include "OAIQueryMetric.h"
#include <QDateTime>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQueryMetric;

class OAIQueryInterval : public OAIObject {
public:
    OAIQueryInterval();
    OAIQueryInterval(QString json);
    ~OAIQueryInterval() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getExecutionCount() const;
    void setExecutionCount(const double &execution_count);
    bool is_execution_count_Set() const;
    bool is_execution_count_Valid() const;

    QDateTime getIntervalStartTime() const;
    void setIntervalStartTime(const QDateTime &interval_start_time);
    bool is_interval_start_time_Set() const;
    bool is_interval_start_time_Valid() const;

    QList<OAIQueryMetric> getMetrics() const;
    void setMetrics(const QList<OAIQueryMetric> &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_execution_count;
    bool m_execution_count_isSet;
    bool m_execution_count_isValid;

    QDateTime m_interval_start_time;
    bool m_interval_start_time_isSet;
    bool m_interval_start_time_isValid;

    QList<OAIQueryMetric> m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryInterval)

#endif // OAIQueryInterval_H
