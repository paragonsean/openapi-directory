/**
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Database resources including servers, databases, elastic pools, recommendations, operations, and usage metrics.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QueryMetric from './QueryMetric';

/**
 * The QueryInterval model module.
 * @module model/QueryInterval
 * @version 2014-04-01
 */
class QueryInterval {
    /**
     * Constructs a new <code>QueryInterval</code>.
     * A database query.
     * @alias module:model/QueryInterval
     */
    constructor() { 
        
        QueryInterval.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryInterval</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryInterval} obj Optional instance to populate.
     * @return {module:model/QueryInterval} The populated <code>QueryInterval</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryInterval();

            if (data.hasOwnProperty('executionCount')) {
                obj['executionCount'] = ApiClient.convertToType(data['executionCount'], 'Number');
            }
            if (data.hasOwnProperty('intervalStartTime')) {
                obj['intervalStartTime'] = ApiClient.convertToType(data['intervalStartTime'], 'Date');
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], [QueryMetric]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryInterval</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryInterval</code>.
     */
    static validateJSON(data) {
        if (data['metrics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metrics'])) {
                throw new Error("Expected the field `metrics` to be an array in the JSON data but got " + data['metrics']);
            }
            // validate the optional field `metrics` (array)
            for (const item of data['metrics']) {
                QueryMetric.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The number of times the query was executed during this interval.
 * @member {Number} executionCount
 */
QueryInterval.prototype['executionCount'] = undefined;

/**
 * The start time of the measurement interval (ISO8601 format).
 * @member {Date} intervalStartTime
 */
QueryInterval.prototype['intervalStartTime'] = undefined;

/**
 * The list of query metrics during this interval.
 * @member {Array.<module:model/QueryMetric>} metrics
 */
QueryInterval.prototype['metrics'] = undefined;






export default QueryInterval;

