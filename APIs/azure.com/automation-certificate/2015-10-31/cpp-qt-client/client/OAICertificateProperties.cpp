/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICertificateProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICertificateProperties::OAICertificateProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICertificateProperties::OAICertificateProperties() {
    this->initializeModel();
}

OAICertificateProperties::~OAICertificateProperties() {}

void OAICertificateProperties::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_expiry_time_isSet = false;
    m_expiry_time_isValid = false;

    m_is_exportable_isSet = false;
    m_is_exportable_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_thumbprint_isSet = false;
    m_thumbprint_isValid = false;
}

void OAICertificateProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICertificateProperties::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_expiry_time_isValid = ::OpenAPI::fromJsonValue(m_expiry_time, json[QString("expiryTime")]);
    m_expiry_time_isSet = !json[QString("expiryTime")].isNull() && m_expiry_time_isValid;

    m_is_exportable_isValid = ::OpenAPI::fromJsonValue(m_is_exportable, json[QString("isExportable")]);
    m_is_exportable_isSet = !json[QString("isExportable")].isNull() && m_is_exportable_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_thumbprint_isValid = ::OpenAPI::fromJsonValue(m_thumbprint, json[QString("thumbprint")]);
    m_thumbprint_isSet = !json[QString("thumbprint")].isNull() && m_thumbprint_isValid;
}

QString OAICertificateProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICertificateProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_expiry_time_isSet) {
        obj.insert(QString("expiryTime"), ::OpenAPI::toJsonValue(m_expiry_time));
    }
    if (m_is_exportable_isSet) {
        obj.insert(QString("isExportable"), ::OpenAPI::toJsonValue(m_is_exportable));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_thumbprint_isSet) {
        obj.insert(QString("thumbprint"), ::OpenAPI::toJsonValue(m_thumbprint));
    }
    return obj;
}

QDateTime OAICertificateProperties::getCreationTime() const {
    return m_creation_time;
}
void OAICertificateProperties::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAICertificateProperties::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAICertificateProperties::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAICertificateProperties::getDescription() const {
    return m_description;
}
void OAICertificateProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICertificateProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAICertificateProperties::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAICertificateProperties::getExpiryTime() const {
    return m_expiry_time;
}
void OAICertificateProperties::setExpiryTime(const QDateTime &expiry_time) {
    m_expiry_time = expiry_time;
    m_expiry_time_isSet = true;
}

bool OAICertificateProperties::is_expiry_time_Set() const{
    return m_expiry_time_isSet;
}

bool OAICertificateProperties::is_expiry_time_Valid() const{
    return m_expiry_time_isValid;
}

bool OAICertificateProperties::isIsExportable() const {
    return m_is_exportable;
}
void OAICertificateProperties::setIsExportable(const bool &is_exportable) {
    m_is_exportable = is_exportable;
    m_is_exportable_isSet = true;
}

bool OAICertificateProperties::is_is_exportable_Set() const{
    return m_is_exportable_isSet;
}

bool OAICertificateProperties::is_is_exportable_Valid() const{
    return m_is_exportable_isValid;
}

QDateTime OAICertificateProperties::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAICertificateProperties::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAICertificateProperties::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAICertificateProperties::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAICertificateProperties::getThumbprint() const {
    return m_thumbprint;
}
void OAICertificateProperties::setThumbprint(const QString &thumbprint) {
    m_thumbprint = thumbprint;
    m_thumbprint_isSet = true;
}

bool OAICertificateProperties::is_thumbprint_Set() const{
    return m_thumbprint_isSet;
}

bool OAICertificateProperties::is_thumbprint_Valid() const{
    return m_thumbprint_isValid;
}

bool OAICertificateProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiry_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_exportable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thumbprint_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICertificateProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
