/*
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Certificate;
import org.openapitools.client.model.CertificateCreateOrUpdateParameters;
import org.openapitools.client.model.CertificateListByAutomationAccountDefaultResponse;
import org.openapitools.client.model.CertificateListResult;
import org.openapitools.client.model.CertificateUpdateParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CertificateApi
 */
@Disabled
public class CertificateApiTest {

    private final CertificateApi api = new CertificateApi();

    /**
     * Create a certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void certificateCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String certificateName = null;
        String subscriptionId = null;
        String apiVersion = null;
        CertificateCreateOrUpdateParameters parameters = null;
        Certificate response = api.certificateCreateOrUpdate(resourceGroupName, automationAccountName, certificateName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete the certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void certificateDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String certificateName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.certificateDelete(resourceGroupName, automationAccountName, certificateName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve the certificate identified by certificate name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void certificateGetTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String certificateName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Certificate response = api.certificateGet(resourceGroupName, automationAccountName, certificateName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve a list of certificates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void certificateListByAutomationAccountTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String subscriptionId = null;
        String apiVersion = null;
        CertificateListResult response = api.certificateListByAutomationAccount(resourceGroupName, automationAccountName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Update a certificate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void certificateUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String certificateName = null;
        String subscriptionId = null;
        String apiVersion = null;
        CertificateUpdateParameters parameters = null;
        Certificate response = api.certificateUpdate(resourceGroupName, automationAccountName, certificateName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
