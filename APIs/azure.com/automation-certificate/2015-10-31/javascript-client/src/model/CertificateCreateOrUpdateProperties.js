/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CertificateCreateOrUpdateProperties model module.
 * @module model/CertificateCreateOrUpdateProperties
 * @version 2015-10-31
 */
class CertificateCreateOrUpdateProperties {
    /**
     * Constructs a new <code>CertificateCreateOrUpdateProperties</code>.
     * The properties of the create certificate operation.
     * @alias module:model/CertificateCreateOrUpdateProperties
     * @param base64Value {String} Gets or sets the base64 encoded value of the certificate.
     */
    constructor(base64Value) { 
        
        CertificateCreateOrUpdateProperties.initialize(this, base64Value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, base64Value) { 
        obj['base64Value'] = base64Value;
    }

    /**
     * Constructs a <code>CertificateCreateOrUpdateProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CertificateCreateOrUpdateProperties} obj Optional instance to populate.
     * @return {module:model/CertificateCreateOrUpdateProperties} The populated <code>CertificateCreateOrUpdateProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CertificateCreateOrUpdateProperties();

            if (data.hasOwnProperty('base64Value')) {
                obj['base64Value'] = ApiClient.convertToType(data['base64Value'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isExportable')) {
                obj['isExportable'] = ApiClient.convertToType(data['isExportable'], 'Boolean');
            }
            if (data.hasOwnProperty('thumbprint')) {
                obj['thumbprint'] = ApiClient.convertToType(data['thumbprint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CertificateCreateOrUpdateProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CertificateCreateOrUpdateProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CertificateCreateOrUpdateProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['base64Value'] && !(typeof data['base64Value'] === 'string' || data['base64Value'] instanceof String)) {
            throw new Error("Expected the field `base64Value` to be a primitive type in the JSON string but got " + data['base64Value']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['thumbprint'] && !(typeof data['thumbprint'] === 'string' || data['thumbprint'] instanceof String)) {
            throw new Error("Expected the field `thumbprint` to be a primitive type in the JSON string but got " + data['thumbprint']);
        }

        return true;
    }


}

CertificateCreateOrUpdateProperties.RequiredProperties = ["base64Value"];

/**
 * Gets or sets the base64 encoded value of the certificate.
 * @member {String} base64Value
 */
CertificateCreateOrUpdateProperties.prototype['base64Value'] = undefined;

/**
 * Gets or sets the description of the certificate.
 * @member {String} description
 */
CertificateCreateOrUpdateProperties.prototype['description'] = undefined;

/**
 * Gets or sets the is exportable flag of the certificate.
 * @member {Boolean} isExportable
 */
CertificateCreateOrUpdateProperties.prototype['isExportable'] = undefined;

/**
 * Gets or sets the thumbprint of the certificate.
 * @member {String} thumbprint
 */
CertificateCreateOrUpdateProperties.prototype['thumbprint'] = undefined;






export default CertificateCreateOrUpdateProperties;

