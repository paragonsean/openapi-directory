/**
 * StorageManagement
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2015-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StorageAccountPropertiesCreateParameters from './StorageAccountPropertiesCreateParameters';

/**
 * The StorageAccountCreateParameters model module.
 * @module model/StorageAccountCreateParameters
 * @version 2015-06-15
 */
class StorageAccountCreateParameters {
    /**
     * Constructs a new <code>StorageAccountCreateParameters</code>.
     * The parameters to provide for the account.
     * @alias module:model/StorageAccountCreateParameters
     * @param location {String} The location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.
     */
    constructor(location) { 
        
        StorageAccountCreateParameters.initialize(this, location);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, location) { 
        obj['location'] = location;
    }

    /**
     * Constructs a <code>StorageAccountCreateParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageAccountCreateParameters} obj Optional instance to populate.
     * @return {module:model/StorageAccountCreateParameters} The populated <code>StorageAccountCreateParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageAccountCreateParameters();

            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = StorageAccountPropertiesCreateParameters.constructFromObject(data['properties']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageAccountCreateParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageAccountCreateParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StorageAccountCreateParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          StorageAccountPropertiesCreateParameters.validateJSON(data['properties']);
        }

        return true;
    }


}

StorageAccountCreateParameters.RequiredProperties = ["location"];

/**
 * The location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.
 * @member {String} location
 */
StorageAccountCreateParameters.prototype['location'] = undefined;

/**
 * @member {module:model/StorageAccountPropertiesCreateParameters} properties
 */
StorageAccountCreateParameters.prototype['properties'] = undefined;

/**
 * A list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
 * @member {Object.<String, String>} tags
 */
StorageAccountCreateParameters.prototype['tags'] = undefined;






export default StorageAccountCreateParameters;

