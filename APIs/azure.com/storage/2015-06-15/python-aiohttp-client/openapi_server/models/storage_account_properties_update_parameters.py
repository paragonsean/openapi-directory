# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_domain import CustomDomain
from openapi_server import util


class StorageAccountPropertiesUpdateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_type: str=None, custom_domain: CustomDomain=None):
        """StorageAccountPropertiesUpdateParameters - a model defined in OpenAPI

        :param account_type: The account_type of this StorageAccountPropertiesUpdateParameters.
        :param custom_domain: The custom_domain of this StorageAccountPropertiesUpdateParameters.
        """
        self.openapi_types = {
            'account_type': str,
            'custom_domain': CustomDomain
        }

        self.attribute_map = {
            'account_type': 'accountType',
            'custom_domain': 'customDomain'
        }

        self._account_type = account_type
        self._custom_domain = custom_domain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageAccountPropertiesUpdateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorageAccountPropertiesUpdateParameters of this StorageAccountPropertiesUpdateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_type(self):
        """Gets the account_type of this StorageAccountPropertiesUpdateParameters.

        The account type. Note that StandardZRS and PremiumLRS accounts cannot be changed to other account types, and other account types cannot be changed to StandardZRS or PremiumLRS.

        :return: The account_type of this StorageAccountPropertiesUpdateParameters.
        :rtype: str
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type):
        """Sets the account_type of this StorageAccountPropertiesUpdateParameters.

        The account type. Note that StandardZRS and PremiumLRS accounts cannot be changed to other account types, and other account types cannot be changed to StandardZRS or PremiumLRS.

        :param account_type: The account_type of this StorageAccountPropertiesUpdateParameters.
        :type account_type: str
        """
        allowed_values = ["Standard_LRS", "Standard_ZRS", "Standard_GRS", "Standard_RAGRS", "Premium_LRS"]  # noqa: E501
        if account_type not in allowed_values:
            raise ValueError(
                "Invalid value for `account_type` ({0}), must be one of {1}"
                .format(account_type, allowed_values)
            )

        self._account_type = account_type

    @property
    def custom_domain(self):
        """Gets the custom_domain of this StorageAccountPropertiesUpdateParameters.


        :return: The custom_domain of this StorageAccountPropertiesUpdateParameters.
        :rtype: CustomDomain
        """
        return self._custom_domain

    @custom_domain.setter
    def custom_domain(self, custom_domain):
        """Sets the custom_domain of this StorageAccountPropertiesUpdateParameters.


        :param custom_domain: The custom_domain of this StorageAccountPropertiesUpdateParameters.
        :type custom_domain: CustomDomain
        """

        self._custom_domain = custom_domain
