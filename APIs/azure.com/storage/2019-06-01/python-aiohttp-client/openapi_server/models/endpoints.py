# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.storage_account_internet_endpoints import StorageAccountInternetEndpoints
from openapi_server.models.storage_account_microsoft_endpoints import StorageAccountMicrosoftEndpoints
from openapi_server import util


class Endpoints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob: str=None, dfs: str=None, file: str=None, internet_endpoints: StorageAccountInternetEndpoints=None, microsoft_endpoints: StorageAccountMicrosoftEndpoints=None, queue: str=None, table: str=None, web: str=None):
        """Endpoints - a model defined in OpenAPI

        :param blob: The blob of this Endpoints.
        :param dfs: The dfs of this Endpoints.
        :param file: The file of this Endpoints.
        :param internet_endpoints: The internet_endpoints of this Endpoints.
        :param microsoft_endpoints: The microsoft_endpoints of this Endpoints.
        :param queue: The queue of this Endpoints.
        :param table: The table of this Endpoints.
        :param web: The web of this Endpoints.
        """
        self.openapi_types = {
            'blob': str,
            'dfs': str,
            'file': str,
            'internet_endpoints': StorageAccountInternetEndpoints,
            'microsoft_endpoints': StorageAccountMicrosoftEndpoints,
            'queue': str,
            'table': str,
            'web': str
        }

        self.attribute_map = {
            'blob': 'blob',
            'dfs': 'dfs',
            'file': 'file',
            'internet_endpoints': 'internetEndpoints',
            'microsoft_endpoints': 'microsoftEndpoints',
            'queue': 'queue',
            'table': 'table',
            'web': 'web'
        }

        self._blob = blob
        self._dfs = dfs
        self._file = file
        self._internet_endpoints = internet_endpoints
        self._microsoft_endpoints = microsoft_endpoints
        self._queue = queue
        self._table = table
        self._web = web

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Endpoints':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Endpoints of this Endpoints.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob(self):
        """Gets the blob of this Endpoints.

        Gets the blob endpoint.

        :return: The blob of this Endpoints.
        :rtype: str
        """
        return self._blob

    @blob.setter
    def blob(self, blob):
        """Sets the blob of this Endpoints.

        Gets the blob endpoint.

        :param blob: The blob of this Endpoints.
        :type blob: str
        """

        self._blob = blob

    @property
    def dfs(self):
        """Gets the dfs of this Endpoints.

        Gets the dfs endpoint.

        :return: The dfs of this Endpoints.
        :rtype: str
        """
        return self._dfs

    @dfs.setter
    def dfs(self, dfs):
        """Sets the dfs of this Endpoints.

        Gets the dfs endpoint.

        :param dfs: The dfs of this Endpoints.
        :type dfs: str
        """

        self._dfs = dfs

    @property
    def file(self):
        """Gets the file of this Endpoints.

        Gets the file endpoint.

        :return: The file of this Endpoints.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this Endpoints.

        Gets the file endpoint.

        :param file: The file of this Endpoints.
        :type file: str
        """

        self._file = file

    @property
    def internet_endpoints(self):
        """Gets the internet_endpoints of this Endpoints.


        :return: The internet_endpoints of this Endpoints.
        :rtype: StorageAccountInternetEndpoints
        """
        return self._internet_endpoints

    @internet_endpoints.setter
    def internet_endpoints(self, internet_endpoints):
        """Sets the internet_endpoints of this Endpoints.


        :param internet_endpoints: The internet_endpoints of this Endpoints.
        :type internet_endpoints: StorageAccountInternetEndpoints
        """

        self._internet_endpoints = internet_endpoints

    @property
    def microsoft_endpoints(self):
        """Gets the microsoft_endpoints of this Endpoints.


        :return: The microsoft_endpoints of this Endpoints.
        :rtype: StorageAccountMicrosoftEndpoints
        """
        return self._microsoft_endpoints

    @microsoft_endpoints.setter
    def microsoft_endpoints(self, microsoft_endpoints):
        """Sets the microsoft_endpoints of this Endpoints.


        :param microsoft_endpoints: The microsoft_endpoints of this Endpoints.
        :type microsoft_endpoints: StorageAccountMicrosoftEndpoints
        """

        self._microsoft_endpoints = microsoft_endpoints

    @property
    def queue(self):
        """Gets the queue of this Endpoints.

        Gets the queue endpoint.

        :return: The queue of this Endpoints.
        :rtype: str
        """
        return self._queue

    @queue.setter
    def queue(self, queue):
        """Sets the queue of this Endpoints.

        Gets the queue endpoint.

        :param queue: The queue of this Endpoints.
        :type queue: str
        """

        self._queue = queue

    @property
    def table(self):
        """Gets the table of this Endpoints.

        Gets the table endpoint.

        :return: The table of this Endpoints.
        :rtype: str
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this Endpoints.

        Gets the table endpoint.

        :param table: The table of this Endpoints.
        :type table: str
        """

        self._table = table

    @property
    def web(self):
        """Gets the web of this Endpoints.

        Gets the web endpoint.

        :return: The web of this Endpoints.
        :rtype: str
        """
        return self._web

    @web.setter
    def web(self, web):
        """Sets the web of this Endpoints.

        Gets the web endpoint.

        :param web: The web of this Endpoints.
        :type web: str
        """

        self._web = web
