# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.management_policy_base_blob import ManagementPolicyBaseBlob
from openapi_server.models.management_policy_snap_shot import ManagementPolicySnapShot
from openapi_server import util


class ManagementPolicyAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_blob: ManagementPolicyBaseBlob=None, snapshot: ManagementPolicySnapShot=None):
        """ManagementPolicyAction - a model defined in OpenAPI

        :param base_blob: The base_blob of this ManagementPolicyAction.
        :param snapshot: The snapshot of this ManagementPolicyAction.
        """
        self.openapi_types = {
            'base_blob': ManagementPolicyBaseBlob,
            'snapshot': ManagementPolicySnapShot
        }

        self.attribute_map = {
            'base_blob': 'baseBlob',
            'snapshot': 'snapshot'
        }

        self._base_blob = base_blob
        self._snapshot = snapshot

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagementPolicyAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagementPolicyAction of this ManagementPolicyAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_blob(self):
        """Gets the base_blob of this ManagementPolicyAction.


        :return: The base_blob of this ManagementPolicyAction.
        :rtype: ManagementPolicyBaseBlob
        """
        return self._base_blob

    @base_blob.setter
    def base_blob(self, base_blob):
        """Sets the base_blob of this ManagementPolicyAction.


        :param base_blob: The base_blob of this ManagementPolicyAction.
        :type base_blob: ManagementPolicyBaseBlob
        """

        self._base_blob = base_blob

    @property
    def snapshot(self):
        """Gets the snapshot of this ManagementPolicyAction.


        :return: The snapshot of this ManagementPolicyAction.
        :rtype: ManagementPolicySnapShot
        """
        return self._snapshot

    @snapshot.setter
    def snapshot(self, snapshot):
        """Sets the snapshot of this ManagementPolicyAction.


        :param snapshot: The snapshot of this ManagementPolicyAction.
        :type snapshot: ManagementPolicySnapShot
        """

        self._snapshot = snapshot
