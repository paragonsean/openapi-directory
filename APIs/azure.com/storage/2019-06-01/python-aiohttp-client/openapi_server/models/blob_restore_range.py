# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BlobRestoreRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_range: str=None, start_range: str=None):
        """BlobRestoreRange - a model defined in OpenAPI

        :param end_range: The end_range of this BlobRestoreRange.
        :param start_range: The start_range of this BlobRestoreRange.
        """
        self.openapi_types = {
            'end_range': str,
            'start_range': str
        }

        self.attribute_map = {
            'end_range': 'endRange',
            'start_range': 'startRange'
        }

        self._end_range = end_range
        self._start_range = start_range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlobRestoreRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BlobRestoreRange of this BlobRestoreRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_range(self):
        """Gets the end_range of this BlobRestoreRange.

        Blob end range. Empty means account end.

        :return: The end_range of this BlobRestoreRange.
        :rtype: str
        """
        return self._end_range

    @end_range.setter
    def end_range(self, end_range):
        """Sets the end_range of this BlobRestoreRange.

        Blob end range. Empty means account end.

        :param end_range: The end_range of this BlobRestoreRange.
        :type end_range: str
        """
        if end_range is None:
            raise ValueError("Invalid value for `end_range`, must not be `None`")

        self._end_range = end_range

    @property
    def start_range(self):
        """Gets the start_range of this BlobRestoreRange.

        Blob start range. Empty means account start.

        :return: The start_range of this BlobRestoreRange.
        :rtype: str
        """
        return self._start_range

    @start_range.setter
    def start_range(self, start_range):
        """Sets the start_range of this BlobRestoreRange.

        Blob start range. Empty means account start.

        :param start_range: The start_range of this BlobRestoreRange.
        :type start_range: str
        """
        if start_range is None:
            raise ValueError("Invalid value for `start_range`, must not be `None`")

        self._start_range = start_range
