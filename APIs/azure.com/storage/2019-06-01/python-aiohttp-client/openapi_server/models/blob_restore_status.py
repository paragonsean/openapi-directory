# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.blob_restore_parameters import BlobRestoreParameters
from openapi_server import util


class BlobRestoreStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failure_reason: str=None, parameters: BlobRestoreParameters=None, restore_id: str=None, status: str=None):
        """BlobRestoreStatus - a model defined in OpenAPI

        :param failure_reason: The failure_reason of this BlobRestoreStatus.
        :param parameters: The parameters of this BlobRestoreStatus.
        :param restore_id: The restore_id of this BlobRestoreStatus.
        :param status: The status of this BlobRestoreStatus.
        """
        self.openapi_types = {
            'failure_reason': str,
            'parameters': BlobRestoreParameters,
            'restore_id': str,
            'status': str
        }

        self.attribute_map = {
            'failure_reason': 'failureReason',
            'parameters': 'parameters',
            'restore_id': 'restoreId',
            'status': 'status'
        }

        self._failure_reason = failure_reason
        self._parameters = parameters
        self._restore_id = restore_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlobRestoreStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BlobRestoreStatus of this BlobRestoreStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failure_reason(self):
        """Gets the failure_reason of this BlobRestoreStatus.

        Failure reason when blob restore is failed.

        :return: The failure_reason of this BlobRestoreStatus.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this BlobRestoreStatus.

        Failure reason when blob restore is failed.

        :param failure_reason: The failure_reason of this BlobRestoreStatus.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason

    @property
    def parameters(self):
        """Gets the parameters of this BlobRestoreStatus.


        :return: The parameters of this BlobRestoreStatus.
        :rtype: BlobRestoreParameters
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this BlobRestoreStatus.


        :param parameters: The parameters of this BlobRestoreStatus.
        :type parameters: BlobRestoreParameters
        """

        self._parameters = parameters

    @property
    def restore_id(self):
        """Gets the restore_id of this BlobRestoreStatus.

        Id for tracking blob restore request.

        :return: The restore_id of this BlobRestoreStatus.
        :rtype: str
        """
        return self._restore_id

    @restore_id.setter
    def restore_id(self, restore_id):
        """Sets the restore_id of this BlobRestoreStatus.

        Id for tracking blob restore request.

        :param restore_id: The restore_id of this BlobRestoreStatus.
        :type restore_id: str
        """

        self._restore_id = restore_id

    @property
    def status(self):
        """Gets the status of this BlobRestoreStatus.

        The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.

        :return: The status of this BlobRestoreStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BlobRestoreStatus.

        The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.

        :param status: The status of this BlobRestoreStatus.
        :type status: str
        """
        allowed_values = ["InProgress", "Complete", "Failed"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
