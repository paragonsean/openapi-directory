# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.active_directory_properties import ActiveDirectoryProperties
from openapi_server import util


class AzureFilesIdentityBasedAuthentication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_directory_properties: ActiveDirectoryProperties=None, directory_service_options: str=None):
        """AzureFilesIdentityBasedAuthentication - a model defined in OpenAPI

        :param active_directory_properties: The active_directory_properties of this AzureFilesIdentityBasedAuthentication.
        :param directory_service_options: The directory_service_options of this AzureFilesIdentityBasedAuthentication.
        """
        self.openapi_types = {
            'active_directory_properties': ActiveDirectoryProperties,
            'directory_service_options': str
        }

        self.attribute_map = {
            'active_directory_properties': 'activeDirectoryProperties',
            'directory_service_options': 'directoryServiceOptions'
        }

        self._active_directory_properties = active_directory_properties
        self._directory_service_options = directory_service_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureFilesIdentityBasedAuthentication':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureFilesIdentityBasedAuthentication of this AzureFilesIdentityBasedAuthentication.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_directory_properties(self):
        """Gets the active_directory_properties of this AzureFilesIdentityBasedAuthentication.


        :return: The active_directory_properties of this AzureFilesIdentityBasedAuthentication.
        :rtype: ActiveDirectoryProperties
        """
        return self._active_directory_properties

    @active_directory_properties.setter
    def active_directory_properties(self, active_directory_properties):
        """Sets the active_directory_properties of this AzureFilesIdentityBasedAuthentication.


        :param active_directory_properties: The active_directory_properties of this AzureFilesIdentityBasedAuthentication.
        :type active_directory_properties: ActiveDirectoryProperties
        """

        self._active_directory_properties = active_directory_properties

    @property
    def directory_service_options(self):
        """Gets the directory_service_options of this AzureFilesIdentityBasedAuthentication.

        Indicates the directory service used.

        :return: The directory_service_options of this AzureFilesIdentityBasedAuthentication.
        :rtype: str
        """
        return self._directory_service_options

    @directory_service_options.setter
    def directory_service_options(self, directory_service_options):
        """Sets the directory_service_options of this AzureFilesIdentityBasedAuthentication.

        Indicates the directory service used.

        :param directory_service_options: The directory_service_options of this AzureFilesIdentityBasedAuthentication.
        :type directory_service_options: str
        """
        allowed_values = ["None", "AADDS", "AD"]  # noqa: E501
        if directory_service_options not in allowed_values:
            raise ValueError(
                "Invalid value for `directory_service_options` ({0}), must be one of {1}"
                .format(directory_service_options, allowed_values)
            )

        self._directory_service_options = directory_service_options
