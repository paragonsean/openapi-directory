/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManagementPolicyFilter.h
 *
 * Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. 
 */

#ifndef OAIManagementPolicyFilter_H
#define OAIManagementPolicyFilter_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIManagementPolicyFilter : public OAIObject {
public:
    OAIManagementPolicyFilter();
    OAIManagementPolicyFilter(QString json);
    ~OAIManagementPolicyFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getBlobTypes() const;
    void setBlobTypes(const QList<QString> &blob_types);
    bool is_blob_types_Set() const;
    bool is_blob_types_Valid() const;

    QList<QString> getPrefixMatch() const;
    void setPrefixMatch(const QList<QString> &prefix_match);
    bool is_prefix_match_Set() const;
    bool is_prefix_match_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_blob_types;
    bool m_blob_types_isSet;
    bool m_blob_types_isValid;

    QList<QString> m_prefix_match;
    bool m_prefix_match_isSet;
    bool m_prefix_match_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManagementPolicyFilter)

#endif // OAIManagementPolicyFilter_H
