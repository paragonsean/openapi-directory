/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountSasParameters.h
 *
 * The parameters to list SAS credentials of a storage account.
 */

#ifndef OAIAccountSasParameters_H
#define OAIAccountSasParameters_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccountSasParameters : public OAIObject {
public:
    OAIAccountSasParameters();
    OAIAccountSasParameters(QString json);
    ~OAIAccountSasParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKeyToSign() const;
    void setKeyToSign(const QString &key_to_sign);
    bool is_key_to_sign_Set() const;
    bool is_key_to_sign_Valid() const;

    QDateTime getSignedExpiry() const;
    void setSignedExpiry(const QDateTime &signed_expiry);
    bool is_signed_expiry_Set() const;
    bool is_signed_expiry_Valid() const;

    QString getSignedIp() const;
    void setSignedIp(const QString &signed_ip);
    bool is_signed_ip_Set() const;
    bool is_signed_ip_Valid() const;

    QString getSignedPermission() const;
    void setSignedPermission(const QString &signed_permission);
    bool is_signed_permission_Set() const;
    bool is_signed_permission_Valid() const;

    QString getSignedProtocol() const;
    void setSignedProtocol(const QString &signed_protocol);
    bool is_signed_protocol_Set() const;
    bool is_signed_protocol_Valid() const;

    QString getSignedResourceTypes() const;
    void setSignedResourceTypes(const QString &signed_resource_types);
    bool is_signed_resource_types_Set() const;
    bool is_signed_resource_types_Valid() const;

    QString getSignedServices() const;
    void setSignedServices(const QString &signed_services);
    bool is_signed_services_Set() const;
    bool is_signed_services_Valid() const;

    QDateTime getSignedStart() const;
    void setSignedStart(const QDateTime &signed_start);
    bool is_signed_start_Set() const;
    bool is_signed_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_key_to_sign;
    bool m_key_to_sign_isSet;
    bool m_key_to_sign_isValid;

    QDateTime m_signed_expiry;
    bool m_signed_expiry_isSet;
    bool m_signed_expiry_isValid;

    QString m_signed_ip;
    bool m_signed_ip_isSet;
    bool m_signed_ip_isValid;

    QString m_signed_permission;
    bool m_signed_permission_isSet;
    bool m_signed_permission_isValid;

    QString m_signed_protocol;
    bool m_signed_protocol_isSet;
    bool m_signed_protocol_isValid;

    QString m_signed_resource_types;
    bool m_signed_resource_types_isSet;
    bool m_signed_resource_types_isValid;

    QString m_signed_services;
    bool m_signed_services_isSet;
    bool m_signed_services_isValid;

    QDateTime m_signed_start;
    bool m_signed_start_isSet;
    bool m_signed_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountSasParameters)

#endif // OAIAccountSasParameters_H
