/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRoutingPreference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRoutingPreference::OAIRoutingPreference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRoutingPreference::OAIRoutingPreference() {
    this->initializeModel();
}

OAIRoutingPreference::~OAIRoutingPreference() {}

void OAIRoutingPreference::initializeModel() {

    m_publish_internet_endpoints_isSet = false;
    m_publish_internet_endpoints_isValid = false;

    m_publish_microsoft_endpoints_isSet = false;
    m_publish_microsoft_endpoints_isValid = false;

    m_routing_choice_isSet = false;
    m_routing_choice_isValid = false;
}

void OAIRoutingPreference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRoutingPreference::fromJsonObject(QJsonObject json) {

    m_publish_internet_endpoints_isValid = ::OpenAPI::fromJsonValue(m_publish_internet_endpoints, json[QString("publishInternetEndpoints")]);
    m_publish_internet_endpoints_isSet = !json[QString("publishInternetEndpoints")].isNull() && m_publish_internet_endpoints_isValid;

    m_publish_microsoft_endpoints_isValid = ::OpenAPI::fromJsonValue(m_publish_microsoft_endpoints, json[QString("publishMicrosoftEndpoints")]);
    m_publish_microsoft_endpoints_isSet = !json[QString("publishMicrosoftEndpoints")].isNull() && m_publish_microsoft_endpoints_isValid;

    m_routing_choice_isValid = ::OpenAPI::fromJsonValue(m_routing_choice, json[QString("routingChoice")]);
    m_routing_choice_isSet = !json[QString("routingChoice")].isNull() && m_routing_choice_isValid;
}

QString OAIRoutingPreference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRoutingPreference::asJsonObject() const {
    QJsonObject obj;
    if (m_publish_internet_endpoints_isSet) {
        obj.insert(QString("publishInternetEndpoints"), ::OpenAPI::toJsonValue(m_publish_internet_endpoints));
    }
    if (m_publish_microsoft_endpoints_isSet) {
        obj.insert(QString("publishMicrosoftEndpoints"), ::OpenAPI::toJsonValue(m_publish_microsoft_endpoints));
    }
    if (m_routing_choice_isSet) {
        obj.insert(QString("routingChoice"), ::OpenAPI::toJsonValue(m_routing_choice));
    }
    return obj;
}

bool OAIRoutingPreference::isPublishInternetEndpoints() const {
    return m_publish_internet_endpoints;
}
void OAIRoutingPreference::setPublishInternetEndpoints(const bool &publish_internet_endpoints) {
    m_publish_internet_endpoints = publish_internet_endpoints;
    m_publish_internet_endpoints_isSet = true;
}

bool OAIRoutingPreference::is_publish_internet_endpoints_Set() const{
    return m_publish_internet_endpoints_isSet;
}

bool OAIRoutingPreference::is_publish_internet_endpoints_Valid() const{
    return m_publish_internet_endpoints_isValid;
}

bool OAIRoutingPreference::isPublishMicrosoftEndpoints() const {
    return m_publish_microsoft_endpoints;
}
void OAIRoutingPreference::setPublishMicrosoftEndpoints(const bool &publish_microsoft_endpoints) {
    m_publish_microsoft_endpoints = publish_microsoft_endpoints;
    m_publish_microsoft_endpoints_isSet = true;
}

bool OAIRoutingPreference::is_publish_microsoft_endpoints_Set() const{
    return m_publish_microsoft_endpoints_isSet;
}

bool OAIRoutingPreference::is_publish_microsoft_endpoints_Valid() const{
    return m_publish_microsoft_endpoints_isValid;
}

QString OAIRoutingPreference::getRoutingChoice() const {
    return m_routing_choice;
}
void OAIRoutingPreference::setRoutingChoice(const QString &routing_choice) {
    m_routing_choice = routing_choice;
    m_routing_choice_isSet = true;
}

bool OAIRoutingPreference::is_routing_choice_Set() const{
    return m_routing_choice_isSet;
}

bool OAIRoutingPreference::is_routing_choice_Valid() const{
    return m_routing_choice_isValid;
}

bool OAIRoutingPreference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_publish_internet_endpoints_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publish_microsoft_endpoints_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing_choice_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRoutingPreference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
