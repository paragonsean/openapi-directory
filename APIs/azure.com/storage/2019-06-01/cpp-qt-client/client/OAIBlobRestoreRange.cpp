/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBlobRestoreRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBlobRestoreRange::OAIBlobRestoreRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBlobRestoreRange::OAIBlobRestoreRange() {
    this->initializeModel();
}

OAIBlobRestoreRange::~OAIBlobRestoreRange() {}

void OAIBlobRestoreRange::initializeModel() {

    m_end_range_isSet = false;
    m_end_range_isValid = false;

    m_start_range_isSet = false;
    m_start_range_isValid = false;
}

void OAIBlobRestoreRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBlobRestoreRange::fromJsonObject(QJsonObject json) {

    m_end_range_isValid = ::OpenAPI::fromJsonValue(m_end_range, json[QString("endRange")]);
    m_end_range_isSet = !json[QString("endRange")].isNull() && m_end_range_isValid;

    m_start_range_isValid = ::OpenAPI::fromJsonValue(m_start_range, json[QString("startRange")]);
    m_start_range_isSet = !json[QString("startRange")].isNull() && m_start_range_isValid;
}

QString OAIBlobRestoreRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBlobRestoreRange::asJsonObject() const {
    QJsonObject obj;
    if (m_end_range_isSet) {
        obj.insert(QString("endRange"), ::OpenAPI::toJsonValue(m_end_range));
    }
    if (m_start_range_isSet) {
        obj.insert(QString("startRange"), ::OpenAPI::toJsonValue(m_start_range));
    }
    return obj;
}

QString OAIBlobRestoreRange::getEndRange() const {
    return m_end_range;
}
void OAIBlobRestoreRange::setEndRange(const QString &end_range) {
    m_end_range = end_range;
    m_end_range_isSet = true;
}

bool OAIBlobRestoreRange::is_end_range_Set() const{
    return m_end_range_isSet;
}

bool OAIBlobRestoreRange::is_end_range_Valid() const{
    return m_end_range_isValid;
}

QString OAIBlobRestoreRange::getStartRange() const {
    return m_start_range;
}
void OAIBlobRestoreRange::setStartRange(const QString &start_range) {
    m_start_range = start_range;
    m_start_range_isSet = true;
}

bool OAIBlobRestoreRange::is_start_range_Set() const{
    return m_start_range_isSet;
}

bool OAIBlobRestoreRange::is_start_range_Valid() const{
    return m_start_range_isValid;
}

bool OAIBlobRestoreRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_range_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_range_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBlobRestoreRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_end_range_isValid && m_start_range_isValid && true;
}

} // namespace OpenAPI
