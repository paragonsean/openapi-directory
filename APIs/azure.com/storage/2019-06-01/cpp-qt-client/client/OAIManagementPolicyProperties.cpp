/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagementPolicyProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagementPolicyProperties::OAIManagementPolicyProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagementPolicyProperties::OAIManagementPolicyProperties() {
    this->initializeModel();
}

OAIManagementPolicyProperties::~OAIManagementPolicyProperties() {}

void OAIManagementPolicyProperties::initializeModel() {

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_policy_isSet = false;
    m_policy_isValid = false;
}

void OAIManagementPolicyProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagementPolicyProperties::fromJsonObject(QJsonObject json) {

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_policy_isValid = ::OpenAPI::fromJsonValue(m_policy, json[QString("policy")]);
    m_policy_isSet = !json[QString("policy")].isNull() && m_policy_isValid;
}

QString OAIManagementPolicyProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagementPolicyProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_policy.isSet()) {
        obj.insert(QString("policy"), ::OpenAPI::toJsonValue(m_policy));
    }
    return obj;
}

QDateTime OAIManagementPolicyProperties::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIManagementPolicyProperties::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIManagementPolicyProperties::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIManagementPolicyProperties::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

OAIManagementPolicySchema OAIManagementPolicyProperties::getPolicy() const {
    return m_policy;
}
void OAIManagementPolicyProperties::setPolicy(const OAIManagementPolicySchema &policy) {
    m_policy = policy;
    m_policy_isSet = true;
}

bool OAIManagementPolicyProperties::is_policy_Set() const{
    return m_policy_isSet;
}

bool OAIManagementPolicyProperties::is_policy_Valid() const{
    return m_policy_isValid;
}

bool OAIManagementPolicyProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagementPolicyProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_policy_isValid && true;
}

} // namespace OpenAPI
