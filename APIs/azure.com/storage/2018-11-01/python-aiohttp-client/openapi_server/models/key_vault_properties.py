# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KeyVaultProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keyname: str=None, keyvaulturi: str=None, keyversion: str=None):
        """KeyVaultProperties - a model defined in OpenAPI

        :param keyname: The keyname of this KeyVaultProperties.
        :param keyvaulturi: The keyvaulturi of this KeyVaultProperties.
        :param keyversion: The keyversion of this KeyVaultProperties.
        """
        self.openapi_types = {
            'keyname': str,
            'keyvaulturi': str,
            'keyversion': str
        }

        self.attribute_map = {
            'keyname': 'keyname',
            'keyvaulturi': 'keyvaulturi',
            'keyversion': 'keyversion'
        }

        self._keyname = keyname
        self._keyvaulturi = keyvaulturi
        self._keyversion = keyversion

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeyVaultProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeyVaultProperties of this KeyVaultProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keyname(self):
        """Gets the keyname of this KeyVaultProperties.

        The name of KeyVault key.

        :return: The keyname of this KeyVaultProperties.
        :rtype: str
        """
        return self._keyname

    @keyname.setter
    def keyname(self, keyname):
        """Sets the keyname of this KeyVaultProperties.

        The name of KeyVault key.

        :param keyname: The keyname of this KeyVaultProperties.
        :type keyname: str
        """

        self._keyname = keyname

    @property
    def keyvaulturi(self):
        """Gets the keyvaulturi of this KeyVaultProperties.

        The Uri of KeyVault.

        :return: The keyvaulturi of this KeyVaultProperties.
        :rtype: str
        """
        return self._keyvaulturi

    @keyvaulturi.setter
    def keyvaulturi(self, keyvaulturi):
        """Sets the keyvaulturi of this KeyVaultProperties.

        The Uri of KeyVault.

        :param keyvaulturi: The keyvaulturi of this KeyVaultProperties.
        :type keyvaulturi: str
        """

        self._keyvaulturi = keyvaulturi

    @property
    def keyversion(self):
        """Gets the keyversion of this KeyVaultProperties.

        The version of KeyVault key.

        :return: The keyversion of this KeyVaultProperties.
        :rtype: str
        """
        return self._keyversion

    @keyversion.setter
    def keyversion(self, keyversion):
        """Sets the keyversion of this KeyVaultProperties.

        The version of KeyVault key.

        :param keyversion: The keyversion of this KeyVaultProperties.
        :type keyversion: str
        """

        self._keyversion = keyversion
