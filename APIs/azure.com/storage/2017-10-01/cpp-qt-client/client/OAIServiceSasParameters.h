/**
 * StorageManagement
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2017-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceSasParameters.h
 *
 * The parameters to list service SAS credentials of a specific resource.
 */

#ifndef OAIServiceSasParameters_H
#define OAIServiceSasParameters_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServiceSasParameters : public OAIObject {
public:
    OAIServiceSasParameters();
    OAIServiceSasParameters(QString json);
    ~OAIServiceSasParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCanonicalizedResource() const;
    void setCanonicalizedResource(const QString &canonicalized_resource);
    bool is_canonicalized_resource_Set() const;
    bool is_canonicalized_resource_Valid() const;

    QString getEndPk() const;
    void setEndPk(const QString &end_pk);
    bool is_end_pk_Set() const;
    bool is_end_pk_Valid() const;

    QString getEndRk() const;
    void setEndRk(const QString &end_rk);
    bool is_end_rk_Set() const;
    bool is_end_rk_Valid() const;

    QString getKeyToSign() const;
    void setKeyToSign(const QString &key_to_sign);
    bool is_key_to_sign_Set() const;
    bool is_key_to_sign_Valid() const;

    QString getRscc() const;
    void setRscc(const QString &rscc);
    bool is_rscc_Set() const;
    bool is_rscc_Valid() const;

    QString getRscd() const;
    void setRscd(const QString &rscd);
    bool is_rscd_Set() const;
    bool is_rscd_Valid() const;

    QString getRsce() const;
    void setRsce(const QString &rsce);
    bool is_rsce_Set() const;
    bool is_rsce_Valid() const;

    QString getRscl() const;
    void setRscl(const QString &rscl);
    bool is_rscl_Set() const;
    bool is_rscl_Valid() const;

    QString getRsct() const;
    void setRsct(const QString &rsct);
    bool is_rsct_Set() const;
    bool is_rsct_Valid() const;

    QDateTime getSignedExpiry() const;
    void setSignedExpiry(const QDateTime &signed_expiry);
    bool is_signed_expiry_Set() const;
    bool is_signed_expiry_Valid() const;

    QString getSignedIdentifier() const;
    void setSignedIdentifier(const QString &signed_identifier);
    bool is_signed_identifier_Set() const;
    bool is_signed_identifier_Valid() const;

    QString getSignedIp() const;
    void setSignedIp(const QString &signed_ip);
    bool is_signed_ip_Set() const;
    bool is_signed_ip_Valid() const;

    QString getSignedPermission() const;
    void setSignedPermission(const QString &signed_permission);
    bool is_signed_permission_Set() const;
    bool is_signed_permission_Valid() const;

    QString getSignedProtocol() const;
    void setSignedProtocol(const QString &signed_protocol);
    bool is_signed_protocol_Set() const;
    bool is_signed_protocol_Valid() const;

    QString getSignedResource() const;
    void setSignedResource(const QString &signed_resource);
    bool is_signed_resource_Set() const;
    bool is_signed_resource_Valid() const;

    QDateTime getSignedStart() const;
    void setSignedStart(const QDateTime &signed_start);
    bool is_signed_start_Set() const;
    bool is_signed_start_Valid() const;

    QString getStartPk() const;
    void setStartPk(const QString &start_pk);
    bool is_start_pk_Set() const;
    bool is_start_pk_Valid() const;

    QString getStartRk() const;
    void setStartRk(const QString &start_rk);
    bool is_start_rk_Set() const;
    bool is_start_rk_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_canonicalized_resource;
    bool m_canonicalized_resource_isSet;
    bool m_canonicalized_resource_isValid;

    QString m_end_pk;
    bool m_end_pk_isSet;
    bool m_end_pk_isValid;

    QString m_end_rk;
    bool m_end_rk_isSet;
    bool m_end_rk_isValid;

    QString m_key_to_sign;
    bool m_key_to_sign_isSet;
    bool m_key_to_sign_isValid;

    QString m_rscc;
    bool m_rscc_isSet;
    bool m_rscc_isValid;

    QString m_rscd;
    bool m_rscd_isSet;
    bool m_rscd_isValid;

    QString m_rsce;
    bool m_rsce_isSet;
    bool m_rsce_isValid;

    QString m_rscl;
    bool m_rscl_isSet;
    bool m_rscl_isValid;

    QString m_rsct;
    bool m_rsct_isSet;
    bool m_rsct_isValid;

    QDateTime m_signed_expiry;
    bool m_signed_expiry_isSet;
    bool m_signed_expiry_isValid;

    QString m_signed_identifier;
    bool m_signed_identifier_isSet;
    bool m_signed_identifier_isValid;

    QString m_signed_ip;
    bool m_signed_ip_isSet;
    bool m_signed_ip_isValid;

    QString m_signed_permission;
    bool m_signed_permission_isSet;
    bool m_signed_permission_isValid;

    QString m_signed_protocol;
    bool m_signed_protocol_isSet;
    bool m_signed_protocol_isValid;

    QString m_signed_resource;
    bool m_signed_resource_isSet;
    bool m_signed_resource_isValid;

    QDateTime m_signed_start;
    bool m_signed_start_isSet;
    bool m_signed_start_isValid;

    QString m_start_pk;
    bool m_start_pk_isSet;
    bool m_start_pk_isValid;

    QString m_start_rk;
    bool m_start_rk_isSet;
    bool m_start_rk_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceSasParameters)

#endif // OAIServiceSasParameters_H
