/**
 * StorageManagementClient
 * The Storage Management Client.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CheckNameAvailabilityResult from './model/CheckNameAvailabilityResult';
import CustomDomain from './model/CustomDomain';
import Endpoints from './model/Endpoints';
import Resource from './model/Resource';
import StorageAccount from './model/StorageAccount';
import StorageAccountCheckNameAvailabilityParameters from './model/StorageAccountCheckNameAvailabilityParameters';
import StorageAccountCreateParameters from './model/StorageAccountCreateParameters';
import StorageAccountKeys from './model/StorageAccountKeys';
import StorageAccountListResult from './model/StorageAccountListResult';
import StorageAccountProperties from './model/StorageAccountProperties';
import StorageAccountPropertiesCreateParameters from './model/StorageAccountPropertiesCreateParameters';
import StorageAccountPropertiesUpdateParameters from './model/StorageAccountPropertiesUpdateParameters';
import StorageAccountRegenerateKeyParameters from './model/StorageAccountRegenerateKeyParameters';
import StorageAccountUpdateParameters from './model/StorageAccountUpdateParameters';
import SubResource from './model/SubResource';
import Usage from './model/Usage';
import UsageListResult from './model/UsageListResult';
import UsageName from './model/UsageName';
import StorageAccountsApi from './api/StorageAccountsApi';
import UsageApi from './api/UsageApi';


/**
* The Storage Management Client..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var StorageManagementClient = require('index'); // See note below*.
* var xxxSvc = new StorageManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new StorageManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new StorageManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new StorageManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-05-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CheckNameAvailabilityResult model constructor.
     * @property {module:model/CheckNameAvailabilityResult}
     */
    CheckNameAvailabilityResult,

    /**
     * The CustomDomain model constructor.
     * @property {module:model/CustomDomain}
     */
    CustomDomain,

    /**
     * The Endpoints model constructor.
     * @property {module:model/Endpoints}
     */
    Endpoints,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The StorageAccount model constructor.
     * @property {module:model/StorageAccount}
     */
    StorageAccount,

    /**
     * The StorageAccountCheckNameAvailabilityParameters model constructor.
     * @property {module:model/StorageAccountCheckNameAvailabilityParameters}
     */
    StorageAccountCheckNameAvailabilityParameters,

    /**
     * The StorageAccountCreateParameters model constructor.
     * @property {module:model/StorageAccountCreateParameters}
     */
    StorageAccountCreateParameters,

    /**
     * The StorageAccountKeys model constructor.
     * @property {module:model/StorageAccountKeys}
     */
    StorageAccountKeys,

    /**
     * The StorageAccountListResult model constructor.
     * @property {module:model/StorageAccountListResult}
     */
    StorageAccountListResult,

    /**
     * The StorageAccountProperties model constructor.
     * @property {module:model/StorageAccountProperties}
     */
    StorageAccountProperties,

    /**
     * The StorageAccountPropertiesCreateParameters model constructor.
     * @property {module:model/StorageAccountPropertiesCreateParameters}
     */
    StorageAccountPropertiesCreateParameters,

    /**
     * The StorageAccountPropertiesUpdateParameters model constructor.
     * @property {module:model/StorageAccountPropertiesUpdateParameters}
     */
    StorageAccountPropertiesUpdateParameters,

    /**
     * The StorageAccountRegenerateKeyParameters model constructor.
     * @property {module:model/StorageAccountRegenerateKeyParameters}
     */
    StorageAccountRegenerateKeyParameters,

    /**
     * The StorageAccountUpdateParameters model constructor.
     * @property {module:model/StorageAccountUpdateParameters}
     */
    StorageAccountUpdateParameters,

    /**
     * The SubResource model constructor.
     * @property {module:model/SubResource}
     */
    SubResource,

    /**
     * The Usage model constructor.
     * @property {module:model/Usage}
     */
    Usage,

    /**
     * The UsageListResult model constructor.
     * @property {module:model/UsageListResult}
     */
    UsageListResult,

    /**
     * The UsageName model constructor.
     * @property {module:model/UsageName}
     */
    UsageName,

    /**
    * The StorageAccountsApi service constructor.
    * @property {module:api/StorageAccountsApi}
    */
    StorageAccountsApi,

    /**
    * The UsageApi service constructor.
    * @property {module:api/UsageApi}
    */
    UsageApi
};
