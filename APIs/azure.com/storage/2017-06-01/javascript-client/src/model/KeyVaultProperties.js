/**
 * StorageManagement
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The KeyVaultProperties model module.
 * @module model/KeyVaultProperties
 * @version 2017-06-01
 */
class KeyVaultProperties {
    /**
     * Constructs a new <code>KeyVaultProperties</code>.
     * Properties of key vault.
     * @alias module:model/KeyVaultProperties
     */
    constructor() { 
        
        KeyVaultProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KeyVaultProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeyVaultProperties} obj Optional instance to populate.
     * @return {module:model/KeyVaultProperties} The populated <code>KeyVaultProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeyVaultProperties();

            if (data.hasOwnProperty('keyname')) {
                obj['keyname'] = ApiClient.convertToType(data['keyname'], 'String');
            }
            if (data.hasOwnProperty('keyvaulturi')) {
                obj['keyvaulturi'] = ApiClient.convertToType(data['keyvaulturi'], 'String');
            }
            if (data.hasOwnProperty('keyversion')) {
                obj['keyversion'] = ApiClient.convertToType(data['keyversion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeyVaultProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeyVaultProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['keyname'] && !(typeof data['keyname'] === 'string' || data['keyname'] instanceof String)) {
            throw new Error("Expected the field `keyname` to be a primitive type in the JSON string but got " + data['keyname']);
        }
        // ensure the json data is a string
        if (data['keyvaulturi'] && !(typeof data['keyvaulturi'] === 'string' || data['keyvaulturi'] instanceof String)) {
            throw new Error("Expected the field `keyvaulturi` to be a primitive type in the JSON string but got " + data['keyvaulturi']);
        }
        // ensure the json data is a string
        if (data['keyversion'] && !(typeof data['keyversion'] === 'string' || data['keyversion'] instanceof String)) {
            throw new Error("Expected the field `keyversion` to be a primitive type in the JSON string but got " + data['keyversion']);
        }

        return true;
    }


}



/**
 * The name of KeyVault key.
 * @member {String} keyname
 */
KeyVaultProperties.prototype['keyname'] = undefined;

/**
 * The Uri of KeyVault.
 * @member {String} keyvaulturi
 */
KeyVaultProperties.prototype['keyvaulturi'] = undefined;

/**
 * The version of KeyVault key.
 * @member {String} keyversion
 */
KeyVaultProperties.prototype['keyversion'] = undefined;






export default KeyVaultProperties;

