/**
 * StorageManagement
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EncryptionService model module.
 * @module model/EncryptionService
 * @version 2017-06-01
 */
class EncryptionService {
    /**
     * Constructs a new <code>EncryptionService</code>.
     * A service that allows server-side encryption to be used.
     * @alias module:model/EncryptionService
     */
    constructor() { 
        
        EncryptionService.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EncryptionService</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EncryptionService} obj Optional instance to populate.
     * @return {module:model/EncryptionService} The populated <code>EncryptionService</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EncryptionService();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('lastEnabledTime')) {
                obj['lastEnabledTime'] = ApiClient.convertToType(data['lastEnabledTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EncryptionService</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EncryptionService</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * A boolean indicating whether or not the service encrypts the data as it is stored.
 * @member {Boolean} enabled
 */
EncryptionService.prototype['enabled'] = undefined;

/**
 * Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
 * @member {Date} lastEnabledTime
 */
EncryptionService.prototype['lastEnabledTime'] = undefined;






export default EncryptionService;

