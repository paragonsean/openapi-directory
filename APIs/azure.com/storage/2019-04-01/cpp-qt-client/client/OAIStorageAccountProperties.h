/**
 * StorageManagementClient
 * The Azure Storage Management API.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStorageAccountProperties.h
 *
 * Properties of the storage account.
 */

#ifndef OAIStorageAccountProperties_H
#define OAIStorageAccountProperties_H

#include <QJsonObject>

#include "OAIAzureFilesIdentityBasedAuthentication.h"
#include "OAICustomDomain.h"
#include "OAIEncryption.h"
#include "OAIEndpoints.h"
#include "OAIGeoReplicationStats.h"
#include "OAINetworkRuleSet.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAzureFilesIdentityBasedAuthentication;
class OAICustomDomain;
class OAIEncryption;
class OAIGeoReplicationStats;
class OAINetworkRuleSet;
class OAIEndpoints;

class OAIStorageAccountProperties : public OAIObject {
public:
    OAIStorageAccountProperties();
    OAIStorageAccountProperties(QString json);
    ~OAIStorageAccountProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessTier() const;
    void setAccessTier(const QString &access_tier);
    bool is_access_tier_Set() const;
    bool is_access_tier_Valid() const;

    OAIAzureFilesIdentityBasedAuthentication getAzureFilesIdentityBasedAuthentication() const;
    void setAzureFilesIdentityBasedAuthentication(const OAIAzureFilesIdentityBasedAuthentication &azure_files_identity_based_authentication);
    bool is_azure_files_identity_based_authentication_Set() const;
    bool is_azure_files_identity_based_authentication_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    OAICustomDomain getCustomDomain() const;
    void setCustomDomain(const OAICustomDomain &custom_domain);
    bool is_custom_domain_Set() const;
    bool is_custom_domain_Valid() const;

    OAIEncryption getEncryption() const;
    void setEncryption(const OAIEncryption &encryption);
    bool is_encryption_Set() const;
    bool is_encryption_Valid() const;

    bool isFailoverInProgress() const;
    void setFailoverInProgress(const bool &failover_in_progress);
    bool is_failover_in_progress_Set() const;
    bool is_failover_in_progress_Valid() const;

    OAIGeoReplicationStats getGeoReplicationStats() const;
    void setGeoReplicationStats(const OAIGeoReplicationStats &geo_replication_stats);
    bool is_geo_replication_stats_Set() const;
    bool is_geo_replication_stats_Valid() const;

    bool isIsHnsEnabled() const;
    void setIsHnsEnabled(const bool &is_hns_enabled);
    bool is_is_hns_enabled_Set() const;
    bool is_is_hns_enabled_Valid() const;

    QString getLargeFileSharesState() const;
    void setLargeFileSharesState(const QString &large_file_shares_state);
    bool is_large_file_shares_state_Set() const;
    bool is_large_file_shares_state_Valid() const;

    QDateTime getLastGeoFailoverTime() const;
    void setLastGeoFailoverTime(const QDateTime &last_geo_failover_time);
    bool is_last_geo_failover_time_Set() const;
    bool is_last_geo_failover_time_Valid() const;

    OAINetworkRuleSet getNetworkAcls() const;
    void setNetworkAcls(const OAINetworkRuleSet &network_acls);
    bool is_network_acls_Set() const;
    bool is_network_acls_Valid() const;

    OAIEndpoints getPrimaryEndpoints() const;
    void setPrimaryEndpoints(const OAIEndpoints &primary_endpoints);
    bool is_primary_endpoints_Set() const;
    bool is_primary_endpoints_Valid() const;

    QString getPrimaryLocation() const;
    void setPrimaryLocation(const QString &primary_location);
    bool is_primary_location_Set() const;
    bool is_primary_location_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIEndpoints getSecondaryEndpoints() const;
    void setSecondaryEndpoints(const OAIEndpoints &secondary_endpoints);
    bool is_secondary_endpoints_Set() const;
    bool is_secondary_endpoints_Valid() const;

    QString getSecondaryLocation() const;
    void setSecondaryLocation(const QString &secondary_location);
    bool is_secondary_location_Set() const;
    bool is_secondary_location_Valid() const;

    QString getStatusOfPrimary() const;
    void setStatusOfPrimary(const QString &status_of_primary);
    bool is_status_of_primary_Set() const;
    bool is_status_of_primary_Valid() const;

    QString getStatusOfSecondary() const;
    void setStatusOfSecondary(const QString &status_of_secondary);
    bool is_status_of_secondary_Set() const;
    bool is_status_of_secondary_Valid() const;

    bool isSupportsHttpsTrafficOnly() const;
    void setSupportsHttpsTrafficOnly(const bool &supports_https_traffic_only);
    bool is_supports_https_traffic_only_Set() const;
    bool is_supports_https_traffic_only_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_tier;
    bool m_access_tier_isSet;
    bool m_access_tier_isValid;

    OAIAzureFilesIdentityBasedAuthentication m_azure_files_identity_based_authentication;
    bool m_azure_files_identity_based_authentication_isSet;
    bool m_azure_files_identity_based_authentication_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    OAICustomDomain m_custom_domain;
    bool m_custom_domain_isSet;
    bool m_custom_domain_isValid;

    OAIEncryption m_encryption;
    bool m_encryption_isSet;
    bool m_encryption_isValid;

    bool m_failover_in_progress;
    bool m_failover_in_progress_isSet;
    bool m_failover_in_progress_isValid;

    OAIGeoReplicationStats m_geo_replication_stats;
    bool m_geo_replication_stats_isSet;
    bool m_geo_replication_stats_isValid;

    bool m_is_hns_enabled;
    bool m_is_hns_enabled_isSet;
    bool m_is_hns_enabled_isValid;

    QString m_large_file_shares_state;
    bool m_large_file_shares_state_isSet;
    bool m_large_file_shares_state_isValid;

    QDateTime m_last_geo_failover_time;
    bool m_last_geo_failover_time_isSet;
    bool m_last_geo_failover_time_isValid;

    OAINetworkRuleSet m_network_acls;
    bool m_network_acls_isSet;
    bool m_network_acls_isValid;

    OAIEndpoints m_primary_endpoints;
    bool m_primary_endpoints_isSet;
    bool m_primary_endpoints_isValid;

    QString m_primary_location;
    bool m_primary_location_isSet;
    bool m_primary_location_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIEndpoints m_secondary_endpoints;
    bool m_secondary_endpoints_isSet;
    bool m_secondary_endpoints_isValid;

    QString m_secondary_location;
    bool m_secondary_location_isSet;
    bool m_secondary_location_isValid;

    QString m_status_of_primary;
    bool m_status_of_primary_isSet;
    bool m_status_of_primary_isValid;

    QString m_status_of_secondary;
    bool m_status_of_secondary_isSet;
    bool m_status_of_secondary_isValid;

    bool m_supports_https_traffic_only;
    bool m_supports_https_traffic_only_isSet;
    bool m_supports_https_traffic_only_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStorageAccountProperties)

#endif // OAIStorageAccountProperties_H
