# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActiveDirectoryProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, azure_storage_sid: str=None, domain_guid: str=None, domain_name: str=None, domain_sid: str=None, forest_name: str=None, net_bios_domain_name: str=None):
        """ActiveDirectoryProperties - a model defined in OpenAPI

        :param azure_storage_sid: The azure_storage_sid of this ActiveDirectoryProperties.
        :param domain_guid: The domain_guid of this ActiveDirectoryProperties.
        :param domain_name: The domain_name of this ActiveDirectoryProperties.
        :param domain_sid: The domain_sid of this ActiveDirectoryProperties.
        :param forest_name: The forest_name of this ActiveDirectoryProperties.
        :param net_bios_domain_name: The net_bios_domain_name of this ActiveDirectoryProperties.
        """
        self.openapi_types = {
            'azure_storage_sid': str,
            'domain_guid': str,
            'domain_name': str,
            'domain_sid': str,
            'forest_name': str,
            'net_bios_domain_name': str
        }

        self.attribute_map = {
            'azure_storage_sid': 'azureStorageSid',
            'domain_guid': 'domainGuid',
            'domain_name': 'domainName',
            'domain_sid': 'domainSid',
            'forest_name': 'forestName',
            'net_bios_domain_name': 'netBiosDomainName'
        }

        self._azure_storage_sid = azure_storage_sid
        self._domain_guid = domain_guid
        self._domain_name = domain_name
        self._domain_sid = domain_sid
        self._forest_name = forest_name
        self._net_bios_domain_name = net_bios_domain_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActiveDirectoryProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActiveDirectoryProperties of this ActiveDirectoryProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def azure_storage_sid(self):
        """Gets the azure_storage_sid of this ActiveDirectoryProperties.

        Specifies the security identifier (SID) for Azure Storage.

        :return: The azure_storage_sid of this ActiveDirectoryProperties.
        :rtype: str
        """
        return self._azure_storage_sid

    @azure_storage_sid.setter
    def azure_storage_sid(self, azure_storage_sid):
        """Sets the azure_storage_sid of this ActiveDirectoryProperties.

        Specifies the security identifier (SID) for Azure Storage.

        :param azure_storage_sid: The azure_storage_sid of this ActiveDirectoryProperties.
        :type azure_storage_sid: str
        """
        if azure_storage_sid is None:
            raise ValueError("Invalid value for `azure_storage_sid`, must not be `None`")

        self._azure_storage_sid = azure_storage_sid

    @property
    def domain_guid(self):
        """Gets the domain_guid of this ActiveDirectoryProperties.

        Specifies the domain GUID.

        :return: The domain_guid of this ActiveDirectoryProperties.
        :rtype: str
        """
        return self._domain_guid

    @domain_guid.setter
    def domain_guid(self, domain_guid):
        """Sets the domain_guid of this ActiveDirectoryProperties.

        Specifies the domain GUID.

        :param domain_guid: The domain_guid of this ActiveDirectoryProperties.
        :type domain_guid: str
        """
        if domain_guid is None:
            raise ValueError("Invalid value for `domain_guid`, must not be `None`")

        self._domain_guid = domain_guid

    @property
    def domain_name(self):
        """Gets the domain_name of this ActiveDirectoryProperties.

        Specifies the primary domain that the AD DNS server is authoritative for.

        :return: The domain_name of this ActiveDirectoryProperties.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this ActiveDirectoryProperties.

        Specifies the primary domain that the AD DNS server is authoritative for.

        :param domain_name: The domain_name of this ActiveDirectoryProperties.
        :type domain_name: str
        """
        if domain_name is None:
            raise ValueError("Invalid value for `domain_name`, must not be `None`")

        self._domain_name = domain_name

    @property
    def domain_sid(self):
        """Gets the domain_sid of this ActiveDirectoryProperties.

        Specifies the security identifier (SID).

        :return: The domain_sid of this ActiveDirectoryProperties.
        :rtype: str
        """
        return self._domain_sid

    @domain_sid.setter
    def domain_sid(self, domain_sid):
        """Sets the domain_sid of this ActiveDirectoryProperties.

        Specifies the security identifier (SID).

        :param domain_sid: The domain_sid of this ActiveDirectoryProperties.
        :type domain_sid: str
        """
        if domain_sid is None:
            raise ValueError("Invalid value for `domain_sid`, must not be `None`")

        self._domain_sid = domain_sid

    @property
    def forest_name(self):
        """Gets the forest_name of this ActiveDirectoryProperties.

        Specifies the Active Directory forest to get.

        :return: The forest_name of this ActiveDirectoryProperties.
        :rtype: str
        """
        return self._forest_name

    @forest_name.setter
    def forest_name(self, forest_name):
        """Sets the forest_name of this ActiveDirectoryProperties.

        Specifies the Active Directory forest to get.

        :param forest_name: The forest_name of this ActiveDirectoryProperties.
        :type forest_name: str
        """
        if forest_name is None:
            raise ValueError("Invalid value for `forest_name`, must not be `None`")

        self._forest_name = forest_name

    @property
    def net_bios_domain_name(self):
        """Gets the net_bios_domain_name of this ActiveDirectoryProperties.

        Specifies the NetBIOS domain name.

        :return: The net_bios_domain_name of this ActiveDirectoryProperties.
        :rtype: str
        """
        return self._net_bios_domain_name

    @net_bios_domain_name.setter
    def net_bios_domain_name(self, net_bios_domain_name):
        """Sets the net_bios_domain_name of this ActiveDirectoryProperties.

        Specifies the NetBIOS domain name.

        :param net_bios_domain_name: The net_bios_domain_name of this ActiveDirectoryProperties.
        :type net_bios_domain_name: str
        """
        if net_bios_domain_name is None:
            raise ValueError("Invalid value for `net_bios_domain_name`, must not be `None`")

        self._net_bios_domain_name = net_bios_domain_name
