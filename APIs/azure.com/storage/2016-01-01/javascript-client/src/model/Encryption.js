/**
 * StorageManagementClient
 * The Storage Management Client.
 *
 * The version of the OpenAPI document: 2016-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EncryptionServices from './EncryptionServices';

/**
 * The Encryption model module.
 * @module model/Encryption
 * @version 2016-01-01
 */
class Encryption {
    /**
     * Constructs a new <code>Encryption</code>.
     * The encryption settings on the storage account.
     * @alias module:model/Encryption
     * @param keySource {module:model/Encryption.KeySourceEnum} The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage
     */
    constructor(keySource) { 
        
        Encryption.initialize(this, keySource);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, keySource) { 
        obj['keySource'] = keySource;
    }

    /**
     * Constructs a <code>Encryption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Encryption} obj Optional instance to populate.
     * @return {module:model/Encryption} The populated <code>Encryption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Encryption();

            if (data.hasOwnProperty('keySource')) {
                obj['keySource'] = ApiClient.convertToType(data['keySource'], 'String');
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = EncryptionServices.constructFromObject(data['services']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Encryption</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Encryption</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Encryption.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['keySource'] && !(typeof data['keySource'] === 'string' || data['keySource'] instanceof String)) {
            throw new Error("Expected the field `keySource` to be a primitive type in the JSON string but got " + data['keySource']);
        }
        // validate the optional field `services`
        if (data['services']) { // data not null
          EncryptionServices.validateJSON(data['services']);
        }

        return true;
    }


}

Encryption.RequiredProperties = ["keySource"];

/**
 * The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage
 * @member {module:model/Encryption.KeySourceEnum} keySource
 */
Encryption.prototype['keySource'] = undefined;

/**
 * @member {module:model/EncryptionServices} services
 */
Encryption.prototype['services'] = undefined;





/**
 * Allowed values for the <code>keySource</code> property.
 * @enum {String}
 * @readonly
 */
Encryption['KeySourceEnum'] = {

    /**
     * value: "Microsoft.Storage"
     * @const
     */
    "Microsoft.Storage": "Microsoft.Storage"
};



export default Encryption;

