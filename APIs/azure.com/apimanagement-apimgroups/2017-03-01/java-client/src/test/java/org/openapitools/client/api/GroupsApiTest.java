/*
 * ApiManagementClient
 * Use these REST APIs for performing operations on Group entity in your Azure API Management deployment. Groups are used to manage the visibility of products to developers. Each API Management service instance comes with the following immutable system groups whose membership is automatically managed by API Management.  - **Administrators** - Azure subscription administrators are members of this group. - **Developers** - Authenticated developer portal users fall into this group. - **Guests** - Unauthenticated developer portal users are placed into this group. In addition to these system groups, administrators can create custom groups or [leverage external groups in associated Azure Active Directory tenants](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-aad#how-to-add-an-external-azure-active-directory-group). Custom and external groups can be used alongside system groups in giving developers visibility and access to API products. For example, you could create one custom group for developers affiliated with a specific partner organization and allow them access to the APIs from a product containing relevant APIs only. A user can be a member of more than one group.
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GroupCollection;
import org.openapitools.client.model.GroupContract;
import org.openapitools.client.model.GroupCreateParameters;
import org.openapitools.client.model.GroupGetDefaultResponse;
import org.openapitools.client.model.GroupUpdateParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GroupsApi
 */
@Disabled
public class GroupsApiTest {

    private final GroupsApi api = new GroupsApi();

    /**
     * Creates or Updates a group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void groupCreateOrUpdateTest() throws ApiException {
        String groupId = null;
        String apiVersion = null;
        GroupCreateParameters parameters = null;
        GroupContract response = api.groupCreateOrUpdate(groupId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes specific group of the API Management service instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void groupDeleteTest() throws ApiException {
        String groupId = null;
        String ifMatch = null;
        String apiVersion = null;
        api.groupDelete(groupId, ifMatch, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the details of the group specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void groupGetTest() throws ApiException {
        String groupId = null;
        String apiVersion = null;
        GroupContract response = api.groupGet(groupId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists a collection of groups defined within a service instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void groupListTest() throws ApiException {
        String apiVersion = null;
        String $filter = null;
        Integer $top = null;
        Integer $skip = null;
        GroupCollection response = api.groupList(apiVersion, $filter, $top, $skip);
        // TODO: test validations
    }

    /**
     * Updates the details of the group specified by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void groupUpdateTest() throws ApiException {
        String groupId = null;
        String ifMatch = null;
        String apiVersion = null;
        GroupUpdateParameters parameters = null;
        api.groupUpdate(groupId, ifMatch, apiVersion, parameters);
        // TODO: test validations
    }

}
