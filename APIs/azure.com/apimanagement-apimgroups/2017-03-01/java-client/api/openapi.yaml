openapi: 3.0.1
info:
  description: "Use these REST APIs for performing operations on Group entity in your\
    \ Azure API Management deployment. Groups are used to manage the visibility of\
    \ products to developers. Each API Management service instance comes with the\
    \ following immutable system groups whose membership is automatically managed\
    \ by API Management.  - **Administrators** - Azure subscription administrators\
    \ are members of this group. - **Developers** - Authenticated developer portal\
    \ users fall into this group. - **Guests** - Unauthenticated developer portal\
    \ users are placed into this group. In addition to these system groups, administrators\
    \ can create custom groups or [leverage external groups in associated Azure Active\
    \ Directory tenants](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-aad#how-to-add-an-external-azure-active-directory-group).\
    \ Custom and external groups can be used alongside system groups in giving developers\
    \ visibility and access to API products. For example, you could create one custom\
    \ group for developers affiliated with a specific partner organization and allow\
    \ them access to the APIs from a product containing relevant APIs only. A user\
    \ can be a member of more than one group."
  title: ApiManagementClient
  version: 2017-03-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/control-plane/Microsoft.ApiManagement/preview/2017-03-01/apimgroups.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: apimanagement-apimgroups
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://azure.local/
security:
- apim_key: []
paths:
  /groups:
    get:
      description: Lists a collection of groups defined within a service instance.
      externalDocs:
        url: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-groups
      operationId: Group_List
      parameters:
      - description: |-
          | Field       | Supported operators    | Supported functions                         |
          |-------------|------------------------|---------------------------------------------|
          | id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          | name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          | description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          | type        | eq, ne                 | N/A                                         |
        in: query
        name: $filter
        schema:
          type: string
      - description: Number of records to return.
        in: query
        name: $top
        schema:
          format: int32
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Number of records to skip.
        in: query
        name: $skip
        schema:
          format: int32
          minimum: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCollection'
          description: Lists a collection of Group entities.
      tags:
      - Groups
      x-ms-examples:
        ApiManagementListGroups:
          parameters:
            $skip: 0
            $top: 10000
            Accept: application/json
            api-version: 2017-03-01
            apimBaseUrl: apimservice1.management.azure-api.net
          responses:
            "200":
              body:
                count: 3
                value:
                - builtIn: true
                  description: Administrators is a built-in group. Its membership
                    is managed by the system. Microsoft Azure subscription administrators
                    fall into this group.
                  id: /groups/administrators
                  name: Administrators
                  type: system
                - builtIn: true
                  description: Developers is a built-in group. Its membership is managed
                    by the system. Signed-in users fall into this group.
                  id: /groups/developers
                  name: Developers
                  type: system
                - builtIn: true
                  description: Guests is a built-in group. Its membership is managed
                    by the system. Unauthenticated users visiting the developer portal
                    fall into this group.
                  id: /groups/guests
                  name: Guests
                  type: system
      x-ms-odata: '#/definitions/GroupContract'
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /groups/{groupId}:
    delete:
      description: Deletes specific group of the API Management service instance.
      operationId: Group_Delete
      parameters:
      - description: Group identifier. Must be unique in the current API Management
          service instance.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: ETag of the Group Entity. ETag should match the current entity
          state from the header response of the GET request or it should be * for
          unconditional update.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The group was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_Get_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Groups
      x-ms-examples:
        ApiManagementDeleteGroups:
          parameters:
            If-Match: '*'
            api-version: 2017-03-01
            apimBaseUrl: apimservice1.management.azure-api.net
            groupId: 5a58bb18a40f7ef2e05bd532
          responses:
            "204": {}
      x-accepts:
      - application/json
    get:
      description: Gets the details of the group specified by its identifier.
      operationId: Group_Get
      parameters:
      - description: Group identifier. Must be unique in the current API Management
          service instance.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupContract'
          description: The response body contains the specified Group entity.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque
                and used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_Get_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Groups
      x-ms-examples:
        ApiManagementGetGroups:
          parameters:
            Accept: application/json
            api-version: 2017-03-01
            apimBaseUrl: apimservice1.management.azure-api.net
            groupId: 5a58baeea40f7ef2e05bcf5a
          responses:
            "200":
              body:
                builtIn: false
                id: /groups/5a58baeea40f7ef2e05bcf5a
                name: 5a58baeea40f7ef2e05bcf5b
                type: custom
      x-accepts:
      - application/json
    patch:
      description: Updates the details of the group specified by its identifier.
      operationId: Group_Update
      parameters:
      - description: Group identifier. Must be unique in the current API Management
          service instance.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: ETag of the Group Entity. ETag should match the current entity
          state from the header response of the GET request or it should be * for
          unconditional update.
        in: header
        name: If-Match
        required: true
        schema:
          type: string
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateParameters'
        description: Update parameters.
        required: true
      responses:
        "204":
          content: {}
          description: The group details were successfully updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_Get_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Groups
      x-ms-examples:
        ApiManagementPatchGroups:
          parameters:
            If-Match: '"AAAAAAAACo0="'
            api-version: 2017-03-01
            apimBaseUrl: apimservice1.management.azure-api.net
            groupId: 5a58baf9a40f7ef2e05bcfb9
            parameters:
              description: some new description
              name: 5a58baf9a40f7ef2e05bcfbc
          responses:
            "204": {}
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Creates or Updates a group.
      operationId: Group_CreateOrUpdate
      parameters:
      - description: Group identifier. Must be unique in the current API Management
          service instance.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateParameters'
        description: Create parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupContract'
          description: Group already exists.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupContract'
          description: Group was created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_Get_default_response'
          description: Error response describing why the operation failed.
      tags:
      - Groups
      x-ms-examples:
        ApiManagementPutGroups:
          parameters:
            api-version: 2017-03-01
            apimBaseUrl: apimservice1.management.azure-api.net
            groupId: 5a58babda40f7ef2e05bc7b6
            parameters:
              name: 5a58babda40f7ef2e05bc7b7
              type: custom
          responses:
            "200":
              body:
                builtIn: false
                id: /groups/5a58babda40f7ef2e05bc7b6
                name: 5a58babda40f7ef2e05bc7b7
                type: custom
            "201":
              body:
                builtIn: false
                id: /groups/5a58babda40f7ef2e05bc7b6
                name: 5a58babda40f7ef2e05bc7b7
                type: custom
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
  /groups/{groupId}/users:
    get:
      description: "Lists a collection of the members of the group, specified by its\
        \ identifier."
      operationId: GroupUser_List
      parameters:
      - description: Group identifier. Must be unique in the current API Management
          service instance.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: |-
          | Field            | Supported operators    | Supported functions               |
          |------------------|------------------------|-----------------------------------|
          | id               | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          | firstName        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          | lastName         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          | email            | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          | state            | eq                     | N/A                               |
          | registrationDate | ge, le, eq, ne, gt, lt | N/A                               |
          | note             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
        in: query
        name: $filter
        schema:
          type: string
      - description: Number of records to return.
        in: query
        name: $top
        schema:
          format: int32
          minimum: 1
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Number of records to skip.
        in: query
        name: $skip
        schema:
          format: int32
          minimum: 0
          type: integer
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUser_List_200_response'
          description: Lists a collection of user entities associated with the group.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_Get_default_response'
          description: Error response describing why the operation failed.
      tags:
      - GroupUsers
      x-ms-examples:
        ApiManagementListGroupsUsers:
          parameters:
            Accept: application/json
            api-version: 2017-03-01
            apimBaseUrl: apimservice1.management.azure-api.net
            groupId: 5a58bad0a40f7ef2e05bccca
          responses:
            "200":
              body:
                count: 3
                value:
                - email: 5a58bad0a40f7ef2e05bccce@contoso.com
                  firstName: 5a58bad0a40f7ef2e05bcccf
                  id: /users/5a58bad0a40f7ef2e05bcccd
                  identities:
                  - id: 5a58bad0a40f7ef2e05bccce@contoso.com
                    provider: Basic
                  lastName: 5a58bad0a40f7ef2e05bccd0
                  registrationDate: 2018-01-12T13:40:32.81Z
                  state: active
                - email: 5a58bad0a40f7ef2e05bccd3@contoso.com
                  firstName: 5a58bad0a40f7ef2e05bccd4
                  id: /users/5a58bad0a40f7ef2e05bccd2
                  identities:
                  - id: 5a58bad0a40f7ef2e05bccd3@contoso.com
                    provider: Basic
                  lastName: 5a58bad0a40f7ef2e05bccd5
                  registrationDate: 2018-01-12T13:40:32.81Z
                  state: active
                - email: 5a58bad0a40f7ef2e05bccd8@contoso.com
                  firstName: 5a58bad0a40f7ef2e05bccd9
                  id: /users/5a58bad0a40f7ef2e05bccd7
                  identities:
                  - id: 5a58bad0a40f7ef2e05bccd8@contoso.com
                    provider: Basic
                  lastName: 5a58bad0a40f7ef2e05bccda
                  registrationDate: 2018-01-12T13:40:32.86Z
                  state: active
      x-ms-odata: ./apimusers.json#/definitions/UserContract
      x-ms-pageable:
        nextLinkName: nextLink
      x-accepts:
      - application/json
  /groups/{groupId}/users/{uid}:
    delete:
      description: Remove existing user from existing group.
      operationId: GroupUser_Delete
      parameters:
      - description: Group identifier. Must be unique in the current API Management
          service instance.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: User identifier. Must be unique in the current API Management
          service instance.
        in: path
        name: uid
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The user was successfully removed from the group.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_Get_default_response'
          description: Error response describing why the operation failed.
      tags:
      - GroupUsers
      x-ms-examples:
        ApiManagementDeleteGroupsUsers:
          parameters:
            api-version: 2017-03-01
            apimBaseUrl: apimservice1.management.azure-api.net
            groupId: 5a58bae8a40f7ef2e05bcda2
            uid: 5a58bae8a40f7ef2e05bcda5
          responses:
            "204": {}
      x-accepts:
      - application/json
    put:
      description: Adds a user to the specified group.
      operationId: GroupUser_Create
      parameters:
      - description: Group identifier. Must be unique in the current API Management
          service instance.
        in: path
        name: groupId
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: User identifier. Must be unique in the current API Management
          service instance.
        in: path
        name: uid
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "^[^*#&+:<>?]+$"
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - description: Version of the API to be used with the client request.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUser_Create_200_response'
          description: The specified user is already a member of the specified group.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUser_Create_200_response'
          description: The user was successfully added to the group.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_Get_default_response'
          description: Error response describing why the operation failed.
      tags:
      - GroupUsers
      x-ms-examples:
        ApiManagementPutGroupsUsers:
          parameters:
            api-version: 2017-03-01
            apimBaseUrl: apimservice1.management.azure-api.net
            groupId: 5a58bacfa40f7ef2e05bccc6
            uid: 5a58bacfa40f7ef2e05bccc0
          responses:
            "200":
              body:
                email: 5a58bacfa40f7ef2e05bccc1@contoso.com
                firstName: 5a58bacfa40f7ef2e05bccc2
                groups: []
                id: /users/5a58bacfa40f7ef2e05bccc0
                identities: []
                lastName: 5a58bacfa40f7ef2e05bccc3
                registrationDate: 2018-01-12T13:40:31.663Z
                state: active
            "201":
              body:
                email: 5a58bacfa40f7ef2e05bccc1@contoso.com
                firstName: 5a58bacfa40f7ef2e05bccc2
                groups: []
                id: /users/5a58bacfa40f7ef2e05bccc0
                identities: []
                lastName: 5a58bacfa40f7ef2e05bccc3
                registrationDate: 2018-01-12T13:40:31.663Z
                state: active
      x-accepts:
      - application/json
components:
  parameters:
    GroupIdParameter:
      description: Group identifier. Must be unique in the current API Management
        service instance.
      in: path
      name: groupId
      required: true
      schema:
        maxLength: 256
        minLength: 1
        pattern: "^[^*#&+:<>?]+$"
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
  schemas:
    GroupCollection:
      description: Paged Group list representation.
      example:
        count: 0
        value:
        - id: id
        - id: id
        nextLink: nextLink
      properties:
        count:
          description: Total number of entities
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: '#/components/schemas/GroupContract'
          type: array
      type: object
    GroupContract:
      allOf:
      - description: Developer group.
        properties:
          builtIn:
            description: "true if the group is one of the three system groups (Administrators,\
              \ Developers, or Guests); otherwise false."
            readOnly: true
            type: boolean
          description:
            description: Group description. Can contain HTML formatting tags.
            maxLength: 1000
            type: string
          externalId:
            description: "For external groups, this property contains the id of the\
              \ group from the external identity provider, e.g. for Azure Active Directory\
              \ aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise\
              \ the value is null."
            type: string
          name:
            description: Group name.
            maxLength: 300
            minLength: 1
            type: string
          type:
            description: Group type.
            enum:
            - custom
            - system
            - external
            type: string
            x-ms-enum:
              modelAsString: false
              name: GroupType
        required:
        - name
        type: object
      description: Contract details.
      example:
        id: id
      properties:
        id:
          description: Identifier of the Group entity.
          type: string
    GroupContractProperties:
      description: Developer group.
      properties:
        builtIn:
          description: "true if the group is one of the three system groups (Administrators,\
            \ Developers, or Guests); otherwise false."
          readOnly: true
          type: boolean
        description:
          description: Group description. Can contain HTML formatting tags.
          maxLength: 1000
          type: string
        externalId:
          description: "For external groups, this property contains the id of the\
            \ group from the external identity provider, e.g. for Azure Active Directory\
            \ aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise the\
            \ value is null."
          type: string
        name:
          description: Group name.
          maxLength: 300
          minLength: 1
          type: string
        type:
          description: Group type.
          enum:
          - custom
          - system
          - external
          type: string
          x-ms-enum:
            modelAsString: false
            name: GroupType
      required:
      - name
      type: object
    GroupCreateParameters:
      description: Parameters supplied to the Create Group operation.
      example:
        name: name
        description: description
        externalId: externalId
        type: custom
      properties:
        description:
          description: Group description.
          type: string
        externalId:
          description: "Identifier of the external groups, this property contains\
            \ the id of the group from the external identity provider, e.g. for Azure\
            \ Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object\
            \ id>; otherwise the value is null."
          type: string
        name:
          description: Group name.
          maxLength: 300
          minLength: 1
          type: string
        type:
          description: Group type.
          enum:
          - custom
          - system
          - external
          type: string
          x-ms-enum:
            modelAsString: false
            name: GroupType
      required:
      - name
      type: object
    GroupUpdateParameters:
      description: Parameters supplied to the Update Group operation.
      example:
        name: name
        description: description
        externalId: externalId
        type: custom
      properties:
        description:
          description: Group description.
          type: string
        externalId:
          description: "Identifier of the external groups, this property contains\
            \ the id of the group from the external identity provider, e.g. for Azure\
            \ Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object\
            \ id>; otherwise the value is null."
          type: string
        name:
          description: Group name.
          maxLength: 300
          minLength: 1
          type: string
        type:
          description: Group type.
          enum:
          - custom
          - system
          - external
          type: string
          x-ms-enum:
            modelAsString: false
            name: GroupType
      type: object
    Group_Get_default_response_details_inner:
      description: Error Field contract.
      example:
        code: code
        message: message
        target: target
      properties:
        code:
          description: Property level error code.
          type: string
        message:
          description: Human-readable representation of property-level error.
          type: string
        target:
          description: Property name.
          type: string
      type: object
    Group_Get_default_response:
      description: Error Body contract.
      example:
        code: code
        details:
        - code: code
          message: message
          target: target
        - code: code
          message: message
          target: target
        message: message
      properties:
        code:
          description: Service-defined error code. This code serves as a sub-status
            for the HTTP error code specified in the response.
          type: string
        details:
          description: "The list of invalid fields send in request, in case of validation\
            \ error."
          items:
            $ref: '#/components/schemas/Group_Get_default_response_details_inner'
          type: array
        message:
          description: Human-readable representation of the error.
          type: string
      type: object
    GroupUser_List_200_response_value_inner:
      description: User details.
      example:
        id: id
      properties:
        id:
          description: Identifier of the entity.
          type: string
      type: object
    GroupUser_List_200_response:
      description: Paged Users list representation.
      example:
        count: 0
        value:
        - id: id
        - id: id
        nextLink: nextLink
      properties:
        count:
          description: Total number of entities
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: '#/components/schemas/GroupUser_List_200_response_value_inner'
          type: array
      type: object
    GroupUser_Create_200_response_allOf_groups_inner:
      description: Contract details.
      properties:
        id:
          description: Identifier of the Group entity.
          type: string
      type: object
    GroupUser_Create_200_response_allOf_allOf_identities_inner:
      description: User identity details.
      properties:
        id:
          description: Identifier value within provider.
          type: string
        provider:
          description: Identity provider name.
          type: string
      type: object
    GroupUser_Create_200_response:
      allOf:
      - allOf:
        - description: User Entity Base Parameters set.
          properties:
            identities:
              description: Collection of user identities.
              items:
                $ref: '#/components/schemas/GroupUser_Create_200_response_allOf_allOf_identities_inner'
              readOnly: true
              type: array
            note:
              description: Optional note about a user set by the administrator.
              type: string
            state:
              default: active
              description: Account state. Specifies whether the user is active or
                not. Blocked users are unable to sign into the developer portal or
                call any APIs of subscribed products. Default state is Active.
              enum:
              - active
              - blocked
              type: string
              x-ms-enum:
                modelAsString: true
                name: UserState
          type: object
        description: User profile.
        properties:
          email:
            description: Email address.
            type: string
          firstName:
            description: First name.
            type: string
          groups:
            description: Collection of groups user is part of.
            items:
              $ref: '#/components/schemas/GroupUser_Create_200_response_allOf_groups_inner'
            readOnly: true
            type: array
          lastName:
            description: Last name.
            type: string
          registrationDate:
            description: |
              Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
            format: date-time
            type: string
      description: User details.
      example:
        id: id
      properties:
        id:
          description: Identifier of the entity.
          type: string
  securitySchemes:
    apim_key:
      in: header
      name: Authorization
      type: apiKey
x-ms-parameterized-host:
  hostTemplate: "{apimBaseUrl}"
  parameters:
  - description: "The management endpoint of the API Management service, for example\
      \ https://myapimservice.management.azure-api.net."
    in: path
    name: apimBaseUrl
    required: true
    type: string
    x-ms-skip-url-encoding: true
  positionInOperation: first
  useSchemePrefix: false
x-original-swagger-version: "2.0"

