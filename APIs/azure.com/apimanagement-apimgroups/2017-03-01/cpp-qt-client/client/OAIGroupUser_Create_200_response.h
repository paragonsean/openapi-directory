/**
 * ApiManagementClient
 * Use these REST APIs for performing operations on Group entity in your Azure API Management deployment. Groups are used to manage the visibility of products to developers. Each API Management service instance comes with the following immutable system groups whose membership is automatically managed by API Management.  - **Administrators** - Azure subscription administrators are members of this group. - **Developers** - Authenticated developer portal users fall into this group. - **Guests** - Unauthenticated developer portal users are placed into this group. In addition to these system groups, administrators can create custom groups or [leverage external groups in associated Azure Active Directory tenants](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-aad#how-to-add-an-external-azure-active-directory-group). Custom and external groups can be used alongside system groups in giving developers visibility and access to API products. For example, you could create one custom group for developers affiliated with a specific partner organization and allow them access to the APIs from a product containing relevant APIs only. A user can be a member of more than one group.
 *
 * The version of the OpenAPI document: 2017-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGroupUser_Create_200_response.h
 *
 * User details.
 */

#ifndef OAIGroupUser_Create_200_response_H
#define OAIGroupUser_Create_200_response_H

#include <QJsonObject>

#include "OAIGroupUser_Create_200_response_allOf_allOf_identities_inner.h"
#include "OAIGroupUser_Create_200_response_allOf_groups_inner.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroupUser_Create_200_response_allOf_groups_inner;
class OAIGroupUser_Create_200_response_allOf_allOf_identities_inner;

class OAIGroupUser_Create_200_response : public OAIObject {
public:
    OAIGroupUser_Create_200_response();
    OAIGroupUser_Create_200_response(QString json);
    ~OAIGroupUser_Create_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QList<OAIGroupUser_Create_200_response_allOf_groups_inner> getGroups() const;
    void setGroups(const QList<OAIGroupUser_Create_200_response_allOf_groups_inner> &groups);
    bool is_groups_Set() const;
    bool is_groups_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QDateTime getRegistrationDate() const;
    void setRegistrationDate(const QDateTime &registration_date);
    bool is_registration_date_Set() const;
    bool is_registration_date_Valid() const;

    QList<OAIGroupUser_Create_200_response_allOf_allOf_identities_inner> getIdentities() const;
    void setIdentities(const QList<OAIGroupUser_Create_200_response_allOf_allOf_identities_inner> &identities);
    bool is_identities_Set() const;
    bool is_identities_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QList<OAIGroupUser_Create_200_response_allOf_groups_inner> m_groups;
    bool m_groups_isSet;
    bool m_groups_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QDateTime m_registration_date;
    bool m_registration_date_isSet;
    bool m_registration_date_isValid;

    QList<OAIGroupUser_Create_200_response_allOf_allOf_identities_inner> m_identities;
    bool m_identities_isSet;
    bool m_identities_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGroupUser_Create_200_response)

#endif // OAIGroupUser_Create_200_response_H
