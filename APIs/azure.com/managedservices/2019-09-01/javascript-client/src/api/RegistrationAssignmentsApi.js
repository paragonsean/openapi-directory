/**
 * ManagedServicesClient
 * Specification for ManagedServices.
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import RegistrationAssignment from '../model/RegistrationAssignment';
import RegistrationAssignmentList from '../model/RegistrationAssignmentList';

/**
* RegistrationAssignments service.
* @module api/RegistrationAssignmentsApi
* @version 2019-09-01
*/
export default class RegistrationAssignmentsApi {

    /**
    * Constructs a new RegistrationAssignmentsApi. 
    * @alias module:api/RegistrationAssignmentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the registrationAssignmentsCreateOrUpdate operation.
     * @callback module:api/RegistrationAssignmentsApi~registrationAssignmentsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegistrationAssignment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a registration assignment.
     * @param {String} scope Scope of the resource.
     * @param {String} registrationAssignmentId Guid of the registration assignment.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:model/RegistrationAssignment} requestBody The parameters required to create new registration assignment.
     * @param {module:api/RegistrationAssignmentsApi~registrationAssignmentsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegistrationAssignment}
     */
    registrationAssignmentsCreateOrUpdate(scope, registrationAssignmentId, apiVersion, requestBody, callback) {
      let postBody = requestBody;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling registrationAssignmentsCreateOrUpdate");
      }
      // verify the required parameter 'registrationAssignmentId' is set
      if (registrationAssignmentId === undefined || registrationAssignmentId === null) {
        throw new Error("Missing the required parameter 'registrationAssignmentId' when calling registrationAssignmentsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling registrationAssignmentsCreateOrUpdate");
      }
      // verify the required parameter 'requestBody' is set
      if (requestBody === undefined || requestBody === null) {
        throw new Error("Missing the required parameter 'requestBody' when calling registrationAssignmentsCreateOrUpdate");
      }

      let pathParams = {
        'scope': scope,
        'registrationAssignmentId': registrationAssignmentId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RegistrationAssignment;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.ManagedServices/registrationAssignments/{registrationAssignmentId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the registrationAssignmentsDelete operation.
     * @callback module:api/RegistrationAssignmentsApi~registrationAssignmentsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified registration assignment.
     * @param {String} scope Scope of the resource.
     * @param {String} registrationAssignmentId Guid of the registration assignment.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:api/RegistrationAssignmentsApi~registrationAssignmentsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    registrationAssignmentsDelete(scope, registrationAssignmentId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling registrationAssignmentsDelete");
      }
      // verify the required parameter 'registrationAssignmentId' is set
      if (registrationAssignmentId === undefined || registrationAssignmentId === null) {
        throw new Error("Missing the required parameter 'registrationAssignmentId' when calling registrationAssignmentsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling registrationAssignmentsDelete");
      }

      let pathParams = {
        'scope': scope,
        'registrationAssignmentId': registrationAssignmentId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.ManagedServices/registrationAssignments/{registrationAssignmentId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the registrationAssignmentsGet operation.
     * @callback module:api/RegistrationAssignmentsApi~registrationAssignmentsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegistrationAssignment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the details of specified registration assignment.
     * @param {String} scope Scope of the resource.
     * @param {String} registrationAssignmentId Guid of the registration assignment.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [expandRegistrationDefinition] Tells whether to return registration definition details also along with registration assignment details.
     * @param {module:api/RegistrationAssignmentsApi~registrationAssignmentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegistrationAssignment}
     */
    registrationAssignmentsGet(scope, registrationAssignmentId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling registrationAssignmentsGet");
      }
      // verify the required parameter 'registrationAssignmentId' is set
      if (registrationAssignmentId === undefined || registrationAssignmentId === null) {
        throw new Error("Missing the required parameter 'registrationAssignmentId' when calling registrationAssignmentsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling registrationAssignmentsGet");
      }

      let pathParams = {
        'scope': scope,
        'registrationAssignmentId': registrationAssignmentId
      };
      let queryParams = {
        '$expandRegistrationDefinition': opts['expandRegistrationDefinition'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RegistrationAssignment;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.ManagedServices/registrationAssignments/{registrationAssignmentId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the registrationAssignmentsList operation.
     * @callback module:api/RegistrationAssignmentsApi~registrationAssignmentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegistrationAssignmentList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of the registration assignments.
     * @param {String} scope Scope of the resource.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [expandRegistrationDefinition] Tells whether to return registration definition details also along with registration assignment details.
     * @param {module:api/RegistrationAssignmentsApi~registrationAssignmentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegistrationAssignmentList}
     */
    registrationAssignmentsList(scope, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling registrationAssignmentsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling registrationAssignmentsList");
      }

      let pathParams = {
        'scope': scope
      };
      let queryParams = {
        '$expandRegistrationDefinition': opts['expandRegistrationDefinition'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RegistrationAssignmentList;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.ManagedServices/registrationAssignments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
