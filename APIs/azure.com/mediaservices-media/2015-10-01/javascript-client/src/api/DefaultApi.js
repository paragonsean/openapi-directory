/**
 * MediaServicesManagementClient
 * Media Services resource management APIs.
 *
 * The version of the OpenAPI document: 2015-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiError from '../model/ApiError';
import CheckNameAvailabilityInput from '../model/CheckNameAvailabilityInput';
import CheckNameAvailabilityOutput from '../model/CheckNameAvailabilityOutput';
import MediaService from '../model/MediaService';
import MediaServiceCollection from '../model/MediaServiceCollection';
import OperationListResult from '../model/OperationListResult';
import RegenerateKeyInput from '../model/RegenerateKeyInput';
import RegenerateKeyOutput from '../model/RegenerateKeyOutput';
import ServiceKeys from '../model/ServiceKeys';
import SyncStorageKeysInput from '../model/SyncStorageKeysInput';

/**
* Default service.
* @module api/DefaultApi
* @version 2015-10-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mediaServiceCheckNameAvailability operation.
     * @callback module:api/DefaultApi~mediaServiceCheckNameAvailabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CheckNameAvailabilityOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks whether the Media Service resource name is available. The name must be globally unique.
     * @param {String} subscriptionId The unique identifier for a Microsoft Azure subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2015-10-01.
     * @param {module:model/CheckNameAvailabilityInput} parameters Properties needed to check the availability of a name.
     * @param {module:api/DefaultApi~mediaServiceCheckNameAvailabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CheckNameAvailabilityOutput}
     */
    mediaServiceCheckNameAvailability(subscriptionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling mediaServiceCheckNameAvailability");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling mediaServiceCheckNameAvailability");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling mediaServiceCheckNameAvailability");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CheckNameAvailabilityOutput;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Media/CheckNameAvailability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mediaServiceCreate operation.
     * @callback module:api/DefaultApi~mediaServiceCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MediaService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Media Service.
     * @param {String} subscriptionId The unique identifier for a Microsoft Azure subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2015-10-01.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} mediaServiceName Name of the Media Service.
     * @param {module:model/MediaService} parameters Media Service properties needed for creation.
     * @param {module:api/DefaultApi~mediaServiceCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MediaService}
     */
    mediaServiceCreate(subscriptionId, apiVersion, resourceGroupName, mediaServiceName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling mediaServiceCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling mediaServiceCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling mediaServiceCreate");
      }
      // verify the required parameter 'mediaServiceName' is set
      if (mediaServiceName === undefined || mediaServiceName === null) {
        throw new Error("Missing the required parameter 'mediaServiceName' when calling mediaServiceCreate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling mediaServiceCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'mediaServiceName': mediaServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = MediaService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mediaServiceDelete operation.
     * @callback module:api/DefaultApi~mediaServiceDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Media Service.
     * @param {String} subscriptionId The unique identifier for a Microsoft Azure subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2015-10-01.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} mediaServiceName Name of the Media Service.
     * @param {module:api/DefaultApi~mediaServiceDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    mediaServiceDelete(subscriptionId, apiVersion, resourceGroupName, mediaServiceName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling mediaServiceDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling mediaServiceDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling mediaServiceDelete");
      }
      // verify the required parameter 'mediaServiceName' is set
      if (mediaServiceName === undefined || mediaServiceName === null) {
        throw new Error("Missing the required parameter 'mediaServiceName' when calling mediaServiceDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'mediaServiceName': mediaServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mediaServiceGet operation.
     * @callback module:api/DefaultApi~mediaServiceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MediaService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a Media Service.
     * @param {String} subscriptionId The unique identifier for a Microsoft Azure subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2015-10-01.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} mediaServiceName Name of the Media Service.
     * @param {module:api/DefaultApi~mediaServiceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MediaService}
     */
    mediaServiceGet(subscriptionId, apiVersion, resourceGroupName, mediaServiceName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling mediaServiceGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling mediaServiceGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling mediaServiceGet");
      }
      // verify the required parameter 'mediaServiceName' is set
      if (mediaServiceName === undefined || mediaServiceName === null) {
        throw new Error("Missing the required parameter 'mediaServiceName' when calling mediaServiceGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'mediaServiceName': mediaServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MediaService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mediaServiceListByResourceGroup operation.
     * @callback module:api/DefaultApi~mediaServiceListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MediaServiceCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the Media Services in a resource group.
     * @param {String} subscriptionId The unique identifier for a Microsoft Azure subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2015-10-01.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {module:api/DefaultApi~mediaServiceListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MediaServiceCollection}
     */
    mediaServiceListByResourceGroup(subscriptionId, apiVersion, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling mediaServiceListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling mediaServiceListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling mediaServiceListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MediaServiceCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mediaServiceListKeys operation.
     * @callback module:api/DefaultApi~mediaServiceListKeysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceKeys} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the keys for a Media Service.
     * @param {String} subscriptionId The unique identifier for a Microsoft Azure subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2015-10-01.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} mediaServiceName Name of the Media Service.
     * @param {module:api/DefaultApi~mediaServiceListKeysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceKeys}
     */
    mediaServiceListKeys(subscriptionId, apiVersion, resourceGroupName, mediaServiceName, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling mediaServiceListKeys");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling mediaServiceListKeys");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling mediaServiceListKeys");
      }
      // verify the required parameter 'mediaServiceName' is set
      if (mediaServiceName === undefined || mediaServiceName === null) {
        throw new Error("Missing the required parameter 'mediaServiceName' when calling mediaServiceListKeys");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'mediaServiceName': mediaServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceKeys;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/listKeys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mediaServiceRegenerateKey operation.
     * @callback module:api/DefaultApi~mediaServiceRegenerateKeyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegenerateKeyOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Regenerates a primary or secondary key for a Media Service.
     * @param {String} subscriptionId The unique identifier for a Microsoft Azure subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2015-10-01.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} mediaServiceName Name of the Media Service.
     * @param {module:model/RegenerateKeyInput} parameters Properties needed to regenerate the Media Service key.
     * @param {module:api/DefaultApi~mediaServiceRegenerateKeyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegenerateKeyOutput}
     */
    mediaServiceRegenerateKey(subscriptionId, apiVersion, resourceGroupName, mediaServiceName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling mediaServiceRegenerateKey");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling mediaServiceRegenerateKey");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling mediaServiceRegenerateKey");
      }
      // verify the required parameter 'mediaServiceName' is set
      if (mediaServiceName === undefined || mediaServiceName === null) {
        throw new Error("Missing the required parameter 'mediaServiceName' when calling mediaServiceRegenerateKey");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling mediaServiceRegenerateKey");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'mediaServiceName': mediaServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RegenerateKeyOutput;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/regenerateKey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mediaServiceSyncStorageKeys operation.
     * @callback module:api/DefaultApi~mediaServiceSyncStorageKeysCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Synchronizes storage account keys for a storage account associated with the Media Service account.
     * @param {String} subscriptionId The unique identifier for a Microsoft Azure subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2015-10-01.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} mediaServiceName Name of the Media Service.
     * @param {module:model/SyncStorageKeysInput} parameters Properties needed to synchronize the keys for a storage account to the Media Service.
     * @param {module:api/DefaultApi~mediaServiceSyncStorageKeysCallback} callback The callback function, accepting three arguments: error, data, response
     */
    mediaServiceSyncStorageKeys(subscriptionId, apiVersion, resourceGroupName, mediaServiceName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling mediaServiceSyncStorageKeys");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling mediaServiceSyncStorageKeys");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling mediaServiceSyncStorageKeys");
      }
      // verify the required parameter 'mediaServiceName' is set
      if (mediaServiceName === undefined || mediaServiceName === null) {
        throw new Error("Missing the required parameter 'mediaServiceName' when calling mediaServiceSyncStorageKeys");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling mediaServiceSyncStorageKeys");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'mediaServiceName': mediaServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/syncStorageKeys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mediaServiceUpdate operation.
     * @callback module:api/DefaultApi~mediaServiceUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MediaService} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Media Service.
     * @param {String} subscriptionId The unique identifier for a Microsoft Azure subscription.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2015-10-01.
     * @param {String} resourceGroupName Name of the resource group within the Azure subscription.
     * @param {String} mediaServiceName Name of the Media Service.
     * @param {module:model/MediaService} parameters Media Service properties needed for update.
     * @param {module:api/DefaultApi~mediaServiceUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MediaService}
     */
    mediaServiceUpdate(subscriptionId, apiVersion, resourceGroupName, mediaServiceName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling mediaServiceUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling mediaServiceUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling mediaServiceUpdate");
      }
      // verify the required parameter 'mediaServiceName' is set
      if (mediaServiceName === undefined || mediaServiceName === null) {
        throw new Error("Missing the required parameter 'mediaServiceName' when calling mediaServiceUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling mediaServiceUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'mediaServiceName': mediaServiceName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = MediaService;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the operationsList operation.
     * @callback module:api/DefaultApi~operationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the available Media Services REST API operations.
     * @param {String} apiVersion Version of the API to be used with the client request. The current version is 2015-10-01.
     * @param {module:api/DefaultApi~operationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationListResult}
     */
    operationsList(apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationsList");
      }

      let pathParams = {
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationListResult;
      return this.apiClient.callApi(
        '/providers/Microsoft.Media/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
