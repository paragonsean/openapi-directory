/**
 * MediaServicesManagementClient
 * Media Services resource management APIs.
 *
 * The version of the OpenAPI document: 2015-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApiEndpoint from './model/ApiEndpoint';
import ApiError from './model/ApiError';
import CheckNameAvailabilityInput from './model/CheckNameAvailabilityInput';
import CheckNameAvailabilityOutput from './model/CheckNameAvailabilityOutput';
import MediaService from './model/MediaService';
import MediaServiceCollection from './model/MediaServiceCollection';
import MediaServiceProperties from './model/MediaServiceProperties';
import Operation from './model/Operation';
import OperationDisplay from './model/OperationDisplay';
import OperationListResult from './model/OperationListResult';
import RegenerateKeyInput from './model/RegenerateKeyInput';
import RegenerateKeyOutput from './model/RegenerateKeyOutput';
import Resource from './model/Resource';
import ResourceType from './model/ResourceType';
import ServiceKeys from './model/ServiceKeys';
import StorageAccount from './model/StorageAccount';
import SyncStorageKeysInput from './model/SyncStorageKeysInput';
import DefaultApi from './api/DefaultApi';


/**
* Media Services resource management APIs..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MediaServicesManagementClient = require('index'); // See note below*.
* var xxxSvc = new MediaServicesManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MediaServicesManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MediaServicesManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MediaServicesManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-10-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApiEndpoint model constructor.
     * @property {module:model/ApiEndpoint}
     */
    ApiEndpoint,

    /**
     * The ApiError model constructor.
     * @property {module:model/ApiError}
     */
    ApiError,

    /**
     * The CheckNameAvailabilityInput model constructor.
     * @property {module:model/CheckNameAvailabilityInput}
     */
    CheckNameAvailabilityInput,

    /**
     * The CheckNameAvailabilityOutput model constructor.
     * @property {module:model/CheckNameAvailabilityOutput}
     */
    CheckNameAvailabilityOutput,

    /**
     * The MediaService model constructor.
     * @property {module:model/MediaService}
     */
    MediaService,

    /**
     * The MediaServiceCollection model constructor.
     * @property {module:model/MediaServiceCollection}
     */
    MediaServiceCollection,

    /**
     * The MediaServiceProperties model constructor.
     * @property {module:model/MediaServiceProperties}
     */
    MediaServiceProperties,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The OperationListResult model constructor.
     * @property {module:model/OperationListResult}
     */
    OperationListResult,

    /**
     * The RegenerateKeyInput model constructor.
     * @property {module:model/RegenerateKeyInput}
     */
    RegenerateKeyInput,

    /**
     * The RegenerateKeyOutput model constructor.
     * @property {module:model/RegenerateKeyOutput}
     */
    RegenerateKeyOutput,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ResourceType model constructor.
     * @property {module:model/ResourceType}
     */
    ResourceType,

    /**
     * The ServiceKeys model constructor.
     * @property {module:model/ServiceKeys}
     */
    ServiceKeys,

    /**
     * The StorageAccount model constructor.
     * @property {module:model/StorageAccount}
     */
    StorageAccount,

    /**
     * The SyncStorageKeysInput model constructor.
     * @property {module:model/SyncStorageKeysInput}
     */
    SyncStorageKeysInput,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
