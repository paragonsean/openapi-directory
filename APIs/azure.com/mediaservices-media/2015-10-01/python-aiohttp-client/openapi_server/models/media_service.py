# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.media_service_properties import MediaServiceProperties
from openapi_server import util


class MediaService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, properties: MediaServiceProperties=None, id: str=None, location: str=None, name: str=None, tags: Dict[str, str]=None, type: str=None):
        """MediaService - a model defined in OpenAPI

        :param properties: The properties of this MediaService.
        :param id: The id of this MediaService.
        :param location: The location of this MediaService.
        :param name: The name of this MediaService.
        :param tags: The tags of this MediaService.
        :param type: The type of this MediaService.
        """
        self.openapi_types = {
            'properties': MediaServiceProperties,
            'id': str,
            'location': str,
            'name': str,
            'tags': Dict[str, str],
            'type': str
        }

        self.attribute_map = {
            'properties': 'properties',
            'id': 'id',
            'location': 'location',
            'name': 'name',
            'tags': 'tags',
            'type': 'type'
        }

        self._properties = properties
        self._id = id
        self._location = location
        self._name = name
        self._tags = tags
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MediaService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MediaService of this MediaService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def properties(self):
        """Gets the properties of this MediaService.


        :return: The properties of this MediaService.
        :rtype: MediaServiceProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this MediaService.


        :param properties: The properties of this MediaService.
        :type properties: MediaServiceProperties
        """

        self._properties = properties

    @property
    def id(self):
        """Gets the id of this MediaService.

        The id of the resource.

        :return: The id of this MediaService.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MediaService.

        The id of the resource.

        :param id: The id of this MediaService.
        :type id: str
        """

        self._id = id

    @property
    def location(self):
        """Gets the location of this MediaService.

        The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth).

        :return: The location of this MediaService.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this MediaService.

        The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth).

        :param location: The location of this MediaService.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this MediaService.

        The name of the resource.

        :return: The name of this MediaService.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MediaService.

        The name of the resource.

        :param name: The name of this MediaService.
        :type name: str
        """

        self._name = name

    @property
    def tags(self):
        """Gets the tags of this MediaService.

        Tags to help categorize the resource in the Azure portal.

        :return: The tags of this MediaService.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this MediaService.

        Tags to help categorize the resource in the Azure portal.

        :param tags: The tags of this MediaService.
        :type tags: Dict[str, str]
        """

        self._tags = tags

    @property
    def type(self):
        """Gets the type of this MediaService.

        The type of the resource

        :return: The type of this MediaService.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MediaService.

        The type of the resource

        :param type: The type of this MediaService.
        :type type: str
        """

        self._type = type
