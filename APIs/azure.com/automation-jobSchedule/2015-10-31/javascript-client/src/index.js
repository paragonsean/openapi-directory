/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2015-10-31
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import JobSchedule from './model/JobSchedule';
import JobScheduleCreateParameters from './model/JobScheduleCreateParameters';
import JobScheduleCreateProperties from './model/JobScheduleCreateProperties';
import JobScheduleListByAutomationAccountDefaultResponse from './model/JobScheduleListByAutomationAccountDefaultResponse';
import JobScheduleListResult from './model/JobScheduleListResult';
import JobScheduleProperties from './model/JobScheduleProperties';
import RunbookAssociationProperty from './model/RunbookAssociationProperty';
import ScheduleAssociationProperty from './model/ScheduleAssociationProperty';
import JobScheduleApi from './api/JobScheduleApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AutomationManagement = require('index'); // See note below*.
* var xxxSvc = new AutomationManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AutomationManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AutomationManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AutomationManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-10-31
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The JobSchedule model constructor.
     * @property {module:model/JobSchedule}
     */
    JobSchedule,

    /**
     * The JobScheduleCreateParameters model constructor.
     * @property {module:model/JobScheduleCreateParameters}
     */
    JobScheduleCreateParameters,

    /**
     * The JobScheduleCreateProperties model constructor.
     * @property {module:model/JobScheduleCreateProperties}
     */
    JobScheduleCreateProperties,

    /**
     * The JobScheduleListByAutomationAccountDefaultResponse model constructor.
     * @property {module:model/JobScheduleListByAutomationAccountDefaultResponse}
     */
    JobScheduleListByAutomationAccountDefaultResponse,

    /**
     * The JobScheduleListResult model constructor.
     * @property {module:model/JobScheduleListResult}
     */
    JobScheduleListResult,

    /**
     * The JobScheduleProperties model constructor.
     * @property {module:model/JobScheduleProperties}
     */
    JobScheduleProperties,

    /**
     * The RunbookAssociationProperty model constructor.
     * @property {module:model/RunbookAssociationProperty}
     */
    RunbookAssociationProperty,

    /**
     * The ScheduleAssociationProperty model constructor.
     * @property {module:model/ScheduleAssociationProperty}
     */
    ScheduleAssociationProperty,

    /**
    * The JobScheduleApi service constructor.
    * @property {module:api/JobScheduleApi}
    */
    JobScheduleApi
};
