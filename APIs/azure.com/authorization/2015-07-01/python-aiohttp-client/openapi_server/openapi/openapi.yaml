openapi: 3.0.1
info:
  description: Role based access control provides you a way to apply granular level
    policy administration down to individual resources or resource groups. These operations
    enable you to manage role definitions and role assignments. A role definition
    describes the set of actions that can be performed on resources. A role assignment
    grants access to Azure Active Directory users.
  title: AuthorizationManagementClient
  version: 2015-07-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/authorization/resource-manager/Microsoft.Authorization/stable/2015-07-01/authorization.json
    version: "2.0"
  x-providerName: azure.com
  x-serviceName: authorization
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /providers/Microsoft.Authorization/elevateAccess:
    post:
      description: Elevates access for a Global Administrator.
      operationId: elevate_access_post
      parameters:
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK - Returns an HttpResponseMessage with HttpStatusCode 200.
      tags:
      - ElevateAccess
      x-openapi-router-controller: openapi_server.controllers.elevate_access_controller
  /providers/Microsoft.Authorization/providerOperations:
    get:
      description: Gets provider operations metadata for all resource providers.
      operationId: provider_operations_metadata_list
      parameters:
      - description: The API version to use for this operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Specifies whether to expand the values.
        in: query
        name: $expand
        schema:
          default: resourceTypes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderOperationsMetadataListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ProviderOperationsMetadataListResult'
          description: OK - Returns an array of the operations metadata.
      tags:
      - ProviderOperationsMetadata
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
          responses:
            "200":
              body:
                value:
                - displayName: displayName
                  id: id
                  name: name
                  operations: []
                  resourceTypes:
                  - displayName: name
                    name: name
                    operations: []
                  type: type
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.provider_operations_metadata_controller
  /providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}:
    get:
      description: Gets provider operations metadata for the specified resource provider.
      operationId: provider_operations_metadata_get
      parameters:
      - description: The namespace of the resource provider.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The API version to use for the operation.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: Specifies whether to expand the values.
        in: query
        name: $expand
        schema:
          default: resourceTypes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderOperationsMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/ProviderOperationsMetadata'
          description: OK - Returns the operations metadata.
      tags:
      - ProviderOperationsMetadata
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            resourceProviderNamespace: resourceProviderNamespace
          responses:
            "200":
              body:
                displayName: displayName
                id: id
                name: name
                operations: []
                resourceTypes:
                - displayName: name
                  name: name
                  operations: []
                type: type
      x-openapi-router-controller: openapi_server.controllers.provider_operations_metadata_controller
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments:
    get:
      description: Gets all role assignments for the subscription.
      operationId: role_assignments_list
      parameters:
      - description: "The filter to apply on the operation. Use $filter=atScope()\
          \ to return all role assignments at or above the scope. Use $filter=principalId\
          \ eq {id} to return all role assignments at, above or below the scope for\
          \ the specified principal."
        in: query
        name: $filter
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
          description: OK - Returns an array of role assignments.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            subscriptionId: subId
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                  name: raId
                  properties:
                    principalId: Pid
                    roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                    scope: /subscriptions/subId/resourcegroups/rgname
                  type: Microsoft.Authorization/roleAssignments
      x-ms-odata: '#/definitions/RoleAssignmentFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.role_assignments_controller
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments:
    get:
      description: Gets role assignments for a resource group.
      operationId: role_assignments_list_for_resource_group
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: "The filter to apply on the operation. Use $filter=atScope()\
          \ to return all role assignments at or above the scope. Use $filter=principalId\
          \ eq {id} to return all role assignments at, above or below the scope for\
          \ the specified principal."
        in: query
        name: $filter
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
          description: OK - Returns an array of role assignments.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            resourceGroupName: rgname
            subscriptionId: subId
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                  name: raId
                  properties:
                    principalId: Pid
                    roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                    scope: /subscriptions/subId/resourcegroups/rgname
                  type: Microsoft.Authorization/roleAssignments
      x-ms-odata: '#/definitions/RoleAssignmentFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.role_assignments_controller
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions:
    get:
      description: Gets all permissions the caller has for a resource group.
      operationId: permissions_list_for_resource_group
      parameters:
      - description: The name of the resource group to get the permissions for. The
          name is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGetResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PermissionGetResult'
          description: OK - Returns an array of permissions.
      tags:
      - Permissions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            resourceGroupName: rgname
            subscriptionId: subID
          responses:
            "200":
              body:
                nextLink: nextlink
                value:
                - actions: []
                  notActions: []
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.permissions_controller
  ? /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions
  : get:
      description: Gets all permissions the caller has for a resource.
      operationId: permissions_list_for_resource
      parameters:
      - description: The name of the resource group containing the resource. The name
          is case insensitive.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The namespace of the resource provider.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The parent resource identity.
        in: path
        name: parentResourcePath
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The resource type of the resource.
        in: path
        name: resourceType
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the resource to get the permissions for.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGetResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PermissionGetResult'
          description: OK - Returns an array of permissions.
      tags:
      - Permissions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            parentResourcePath: parentResourcePath
            resourceGroupName: rgname
            resourceName: resourceName
            resourceProviderNamespace: rpnamespace
            resourceType: resourceType
            subscriptionId: subId
          responses:
            "200":
              body:
                value:
                - actions: []
                  notActions: []
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.permissions_controller
  ? /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments
  : get:
      description: Gets role assignments for a resource.
      operationId: role_assignments_list_for_resource
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The namespace of the resource provider.
        in: path
        name: resourceProviderNamespace
        required: true
        schema:
          type: string
      - description: The parent resource identity.
        in: path
        name: parentResourcePath
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The resource type of the resource.
        in: path
        name: resourceType
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the resource to get role assignments for.
        in: path
        name: resourceName
        required: true
        schema:
          type: string
      - description: "The filter to apply on the operation. Use $filter=atScope()\
          \ to return all role assignments at or above the scope. Use $filter=principalId\
          \ eq {id} to return all role assignments at, above or below the scope for\
          \ the specified principal."
        in: query
        name: $filter
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      - description: The ID of the target subscription.
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
          description: OK - Returns an array of role assignments.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            parentResourcePath: parentResourcePath
            resourceGroupName: rgname
            resourceName: resourceName
            resourceProviderNamespace: resourceProviderNamespace
            resourceType: resourceType
            subscriptionId: subId
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                  name: raId
                  properties:
                    principalId: Pid
                    roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                    scope: /subscriptions/subId/resourcegroups/rgname
                  type: Microsoft.Authorization/roleAssignments
      x-ms-odata: '#/definitions/RoleAssignmentFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.role_assignments_controller
  /{roleAssignmentId}:
    delete:
      description: Deletes a role assignment.
      operationId: role_assignments_delete_by_id
      parameters:
      - description: "The fully qualified ID of the role assignment, including the\
          \ scope, resource name and resource type. Use the format, /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\
          \ Example: /subscriptions/{subId}/resourcegroups/{rgname}//providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}."
        in: path
        name: roleAssignmentId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
          description: OK - Returns information about the role assignment.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            roleAssignmentId: roleAssignmentId
            scope: scope
          responses:
            "200":
              body:
                id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                name: roleassignmentId
                properties:
                  principalId: Pid
                  roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                  scope: /subscriptions/subId/resourcegroups/rgname
                type: Microsoft.Authorization/roleAssignments
      x-openapi-router-controller: openapi_server.controllers.role_assignments_controller
    get:
      description: Gets a role assignment by ID.
      operationId: role_assignments_get_by_id
      parameters:
      - description: "The fully qualified ID of the role assignment, including the\
          \ scope, resource name and resource type. Use the format, /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\
          \ Example: /subscriptions/{subId}/resourcegroups/{rgname}//providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}."
        in: path
        name: roleAssignmentId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
          description: OK - Returns the role assignment.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            roleAssignmentId: roleassignmentId
          responses:
            "200":
              body:
                id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                name: roleassignmentId
                properties:
                  principalId: Pid
                  roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                  scope: /subscriptions/subId/resourcegroups/rgname
                type: Microsoft.Authorization/roleAssignments
      x-openapi-router-controller: openapi_server.controllers.role_assignments_controller
    put:
      description: Creates a role assignment by ID.
      operationId: role_assignments_create_by_id
      parameters:
      - description: "The fully qualified ID of the role assignment, including the\
          \ scope, resource name and resource type. Use the format, /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.\
          \ Example: /subscriptions/{subId}/resourcegroups/{rgname}//providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}."
        in: path
        name: roleAssignmentId
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCreateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCreateParameters'
        description: Parameters for the role assignment.
        required: true
        x-body-name: parameters
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
          description: Created - Returns the role assignment.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            parameters:
              properties:
                principalId: d93a38bc-d029-4160-bfb0-fbda779ac214
                roleDefinitionId: /subscriptions/4004a9fd-d58e-48dc-aeb2-4a4aec58606f/providers/Microsoft.Authorization/roleDefinitions/de139f84-1756-47ae-9be6-808fbbe84772
            roleAssignmentId: roleAssignmentId
            scope: scope
          responses:
            "201":
              body:
                id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                name: roleassignmentId
                properties:
                  principalId: Pid
                  roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                  scope: /subscriptions/subId/resourcegroups/rgname
                type: Microsoft.Authorization/roleAssignments
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.role_assignments_controller
  /{scope}/providers/Microsoft.Authorization/roleAssignments:
    get:
      description: Gets role assignments for a scope.
      operationId: role_assignments_list_for_scope
      parameters:
      - description: The scope of the role assignments.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: "The filter to apply on the operation. Use $filter=atScope()\
          \ to return all role assignments at or above the scope. Use $filter=principalId\
          \ eq {id} to return all role assignments at, above or below the scope for\
          \ the specified principal."
        in: query
        name: $filter
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
          description: OK - Returns an array of role assignments.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            scope: scope
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                  name: raId
                  properties:
                    principalId: Pid
                    roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                    scope: /subscriptions/subId/resourcegroups/rgname
                  type: Microsoft.Authorization/roleAssignments
      x-ms-odata: '#/definitions/RoleAssignmentFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.role_assignments_controller
  /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}:
    delete:
      description: Deletes a role assignment.
      operationId: role_assignments_delete
      parameters:
      - description: The scope of the role assignment to delete.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the role assignment to delete.
        in: path
        name: roleAssignmentName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
          description: OK - Returns information about the role assignment.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            roleAssignmentName: roleAssignmentName
            scope: scope
          responses:
            "200":
              body:
                id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                name: roleassignmentId
                properties:
                  principalId: Pid
                  roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                  scope: /subscriptions/subId/resourcegroups/rgname
                type: Microsoft.Authorization/roleAssignments
      x-openapi-router-controller: openapi_server.controllers.role_assignments_controller
    get:
      description: Get the specified role assignment.
      operationId: role_assignments_get
      parameters:
      - description: The scope of the role assignment.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the role assignment to get.
        in: path
        name: roleAssignmentName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
          description: OK - Returns information about the role assignment.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            roleAssignmentName: roleAssignmentName
            scope: scope
            subscriptionId: subId
          responses:
            "200":
              body:
                id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                name: raId
                properties:
                  principalId: Pid
                  roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                  scope: /subscriptions/subId/resourcegroups/rgname
                type: Microsoft.Authorization/roleAssignments
      x-openapi-router-controller: openapi_server.controllers.role_assignments_controller
    put:
      description: Creates a role assignment.
      operationId: role_assignments_create
      parameters:
      - description: "The scope of the role assignment to create. The scope can be\
          \ any REST resource instance. For example, use '/subscriptions/{subscription-id}/'\
          \ for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'\
          \ for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'\
          \ for a resource."
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The name of the role assignment to create. It can be any valid
          GUID.
        in: path
        name: roleAssignmentName
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCreateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCreateParameters'
        description: Parameters for the role assignment.
        required: true
        x-body-name: parameters
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
          description: Created - Returns information about the role assignment.
      tags:
      - RoleAssignments
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            parameters:
              properties:
                principalId: d93a38bc-d029-4160-bfb0-fbda779ac214
                roleDefinitionId: /subscriptions/4004a9fd-d58e-48dc-aeb2-4a4aec58606f/providers/Microsoft.Authorization/roleDefinitions/de139f84-1756-47ae-9be6-808fbbe84772
            roleAssignmentName: roleAssignmentName
            scope: scope
          responses:
            "201":
              body:
                id: /subscriptions/subId/resourcegroups/rgname/providers/Microsoft.Authorization/roleAssignments/roleassignmentId
                name: roleassignmentId
                properties:
                  principalId: Pid
                  roleDefinitionId: /subscriptions/subId/providers/Microsoft.Authorization/roleDefinitions/roledefinitionId
                  scope: /subscriptions/subId/resourcegroups/rgname
                type: Microsoft.Authorization/roleAssignments
      x-codegen-request-body-name: parameters
      x-openapi-router-controller: openapi_server.controllers.role_assignments_controller
  /{scope}/providers/Microsoft.Authorization/roleDefinitions:
    get:
      description: Get all role definitions that are applicable at scope and above.
      operationId: role_definitions_list
      parameters:
      - description: The scope of the role definition.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The filter to apply on the operation. Use atScopeAndBelow filter
          to search below the given scope as well.
        in: query
        name: $filter
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinitionListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleDefinitionListResult'
          description: OK - Returns an array of role definitions.
      tags:
      - RoleDefinitions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            scope: scope
          responses:
            "200":
              body:
                value:
                - id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId
                  name: roleDefinitionId
                  properties:
                    assignableScopes:
                    - /subscriptions/subId
                    description: Role description
                    permissions:
                    - actions:
                      - action
                      notActions: []
                    roleName: Role name
                    type: roletype
                  type: Microsoft.Authorization/roleDefinitions
      x-ms-odata: '#/definitions/RoleDefinitionFilter'
      x-ms-pageable:
        nextLinkName: nextLink
      x-openapi-router-controller: openapi_server.controllers.role_definitions_controller
  /{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}:
    delete:
      description: Deletes a role definition.
      operationId: role_definitions_delete
      parameters:
      - description: The scope of the role definition.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The ID of the role definition to delete.
        in: path
        name: roleDefinitionId
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
          description: OK - Returns information about the role definition.
      tags:
      - RoleDefinitions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2017-04-19
            roleDefinitionId: roleDefinitionId
            scope: scope
          responses:
            "200":
              body:
                id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId
                name: roleDefinitionId
                properties:
                  assignableScopes:
                  - /subscriptions/subId
                  description: Role description
                  permissions:
                  - actions:
                    - action
                    notActions: []
                  roleName: Role name
                  type: roletype
                type: Microsoft.Authorization/roleDefinitions
      x-openapi-router-controller: openapi_server.controllers.role_definitions_controller
    get:
      description: Get role definition by name (GUID).
      operationId: role_definitions_get
      parameters:
      - description: The scope of the role definition.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The ID of the role definition.
        in: path
        name: roleDefinitionId
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
          description: OK - Returns information about the role definition.
      tags:
      - RoleDefinitions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            roleDefinitionId: roleDefinitionId
            scope: scope
          responses:
            "200":
              body:
                id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId
                name: roleDefinitionId
                properties:
                  assignableScopes:
                  - /subscriptions/subId
                  description: Role description
                  permissions:
                  - actions:
                    - action
                    notActions: []
                  roleName: Role name
                  type: roletype
                type: Microsoft.Authorization/roleDefinitions
      x-openapi-router-controller: openapi_server.controllers.role_definitions_controller
    put:
      description: Creates or updates a role definition.
      operationId: role_definitions_create_or_update
      parameters:
      - description: The scope of the role definition.
        in: path
        name: scope
        required: true
        schema:
          type: string
          x-ms-skip-url-encoding: true
        x-ms-skip-url-encoding: true
      - description: The ID of the role definition.
        in: path
        name: roleDefinitionId
        required: true
        schema:
          type: string
      - description: The API version to use for this operation.
        in: query
        name: api_version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/RoleDefinition'
        description: The values for the role definition.
        required: true
        x-body-name: roleDefinition
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
          description: OK - Returns information about the role definition.
      tags:
      - RoleDefinitions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            body:
              roleDefinition:
                assignableScopes:
                - /subscriptions/subId
                description: Role description
                id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId
                name: roleDefinitionId
                permissions:
                - actions:
                  - action
                  notActions: []
                roleName: Role name
                type: Microsoft.Authorization/roleDefinitions
            roleDefinition: {}
            roleDefinitionId: roleDefinitionId
            scope: scope
          responses:
            "201":
              body:
                id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId
                name: roleDefinitionId
                properties:
                  assignableScopes:
                  - /subscriptions/subId
                  description: Role description
                  permissions:
                  - actions:
                    - action
                    notActions: []
                  roleName: Role name
                  type: roletype
                type: Microsoft.Authorization/roleDefinitions
      x-codegen-request-body-name: roleDefinition
      x-openapi-router-controller: openapi_server.controllers.role_definitions_controller
components:
  parameters:
    ApiVersionParameter:
      description: The API version to use for this operation.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: The ID of the target subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    Permission:
      description: Role definition permissions.
      example:
        notActions:
        - notActions
        - notActions
        actions:
        - actions
        - actions
      properties:
        actions:
          description: Allowed actions.
          items:
            type: string
          title: actions
          type: array
        notActions:
          description: Denied actions.
          items:
            type: string
          title: notActions
          type: array
      title: Permission
      type: object
    PermissionGetResult:
      description: Permissions information.
      example:
        value:
        - notActions:
          - notActions
          - notActions
          actions:
          - actions
          - actions
        - notActions:
          - notActions
          - notActions
          actions:
          - actions
          - actions
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          title: nextLink
          type: string
        value:
          description: An array of permissions.
          items:
            $ref: '#/components/schemas/Permission'
          title: value
          type: array
      title: PermissionGetResult
      type: object
    ProviderOperation:
      description: Operation
      example:
        displayName: displayName
        origin: origin
        name: name
        description: description
        properties: "{}"
      properties:
        description:
          description: The operation description.
          title: description
          type: string
        displayName:
          description: The operation display name.
          title: displayName
          type: string
        name:
          description: The operation name.
          title: name
          type: string
        origin:
          description: The operation origin.
          title: origin
          type: string
        properties:
          description: The operation properties.
          properties: {}
          title: properties
          type: object
      title: ProviderOperation
      type: object
    ProviderOperationsMetadata:
      description: Provider Operations metadata
      example:
        resourceTypes:
        - operations:
          - displayName: displayName
            origin: origin
            name: name
            description: description
            properties: "{}"
          - displayName: displayName
            origin: origin
            name: name
            description: description
            properties: "{}"
          displayName: displayName
          name: name
        - operations:
          - displayName: displayName
            origin: origin
            name: name
            description: description
            properties: "{}"
          - displayName: displayName
            origin: origin
            name: name
            description: description
            properties: "{}"
          displayName: displayName
          name: name
        operations:
        - displayName: displayName
          origin: origin
          name: name
          description: description
          properties: "{}"
        - displayName: displayName
          origin: origin
          name: name
          description: description
          properties: "{}"
        displayName: displayName
        name: name
        id: id
        type: type
      properties:
        displayName:
          description: The provider display name.
          title: displayName
          type: string
        id:
          description: The provider id.
          title: id
          type: string
        name:
          description: The provider name.
          title: name
          type: string
        operations:
          description: The provider operations.
          items:
            $ref: '#/components/schemas/ProviderOperation'
          title: operations
          type: array
        resourceTypes:
          description: The provider resource types
          items:
            $ref: '#/components/schemas/ResourceType'
          title: resourceTypes
          type: array
        type:
          description: The provider type.
          title: type
          type: string
      title: ProviderOperationsMetadata
      type: object
    ProviderOperationsMetadataListResult:
      description: Provider operations metadata list
      example:
        value:
        - resourceTypes:
          - operations:
            - displayName: displayName
              origin: origin
              name: name
              description: description
              properties: "{}"
            - displayName: displayName
              origin: origin
              name: name
              description: description
              properties: "{}"
            displayName: displayName
            name: name
          - operations:
            - displayName: displayName
              origin: origin
              name: name
              description: description
              properties: "{}"
            - displayName: displayName
              origin: origin
              name: name
              description: description
              properties: "{}"
            displayName: displayName
            name: name
          operations:
          - displayName: displayName
            origin: origin
            name: name
            description: description
            properties: "{}"
          - displayName: displayName
            origin: origin
            name: name
            description: description
            properties: "{}"
          displayName: displayName
          name: name
          id: id
          type: type
        - resourceTypes:
          - operations:
            - displayName: displayName
              origin: origin
              name: name
              description: description
              properties: "{}"
            - displayName: displayName
              origin: origin
              name: name
              description: description
              properties: "{}"
            displayName: displayName
            name: name
          - operations:
            - displayName: displayName
              origin: origin
              name: name
              description: description
              properties: "{}"
            - displayName: displayName
              origin: origin
              name: name
              description: description
              properties: "{}"
            displayName: displayName
            name: name
          operations:
          - displayName: displayName
            origin: origin
            name: name
            description: description
            properties: "{}"
          - displayName: displayName
            origin: origin
            name: name
            description: description
            properties: "{}"
          displayName: displayName
          name: name
          id: id
          type: type
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          title: nextLink
          type: string
        value:
          description: The list of providers.
          items:
            $ref: '#/components/schemas/ProviderOperationsMetadata'
          title: value
          type: array
      title: ProviderOperationsMetadataListResult
      type: object
    ResourceType:
      description: Resource Type
      example:
        operations:
        - displayName: displayName
          origin: origin
          name: name
          description: description
          properties: "{}"
        - displayName: displayName
          origin: origin
          name: name
          description: description
          properties: "{}"
        displayName: displayName
        name: name
      properties:
        displayName:
          description: The resource type display name.
          title: displayName
          type: string
        name:
          description: The resource type name.
          title: name
          type: string
        operations:
          description: The resource type operations.
          items:
            $ref: '#/components/schemas/ProviderOperation'
          title: operations
          type: array
      title: ResourceType
      type: object
    RoleAssignment:
      description: Role Assignments
      example:
        name: name
        id: id
        type: type
        properties:
          roleDefinitionId: roleDefinitionId
          scope: scope
          principalId: principalId
      properties:
        id:
          description: The role assignment ID.
          readOnly: true
          title: id
          type: string
        name:
          description: The role assignment name.
          readOnly: true
          title: name
          type: string
        properties:
          $ref: '#/components/schemas/RoleAssignmentPropertiesWithScope'
        type:
          description: The role assignment type.
          readOnly: true
          title: type
          type: string
      title: RoleAssignment
      type: object
    RoleAssignmentCreateParameters:
      description: Role assignment create parameters.
      example:
        properties:
          roleDefinitionId: roleDefinitionId
          principalId: principalId
      properties:
        properties:
          $ref: '#/components/schemas/RoleAssignmentProperties'
      required:
      - properties
      title: RoleAssignmentCreateParameters
      type: object
    RoleAssignmentFilter:
      description: Role Assignments filter
      properties:
        principalId:
          description: Returns role assignment of the specific principal.
          type: string
      type: object
    RoleAssignmentListResult:
      description: Role assignment list operation result.
      example:
        value:
        - name: name
          id: id
          type: type
          properties:
            roleDefinitionId: roleDefinitionId
            scope: scope
            principalId: principalId
        - name: name
          id: id
          type: type
          properties:
            roleDefinitionId: roleDefinitionId
            scope: scope
            principalId: principalId
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          title: nextLink
          type: string
        value:
          description: Role assignment list.
          items:
            $ref: '#/components/schemas/RoleAssignment'
          title: value
          type: array
      title: RoleAssignmentListResult
      type: object
    RoleAssignmentProperties:
      description: Role assignment properties.
      example:
        roleDefinitionId: roleDefinitionId
        principalId: principalId
      properties:
        principalId:
          description: "The principal ID assigned to the role. This maps to the ID\
            \ inside the Active Directory. It can point to a user, service principal,\
            \ or security group."
          title: principalId
          type: string
        roleDefinitionId:
          description: The role definition ID used in the role assignment.
          title: roleDefinitionId
          type: string
      required:
      - principalId
      - roleDefinitionId
      title: RoleAssignmentProperties
      type: object
    RoleAssignmentPropertiesWithScope:
      description: Role assignment properties with scope.
      example:
        roleDefinitionId: roleDefinitionId
        scope: scope
        principalId: principalId
      properties:
        principalId:
          description: The principal ID.
          title: principalId
          type: string
        roleDefinitionId:
          description: The role definition ID.
          title: roleDefinitionId
          type: string
        scope:
          description: The role assignment scope.
          title: scope
          type: string
      title: RoleAssignmentPropertiesWithScope
      type: object
    RoleDefinition:
      description: Role definition.
      example:
        name: name
        id: id
        type: type
        properties:
          permissions:
          - notActions:
            - notActions
            - notActions
            actions:
            - actions
            - actions
          - notActions:
            - notActions
            - notActions
            actions:
            - actions
            - actions
          roleName: roleName
          description: description
          type: type
          assignableScopes:
          - assignableScopes
          - assignableScopes
      properties:
        id:
          description: The role definition ID.
          readOnly: true
          title: id
          type: string
        name:
          description: The role definition name.
          readOnly: true
          title: name
          type: string
        properties:
          $ref: '#/components/schemas/RoleDefinitionProperties'
        type:
          description: The role definition type.
          readOnly: true
          title: type
          type: string
      title: RoleDefinition
      type: object
    RoleDefinitionFilter:
      description: Role Definitions filter
      properties:
        roleName:
          description: Returns role definition with the specific name.
          type: string
      type: object
    RoleDefinitionListResult:
      description: Role definition list operation result.
      example:
        value:
        - name: name
          id: id
          type: type
          properties:
            permissions:
            - notActions:
              - notActions
              - notActions
              actions:
              - actions
              - actions
            - notActions:
              - notActions
              - notActions
              actions:
              - actions
              - actions
            roleName: roleName
            description: description
            type: type
            assignableScopes:
            - assignableScopes
            - assignableScopes
        - name: name
          id: id
          type: type
          properties:
            permissions:
            - notActions:
              - notActions
              - notActions
              actions:
              - actions
              - actions
            - notActions:
              - notActions
              - notActions
              actions:
              - actions
              - actions
            roleName: roleName
            description: description
            type: type
            assignableScopes:
            - assignableScopes
            - assignableScopes
        nextLink: nextLink
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          title: nextLink
          type: string
        value:
          description: Role definition list.
          items:
            $ref: '#/components/schemas/RoleDefinition'
          title: value
          type: array
      title: RoleDefinitionListResult
      type: object
    RoleDefinitionProperties:
      description: Role definition properties.
      example:
        permissions:
        - notActions:
          - notActions
          - notActions
          actions:
          - actions
          - actions
        - notActions:
          - notActions
          - notActions
          actions:
          - actions
          - actions
        roleName: roleName
        description: description
        type: type
        assignableScopes:
        - assignableScopes
        - assignableScopes
      properties:
        assignableScopes:
          description: Role definition assignable scopes.
          items:
            type: string
          title: assignableScopes
          type: array
        description:
          description: The role definition description.
          title: description
          type: string
        permissions:
          description: Role definition permissions.
          items:
            $ref: '#/components/schemas/Permission'
          title: permissions
          type: array
        roleName:
          description: The role name.
          title: roleName
          type: string
        type:
          description: The role type.
          title: type
          type: string
      title: RoleDefinitionProperties
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_azure_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_azure_auth
x-ms-paths:
  /{roleDefinitionId}?disambiguation_dummy:
    get:
      description: Gets a role definition by ID.
      operationId: RoleDefinitions_GetById
      parameters:
      - description: "The fully qualified role definition ID. Use the format, /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}\
          \ for subscription level role definitions, or /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}\
          \ for tenant level role definitions."
        in: path
        name: roleDefinitionId
        required: true
        type: string
        x-ms-skip-url-encoding: true
      - $ref: '#/parameters/ApiVersionParameter'
      responses:
        "200":
          description: OK - Returns information about the role definition.
          schema:
            $ref: '#/definitions/RoleDefinition'
      tags:
      - RoleDefinitions
      x-ms-examples:
        GetConfigurations:
          parameters:
            api-version: 2015-07-01
            roleDefinitionId: roleDefinitionId
          responses:
            "200":
              body:
                id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId
                name: roleDefinitionId
                properties:
                  assignableScopes:
                  - /subscriptions/subId
                  description: Role description
                  permissions:
                  - actions:
                    - action
                    notActions: []
                  roleName: Role name
                  type: roletype
                type: Microsoft.Authorization/roleDefinitions
x-original-swagger-version: "2.0"
