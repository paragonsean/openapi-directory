/**
 * Provider API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StackMinorVersion model module.
 * @module model/StackMinorVersion
 * @version 2016-03-01
 */
class StackMinorVersion {
    /**
     * Constructs a new <code>StackMinorVersion</code>.
     * Application stack minor version.
     * @alias module:model/StackMinorVersion
     */
    constructor() { 
        
        StackMinorVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StackMinorVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StackMinorVersion} obj Optional instance to populate.
     * @return {module:model/StackMinorVersion} The populated <code>StackMinorVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StackMinorVersion();

            if (data.hasOwnProperty('displayVersion')) {
                obj['displayVersion'] = ApiClient.convertToType(data['displayVersion'], 'String');
            }
            if (data.hasOwnProperty('isDefault')) {
                obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('runtimeVersion')) {
                obj['runtimeVersion'] = ApiClient.convertToType(data['runtimeVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StackMinorVersion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StackMinorVersion</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayVersion'] && !(typeof data['displayVersion'] === 'string' || data['displayVersion'] instanceof String)) {
            throw new Error("Expected the field `displayVersion` to be a primitive type in the JSON string but got " + data['displayVersion']);
        }
        // ensure the json data is a string
        if (data['runtimeVersion'] && !(typeof data['runtimeVersion'] === 'string' || data['runtimeVersion'] instanceof String)) {
            throw new Error("Expected the field `runtimeVersion` to be a primitive type in the JSON string but got " + data['runtimeVersion']);
        }

        return true;
    }


}



/**
 * Application stack minor version (display only).
 * @member {String} displayVersion
 */
StackMinorVersion.prototype['displayVersion'] = undefined;

/**
 * <code>true</code> if this is the default minor version; otherwise, <code>false</code>.
 * @member {Boolean} isDefault
 */
StackMinorVersion.prototype['isDefault'] = undefined;

/**
 * Application stack minor version (runtime only).
 * @member {String} runtimeVersion
 */
StackMinorVersion.prototype['runtimeVersion'] = undefined;






export default StackMinorVersion;

