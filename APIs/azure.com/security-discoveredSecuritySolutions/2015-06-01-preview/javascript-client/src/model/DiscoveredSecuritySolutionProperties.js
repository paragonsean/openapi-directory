/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DiscoveredSecuritySolutionProperties model module.
 * @module model/DiscoveredSecuritySolutionProperties
 * @version 2015-06-01-preview
 */
class DiscoveredSecuritySolutionProperties {
    /**
     * Constructs a new <code>DiscoveredSecuritySolutionProperties</code>.
     * @alias module:model/DiscoveredSecuritySolutionProperties
     * @param offer {String} The security solutions' image offer
     * @param publisher {String} The security solutions' image publisher
     * @param securityFamily {module:model/DiscoveredSecuritySolutionProperties.SecurityFamilyEnum} The security family of the discovered solution
     * @param sku {String} The security solutions' image sku
     */
    constructor(offer, publisher, securityFamily, sku) { 
        
        DiscoveredSecuritySolutionProperties.initialize(this, offer, publisher, securityFamily, sku);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, offer, publisher, securityFamily, sku) { 
        obj['offer'] = offer;
        obj['publisher'] = publisher;
        obj['securityFamily'] = securityFamily;
        obj['sku'] = sku;
    }

    /**
     * Constructs a <code>DiscoveredSecuritySolutionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiscoveredSecuritySolutionProperties} obj Optional instance to populate.
     * @return {module:model/DiscoveredSecuritySolutionProperties} The populated <code>DiscoveredSecuritySolutionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiscoveredSecuritySolutionProperties();

            if (data.hasOwnProperty('offer')) {
                obj['offer'] = ApiClient.convertToType(data['offer'], 'String');
            }
            if (data.hasOwnProperty('publisher')) {
                obj['publisher'] = ApiClient.convertToType(data['publisher'], 'String');
            }
            if (data.hasOwnProperty('securityFamily')) {
                obj['securityFamily'] = ApiClient.convertToType(data['securityFamily'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiscoveredSecuritySolutionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiscoveredSecuritySolutionProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DiscoveredSecuritySolutionProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['offer'] && !(typeof data['offer'] === 'string' || data['offer'] instanceof String)) {
            throw new Error("Expected the field `offer` to be a primitive type in the JSON string but got " + data['offer']);
        }
        // ensure the json data is a string
        if (data['publisher'] && !(typeof data['publisher'] === 'string' || data['publisher'] instanceof String)) {
            throw new Error("Expected the field `publisher` to be a primitive type in the JSON string but got " + data['publisher']);
        }
        // ensure the json data is a string
        if (data['securityFamily'] && !(typeof data['securityFamily'] === 'string' || data['securityFamily'] instanceof String)) {
            throw new Error("Expected the field `securityFamily` to be a primitive type in the JSON string but got " + data['securityFamily']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }

        return true;
    }


}

DiscoveredSecuritySolutionProperties.RequiredProperties = ["offer", "publisher", "securityFamily", "sku"];

/**
 * The security solutions' image offer
 * @member {String} offer
 */
DiscoveredSecuritySolutionProperties.prototype['offer'] = undefined;

/**
 * The security solutions' image publisher
 * @member {String} publisher
 */
DiscoveredSecuritySolutionProperties.prototype['publisher'] = undefined;

/**
 * The security family of the discovered solution
 * @member {module:model/DiscoveredSecuritySolutionProperties.SecurityFamilyEnum} securityFamily
 */
DiscoveredSecuritySolutionProperties.prototype['securityFamily'] = undefined;

/**
 * The security solutions' image sku
 * @member {String} sku
 */
DiscoveredSecuritySolutionProperties.prototype['sku'] = undefined;





/**
 * Allowed values for the <code>securityFamily</code> property.
 * @enum {String}
 * @readonly
 */
DiscoveredSecuritySolutionProperties['SecurityFamilyEnum'] = {

    /**
     * value: "Waf"
     * @const
     */
    "Waf": "Waf",

    /**
     * value: "Ngfw"
     * @const
     */
    "Ngfw": "Ngfw",

    /**
     * value: "SaasWaf"
     * @const
     */
    "SaasWaf": "SaasWaf",

    /**
     * value: "Va"
     * @const
     */
    "Va": "Va"
};



export default DiscoveredSecuritySolutionProperties;

