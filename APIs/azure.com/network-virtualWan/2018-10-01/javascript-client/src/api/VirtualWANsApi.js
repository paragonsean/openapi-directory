/**
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import P2sVpnGatewaysListDefaultResponse from '../model/P2sVpnGatewaysListDefaultResponse';
import P2sVpnGatewaysUpdateTagsRequest from '../model/P2sVpnGatewaysUpdateTagsRequest';
import VirtualHub from '../model/VirtualHub';
import VirtualWAN from '../model/VirtualWAN';

/**
* VirtualWANs service.
* @module api/VirtualWANsApi
* @version 2018-10-01
*/
export default class VirtualWANsApi {

    /**
    * Constructs a new VirtualWANsApi. 
    * @alias module:api/VirtualWANsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualHubsUpdateTags operation.
     * @callback module:api/VirtualWANsApi~virtualHubsUpdateTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualHub} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates VirtualHub tags.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The resource group name of the VirtualHub.
     * @param {String} virtualHubName The name of the VirtualHub.
     * @param {String} apiVersion Client API version.
     * @param {module:model/P2sVpnGatewaysUpdateTagsRequest} virtualHubParameters Parameters supplied to update VirtualHub tags.
     * @param {module:api/VirtualWANsApi~virtualHubsUpdateTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualHub}
     */
    virtualHubsUpdateTags(subscriptionId, resourceGroupName, virtualHubName, apiVersion, virtualHubParameters, callback) {
      let postBody = virtualHubParameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualHubsUpdateTags");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualHubsUpdateTags");
      }
      // verify the required parameter 'virtualHubName' is set
      if (virtualHubName === undefined || virtualHubName === null) {
        throw new Error("Missing the required parameter 'virtualHubName' when calling virtualHubsUpdateTags");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualHubsUpdateTags");
      }
      // verify the required parameter 'virtualHubParameters' is set
      if (virtualHubParameters === undefined || virtualHubParameters === null) {
        throw new Error("Missing the required parameter 'virtualHubParameters' when calling virtualHubsUpdateTags");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'virtualHubName': virtualHubName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualHub;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualWansUpdateTags operation.
     * @callback module:api/VirtualWANsApi~virtualWansUpdateTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualWAN} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a VirtualWAN tags.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The resource group name of the VirtualWan.
     * @param {String} virtualWANName The name of the VirtualWAN being updated.
     * @param {String} apiVersion Client API version.
     * @param {module:model/P2sVpnGatewaysUpdateTagsRequest} wANParameters Parameters supplied to Update VirtualWAN tags.
     * @param {module:api/VirtualWANsApi~virtualWansUpdateTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualWAN}
     */
    virtualWansUpdateTags(subscriptionId, resourceGroupName, virtualWANName, apiVersion, wANParameters, callback) {
      let postBody = wANParameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualWansUpdateTags");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualWansUpdateTags");
      }
      // verify the required parameter 'virtualWANName' is set
      if (virtualWANName === undefined || virtualWANName === null) {
        throw new Error("Missing the required parameter 'virtualWANName' when calling virtualWansUpdateTags");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualWansUpdateTags");
      }
      // verify the required parameter 'wANParameters' is set
      if (wANParameters === undefined || wANParameters === null) {
        throw new Error("Missing the required parameter 'wANParameters' when calling virtualWansUpdateTags");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'VirtualWANName': virtualWANName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualWAN;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
