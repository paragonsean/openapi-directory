/**
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2018-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import P2SVpnGateway from '../model/P2SVpnGateway';
import P2SVpnProfileParameters from '../model/P2SVpnProfileParameters';
import P2sVpnGatewaysListDefaultResponse from '../model/P2sVpnGatewaysListDefaultResponse';
import P2sVpnGatewaysUpdateTagsRequest from '../model/P2sVpnGatewaysUpdateTagsRequest';
import VpnProfileResponse from '../model/VpnProfileResponse';

/**
* P2SVpnGateways service.
* @module api/P2SVpnGatewaysApi
* @version 2018-10-01
*/
export default class P2SVpnGatewaysApi {

    /**
    * Constructs a new P2SVpnGatewaysApi. 
    * @alias module:api/P2SVpnGatewaysApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the p2sVpnGatewaysGenerateVpnProfile operation.
     * @callback module:api/P2SVpnGatewaysApi~p2sVpnGatewaysGenerateVpnProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VpnProfileResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates VPN profile for P2S client of the P2SVpnGateway in the specified resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} gatewayName The name of the P2SVpnGateway.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/P2SVpnProfileParameters} parameters Parameters supplied to the generate P2SVpnGateway VPN client package operation.
     * @param {module:api/P2SVpnGatewaysApi~p2sVpnGatewaysGenerateVpnProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VpnProfileResponse}
     */
    p2sVpnGatewaysGenerateVpnProfile(resourceGroupName, gatewayName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling p2sVpnGatewaysGenerateVpnProfile");
      }
      // verify the required parameter 'gatewayName' is set
      if (gatewayName === undefined || gatewayName === null) {
        throw new Error("Missing the required parameter 'gatewayName' when calling p2sVpnGatewaysGenerateVpnProfile");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling p2sVpnGatewaysGenerateVpnProfile");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling p2sVpnGatewaysGenerateVpnProfile");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling p2sVpnGatewaysGenerateVpnProfile");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'gatewayName': gatewayName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VpnProfileResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/generatevpnprofile', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the p2sVpnGatewaysUpdateTags operation.
     * @callback module:api/P2SVpnGatewaysApi~p2sVpnGatewaysUpdateTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/P2SVpnGateway} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates virtual wan p2s vpn gateway tags.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The resource group name of the P2SVpnGateway.
     * @param {String} gatewayName The name of the gateway.
     * @param {String} apiVersion Client API version.
     * @param {module:model/P2sVpnGatewaysUpdateTagsRequest} p2SVpnGatewayParameters Parameters supplied to update a virtual wan p2s vpn gateway tags.
     * @param {module:api/P2SVpnGatewaysApi~p2sVpnGatewaysUpdateTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/P2SVpnGateway}
     */
    p2sVpnGatewaysUpdateTags(subscriptionId, resourceGroupName, gatewayName, apiVersion, p2SVpnGatewayParameters, callback) {
      let postBody = p2SVpnGatewayParameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling p2sVpnGatewaysUpdateTags");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling p2sVpnGatewaysUpdateTags");
      }
      // verify the required parameter 'gatewayName' is set
      if (gatewayName === undefined || gatewayName === null) {
        throw new Error("Missing the required parameter 'gatewayName' when calling p2sVpnGatewaysUpdateTags");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling p2sVpnGatewaysUpdateTags");
      }
      // verify the required parameter 'p2SVpnGatewayParameters' is set
      if (p2SVpnGatewayParameters === undefined || p2SVpnGatewayParameters === null) {
        throw new Error("Missing the required parameter 'p2SVpnGatewayParameters' when calling p2sVpnGatewaysUpdateTags");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'gatewayName': gatewayName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = P2SVpnGateway;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
