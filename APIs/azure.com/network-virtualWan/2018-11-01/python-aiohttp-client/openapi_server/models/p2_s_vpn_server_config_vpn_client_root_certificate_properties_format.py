# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provisioning_state: str=None, public_cert_data: str=None):
        """P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat - a model defined in OpenAPI

        :param provisioning_state: The provisioning_state of this P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat.
        :param public_cert_data: The public_cert_data of this P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat.
        """
        self.openapi_types = {
            'provisioning_state': str,
            'public_cert_data': str
        }

        self.attribute_map = {
            'provisioning_state': 'provisioningState',
            'public_cert_data': 'publicCertData'
        }

        self._provisioning_state = provisioning_state
        self._public_cert_data = public_cert_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat of this P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat.

        The provisioning state of the P2SVpnServerConfiguration VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :return: The provisioning_state of this P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat.

        The provisioning state of the P2SVpnServerConfiguration VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :param provisioning_state: The provisioning_state of this P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def public_cert_data(self):
        """Gets the public_cert_data of this P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat.

        The certificate public data.

        :return: The public_cert_data of this P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat.
        :rtype: str
        """
        return self._public_cert_data

    @public_cert_data.setter
    def public_cert_data(self, public_cert_data):
        """Sets the public_cert_data of this P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat.

        The certificate public data.

        :param public_cert_data: The public_cert_data of this P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat.
        :type public_cert_data: str
        """
        if public_cert_data is None:
            raise ValueError("Invalid value for `public_cert_data`, must not be `None`")

        self._public_cert_data = public_cert_data
