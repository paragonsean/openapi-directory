# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hub_virtual_network_connection_properties_remote_virtual_network import HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork
from openapi_server.models.p2_s_vpn_server_config_radius_client_root_certificate import P2SVpnServerConfigRadiusClientRootCertificate
from openapi_server.models.p2_s_vpn_server_config_radius_server_root_certificate import P2SVpnServerConfigRadiusServerRootCertificate
from openapi_server.models.p2_s_vpn_server_config_vpn_client_revoked_certificate import P2SVpnServerConfigVpnClientRevokedCertificate
from openapi_server.models.p2_s_vpn_server_config_vpn_client_root_certificate import P2SVpnServerConfigVpnClientRootCertificate
from openapi_server.models.p2_s_vpn_server_configuration_properties_vpn_client_ipsec_policies_inner import P2SVpnServerConfigurationPropertiesVpnClientIpsecPoliciesInner
from openapi_server import util


class P2SVpnServerConfigurationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etag: str=None, name: str=None, p2_s_vpn_gateways: List[HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork]=None, p2_s_vpn_server_config_radius_client_root_certificates: List[P2SVpnServerConfigRadiusClientRootCertificate]=None, p2_s_vpn_server_config_radius_server_root_certificates: List[P2SVpnServerConfigRadiusServerRootCertificate]=None, p2_s_vpn_server_config_vpn_client_revoked_certificates: List[P2SVpnServerConfigVpnClientRevokedCertificate]=None, p2_s_vpn_server_config_vpn_client_root_certificates: List[P2SVpnServerConfigVpnClientRootCertificate]=None, provisioning_state: str=None, radius_server_address: str=None, radius_server_secret: str=None, vpn_client_ipsec_policies: List[P2SVpnServerConfigurationPropertiesVpnClientIpsecPoliciesInner]=None, vpn_protocols: List[str]=None):
        """P2SVpnServerConfigurationProperties - a model defined in OpenAPI

        :param etag: The etag of this P2SVpnServerConfigurationProperties.
        :param name: The name of this P2SVpnServerConfigurationProperties.
        :param p2_s_vpn_gateways: The p2_s_vpn_gateways of this P2SVpnServerConfigurationProperties.
        :param p2_s_vpn_server_config_radius_client_root_certificates: The p2_s_vpn_server_config_radius_client_root_certificates of this P2SVpnServerConfigurationProperties.
        :param p2_s_vpn_server_config_radius_server_root_certificates: The p2_s_vpn_server_config_radius_server_root_certificates of this P2SVpnServerConfigurationProperties.
        :param p2_s_vpn_server_config_vpn_client_revoked_certificates: The p2_s_vpn_server_config_vpn_client_revoked_certificates of this P2SVpnServerConfigurationProperties.
        :param p2_s_vpn_server_config_vpn_client_root_certificates: The p2_s_vpn_server_config_vpn_client_root_certificates of this P2SVpnServerConfigurationProperties.
        :param provisioning_state: The provisioning_state of this P2SVpnServerConfigurationProperties.
        :param radius_server_address: The radius_server_address of this P2SVpnServerConfigurationProperties.
        :param radius_server_secret: The radius_server_secret of this P2SVpnServerConfigurationProperties.
        :param vpn_client_ipsec_policies: The vpn_client_ipsec_policies of this P2SVpnServerConfigurationProperties.
        :param vpn_protocols: The vpn_protocols of this P2SVpnServerConfigurationProperties.
        """
        self.openapi_types = {
            'etag': str,
            'name': str,
            'p2_s_vpn_gateways': List[HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork],
            'p2_s_vpn_server_config_radius_client_root_certificates': List[P2SVpnServerConfigRadiusClientRootCertificate],
            'p2_s_vpn_server_config_radius_server_root_certificates': List[P2SVpnServerConfigRadiusServerRootCertificate],
            'p2_s_vpn_server_config_vpn_client_revoked_certificates': List[P2SVpnServerConfigVpnClientRevokedCertificate],
            'p2_s_vpn_server_config_vpn_client_root_certificates': List[P2SVpnServerConfigVpnClientRootCertificate],
            'provisioning_state': str,
            'radius_server_address': str,
            'radius_server_secret': str,
            'vpn_client_ipsec_policies': List[P2SVpnServerConfigurationPropertiesVpnClientIpsecPoliciesInner],
            'vpn_protocols': List[str]
        }

        self.attribute_map = {
            'etag': 'etag',
            'name': 'name',
            'p2_s_vpn_gateways': 'p2SVpnGateways',
            'p2_s_vpn_server_config_radius_client_root_certificates': 'p2SVpnServerConfigRadiusClientRootCertificates',
            'p2_s_vpn_server_config_radius_server_root_certificates': 'p2SVpnServerConfigRadiusServerRootCertificates',
            'p2_s_vpn_server_config_vpn_client_revoked_certificates': 'p2SVpnServerConfigVpnClientRevokedCertificates',
            'p2_s_vpn_server_config_vpn_client_root_certificates': 'p2SVpnServerConfigVpnClientRootCertificates',
            'provisioning_state': 'provisioningState',
            'radius_server_address': 'radiusServerAddress',
            'radius_server_secret': 'radiusServerSecret',
            'vpn_client_ipsec_policies': 'vpnClientIpsecPolicies',
            'vpn_protocols': 'vpnProtocols'
        }

        self._etag = etag
        self._name = name
        self._p2_s_vpn_gateways = p2_s_vpn_gateways
        self._p2_s_vpn_server_config_radius_client_root_certificates = p2_s_vpn_server_config_radius_client_root_certificates
        self._p2_s_vpn_server_config_radius_server_root_certificates = p2_s_vpn_server_config_radius_server_root_certificates
        self._p2_s_vpn_server_config_vpn_client_revoked_certificates = p2_s_vpn_server_config_vpn_client_revoked_certificates
        self._p2_s_vpn_server_config_vpn_client_root_certificates = p2_s_vpn_server_config_vpn_client_root_certificates
        self._provisioning_state = provisioning_state
        self._radius_server_address = radius_server_address
        self._radius_server_secret = radius_server_secret
        self._vpn_client_ipsec_policies = vpn_client_ipsec_policies
        self._vpn_protocols = vpn_protocols

    @classmethod
    def from_dict(cls, dikt: dict) -> 'P2SVpnServerConfigurationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The P2SVpnServerConfigurationProperties of this P2SVpnServerConfigurationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etag(self):
        """Gets the etag of this P2SVpnServerConfigurationProperties.

        A unique read-only string that changes whenever the resource is updated.

        :return: The etag of this P2SVpnServerConfigurationProperties.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this P2SVpnServerConfigurationProperties.

        A unique read-only string that changes whenever the resource is updated.

        :param etag: The etag of this P2SVpnServerConfigurationProperties.
        :type etag: str
        """

        self._etag = etag

    @property
    def name(self):
        """Gets the name of this P2SVpnServerConfigurationProperties.

        The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.

        :return: The name of this P2SVpnServerConfigurationProperties.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this P2SVpnServerConfigurationProperties.

        The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.

        :param name: The name of this P2SVpnServerConfigurationProperties.
        :type name: str
        """

        self._name = name

    @property
    def p2_s_vpn_gateways(self):
        """Gets the p2_s_vpn_gateways of this P2SVpnServerConfigurationProperties.


        :return: The p2_s_vpn_gateways of this P2SVpnServerConfigurationProperties.
        :rtype: List[HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork]
        """
        return self._p2_s_vpn_gateways

    @p2_s_vpn_gateways.setter
    def p2_s_vpn_gateways(self, p2_s_vpn_gateways):
        """Sets the p2_s_vpn_gateways of this P2SVpnServerConfigurationProperties.


        :param p2_s_vpn_gateways: The p2_s_vpn_gateways of this P2SVpnServerConfigurationProperties.
        :type p2_s_vpn_gateways: List[HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork]
        """

        self._p2_s_vpn_gateways = p2_s_vpn_gateways

    @property
    def p2_s_vpn_server_config_radius_client_root_certificates(self):
        """Gets the p2_s_vpn_server_config_radius_client_root_certificates of this P2SVpnServerConfigurationProperties.

        Radius client root certificate of P2SVpnServerConfiguration.

        :return: The p2_s_vpn_server_config_radius_client_root_certificates of this P2SVpnServerConfigurationProperties.
        :rtype: List[P2SVpnServerConfigRadiusClientRootCertificate]
        """
        return self._p2_s_vpn_server_config_radius_client_root_certificates

    @p2_s_vpn_server_config_radius_client_root_certificates.setter
    def p2_s_vpn_server_config_radius_client_root_certificates(self, p2_s_vpn_server_config_radius_client_root_certificates):
        """Sets the p2_s_vpn_server_config_radius_client_root_certificates of this P2SVpnServerConfigurationProperties.

        Radius client root certificate of P2SVpnServerConfiguration.

        :param p2_s_vpn_server_config_radius_client_root_certificates: The p2_s_vpn_server_config_radius_client_root_certificates of this P2SVpnServerConfigurationProperties.
        :type p2_s_vpn_server_config_radius_client_root_certificates: List[P2SVpnServerConfigRadiusClientRootCertificate]
        """

        self._p2_s_vpn_server_config_radius_client_root_certificates = p2_s_vpn_server_config_radius_client_root_certificates

    @property
    def p2_s_vpn_server_config_radius_server_root_certificates(self):
        """Gets the p2_s_vpn_server_config_radius_server_root_certificates of this P2SVpnServerConfigurationProperties.

        Radius Server root certificate of P2SVpnServerConfiguration.

        :return: The p2_s_vpn_server_config_radius_server_root_certificates of this P2SVpnServerConfigurationProperties.
        :rtype: List[P2SVpnServerConfigRadiusServerRootCertificate]
        """
        return self._p2_s_vpn_server_config_radius_server_root_certificates

    @p2_s_vpn_server_config_radius_server_root_certificates.setter
    def p2_s_vpn_server_config_radius_server_root_certificates(self, p2_s_vpn_server_config_radius_server_root_certificates):
        """Sets the p2_s_vpn_server_config_radius_server_root_certificates of this P2SVpnServerConfigurationProperties.

        Radius Server root certificate of P2SVpnServerConfiguration.

        :param p2_s_vpn_server_config_radius_server_root_certificates: The p2_s_vpn_server_config_radius_server_root_certificates of this P2SVpnServerConfigurationProperties.
        :type p2_s_vpn_server_config_radius_server_root_certificates: List[P2SVpnServerConfigRadiusServerRootCertificate]
        """

        self._p2_s_vpn_server_config_radius_server_root_certificates = p2_s_vpn_server_config_radius_server_root_certificates

    @property
    def p2_s_vpn_server_config_vpn_client_revoked_certificates(self):
        """Gets the p2_s_vpn_server_config_vpn_client_revoked_certificates of this P2SVpnServerConfigurationProperties.

        VPN client revoked certificate of P2SVpnServerConfiguration.

        :return: The p2_s_vpn_server_config_vpn_client_revoked_certificates of this P2SVpnServerConfigurationProperties.
        :rtype: List[P2SVpnServerConfigVpnClientRevokedCertificate]
        """
        return self._p2_s_vpn_server_config_vpn_client_revoked_certificates

    @p2_s_vpn_server_config_vpn_client_revoked_certificates.setter
    def p2_s_vpn_server_config_vpn_client_revoked_certificates(self, p2_s_vpn_server_config_vpn_client_revoked_certificates):
        """Sets the p2_s_vpn_server_config_vpn_client_revoked_certificates of this P2SVpnServerConfigurationProperties.

        VPN client revoked certificate of P2SVpnServerConfiguration.

        :param p2_s_vpn_server_config_vpn_client_revoked_certificates: The p2_s_vpn_server_config_vpn_client_revoked_certificates of this P2SVpnServerConfigurationProperties.
        :type p2_s_vpn_server_config_vpn_client_revoked_certificates: List[P2SVpnServerConfigVpnClientRevokedCertificate]
        """

        self._p2_s_vpn_server_config_vpn_client_revoked_certificates = p2_s_vpn_server_config_vpn_client_revoked_certificates

    @property
    def p2_s_vpn_server_config_vpn_client_root_certificates(self):
        """Gets the p2_s_vpn_server_config_vpn_client_root_certificates of this P2SVpnServerConfigurationProperties.

        VPN client root certificate of P2SVpnServerConfiguration.

        :return: The p2_s_vpn_server_config_vpn_client_root_certificates of this P2SVpnServerConfigurationProperties.
        :rtype: List[P2SVpnServerConfigVpnClientRootCertificate]
        """
        return self._p2_s_vpn_server_config_vpn_client_root_certificates

    @p2_s_vpn_server_config_vpn_client_root_certificates.setter
    def p2_s_vpn_server_config_vpn_client_root_certificates(self, p2_s_vpn_server_config_vpn_client_root_certificates):
        """Sets the p2_s_vpn_server_config_vpn_client_root_certificates of this P2SVpnServerConfigurationProperties.

        VPN client root certificate of P2SVpnServerConfiguration.

        :param p2_s_vpn_server_config_vpn_client_root_certificates: The p2_s_vpn_server_config_vpn_client_root_certificates of this P2SVpnServerConfigurationProperties.
        :type p2_s_vpn_server_config_vpn_client_root_certificates: List[P2SVpnServerConfigVpnClientRootCertificate]
        """

        self._p2_s_vpn_server_config_vpn_client_root_certificates = p2_s_vpn_server_config_vpn_client_root_certificates

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this P2SVpnServerConfigurationProperties.

        The provisioning state of the P2SVpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :return: The provisioning_state of this P2SVpnServerConfigurationProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this P2SVpnServerConfigurationProperties.

        The provisioning state of the P2SVpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

        :param provisioning_state: The provisioning_state of this P2SVpnServerConfigurationProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def radius_server_address(self):
        """Gets the radius_server_address of this P2SVpnServerConfigurationProperties.

        The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.

        :return: The radius_server_address of this P2SVpnServerConfigurationProperties.
        :rtype: str
        """
        return self._radius_server_address

    @radius_server_address.setter
    def radius_server_address(self, radius_server_address):
        """Sets the radius_server_address of this P2SVpnServerConfigurationProperties.

        The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.

        :param radius_server_address: The radius_server_address of this P2SVpnServerConfigurationProperties.
        :type radius_server_address: str
        """

        self._radius_server_address = radius_server_address

    @property
    def radius_server_secret(self):
        """Gets the radius_server_secret of this P2SVpnServerConfigurationProperties.

        The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.

        :return: The radius_server_secret of this P2SVpnServerConfigurationProperties.
        :rtype: str
        """
        return self._radius_server_secret

    @radius_server_secret.setter
    def radius_server_secret(self, radius_server_secret):
        """Sets the radius_server_secret of this P2SVpnServerConfigurationProperties.

        The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.

        :param radius_server_secret: The radius_server_secret of this P2SVpnServerConfigurationProperties.
        :type radius_server_secret: str
        """

        self._radius_server_secret = radius_server_secret

    @property
    def vpn_client_ipsec_policies(self):
        """Gets the vpn_client_ipsec_policies of this P2SVpnServerConfigurationProperties.

        VpnClientIpsecPolicies for P2SVpnServerConfiguration.

        :return: The vpn_client_ipsec_policies of this P2SVpnServerConfigurationProperties.
        :rtype: List[P2SVpnServerConfigurationPropertiesVpnClientIpsecPoliciesInner]
        """
        return self._vpn_client_ipsec_policies

    @vpn_client_ipsec_policies.setter
    def vpn_client_ipsec_policies(self, vpn_client_ipsec_policies):
        """Sets the vpn_client_ipsec_policies of this P2SVpnServerConfigurationProperties.

        VpnClientIpsecPolicies for P2SVpnServerConfiguration.

        :param vpn_client_ipsec_policies: The vpn_client_ipsec_policies of this P2SVpnServerConfigurationProperties.
        :type vpn_client_ipsec_policies: List[P2SVpnServerConfigurationPropertiesVpnClientIpsecPoliciesInner]
        """

        self._vpn_client_ipsec_policies = vpn_client_ipsec_policies

    @property
    def vpn_protocols(self):
        """Gets the vpn_protocols of this P2SVpnServerConfigurationProperties.

        VPN protocols for the P2SVpnServerConfiguration.

        :return: The vpn_protocols of this P2SVpnServerConfigurationProperties.
        :rtype: List[str]
        """
        return self._vpn_protocols

    @vpn_protocols.setter
    def vpn_protocols(self, vpn_protocols):
        """Sets the vpn_protocols of this P2SVpnServerConfigurationProperties.

        VPN protocols for the P2SVpnServerConfiguration.

        :param vpn_protocols: The vpn_protocols of this P2SVpnServerConfigurationProperties.
        :type vpn_protocols: List[str]
        """
        allowed_values = ["IkeV2", "OpenVPN"]  # noqa: E501
        if not set(vpn_protocols).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `vpn_protocols` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(vpn_protocols) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._vpn_protocols = vpn_protocols
