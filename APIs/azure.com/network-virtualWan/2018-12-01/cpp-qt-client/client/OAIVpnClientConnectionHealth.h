/**
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2018-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVpnClientConnectionHealth.h
 *
 * VpnClientConnectionHealth properties
 */

#ifndef OAIVpnClientConnectionHealth_H
#define OAIVpnClientConnectionHealth_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVpnClientConnectionHealth : public OAIObject {
public:
    OAIVpnClientConnectionHealth();
    OAIVpnClientConnectionHealth(QString json);
    ~OAIVpnClientConnectionHealth() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllocatedIpAddresses() const;
    void setAllocatedIpAddresses(const QList<QString> &allocated_ip_addresses);
    bool is_allocated_ip_addresses_Set() const;
    bool is_allocated_ip_addresses_Valid() const;

    qint64 getTotalEgressBytesTransferred() const;
    void setTotalEgressBytesTransferred(const qint64 &total_egress_bytes_transferred);
    bool is_total_egress_bytes_transferred_Set() const;
    bool is_total_egress_bytes_transferred_Valid() const;

    qint64 getTotalIngressBytesTransferred() const;
    void setTotalIngressBytesTransferred(const qint64 &total_ingress_bytes_transferred);
    bool is_total_ingress_bytes_transferred_Set() const;
    bool is_total_ingress_bytes_transferred_Valid() const;

    qint32 getVpnClientConnectionsCount() const;
    void setVpnClientConnectionsCount(const qint32 &vpn_client_connections_count);
    bool is_vpn_client_connections_count_Set() const;
    bool is_vpn_client_connections_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allocated_ip_addresses;
    bool m_allocated_ip_addresses_isSet;
    bool m_allocated_ip_addresses_isValid;

    qint64 m_total_egress_bytes_transferred;
    bool m_total_egress_bytes_transferred_isSet;
    bool m_total_egress_bytes_transferred_isValid;

    qint64 m_total_ingress_bytes_transferred;
    bool m_total_ingress_bytes_transferred_isSet;
    bool m_total_ingress_bytes_transferred_isValid;

    qint32 m_vpn_client_connections_count;
    bool m_vpn_client_connections_count_isSet;
    bool m_vpn_client_connections_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVpnClientConnectionHealth)

#endif // OAIVpnClientConnectionHealth_H
