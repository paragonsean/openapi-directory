# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vpn_link_bgp_settings import VpnLinkBgpSettings
from openapi_server.models.vpn_link_provider_properties import VpnLinkProviderProperties
from openapi_server import util


class VpnSiteLinkProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bgp_properties: VpnLinkBgpSettings=None, ip_address: str=None, link_properties: VpnLinkProviderProperties=None, provisioning_state: str=None):
        """VpnSiteLinkProperties - a model defined in OpenAPI

        :param bgp_properties: The bgp_properties of this VpnSiteLinkProperties.
        :param ip_address: The ip_address of this VpnSiteLinkProperties.
        :param link_properties: The link_properties of this VpnSiteLinkProperties.
        :param provisioning_state: The provisioning_state of this VpnSiteLinkProperties.
        """
        self.openapi_types = {
            'bgp_properties': VpnLinkBgpSettings,
            'ip_address': str,
            'link_properties': VpnLinkProviderProperties,
            'provisioning_state': str
        }

        self.attribute_map = {
            'bgp_properties': 'bgpProperties',
            'ip_address': 'ipAddress',
            'link_properties': 'linkProperties',
            'provisioning_state': 'provisioningState'
        }

        self._bgp_properties = bgp_properties
        self._ip_address = ip_address
        self._link_properties = link_properties
        self._provisioning_state = provisioning_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VpnSiteLinkProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VpnSiteLinkProperties of this VpnSiteLinkProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bgp_properties(self):
        """Gets the bgp_properties of this VpnSiteLinkProperties.


        :return: The bgp_properties of this VpnSiteLinkProperties.
        :rtype: VpnLinkBgpSettings
        """
        return self._bgp_properties

    @bgp_properties.setter
    def bgp_properties(self, bgp_properties):
        """Sets the bgp_properties of this VpnSiteLinkProperties.


        :param bgp_properties: The bgp_properties of this VpnSiteLinkProperties.
        :type bgp_properties: VpnLinkBgpSettings
        """

        self._bgp_properties = bgp_properties

    @property
    def ip_address(self):
        """Gets the ip_address of this VpnSiteLinkProperties.

        The ip-address for the vpn-site-link.

        :return: The ip_address of this VpnSiteLinkProperties.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this VpnSiteLinkProperties.

        The ip-address for the vpn-site-link.

        :param ip_address: The ip_address of this VpnSiteLinkProperties.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def link_properties(self):
        """Gets the link_properties of this VpnSiteLinkProperties.


        :return: The link_properties of this VpnSiteLinkProperties.
        :rtype: VpnLinkProviderProperties
        """
        return self._link_properties

    @link_properties.setter
    def link_properties(self, link_properties):
        """Sets the link_properties of this VpnSiteLinkProperties.


        :param link_properties: The link_properties of this VpnSiteLinkProperties.
        :type link_properties: VpnLinkProviderProperties
        """

        self._link_properties = link_properties

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this VpnSiteLinkProperties.

        The current provisioning state.

        :return: The provisioning_state of this VpnSiteLinkProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this VpnSiteLinkProperties.

        The current provisioning state.

        :param provisioning_state: The provisioning_state of this VpnSiteLinkProperties.
        :type provisioning_state: str
        """
        allowed_values = ["Succeeded", "Updating", "Deleting", "Failed"]  # noqa: E501
        if provisioning_state not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_state` ({0}), must be one of {1}"
                .format(provisioning_state, allowed_values)
            )

        self._provisioning_state = provisioning_state
