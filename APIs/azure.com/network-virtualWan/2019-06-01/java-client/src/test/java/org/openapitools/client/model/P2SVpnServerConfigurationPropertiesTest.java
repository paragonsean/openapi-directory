/*
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork;
import org.openapitools.client.model.P2SVpnServerConfigRadiusClientRootCertificate;
import org.openapitools.client.model.P2SVpnServerConfigRadiusServerRootCertificate;
import org.openapitools.client.model.P2SVpnServerConfigVpnClientRevokedCertificate;
import org.openapitools.client.model.P2SVpnServerConfigVpnClientRootCertificate;
import org.openapitools.client.model.P2SVpnServerConfigurationPropertiesVpnClientIpsecPoliciesInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for P2SVpnServerConfigurationProperties
 */
public class P2SVpnServerConfigurationPropertiesTest {
    private final P2SVpnServerConfigurationProperties model = new P2SVpnServerConfigurationProperties();

    /**
     * Model tests for P2SVpnServerConfigurationProperties
     */
    @Test
    public void testP2SVpnServerConfigurationProperties() {
        // TODO: test P2SVpnServerConfigurationProperties
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'p2SVpnGateways'
     */
    @Test
    public void p2SVpnGatewaysTest() {
        // TODO: test p2SVpnGateways
    }

    /**
     * Test the property 'p2SVpnServerConfigRadiusClientRootCertificates'
     */
    @Test
    public void p2SVpnServerConfigRadiusClientRootCertificatesTest() {
        // TODO: test p2SVpnServerConfigRadiusClientRootCertificates
    }

    /**
     * Test the property 'p2SVpnServerConfigRadiusServerRootCertificates'
     */
    @Test
    public void p2SVpnServerConfigRadiusServerRootCertificatesTest() {
        // TODO: test p2SVpnServerConfigRadiusServerRootCertificates
    }

    /**
     * Test the property 'p2SVpnServerConfigVpnClientRevokedCertificates'
     */
    @Test
    public void p2SVpnServerConfigVpnClientRevokedCertificatesTest() {
        // TODO: test p2SVpnServerConfigVpnClientRevokedCertificates
    }

    /**
     * Test the property 'p2SVpnServerConfigVpnClientRootCertificates'
     */
    @Test
    public void p2SVpnServerConfigVpnClientRootCertificatesTest() {
        // TODO: test p2SVpnServerConfigVpnClientRootCertificates
    }

    /**
     * Test the property 'provisioningState'
     */
    @Test
    public void provisioningStateTest() {
        // TODO: test provisioningState
    }

    /**
     * Test the property 'radiusServerAddress'
     */
    @Test
    public void radiusServerAddressTest() {
        // TODO: test radiusServerAddress
    }

    /**
     * Test the property 'radiusServerSecret'
     */
    @Test
    public void radiusServerSecretTest() {
        // TODO: test radiusServerSecret
    }

    /**
     * Test the property 'vpnClientIpsecPolicies'
     */
    @Test
    public void vpnClientIpsecPoliciesTest() {
        // TODO: test vpnClientIpsecPolicies
    }

    /**
     * Test the property 'vpnProtocols'
     */
    @Test
    public void vpnProtocolsTest() {
        // TODO: test vpnProtocols
    }

}
