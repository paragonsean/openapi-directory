/*
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2019-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.P2SVpnGateway;
import org.openapitools.client.model.P2SVpnProfileParameters;
import org.openapitools.client.model.P2sVpnGatewaysListDefaultResponse;
import org.openapitools.client.model.P2sVpnGatewaysUpdateTagsRequest;
import org.openapitools.client.model.VpnProfileResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class P2SVpnGatewaysApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public P2SVpnGatewaysApi() {
        this(Configuration.getDefaultApiClient());
    }

    public P2SVpnGatewaysApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for p2sVpnGatewaysGenerateVpnProfile
     * @param resourceGroupName The name of the resource group. (required)
     * @param gatewayName The name of the P2SVpnGateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the generate P2SVpnGateway VPN client package operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> VPN profile package URL. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call p2sVpnGatewaysGenerateVpnProfileCall(String resourceGroupName, String gatewayName, String apiVersion, String subscriptionId, P2SVpnProfileParameters parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/generatevpnprofile"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "gatewayName" + "}", localVarApiClient.escapeString(gatewayName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call p2sVpnGatewaysGenerateVpnProfileValidateBeforeCall(String resourceGroupName, String gatewayName, String apiVersion, String subscriptionId, P2SVpnProfileParameters parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling p2sVpnGatewaysGenerateVpnProfile(Async)");
        }

        // verify the required parameter 'gatewayName' is set
        if (gatewayName == null) {
            throw new ApiException("Missing the required parameter 'gatewayName' when calling p2sVpnGatewaysGenerateVpnProfile(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling p2sVpnGatewaysGenerateVpnProfile(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling p2sVpnGatewaysGenerateVpnProfile(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling p2sVpnGatewaysGenerateVpnProfile(Async)");
        }

        return p2sVpnGatewaysGenerateVpnProfileCall(resourceGroupName, gatewayName, apiVersion, subscriptionId, parameters, _callback);

    }

    /**
     * 
     * Generates VPN profile for P2S client of the P2SVpnGateway in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param gatewayName The name of the P2SVpnGateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the generate P2SVpnGateway VPN client package operation. (required)
     * @return VpnProfileResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> VPN profile package URL. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
     </table>
     */
    public VpnProfileResponse p2sVpnGatewaysGenerateVpnProfile(String resourceGroupName, String gatewayName, String apiVersion, String subscriptionId, P2SVpnProfileParameters parameters) throws ApiException {
        ApiResponse<VpnProfileResponse> localVarResp = p2sVpnGatewaysGenerateVpnProfileWithHttpInfo(resourceGroupName, gatewayName, apiVersion, subscriptionId, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Generates VPN profile for P2S client of the P2SVpnGateway in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param gatewayName The name of the P2SVpnGateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the generate P2SVpnGateway VPN client package operation. (required)
     * @return ApiResponse&lt;VpnProfileResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> VPN profile package URL. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VpnProfileResponse> p2sVpnGatewaysGenerateVpnProfileWithHttpInfo(String resourceGroupName, String gatewayName, String apiVersion, String subscriptionId, P2SVpnProfileParameters parameters) throws ApiException {
        okhttp3.Call localVarCall = p2sVpnGatewaysGenerateVpnProfileValidateBeforeCall(resourceGroupName, gatewayName, apiVersion, subscriptionId, parameters, null);
        Type localVarReturnType = new TypeToken<VpnProfileResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Generates VPN profile for P2S client of the P2SVpnGateway in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param gatewayName The name of the P2SVpnGateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param parameters Parameters supplied to the generate P2SVpnGateway VPN client package operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> VPN profile package URL. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call p2sVpnGatewaysGenerateVpnProfileAsync(String resourceGroupName, String gatewayName, String apiVersion, String subscriptionId, P2SVpnProfileParameters parameters, final ApiCallback<VpnProfileResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = p2sVpnGatewaysGenerateVpnProfileValidateBeforeCall(resourceGroupName, gatewayName, apiVersion, subscriptionId, parameters, _callback);
        Type localVarReturnType = new TypeToken<VpnProfileResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for p2sVpnGatewaysGetP2sVpnConnectionHealth
     * @param resourceGroupName The name of the resource group. (required)
     * @param gatewayName The name of the P2SVpnGateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> P2S Vpn Gateway with P2S connection health details. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call p2sVpnGatewaysGetP2sVpnConnectionHealthCall(String resourceGroupName, String gatewayName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/getP2sVpnConnectionHealth"
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "gatewayName" + "}", localVarApiClient.escapeString(gatewayName.toString()))
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call p2sVpnGatewaysGetP2sVpnConnectionHealthValidateBeforeCall(String resourceGroupName, String gatewayName, String apiVersion, String subscriptionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling p2sVpnGatewaysGetP2sVpnConnectionHealth(Async)");
        }

        // verify the required parameter 'gatewayName' is set
        if (gatewayName == null) {
            throw new ApiException("Missing the required parameter 'gatewayName' when calling p2sVpnGatewaysGetP2sVpnConnectionHealth(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling p2sVpnGatewaysGetP2sVpnConnectionHealth(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling p2sVpnGatewaysGetP2sVpnConnectionHealth(Async)");
        }

        return p2sVpnGatewaysGetP2sVpnConnectionHealthCall(resourceGroupName, gatewayName, apiVersion, subscriptionId, _callback);

    }

    /**
     * 
     * Gets the connection health of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param gatewayName The name of the P2SVpnGateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return P2SVpnGateway
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> P2S Vpn Gateway with P2S connection health details. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
     </table>
     */
    public P2SVpnGateway p2sVpnGatewaysGetP2sVpnConnectionHealth(String resourceGroupName, String gatewayName, String apiVersion, String subscriptionId) throws ApiException {
        ApiResponse<P2SVpnGateway> localVarResp = p2sVpnGatewaysGetP2sVpnConnectionHealthWithHttpInfo(resourceGroupName, gatewayName, apiVersion, subscriptionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the connection health of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param gatewayName The name of the P2SVpnGateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @return ApiResponse&lt;P2SVpnGateway&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> P2S Vpn Gateway with P2S connection health details. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<P2SVpnGateway> p2sVpnGatewaysGetP2sVpnConnectionHealthWithHttpInfo(String resourceGroupName, String gatewayName, String apiVersion, String subscriptionId) throws ApiException {
        okhttp3.Call localVarCall = p2sVpnGatewaysGetP2sVpnConnectionHealthValidateBeforeCall(resourceGroupName, gatewayName, apiVersion, subscriptionId, null);
        Type localVarReturnType = new TypeToken<P2SVpnGateway>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the connection health of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.
     * @param resourceGroupName The name of the resource group. (required)
     * @param gatewayName The name of the P2SVpnGateway. (required)
     * @param apiVersion Client API version. (required)
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> P2S Vpn Gateway with P2S connection health details. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted and the operation will complete asynchronously. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call p2sVpnGatewaysGetP2sVpnConnectionHealthAsync(String resourceGroupName, String gatewayName, String apiVersion, String subscriptionId, final ApiCallback<P2SVpnGateway> _callback) throws ApiException {

        okhttp3.Call localVarCall = p2sVpnGatewaysGetP2sVpnConnectionHealthValidateBeforeCall(resourceGroupName, gatewayName, apiVersion, subscriptionId, _callback);
        Type localVarReturnType = new TypeToken<P2SVpnGateway>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for p2sVpnGatewaysUpdateTags
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The resource group name of the P2SVpnGateway. (required)
     * @param gatewayName The name of the gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param p2SVpnGatewayParameters Parameters supplied to update a virtual wan p2s vpn gateway tags. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. Returns the details of the updated gateway. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Request received successfully. Returns the details of the updated gateway. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call p2sVpnGatewaysUpdateTagsCall(String subscriptionId, String resourceGroupName, String gatewayName, String apiVersion, P2sVpnGatewaysUpdateTagsRequest p2SVpnGatewayParameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = p2SVpnGatewayParameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "gatewayName" + "}", localVarApiClient.escapeString(gatewayName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call p2sVpnGatewaysUpdateTagsValidateBeforeCall(String subscriptionId, String resourceGroupName, String gatewayName, String apiVersion, P2sVpnGatewaysUpdateTagsRequest p2SVpnGatewayParameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling p2sVpnGatewaysUpdateTags(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling p2sVpnGatewaysUpdateTags(Async)");
        }

        // verify the required parameter 'gatewayName' is set
        if (gatewayName == null) {
            throw new ApiException("Missing the required parameter 'gatewayName' when calling p2sVpnGatewaysUpdateTags(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling p2sVpnGatewaysUpdateTags(Async)");
        }

        // verify the required parameter 'p2SVpnGatewayParameters' is set
        if (p2SVpnGatewayParameters == null) {
            throw new ApiException("Missing the required parameter 'p2SVpnGatewayParameters' when calling p2sVpnGatewaysUpdateTags(Async)");
        }

        return p2sVpnGatewaysUpdateTagsCall(subscriptionId, resourceGroupName, gatewayName, apiVersion, p2SVpnGatewayParameters, _callback);

    }

    /**
     * 
     * Updates virtual wan p2s vpn gateway tags.
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The resource group name of the P2SVpnGateway. (required)
     * @param gatewayName The name of the gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param p2SVpnGatewayParameters Parameters supplied to update a virtual wan p2s vpn gateway tags. (required)
     * @return P2SVpnGateway
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. Returns the details of the updated gateway. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Request received successfully. Returns the details of the updated gateway. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error. </td><td>  -  </td></tr>
     </table>
     */
    public P2SVpnGateway p2sVpnGatewaysUpdateTags(String subscriptionId, String resourceGroupName, String gatewayName, String apiVersion, P2sVpnGatewaysUpdateTagsRequest p2SVpnGatewayParameters) throws ApiException {
        ApiResponse<P2SVpnGateway> localVarResp = p2sVpnGatewaysUpdateTagsWithHttpInfo(subscriptionId, resourceGroupName, gatewayName, apiVersion, p2SVpnGatewayParameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates virtual wan p2s vpn gateway tags.
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The resource group name of the P2SVpnGateway. (required)
     * @param gatewayName The name of the gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param p2SVpnGatewayParameters Parameters supplied to update a virtual wan p2s vpn gateway tags. (required)
     * @return ApiResponse&lt;P2SVpnGateway&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. Returns the details of the updated gateway. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Request received successfully. Returns the details of the updated gateway. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<P2SVpnGateway> p2sVpnGatewaysUpdateTagsWithHttpInfo(String subscriptionId, String resourceGroupName, String gatewayName, String apiVersion, P2sVpnGatewaysUpdateTagsRequest p2SVpnGatewayParameters) throws ApiException {
        okhttp3.Call localVarCall = p2sVpnGatewaysUpdateTagsValidateBeforeCall(subscriptionId, resourceGroupName, gatewayName, apiVersion, p2SVpnGatewayParameters, null);
        Type localVarReturnType = new TypeToken<P2SVpnGateway>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates virtual wan p2s vpn gateway tags.
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The resource group name of the P2SVpnGateway. (required)
     * @param gatewayName The name of the gateway. (required)
     * @param apiVersion Client API version. (required)
     * @param p2SVpnGatewayParameters Parameters supplied to update a virtual wan p2s vpn gateway tags. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request successful. Returns the details of the updated gateway. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Request received successfully. Returns the details of the updated gateway. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call p2sVpnGatewaysUpdateTagsAsync(String subscriptionId, String resourceGroupName, String gatewayName, String apiVersion, P2sVpnGatewaysUpdateTagsRequest p2SVpnGatewayParameters, final ApiCallback<P2SVpnGateway> _callback) throws ApiException {

        okhttp3.Call localVarCall = p2sVpnGatewaysUpdateTagsValidateBeforeCall(subscriptionId, resourceGroupName, gatewayName, apiVersion, p2SVpnGatewayParameters, _callback);
        Type localVarReturnType = new TypeToken<P2SVpnGateway>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
