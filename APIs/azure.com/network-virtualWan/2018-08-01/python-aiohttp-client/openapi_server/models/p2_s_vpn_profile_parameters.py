# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class P2SVpnProfileParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authentication_method: str=None):
        """P2SVpnProfileParameters - a model defined in OpenAPI

        :param authentication_method: The authentication_method of this P2SVpnProfileParameters.
        """
        self.openapi_types = {
            'authentication_method': str
        }

        self.attribute_map = {
            'authentication_method': 'authenticationMethod'
        }

        self._authentication_method = authentication_method

    @classmethod
    def from_dict(cls, dikt: dict) -> 'P2SVpnProfileParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The P2SVpnProfileParameters of this P2SVpnProfileParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authentication_method(self):
        """Gets the authentication_method of this P2SVpnProfileParameters.

        VPN client Authentication Method. Possible values are: 'EAPTLS' and 'EAPMSCHAPv2'.

        :return: The authentication_method of this P2SVpnProfileParameters.
        :rtype: str
        """
        return self._authentication_method

    @authentication_method.setter
    def authentication_method(self, authentication_method):
        """Sets the authentication_method of this P2SVpnProfileParameters.

        VPN client Authentication Method. Possible values are: 'EAPTLS' and 'EAPMSCHAPv2'.

        :param authentication_method: The authentication_method of this P2SVpnProfileParameters.
        :type authentication_method: str
        """
        allowed_values = ["EAPTLS", "EAPMSCHAPv2"]  # noqa: E501
        if authentication_method not in allowed_values:
            raise ValueError(
                "Invalid value for `authentication_method` ({0}), must be one of {1}"
                .format(authentication_method, allowed_values)
            )

        self._authentication_method = authentication_method
