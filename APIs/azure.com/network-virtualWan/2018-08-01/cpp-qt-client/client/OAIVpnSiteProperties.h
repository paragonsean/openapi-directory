/**
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2018-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVpnSiteProperties.h
 *
 * Parameters for VpnSite
 */

#ifndef OAIVpnSiteProperties_H
#define OAIVpnSiteProperties_H

#include <QJsonObject>

#include "OAIDeviceProperties.h"
#include "OAIHubVirtualNetworkConnectionProperties_remoteVirtualNetwork.h"
#include "OAIP2SVpnGatewayProperties_vpnClientAddressPool.h"
#include "OAIProvisioningState.h"
#include "OAIVpnGatewayProperties_bgpSettings.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIP2SVpnGatewayProperties_vpnClientAddressPool;
class OAIVpnGatewayProperties_bgpSettings;
class OAIDeviceProperties;
class OAIHubVirtualNetworkConnectionProperties_remoteVirtualNetwork;

class OAIVpnSiteProperties : public OAIObject {
public:
    OAIVpnSiteProperties();
    OAIVpnSiteProperties(QString json);
    ~OAIVpnSiteProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIP2SVpnGatewayProperties_vpnClientAddressPool getAddressSpace() const;
    void setAddressSpace(const OAIP2SVpnGatewayProperties_vpnClientAddressPool &address_space);
    bool is_address_space_Set() const;
    bool is_address_space_Valid() const;

    OAIVpnGatewayProperties_bgpSettings getBgpProperties() const;
    void setBgpProperties(const OAIVpnGatewayProperties_bgpSettings &bgp_properties);
    bool is_bgp_properties_Set() const;
    bool is_bgp_properties_Valid() const;

    OAIDeviceProperties getDeviceProperties() const;
    void setDeviceProperties(const OAIDeviceProperties &device_properties);
    bool is_device_properties_Set() const;
    bool is_device_properties_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    bool isIsSecuritySite() const;
    void setIsSecuritySite(const bool &is_security_site);
    bool is_is_security_site_Set() const;
    bool is_is_security_site_Valid() const;

    OAIProvisioningState getProvisioningState() const;
    void setProvisioningState(const OAIProvisioningState &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getSiteKey() const;
    void setSiteKey(const QString &site_key);
    bool is_site_key_Set() const;
    bool is_site_key_Valid() const;

    OAIHubVirtualNetworkConnectionProperties_remoteVirtualNetwork getVirtualWan() const;
    void setVirtualWan(const OAIHubVirtualNetworkConnectionProperties_remoteVirtualNetwork &virtual_wan);
    bool is_virtual_wan_Set() const;
    bool is_virtual_wan_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIP2SVpnGatewayProperties_vpnClientAddressPool m_address_space;
    bool m_address_space_isSet;
    bool m_address_space_isValid;

    OAIVpnGatewayProperties_bgpSettings m_bgp_properties;
    bool m_bgp_properties_isSet;
    bool m_bgp_properties_isValid;

    OAIDeviceProperties m_device_properties;
    bool m_device_properties_isSet;
    bool m_device_properties_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    bool m_is_security_site;
    bool m_is_security_site_isSet;
    bool m_is_security_site_isValid;

    OAIProvisioningState m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_site_key;
    bool m_site_key_isSet;
    bool m_site_key_isValid;

    OAIHubVirtualNetworkConnectionProperties_remoteVirtualNetwork m_virtual_wan;
    bool m_virtual_wan_isSet;
    bool m_virtual_wan_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVpnSiteProperties)

#endif // OAIVpnSiteProperties_H
