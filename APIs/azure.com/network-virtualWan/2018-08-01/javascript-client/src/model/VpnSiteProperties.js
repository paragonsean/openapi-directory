/**
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2018-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeviceProperties from './DeviceProperties';
import HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork from './HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork';
import P2SVpnGatewayPropertiesVpnClientAddressPool from './P2SVpnGatewayPropertiesVpnClientAddressPool';
import ProvisioningState from './ProvisioningState';
import VpnGatewayPropertiesBgpSettings from './VpnGatewayPropertiesBgpSettings';

/**
 * The VpnSiteProperties model module.
 * @module model/VpnSiteProperties
 * @version 2018-08-01
 */
class VpnSiteProperties {
    /**
     * Constructs a new <code>VpnSiteProperties</code>.
     * Parameters for VpnSite
     * @alias module:model/VpnSiteProperties
     */
    constructor() { 
        
        VpnSiteProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VpnSiteProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VpnSiteProperties} obj Optional instance to populate.
     * @return {module:model/VpnSiteProperties} The populated <code>VpnSiteProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VpnSiteProperties();

            if (data.hasOwnProperty('addressSpace')) {
                obj['addressSpace'] = P2SVpnGatewayPropertiesVpnClientAddressPool.constructFromObject(data['addressSpace']);
            }
            if (data.hasOwnProperty('bgpProperties')) {
                obj['bgpProperties'] = VpnGatewayPropertiesBgpSettings.constructFromObject(data['bgpProperties']);
            }
            if (data.hasOwnProperty('deviceProperties')) {
                obj['deviceProperties'] = DeviceProperties.constructFromObject(data['deviceProperties']);
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('isSecuritySite')) {
                obj['isSecuritySite'] = ApiClient.convertToType(data['isSecuritySite'], 'Boolean');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ProvisioningState.constructFromObject(data['provisioningState']);
            }
            if (data.hasOwnProperty('siteKey')) {
                obj['siteKey'] = ApiClient.convertToType(data['siteKey'], 'String');
            }
            if (data.hasOwnProperty('virtualWan')) {
                obj['virtualWan'] = HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork.constructFromObject(data['virtualWan']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VpnSiteProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VpnSiteProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `addressSpace`
        if (data['addressSpace']) { // data not null
          P2SVpnGatewayPropertiesVpnClientAddressPool.validateJSON(data['addressSpace']);
        }
        // validate the optional field `bgpProperties`
        if (data['bgpProperties']) { // data not null
          VpnGatewayPropertiesBgpSettings.validateJSON(data['bgpProperties']);
        }
        // validate the optional field `deviceProperties`
        if (data['deviceProperties']) { // data not null
          DeviceProperties.validateJSON(data['deviceProperties']);
        }
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // ensure the json data is a string
        if (data['siteKey'] && !(typeof data['siteKey'] === 'string' || data['siteKey'] instanceof String)) {
            throw new Error("Expected the field `siteKey` to be a primitive type in the JSON string but got " + data['siteKey']);
        }
        // validate the optional field `virtualWan`
        if (data['virtualWan']) { // data not null
          HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork.validateJSON(data['virtualWan']);
        }

        return true;
    }


}



/**
 * @member {module:model/P2SVpnGatewayPropertiesVpnClientAddressPool} addressSpace
 */
VpnSiteProperties.prototype['addressSpace'] = undefined;

/**
 * @member {module:model/VpnGatewayPropertiesBgpSettings} bgpProperties
 */
VpnSiteProperties.prototype['bgpProperties'] = undefined;

/**
 * @member {module:model/DeviceProperties} deviceProperties
 */
VpnSiteProperties.prototype['deviceProperties'] = undefined;

/**
 * The ip-address for the vpn-site.
 * @member {String} ipAddress
 */
VpnSiteProperties.prototype['ipAddress'] = undefined;

/**
 * IsSecuritySite flag
 * @member {Boolean} isSecuritySite
 */
VpnSiteProperties.prototype['isSecuritySite'] = undefined;

/**
 * @member {module:model/ProvisioningState} provisioningState
 */
VpnSiteProperties.prototype['provisioningState'] = undefined;

/**
 * The key for vpn-site that can be used for connections.
 * @member {String} siteKey
 */
VpnSiteProperties.prototype['siteKey'] = undefined;

/**
 * @member {module:model/HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork} virtualWan
 */
VpnSiteProperties.prototype['virtualWan'] = undefined;






export default VpnSiteProperties;

