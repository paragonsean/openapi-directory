/**
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2018-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork from './HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork';
import ProvisioningState from './ProvisioningState';
import VpnConnection from './VpnConnection';
import VpnGatewayPropertiesBgpSettings from './VpnGatewayPropertiesBgpSettings';

/**
 * The VpnGatewayProperties model module.
 * @module model/VpnGatewayProperties
 * @version 2018-08-01
 */
class VpnGatewayProperties {
    /**
     * Constructs a new <code>VpnGatewayProperties</code>.
     * Parameters for VpnGateway
     * @alias module:model/VpnGatewayProperties
     */
    constructor() { 
        
        VpnGatewayProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VpnGatewayProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VpnGatewayProperties} obj Optional instance to populate.
     * @return {module:model/VpnGatewayProperties} The populated <code>VpnGatewayProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VpnGatewayProperties();

            if (data.hasOwnProperty('bgpSettings')) {
                obj['bgpSettings'] = VpnGatewayPropertiesBgpSettings.constructFromObject(data['bgpSettings']);
            }
            if (data.hasOwnProperty('connections')) {
                obj['connections'] = ApiClient.convertToType(data['connections'], [VpnConnection]);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ProvisioningState.constructFromObject(data['provisioningState']);
            }
            if (data.hasOwnProperty('virtualHub')) {
                obj['virtualHub'] = HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork.constructFromObject(data['virtualHub']);
            }
            if (data.hasOwnProperty('vpnGatewayScaleUnit')) {
                obj['vpnGatewayScaleUnit'] = ApiClient.convertToType(data['vpnGatewayScaleUnit'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VpnGatewayProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VpnGatewayProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bgpSettings`
        if (data['bgpSettings']) { // data not null
          VpnGatewayPropertiesBgpSettings.validateJSON(data['bgpSettings']);
        }
        if (data['connections']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['connections'])) {
                throw new Error("Expected the field `connections` to be an array in the JSON data but got " + data['connections']);
            }
            // validate the optional field `connections` (array)
            for (const item of data['connections']) {
                VpnConnection.validateJSON(item);
            };
        }
        // validate the optional field `virtualHub`
        if (data['virtualHub']) { // data not null
          HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork.validateJSON(data['virtualHub']);
        }

        return true;
    }


}



/**
 * @member {module:model/VpnGatewayPropertiesBgpSettings} bgpSettings
 */
VpnGatewayProperties.prototype['bgpSettings'] = undefined;

/**
 * list of all vpn connections to the gateway.
 * @member {Array.<module:model/VpnConnection>} connections
 */
VpnGatewayProperties.prototype['connections'] = undefined;

/**
 * @member {module:model/ProvisioningState} provisioningState
 */
VpnGatewayProperties.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork} virtualHub
 */
VpnGatewayProperties.prototype['virtualHub'] = undefined;

/**
 * The scale unit for this vpn gateway.
 * @member {Number} vpnGatewayScaleUnit
 */
VpnGatewayProperties.prototype['vpnGatewayScaleUnit'] = undefined;






export default VpnGatewayProperties;

