/**
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VpnLinkBgpSettings from './VpnLinkBgpSettings';
import VpnLinkProviderProperties from './VpnLinkProviderProperties';

/**
 * The VpnSiteLinkProperties model module.
 * @module model/VpnSiteLinkProperties
 * @version 2019-07-01
 */
class VpnSiteLinkProperties {
    /**
     * Constructs a new <code>VpnSiteLinkProperties</code>.
     * Parameters for VpnSite.
     * @alias module:model/VpnSiteLinkProperties
     */
    constructor() { 
        
        VpnSiteLinkProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VpnSiteLinkProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VpnSiteLinkProperties} obj Optional instance to populate.
     * @return {module:model/VpnSiteLinkProperties} The populated <code>VpnSiteLinkProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VpnSiteLinkProperties();

            if (data.hasOwnProperty('bgpProperties')) {
                obj['bgpProperties'] = VpnLinkBgpSettings.constructFromObject(data['bgpProperties']);
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('linkProperties')) {
                obj['linkProperties'] = VpnLinkProviderProperties.constructFromObject(data['linkProperties']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VpnSiteLinkProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VpnSiteLinkProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bgpProperties`
        if (data['bgpProperties']) { // data not null
          VpnLinkBgpSettings.validateJSON(data['bgpProperties']);
        }
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // validate the optional field `linkProperties`
        if (data['linkProperties']) { // data not null
          VpnLinkProviderProperties.validateJSON(data['linkProperties']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}



/**
 * @member {module:model/VpnLinkBgpSettings} bgpProperties
 */
VpnSiteLinkProperties.prototype['bgpProperties'] = undefined;

/**
 * The ip-address for the vpn-site-link.
 * @member {String} ipAddress
 */
VpnSiteLinkProperties.prototype['ipAddress'] = undefined;

/**
 * @member {module:model/VpnLinkProviderProperties} linkProperties
 */
VpnSiteLinkProperties.prototype['linkProperties'] = undefined;

/**
 * The current provisioning state.
 * @member {module:model/VpnSiteLinkProperties.ProvisioningStateEnum} provisioningState
 */
VpnSiteLinkProperties.prototype['provisioningState'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
VpnSiteLinkProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed"
};



export default VpnSiteLinkProperties;

