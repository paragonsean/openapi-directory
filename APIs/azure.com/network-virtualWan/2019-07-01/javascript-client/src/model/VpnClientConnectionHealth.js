/**
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VpnClientConnectionHealth model module.
 * @module model/VpnClientConnectionHealth
 * @version 2019-07-01
 */
class VpnClientConnectionHealth {
    /**
     * Constructs a new <code>VpnClientConnectionHealth</code>.
     * VpnClientConnectionHealth properties.
     * @alias module:model/VpnClientConnectionHealth
     */
    constructor() { 
        
        VpnClientConnectionHealth.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VpnClientConnectionHealth</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VpnClientConnectionHealth} obj Optional instance to populate.
     * @return {module:model/VpnClientConnectionHealth} The populated <code>VpnClientConnectionHealth</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VpnClientConnectionHealth();

            if (data.hasOwnProperty('allocatedIpAddresses')) {
                obj['allocatedIpAddresses'] = ApiClient.convertToType(data['allocatedIpAddresses'], ['String']);
            }
            if (data.hasOwnProperty('totalEgressBytesTransferred')) {
                obj['totalEgressBytesTransferred'] = ApiClient.convertToType(data['totalEgressBytesTransferred'], 'Number');
            }
            if (data.hasOwnProperty('totalIngressBytesTransferred')) {
                obj['totalIngressBytesTransferred'] = ApiClient.convertToType(data['totalIngressBytesTransferred'], 'Number');
            }
            if (data.hasOwnProperty('vpnClientConnectionsCount')) {
                obj['vpnClientConnectionsCount'] = ApiClient.convertToType(data['vpnClientConnectionsCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VpnClientConnectionHealth</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VpnClientConnectionHealth</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allocatedIpAddresses'])) {
            throw new Error("Expected the field `allocatedIpAddresses` to be an array in the JSON data but got " + data['allocatedIpAddresses']);
        }

        return true;
    }


}



/**
 * List of allocated ip addresses to the connected p2s vpn clients.
 * @member {Array.<String>} allocatedIpAddresses
 */
VpnClientConnectionHealth.prototype['allocatedIpAddresses'] = undefined;

/**
 * Total of the Egress Bytes Transferred in this connection.
 * @member {Number} totalEgressBytesTransferred
 */
VpnClientConnectionHealth.prototype['totalEgressBytesTransferred'] = undefined;

/**
 * Total of the Ingress Bytes Transferred in this P2S Vpn connection.
 * @member {Number} totalIngressBytesTransferred
 */
VpnClientConnectionHealth.prototype['totalIngressBytesTransferred'] = undefined;

/**
 * The total of p2s vpn clients connected at this time to this P2SVpnGateway.
 * @member {Number} vpnClientConnectionsCount
 */
VpnClientConnectionHealth.prototype['vpnClientConnectionsCount'] = undefined;






export default VpnClientConnectionHealth;

