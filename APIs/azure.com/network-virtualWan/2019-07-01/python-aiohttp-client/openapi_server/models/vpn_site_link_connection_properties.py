# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hub_virtual_network_connection_properties_remote_virtual_network import HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork
from openapi_server.models.p2_s_vpn_server_configuration_properties_vpn_client_ipsec_policies_inner import P2SVpnServerConfigurationPropertiesVpnClientIpsecPoliciesInner
from openapi_server.models.vpn_connection_status import VpnConnectionStatus
from openapi_server import util


class VpnSiteLinkConnectionProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_bandwidth: int=None, connection_status: VpnConnectionStatus=None, egress_bytes_transferred: int=None, enable_bgp: bool=None, enable_rate_limiting: bool=None, ingress_bytes_transferred: int=None, ipsec_policies: List[P2SVpnServerConfigurationPropertiesVpnClientIpsecPoliciesInner]=None, provisioning_state: str=None, routing_weight: int=None, shared_key: str=None, use_local_azure_ip_address: bool=None, use_policy_based_traffic_selectors: bool=None, vpn_connection_protocol_type: str=None, vpn_site_link: HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork=None):
        """VpnSiteLinkConnectionProperties - a model defined in OpenAPI

        :param connection_bandwidth: The connection_bandwidth of this VpnSiteLinkConnectionProperties.
        :param connection_status: The connection_status of this VpnSiteLinkConnectionProperties.
        :param egress_bytes_transferred: The egress_bytes_transferred of this VpnSiteLinkConnectionProperties.
        :param enable_bgp: The enable_bgp of this VpnSiteLinkConnectionProperties.
        :param enable_rate_limiting: The enable_rate_limiting of this VpnSiteLinkConnectionProperties.
        :param ingress_bytes_transferred: The ingress_bytes_transferred of this VpnSiteLinkConnectionProperties.
        :param ipsec_policies: The ipsec_policies of this VpnSiteLinkConnectionProperties.
        :param provisioning_state: The provisioning_state of this VpnSiteLinkConnectionProperties.
        :param routing_weight: The routing_weight of this VpnSiteLinkConnectionProperties.
        :param shared_key: The shared_key of this VpnSiteLinkConnectionProperties.
        :param use_local_azure_ip_address: The use_local_azure_ip_address of this VpnSiteLinkConnectionProperties.
        :param use_policy_based_traffic_selectors: The use_policy_based_traffic_selectors of this VpnSiteLinkConnectionProperties.
        :param vpn_connection_protocol_type: The vpn_connection_protocol_type of this VpnSiteLinkConnectionProperties.
        :param vpn_site_link: The vpn_site_link of this VpnSiteLinkConnectionProperties.
        """
        self.openapi_types = {
            'connection_bandwidth': int,
            'connection_status': VpnConnectionStatus,
            'egress_bytes_transferred': int,
            'enable_bgp': bool,
            'enable_rate_limiting': bool,
            'ingress_bytes_transferred': int,
            'ipsec_policies': List[P2SVpnServerConfigurationPropertiesVpnClientIpsecPoliciesInner],
            'provisioning_state': str,
            'routing_weight': int,
            'shared_key': str,
            'use_local_azure_ip_address': bool,
            'use_policy_based_traffic_selectors': bool,
            'vpn_connection_protocol_type': str,
            'vpn_site_link': HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork
        }

        self.attribute_map = {
            'connection_bandwidth': 'connectionBandwidth',
            'connection_status': 'connectionStatus',
            'egress_bytes_transferred': 'egressBytesTransferred',
            'enable_bgp': 'enableBgp',
            'enable_rate_limiting': 'enableRateLimiting',
            'ingress_bytes_transferred': 'ingressBytesTransferred',
            'ipsec_policies': 'ipsecPolicies',
            'provisioning_state': 'provisioningState',
            'routing_weight': 'routingWeight',
            'shared_key': 'sharedKey',
            'use_local_azure_ip_address': 'useLocalAzureIpAddress',
            'use_policy_based_traffic_selectors': 'usePolicyBasedTrafficSelectors',
            'vpn_connection_protocol_type': 'vpnConnectionProtocolType',
            'vpn_site_link': 'vpnSiteLink'
        }

        self._connection_bandwidth = connection_bandwidth
        self._connection_status = connection_status
        self._egress_bytes_transferred = egress_bytes_transferred
        self._enable_bgp = enable_bgp
        self._enable_rate_limiting = enable_rate_limiting
        self._ingress_bytes_transferred = ingress_bytes_transferred
        self._ipsec_policies = ipsec_policies
        self._provisioning_state = provisioning_state
        self._routing_weight = routing_weight
        self._shared_key = shared_key
        self._use_local_azure_ip_address = use_local_azure_ip_address
        self._use_policy_based_traffic_selectors = use_policy_based_traffic_selectors
        self._vpn_connection_protocol_type = vpn_connection_protocol_type
        self._vpn_site_link = vpn_site_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VpnSiteLinkConnectionProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VpnSiteLinkConnectionProperties of this VpnSiteLinkConnectionProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_bandwidth(self):
        """Gets the connection_bandwidth of this VpnSiteLinkConnectionProperties.

        Expected bandwidth in MBPS.

        :return: The connection_bandwidth of this VpnSiteLinkConnectionProperties.
        :rtype: int
        """
        return self._connection_bandwidth

    @connection_bandwidth.setter
    def connection_bandwidth(self, connection_bandwidth):
        """Sets the connection_bandwidth of this VpnSiteLinkConnectionProperties.

        Expected bandwidth in MBPS.

        :param connection_bandwidth: The connection_bandwidth of this VpnSiteLinkConnectionProperties.
        :type connection_bandwidth: int
        """

        self._connection_bandwidth = connection_bandwidth

    @property
    def connection_status(self):
        """Gets the connection_status of this VpnSiteLinkConnectionProperties.


        :return: The connection_status of this VpnSiteLinkConnectionProperties.
        :rtype: VpnConnectionStatus
        """
        return self._connection_status

    @connection_status.setter
    def connection_status(self, connection_status):
        """Sets the connection_status of this VpnSiteLinkConnectionProperties.


        :param connection_status: The connection_status of this VpnSiteLinkConnectionProperties.
        :type connection_status: VpnConnectionStatus
        """

        self._connection_status = connection_status

    @property
    def egress_bytes_transferred(self):
        """Gets the egress_bytes_transferred of this VpnSiteLinkConnectionProperties.

        Egress bytes transferred.

        :return: The egress_bytes_transferred of this VpnSiteLinkConnectionProperties.
        :rtype: int
        """
        return self._egress_bytes_transferred

    @egress_bytes_transferred.setter
    def egress_bytes_transferred(self, egress_bytes_transferred):
        """Sets the egress_bytes_transferred of this VpnSiteLinkConnectionProperties.

        Egress bytes transferred.

        :param egress_bytes_transferred: The egress_bytes_transferred of this VpnSiteLinkConnectionProperties.
        :type egress_bytes_transferred: int
        """

        self._egress_bytes_transferred = egress_bytes_transferred

    @property
    def enable_bgp(self):
        """Gets the enable_bgp of this VpnSiteLinkConnectionProperties.

        EnableBgp flag.

        :return: The enable_bgp of this VpnSiteLinkConnectionProperties.
        :rtype: bool
        """
        return self._enable_bgp

    @enable_bgp.setter
    def enable_bgp(self, enable_bgp):
        """Sets the enable_bgp of this VpnSiteLinkConnectionProperties.

        EnableBgp flag.

        :param enable_bgp: The enable_bgp of this VpnSiteLinkConnectionProperties.
        :type enable_bgp: bool
        """

        self._enable_bgp = enable_bgp

    @property
    def enable_rate_limiting(self):
        """Gets the enable_rate_limiting of this VpnSiteLinkConnectionProperties.

        EnableBgp flag.

        :return: The enable_rate_limiting of this VpnSiteLinkConnectionProperties.
        :rtype: bool
        """
        return self._enable_rate_limiting

    @enable_rate_limiting.setter
    def enable_rate_limiting(self, enable_rate_limiting):
        """Sets the enable_rate_limiting of this VpnSiteLinkConnectionProperties.

        EnableBgp flag.

        :param enable_rate_limiting: The enable_rate_limiting of this VpnSiteLinkConnectionProperties.
        :type enable_rate_limiting: bool
        """

        self._enable_rate_limiting = enable_rate_limiting

    @property
    def ingress_bytes_transferred(self):
        """Gets the ingress_bytes_transferred of this VpnSiteLinkConnectionProperties.

        Ingress bytes transferred.

        :return: The ingress_bytes_transferred of this VpnSiteLinkConnectionProperties.
        :rtype: int
        """
        return self._ingress_bytes_transferred

    @ingress_bytes_transferred.setter
    def ingress_bytes_transferred(self, ingress_bytes_transferred):
        """Sets the ingress_bytes_transferred of this VpnSiteLinkConnectionProperties.

        Ingress bytes transferred.

        :param ingress_bytes_transferred: The ingress_bytes_transferred of this VpnSiteLinkConnectionProperties.
        :type ingress_bytes_transferred: int
        """

        self._ingress_bytes_transferred = ingress_bytes_transferred

    @property
    def ipsec_policies(self):
        """Gets the ipsec_policies of this VpnSiteLinkConnectionProperties.

        The IPSec Policies to be considered by this connection.

        :return: The ipsec_policies of this VpnSiteLinkConnectionProperties.
        :rtype: List[P2SVpnServerConfigurationPropertiesVpnClientIpsecPoliciesInner]
        """
        return self._ipsec_policies

    @ipsec_policies.setter
    def ipsec_policies(self, ipsec_policies):
        """Sets the ipsec_policies of this VpnSiteLinkConnectionProperties.

        The IPSec Policies to be considered by this connection.

        :param ipsec_policies: The ipsec_policies of this VpnSiteLinkConnectionProperties.
        :type ipsec_policies: List[P2SVpnServerConfigurationPropertiesVpnClientIpsecPoliciesInner]
        """

        self._ipsec_policies = ipsec_policies

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this VpnSiteLinkConnectionProperties.

        The current provisioning state.

        :return: The provisioning_state of this VpnSiteLinkConnectionProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this VpnSiteLinkConnectionProperties.

        The current provisioning state.

        :param provisioning_state: The provisioning_state of this VpnSiteLinkConnectionProperties.
        :type provisioning_state: str
        """
        allowed_values = ["Succeeded", "Updating", "Deleting", "Failed"]  # noqa: E501
        if provisioning_state not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_state` ({0}), must be one of {1}"
                .format(provisioning_state, allowed_values)
            )

        self._provisioning_state = provisioning_state

    @property
    def routing_weight(self):
        """Gets the routing_weight of this VpnSiteLinkConnectionProperties.

        Routing weight for vpn connection.

        :return: The routing_weight of this VpnSiteLinkConnectionProperties.
        :rtype: int
        """
        return self._routing_weight

    @routing_weight.setter
    def routing_weight(self, routing_weight):
        """Sets the routing_weight of this VpnSiteLinkConnectionProperties.

        Routing weight for vpn connection.

        :param routing_weight: The routing_weight of this VpnSiteLinkConnectionProperties.
        :type routing_weight: int
        """

        self._routing_weight = routing_weight

    @property
    def shared_key(self):
        """Gets the shared_key of this VpnSiteLinkConnectionProperties.

        SharedKey for the vpn connection.

        :return: The shared_key of this VpnSiteLinkConnectionProperties.
        :rtype: str
        """
        return self._shared_key

    @shared_key.setter
    def shared_key(self, shared_key):
        """Sets the shared_key of this VpnSiteLinkConnectionProperties.

        SharedKey for the vpn connection.

        :param shared_key: The shared_key of this VpnSiteLinkConnectionProperties.
        :type shared_key: str
        """

        self._shared_key = shared_key

    @property
    def use_local_azure_ip_address(self):
        """Gets the use_local_azure_ip_address of this VpnSiteLinkConnectionProperties.

        Use local azure ip to initiate connection.

        :return: The use_local_azure_ip_address of this VpnSiteLinkConnectionProperties.
        :rtype: bool
        """
        return self._use_local_azure_ip_address

    @use_local_azure_ip_address.setter
    def use_local_azure_ip_address(self, use_local_azure_ip_address):
        """Sets the use_local_azure_ip_address of this VpnSiteLinkConnectionProperties.

        Use local azure ip to initiate connection.

        :param use_local_azure_ip_address: The use_local_azure_ip_address of this VpnSiteLinkConnectionProperties.
        :type use_local_azure_ip_address: bool
        """

        self._use_local_azure_ip_address = use_local_azure_ip_address

    @property
    def use_policy_based_traffic_selectors(self):
        """Gets the use_policy_based_traffic_selectors of this VpnSiteLinkConnectionProperties.

        Enable policy-based traffic selectors.

        :return: The use_policy_based_traffic_selectors of this VpnSiteLinkConnectionProperties.
        :rtype: bool
        """
        return self._use_policy_based_traffic_selectors

    @use_policy_based_traffic_selectors.setter
    def use_policy_based_traffic_selectors(self, use_policy_based_traffic_selectors):
        """Sets the use_policy_based_traffic_selectors of this VpnSiteLinkConnectionProperties.

        Enable policy-based traffic selectors.

        :param use_policy_based_traffic_selectors: The use_policy_based_traffic_selectors of this VpnSiteLinkConnectionProperties.
        :type use_policy_based_traffic_selectors: bool
        """

        self._use_policy_based_traffic_selectors = use_policy_based_traffic_selectors

    @property
    def vpn_connection_protocol_type(self):
        """Gets the vpn_connection_protocol_type of this VpnSiteLinkConnectionProperties.

        Gateway connection protocol.

        :return: The vpn_connection_protocol_type of this VpnSiteLinkConnectionProperties.
        :rtype: str
        """
        return self._vpn_connection_protocol_type

    @vpn_connection_protocol_type.setter
    def vpn_connection_protocol_type(self, vpn_connection_protocol_type):
        """Sets the vpn_connection_protocol_type of this VpnSiteLinkConnectionProperties.

        Gateway connection protocol.

        :param vpn_connection_protocol_type: The vpn_connection_protocol_type of this VpnSiteLinkConnectionProperties.
        :type vpn_connection_protocol_type: str
        """
        allowed_values = ["IKEv2", "IKEv1"]  # noqa: E501
        if vpn_connection_protocol_type not in allowed_values:
            raise ValueError(
                "Invalid value for `vpn_connection_protocol_type` ({0}), must be one of {1}"
                .format(vpn_connection_protocol_type, allowed_values)
            )

        self._vpn_connection_protocol_type = vpn_connection_protocol_type

    @property
    def vpn_site_link(self):
        """Gets the vpn_site_link of this VpnSiteLinkConnectionProperties.


        :return: The vpn_site_link of this VpnSiteLinkConnectionProperties.
        :rtype: HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork
        """
        return self._vpn_site_link

    @vpn_site_link.setter
    def vpn_site_link(self, vpn_site_link):
        """Sets the vpn_site_link of this VpnSiteLinkConnectionProperties.


        :param vpn_site_link: The vpn_site_link of this VpnSiteLinkConnectionProperties.
        :type vpn_site_link: HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork
        """

        self._vpn_site_link = vpn_site_link
