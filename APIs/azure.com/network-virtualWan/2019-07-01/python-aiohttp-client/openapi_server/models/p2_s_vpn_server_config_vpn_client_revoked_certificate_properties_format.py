# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provisioning_state: str=None, thumbprint: str=None):
        """P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat - a model defined in OpenAPI

        :param provisioning_state: The provisioning_state of this P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat.
        :param thumbprint: The thumbprint of this P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat.
        """
        self.openapi_types = {
            'provisioning_state': str,
            'thumbprint': str
        }

        self.attribute_map = {
            'provisioning_state': 'provisioningState',
            'thumbprint': 'thumbprint'
        }

        self._provisioning_state = provisioning_state
        self._thumbprint = thumbprint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat of this P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat.

        The current provisioning state.

        :return: The provisioning_state of this P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat.

        The current provisioning state.

        :param provisioning_state: The provisioning_state of this P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat.
        :type provisioning_state: str
        """
        allowed_values = ["Succeeded", "Updating", "Deleting", "Failed"]  # noqa: E501
        if provisioning_state not in allowed_values:
            raise ValueError(
                "Invalid value for `provisioning_state` ({0}), must be one of {1}"
                .format(provisioning_state, allowed_values)
            )

        self._provisioning_state = provisioning_state

    @property
    def thumbprint(self):
        """Gets the thumbprint of this P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat.

        The revoked VPN client certificate thumbprint.

        :return: The thumbprint of this P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat.
        :rtype: str
        """
        return self._thumbprint

    @thumbprint.setter
    def thumbprint(self, thumbprint):
        """Sets the thumbprint of this P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat.

        The revoked VPN client certificate thumbprint.

        :param thumbprint: The thumbprint of this P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat.
        :type thumbprint: str
        """

        self._thumbprint = thumbprint
