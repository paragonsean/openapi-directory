/**
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2019-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HubVirtualNetworkConnection from './HubVirtualNetworkConnection';
import HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork from './HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork';
import VirtualHubRouteTable from './VirtualHubRouteTable';

/**
 * The VirtualHubProperties model module.
 * @module model/VirtualHubProperties
 * @version 2019-04-01
 */
class VirtualHubProperties {
    /**
     * Constructs a new <code>VirtualHubProperties</code>.
     * Parameters for VirtualHub.
     * @alias module:model/VirtualHubProperties
     */
    constructor() { 
        
        VirtualHubProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VirtualHubProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VirtualHubProperties} obj Optional instance to populate.
     * @return {module:model/VirtualHubProperties} The populated <code>VirtualHubProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VirtualHubProperties();

            if (data.hasOwnProperty('addressPrefix')) {
                obj['addressPrefix'] = ApiClient.convertToType(data['addressPrefix'], 'String');
            }
            if (data.hasOwnProperty('expressRouteGateway')) {
                obj['expressRouteGateway'] = HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork.constructFromObject(data['expressRouteGateway']);
            }
            if (data.hasOwnProperty('p2SVpnGateway')) {
                obj['p2SVpnGateway'] = HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork.constructFromObject(data['p2SVpnGateway']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('routeTable')) {
                obj['routeTable'] = VirtualHubRouteTable.constructFromObject(data['routeTable']);
            }
            if (data.hasOwnProperty('virtualNetworkConnections')) {
                obj['virtualNetworkConnections'] = ApiClient.convertToType(data['virtualNetworkConnections'], [HubVirtualNetworkConnection]);
            }
            if (data.hasOwnProperty('virtualWan')) {
                obj['virtualWan'] = HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork.constructFromObject(data['virtualWan']);
            }
            if (data.hasOwnProperty('vpnGateway')) {
                obj['vpnGateway'] = HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork.constructFromObject(data['vpnGateway']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VirtualHubProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VirtualHubProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['addressPrefix'] && !(typeof data['addressPrefix'] === 'string' || data['addressPrefix'] instanceof String)) {
            throw new Error("Expected the field `addressPrefix` to be a primitive type in the JSON string but got " + data['addressPrefix']);
        }
        // validate the optional field `expressRouteGateway`
        if (data['expressRouteGateway']) { // data not null
          HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork.validateJSON(data['expressRouteGateway']);
        }
        // validate the optional field `p2SVpnGateway`
        if (data['p2SVpnGateway']) { // data not null
          HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork.validateJSON(data['p2SVpnGateway']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `routeTable`
        if (data['routeTable']) { // data not null
          VirtualHubRouteTable.validateJSON(data['routeTable']);
        }
        if (data['virtualNetworkConnections']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['virtualNetworkConnections'])) {
                throw new Error("Expected the field `virtualNetworkConnections` to be an array in the JSON data but got " + data['virtualNetworkConnections']);
            }
            // validate the optional field `virtualNetworkConnections` (array)
            for (const item of data['virtualNetworkConnections']) {
                HubVirtualNetworkConnection.validateJSON(item);
            };
        }
        // validate the optional field `virtualWan`
        if (data['virtualWan']) { // data not null
          HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork.validateJSON(data['virtualWan']);
        }
        // validate the optional field `vpnGateway`
        if (data['vpnGateway']) { // data not null
          HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork.validateJSON(data['vpnGateway']);
        }

        return true;
    }


}



/**
 * Address-prefix for this VirtualHub.
 * @member {String} addressPrefix
 */
VirtualHubProperties.prototype['addressPrefix'] = undefined;

/**
 * @member {module:model/HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork} expressRouteGateway
 */
VirtualHubProperties.prototype['expressRouteGateway'] = undefined;

/**
 * @member {module:model/HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork} p2SVpnGateway
 */
VirtualHubProperties.prototype['p2SVpnGateway'] = undefined;

/**
 * The current provisioning state.
 * @member {module:model/VirtualHubProperties.ProvisioningStateEnum} provisioningState
 */
VirtualHubProperties.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/VirtualHubRouteTable} routeTable
 */
VirtualHubProperties.prototype['routeTable'] = undefined;

/**
 * List of all vnet connections with this VirtualHub.
 * @member {Array.<module:model/HubVirtualNetworkConnection>} virtualNetworkConnections
 */
VirtualHubProperties.prototype['virtualNetworkConnections'] = undefined;

/**
 * @member {module:model/HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork} virtualWan
 */
VirtualHubProperties.prototype['virtualWan'] = undefined;

/**
 * @member {module:model/HubVirtualNetworkConnectionPropertiesRemoteVirtualNetwork} vpnGateway
 */
VirtualHubProperties.prototype['vpnGateway'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
VirtualHubProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed"
};



export default VirtualHubProperties;

