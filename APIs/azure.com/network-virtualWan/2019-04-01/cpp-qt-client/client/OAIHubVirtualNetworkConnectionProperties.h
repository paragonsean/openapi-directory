/**
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHubVirtualNetworkConnectionProperties.h
 *
 * Parameters for HubVirtualNetworkConnection.
 */

#ifndef OAIHubVirtualNetworkConnectionProperties_H
#define OAIHubVirtualNetworkConnectionProperties_H

#include <QJsonObject>

#include "OAIHubVirtualNetworkConnectionProperties_remoteVirtualNetwork.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHubVirtualNetworkConnectionProperties_remoteVirtualNetwork;

class OAIHubVirtualNetworkConnectionProperties : public OAIObject {
public:
    OAIHubVirtualNetworkConnectionProperties();
    OAIHubVirtualNetworkConnectionProperties(QString json);
    ~OAIHubVirtualNetworkConnectionProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowHubToRemoteVnetTransit() const;
    void setAllowHubToRemoteVnetTransit(const bool &allow_hub_to_remote_vnet_transit);
    bool is_allow_hub_to_remote_vnet_transit_Set() const;
    bool is_allow_hub_to_remote_vnet_transit_Valid() const;

    bool isAllowRemoteVnetToUseHubVnetGateways() const;
    void setAllowRemoteVnetToUseHubVnetGateways(const bool &allow_remote_vnet_to_use_hub_vnet_gateways);
    bool is_allow_remote_vnet_to_use_hub_vnet_gateways_Set() const;
    bool is_allow_remote_vnet_to_use_hub_vnet_gateways_Valid() const;

    bool isEnableInternetSecurity() const;
    void setEnableInternetSecurity(const bool &enable_internet_security);
    bool is_enable_internet_security_Set() const;
    bool is_enable_internet_security_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIHubVirtualNetworkConnectionProperties_remoteVirtualNetwork getRemoteVirtualNetwork() const;
    void setRemoteVirtualNetwork(const OAIHubVirtualNetworkConnectionProperties_remoteVirtualNetwork &remote_virtual_network);
    bool is_remote_virtual_network_Set() const;
    bool is_remote_virtual_network_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_hub_to_remote_vnet_transit;
    bool m_allow_hub_to_remote_vnet_transit_isSet;
    bool m_allow_hub_to_remote_vnet_transit_isValid;

    bool m_allow_remote_vnet_to_use_hub_vnet_gateways;
    bool m_allow_remote_vnet_to_use_hub_vnet_gateways_isSet;
    bool m_allow_remote_vnet_to_use_hub_vnet_gateways_isValid;

    bool m_enable_internet_security;
    bool m_enable_internet_security_isSet;
    bool m_enable_internet_security_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIHubVirtualNetworkConnectionProperties_remoteVirtualNetwork m_remote_virtual_network;
    bool m_remote_virtual_network_isSet;
    bool m_remote_virtual_network_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHubVirtualNetworkConnectionProperties)

#endif // OAIHubVirtualNetworkConnectionProperties_H
