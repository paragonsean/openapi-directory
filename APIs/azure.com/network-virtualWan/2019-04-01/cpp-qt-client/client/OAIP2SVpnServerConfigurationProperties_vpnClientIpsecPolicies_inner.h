/**
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIP2SVpnServerConfigurationProperties_vpnClientIpsecPolicies_inner.h
 *
 * An IPSec Policy configuration for a virtual network gateway connection.
 */

#ifndef OAIP2SVpnServerConfigurationProperties_vpnClientIpsecPolicies_inner_H
#define OAIP2SVpnServerConfigurationProperties_vpnClientIpsecPolicies_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIP2SVpnServerConfigurationProperties_vpnClientIpsecPolicies_inner : public OAIObject {
public:
    OAIP2SVpnServerConfigurationProperties_vpnClientIpsecPolicies_inner();
    OAIP2SVpnServerConfigurationProperties_vpnClientIpsecPolicies_inner(QString json);
    ~OAIP2SVpnServerConfigurationProperties_vpnClientIpsecPolicies_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDhGroup() const;
    void setDhGroup(const QString &dh_group);
    bool is_dh_group_Set() const;
    bool is_dh_group_Valid() const;

    QString getIkeEncryption() const;
    void setIkeEncryption(const QString &ike_encryption);
    bool is_ike_encryption_Set() const;
    bool is_ike_encryption_Valid() const;

    QString getIkeIntegrity() const;
    void setIkeIntegrity(const QString &ike_integrity);
    bool is_ike_integrity_Set() const;
    bool is_ike_integrity_Valid() const;

    QString getIpsecEncryption() const;
    void setIpsecEncryption(const QString &ipsec_encryption);
    bool is_ipsec_encryption_Set() const;
    bool is_ipsec_encryption_Valid() const;

    QString getIpsecIntegrity() const;
    void setIpsecIntegrity(const QString &ipsec_integrity);
    bool is_ipsec_integrity_Set() const;
    bool is_ipsec_integrity_Valid() const;

    QString getPfsGroup() const;
    void setPfsGroup(const QString &pfs_group);
    bool is_pfs_group_Set() const;
    bool is_pfs_group_Valid() const;

    qint32 getSaDataSizeKilobytes() const;
    void setSaDataSizeKilobytes(const qint32 &sa_data_size_kilobytes);
    bool is_sa_data_size_kilobytes_Set() const;
    bool is_sa_data_size_kilobytes_Valid() const;

    qint32 getSaLifeTimeSeconds() const;
    void setSaLifeTimeSeconds(const qint32 &sa_life_time_seconds);
    bool is_sa_life_time_seconds_Set() const;
    bool is_sa_life_time_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dh_group;
    bool m_dh_group_isSet;
    bool m_dh_group_isValid;

    QString m_ike_encryption;
    bool m_ike_encryption_isSet;
    bool m_ike_encryption_isValid;

    QString m_ike_integrity;
    bool m_ike_integrity_isSet;
    bool m_ike_integrity_isValid;

    QString m_ipsec_encryption;
    bool m_ipsec_encryption_isSet;
    bool m_ipsec_encryption_isValid;

    QString m_ipsec_integrity;
    bool m_ipsec_integrity_isSet;
    bool m_ipsec_integrity_isValid;

    QString m_pfs_group;
    bool m_pfs_group_isSet;
    bool m_pfs_group_isValid;

    qint32 m_sa_data_size_kilobytes;
    bool m_sa_data_size_kilobytes_isSet;
    bool m_sa_data_size_kilobytes_isValid;

    qint32 m_sa_life_time_seconds;
    bool m_sa_life_time_seconds_isSet;
    bool m_sa_life_time_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIP2SVpnServerConfigurationProperties_vpnClientIpsecPolicies_inner)

#endif // OAIP2SVpnServerConfigurationProperties_vpnClientIpsecPolicies_inner_H
