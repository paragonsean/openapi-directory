/*
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetVpnSitesConfigurationRequestVpnSitesInner;
import org.openapitools.client.model.HubVirtualNetworkConnection;
import org.openapitools.client.model.ProvisioningState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Parameters for VirtualHub
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:59:42.718497-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VirtualHubProperties {
  public static final String SERIALIZED_NAME_ADDRESS_PREFIX = "addressPrefix";
  @SerializedName(SERIALIZED_NAME_ADDRESS_PREFIX)
  private String addressPrefix;

  public static final String SERIALIZED_NAME_HUB_VIRTUAL_NETWORK_CONNECTIONS = "hubVirtualNetworkConnections";
  @SerializedName(SERIALIZED_NAME_HUB_VIRTUAL_NETWORK_CONNECTIONS)
  private List<HubVirtualNetworkConnection> hubVirtualNetworkConnections = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private ProvisioningState provisioningState;

  public static final String SERIALIZED_NAME_VIRTUAL_WAN = "virtualWan";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_WAN)
  private GetVpnSitesConfigurationRequestVpnSitesInner virtualWan;

  public VirtualHubProperties() {
  }

  public VirtualHubProperties addressPrefix(String addressPrefix) {
    this.addressPrefix = addressPrefix;
    return this;
  }

  /**
   * Address-prefix for this VirtualHub.
   * @return addressPrefix
   */
  @javax.annotation.Nullable
  public String getAddressPrefix() {
    return addressPrefix;
  }

  public void setAddressPrefix(String addressPrefix) {
    this.addressPrefix = addressPrefix;
  }


  public VirtualHubProperties hubVirtualNetworkConnections(List<HubVirtualNetworkConnection> hubVirtualNetworkConnections) {
    this.hubVirtualNetworkConnections = hubVirtualNetworkConnections;
    return this;
  }

  public VirtualHubProperties addHubVirtualNetworkConnectionsItem(HubVirtualNetworkConnection hubVirtualNetworkConnectionsItem) {
    if (this.hubVirtualNetworkConnections == null) {
      this.hubVirtualNetworkConnections = new ArrayList<>();
    }
    this.hubVirtualNetworkConnections.add(hubVirtualNetworkConnectionsItem);
    return this;
  }

  /**
   * list of all vnet connections with this VirtualHub.
   * @return hubVirtualNetworkConnections
   */
  @javax.annotation.Nullable
  public List<HubVirtualNetworkConnection> getHubVirtualNetworkConnections() {
    return hubVirtualNetworkConnections;
  }

  public void setHubVirtualNetworkConnections(List<HubVirtualNetworkConnection> hubVirtualNetworkConnections) {
    this.hubVirtualNetworkConnections = hubVirtualNetworkConnections;
  }


  public VirtualHubProperties provisioningState(ProvisioningState provisioningState) {
    this.provisioningState = provisioningState;
    return this;
  }

  /**
   * Get provisioningState
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public ProvisioningState getProvisioningState() {
    return provisioningState;
  }

  public void setProvisioningState(ProvisioningState provisioningState) {
    this.provisioningState = provisioningState;
  }


  public VirtualHubProperties virtualWan(GetVpnSitesConfigurationRequestVpnSitesInner virtualWan) {
    this.virtualWan = virtualWan;
    return this;
  }

  /**
   * Get virtualWan
   * @return virtualWan
   */
  @javax.annotation.Nullable
  public GetVpnSitesConfigurationRequestVpnSitesInner getVirtualWan() {
    return virtualWan;
  }

  public void setVirtualWan(GetVpnSitesConfigurationRequestVpnSitesInner virtualWan) {
    this.virtualWan = virtualWan;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualHubProperties virtualHubProperties = (VirtualHubProperties) o;
    return Objects.equals(this.addressPrefix, virtualHubProperties.addressPrefix) &&
        Objects.equals(this.hubVirtualNetworkConnections, virtualHubProperties.hubVirtualNetworkConnections) &&
        Objects.equals(this.provisioningState, virtualHubProperties.provisioningState) &&
        Objects.equals(this.virtualWan, virtualHubProperties.virtualWan);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressPrefix, hubVirtualNetworkConnections, provisioningState, virtualWan);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualHubProperties {\n");
    sb.append("    addressPrefix: ").append(toIndentedString(addressPrefix)).append("\n");
    sb.append("    hubVirtualNetworkConnections: ").append(toIndentedString(hubVirtualNetworkConnections)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    virtualWan: ").append(toIndentedString(virtualWan)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addressPrefix");
    openapiFields.add("hubVirtualNetworkConnections");
    openapiFields.add("provisioningState");
    openapiFields.add("virtualWan");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VirtualHubProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VirtualHubProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VirtualHubProperties is not found in the empty JSON string", VirtualHubProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VirtualHubProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VirtualHubProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("addressPrefix") != null && !jsonObj.get("addressPrefix").isJsonNull()) && !jsonObj.get("addressPrefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressPrefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressPrefix").toString()));
      }
      if (jsonObj.get("hubVirtualNetworkConnections") != null && !jsonObj.get("hubVirtualNetworkConnections").isJsonNull()) {
        JsonArray jsonArrayhubVirtualNetworkConnections = jsonObj.getAsJsonArray("hubVirtualNetworkConnections");
        if (jsonArrayhubVirtualNetworkConnections != null) {
          // ensure the json data is an array
          if (!jsonObj.get("hubVirtualNetworkConnections").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `hubVirtualNetworkConnections` to be an array in the JSON string but got `%s`", jsonObj.get("hubVirtualNetworkConnections").toString()));
          }

          // validate the optional field `hubVirtualNetworkConnections` (array)
          for (int i = 0; i < jsonArrayhubVirtualNetworkConnections.size(); i++) {
            HubVirtualNetworkConnection.validateJsonElement(jsonArrayhubVirtualNetworkConnections.get(i));
          };
        }
      }
      // validate the optional field `provisioningState`
      if (jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) {
        ProvisioningState.validateJsonElement(jsonObj.get("provisioningState"));
      }
      // validate the optional field `virtualWan`
      if (jsonObj.get("virtualWan") != null && !jsonObj.get("virtualWan").isJsonNull()) {
        GetVpnSitesConfigurationRequestVpnSitesInner.validateJsonElement(jsonObj.get("virtualWan"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VirtualHubProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VirtualHubProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VirtualHubProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VirtualHubProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<VirtualHubProperties>() {
           @Override
           public void write(JsonWriter out, VirtualHubProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VirtualHubProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VirtualHubProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VirtualHubProperties
   * @throws IOException if the JSON string is invalid with respect to VirtualHubProperties
   */
  public static VirtualHubProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VirtualHubProperties.class);
  }

  /**
   * Convert an instance of VirtualHubProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

