# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_vpn_sites_configuration_request_vpn_sites_inner import GetVpnSitesConfigurationRequestVpnSitesInner
from openapi_server.models.provisioning_state import ProvisioningState
from openapi_server import util


class VirtualWanProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_vpn_encryption: bool=None, provisioning_state: ProvisioningState=None, virtual_hubs: List[GetVpnSitesConfigurationRequestVpnSitesInner]=None, vpn_sites: List[GetVpnSitesConfigurationRequestVpnSitesInner]=None):
        """VirtualWanProperties - a model defined in OpenAPI

        :param disable_vpn_encryption: The disable_vpn_encryption of this VirtualWanProperties.
        :param provisioning_state: The provisioning_state of this VirtualWanProperties.
        :param virtual_hubs: The virtual_hubs of this VirtualWanProperties.
        :param vpn_sites: The vpn_sites of this VirtualWanProperties.
        """
        self.openapi_types = {
            'disable_vpn_encryption': bool,
            'provisioning_state': ProvisioningState,
            'virtual_hubs': List[GetVpnSitesConfigurationRequestVpnSitesInner],
            'vpn_sites': List[GetVpnSitesConfigurationRequestVpnSitesInner]
        }

        self.attribute_map = {
            'disable_vpn_encryption': 'disableVpnEncryption',
            'provisioning_state': 'provisioningState',
            'virtual_hubs': 'virtualHubs',
            'vpn_sites': 'vpnSites'
        }

        self._disable_vpn_encryption = disable_vpn_encryption
        self._provisioning_state = provisioning_state
        self._virtual_hubs = virtual_hubs
        self._vpn_sites = vpn_sites

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualWanProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualWanProperties of this VirtualWanProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_vpn_encryption(self):
        """Gets the disable_vpn_encryption of this VirtualWanProperties.

        Vpn encryption to be disabled or not.

        :return: The disable_vpn_encryption of this VirtualWanProperties.
        :rtype: bool
        """
        return self._disable_vpn_encryption

    @disable_vpn_encryption.setter
    def disable_vpn_encryption(self, disable_vpn_encryption):
        """Sets the disable_vpn_encryption of this VirtualWanProperties.

        Vpn encryption to be disabled or not.

        :param disable_vpn_encryption: The disable_vpn_encryption of this VirtualWanProperties.
        :type disable_vpn_encryption: bool
        """

        self._disable_vpn_encryption = disable_vpn_encryption

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this VirtualWanProperties.


        :return: The provisioning_state of this VirtualWanProperties.
        :rtype: ProvisioningState
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this VirtualWanProperties.


        :param provisioning_state: The provisioning_state of this VirtualWanProperties.
        :type provisioning_state: ProvisioningState
        """

        self._provisioning_state = provisioning_state

    @property
    def virtual_hubs(self):
        """Gets the virtual_hubs of this VirtualWanProperties.

        List of VirtualHubs in the VirtualWAN.

        :return: The virtual_hubs of this VirtualWanProperties.
        :rtype: List[GetVpnSitesConfigurationRequestVpnSitesInner]
        """
        return self._virtual_hubs

    @virtual_hubs.setter
    def virtual_hubs(self, virtual_hubs):
        """Sets the virtual_hubs of this VirtualWanProperties.

        List of VirtualHubs in the VirtualWAN.

        :param virtual_hubs: The virtual_hubs of this VirtualWanProperties.
        :type virtual_hubs: List[GetVpnSitesConfigurationRequestVpnSitesInner]
        """

        self._virtual_hubs = virtual_hubs

    @property
    def vpn_sites(self):
        """Gets the vpn_sites of this VirtualWanProperties.


        :return: The vpn_sites of this VirtualWanProperties.
        :rtype: List[GetVpnSitesConfigurationRequestVpnSitesInner]
        """
        return self._vpn_sites

    @vpn_sites.setter
    def vpn_sites(self, vpn_sites):
        """Sets the vpn_sites of this VirtualWanProperties.


        :param vpn_sites: The vpn_sites of this VirtualWanProperties.
        :type vpn_sites: List[GetVpnSitesConfigurationRequestVpnSitesInner]
        """

        self._vpn_sites = vpn_sites
