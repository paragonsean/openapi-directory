# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_vpn_sites_configuration_request_vpn_sites_inner import GetVpnSitesConfigurationRequestVpnSitesInner
from openapi_server.models.hub_virtual_network_connection import HubVirtualNetworkConnection
from openapi_server.models.provisioning_state import ProvisioningState
from openapi_server import util


class VirtualHubProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_prefix: str=None, hub_virtual_network_connections: List[HubVirtualNetworkConnection]=None, provisioning_state: ProvisioningState=None, virtual_wan: GetVpnSitesConfigurationRequestVpnSitesInner=None):
        """VirtualHubProperties - a model defined in OpenAPI

        :param address_prefix: The address_prefix of this VirtualHubProperties.
        :param hub_virtual_network_connections: The hub_virtual_network_connections of this VirtualHubProperties.
        :param provisioning_state: The provisioning_state of this VirtualHubProperties.
        :param virtual_wan: The virtual_wan of this VirtualHubProperties.
        """
        self.openapi_types = {
            'address_prefix': str,
            'hub_virtual_network_connections': List[HubVirtualNetworkConnection],
            'provisioning_state': ProvisioningState,
            'virtual_wan': GetVpnSitesConfigurationRequestVpnSitesInner
        }

        self.attribute_map = {
            'address_prefix': 'addressPrefix',
            'hub_virtual_network_connections': 'hubVirtualNetworkConnections',
            'provisioning_state': 'provisioningState',
            'virtual_wan': 'virtualWan'
        }

        self._address_prefix = address_prefix
        self._hub_virtual_network_connections = hub_virtual_network_connections
        self._provisioning_state = provisioning_state
        self._virtual_wan = virtual_wan

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualHubProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualHubProperties of this VirtualHubProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_prefix(self):
        """Gets the address_prefix of this VirtualHubProperties.

        Address-prefix for this VirtualHub.

        :return: The address_prefix of this VirtualHubProperties.
        :rtype: str
        """
        return self._address_prefix

    @address_prefix.setter
    def address_prefix(self, address_prefix):
        """Sets the address_prefix of this VirtualHubProperties.

        Address-prefix for this VirtualHub.

        :param address_prefix: The address_prefix of this VirtualHubProperties.
        :type address_prefix: str
        """

        self._address_prefix = address_prefix

    @property
    def hub_virtual_network_connections(self):
        """Gets the hub_virtual_network_connections of this VirtualHubProperties.

        list of all vnet connections with this VirtualHub.

        :return: The hub_virtual_network_connections of this VirtualHubProperties.
        :rtype: List[HubVirtualNetworkConnection]
        """
        return self._hub_virtual_network_connections

    @hub_virtual_network_connections.setter
    def hub_virtual_network_connections(self, hub_virtual_network_connections):
        """Sets the hub_virtual_network_connections of this VirtualHubProperties.

        list of all vnet connections with this VirtualHub.

        :param hub_virtual_network_connections: The hub_virtual_network_connections of this VirtualHubProperties.
        :type hub_virtual_network_connections: List[HubVirtualNetworkConnection]
        """

        self._hub_virtual_network_connections = hub_virtual_network_connections

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this VirtualHubProperties.


        :return: The provisioning_state of this VirtualHubProperties.
        :rtype: ProvisioningState
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this VirtualHubProperties.


        :param provisioning_state: The provisioning_state of this VirtualHubProperties.
        :type provisioning_state: ProvisioningState
        """

        self._provisioning_state = provisioning_state

    @property
    def virtual_wan(self):
        """Gets the virtual_wan of this VirtualHubProperties.


        :return: The virtual_wan of this VirtualHubProperties.
        :rtype: GetVpnSitesConfigurationRequestVpnSitesInner
        """
        return self._virtual_wan

    @virtual_wan.setter
    def virtual_wan(self, virtual_wan):
        """Sets the virtual_wan of this VirtualHubProperties.


        :param virtual_wan: The virtual_wan of this VirtualHubProperties.
        :type virtual_wan: GetVpnSitesConfigurationRequestVpnSitesInner
        """

        self._virtual_wan = virtual_wan
