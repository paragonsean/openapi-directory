/**
 * VirtualWANAsAServiceManagementClient
 * REST API for Azure VirtualWAN As a Service.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetVpnSitesConfigurationRequestVpnSitesInner from './GetVpnSitesConfigurationRequestVpnSitesInner';
import HubVirtualNetworkConnection from './HubVirtualNetworkConnection';
import ProvisioningState from './ProvisioningState';

/**
 * The VirtualHubProperties model module.
 * @module model/VirtualHubProperties
 * @version 2018-07-01
 */
class VirtualHubProperties {
    /**
     * Constructs a new <code>VirtualHubProperties</code>.
     * Parameters for VirtualHub
     * @alias module:model/VirtualHubProperties
     */
    constructor() { 
        
        VirtualHubProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VirtualHubProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VirtualHubProperties} obj Optional instance to populate.
     * @return {module:model/VirtualHubProperties} The populated <code>VirtualHubProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VirtualHubProperties();

            if (data.hasOwnProperty('addressPrefix')) {
                obj['addressPrefix'] = ApiClient.convertToType(data['addressPrefix'], 'String');
            }
            if (data.hasOwnProperty('hubVirtualNetworkConnections')) {
                obj['hubVirtualNetworkConnections'] = ApiClient.convertToType(data['hubVirtualNetworkConnections'], [HubVirtualNetworkConnection]);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ProvisioningState.constructFromObject(data['provisioningState']);
            }
            if (data.hasOwnProperty('virtualWan')) {
                obj['virtualWan'] = GetVpnSitesConfigurationRequestVpnSitesInner.constructFromObject(data['virtualWan']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VirtualHubProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VirtualHubProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['addressPrefix'] && !(typeof data['addressPrefix'] === 'string' || data['addressPrefix'] instanceof String)) {
            throw new Error("Expected the field `addressPrefix` to be a primitive type in the JSON string but got " + data['addressPrefix']);
        }
        if (data['hubVirtualNetworkConnections']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['hubVirtualNetworkConnections'])) {
                throw new Error("Expected the field `hubVirtualNetworkConnections` to be an array in the JSON data but got " + data['hubVirtualNetworkConnections']);
            }
            // validate the optional field `hubVirtualNetworkConnections` (array)
            for (const item of data['hubVirtualNetworkConnections']) {
                HubVirtualNetworkConnection.validateJSON(item);
            };
        }
        // validate the optional field `virtualWan`
        if (data['virtualWan']) { // data not null
          GetVpnSitesConfigurationRequestVpnSitesInner.validateJSON(data['virtualWan']);
        }

        return true;
    }


}



/**
 * Address-prefix for this VirtualHub.
 * @member {String} addressPrefix
 */
VirtualHubProperties.prototype['addressPrefix'] = undefined;

/**
 * list of all vnet connections with this VirtualHub.
 * @member {Array.<module:model/HubVirtualNetworkConnection>} hubVirtualNetworkConnections
 */
VirtualHubProperties.prototype['hubVirtualNetworkConnections'] = undefined;

/**
 * @member {module:model/ProvisioningState} provisioningState
 */
VirtualHubProperties.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/GetVpnSitesConfigurationRequestVpnSitesInner} virtualWan
 */
VirtualHubProperties.prototype['virtualWan'] = undefined;






export default VirtualHubProperties;

