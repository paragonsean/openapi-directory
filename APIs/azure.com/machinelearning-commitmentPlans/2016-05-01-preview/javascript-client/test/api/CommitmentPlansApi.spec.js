/**
 * Azure ML Commitment Plans Management Client
 * These APIs allow end users to operate on Azure Machine Learning Commitment Plans resources and their child Commitment Association resources. They support CRUD operations for commitment plans, get and list operations for commitment associations, moving commitment associations between commitment plans, and retrieving commitment plan usage history.
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureMlCommitmentPlansManagementClient);
  }
}(this, function(expect, AzureMlCommitmentPlansManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureMlCommitmentPlansManagementClient.CommitmentPlansApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CommitmentPlansApi', function() {
    describe('commitmentPlansCreateOrUpdate', function() {
      it('should call commitmentPlansCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test commitmentPlansCreateOrUpdate
        //instance.commitmentPlansCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('commitmentPlansGet', function() {
      it('should call commitmentPlansGet successfully', function(done) {
        //uncomment below and update the code to test commitmentPlansGet
        //instance.commitmentPlansGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('commitmentPlansList', function() {
      it('should call commitmentPlansList successfully', function(done) {
        //uncomment below and update the code to test commitmentPlansList
        //instance.commitmentPlansList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('commitmentPlansListInResourceGroup', function() {
      it('should call commitmentPlansListInResourceGroup successfully', function(done) {
        //uncomment below and update the code to test commitmentPlansListInResourceGroup
        //instance.commitmentPlansListInResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('commitmentPlansPatch', function() {
      it('should call commitmentPlansPatch successfully', function(done) {
        //uncomment below and update the code to test commitmentPlansPatch
        //instance.commitmentPlansPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('commitmentPlansRemove', function() {
      it('should call commitmentPlansRemove successfully', function(done) {
        //uncomment below and update the code to test commitmentPlansRemove
        //instance.commitmentPlansRemove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usageHistoryList', function() {
      it('should call usageHistoryList successfully', function(done) {
        //uncomment below and update the code to test usageHistoryList
        //instance.usageHistoryList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
