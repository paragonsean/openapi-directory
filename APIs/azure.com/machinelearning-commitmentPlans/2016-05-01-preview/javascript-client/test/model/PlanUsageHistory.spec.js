/**
 * Azure ML Commitment Plans Management Client
 * These APIs allow end users to operate on Azure Machine Learning Commitment Plans resources and their child Commitment Association resources. They support CRUD operations for commitment plans, get and list operations for commitment associations, moving commitment associations between commitment plans, and retrieving commitment plan usage history.
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureMlCommitmentPlansManagementClient);
  }
}(this, function(expect, AzureMlCommitmentPlansManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureMlCommitmentPlansManagementClient.PlanUsageHistory();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PlanUsageHistory', function() {
    it('should create an instance of PlanUsageHistory', function() {
      // uncomment below and update the code to test PlanUsageHistory
      //var instance = new AzureMlCommitmentPlansManagementClient.PlanUsageHistory();
      //expect(instance).to.be.a(AzureMlCommitmentPlansManagementClient.PlanUsageHistory);
    });

    it('should have the property planDeletionOverage (base name: "planDeletionOverage")', function() {
      // uncomment below and update the code to test the property planDeletionOverage
      //var instance = new AzureMlCommitmentPlansManagementClient.PlanUsageHistory();
      //expect(instance).to.be();
    });

    it('should have the property planMigrationOverage (base name: "planMigrationOverage")', function() {
      // uncomment below and update the code to test the property planMigrationOverage
      //var instance = new AzureMlCommitmentPlansManagementClient.PlanUsageHistory();
      //expect(instance).to.be();
    });

    it('should have the property planQuantitiesAfterUsage (base name: "planQuantitiesAfterUsage")', function() {
      // uncomment below and update the code to test the property planQuantitiesAfterUsage
      //var instance = new AzureMlCommitmentPlansManagementClient.PlanUsageHistory();
      //expect(instance).to.be();
    });

    it('should have the property planQuantitiesBeforeUsage (base name: "planQuantitiesBeforeUsage")', function() {
      // uncomment below and update the code to test the property planQuantitiesBeforeUsage
      //var instance = new AzureMlCommitmentPlansManagementClient.PlanUsageHistory();
      //expect(instance).to.be();
    });

    it('should have the property planUsageOverage (base name: "planUsageOverage")', function() {
      // uncomment below and update the code to test the property planUsageOverage
      //var instance = new AzureMlCommitmentPlansManagementClient.PlanUsageHistory();
      //expect(instance).to.be();
    });

    it('should have the property usage (base name: "usage")', function() {
      // uncomment below and update the code to test the property usage
      //var instance = new AzureMlCommitmentPlansManagementClient.PlanUsageHistory();
      //expect(instance).to.be();
    });

    it('should have the property usageDate (base name: "usageDate")', function() {
      // uncomment below and update the code to test the property usageDate
      //var instance = new AzureMlCommitmentPlansManagementClient.PlanUsageHistory();
      //expect(instance).to.be();
    });

  });

}));
