/**
 * Azure ML Commitment Plans Management Client
 * These APIs allow end users to operate on Azure Machine Learning Commitment Plans resources and their child Commitment Association resources. They support CRUD operations for commitment plans, get and list operations for commitment associations, moving commitment associations between commitment plans, and retrieving commitment plan usage history.
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommitmentAssociation from '../model/CommitmentAssociation';
import CommitmentAssociationListResult from '../model/CommitmentAssociationListResult';
import MoveCommitmentAssociationRequest from '../model/MoveCommitmentAssociationRequest';

/**
* CommitmentAssociations service.
* @module api/CommitmentAssociationsApi
* @version 2016-05-01-preview
*/
export default class CommitmentAssociationsApi {

    /**
    * Constructs a new CommitmentAssociationsApi. 
    * @alias module:api/CommitmentAssociationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the commitmentAssociationsGet operation.
     * @callback module:api/CommitmentAssociationsApi~commitmentAssociationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CommitmentAssociation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a commitment association.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} commitmentPlanName The Azure ML commitment plan name.
     * @param {String} commitmentAssociationName The commitment association name.
     * @param {String} apiVersion The version of the Microsoft.MachineLearning resource provider API to use.
     * @param {module:api/CommitmentAssociationsApi~commitmentAssociationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CommitmentAssociation}
     */
    commitmentAssociationsGet(subscriptionId, resourceGroupName, commitmentPlanName, commitmentAssociationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling commitmentAssociationsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling commitmentAssociationsGet");
      }
      // verify the required parameter 'commitmentPlanName' is set
      if (commitmentPlanName === undefined || commitmentPlanName === null) {
        throw new Error("Missing the required parameter 'commitmentPlanName' when calling commitmentAssociationsGet");
      }
      // verify the required parameter 'commitmentAssociationName' is set
      if (commitmentAssociationName === undefined || commitmentAssociationName === null) {
        throw new Error("Missing the required parameter 'commitmentAssociationName' when calling commitmentAssociationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling commitmentAssociationsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'commitmentPlanName': commitmentPlanName,
        'commitmentAssociationName': commitmentAssociationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CommitmentAssociation;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}/commitmentAssociations/{commitmentAssociationName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the commitmentAssociationsList operation.
     * @callback module:api/CommitmentAssociationsApi~commitmentAssociationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CommitmentAssociationListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all commitment associations for a parent commitment plan.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} commitmentPlanName The Azure ML commitment plan name.
     * @param {String} apiVersion The version of the Microsoft.MachineLearning resource provider API to use.
     * @param {Object} opts Optional parameters
     * @param {String} [skipToken] Continuation token for pagination.
     * @param {module:api/CommitmentAssociationsApi~commitmentAssociationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CommitmentAssociationListResult}
     */
    commitmentAssociationsList(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling commitmentAssociationsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling commitmentAssociationsList");
      }
      // verify the required parameter 'commitmentPlanName' is set
      if (commitmentPlanName === undefined || commitmentPlanName === null) {
        throw new Error("Missing the required parameter 'commitmentPlanName' when calling commitmentAssociationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling commitmentAssociationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'commitmentPlanName': commitmentPlanName
      };
      let queryParams = {
        '$skipToken': opts['skipToken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CommitmentAssociationListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}/commitmentAssociations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the commitmentAssociationsMove operation.
     * @callback module:api/CommitmentAssociationsApi~commitmentAssociationsMoveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CommitmentAssociation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Re-parent a commitment association from one commitment plan to another.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} commitmentPlanName The Azure ML commitment plan name.
     * @param {String} commitmentAssociationName The commitment association name.
     * @param {String} apiVersion The version of the Microsoft.MachineLearning resource provider API to use.
     * @param {module:model/MoveCommitmentAssociationRequest} movePayload The move request payload.
     * @param {module:api/CommitmentAssociationsApi~commitmentAssociationsMoveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CommitmentAssociation}
     */
    commitmentAssociationsMove(subscriptionId, resourceGroupName, commitmentPlanName, commitmentAssociationName, apiVersion, movePayload, callback) {
      let postBody = movePayload;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling commitmentAssociationsMove");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling commitmentAssociationsMove");
      }
      // verify the required parameter 'commitmentPlanName' is set
      if (commitmentPlanName === undefined || commitmentPlanName === null) {
        throw new Error("Missing the required parameter 'commitmentPlanName' when calling commitmentAssociationsMove");
      }
      // verify the required parameter 'commitmentAssociationName' is set
      if (commitmentAssociationName === undefined || commitmentAssociationName === null) {
        throw new Error("Missing the required parameter 'commitmentAssociationName' when calling commitmentAssociationsMove");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling commitmentAssociationsMove");
      }
      // verify the required parameter 'movePayload' is set
      if (movePayload === undefined || movePayload === null) {
        throw new Error("Missing the required parameter 'movePayload' when calling commitmentAssociationsMove");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'commitmentPlanName': commitmentPlanName,
        'commitmentAssociationName': commitmentAssociationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CommitmentAssociation;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}/commitmentAssociations/{commitmentAssociationName}/move', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
