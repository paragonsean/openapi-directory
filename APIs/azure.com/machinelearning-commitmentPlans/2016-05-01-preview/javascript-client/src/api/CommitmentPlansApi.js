/**
 * Azure ML Commitment Plans Management Client
 * These APIs allow end users to operate on Azure Machine Learning Commitment Plans resources and their child Commitment Association resources. They support CRUD operations for commitment plans, get and list operations for commitment associations, moving commitment associations between commitment plans, and retrieving commitment plan usage history.
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CommitmentPlan from '../model/CommitmentPlan';
import CommitmentPlanListResult from '../model/CommitmentPlanListResult';
import CommitmentPlanPatchPayload from '../model/CommitmentPlanPatchPayload';
import PlanUsageHistoryListResult from '../model/PlanUsageHistoryListResult';

/**
* CommitmentPlans service.
* @module api/CommitmentPlansApi
* @version 2016-05-01-preview
*/
export default class CommitmentPlansApi {

    /**
    * Constructs a new CommitmentPlansApi. 
    * @alias module:api/CommitmentPlansApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the commitmentPlansCreateOrUpdate operation.
     * @callback module:api/CommitmentPlansApi~commitmentPlansCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CommitmentPlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Azure ML commitment plan resource or updates an existing one.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} commitmentPlanName The Azure ML commitment plan name.
     * @param {String} apiVersion The version of the Microsoft.MachineLearning resource provider API to use.
     * @param {module:model/CommitmentPlan} createOrUpdatePayload The payload to create or update the Azure ML commitment plan.
     * @param {module:api/CommitmentPlansApi~commitmentPlansCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CommitmentPlan}
     */
    commitmentPlansCreateOrUpdate(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, createOrUpdatePayload, callback) {
      let postBody = createOrUpdatePayload;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling commitmentPlansCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling commitmentPlansCreateOrUpdate");
      }
      // verify the required parameter 'commitmentPlanName' is set
      if (commitmentPlanName === undefined || commitmentPlanName === null) {
        throw new Error("Missing the required parameter 'commitmentPlanName' when calling commitmentPlansCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling commitmentPlansCreateOrUpdate");
      }
      // verify the required parameter 'createOrUpdatePayload' is set
      if (createOrUpdatePayload === undefined || createOrUpdatePayload === null) {
        throw new Error("Missing the required parameter 'createOrUpdatePayload' when calling commitmentPlansCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'commitmentPlanName': commitmentPlanName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CommitmentPlan;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the commitmentPlansGet operation.
     * @callback module:api/CommitmentPlansApi~commitmentPlansGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CommitmentPlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an Azure ML commitment plan by its subscription, resource group and name.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} commitmentPlanName The Azure ML commitment plan name.
     * @param {String} apiVersion The version of the Microsoft.MachineLearning resource provider API to use.
     * @param {module:api/CommitmentPlansApi~commitmentPlansGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CommitmentPlan}
     */
    commitmentPlansGet(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling commitmentPlansGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling commitmentPlansGet");
      }
      // verify the required parameter 'commitmentPlanName' is set
      if (commitmentPlanName === undefined || commitmentPlanName === null) {
        throw new Error("Missing the required parameter 'commitmentPlanName' when calling commitmentPlansGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling commitmentPlansGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'commitmentPlanName': commitmentPlanName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CommitmentPlan;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the commitmentPlansList operation.
     * @callback module:api/CommitmentPlansApi~commitmentPlansListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CommitmentPlanListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve all Azure ML commitment plans in a subscription.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} apiVersion The version of the Microsoft.MachineLearning resource provider API to use.
     * @param {Object} opts Optional parameters
     * @param {String} [skipToken] Continuation token for pagination.
     * @param {module:api/CommitmentPlansApi~commitmentPlansListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CommitmentPlanListResult}
     */
    commitmentPlansList(subscriptionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling commitmentPlansList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling commitmentPlansList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$skipToken': opts['skipToken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CommitmentPlanListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearning/commitmentPlans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the commitmentPlansListInResourceGroup operation.
     * @callback module:api/CommitmentPlansApi~commitmentPlansListInResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CommitmentPlanListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve all Azure ML commitment plans in a resource group.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} apiVersion The version of the Microsoft.MachineLearning resource provider API to use.
     * @param {Object} opts Optional parameters
     * @param {String} [skipToken] Continuation token for pagination.
     * @param {module:api/CommitmentPlansApi~commitmentPlansListInResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CommitmentPlanListResult}
     */
    commitmentPlansListInResourceGroup(subscriptionId, resourceGroupName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling commitmentPlansListInResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling commitmentPlansListInResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling commitmentPlansListInResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        '$skipToken': opts['skipToken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CommitmentPlanListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the commitmentPlansPatch operation.
     * @callback module:api/CommitmentPlansApi~commitmentPlansPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CommitmentPlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Patch an existing Azure ML commitment plan resource.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} commitmentPlanName The Azure ML commitment plan name.
     * @param {String} apiVersion The version of the Microsoft.MachineLearning resource provider API to use.
     * @param {module:model/CommitmentPlanPatchPayload} patchPayload The payload to use to patch the Azure ML commitment plan. Only tags and SKU may be modified on an existing commitment plan.
     * @param {module:api/CommitmentPlansApi~commitmentPlansPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CommitmentPlan}
     */
    commitmentPlansPatch(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, patchPayload, callback) {
      let postBody = patchPayload;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling commitmentPlansPatch");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling commitmentPlansPatch");
      }
      // verify the required parameter 'commitmentPlanName' is set
      if (commitmentPlanName === undefined || commitmentPlanName === null) {
        throw new Error("Missing the required parameter 'commitmentPlanName' when calling commitmentPlansPatch");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling commitmentPlansPatch");
      }
      // verify the required parameter 'patchPayload' is set
      if (patchPayload === undefined || patchPayload === null) {
        throw new Error("Missing the required parameter 'patchPayload' when calling commitmentPlansPatch");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'commitmentPlanName': commitmentPlanName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CommitmentPlan;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the commitmentPlansRemove operation.
     * @callback module:api/CommitmentPlansApi~commitmentPlansRemoveCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove an existing Azure ML commitment plan.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} commitmentPlanName The Azure ML commitment plan name.
     * @param {String} apiVersion The version of the Microsoft.MachineLearning resource provider API to use.
     * @param {module:api/CommitmentPlansApi~commitmentPlansRemoveCallback} callback The callback function, accepting three arguments: error, data, response
     */
    commitmentPlansRemove(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling commitmentPlansRemove");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling commitmentPlansRemove");
      }
      // verify the required parameter 'commitmentPlanName' is set
      if (commitmentPlanName === undefined || commitmentPlanName === null) {
        throw new Error("Missing the required parameter 'commitmentPlanName' when calling commitmentPlansRemove");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling commitmentPlansRemove");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'commitmentPlanName': commitmentPlanName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the usageHistoryList operation.
     * @callback module:api/CommitmentPlansApi~usageHistoryListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PlanUsageHistoryListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the usage history for an Azure ML commitment plan.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} commitmentPlanName The Azure ML commitment plan name.
     * @param {String} apiVersion The version of the Microsoft.MachineLearning resource provider API to use.
     * @param {Object} opts Optional parameters
     * @param {String} [skipToken] Continuation token for pagination.
     * @param {module:api/CommitmentPlansApi~usageHistoryListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PlanUsageHistoryListResult}
     */
    usageHistoryList(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling usageHistoryList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling usageHistoryList");
      }
      // verify the required parameter 'commitmentPlanName' is set
      if (commitmentPlanName === undefined || commitmentPlanName === null) {
        throw new Error("Missing the required parameter 'commitmentPlanName' when calling usageHistoryList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling usageHistoryList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'commitmentPlanName': commitmentPlanName
      };
      let queryParams = {
        '$skipToken': opts['skipToken'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlanUsageHistoryListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}/usageHistory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
