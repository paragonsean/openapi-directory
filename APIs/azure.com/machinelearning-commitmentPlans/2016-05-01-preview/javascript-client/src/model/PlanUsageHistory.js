/**
 * Azure ML Commitment Plans Management Client
 * These APIs allow end users to operate on Azure Machine Learning Commitment Plans resources and their child Commitment Association resources. They support CRUD operations for commitment plans, get and list operations for commitment associations, moving commitment associations between commitment plans, and retrieving commitment plan usage history.
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlanUsageHistory model module.
 * @module model/PlanUsageHistory
 * @version 2016-05-01-preview
 */
class PlanUsageHistory {
    /**
     * Constructs a new <code>PlanUsageHistory</code>.
     * Represents historical information about usage of the Azure resources associated with a commitment plan.
     * @alias module:model/PlanUsageHistory
     */
    constructor() { 
        
        PlanUsageHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlanUsageHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlanUsageHistory} obj Optional instance to populate.
     * @return {module:model/PlanUsageHistory} The populated <code>PlanUsageHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlanUsageHistory();

            if (data.hasOwnProperty('planDeletionOverage')) {
                obj['planDeletionOverage'] = ApiClient.convertToType(data['planDeletionOverage'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('planMigrationOverage')) {
                obj['planMigrationOverage'] = ApiClient.convertToType(data['planMigrationOverage'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('planQuantitiesAfterUsage')) {
                obj['planQuantitiesAfterUsage'] = ApiClient.convertToType(data['planQuantitiesAfterUsage'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('planQuantitiesBeforeUsage')) {
                obj['planQuantitiesBeforeUsage'] = ApiClient.convertToType(data['planQuantitiesBeforeUsage'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('planUsageOverage')) {
                obj['planUsageOverage'] = ApiClient.convertToType(data['planUsageOverage'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('usage')) {
                obj['usage'] = ApiClient.convertToType(data['usage'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('usageDate')) {
                obj['usageDate'] = ApiClient.convertToType(data['usageDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlanUsageHistory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlanUsageHistory</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Overage incurred as a result of deleting a commitment plan.
 * @member {Object.<String, Number>} planDeletionOverage
 */
PlanUsageHistory.prototype['planDeletionOverage'] = undefined;

/**
 * Overage incurred as a result of migrating a commitment plan from one SKU to another.
 * @member {Object.<String, Number>} planMigrationOverage
 */
PlanUsageHistory.prototype['planMigrationOverage'] = undefined;

/**
 * Included quantities remaining after usage against the commitment plan's associated resources was calculated.
 * @member {Object.<String, Number>} planQuantitiesAfterUsage
 */
PlanUsageHistory.prototype['planQuantitiesAfterUsage'] = undefined;

/**
 * Included quantities remaining before usage against the commitment plan's associated resources was calculated.
 * @member {Object.<String, Number>} planQuantitiesBeforeUsage
 */
PlanUsageHistory.prototype['planQuantitiesBeforeUsage'] = undefined;

/**
 * Usage against the commitment plan's associated resources which was not covered by included quantities and is therefore overage.
 * @member {Object.<String, Number>} planUsageOverage
 */
PlanUsageHistory.prototype['planUsageOverage'] = undefined;

/**
 * Usage against the commitment plan's associated resources.
 * @member {Object.<String, Number>} usage
 */
PlanUsageHistory.prototype['usage'] = undefined;

/**
 * The date of usage, in ISO 8601 format.
 * @member {Date} usageDate
 */
PlanUsageHistory.prototype['usageDate'] = undefined;






export default PlanUsageHistory;

