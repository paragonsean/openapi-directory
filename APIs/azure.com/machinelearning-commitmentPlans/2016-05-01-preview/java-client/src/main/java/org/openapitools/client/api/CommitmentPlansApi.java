/*
 * Azure ML Commitment Plans Management Client
 * These APIs allow end users to operate on Azure Machine Learning Commitment Plans resources and their child Commitment Association resources. They support CRUD operations for commitment plans, get and list operations for commitment associations, moving commitment associations between commitment plans, and retrieving commitment plan usage history.
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CommitmentPlan;
import org.openapitools.client.model.CommitmentPlanListResult;
import org.openapitools.client.model.CommitmentPlanPatchPayload;
import org.openapitools.client.model.PlanUsageHistoryListResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CommitmentPlansApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CommitmentPlansApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CommitmentPlansApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for commitmentPlansCreateOrUpdate
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param createOrUpdatePayload The payload to create or update the Azure ML commitment plan. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call commitmentPlansCreateOrUpdateCall(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, CommitmentPlan createOrUpdatePayload, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createOrUpdatePayload;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "commitmentPlanName" + "}", localVarApiClient.escapeString(commitmentPlanName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call commitmentPlansCreateOrUpdateValidateBeforeCall(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, CommitmentPlan createOrUpdatePayload, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling commitmentPlansCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling commitmentPlansCreateOrUpdate(Async)");
        }

        // verify the required parameter 'commitmentPlanName' is set
        if (commitmentPlanName == null) {
            throw new ApiException("Missing the required parameter 'commitmentPlanName' when calling commitmentPlansCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling commitmentPlansCreateOrUpdate(Async)");
        }

        // verify the required parameter 'createOrUpdatePayload' is set
        if (createOrUpdatePayload == null) {
            throw new ApiException("Missing the required parameter 'createOrUpdatePayload' when calling commitmentPlansCreateOrUpdate(Async)");
        }

        return commitmentPlansCreateOrUpdateCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, createOrUpdatePayload, _callback);

    }

    /**
     * 
     * Create a new Azure ML commitment plan resource or updates an existing one.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param createOrUpdatePayload The payload to create or update the Azure ML commitment plan. (required)
     * @return CommitmentPlan
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public CommitmentPlan commitmentPlansCreateOrUpdate(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, CommitmentPlan createOrUpdatePayload) throws ApiException {
        ApiResponse<CommitmentPlan> localVarResp = commitmentPlansCreateOrUpdateWithHttpInfo(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, createOrUpdatePayload);
        return localVarResp.getData();
    }

    /**
     * 
     * Create a new Azure ML commitment plan resource or updates an existing one.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param createOrUpdatePayload The payload to create or update the Azure ML commitment plan. (required)
     * @return ApiResponse&lt;CommitmentPlan&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CommitmentPlan> commitmentPlansCreateOrUpdateWithHttpInfo(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, CommitmentPlan createOrUpdatePayload) throws ApiException {
        okhttp3.Call localVarCall = commitmentPlansCreateOrUpdateValidateBeforeCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, createOrUpdatePayload, null);
        Type localVarReturnType = new TypeToken<CommitmentPlan>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create a new Azure ML commitment plan resource or updates an existing one.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param createOrUpdatePayload The payload to create or update the Azure ML commitment plan. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call commitmentPlansCreateOrUpdateAsync(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, CommitmentPlan createOrUpdatePayload, final ApiCallback<CommitmentPlan> _callback) throws ApiException {

        okhttp3.Call localVarCall = commitmentPlansCreateOrUpdateValidateBeforeCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, createOrUpdatePayload, _callback);
        Type localVarReturnType = new TypeToken<CommitmentPlan>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for commitmentPlansGet
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call commitmentPlansGetCall(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "commitmentPlanName" + "}", localVarApiClient.escapeString(commitmentPlanName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call commitmentPlansGetValidateBeforeCall(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling commitmentPlansGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling commitmentPlansGet(Async)");
        }

        // verify the required parameter 'commitmentPlanName' is set
        if (commitmentPlanName == null) {
            throw new ApiException("Missing the required parameter 'commitmentPlanName' when calling commitmentPlansGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling commitmentPlansGet(Async)");
        }

        return commitmentPlansGetCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, _callback);

    }

    /**
     * 
     * Retrieve an Azure ML commitment plan by its subscription, resource group and name.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @return CommitmentPlan
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public CommitmentPlan commitmentPlansGet(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion) throws ApiException {
        ApiResponse<CommitmentPlan> localVarResp = commitmentPlansGetWithHttpInfo(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve an Azure ML commitment plan by its subscription, resource group and name.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @return ApiResponse&lt;CommitmentPlan&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CommitmentPlan> commitmentPlansGetWithHttpInfo(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = commitmentPlansGetValidateBeforeCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, null);
        Type localVarReturnType = new TypeToken<CommitmentPlan>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve an Azure ML commitment plan by its subscription, resource group and name.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call commitmentPlansGetAsync(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, final ApiCallback<CommitmentPlan> _callback) throws ApiException {

        okhttp3.Call localVarCall = commitmentPlansGetValidateBeforeCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<CommitmentPlan>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for commitmentPlansList
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param $skipToken Continuation token for pagination. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call commitmentPlansListCall(String subscriptionId, String apiVersion, String $skipToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearning/commitmentPlans"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($skipToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skipToken", $skipToken));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call commitmentPlansListValidateBeforeCall(String subscriptionId, String apiVersion, String $skipToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling commitmentPlansList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling commitmentPlansList(Async)");
        }

        return commitmentPlansListCall(subscriptionId, apiVersion, $skipToken, _callback);

    }

    /**
     * 
     * Retrieve all Azure ML commitment plans in a subscription.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param $skipToken Continuation token for pagination. (optional)
     * @return CommitmentPlanListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public CommitmentPlanListResult commitmentPlansList(String subscriptionId, String apiVersion, String $skipToken) throws ApiException {
        ApiResponse<CommitmentPlanListResult> localVarResp = commitmentPlansListWithHttpInfo(subscriptionId, apiVersion, $skipToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve all Azure ML commitment plans in a subscription.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param $skipToken Continuation token for pagination. (optional)
     * @return ApiResponse&lt;CommitmentPlanListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CommitmentPlanListResult> commitmentPlansListWithHttpInfo(String subscriptionId, String apiVersion, String $skipToken) throws ApiException {
        okhttp3.Call localVarCall = commitmentPlansListValidateBeforeCall(subscriptionId, apiVersion, $skipToken, null);
        Type localVarReturnType = new TypeToken<CommitmentPlanListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve all Azure ML commitment plans in a subscription.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param $skipToken Continuation token for pagination. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call commitmentPlansListAsync(String subscriptionId, String apiVersion, String $skipToken, final ApiCallback<CommitmentPlanListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = commitmentPlansListValidateBeforeCall(subscriptionId, apiVersion, $skipToken, _callback);
        Type localVarReturnType = new TypeToken<CommitmentPlanListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for commitmentPlansListInResourceGroup
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param $skipToken Continuation token for pagination. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call commitmentPlansListInResourceGroupCall(String subscriptionId, String resourceGroupName, String apiVersion, String $skipToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($skipToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skipToken", $skipToken));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call commitmentPlansListInResourceGroupValidateBeforeCall(String subscriptionId, String resourceGroupName, String apiVersion, String $skipToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling commitmentPlansListInResourceGroup(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling commitmentPlansListInResourceGroup(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling commitmentPlansListInResourceGroup(Async)");
        }

        return commitmentPlansListInResourceGroupCall(subscriptionId, resourceGroupName, apiVersion, $skipToken, _callback);

    }

    /**
     * 
     * Retrieve all Azure ML commitment plans in a resource group.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param $skipToken Continuation token for pagination. (optional)
     * @return CommitmentPlanListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public CommitmentPlanListResult commitmentPlansListInResourceGroup(String subscriptionId, String resourceGroupName, String apiVersion, String $skipToken) throws ApiException {
        ApiResponse<CommitmentPlanListResult> localVarResp = commitmentPlansListInResourceGroupWithHttpInfo(subscriptionId, resourceGroupName, apiVersion, $skipToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve all Azure ML commitment plans in a resource group.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param $skipToken Continuation token for pagination. (optional)
     * @return ApiResponse&lt;CommitmentPlanListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CommitmentPlanListResult> commitmentPlansListInResourceGroupWithHttpInfo(String subscriptionId, String resourceGroupName, String apiVersion, String $skipToken) throws ApiException {
        okhttp3.Call localVarCall = commitmentPlansListInResourceGroupValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, $skipToken, null);
        Type localVarReturnType = new TypeToken<CommitmentPlanListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve all Azure ML commitment plans in a resource group.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param $skipToken Continuation token for pagination. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call commitmentPlansListInResourceGroupAsync(String subscriptionId, String resourceGroupName, String apiVersion, String $skipToken, final ApiCallback<CommitmentPlanListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = commitmentPlansListInResourceGroupValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, $skipToken, _callback);
        Type localVarReturnType = new TypeToken<CommitmentPlanListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for commitmentPlansPatch
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param patchPayload The payload to use to patch the Azure ML commitment plan. Only tags and SKU may be modified on an existing commitment plan. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call commitmentPlansPatchCall(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, CommitmentPlanPatchPayload patchPayload, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = patchPayload;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "commitmentPlanName" + "}", localVarApiClient.escapeString(commitmentPlanName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call commitmentPlansPatchValidateBeforeCall(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, CommitmentPlanPatchPayload patchPayload, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling commitmentPlansPatch(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling commitmentPlansPatch(Async)");
        }

        // verify the required parameter 'commitmentPlanName' is set
        if (commitmentPlanName == null) {
            throw new ApiException("Missing the required parameter 'commitmentPlanName' when calling commitmentPlansPatch(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling commitmentPlansPatch(Async)");
        }

        // verify the required parameter 'patchPayload' is set
        if (patchPayload == null) {
            throw new ApiException("Missing the required parameter 'patchPayload' when calling commitmentPlansPatch(Async)");
        }

        return commitmentPlansPatchCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, patchPayload, _callback);

    }

    /**
     * 
     * Patch an existing Azure ML commitment plan resource.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param patchPayload The payload to use to patch the Azure ML commitment plan. Only tags and SKU may be modified on an existing commitment plan. (required)
     * @return CommitmentPlan
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public CommitmentPlan commitmentPlansPatch(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, CommitmentPlanPatchPayload patchPayload) throws ApiException {
        ApiResponse<CommitmentPlan> localVarResp = commitmentPlansPatchWithHttpInfo(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, patchPayload);
        return localVarResp.getData();
    }

    /**
     * 
     * Patch an existing Azure ML commitment plan resource.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param patchPayload The payload to use to patch the Azure ML commitment plan. Only tags and SKU may be modified on an existing commitment plan. (required)
     * @return ApiResponse&lt;CommitmentPlan&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CommitmentPlan> commitmentPlansPatchWithHttpInfo(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, CommitmentPlanPatchPayload patchPayload) throws ApiException {
        okhttp3.Call localVarCall = commitmentPlansPatchValidateBeforeCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, patchPayload, null);
        Type localVarReturnType = new TypeToken<CommitmentPlan>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Patch an existing Azure ML commitment plan resource.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param patchPayload The payload to use to patch the Azure ML commitment plan. Only tags and SKU may be modified on an existing commitment plan. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call commitmentPlansPatchAsync(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, CommitmentPlanPatchPayload patchPayload, final ApiCallback<CommitmentPlan> _callback) throws ApiException {

        okhttp3.Call localVarCall = commitmentPlansPatchValidateBeforeCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, patchPayload, _callback);
        Type localVarReturnType = new TypeToken<CommitmentPlan>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for commitmentPlansRemove
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call commitmentPlansRemoveCall(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "commitmentPlanName" + "}", localVarApiClient.escapeString(commitmentPlanName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call commitmentPlansRemoveValidateBeforeCall(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling commitmentPlansRemove(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling commitmentPlansRemove(Async)");
        }

        // verify the required parameter 'commitmentPlanName' is set
        if (commitmentPlanName == null) {
            throw new ApiException("Missing the required parameter 'commitmentPlanName' when calling commitmentPlansRemove(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling commitmentPlansRemove(Async)");
        }

        return commitmentPlansRemoveCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, _callback);

    }

    /**
     * 
     * Remove an existing Azure ML commitment plan.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public void commitmentPlansRemove(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion) throws ApiException {
        commitmentPlansRemoveWithHttpInfo(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion);
    }

    /**
     * 
     * Remove an existing Azure ML commitment plan.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> commitmentPlansRemoveWithHttpInfo(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = commitmentPlansRemoveValidateBeforeCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Remove an existing Azure ML commitment plan.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call commitmentPlansRemoveAsync(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = commitmentPlansRemoveValidateBeforeCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for usageHistoryList
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param $skipToken Continuation token for pagination. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call usageHistoryListCall(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, String $skipToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}/usageHistory"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "commitmentPlanName" + "}", localVarApiClient.escapeString(commitmentPlanName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($skipToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skipToken", $skipToken));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call usageHistoryListValidateBeforeCall(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, String $skipToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling usageHistoryList(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling usageHistoryList(Async)");
        }

        // verify the required parameter 'commitmentPlanName' is set
        if (commitmentPlanName == null) {
            throw new ApiException("Missing the required parameter 'commitmentPlanName' when calling usageHistoryList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling usageHistoryList(Async)");
        }

        return usageHistoryListCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, $skipToken, _callback);

    }

    /**
     * 
     * Retrieve the usage history for an Azure ML commitment plan.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param $skipToken Continuation token for pagination. (optional)
     * @return PlanUsageHistoryListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public PlanUsageHistoryListResult usageHistoryList(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, String $skipToken) throws ApiException {
        ApiResponse<PlanUsageHistoryListResult> localVarResp = usageHistoryListWithHttpInfo(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, $skipToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve the usage history for an Azure ML commitment plan.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param $skipToken Continuation token for pagination. (optional)
     * @return ApiResponse&lt;PlanUsageHistoryListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PlanUsageHistoryListResult> usageHistoryListWithHttpInfo(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, String $skipToken) throws ApiException {
        okhttp3.Call localVarCall = usageHistoryListValidateBeforeCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, $skipToken, null);
        Type localVarReturnType = new TypeToken<PlanUsageHistoryListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve the usage history for an Azure ML commitment plan.
     * @param subscriptionId Azure Subscription ID. (required)
     * @param resourceGroupName The resource group name. (required)
     * @param commitmentPlanName The Azure ML commitment plan name. (required)
     * @param apiVersion The version of the Microsoft.MachineLearning resource provider API to use. (required)
     * @param $skipToken Continuation token for pagination. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call usageHistoryListAsync(String subscriptionId, String resourceGroupName, String commitmentPlanName, String apiVersion, String $skipToken, final ApiCallback<PlanUsageHistoryListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = usageHistoryListValidateBeforeCall(subscriptionId, resourceGroupName, commitmentPlanName, apiVersion, $skipToken, _callback);
        Type localVarReturnType = new TypeToken<PlanUsageHistoryListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
