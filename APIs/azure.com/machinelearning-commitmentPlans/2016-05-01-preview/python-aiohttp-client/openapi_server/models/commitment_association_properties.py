# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CommitmentAssociationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, associated_resource_id: str=None, commitment_plan_id: str=None, creation_date: datetime=None):
        """CommitmentAssociationProperties - a model defined in OpenAPI

        :param associated_resource_id: The associated_resource_id of this CommitmentAssociationProperties.
        :param commitment_plan_id: The commitment_plan_id of this CommitmentAssociationProperties.
        :param creation_date: The creation_date of this CommitmentAssociationProperties.
        """
        self.openapi_types = {
            'associated_resource_id': str,
            'commitment_plan_id': str,
            'creation_date': datetime
        }

        self.attribute_map = {
            'associated_resource_id': 'associatedResourceId',
            'commitment_plan_id': 'commitmentPlanId',
            'creation_date': 'creationDate'
        }

        self._associated_resource_id = associated_resource_id
        self._commitment_plan_id = commitment_plan_id
        self._creation_date = creation_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommitmentAssociationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommitmentAssociationProperties of this CommitmentAssociationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def associated_resource_id(self):
        """Gets the associated_resource_id of this CommitmentAssociationProperties.

        The ID of the resource this association points to, such as the ARM ID of an Azure ML web service.

        :return: The associated_resource_id of this CommitmentAssociationProperties.
        :rtype: str
        """
        return self._associated_resource_id

    @associated_resource_id.setter
    def associated_resource_id(self, associated_resource_id):
        """Sets the associated_resource_id of this CommitmentAssociationProperties.

        The ID of the resource this association points to, such as the ARM ID of an Azure ML web service.

        :param associated_resource_id: The associated_resource_id of this CommitmentAssociationProperties.
        :type associated_resource_id: str
        """

        self._associated_resource_id = associated_resource_id

    @property
    def commitment_plan_id(self):
        """Gets the commitment_plan_id of this CommitmentAssociationProperties.

        The ARM ID of the parent Azure ML commitment plan.

        :return: The commitment_plan_id of this CommitmentAssociationProperties.
        :rtype: str
        """
        return self._commitment_plan_id

    @commitment_plan_id.setter
    def commitment_plan_id(self, commitment_plan_id):
        """Sets the commitment_plan_id of this CommitmentAssociationProperties.

        The ARM ID of the parent Azure ML commitment plan.

        :param commitment_plan_id: The commitment_plan_id of this CommitmentAssociationProperties.
        :type commitment_plan_id: str
        """

        self._commitment_plan_id = commitment_plan_id

    @property
    def creation_date(self):
        """Gets the creation_date of this CommitmentAssociationProperties.

        The date at which this commitment association was created, in ISO 8601 format.

        :return: The creation_date of this CommitmentAssociationProperties.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this CommitmentAssociationProperties.

        The date at which this commitment association was created, in ISO 8601 format.

        :param creation_date: The creation_date of this CommitmentAssociationProperties.
        :type creation_date: datetime
        """

        self._creation_date = creation_date
