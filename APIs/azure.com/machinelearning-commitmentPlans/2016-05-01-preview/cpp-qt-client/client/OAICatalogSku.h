/**
 * Azure ML Commitment Plans Management Client
 * These APIs allow end users to operate on Azure Machine Learning Commitment Plans resources and their child Commitment Association resources. They support CRUD operations for commitment plans, get and list operations for commitment associations, moving commitment associations between commitment plans, and retrieving commitment plan usage history.
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICatalogSku.h
 *
 * Details of a commitment plan SKU.
 */

#ifndef OAICatalogSku_H
#define OAICatalogSku_H

#include <QJsonObject>

#include "OAISkuCapability.h"
#include "OAISkuCapacity.h"
#include "OAISkuCost.h"
#include "OAISkuRestrictions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISkuCapability;
class OAISkuCapacity;
class OAISkuCost;
class OAISkuRestrictions;

class OAICatalogSku : public OAIObject {
public:
    OAICatalogSku();
    OAICatalogSku(QString json);
    ~OAICatalogSku() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISkuCapability> getCapabilities() const;
    void setCapabilities(const QList<OAISkuCapability> &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    OAISkuCapacity getCapacity() const;
    void setCapacity(const OAISkuCapacity &capacity);
    bool is_capacity_Set() const;
    bool is_capacity_Valid() const;

    QList<OAISkuCost> getCosts() const;
    void setCosts(const QList<OAISkuCost> &costs);
    bool is_costs_Set() const;
    bool is_costs_Valid() const;

    QList<QString> getLocations() const;
    void setLocations(const QList<QString> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QList<OAISkuRestrictions> getRestrictions() const;
    void setRestrictions(const QList<OAISkuRestrictions> &restrictions);
    bool is_restrictions_Set() const;
    bool is_restrictions_Valid() const;

    QString getTier() const;
    void setTier(const QString &tier);
    bool is_tier_Set() const;
    bool is_tier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISkuCapability> m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    OAISkuCapacity m_capacity;
    bool m_capacity_isSet;
    bool m_capacity_isValid;

    QList<OAISkuCost> m_costs;
    bool m_costs_isSet;
    bool m_costs_isValid;

    QList<QString> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QList<OAISkuRestrictions> m_restrictions;
    bool m_restrictions_isSet;
    bool m_restrictions_isValid;

    QString m_tier;
    bool m_tier_isSet;
    bool m_tier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICatalogSku)

#endif // OAICatalogSku_H
