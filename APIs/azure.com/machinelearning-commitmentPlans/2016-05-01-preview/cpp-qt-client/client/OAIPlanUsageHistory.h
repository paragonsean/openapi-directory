/**
 * Azure ML Commitment Plans Management Client
 * These APIs allow end users to operate on Azure Machine Learning Commitment Plans resources and their child Commitment Association resources. They support CRUD operations for commitment plans, get and list operations for commitment associations, moving commitment associations between commitment plans, and retrieving commitment plan usage history.
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlanUsageHistory.h
 *
 * Represents historical information about usage of the Azure resources associated with a commitment plan.
 */

#ifndef OAIPlanUsageHistory_H
#define OAIPlanUsageHistory_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlanUsageHistory : public OAIObject {
public:
    OAIPlanUsageHistory();
    OAIPlanUsageHistory(QString json);
    ~OAIPlanUsageHistory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, double> getPlanDeletionOverage() const;
    void setPlanDeletionOverage(const QMap<QString, double> &plan_deletion_overage);
    bool is_plan_deletion_overage_Set() const;
    bool is_plan_deletion_overage_Valid() const;

    QMap<QString, double> getPlanMigrationOverage() const;
    void setPlanMigrationOverage(const QMap<QString, double> &plan_migration_overage);
    bool is_plan_migration_overage_Set() const;
    bool is_plan_migration_overage_Valid() const;

    QMap<QString, double> getPlanQuantitiesAfterUsage() const;
    void setPlanQuantitiesAfterUsage(const QMap<QString, double> &plan_quantities_after_usage);
    bool is_plan_quantities_after_usage_Set() const;
    bool is_plan_quantities_after_usage_Valid() const;

    QMap<QString, double> getPlanQuantitiesBeforeUsage() const;
    void setPlanQuantitiesBeforeUsage(const QMap<QString, double> &plan_quantities_before_usage);
    bool is_plan_quantities_before_usage_Set() const;
    bool is_plan_quantities_before_usage_Valid() const;

    QMap<QString, double> getPlanUsageOverage() const;
    void setPlanUsageOverage(const QMap<QString, double> &plan_usage_overage);
    bool is_plan_usage_overage_Set() const;
    bool is_plan_usage_overage_Valid() const;

    QMap<QString, double> getUsage() const;
    void setUsage(const QMap<QString, double> &usage);
    bool is_usage_Set() const;
    bool is_usage_Valid() const;

    QDateTime getUsageDate() const;
    void setUsageDate(const QDateTime &usage_date);
    bool is_usage_date_Set() const;
    bool is_usage_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, double> m_plan_deletion_overage;
    bool m_plan_deletion_overage_isSet;
    bool m_plan_deletion_overage_isValid;

    QMap<QString, double> m_plan_migration_overage;
    bool m_plan_migration_overage_isSet;
    bool m_plan_migration_overage_isValid;

    QMap<QString, double> m_plan_quantities_after_usage;
    bool m_plan_quantities_after_usage_isSet;
    bool m_plan_quantities_after_usage_isValid;

    QMap<QString, double> m_plan_quantities_before_usage;
    bool m_plan_quantities_before_usage_isSet;
    bool m_plan_quantities_before_usage_isValid;

    QMap<QString, double> m_plan_usage_overage;
    bool m_plan_usage_overage_isSet;
    bool m_plan_usage_overage_isValid;

    QMap<QString, double> m_usage;
    bool m_usage_isSet;
    bool m_usage_isValid;

    QDateTime m_usage_date;
    bool m_usage_date_isSet;
    bool m_usage_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlanUsageHistory)

#endif // OAIPlanUsageHistory_H
