/**
 * Azure ML Commitment Plans Management Client
 * These APIs allow end users to operate on Azure Machine Learning Commitment Plans resources and their child Commitment Association resources. They support CRUD operations for commitment plans, get and list operations for commitment associations, moving commitment associations between commitment plans, and retrieving commitment plan usage history.
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISkuCapacity.h
 *
 * Describes scaling information of a SKU.
 */

#ifndef OAISkuCapacity_H
#define OAISkuCapacity_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISkuCapacity : public OAIObject {
public:
    OAISkuCapacity();
    OAISkuCapacity(QString json);
    ~OAISkuCapacity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getRDefault() const;
    void setRDefault(const qint64 &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    qint64 getMaximum() const;
    void setMaximum(const qint64 &maximum);
    bool is_maximum_Set() const;
    bool is_maximum_Valid() const;

    qint64 getMinimum() const;
    void setMinimum(const qint64 &minimum);
    bool is_minimum_Set() const;
    bool is_minimum_Valid() const;

    QString getScaleType() const;
    void setScaleType(const QString &scale_type);
    bool is_scale_type_Set() const;
    bool is_scale_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    qint64 m_maximum;
    bool m_maximum_isSet;
    bool m_maximum_isValid;

    qint64 m_minimum;
    bool m_minimum_isSet;
    bool m_minimum_isValid;

    QString m_scale_type;
    bool m_scale_type_isSet;
    bool m_scale_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISkuCapacity)

#endif // OAISkuCapacity_H
