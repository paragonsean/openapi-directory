/**
 * Azure ML Commitment Plans Management Client
 * These APIs allow end users to operate on Azure Machine Learning Commitment Plans resources and their child Commitment Association resources. They support CRUD operations for commitment plans, get and list operations for commitment associations, moving commitment associations between commitment plans, and retrieving commitment plan usage history.
 *
 * The version of the OpenAPI document: 2016-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlanQuantity.h
 *
 * Represents the quantity a commitment plan provides of a metered resource.
 */

#ifndef OAIPlanQuantity_H
#define OAIPlanQuantity_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlanQuantity : public OAIObject {
public:
    OAIPlanQuantity();
    OAIPlanQuantity(QString json);
    ~OAIPlanQuantity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAllowance() const;
    void setAllowance(const double &allowance);
    bool is_allowance_Set() const;
    bool is_allowance_Valid() const;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getIncludedQuantityMeter() const;
    void setIncludedQuantityMeter(const QString &included_quantity_meter);
    bool is_included_quantity_meter_Set() const;
    bool is_included_quantity_meter_Valid() const;

    QString getOverageMeter() const;
    void setOverageMeter(const QString &overage_meter);
    bool is_overage_meter_Set() const;
    bool is_overage_meter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_allowance;
    bool m_allowance_isSet;
    bool m_allowance_isValid;

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_included_quantity_meter;
    bool m_included_quantity_meter_isSet;
    bool m_included_quantity_meter_isValid;

    QString m_overage_meter;
    bool m_overage_meter_isSet;
    bool m_overage_meter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlanQuantity)

#endif // OAIPlanQuantity_H
