/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVulnerabilityAssessmentScanRecordProperties.h
 *
 * Properties of a vulnerability assessment scan record.
 */

#ifndef OAIVulnerabilityAssessmentScanRecordProperties_H
#define OAIVulnerabilityAssessmentScanRecordProperties_H

#include <QJsonObject>

#include "OAIVulnerabilityAssessmentScanError.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVulnerabilityAssessmentScanError;

class OAIVulnerabilityAssessmentScanRecordProperties : public OAIObject {
public:
    OAIVulnerabilityAssessmentScanRecordProperties();
    OAIVulnerabilityAssessmentScanRecordProperties(QString json);
    ~OAIVulnerabilityAssessmentScanRecordProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QList<OAIVulnerabilityAssessmentScanError> getErrors() const;
    void setErrors(const QList<OAIVulnerabilityAssessmentScanError> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    qint32 getNumberOfFailedSecurityChecks() const;
    void setNumberOfFailedSecurityChecks(const qint32 &number_of_failed_security_checks);
    bool is_number_of_failed_security_checks_Set() const;
    bool is_number_of_failed_security_checks_Valid() const;

    QString getScanId() const;
    void setScanId(const QString &scan_id);
    bool is_scan_id_Set() const;
    bool is_scan_id_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStorageContainerPath() const;
    void setStorageContainerPath(const QString &storage_container_path);
    bool is_storage_container_path_Set() const;
    bool is_storage_container_path_Valid() const;

    QString getTriggerType() const;
    void setTriggerType(const QString &trigger_type);
    bool is_trigger_type_Set() const;
    bool is_trigger_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QList<OAIVulnerabilityAssessmentScanError> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    qint32 m_number_of_failed_security_checks;
    bool m_number_of_failed_security_checks_isSet;
    bool m_number_of_failed_security_checks_isValid;

    QString m_scan_id;
    bool m_scan_id_isSet;
    bool m_scan_id_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_storage_container_path;
    bool m_storage_container_path_isSet;
    bool m_storage_container_path_isValid;

    QString m_trigger_type;
    bool m_trigger_type_isSet;
    bool m_trigger_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVulnerabilityAssessmentScanRecordProperties)

#endif // OAIVulnerabilityAssessmentScanRecordProperties_H
