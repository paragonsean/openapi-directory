/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-10-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.VulnerabilityAssessmentScanRecord;
import org.openapitools.client.model.VulnerabilityAssessmentScanRecordListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DatabaseVulnerabilityAssessmentScansApi
 */
@Disabled
public class DatabaseVulnerabilityAssessmentScansApiTest {

    private final DatabaseVulnerabilityAssessmentScansApi api = new DatabaseVulnerabilityAssessmentScansApi();

    /**
     * Gets a vulnerability assessment scan record of a database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseVulnerabilityAssessmentScansGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String vulnerabilityAssessmentName = null;
        String scanId = null;
        String subscriptionId = null;
        String apiVersion = null;
        VulnerabilityAssessmentScanRecord response = api.databaseVulnerabilityAssessmentScansGet(resourceGroupName, serverName, databaseName, vulnerabilityAssessmentName, scanId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists the vulnerability assessment scans of a database.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseVulnerabilityAssessmentScansListByDatabaseTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String vulnerabilityAssessmentName = null;
        String subscriptionId = null;
        String apiVersion = null;
        VulnerabilityAssessmentScanRecordListResult response = api.databaseVulnerabilityAssessmentScansListByDatabase(resourceGroupName, serverName, databaseName, vulnerabilityAssessmentName, subscriptionId, apiVersion);
        // TODO: test validations
    }

}
