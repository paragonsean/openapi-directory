/*
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EnforcementMode;
import org.openapitools.client.model.PathRecommendation;
import org.openapitools.client.model.ProtectionMode;
import org.openapitools.client.model.VmRecommendation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The altered data of the recommended VM/server group policy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:19:02.319495-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppWhitelistingPutGroupData {
  public static final String SERIALIZED_NAME_ENFORCEMENT_MODE = "enforcementMode";
  @SerializedName(SERIALIZED_NAME_ENFORCEMENT_MODE)
  private EnforcementMode enforcementMode;

  public static final String SERIALIZED_NAME_PATH_RECOMMENDATIONS = "pathRecommendations";
  @SerializedName(SERIALIZED_NAME_PATH_RECOMMENDATIONS)
  private List<PathRecommendation> pathRecommendations = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROTECTION_MODE = "protectionMode";
  @SerializedName(SERIALIZED_NAME_PROTECTION_MODE)
  private ProtectionMode protectionMode;

  public static final String SERIALIZED_NAME_VM_RECOMMENDATIONS = "vmRecommendations";
  @SerializedName(SERIALIZED_NAME_VM_RECOMMENDATIONS)
  private List<VmRecommendation> vmRecommendations = new ArrayList<>();

  public AppWhitelistingPutGroupData() {
  }

  public AppWhitelistingPutGroupData enforcementMode(EnforcementMode enforcementMode) {
    this.enforcementMode = enforcementMode;
    return this;
  }

  /**
   * Get enforcementMode
   * @return enforcementMode
   */
  @javax.annotation.Nullable
  public EnforcementMode getEnforcementMode() {
    return enforcementMode;
  }

  public void setEnforcementMode(EnforcementMode enforcementMode) {
    this.enforcementMode = enforcementMode;
  }


  public AppWhitelistingPutGroupData pathRecommendations(List<PathRecommendation> pathRecommendations) {
    this.pathRecommendations = pathRecommendations;
    return this;
  }

  public AppWhitelistingPutGroupData addPathRecommendationsItem(PathRecommendation pathRecommendationsItem) {
    if (this.pathRecommendations == null) {
      this.pathRecommendations = new ArrayList<>();
    }
    this.pathRecommendations.add(pathRecommendationsItem);
    return this;
  }

  /**
   * Get pathRecommendations
   * @return pathRecommendations
   */
  @javax.annotation.Nullable
  public List<PathRecommendation> getPathRecommendations() {
    return pathRecommendations;
  }

  public void setPathRecommendations(List<PathRecommendation> pathRecommendations) {
    this.pathRecommendations = pathRecommendations;
  }


  public AppWhitelistingPutGroupData protectionMode(ProtectionMode protectionMode) {
    this.protectionMode = protectionMode;
    return this;
  }

  /**
   * Get protectionMode
   * @return protectionMode
   */
  @javax.annotation.Nullable
  public ProtectionMode getProtectionMode() {
    return protectionMode;
  }

  public void setProtectionMode(ProtectionMode protectionMode) {
    this.protectionMode = protectionMode;
  }


  public AppWhitelistingPutGroupData vmRecommendations(List<VmRecommendation> vmRecommendations) {
    this.vmRecommendations = vmRecommendations;
    return this;
  }

  public AppWhitelistingPutGroupData addVmRecommendationsItem(VmRecommendation vmRecommendationsItem) {
    if (this.vmRecommendations == null) {
      this.vmRecommendations = new ArrayList<>();
    }
    this.vmRecommendations.add(vmRecommendationsItem);
    return this;
  }

  /**
   * Get vmRecommendations
   * @return vmRecommendations
   */
  @javax.annotation.Nullable
  public List<VmRecommendation> getVmRecommendations() {
    return vmRecommendations;
  }

  public void setVmRecommendations(List<VmRecommendation> vmRecommendations) {
    this.vmRecommendations = vmRecommendations;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppWhitelistingPutGroupData appWhitelistingPutGroupData = (AppWhitelistingPutGroupData) o;
    return Objects.equals(this.enforcementMode, appWhitelistingPutGroupData.enforcementMode) &&
        Objects.equals(this.pathRecommendations, appWhitelistingPutGroupData.pathRecommendations) &&
        Objects.equals(this.protectionMode, appWhitelistingPutGroupData.protectionMode) &&
        Objects.equals(this.vmRecommendations, appWhitelistingPutGroupData.vmRecommendations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enforcementMode, pathRecommendations, protectionMode, vmRecommendations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppWhitelistingPutGroupData {\n");
    sb.append("    enforcementMode: ").append(toIndentedString(enforcementMode)).append("\n");
    sb.append("    pathRecommendations: ").append(toIndentedString(pathRecommendations)).append("\n");
    sb.append("    protectionMode: ").append(toIndentedString(protectionMode)).append("\n");
    sb.append("    vmRecommendations: ").append(toIndentedString(vmRecommendations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enforcementMode");
    openapiFields.add("pathRecommendations");
    openapiFields.add("protectionMode");
    openapiFields.add("vmRecommendations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppWhitelistingPutGroupData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppWhitelistingPutGroupData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppWhitelistingPutGroupData is not found in the empty JSON string", AppWhitelistingPutGroupData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppWhitelistingPutGroupData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppWhitelistingPutGroupData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `enforcementMode`
      if (jsonObj.get("enforcementMode") != null && !jsonObj.get("enforcementMode").isJsonNull()) {
        EnforcementMode.validateJsonElement(jsonObj.get("enforcementMode"));
      }
      if (jsonObj.get("pathRecommendations") != null && !jsonObj.get("pathRecommendations").isJsonNull()) {
        JsonArray jsonArraypathRecommendations = jsonObj.getAsJsonArray("pathRecommendations");
        if (jsonArraypathRecommendations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("pathRecommendations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `pathRecommendations` to be an array in the JSON string but got `%s`", jsonObj.get("pathRecommendations").toString()));
          }

          // validate the optional field `pathRecommendations` (array)
          for (int i = 0; i < jsonArraypathRecommendations.size(); i++) {
            PathRecommendation.validateJsonElement(jsonArraypathRecommendations.get(i));
          };
        }
      }
      // validate the optional field `protectionMode`
      if (jsonObj.get("protectionMode") != null && !jsonObj.get("protectionMode").isJsonNull()) {
        ProtectionMode.validateJsonElement(jsonObj.get("protectionMode"));
      }
      if (jsonObj.get("vmRecommendations") != null && !jsonObj.get("vmRecommendations").isJsonNull()) {
        JsonArray jsonArrayvmRecommendations = jsonObj.getAsJsonArray("vmRecommendations");
        if (jsonArrayvmRecommendations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("vmRecommendations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `vmRecommendations` to be an array in the JSON string but got `%s`", jsonObj.get("vmRecommendations").toString()));
          }

          // validate the optional field `vmRecommendations` (array)
          for (int i = 0; i < jsonArrayvmRecommendations.size(); i++) {
            VmRecommendation.validateJsonElement(jsonArrayvmRecommendations.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppWhitelistingPutGroupData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppWhitelistingPutGroupData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppWhitelistingPutGroupData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppWhitelistingPutGroupData.class));

       return (TypeAdapter<T>) new TypeAdapter<AppWhitelistingPutGroupData>() {
           @Override
           public void write(JsonWriter out, AppWhitelistingPutGroupData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppWhitelistingPutGroupData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppWhitelistingPutGroupData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppWhitelistingPutGroupData
   * @throws IOException if the JSON string is invalid with respect to AppWhitelistingPutGroupData
   */
  public static AppWhitelistingPutGroupData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppWhitelistingPutGroupData.class);
  }

  /**
   * Convert an instance of AppWhitelistingPutGroupData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

