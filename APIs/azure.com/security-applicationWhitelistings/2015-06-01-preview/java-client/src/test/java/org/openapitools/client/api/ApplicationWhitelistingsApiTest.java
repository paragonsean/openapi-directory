/*
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AdaptiveApplicationControlsListDefaultResponse;
import org.openapitools.client.model.AppWhitelistingGroup;
import org.openapitools.client.model.AppWhitelistingGroups;
import org.openapitools.client.model.AppWhitelistingPutGroupData;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationWhitelistingsApi
 */
@Disabled
public class ApplicationWhitelistingsApiTest {

    private final ApplicationWhitelistingsApi api = new ApplicationWhitelistingsApi();

    /**
     * Gets an application control VM/server group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adaptiveApplicationControlsGetTest() throws ApiException {
        String subscriptionId = null;
        String ascLocation = null;
        String groupName = null;
        String apiVersion = null;
        AppWhitelistingGroup response = api.adaptiveApplicationControlsGet(subscriptionId, ascLocation, groupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of application control VM/server groups for the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adaptiveApplicationControlsListTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        Boolean includePathRecommendations = null;
        Boolean summary = null;
        AppWhitelistingGroups response = api.adaptiveApplicationControlsList(subscriptionId, apiVersion, includePathRecommendations, summary);
        // TODO: test validations
    }

    /**
     * Update an application control VM/server group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adaptiveApplicationControlsPutTest() throws ApiException {
        String subscriptionId = null;
        String ascLocation = null;
        String groupName = null;
        String apiVersion = null;
        AppWhitelistingPutGroupData body = null;
        AppWhitelistingGroup response = api.adaptiveApplicationControlsPut(subscriptionId, ascLocation, groupName, apiVersion, body);
        // TODO: test validations
    }

}
