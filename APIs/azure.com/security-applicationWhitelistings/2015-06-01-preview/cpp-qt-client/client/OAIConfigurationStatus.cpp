/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfigurationStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfigurationStatus::OAIConfigurationStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfigurationStatus::OAIConfigurationStatus() {
    this->initializeModel();
}

OAIConfigurationStatus::~OAIConfigurationStatus() {}

void OAIConfigurationStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIConfigurationStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIConfigurationStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Configured", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConfigurationStatus::CONFIGURED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NotConfigured", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConfigurationStatus::NOTCONFIGURED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("InProgress", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConfigurationStatus::INPROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConfigurationStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NoStatus", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConfigurationStatus::NOSTATUS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIConfigurationStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIConfigurationStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIConfigurationStatus::CONFIGURED:
            val = "Configured";
            break;
        case eOAIConfigurationStatus::NOTCONFIGURED:
            val = "NotConfigured";
            break;
        case eOAIConfigurationStatus::INPROGRESS:
            val = "InProgress";
            break;
        case eOAIConfigurationStatus::FAILED:
            val = "Failed";
            break;
        case eOAIConfigurationStatus::NOSTATUS:
            val = "NoStatus";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIConfigurationStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIConfigurationStatus::eOAIConfigurationStatus OAIConfigurationStatus::getValue() const {
    return m_value;
}

void OAIConfigurationStatus::setValue(const OAIConfigurationStatus::eOAIConfigurationStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIConfigurationStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIConfigurationStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
