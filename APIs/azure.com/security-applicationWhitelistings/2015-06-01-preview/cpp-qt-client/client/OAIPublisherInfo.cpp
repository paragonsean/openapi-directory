/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublisherInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublisherInfo::OAIPublisherInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublisherInfo::OAIPublisherInfo() {
    this->initializeModel();
}

OAIPublisherInfo::~OAIPublisherInfo() {}

void OAIPublisherInfo::initializeModel() {

    m_binary_name_isSet = false;
    m_binary_name_isValid = false;

    m_product_name_isSet = false;
    m_product_name_isValid = false;

    m_publisher_name_isSet = false;
    m_publisher_name_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIPublisherInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublisherInfo::fromJsonObject(QJsonObject json) {

    m_binary_name_isValid = ::OpenAPI::fromJsonValue(m_binary_name, json[QString("binaryName")]);
    m_binary_name_isSet = !json[QString("binaryName")].isNull() && m_binary_name_isValid;

    m_product_name_isValid = ::OpenAPI::fromJsonValue(m_product_name, json[QString("productName")]);
    m_product_name_isSet = !json[QString("productName")].isNull() && m_product_name_isValid;

    m_publisher_name_isValid = ::OpenAPI::fromJsonValue(m_publisher_name, json[QString("publisherName")]);
    m_publisher_name_isSet = !json[QString("publisherName")].isNull() && m_publisher_name_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIPublisherInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublisherInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_binary_name_isSet) {
        obj.insert(QString("binaryName"), ::OpenAPI::toJsonValue(m_binary_name));
    }
    if (m_product_name_isSet) {
        obj.insert(QString("productName"), ::OpenAPI::toJsonValue(m_product_name));
    }
    if (m_publisher_name_isSet) {
        obj.insert(QString("publisherName"), ::OpenAPI::toJsonValue(m_publisher_name));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAIPublisherInfo::getBinaryName() const {
    return m_binary_name;
}
void OAIPublisherInfo::setBinaryName(const QString &binary_name) {
    m_binary_name = binary_name;
    m_binary_name_isSet = true;
}

bool OAIPublisherInfo::is_binary_name_Set() const{
    return m_binary_name_isSet;
}

bool OAIPublisherInfo::is_binary_name_Valid() const{
    return m_binary_name_isValid;
}

QString OAIPublisherInfo::getProductName() const {
    return m_product_name;
}
void OAIPublisherInfo::setProductName(const QString &product_name) {
    m_product_name = product_name;
    m_product_name_isSet = true;
}

bool OAIPublisherInfo::is_product_name_Set() const{
    return m_product_name_isSet;
}

bool OAIPublisherInfo::is_product_name_Valid() const{
    return m_product_name_isValid;
}

QString OAIPublisherInfo::getPublisherName() const {
    return m_publisher_name;
}
void OAIPublisherInfo::setPublisherName(const QString &publisher_name) {
    m_publisher_name = publisher_name;
    m_publisher_name_isSet = true;
}

bool OAIPublisherInfo::is_publisher_name_Set() const{
    return m_publisher_name_isSet;
}

bool OAIPublisherInfo::is_publisher_name_Valid() const{
    return m_publisher_name_isValid;
}

QString OAIPublisherInfo::getVersion() const {
    return m_version;
}
void OAIPublisherInfo::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIPublisherInfo::is_version_Set() const{
    return m_version_isSet;
}

bool OAIPublisherInfo::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIPublisherInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_binary_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublisherInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
