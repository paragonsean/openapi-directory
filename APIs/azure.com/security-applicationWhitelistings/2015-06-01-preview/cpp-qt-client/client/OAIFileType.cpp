/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileType::OAIFileType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileType::OAIFileType() {
    this->initializeModel();
}

OAIFileType::~OAIFileType() {}

void OAIFileType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFileType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFileType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Exe", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileType::EXE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Dll", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileType::DLL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Msi", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileType::MSI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Script", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileType::SCRIPT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Executable", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileType::EXECUTABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Unknown", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileType::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFileType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFileType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFileType::EXE:
            val = "Exe";
            break;
        case eOAIFileType::DLL:
            val = "Dll";
            break;
        case eOAIFileType::MSI:
            val = "Msi";
            break;
        case eOAIFileType::SCRIPT:
            val = "Script";
            break;
        case eOAIFileType::EXECUTABLE:
            val = "Executable";
            break;
        case eOAIFileType::UNKNOWN:
            val = "Unknown";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFileType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFileType::eOAIFileType OAIFileType::getValue() const {
    return m_value;
}

void OAIFileType::setValue(const OAIFileType::eOAIFileType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFileType::isSet() const {
    
    return m_value_isSet;
}

bool OAIFileType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
