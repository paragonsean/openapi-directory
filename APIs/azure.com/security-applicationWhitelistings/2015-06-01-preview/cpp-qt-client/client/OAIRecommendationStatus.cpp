/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecommendationStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecommendationStatus::OAIRecommendationStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecommendationStatus::OAIRecommendationStatus() {
    this->initializeModel();
}

OAIRecommendationStatus::~OAIRecommendationStatus() {}

void OAIRecommendationStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRecommendationStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRecommendationStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Recommended", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationStatus::RECOMMENDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NotRecommended", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationStatus::NOTRECOMMENDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NotAvailable", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationStatus::NOTAVAILABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NoStatus", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationStatus::NOSTATUS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRecommendationStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRecommendationStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRecommendationStatus::RECOMMENDED:
            val = "Recommended";
            break;
        case eOAIRecommendationStatus::NOTRECOMMENDED:
            val = "NotRecommended";
            break;
        case eOAIRecommendationStatus::NOTAVAILABLE:
            val = "NotAvailable";
            break;
        case eOAIRecommendationStatus::NOSTATUS:
            val = "NoStatus";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRecommendationStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRecommendationStatus::eOAIRecommendationStatus OAIRecommendationStatus::getValue() const {
    return m_value;
}

void OAIRecommendationStatus::setValue(const OAIRecommendationStatus::eOAIRecommendationStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRecommendationStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIRecommendationStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
