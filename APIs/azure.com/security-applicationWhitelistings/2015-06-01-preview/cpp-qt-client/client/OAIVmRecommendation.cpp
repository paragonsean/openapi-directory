/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVmRecommendation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVmRecommendation::OAIVmRecommendation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVmRecommendation::OAIVmRecommendation() {
    this->initializeModel();
}

OAIVmRecommendation::~OAIVmRecommendation() {}

void OAIVmRecommendation::initializeModel() {

    m_configuration_status_isSet = false;
    m_configuration_status_isValid = false;

    m_recommendation_action_isSet = false;
    m_recommendation_action_isValid = false;

    m_resource_id_isSet = false;
    m_resource_id_isValid = false;
}

void OAIVmRecommendation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVmRecommendation::fromJsonObject(QJsonObject json) {

    m_configuration_status_isValid = ::OpenAPI::fromJsonValue(m_configuration_status, json[QString("configurationStatus")]);
    m_configuration_status_isSet = !json[QString("configurationStatus")].isNull() && m_configuration_status_isValid;

    m_recommendation_action_isValid = ::OpenAPI::fromJsonValue(m_recommendation_action, json[QString("recommendationAction")]);
    m_recommendation_action_isSet = !json[QString("recommendationAction")].isNull() && m_recommendation_action_isValid;

    m_resource_id_isValid = ::OpenAPI::fromJsonValue(m_resource_id, json[QString("resourceId")]);
    m_resource_id_isSet = !json[QString("resourceId")].isNull() && m_resource_id_isValid;
}

QString OAIVmRecommendation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVmRecommendation::asJsonObject() const {
    QJsonObject obj;
    if (m_configuration_status.isSet()) {
        obj.insert(QString("configurationStatus"), ::OpenAPI::toJsonValue(m_configuration_status));
    }
    if (m_recommendation_action.isSet()) {
        obj.insert(QString("recommendationAction"), ::OpenAPI::toJsonValue(m_recommendation_action));
    }
    if (m_resource_id_isSet) {
        obj.insert(QString("resourceId"), ::OpenAPI::toJsonValue(m_resource_id));
    }
    return obj;
}

OAIConfigurationStatus OAIVmRecommendation::getConfigurationStatus() const {
    return m_configuration_status;
}
void OAIVmRecommendation::setConfigurationStatus(const OAIConfigurationStatus &configuration_status) {
    m_configuration_status = configuration_status;
    m_configuration_status_isSet = true;
}

bool OAIVmRecommendation::is_configuration_status_Set() const{
    return m_configuration_status_isSet;
}

bool OAIVmRecommendation::is_configuration_status_Valid() const{
    return m_configuration_status_isValid;
}

OAIRecommendationAction OAIVmRecommendation::getRecommendationAction() const {
    return m_recommendation_action;
}
void OAIVmRecommendation::setRecommendationAction(const OAIRecommendationAction &recommendation_action) {
    m_recommendation_action = recommendation_action;
    m_recommendation_action_isSet = true;
}

bool OAIVmRecommendation::is_recommendation_action_Set() const{
    return m_recommendation_action_isSet;
}

bool OAIVmRecommendation::is_recommendation_action_Valid() const{
    return m_recommendation_action_isValid;
}

QString OAIVmRecommendation::getResourceId() const {
    return m_resource_id;
}
void OAIVmRecommendation::setResourceId(const QString &resource_id) {
    m_resource_id = resource_id;
    m_resource_id_isSet = true;
}

bool OAIVmRecommendation::is_resource_id_Set() const{
    return m_resource_id_isSet;
}

bool OAIVmRecommendation::is_resource_id_Valid() const{
    return m_resource_id_isValid;
}

bool OAIVmRecommendation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configuration_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVmRecommendation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
