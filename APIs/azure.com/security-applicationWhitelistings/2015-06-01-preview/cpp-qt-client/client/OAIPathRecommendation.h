/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPathRecommendation.h
 *
 * Represents a path that is recommended to be allowed and its properties
 */

#ifndef OAIPathRecommendation_H
#define OAIPathRecommendation_H

#include <QJsonObject>

#include "OAIConfigurationStatus.h"
#include "OAIFileType.h"
#include "OAIPublisherInfo.h"
#include "OAIRecommendationAction.h"
#include "OAIRecommendationType.h"
#include "OAIUserRecommendation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPublisherInfo;
class OAIUserRecommendation;

class OAIPathRecommendation : public OAIObject {
public:
    OAIPathRecommendation();
    OAIPathRecommendation(QString json);
    ~OAIPathRecommendation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRecommendationAction getAction() const;
    void setAction(const OAIRecommendationAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    bool isCommon() const;
    void setCommon(const bool &common);
    bool is_common_Set() const;
    bool is_common_Valid() const;

    OAIConfigurationStatus getConfigurationStatus() const;
    void setConfigurationStatus(const OAIConfigurationStatus &configuration_status);
    bool is_configuration_status_Set() const;
    bool is_configuration_status_Valid() const;

    OAIFileType getFileType() const;
    void setFileType(const OAIFileType &file_type);
    bool is_file_type_Set() const;
    bool is_file_type_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    OAIPublisherInfo getPublisherInfo() const;
    void setPublisherInfo(const OAIPublisherInfo &publisher_info);
    bool is_publisher_info_Set() const;
    bool is_publisher_info_Valid() const;

    OAIRecommendationType getType() const;
    void setType(const OAIRecommendationType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList<QString> getUserSids() const;
    void setUserSids(const QList<QString> &user_sids);
    bool is_user_sids_Set() const;
    bool is_user_sids_Valid() const;

    QList<OAIUserRecommendation> getUsernames() const;
    void setUsernames(const QList<OAIUserRecommendation> &usernames);
    bool is_usernames_Set() const;
    bool is_usernames_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRecommendationAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    bool m_common;
    bool m_common_isSet;
    bool m_common_isValid;

    OAIConfigurationStatus m_configuration_status;
    bool m_configuration_status_isSet;
    bool m_configuration_status_isValid;

    OAIFileType m_file_type;
    bool m_file_type_isSet;
    bool m_file_type_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    OAIPublisherInfo m_publisher_info;
    bool m_publisher_info_isSet;
    bool m_publisher_info_isValid;

    OAIRecommendationType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList<QString> m_user_sids;
    bool m_user_sids_isSet;
    bool m_user_sids_isValid;

    QList<OAIUserRecommendation> m_usernames;
    bool m_usernames_isSet;
    bool m_usernames_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPathRecommendation)

#endif // OAIPathRecommendation_H
