/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2015-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnforcementMode from './EnforcementMode';
import PathRecommendation from './PathRecommendation';
import ProtectionMode from './ProtectionMode';
import VmRecommendation from './VmRecommendation';

/**
 * The AppWhitelistingPutGroupData model module.
 * @module model/AppWhitelistingPutGroupData
 * @version 2015-06-01-preview
 */
class AppWhitelistingPutGroupData {
    /**
     * Constructs a new <code>AppWhitelistingPutGroupData</code>.
     * The altered data of the recommended VM/server group policy
     * @alias module:model/AppWhitelistingPutGroupData
     */
    constructor() { 
        
        AppWhitelistingPutGroupData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppWhitelistingPutGroupData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppWhitelistingPutGroupData} obj Optional instance to populate.
     * @return {module:model/AppWhitelistingPutGroupData} The populated <code>AppWhitelistingPutGroupData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppWhitelistingPutGroupData();

            if (data.hasOwnProperty('enforcementMode')) {
                obj['enforcementMode'] = EnforcementMode.constructFromObject(data['enforcementMode']);
            }
            if (data.hasOwnProperty('pathRecommendations')) {
                obj['pathRecommendations'] = ApiClient.convertToType(data['pathRecommendations'], [PathRecommendation]);
            }
            if (data.hasOwnProperty('protectionMode')) {
                obj['protectionMode'] = ProtectionMode.constructFromObject(data['protectionMode']);
            }
            if (data.hasOwnProperty('vmRecommendations')) {
                obj['vmRecommendations'] = ApiClient.convertToType(data['vmRecommendations'], [VmRecommendation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppWhitelistingPutGroupData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppWhitelistingPutGroupData</code>.
     */
    static validateJSON(data) {
        if (data['pathRecommendations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['pathRecommendations'])) {
                throw new Error("Expected the field `pathRecommendations` to be an array in the JSON data but got " + data['pathRecommendations']);
            }
            // validate the optional field `pathRecommendations` (array)
            for (const item of data['pathRecommendations']) {
                PathRecommendation.validateJSON(item);
            };
        }
        // validate the optional field `protectionMode`
        if (data['protectionMode']) { // data not null
          ProtectionMode.validateJSON(data['protectionMode']);
        }
        if (data['vmRecommendations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vmRecommendations'])) {
                throw new Error("Expected the field `vmRecommendations` to be an array in the JSON data but got " + data['vmRecommendations']);
            }
            // validate the optional field `vmRecommendations` (array)
            for (const item of data['vmRecommendations']) {
                VmRecommendation.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/EnforcementMode} enforcementMode
 */
AppWhitelistingPutGroupData.prototype['enforcementMode'] = undefined;

/**
 * @member {Array.<module:model/PathRecommendation>} pathRecommendations
 */
AppWhitelistingPutGroupData.prototype['pathRecommendations'] = undefined;

/**
 * @member {module:model/ProtectionMode} protectionMode
 */
AppWhitelistingPutGroupData.prototype['protectionMode'] = undefined;

/**
 * @member {Array.<module:model/VmRecommendation>} vmRecommendations
 */
AppWhitelistingPutGroupData.prototype['vmRecommendations'] = undefined;






export default AppWhitelistingPutGroupData;

