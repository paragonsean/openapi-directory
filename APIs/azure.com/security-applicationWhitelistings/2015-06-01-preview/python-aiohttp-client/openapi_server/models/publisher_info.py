# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PublisherInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, binary_name: str=None, product_name: str=None, publisher_name: str=None, version: str=None):
        """PublisherInfo - a model defined in OpenAPI

        :param binary_name: The binary_name of this PublisherInfo.
        :param product_name: The product_name of this PublisherInfo.
        :param publisher_name: The publisher_name of this PublisherInfo.
        :param version: The version of this PublisherInfo.
        """
        self.openapi_types = {
            'binary_name': str,
            'product_name': str,
            'publisher_name': str,
            'version': str
        }

        self.attribute_map = {
            'binary_name': 'binaryName',
            'product_name': 'productName',
            'publisher_name': 'publisherName',
            'version': 'version'
        }

        self._binary_name = binary_name
        self._product_name = product_name
        self._publisher_name = publisher_name
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublisherInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublisherInfo of this PublisherInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def binary_name(self):
        """Gets the binary_name of this PublisherInfo.

        The \"OriginalName\" field taken from the file's version resource

        :return: The binary_name of this PublisherInfo.
        :rtype: str
        """
        return self._binary_name

    @binary_name.setter
    def binary_name(self, binary_name):
        """Sets the binary_name of this PublisherInfo.

        The \"OriginalName\" field taken from the file's version resource

        :param binary_name: The binary_name of this PublisherInfo.
        :type binary_name: str
        """

        self._binary_name = binary_name

    @property
    def product_name(self):
        """Gets the product_name of this PublisherInfo.

        The product name taken from the file's version resource

        :return: The product_name of this PublisherInfo.
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this PublisherInfo.

        The product name taken from the file's version resource

        :param product_name: The product_name of this PublisherInfo.
        :type product_name: str
        """

        self._product_name = product_name

    @property
    def publisher_name(self):
        """Gets the publisher_name of this PublisherInfo.

        The Subject field of the x.509 certificate used to sign the code, using the following fields -  O = Organization, L = Locality, S = State or Province, and C = Country

        :return: The publisher_name of this PublisherInfo.
        :rtype: str
        """
        return self._publisher_name

    @publisher_name.setter
    def publisher_name(self, publisher_name):
        """Sets the publisher_name of this PublisherInfo.

        The Subject field of the x.509 certificate used to sign the code, using the following fields -  O = Organization, L = Locality, S = State or Province, and C = Country

        :param publisher_name: The publisher_name of this PublisherInfo.
        :type publisher_name: str
        """

        self._publisher_name = publisher_name

    @property
    def version(self):
        """Gets the version of this PublisherInfo.

        The binary file version taken from the file's version resource

        :return: The version of this PublisherInfo.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this PublisherInfo.

        The binary file version taken from the file's version resource

        :param version: The version of this PublisherInfo.
        :type version: str
        """

        self._version = version
