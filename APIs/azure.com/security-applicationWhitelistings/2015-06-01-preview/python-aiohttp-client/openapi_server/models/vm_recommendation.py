# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_status import ConfigurationStatus
from openapi_server.models.recommendation_action import RecommendationAction
from openapi_server import util


class VmRecommendation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_status: ConfigurationStatus=None, recommendation_action: RecommendationAction=None, resource_id: str=None):
        """VmRecommendation - a model defined in OpenAPI

        :param configuration_status: The configuration_status of this VmRecommendation.
        :param recommendation_action: The recommendation_action of this VmRecommendation.
        :param resource_id: The resource_id of this VmRecommendation.
        """
        self.openapi_types = {
            'configuration_status': ConfigurationStatus,
            'recommendation_action': RecommendationAction,
            'resource_id': str
        }

        self.attribute_map = {
            'configuration_status': 'configurationStatus',
            'recommendation_action': 'recommendationAction',
            'resource_id': 'resourceId'
        }

        self._configuration_status = configuration_status
        self._recommendation_action = recommendation_action
        self._resource_id = resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmRecommendation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmRecommendation of this VmRecommendation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_status(self):
        """Gets the configuration_status of this VmRecommendation.


        :return: The configuration_status of this VmRecommendation.
        :rtype: ConfigurationStatus
        """
        return self._configuration_status

    @configuration_status.setter
    def configuration_status(self, configuration_status):
        """Sets the configuration_status of this VmRecommendation.


        :param configuration_status: The configuration_status of this VmRecommendation.
        :type configuration_status: ConfigurationStatus
        """

        self._configuration_status = configuration_status

    @property
    def recommendation_action(self):
        """Gets the recommendation_action of this VmRecommendation.


        :return: The recommendation_action of this VmRecommendation.
        :rtype: RecommendationAction
        """
        return self._recommendation_action

    @recommendation_action.setter
    def recommendation_action(self, recommendation_action):
        """Sets the recommendation_action of this VmRecommendation.


        :param recommendation_action: The recommendation_action of this VmRecommendation.
        :type recommendation_action: RecommendationAction
        """

        self._recommendation_action = recommendation_action

    @property
    def resource_id(self):
        """Gets the resource_id of this VmRecommendation.

        The full azure resource id of the machine

        :return: The resource_id of this VmRecommendation.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this VmRecommendation.

        The full azure resource id of the machine

        :param resource_id: The resource_id of this VmRecommendation.
        :type resource_id: str
        """

        self._resource_id = resource_id
