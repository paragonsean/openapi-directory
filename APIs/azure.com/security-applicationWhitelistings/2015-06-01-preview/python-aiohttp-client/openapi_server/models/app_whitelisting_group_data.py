# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_whitelisting_issue_summary import AppWhitelistingIssueSummary
from openapi_server.models.configuration_status import ConfigurationStatus
from openapi_server.models.enforcement_mode import EnforcementMode
from openapi_server.models.path_recommendation import PathRecommendation
from openapi_server.models.protection_mode import ProtectionMode
from openapi_server.models.recommendation_status import RecommendationStatus
from openapi_server.models.source_system import SourceSystem
from openapi_server.models.vm_recommendation import VmRecommendation
from openapi_server import util


class AppWhitelistingGroupData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_status: ConfigurationStatus=None, enforcement_mode: EnforcementMode=None, issues: List[AppWhitelistingIssueSummary]=None, path_recommendations: List[PathRecommendation]=None, protection_mode: ProtectionMode=None, recommendation_status: RecommendationStatus=None, source_system: SourceSystem=None, vm_recommendations: List[VmRecommendation]=None):
        """AppWhitelistingGroupData - a model defined in OpenAPI

        :param configuration_status: The configuration_status of this AppWhitelistingGroupData.
        :param enforcement_mode: The enforcement_mode of this AppWhitelistingGroupData.
        :param issues: The issues of this AppWhitelistingGroupData.
        :param path_recommendations: The path_recommendations of this AppWhitelistingGroupData.
        :param protection_mode: The protection_mode of this AppWhitelistingGroupData.
        :param recommendation_status: The recommendation_status of this AppWhitelistingGroupData.
        :param source_system: The source_system of this AppWhitelistingGroupData.
        :param vm_recommendations: The vm_recommendations of this AppWhitelistingGroupData.
        """
        self.openapi_types = {
            'configuration_status': ConfigurationStatus,
            'enforcement_mode': EnforcementMode,
            'issues': List[AppWhitelistingIssueSummary],
            'path_recommendations': List[PathRecommendation],
            'protection_mode': ProtectionMode,
            'recommendation_status': RecommendationStatus,
            'source_system': SourceSystem,
            'vm_recommendations': List[VmRecommendation]
        }

        self.attribute_map = {
            'configuration_status': 'configurationStatus',
            'enforcement_mode': 'enforcementMode',
            'issues': 'issues',
            'path_recommendations': 'pathRecommendations',
            'protection_mode': 'protectionMode',
            'recommendation_status': 'recommendationStatus',
            'source_system': 'sourceSystem',
            'vm_recommendations': 'vmRecommendations'
        }

        self._configuration_status = configuration_status
        self._enforcement_mode = enforcement_mode
        self._issues = issues
        self._path_recommendations = path_recommendations
        self._protection_mode = protection_mode
        self._recommendation_status = recommendation_status
        self._source_system = source_system
        self._vm_recommendations = vm_recommendations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppWhitelistingGroupData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppWhitelistingGroupData of this AppWhitelistingGroupData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_status(self):
        """Gets the configuration_status of this AppWhitelistingGroupData.


        :return: The configuration_status of this AppWhitelistingGroupData.
        :rtype: ConfigurationStatus
        """
        return self._configuration_status

    @configuration_status.setter
    def configuration_status(self, configuration_status):
        """Sets the configuration_status of this AppWhitelistingGroupData.


        :param configuration_status: The configuration_status of this AppWhitelistingGroupData.
        :type configuration_status: ConfigurationStatus
        """

        self._configuration_status = configuration_status

    @property
    def enforcement_mode(self):
        """Gets the enforcement_mode of this AppWhitelistingGroupData.


        :return: The enforcement_mode of this AppWhitelistingGroupData.
        :rtype: EnforcementMode
        """
        return self._enforcement_mode

    @enforcement_mode.setter
    def enforcement_mode(self, enforcement_mode):
        """Sets the enforcement_mode of this AppWhitelistingGroupData.


        :param enforcement_mode: The enforcement_mode of this AppWhitelistingGroupData.
        :type enforcement_mode: EnforcementMode
        """

        self._enforcement_mode = enforcement_mode

    @property
    def issues(self):
        """Gets the issues of this AppWhitelistingGroupData.


        :return: The issues of this AppWhitelistingGroupData.
        :rtype: List[AppWhitelistingIssueSummary]
        """
        return self._issues

    @issues.setter
    def issues(self, issues):
        """Sets the issues of this AppWhitelistingGroupData.


        :param issues: The issues of this AppWhitelistingGroupData.
        :type issues: List[AppWhitelistingIssueSummary]
        """

        self._issues = issues

    @property
    def path_recommendations(self):
        """Gets the path_recommendations of this AppWhitelistingGroupData.


        :return: The path_recommendations of this AppWhitelistingGroupData.
        :rtype: List[PathRecommendation]
        """
        return self._path_recommendations

    @path_recommendations.setter
    def path_recommendations(self, path_recommendations):
        """Sets the path_recommendations of this AppWhitelistingGroupData.


        :param path_recommendations: The path_recommendations of this AppWhitelistingGroupData.
        :type path_recommendations: List[PathRecommendation]
        """

        self._path_recommendations = path_recommendations

    @property
    def protection_mode(self):
        """Gets the protection_mode of this AppWhitelistingGroupData.


        :return: The protection_mode of this AppWhitelistingGroupData.
        :rtype: ProtectionMode
        """
        return self._protection_mode

    @protection_mode.setter
    def protection_mode(self, protection_mode):
        """Sets the protection_mode of this AppWhitelistingGroupData.


        :param protection_mode: The protection_mode of this AppWhitelistingGroupData.
        :type protection_mode: ProtectionMode
        """

        self._protection_mode = protection_mode

    @property
    def recommendation_status(self):
        """Gets the recommendation_status of this AppWhitelistingGroupData.


        :return: The recommendation_status of this AppWhitelistingGroupData.
        :rtype: RecommendationStatus
        """
        return self._recommendation_status

    @recommendation_status.setter
    def recommendation_status(self, recommendation_status):
        """Sets the recommendation_status of this AppWhitelistingGroupData.


        :param recommendation_status: The recommendation_status of this AppWhitelistingGroupData.
        :type recommendation_status: RecommendationStatus
        """

        self._recommendation_status = recommendation_status

    @property
    def source_system(self):
        """Gets the source_system of this AppWhitelistingGroupData.


        :return: The source_system of this AppWhitelistingGroupData.
        :rtype: SourceSystem
        """
        return self._source_system

    @source_system.setter
    def source_system(self, source_system):
        """Sets the source_system of this AppWhitelistingGroupData.


        :param source_system: The source_system of this AppWhitelistingGroupData.
        :type source_system: SourceSystem
        """

        self._source_system = source_system

    @property
    def vm_recommendations(self):
        """Gets the vm_recommendations of this AppWhitelistingGroupData.


        :return: The vm_recommendations of this AppWhitelistingGroupData.
        :rtype: List[VmRecommendation]
        """
        return self._vm_recommendations

    @vm_recommendations.setter
    def vm_recommendations(self, vm_recommendations):
        """Sets the vm_recommendations of this AppWhitelistingGroupData.


        :param vm_recommendations: The vm_recommendations of this AppWhitelistingGroupData.
        :type vm_recommendations: List[VmRecommendation]
        """

        self._vm_recommendations = vm_recommendations
