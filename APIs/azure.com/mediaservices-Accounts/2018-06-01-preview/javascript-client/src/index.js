/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApiError from './model/ApiError';
import CheckNameAvailabilityInput from './model/CheckNameAvailabilityInput';
import EntityNameAvailabilityCheckOutput from './model/EntityNameAvailabilityCheckOutput';
import Location from './model/Location';
import MediaService from './model/MediaService';
import MediaServiceCollection from './model/MediaServiceCollection';
import MediaServiceProperties from './model/MediaServiceProperties';
import ODataError from './model/ODataError';
import Operation from './model/Operation';
import OperationCollection from './model/OperationCollection';
import OperationDisplay from './model/OperationDisplay';
import Provider from './model/Provider';
import StorageAccount from './model/StorageAccount';
import SubscriptionMediaService from './model/SubscriptionMediaService';
import SubscriptionMediaServiceCollection from './model/SubscriptionMediaServiceCollection';
import SyncStorageKeysInput from './model/SyncStorageKeysInput';
import DefaultApi from './api/DefaultApi';


/**
* This Swagger was generated by the API Framework..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AzureMediaServices = require('index'); // See note below*.
* var xxxSvc = new AzureMediaServices.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AzureMediaServices.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AzureMediaServices.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AzureMediaServices.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-06-01-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApiError model constructor.
     * @property {module:model/ApiError}
     */
    ApiError,

    /**
     * The CheckNameAvailabilityInput model constructor.
     * @property {module:model/CheckNameAvailabilityInput}
     */
    CheckNameAvailabilityInput,

    /**
     * The EntityNameAvailabilityCheckOutput model constructor.
     * @property {module:model/EntityNameAvailabilityCheckOutput}
     */
    EntityNameAvailabilityCheckOutput,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The MediaService model constructor.
     * @property {module:model/MediaService}
     */
    MediaService,

    /**
     * The MediaServiceCollection model constructor.
     * @property {module:model/MediaServiceCollection}
     */
    MediaServiceCollection,

    /**
     * The MediaServiceProperties model constructor.
     * @property {module:model/MediaServiceProperties}
     */
    MediaServiceProperties,

    /**
     * The ODataError model constructor.
     * @property {module:model/ODataError}
     */
    ODataError,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationCollection model constructor.
     * @property {module:model/OperationCollection}
     */
    OperationCollection,

    /**
     * The OperationDisplay model constructor.
     * @property {module:model/OperationDisplay}
     */
    OperationDisplay,

    /**
     * The Provider model constructor.
     * @property {module:model/Provider}
     */
    Provider,

    /**
     * The StorageAccount model constructor.
     * @property {module:model/StorageAccount}
     */
    StorageAccount,

    /**
     * The SubscriptionMediaService model constructor.
     * @property {module:model/SubscriptionMediaService}
     */
    SubscriptionMediaService,

    /**
     * The SubscriptionMediaServiceCollection model constructor.
     * @property {module:model/SubscriptionMediaServiceCollection}
     */
    SubscriptionMediaServiceCollection,

    /**
     * The SyncStorageKeysInput model constructor.
     * @property {module:model/SyncStorageKeysInput}
     */
    SyncStorageKeysInput,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
