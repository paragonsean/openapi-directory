/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AzureMediaServices);
  }
}(this, function(expect, AzureMediaServices) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AzureMediaServices.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('locationsCheckNameAvailability', function() {
      it('should call locationsCheckNameAvailability successfully', function(done) {
        //uncomment below and update the code to test locationsCheckNameAvailability
        //instance.locationsCheckNameAvailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediaservicesCreateOrUpdate', function() {
      it('should call mediaservicesCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test mediaservicesCreateOrUpdate
        //instance.mediaservicesCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediaservicesDelete', function() {
      it('should call mediaservicesDelete successfully', function(done) {
        //uncomment below and update the code to test mediaservicesDelete
        //instance.mediaservicesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediaservicesGet', function() {
      it('should call mediaservicesGet successfully', function(done) {
        //uncomment below and update the code to test mediaservicesGet
        //instance.mediaservicesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediaservicesGetBySubscription', function() {
      it('should call mediaservicesGetBySubscription successfully', function(done) {
        //uncomment below and update the code to test mediaservicesGetBySubscription
        //instance.mediaservicesGetBySubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediaservicesList', function() {
      it('should call mediaservicesList successfully', function(done) {
        //uncomment below and update the code to test mediaservicesList
        //instance.mediaservicesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediaservicesListBySubscription', function() {
      it('should call mediaservicesListBySubscription successfully', function(done) {
        //uncomment below and update the code to test mediaservicesListBySubscription
        //instance.mediaservicesListBySubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediaservicesSyncStorageKeys', function() {
      it('should call mediaservicesSyncStorageKeys successfully', function(done) {
        //uncomment below and update the code to test mediaservicesSyncStorageKeys
        //instance.mediaservicesSyncStorageKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mediaservicesUpdate', function() {
      it('should call mediaservicesUpdate successfully', function(done) {
        //uncomment below and update the code to test mediaservicesUpdate
        //instance.mediaservicesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operationsList', function() {
      it('should call operationsList successfully', function(done) {
        //uncomment below and update the code to test operationsList
        //instance.operationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
