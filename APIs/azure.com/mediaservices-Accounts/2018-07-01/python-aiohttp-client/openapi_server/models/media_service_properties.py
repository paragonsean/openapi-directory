# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.storage_account import StorageAccount
from openapi_server import util


class MediaServiceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, media_service_id: str=None, storage_accounts: List[StorageAccount]=None):
        """MediaServiceProperties - a model defined in OpenAPI

        :param media_service_id: The media_service_id of this MediaServiceProperties.
        :param storage_accounts: The storage_accounts of this MediaServiceProperties.
        """
        self.openapi_types = {
            'media_service_id': str,
            'storage_accounts': List[StorageAccount]
        }

        self.attribute_map = {
            'media_service_id': 'mediaServiceId',
            'storage_accounts': 'storageAccounts'
        }

        self._media_service_id = media_service_id
        self._storage_accounts = storage_accounts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MediaServiceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MediaServiceProperties of this MediaServiceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def media_service_id(self):
        """Gets the media_service_id of this MediaServiceProperties.

        The Media Services account ID.

        :return: The media_service_id of this MediaServiceProperties.
        :rtype: str
        """
        return self._media_service_id

    @media_service_id.setter
    def media_service_id(self, media_service_id):
        """Sets the media_service_id of this MediaServiceProperties.

        The Media Services account ID.

        :param media_service_id: The media_service_id of this MediaServiceProperties.
        :type media_service_id: str
        """

        self._media_service_id = media_service_id

    @property
    def storage_accounts(self):
        """Gets the storage_accounts of this MediaServiceProperties.

        The storage accounts for this resource.

        :return: The storage_accounts of this MediaServiceProperties.
        :rtype: List[StorageAccount]
        """
        return self._storage_accounts

    @storage_accounts.setter
    def storage_accounts(self, storage_accounts):
        """Sets the storage_accounts of this MediaServiceProperties.

        The storage accounts for this resource.

        :param storage_accounts: The storage_accounts of this MediaServiceProperties.
        :type storage_accounts: List[StorageAccount]
        """

        self._storage_accounts = storage_accounts
