# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetricDimension(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, name: str=None, to_be_exported_for_shoebox: bool=None):
        """MetricDimension - a model defined in OpenAPI

        :param display_name: The display_name of this MetricDimension.
        :param name: The name of this MetricDimension.
        :param to_be_exported_for_shoebox: The to_be_exported_for_shoebox of this MetricDimension.
        """
        self.openapi_types = {
            'display_name': str,
            'name': str,
            'to_be_exported_for_shoebox': bool
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'name': 'name',
            'to_be_exported_for_shoebox': 'toBeExportedForShoebox'
        }

        self._display_name = display_name
        self._name = name
        self._to_be_exported_for_shoebox = to_be_exported_for_shoebox

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricDimension':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricDimension of this MetricDimension.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this MetricDimension.

        The display name for the dimension.

        :return: The display_name of this MetricDimension.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this MetricDimension.

        The display name for the dimension.

        :param display_name: The display_name of this MetricDimension.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this MetricDimension.

        The metric dimension name.

        :return: The name of this MetricDimension.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MetricDimension.

        The metric dimension name.

        :param name: The name of this MetricDimension.
        :type name: str
        """

        self._name = name

    @property
    def to_be_exported_for_shoebox(self):
        """Gets the to_be_exported_for_shoebox of this MetricDimension.

        Whether to export metric to shoebox.

        :return: The to_be_exported_for_shoebox of this MetricDimension.
        :rtype: bool
        """
        return self._to_be_exported_for_shoebox

    @to_be_exported_for_shoebox.setter
    def to_be_exported_for_shoebox(self, to_be_exported_for_shoebox):
        """Sets the to_be_exported_for_shoebox of this MetricDimension.

        Whether to export metric to shoebox.

        :param to_be_exported_for_shoebox: The to_be_exported_for_shoebox of this MetricDimension.
        :type to_be_exported_for_shoebox: bool
        """

        self._to_be_exported_for_shoebox = to_be_exported_for_shoebox
