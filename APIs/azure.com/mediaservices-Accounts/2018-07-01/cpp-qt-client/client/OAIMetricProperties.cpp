/**
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMetricProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMetricProperties::OAIMetricProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMetricProperties::OAIMetricProperties() {
    this->initializeModel();
}

OAIMetricProperties::~OAIMetricProperties() {}

void OAIMetricProperties::initializeModel() {

    m_service_specification_isSet = false;
    m_service_specification_isValid = false;
}

void OAIMetricProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMetricProperties::fromJsonObject(QJsonObject json) {

    m_service_specification_isValid = ::OpenAPI::fromJsonValue(m_service_specification, json[QString("serviceSpecification")]);
    m_service_specification_isSet = !json[QString("serviceSpecification")].isNull() && m_service_specification_isValid;
}

QString OAIMetricProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMetricProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_service_specification.isSet()) {
        obj.insert(QString("serviceSpecification"), ::OpenAPI::toJsonValue(m_service_specification));
    }
    return obj;
}

OAIServiceSpecification OAIMetricProperties::getServiceSpecification() const {
    return m_service_specification;
}
void OAIMetricProperties::setServiceSpecification(const OAIServiceSpecification &service_specification) {
    m_service_specification = service_specification;
    m_service_specification_isSet = true;
}

bool OAIMetricProperties::is_service_specification_Set() const{
    return m_service_specification_isSet;
}

bool OAIMetricProperties::is_service_specification_Valid() const{
    return m_service_specification_isValid;
}

bool OAIMetricProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMetricProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
