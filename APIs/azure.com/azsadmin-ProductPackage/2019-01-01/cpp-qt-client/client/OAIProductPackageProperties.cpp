/**
 * DeploymentAdminClient
 * Deployment Admin Client.
 *
 * The version of the OpenAPI document: 2019-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductPackageProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductPackageProperties::OAIProductPackageProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductPackageProperties::OAIProductPackageProperties() {
    this->initializeModel();
}

OAIProductPackageProperties::~OAIProductPackageProperties() {}

void OAIProductPackageProperties::initializeModel() {

    m_file_container_id_isSet = false;
    m_file_container_id_isValid = false;

    m_is_deployable_isSet = false;
    m_is_deployable_isValid = false;

    m_is_updatable_isSet = false;
    m_is_updatable_isValid = false;

    m_product_deployment_id_isSet = false;
    m_product_deployment_id_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;
}

void OAIProductPackageProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductPackageProperties::fromJsonObject(QJsonObject json) {

    m_file_container_id_isValid = ::OpenAPI::fromJsonValue(m_file_container_id, json[QString("fileContainerId")]);
    m_file_container_id_isSet = !json[QString("fileContainerId")].isNull() && m_file_container_id_isValid;

    m_is_deployable_isValid = ::OpenAPI::fromJsonValue(m_is_deployable, json[QString("isDeployable")]);
    m_is_deployable_isSet = !json[QString("isDeployable")].isNull() && m_is_deployable_isValid;

    m_is_updatable_isValid = ::OpenAPI::fromJsonValue(m_is_updatable, json[QString("isUpdatable")]);
    m_is_updatable_isSet = !json[QString("isUpdatable")].isNull() && m_is_updatable_isValid;

    m_product_deployment_id_isValid = ::OpenAPI::fromJsonValue(m_product_deployment_id, json[QString("productDeploymentId")]);
    m_product_deployment_id_isSet = !json[QString("productDeploymentId")].isNull() && m_product_deployment_id_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;
}

QString OAIProductPackageProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductPackageProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_file_container_id_isSet) {
        obj.insert(QString("fileContainerId"), ::OpenAPI::toJsonValue(m_file_container_id));
    }
    if (m_is_deployable_isSet) {
        obj.insert(QString("isDeployable"), ::OpenAPI::toJsonValue(m_is_deployable));
    }
    if (m_is_updatable_isSet) {
        obj.insert(QString("isUpdatable"), ::OpenAPI::toJsonValue(m_is_updatable));
    }
    if (m_product_deployment_id_isSet) {
        obj.insert(QString("productDeploymentId"), ::OpenAPI::toJsonValue(m_product_deployment_id));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    return obj;
}

QString OAIProductPackageProperties::getFileContainerId() const {
    return m_file_container_id;
}
void OAIProductPackageProperties::setFileContainerId(const QString &file_container_id) {
    m_file_container_id = file_container_id;
    m_file_container_id_isSet = true;
}

bool OAIProductPackageProperties::is_file_container_id_Set() const{
    return m_file_container_id_isSet;
}

bool OAIProductPackageProperties::is_file_container_id_Valid() const{
    return m_file_container_id_isValid;
}

bool OAIProductPackageProperties::isIsDeployable() const {
    return m_is_deployable;
}
void OAIProductPackageProperties::setIsDeployable(const bool &is_deployable) {
    m_is_deployable = is_deployable;
    m_is_deployable_isSet = true;
}

bool OAIProductPackageProperties::is_is_deployable_Set() const{
    return m_is_deployable_isSet;
}

bool OAIProductPackageProperties::is_is_deployable_Valid() const{
    return m_is_deployable_isValid;
}

bool OAIProductPackageProperties::isIsUpdatable() const {
    return m_is_updatable;
}
void OAIProductPackageProperties::setIsUpdatable(const bool &is_updatable) {
    m_is_updatable = is_updatable;
    m_is_updatable_isSet = true;
}

bool OAIProductPackageProperties::is_is_updatable_Set() const{
    return m_is_updatable_isSet;
}

bool OAIProductPackageProperties::is_is_updatable_Valid() const{
    return m_is_updatable_isValid;
}

QString OAIProductPackageProperties::getProductDeploymentId() const {
    return m_product_deployment_id;
}
void OAIProductPackageProperties::setProductDeploymentId(const QString &product_deployment_id) {
    m_product_deployment_id = product_deployment_id;
    m_product_deployment_id_isSet = true;
}

bool OAIProductPackageProperties::is_product_deployment_id_Set() const{
    return m_product_deployment_id_isSet;
}

bool OAIProductPackageProperties::is_product_deployment_id_Valid() const{
    return m_product_deployment_id_isValid;
}

QString OAIProductPackageProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIProductPackageProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIProductPackageProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIProductPackageProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

bool OAIProductPackageProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_container_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_deployable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_updatable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_deployment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductPackageProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
