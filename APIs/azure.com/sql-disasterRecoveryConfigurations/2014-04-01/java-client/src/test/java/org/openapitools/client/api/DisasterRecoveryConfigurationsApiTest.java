/*
 * Azure SQL Database disaster recovery configurations
 * Provides create, read, update, delete, and failover functionality for Azure SQL Database disaster recovery configurations.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DisasterRecoveryConfiguration;
import org.openapitools.client.model.DisasterRecoveryConfigurationListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DisasterRecoveryConfigurationsApi
 */
@Disabled
public class DisasterRecoveryConfigurationsApiTest {

    private final DisasterRecoveryConfigurationsApi api = new DisasterRecoveryConfigurationsApi();

    /**
     * Creates or updates a disaster recovery configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disasterRecoveryConfigurationsCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String disasterRecoveryConfigurationName = null;
        DisasterRecoveryConfiguration response = api.disasterRecoveryConfigurationsCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, serverName, disasterRecoveryConfigurationName);
        // TODO: test validations
    }

    /**
     * Deletes a disaster recovery configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disasterRecoveryConfigurationsDeleteTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String disasterRecoveryConfigurationName = null;
        api.disasterRecoveryConfigurationsDelete(apiVersion, subscriptionId, resourceGroupName, serverName, disasterRecoveryConfigurationName);
        // TODO: test validations
    }

    /**
     * Fails over from the current primary server to this server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disasterRecoveryConfigurationsFailoverTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String disasterRecoveryConfigurationName = null;
        api.disasterRecoveryConfigurationsFailover(apiVersion, subscriptionId, resourceGroupName, serverName, disasterRecoveryConfigurationName);
        // TODO: test validations
    }

    /**
     * Fails over from the current primary server to this server. This operation might result in data loss.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disasterRecoveryConfigurationsFailoverAllowDataLossTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String disasterRecoveryConfigurationName = null;
        api.disasterRecoveryConfigurationsFailoverAllowDataLoss(apiVersion, subscriptionId, resourceGroupName, serverName, disasterRecoveryConfigurationName);
        // TODO: test validations
    }

    /**
     * Gets a disaster recovery configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disasterRecoveryConfigurationsGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String disasterRecoveryConfigurationName = null;
        DisasterRecoveryConfiguration response = api.disasterRecoveryConfigurationsGet(apiVersion, subscriptionId, resourceGroupName, serverName, disasterRecoveryConfigurationName);
        // TODO: test validations
    }

    /**
     * Lists a server&#39;s disaster recovery configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disasterRecoveryConfigurationsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        DisasterRecoveryConfigurationListResult response = api.disasterRecoveryConfigurationsList(apiVersion, subscriptionId, resourceGroupName, serverName);
        // TODO: test validations
    }

}
