# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class Nfs3Target(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target: str=None, usage_model: str=None):
        """Nfs3Target - a model defined in OpenAPI

        :param target: The target of this Nfs3Target.
        :param usage_model: The usage_model of this Nfs3Target.
        """
        self.openapi_types = {
            'target': str,
            'usage_model': str
        }

        self.attribute_map = {
            'target': 'target',
            'usage_model': 'usageModel'
        }

        self._target = target
        self._usage_model = usage_model

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Nfs3Target':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Nfs3Target of this Nfs3Target.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target(self):
        """Gets the target of this Nfs3Target.

        IP address or host name of an NFSv3 host (e.g., 10.0.44.44).

        :return: The target of this Nfs3Target.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this Nfs3Target.

        IP address or host name of an NFSv3 host (e.g., 10.0.44.44).

        :param target: The target of this Nfs3Target.
        :type target: str
        """
        if target is not None and not re.search(r'^[-.0-9a-zA-Z]+$', target):
            raise ValueError("Invalid value for `target`, must be a follow pattern or equal to `/^[-.0-9a-zA-Z]+$/`")

        self._target = target

    @property
    def usage_model(self):
        """Gets the usage_model of this Nfs3Target.

        Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels

        :return: The usage_model of this Nfs3Target.
        :rtype: str
        """
        return self._usage_model

    @usage_model.setter
    def usage_model(self, usage_model):
        """Sets the usage_model of this Nfs3Target.

        Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels

        :param usage_model: The usage_model of this Nfs3Target.
        :type usage_model: str
        """

        self._usage_model = usage_model
