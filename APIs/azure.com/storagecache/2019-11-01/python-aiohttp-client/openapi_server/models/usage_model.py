# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.usage_model_display import UsageModelDisplay
from openapi_server import util


class UsageModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display: UsageModelDisplay=None, model_name: str=None, target_type: str=None):
        """UsageModel - a model defined in OpenAPI

        :param display: The display of this UsageModel.
        :param model_name: The model_name of this UsageModel.
        :param target_type: The target_type of this UsageModel.
        """
        self.openapi_types = {
            'display': UsageModelDisplay,
            'model_name': str,
            'target_type': str
        }

        self.attribute_map = {
            'display': 'display',
            'model_name': 'modelName',
            'target_type': 'targetType'
        }

        self._display = display
        self._model_name = model_name
        self._target_type = target_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsageModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UsageModel of this UsageModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display(self):
        """Gets the display of this UsageModel.


        :return: The display of this UsageModel.
        :rtype: UsageModelDisplay
        """
        return self._display

    @display.setter
    def display(self, display):
        """Sets the display of this UsageModel.


        :param display: The display of this UsageModel.
        :type display: UsageModelDisplay
        """

        self._display = display

    @property
    def model_name(self):
        """Gets the model_name of this UsageModel.

        Non-localized keyword name for this usage model.

        :return: The model_name of this UsageModel.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this UsageModel.

        Non-localized keyword name for this usage model.

        :param model_name: The model_name of this UsageModel.
        :type model_name: str
        """

        self._model_name = model_name

    @property
    def target_type(self):
        """Gets the target_type of this UsageModel.

        The type of Storage Target to which this model is applicable (only nfs3 as of this version).

        :return: The target_type of this UsageModel.
        :rtype: str
        """
        return self._target_type

    @target_type.setter
    def target_type(self, target_type):
        """Sets the target_type of this UsageModel.

        The type of Storage Target to which this model is applicable (only nfs3 as of this version).

        :param target_type: The target_type of this UsageModel.
        :type target_type: str
        """

        self._target_type = target_type
