/**
 * Storage Cache Mgmt Client
 * A Storage Cache provides scalable caching service for NAS clients, serving data from either NFSv3 or Blob at-rest storage (referred to as \"Storage Targets\"). These operations allow you to manage Caches.
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUsageModel.h
 *
 * A usage model.
 */

#ifndef OAIUsageModel_H
#define OAIUsageModel_H

#include <QJsonObject>

#include "OAIUsageModel_display.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUsageModel_display;

class OAIUsageModel : public OAIObject {
public:
    OAIUsageModel();
    OAIUsageModel(QString json);
    ~OAIUsageModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUsageModel_display getDisplay() const;
    void setDisplay(const OAIUsageModel_display &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    QString getModelName() const;
    void setModelName(const QString &model_name);
    bool is_model_name_Set() const;
    bool is_model_name_Valid() const;

    QString getTargetType() const;
    void setTargetType(const QString &target_type);
    bool is_target_type_Set() const;
    bool is_target_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUsageModel_display m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    QString m_model_name;
    bool m_model_name_isSet;
    bool m_model_name_isValid;

    QString m_target_type;
    bool m_target_type_isSet;
    bool m_target_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUsageModel)

#endif // OAIUsageModel_H
