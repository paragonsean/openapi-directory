/**
 * Storage Cache Mgmt Client
 * A Storage Cache provides scalable caching service for NAS clients, serving data from either NFSv3 or Blob at-rest storage (referred to as \"Storage Targets\"). These operations allow you to manage caches.
 *
 * The version of the OpenAPI document: 2019-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINamespaceJunction.h
 *
 * A namespace junction.
 */

#ifndef OAINamespaceJunction_H
#define OAINamespaceJunction_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINamespaceJunction : public OAIObject {
public:
    OAINamespaceJunction();
    OAINamespaceJunction(QString json);
    ~OAINamespaceJunction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNamespacePath() const;
    void setNamespacePath(const QString &namespace_path);
    bool is_namespace_path_Set() const;
    bool is_namespace_path_Valid() const;

    QString getNfsExport() const;
    void setNfsExport(const QString &nfs_export);
    bool is_nfs_export_Set() const;
    bool is_nfs_export_Valid() const;

    QString getTargetPath() const;
    void setTargetPath(const QString &target_path);
    bool is_target_path_Set() const;
    bool is_target_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_namespace_path;
    bool m_namespace_path_isSet;
    bool m_namespace_path_isValid;

    QString m_nfs_export;
    bool m_nfs_export_isSet;
    bool m_nfs_export_isValid;

    QString m_target_path;
    bool m_target_path_isSet;
    bool m_target_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINamespaceJunction)

#endif // OAINamespaceJunction_H
