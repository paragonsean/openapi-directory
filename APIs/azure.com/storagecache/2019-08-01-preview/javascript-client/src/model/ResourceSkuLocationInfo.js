/**
 * Storage Cache Mgmt Client
 * A Storage Cache provides scalable caching service for NAS clients, serving data from either NFSv3 or Blob at-rest storage (referred to as \"Storage Targets\"). These operations allow you to manage caches.
 *
 * The version of the OpenAPI document: 2019-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceSkuLocationInfo model module.
 * @module model/ResourceSkuLocationInfo
 * @version 2019-08-01-preview
 */
class ResourceSkuLocationInfo {
    /**
     * Constructs a new <code>ResourceSkuLocationInfo</code>.
     * Resource SKU location information.
     * @alias module:model/ResourceSkuLocationInfo
     */
    constructor() { 
        
        ResourceSkuLocationInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceSkuLocationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceSkuLocationInfo} obj Optional instance to populate.
     * @return {module:model/ResourceSkuLocationInfo} The populated <code>ResourceSkuLocationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceSkuLocationInfo();

            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('zones')) {
                obj['zones'] = ApiClient.convertToType(data['zones'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceSkuLocationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceSkuLocationInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['zones'])) {
            throw new Error("Expected the field `zones` to be an array in the JSON data but got " + data['zones']);
        }

        return true;
    }


}



/**
 * Location where this Sku is available
 * @member {String} location
 */
ResourceSkuLocationInfo.prototype['location'] = undefined;

/**
 * Zones if any.
 * @member {Array.<String>} zones
 */
ResourceSkuLocationInfo.prototype['zones'] = undefined;






export default ResourceSkuLocationInfo;

