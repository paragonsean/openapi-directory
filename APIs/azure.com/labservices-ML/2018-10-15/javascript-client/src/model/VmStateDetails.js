/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VmStateDetails model module.
 * @module model/VmStateDetails
 * @version 2018-10-15
 */
class VmStateDetails {
    /**
     * Constructs a new <code>VmStateDetails</code>.
     * Details about the state of the reference virtual machine.
     * @alias module:model/VmStateDetails
     */
    constructor() { 
        
        VmStateDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VmStateDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VmStateDetails} obj Optional instance to populate.
     * @return {module:model/VmStateDetails} The populated <code>VmStateDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VmStateDetails();

            if (data.hasOwnProperty('lastKnownPowerState')) {
                obj['lastKnownPowerState'] = ApiClient.convertToType(data['lastKnownPowerState'], 'String');
            }
            if (data.hasOwnProperty('powerState')) {
                obj['powerState'] = ApiClient.convertToType(data['powerState'], 'String');
            }
            if (data.hasOwnProperty('rdpAuthority')) {
                obj['rdpAuthority'] = ApiClient.convertToType(data['rdpAuthority'], 'String');
            }
            if (data.hasOwnProperty('sshAuthority')) {
                obj['sshAuthority'] = ApiClient.convertToType(data['sshAuthority'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VmStateDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VmStateDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lastKnownPowerState'] && !(typeof data['lastKnownPowerState'] === 'string' || data['lastKnownPowerState'] instanceof String)) {
            throw new Error("Expected the field `lastKnownPowerState` to be a primitive type in the JSON string but got " + data['lastKnownPowerState']);
        }
        // ensure the json data is a string
        if (data['powerState'] && !(typeof data['powerState'] === 'string' || data['powerState'] instanceof String)) {
            throw new Error("Expected the field `powerState` to be a primitive type in the JSON string but got " + data['powerState']);
        }
        // ensure the json data is a string
        if (data['rdpAuthority'] && !(typeof data['rdpAuthority'] === 'string' || data['rdpAuthority'] instanceof String)) {
            throw new Error("Expected the field `rdpAuthority` to be a primitive type in the JSON string but got " + data['rdpAuthority']);
        }
        // ensure the json data is a string
        if (data['sshAuthority'] && !(typeof data['sshAuthority'] === 'string' || data['sshAuthority'] instanceof String)) {
            throw new Error("Expected the field `sshAuthority` to be a primitive type in the JSON string but got " + data['sshAuthority']);
        }

        return true;
    }


}



/**
 * Last known compute power state captured in DTL
 * @member {String} lastKnownPowerState
 */
VmStateDetails.prototype['lastKnownPowerState'] = undefined;

/**
 * The power state of the reference virtual machine.
 * @member {String} powerState
 */
VmStateDetails.prototype['powerState'] = undefined;

/**
 * The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
 * @member {String} rdpAuthority
 */
VmStateDetails.prototype['rdpAuthority'] = undefined;

/**
 * The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
 * @member {String} sshAuthority
 */
VmStateDetails.prototype['sshAuthority'] = undefined;






export default VmStateDetails;

