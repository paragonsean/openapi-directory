/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LatestOperationResult from './LatestOperationResult';
import NetworkInterface from './NetworkInterface';
import ResourceSet from './ResourceSet';

/**
 * The EnvironmentProperties model module.
 * @module model/EnvironmentProperties
 * @version 2018-10-15
 */
class EnvironmentProperties {
    /**
     * Constructs a new <code>EnvironmentProperties</code>.
     * Properties of an environment
     * @alias module:model/EnvironmentProperties
     */
    constructor() { 
        
        EnvironmentProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnvironmentProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnvironmentProperties} obj Optional instance to populate.
     * @return {module:model/EnvironmentProperties} The populated <code>EnvironmentProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnvironmentProperties();

            if (data.hasOwnProperty('claimedByUserName')) {
                obj['claimedByUserName'] = ApiClient.convertToType(data['claimedByUserName'], 'String');
            }
            if (data.hasOwnProperty('claimedByUserObjectId')) {
                obj['claimedByUserObjectId'] = ApiClient.convertToType(data['claimedByUserObjectId'], 'String');
            }
            if (data.hasOwnProperty('claimedByUserPrincipalId')) {
                obj['claimedByUserPrincipalId'] = ApiClient.convertToType(data['claimedByUserPrincipalId'], 'String');
            }
            if (data.hasOwnProperty('isClaimed')) {
                obj['isClaimed'] = ApiClient.convertToType(data['isClaimed'], 'Boolean');
            }
            if (data.hasOwnProperty('lastKnownPowerState')) {
                obj['lastKnownPowerState'] = ApiClient.convertToType(data['lastKnownPowerState'], 'String');
            }
            if (data.hasOwnProperty('latestOperationResult')) {
                obj['latestOperationResult'] = LatestOperationResult.constructFromObject(data['latestOperationResult']);
            }
            if (data.hasOwnProperty('networkInterface')) {
                obj['networkInterface'] = NetworkInterface.constructFromObject(data['networkInterface']);
            }
            if (data.hasOwnProperty('passwordLastReset')) {
                obj['passwordLastReset'] = ApiClient.convertToType(data['passwordLastReset'], 'Date');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('resourceSets')) {
                obj['resourceSets'] = ResourceSet.constructFromObject(data['resourceSets']);
            }
            if (data.hasOwnProperty('totalUsage')) {
                obj['totalUsage'] = ApiClient.convertToType(data['totalUsage'], 'String');
            }
            if (data.hasOwnProperty('uniqueIdentifier')) {
                obj['uniqueIdentifier'] = ApiClient.convertToType(data['uniqueIdentifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnvironmentProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnvironmentProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['claimedByUserName'] && !(typeof data['claimedByUserName'] === 'string' || data['claimedByUserName'] instanceof String)) {
            throw new Error("Expected the field `claimedByUserName` to be a primitive type in the JSON string but got " + data['claimedByUserName']);
        }
        // ensure the json data is a string
        if (data['claimedByUserObjectId'] && !(typeof data['claimedByUserObjectId'] === 'string' || data['claimedByUserObjectId'] instanceof String)) {
            throw new Error("Expected the field `claimedByUserObjectId` to be a primitive type in the JSON string but got " + data['claimedByUserObjectId']);
        }
        // ensure the json data is a string
        if (data['claimedByUserPrincipalId'] && !(typeof data['claimedByUserPrincipalId'] === 'string' || data['claimedByUserPrincipalId'] instanceof String)) {
            throw new Error("Expected the field `claimedByUserPrincipalId` to be a primitive type in the JSON string but got " + data['claimedByUserPrincipalId']);
        }
        // ensure the json data is a string
        if (data['lastKnownPowerState'] && !(typeof data['lastKnownPowerState'] === 'string' || data['lastKnownPowerState'] instanceof String)) {
            throw new Error("Expected the field `lastKnownPowerState` to be a primitive type in the JSON string but got " + data['lastKnownPowerState']);
        }
        // validate the optional field `latestOperationResult`
        if (data['latestOperationResult']) { // data not null
          LatestOperationResult.validateJSON(data['latestOperationResult']);
        }
        // validate the optional field `networkInterface`
        if (data['networkInterface']) { // data not null
          NetworkInterface.validateJSON(data['networkInterface']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `resourceSets`
        if (data['resourceSets']) { // data not null
          ResourceSet.validateJSON(data['resourceSets']);
        }
        // ensure the json data is a string
        if (data['totalUsage'] && !(typeof data['totalUsage'] === 'string' || data['totalUsage'] instanceof String)) {
            throw new Error("Expected the field `totalUsage` to be a primitive type in the JSON string but got " + data['totalUsage']);
        }
        // ensure the json data is a string
        if (data['uniqueIdentifier'] && !(typeof data['uniqueIdentifier'] === 'string' || data['uniqueIdentifier'] instanceof String)) {
            throw new Error("Expected the field `uniqueIdentifier` to be a primitive type in the JSON string but got " + data['uniqueIdentifier']);
        }

        return true;
    }


}



/**
 * The name or email address of the user who has claimed the environment
 * @member {String} claimedByUserName
 */
EnvironmentProperties.prototype['claimedByUserName'] = undefined;

/**
 * The AAD object Id of the user who has claimed the environment
 * @member {String} claimedByUserObjectId
 */
EnvironmentProperties.prototype['claimedByUserObjectId'] = undefined;

/**
 * The user principal Id of the user who has claimed the environment
 * @member {String} claimedByUserPrincipalId
 */
EnvironmentProperties.prototype['claimedByUserPrincipalId'] = undefined;

/**
 * Is the environment claimed or not
 * @member {Boolean} isClaimed
 */
EnvironmentProperties.prototype['isClaimed'] = undefined;

/**
 * Last known power state of the environment
 * @member {String} lastKnownPowerState
 */
EnvironmentProperties.prototype['lastKnownPowerState'] = undefined;

/**
 * @member {module:model/LatestOperationResult} latestOperationResult
 */
EnvironmentProperties.prototype['latestOperationResult'] = undefined;

/**
 * @member {module:model/NetworkInterface} networkInterface
 */
EnvironmentProperties.prototype['networkInterface'] = undefined;

/**
 * When the password was last reset on the environment.
 * @member {Date} passwordLastReset
 */
EnvironmentProperties.prototype['passwordLastReset'] = undefined;

/**
 * The provisioning status of the resource.
 * @member {String} provisioningState
 */
EnvironmentProperties.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/ResourceSet} resourceSets
 */
EnvironmentProperties.prototype['resourceSets'] = undefined;

/**
 * How long the environment has been used by a lab user
 * @member {String} totalUsage
 */
EnvironmentProperties.prototype['totalUsage'] = undefined;

/**
 * The unique immutable identifier of a resource (Guid).
 * @member {String} uniqueIdentifier
 */
EnvironmentProperties.prototype['uniqueIdentifier'] = undefined;






export default EnvironmentProperties;

