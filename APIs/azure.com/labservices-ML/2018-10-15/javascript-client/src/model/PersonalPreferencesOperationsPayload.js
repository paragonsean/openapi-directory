/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PersonalPreferencesOperationsPayload model module.
 * @module model/PersonalPreferencesOperationsPayload
 * @version 2018-10-15
 */
class PersonalPreferencesOperationsPayload {
    /**
     * Constructs a new <code>PersonalPreferencesOperationsPayload</code>.
     * Represents payload for any Environment operations like get, start, stop, connect
     * @alias module:model/PersonalPreferencesOperationsPayload
     */
    constructor() { 
        
        PersonalPreferencesOperationsPayload.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PersonalPreferencesOperationsPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PersonalPreferencesOperationsPayload} obj Optional instance to populate.
     * @return {module:model/PersonalPreferencesOperationsPayload} The populated <code>PersonalPreferencesOperationsPayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PersonalPreferencesOperationsPayload();

            if (data.hasOwnProperty('addRemove')) {
                obj['addRemove'] = ApiClient.convertToType(data['addRemove'], 'String');
            }
            if (data.hasOwnProperty('labAccountResourceId')) {
                obj['labAccountResourceId'] = ApiClient.convertToType(data['labAccountResourceId'], 'String');
            }
            if (data.hasOwnProperty('labResourceId')) {
                obj['labResourceId'] = ApiClient.convertToType(data['labResourceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PersonalPreferencesOperationsPayload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PersonalPreferencesOperationsPayload</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['addRemove'] && !(typeof data['addRemove'] === 'string' || data['addRemove'] instanceof String)) {
            throw new Error("Expected the field `addRemove` to be a primitive type in the JSON string but got " + data['addRemove']);
        }
        // ensure the json data is a string
        if (data['labAccountResourceId'] && !(typeof data['labAccountResourceId'] === 'string' || data['labAccountResourceId'] instanceof String)) {
            throw new Error("Expected the field `labAccountResourceId` to be a primitive type in the JSON string but got " + data['labAccountResourceId']);
        }
        // ensure the json data is a string
        if (data['labResourceId'] && !(typeof data['labResourceId'] === 'string' || data['labResourceId'] instanceof String)) {
            throw new Error("Expected the field `labResourceId` to be a primitive type in the JSON string but got " + data['labResourceId']);
        }

        return true;
    }


}



/**
 * Enum indicating if user is adding or removing a favorite lab
 * @member {module:model/PersonalPreferencesOperationsPayload.AddRemoveEnum} addRemove
 */
PersonalPreferencesOperationsPayload.prototype['addRemove'] = undefined;

/**
 * Resource Id of the lab account
 * @member {String} labAccountResourceId
 */
PersonalPreferencesOperationsPayload.prototype['labAccountResourceId'] = undefined;

/**
 * Resource Id of the lab to add/remove from the favorites list
 * @member {String} labResourceId
 */
PersonalPreferencesOperationsPayload.prototype['labResourceId'] = undefined;





/**
 * Allowed values for the <code>addRemove</code> property.
 * @enum {String}
 * @readonly
 */
PersonalPreferencesOperationsPayload['AddRemoveEnum'] = {

    /**
     * value: "Add"
     * @const
     */
    "Add": "Add",

    /**
     * value: "Remove"
     * @const
     */
    "Remove": "Remove"
};



export default PersonalPreferencesOperationsPayload;

