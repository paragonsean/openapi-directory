/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReferenceVmCreationParameters from './ReferenceVmCreationParameters';

/**
 * The ResourceSettingCreationParameters model module.
 * @module model/ResourceSettingCreationParameters
 * @version 2018-10-15
 */
class ResourceSettingCreationParameters {
    /**
     * Constructs a new <code>ResourceSettingCreationParameters</code>.
     * Represents resource specific settings
     * @alias module:model/ResourceSettingCreationParameters
     * @param galleryImageResourceId {String} The resource id of the gallery image used for creating the virtual machine
     * @param referenceVmCreationParameters {module:model/ReferenceVmCreationParameters} 
     */
    constructor(galleryImageResourceId, referenceVmCreationParameters) { 
        
        ResourceSettingCreationParameters.initialize(this, galleryImageResourceId, referenceVmCreationParameters);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, galleryImageResourceId, referenceVmCreationParameters) { 
        obj['galleryImageResourceId'] = galleryImageResourceId;
        obj['referenceVmCreationParameters'] = referenceVmCreationParameters;
    }

    /**
     * Constructs a <code>ResourceSettingCreationParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceSettingCreationParameters} obj Optional instance to populate.
     * @return {module:model/ResourceSettingCreationParameters} The populated <code>ResourceSettingCreationParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceSettingCreationParameters();

            if (data.hasOwnProperty('galleryImageResourceId')) {
                obj['galleryImageResourceId'] = ApiClient.convertToType(data['galleryImageResourceId'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('referenceVmCreationParameters')) {
                obj['referenceVmCreationParameters'] = ReferenceVmCreationParameters.constructFromObject(data['referenceVmCreationParameters']);
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceSettingCreationParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceSettingCreationParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResourceSettingCreationParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['galleryImageResourceId'] && !(typeof data['galleryImageResourceId'] === 'string' || data['galleryImageResourceId'] instanceof String)) {
            throw new Error("Expected the field `galleryImageResourceId` to be a primitive type in the JSON string but got " + data['galleryImageResourceId']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `referenceVmCreationParameters`
        if (data['referenceVmCreationParameters']) { // data not null
          ReferenceVmCreationParameters.validateJSON(data['referenceVmCreationParameters']);
        }
        // ensure the json data is a string
        if (data['size'] && !(typeof data['size'] === 'string' || data['size'] instanceof String)) {
            throw new Error("Expected the field `size` to be a primitive type in the JSON string but got " + data['size']);
        }

        return true;
    }


}

ResourceSettingCreationParameters.RequiredProperties = ["galleryImageResourceId", "referenceVmCreationParameters"];

/**
 * The resource id of the gallery image used for creating the virtual machine
 * @member {String} galleryImageResourceId
 */
ResourceSettingCreationParameters.prototype['galleryImageResourceId'] = undefined;

/**
 * The location where the virtual machine will live
 * @member {String} location
 */
ResourceSettingCreationParameters.prototype['location'] = undefined;

/**
 * The name of the resource setting
 * @member {String} name
 */
ResourceSettingCreationParameters.prototype['name'] = undefined;

/**
 * @member {module:model/ReferenceVmCreationParameters} referenceVmCreationParameters
 */
ResourceSettingCreationParameters.prototype['referenceVmCreationParameters'] = undefined;

/**
 * The size of the virtual machine
 * @member {module:model/ResourceSettingCreationParameters.SizeEnum} size
 */
ResourceSettingCreationParameters.prototype['size'] = undefined;





/**
 * Allowed values for the <code>size</code> property.
 * @enum {String}
 * @readonly
 */
ResourceSettingCreationParameters['SizeEnum'] = {

    /**
     * value: "Basic"
     * @const
     */
    "Basic": "Basic",

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard",

    /**
     * value: "Performance"
     * @const
     */
    "Performance": "Performance"
};



export default ResourceSettingCreationParameters;

