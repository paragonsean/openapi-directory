/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetPersonalPreferencesResponse model module.
 * @module model/GetPersonalPreferencesResponse
 * @version 2018-10-15
 */
class GetPersonalPreferencesResponse {
    /**
     * Constructs a new <code>GetPersonalPreferencesResponse</code>.
     * Represents the PersonalPreferences for the user
     * @alias module:model/GetPersonalPreferencesResponse
     */
    constructor() { 
        
        GetPersonalPreferencesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetPersonalPreferencesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetPersonalPreferencesResponse} obj Optional instance to populate.
     * @return {module:model/GetPersonalPreferencesResponse} The populated <code>GetPersonalPreferencesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetPersonalPreferencesResponse();

            if (data.hasOwnProperty('favoriteLabResourceIds')) {
                obj['favoriteLabResourceIds'] = ApiClient.convertToType(data['favoriteLabResourceIds'], ['String']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetPersonalPreferencesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetPersonalPreferencesResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['favoriteLabResourceIds'])) {
            throw new Error("Expected the field `favoriteLabResourceIds` to be an array in the JSON data but got " + data['favoriteLabResourceIds']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}



/**
 * Array of favorite lab resource ids
 * @member {Array.<String>} favoriteLabResourceIds
 */
GetPersonalPreferencesResponse.prototype['favoriteLabResourceIds'] = undefined;

/**
 * Id to be used by the cache orchestrator
 * @member {String} id
 */
GetPersonalPreferencesResponse.prototype['id'] = undefined;






export default GetPersonalPreferencesResponse;

