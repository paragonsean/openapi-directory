/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GalleryImageReference from './GalleryImageReference';
import LatestOperationResult from './LatestOperationResult';

/**
 * The GalleryImageProperties model module.
 * @module model/GalleryImageProperties
 * @version 2018-10-15
 */
class GalleryImageProperties {
    /**
     * Constructs a new <code>GalleryImageProperties</code>.
     * The gallery image properties
     * @alias module:model/GalleryImageProperties
     */
    constructor() { 
        
        GalleryImageProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GalleryImageProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GalleryImageProperties} obj Optional instance to populate.
     * @return {module:model/GalleryImageProperties} The populated <code>GalleryImageProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GalleryImageProperties();

            if (data.hasOwnProperty('author')) {
                obj['author'] = ApiClient.convertToType(data['author'], 'String');
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = ApiClient.convertToType(data['icon'], 'String');
            }
            if (data.hasOwnProperty('imageReference')) {
                obj['imageReference'] = GalleryImageReference.constructFromObject(data['imageReference']);
            }
            if (data.hasOwnProperty('isEnabled')) {
                obj['isEnabled'] = ApiClient.convertToType(data['isEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('isOverride')) {
                obj['isOverride'] = ApiClient.convertToType(data['isOverride'], 'Boolean');
            }
            if (data.hasOwnProperty('isPlanAuthorized')) {
                obj['isPlanAuthorized'] = ApiClient.convertToType(data['isPlanAuthorized'], 'Boolean');
            }
            if (data.hasOwnProperty('latestOperationResult')) {
                obj['latestOperationResult'] = LatestOperationResult.constructFromObject(data['latestOperationResult']);
            }
            if (data.hasOwnProperty('planId')) {
                obj['planId'] = ApiClient.convertToType(data['planId'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('uniqueIdentifier')) {
                obj['uniqueIdentifier'] = ApiClient.convertToType(data['uniqueIdentifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GalleryImageProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GalleryImageProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['author'] && !(typeof data['author'] === 'string' || data['author'] instanceof String)) {
            throw new Error("Expected the field `author` to be a primitive type in the JSON string but got " + data['author']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['icon'] && !(typeof data['icon'] === 'string' || data['icon'] instanceof String)) {
            throw new Error("Expected the field `icon` to be a primitive type in the JSON string but got " + data['icon']);
        }
        // validate the optional field `imageReference`
        if (data['imageReference']) { // data not null
          GalleryImageReference.validateJSON(data['imageReference']);
        }
        // validate the optional field `latestOperationResult`
        if (data['latestOperationResult']) { // data not null
          LatestOperationResult.validateJSON(data['latestOperationResult']);
        }
        // ensure the json data is a string
        if (data['planId'] && !(typeof data['planId'] === 'string' || data['planId'] instanceof String)) {
            throw new Error("Expected the field `planId` to be a primitive type in the JSON string but got " + data['planId']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['uniqueIdentifier'] && !(typeof data['uniqueIdentifier'] === 'string' || data['uniqueIdentifier'] instanceof String)) {
            throw new Error("Expected the field `uniqueIdentifier` to be a primitive type in the JSON string but got " + data['uniqueIdentifier']);
        }

        return true;
    }


}



/**
 * The author of the gallery image.
 * @member {String} author
 */
GalleryImageProperties.prototype['author'] = undefined;

/**
 * The creation date of the gallery image.
 * @member {Date} createdDate
 */
GalleryImageProperties.prototype['createdDate'] = undefined;

/**
 * The description of the gallery image.
 * @member {String} description
 */
GalleryImageProperties.prototype['description'] = undefined;

/**
 * The icon of the gallery image.
 * @member {String} icon
 */
GalleryImageProperties.prototype['icon'] = undefined;

/**
 * @member {module:model/GalleryImageReference} imageReference
 */
GalleryImageProperties.prototype['imageReference'] = undefined;

/**
 * Indicates whether this gallery image is enabled.
 * @member {Boolean} isEnabled
 */
GalleryImageProperties.prototype['isEnabled'] = undefined;

/**
 * Indicates whether this gallery has been overridden for this lab account
 * @member {Boolean} isOverride
 */
GalleryImageProperties.prototype['isOverride'] = undefined;

/**
 * Indicates if the plan has been authorized for programmatic deployment.
 * @member {Boolean} isPlanAuthorized
 */
GalleryImageProperties.prototype['isPlanAuthorized'] = undefined;

/**
 * @member {module:model/LatestOperationResult} latestOperationResult
 */
GalleryImageProperties.prototype['latestOperationResult'] = undefined;

/**
 * The third party plan that applies to this image
 * @member {String} planId
 */
GalleryImageProperties.prototype['planId'] = undefined;

/**
 * The provisioning status of the resource.
 * @member {String} provisioningState
 */
GalleryImageProperties.prototype['provisioningState'] = undefined;

/**
 * The unique immutable identifier of a resource (Guid).
 * @member {String} uniqueIdentifier
 */
GalleryImageProperties.prototype['uniqueIdentifier'] = undefined;






export default GalleryImageProperties;

