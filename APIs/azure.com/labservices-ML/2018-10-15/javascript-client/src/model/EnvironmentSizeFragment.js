/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SizeInfoFragment from './SizeInfoFragment';

/**
 * The EnvironmentSizeFragment model module.
 * @module model/EnvironmentSizeFragment
 * @version 2018-10-15
 */
class EnvironmentSizeFragment {
    /**
     * Constructs a new <code>EnvironmentSizeFragment</code>.
     * Represents a size category supported by this Lab Account (small, medium or large)
     * @alias module:model/EnvironmentSizeFragment
     */
    constructor() { 
        
        EnvironmentSizeFragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnvironmentSizeFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnvironmentSizeFragment} obj Optional instance to populate.
     * @return {module:model/EnvironmentSizeFragment} The populated <code>EnvironmentSizeFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnvironmentSizeFragment();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('vmSizes')) {
                obj['vmSizes'] = ApiClient.convertToType(data['vmSizes'], [SizeInfoFragment]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnvironmentSizeFragment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnvironmentSizeFragment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['vmSizes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vmSizes'])) {
                throw new Error("Expected the field `vmSizes` to be an array in the JSON data but got " + data['vmSizes']);
            }
            // validate the optional field `vmSizes` (array)
            for (const item of data['vmSizes']) {
                SizeInfoFragment.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The size category
 * @member {module:model/EnvironmentSizeFragment.NameEnum} name
 */
EnvironmentSizeFragment.prototype['name'] = undefined;

/**
 * Represents a set of compute sizes that can serve this given size type
 * @member {Array.<module:model/SizeInfoFragment>} vmSizes
 */
EnvironmentSizeFragment.prototype['vmSizes'] = undefined;





/**
 * Allowed values for the <code>name</code> property.
 * @enum {String}
 * @readonly
 */
EnvironmentSizeFragment['NameEnum'] = {

    /**
     * value: "Basic"
     * @const
     */
    "Basic": "Basic",

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard",

    /**
     * value: "Performance"
     * @const
     */
    "Performance": "Performance"
};



export default EnvironmentSizeFragment;

