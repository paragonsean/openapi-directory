/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnvironmentSettingCreationParameters from './EnvironmentSettingCreationParameters';
import LabCreationParameters from './LabCreationParameters';

/**
 * The CreateLabProperties model module.
 * @module model/CreateLabProperties
 * @version 2018-10-15
 */
class CreateLabProperties {
    /**
     * Constructs a new <code>CreateLabProperties</code>.
     * Properties for creating a managed lab and a default environment setting
     * @alias module:model/CreateLabProperties
     * @param labCreationParameters {module:model/LabCreationParameters} 
     * @param name {String} The name of the resource
     */
    constructor(labCreationParameters, name) { 
        
        CreateLabProperties.initialize(this, labCreationParameters, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, labCreationParameters, name) { 
        obj['labCreationParameters'] = labCreationParameters;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateLabProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateLabProperties} obj Optional instance to populate.
     * @return {module:model/CreateLabProperties} The populated <code>CreateLabProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateLabProperties();

            if (data.hasOwnProperty('environmentSettingCreationParameters')) {
                obj['environmentSettingCreationParameters'] = EnvironmentSettingCreationParameters.constructFromObject(data['environmentSettingCreationParameters']);
            }
            if (data.hasOwnProperty('labCreationParameters')) {
                obj['labCreationParameters'] = LabCreationParameters.constructFromObject(data['labCreationParameters']);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateLabProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateLabProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateLabProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `environmentSettingCreationParameters`
        if (data['environmentSettingCreationParameters']) { // data not null
          EnvironmentSettingCreationParameters.validateJSON(data['environmentSettingCreationParameters']);
        }
        // validate the optional field `labCreationParameters`
        if (data['labCreationParameters']) { // data not null
          LabCreationParameters.validateJSON(data['labCreationParameters']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

CreateLabProperties.RequiredProperties = ["labCreationParameters", "name"];

/**
 * @member {module:model/EnvironmentSettingCreationParameters} environmentSettingCreationParameters
 */
CreateLabProperties.prototype['environmentSettingCreationParameters'] = undefined;

/**
 * @member {module:model/LabCreationParameters} labCreationParameters
 */
CreateLabProperties.prototype['labCreationParameters'] = undefined;

/**
 * The location of the resource
 * @member {String} location
 */
CreateLabProperties.prototype['location'] = undefined;

/**
 * The name of the resource
 * @member {String} name
 */
CreateLabProperties.prototype['name'] = undefined;

/**
 * The tags of the resource.
 * @member {Object.<String, String>} tags
 */
CreateLabProperties.prototype['tags'] = undefined;






export default CreateLabProperties;

