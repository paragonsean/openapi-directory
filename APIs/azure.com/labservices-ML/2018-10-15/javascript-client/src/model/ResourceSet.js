/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceSet model module.
 * @module model/ResourceSet
 * @version 2018-10-15
 */
class ResourceSet {
    /**
     * Constructs a new <code>ResourceSet</code>.
     * Represents a VM and the setting Id it was created for.
     * @alias module:model/ResourceSet
     */
    constructor() { 
        
        ResourceSet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceSet} obj Optional instance to populate.
     * @return {module:model/ResourceSet} The populated <code>ResourceSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceSet();

            if (data.hasOwnProperty('resourceSettingId')) {
                obj['resourceSettingId'] = ApiClient.convertToType(data['resourceSettingId'], 'String');
            }
            if (data.hasOwnProperty('vmResourceId')) {
                obj['vmResourceId'] = ApiClient.convertToType(data['vmResourceId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceSet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['resourceSettingId'] && !(typeof data['resourceSettingId'] === 'string' || data['resourceSettingId'] instanceof String)) {
            throw new Error("Expected the field `resourceSettingId` to be a primitive type in the JSON string but got " + data['resourceSettingId']);
        }
        // ensure the json data is a string
        if (data['vmResourceId'] && !(typeof data['vmResourceId'] === 'string' || data['vmResourceId'] instanceof String)) {
            throw new Error("Expected the field `vmResourceId` to be a primitive type in the JSON string but got " + data['vmResourceId']);
        }

        return true;
    }


}



/**
 * resourceSettingId for the environment
 * @member {String} resourceSettingId
 */
ResourceSet.prototype['resourceSettingId'] = undefined;

/**
 * VM resource Id for the environment
 * @member {String} vmResourceId
 */
ResourceSet.prototype['vmResourceId'] = undefined;






export default ResourceSet;

