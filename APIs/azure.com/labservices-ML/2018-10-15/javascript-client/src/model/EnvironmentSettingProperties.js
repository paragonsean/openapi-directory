/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LatestOperationResult from './LatestOperationResult';
import ResourceSettings from './ResourceSettings';

/**
 * The EnvironmentSettingProperties model module.
 * @module model/EnvironmentSettingProperties
 * @version 2018-10-15
 */
class EnvironmentSettingProperties {
    /**
     * Constructs a new <code>EnvironmentSettingProperties</code>.
     * Properties of an environment setting
     * @alias module:model/EnvironmentSettingProperties
     * @param resourceSettings {module:model/ResourceSettings} 
     */
    constructor(resourceSettings) { 
        
        EnvironmentSettingProperties.initialize(this, resourceSettings);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceSettings) { 
        obj['resourceSettings'] = resourceSettings;
    }

    /**
     * Constructs a <code>EnvironmentSettingProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnvironmentSettingProperties} obj Optional instance to populate.
     * @return {module:model/EnvironmentSettingProperties} The populated <code>EnvironmentSettingProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnvironmentSettingProperties();

            if (data.hasOwnProperty('configurationState')) {
                obj['configurationState'] = ApiClient.convertToType(data['configurationState'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('lastChanged')) {
                obj['lastChanged'] = ApiClient.convertToType(data['lastChanged'], 'Date');
            }
            if (data.hasOwnProperty('lastPublished')) {
                obj['lastPublished'] = ApiClient.convertToType(data['lastPublished'], 'Date');
            }
            if (data.hasOwnProperty('latestOperationResult')) {
                obj['latestOperationResult'] = LatestOperationResult.constructFromObject(data['latestOperationResult']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('publishingState')) {
                obj['publishingState'] = ApiClient.convertToType(data['publishingState'], 'String');
            }
            if (data.hasOwnProperty('resourceSettings')) {
                obj['resourceSettings'] = ResourceSettings.constructFromObject(data['resourceSettings']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('uniqueIdentifier')) {
                obj['uniqueIdentifier'] = ApiClient.convertToType(data['uniqueIdentifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnvironmentSettingProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnvironmentSettingProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EnvironmentSettingProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['configurationState'] && !(typeof data['configurationState'] === 'string' || data['configurationState'] instanceof String)) {
            throw new Error("Expected the field `configurationState` to be a primitive type in the JSON string but got " + data['configurationState']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `latestOperationResult`
        if (data['latestOperationResult']) { // data not null
          LatestOperationResult.validateJSON(data['latestOperationResult']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['publishingState'] && !(typeof data['publishingState'] === 'string' || data['publishingState'] instanceof String)) {
            throw new Error("Expected the field `publishingState` to be a primitive type in the JSON string but got " + data['publishingState']);
        }
        // validate the optional field `resourceSettings`
        if (data['resourceSettings']) { // data not null
          ResourceSettings.validateJSON(data['resourceSettings']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['uniqueIdentifier'] && !(typeof data['uniqueIdentifier'] === 'string' || data['uniqueIdentifier'] instanceof String)) {
            throw new Error("Expected the field `uniqueIdentifier` to be a primitive type in the JSON string but got " + data['uniqueIdentifier']);
        }

        return true;
    }


}

EnvironmentSettingProperties.RequiredProperties = ["resourceSettings"];

/**
 * Describes the user's progress in configuring their environment setting
 * @member {module:model/EnvironmentSettingProperties.ConfigurationStateEnum} configurationState
 */
EnvironmentSettingProperties.prototype['configurationState'] = undefined;

/**
 * Describes the environment and its resource settings
 * @member {String} description
 */
EnvironmentSettingProperties.prototype['description'] = undefined;

/**
 * Time when the template VM was last changed.
 * @member {Date} lastChanged
 */
EnvironmentSettingProperties.prototype['lastChanged'] = undefined;

/**
 * Time when the template VM was last sent for publishing.
 * @member {Date} lastPublished
 */
EnvironmentSettingProperties.prototype['lastPublished'] = undefined;

/**
 * @member {module:model/LatestOperationResult} latestOperationResult
 */
EnvironmentSettingProperties.prototype['latestOperationResult'] = undefined;

/**
 * The provisioning status of the resource.
 * @member {String} provisioningState
 */
EnvironmentSettingProperties.prototype['provisioningState'] = undefined;

/**
 * Describes the readiness of this environment setting
 * @member {module:model/EnvironmentSettingProperties.PublishingStateEnum} publishingState
 */
EnvironmentSettingProperties.prototype['publishingState'] = undefined;

/**
 * @member {module:model/ResourceSettings} resourceSettings
 */
EnvironmentSettingProperties.prototype['resourceSettings'] = undefined;

/**
 * Brief title describing the environment and its resource settings
 * @member {String} title
 */
EnvironmentSettingProperties.prototype['title'] = undefined;

/**
 * The unique immutable identifier of a resource (Guid).
 * @member {String} uniqueIdentifier
 */
EnvironmentSettingProperties.prototype['uniqueIdentifier'] = undefined;





/**
 * Allowed values for the <code>configurationState</code> property.
 * @enum {String}
 * @readonly
 */
EnvironmentSettingProperties['ConfigurationStateEnum'] = {

    /**
     * value: "NotApplicable"
     * @const
     */
    "NotApplicable": "NotApplicable",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed"
};


/**
 * Allowed values for the <code>publishingState</code> property.
 * @enum {String}
 * @readonly
 */
EnvironmentSettingProperties['PublishingStateEnum'] = {

    /**
     * value: "Draft"
     * @const
     */
    "Draft": "Draft",

    /**
     * value: "Publishing"
     * @const
     */
    "Publishing": "Publishing",

    /**
     * value: "Published"
     * @const
     */
    "Published": "Published",

    /**
     * value: "PublishFailed"
     * @const
     */
    "PublishFailed": "PublishFailed",

    /**
     * value: "Scaling"
     * @const
     */
    "Scaling": "Scaling"
};



export default EnvironmentSettingProperties;

