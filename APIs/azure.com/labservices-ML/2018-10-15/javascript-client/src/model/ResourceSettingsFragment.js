/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReferenceVmFragment from './ReferenceVmFragment';

/**
 * The ResourceSettingsFragment model module.
 * @module model/ResourceSettingsFragment
 * @version 2018-10-15
 */
class ResourceSettingsFragment {
    /**
     * Constructs a new <code>ResourceSettingsFragment</code>.
     * Represents resource specific settings
     * @alias module:model/ResourceSettingsFragment
     */
    constructor() { 
        
        ResourceSettingsFragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceSettingsFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceSettingsFragment} obj Optional instance to populate.
     * @return {module:model/ResourceSettingsFragment} The populated <code>ResourceSettingsFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceSettingsFragment();

            if (data.hasOwnProperty('galleryImageResourceId')) {
                obj['galleryImageResourceId'] = ApiClient.convertToType(data['galleryImageResourceId'], 'String');
            }
            if (data.hasOwnProperty('referenceVm')) {
                obj['referenceVm'] = ReferenceVmFragment.constructFromObject(data['referenceVm']);
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceSettingsFragment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceSettingsFragment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['galleryImageResourceId'] && !(typeof data['galleryImageResourceId'] === 'string' || data['galleryImageResourceId'] instanceof String)) {
            throw new Error("Expected the field `galleryImageResourceId` to be a primitive type in the JSON string but got " + data['galleryImageResourceId']);
        }
        // validate the optional field `referenceVm`
        if (data['referenceVm']) { // data not null
          ReferenceVmFragment.validateJSON(data['referenceVm']);
        }
        // ensure the json data is a string
        if (data['size'] && !(typeof data['size'] === 'string' || data['size'] instanceof String)) {
            throw new Error("Expected the field `size` to be a primitive type in the JSON string but got " + data['size']);
        }

        return true;
    }


}



/**
 * The resource id of the gallery image used for creating the virtual machine
 * @member {String} galleryImageResourceId
 */
ResourceSettingsFragment.prototype['galleryImageResourceId'] = undefined;

/**
 * @member {module:model/ReferenceVmFragment} referenceVm
 */
ResourceSettingsFragment.prototype['referenceVm'] = undefined;

/**
 * The size of the virtual machine
 * @member {module:model/ResourceSettingsFragment.SizeEnum} size
 */
ResourceSettingsFragment.prototype['size'] = undefined;





/**
 * Allowed values for the <code>size</code> property.
 * @enum {String}
 * @readonly
 */
ResourceSettingsFragment['SizeEnum'] = {

    /**
     * value: "Basic"
     * @const
     */
    "Basic": "Basic",

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard",

    /**
     * value: "Performance"
     * @const
     */
    "Performance": "Performance"
};



export default ResourceSettingsFragment;

