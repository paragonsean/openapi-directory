/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResetPasswordPayload model module.
 * @module model/ResetPasswordPayload
 * @version 2018-10-15
 */
class ResetPasswordPayload {
    /**
     * Constructs a new <code>ResetPasswordPayload</code>.
     * Represents the payload for resetting passwords.
     * @alias module:model/ResetPasswordPayload
     * @param environmentId {String} The resourceId of the environment
     */
    constructor(environmentId) { 
        
        ResetPasswordPayload.initialize(this, environmentId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, environmentId) { 
        obj['environmentId'] = environmentId;
    }

    /**
     * Constructs a <code>ResetPasswordPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResetPasswordPayload} obj Optional instance to populate.
     * @return {module:model/ResetPasswordPayload} The populated <code>ResetPasswordPayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResetPasswordPayload();

            if (data.hasOwnProperty('environmentId')) {
                obj['environmentId'] = ApiClient.convertToType(data['environmentId'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResetPasswordPayload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResetPasswordPayload</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResetPasswordPayload.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['environmentId'] && !(typeof data['environmentId'] === 'string' || data['environmentId'] instanceof String)) {
            throw new Error("Expected the field `environmentId` to be a primitive type in the JSON string but got " + data['environmentId']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

ResetPasswordPayload.RequiredProperties = ["environmentId"];

/**
 * The resourceId of the environment
 * @member {String} environmentId
 */
ResetPasswordPayload.prototype['environmentId'] = undefined;

/**
 * The password to assign to the user specified in
 * @member {String} password
 */
ResetPasswordPayload.prototype['password'] = undefined;

/**
 * The username for which the password will be reset.
 * @member {String} username
 */
ResetPasswordPayload.prototype['username'] = undefined;






export default ResetPasswordPayload;

