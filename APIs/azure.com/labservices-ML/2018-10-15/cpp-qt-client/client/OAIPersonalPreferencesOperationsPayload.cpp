/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPersonalPreferencesOperationsPayload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPersonalPreferencesOperationsPayload::OAIPersonalPreferencesOperationsPayload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPersonalPreferencesOperationsPayload::OAIPersonalPreferencesOperationsPayload() {
    this->initializeModel();
}

OAIPersonalPreferencesOperationsPayload::~OAIPersonalPreferencesOperationsPayload() {}

void OAIPersonalPreferencesOperationsPayload::initializeModel() {

    m_add_remove_isSet = false;
    m_add_remove_isValid = false;

    m_lab_account_resource_id_isSet = false;
    m_lab_account_resource_id_isValid = false;

    m_lab_resource_id_isSet = false;
    m_lab_resource_id_isValid = false;
}

void OAIPersonalPreferencesOperationsPayload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPersonalPreferencesOperationsPayload::fromJsonObject(QJsonObject json) {

    m_add_remove_isValid = ::OpenAPI::fromJsonValue(m_add_remove, json[QString("addRemove")]);
    m_add_remove_isSet = !json[QString("addRemove")].isNull() && m_add_remove_isValid;

    m_lab_account_resource_id_isValid = ::OpenAPI::fromJsonValue(m_lab_account_resource_id, json[QString("labAccountResourceId")]);
    m_lab_account_resource_id_isSet = !json[QString("labAccountResourceId")].isNull() && m_lab_account_resource_id_isValid;

    m_lab_resource_id_isValid = ::OpenAPI::fromJsonValue(m_lab_resource_id, json[QString("labResourceId")]);
    m_lab_resource_id_isSet = !json[QString("labResourceId")].isNull() && m_lab_resource_id_isValid;
}

QString OAIPersonalPreferencesOperationsPayload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPersonalPreferencesOperationsPayload::asJsonObject() const {
    QJsonObject obj;
    if (m_add_remove_isSet) {
        obj.insert(QString("addRemove"), ::OpenAPI::toJsonValue(m_add_remove));
    }
    if (m_lab_account_resource_id_isSet) {
        obj.insert(QString("labAccountResourceId"), ::OpenAPI::toJsonValue(m_lab_account_resource_id));
    }
    if (m_lab_resource_id_isSet) {
        obj.insert(QString("labResourceId"), ::OpenAPI::toJsonValue(m_lab_resource_id));
    }
    return obj;
}

QString OAIPersonalPreferencesOperationsPayload::getAddRemove() const {
    return m_add_remove;
}
void OAIPersonalPreferencesOperationsPayload::setAddRemove(const QString &add_remove) {
    m_add_remove = add_remove;
    m_add_remove_isSet = true;
}

bool OAIPersonalPreferencesOperationsPayload::is_add_remove_Set() const{
    return m_add_remove_isSet;
}

bool OAIPersonalPreferencesOperationsPayload::is_add_remove_Valid() const{
    return m_add_remove_isValid;
}

QString OAIPersonalPreferencesOperationsPayload::getLabAccountResourceId() const {
    return m_lab_account_resource_id;
}
void OAIPersonalPreferencesOperationsPayload::setLabAccountResourceId(const QString &lab_account_resource_id) {
    m_lab_account_resource_id = lab_account_resource_id;
    m_lab_account_resource_id_isSet = true;
}

bool OAIPersonalPreferencesOperationsPayload::is_lab_account_resource_id_Set() const{
    return m_lab_account_resource_id_isSet;
}

bool OAIPersonalPreferencesOperationsPayload::is_lab_account_resource_id_Valid() const{
    return m_lab_account_resource_id_isValid;
}

QString OAIPersonalPreferencesOperationsPayload::getLabResourceId() const {
    return m_lab_resource_id;
}
void OAIPersonalPreferencesOperationsPayload::setLabResourceId(const QString &lab_resource_id) {
    m_lab_resource_id = lab_resource_id;
    m_lab_resource_id_isSet = true;
}

bool OAIPersonalPreferencesOperationsPayload::is_lab_resource_id_Set() const{
    return m_lab_resource_id_isSet;
}

bool OAIPersonalPreferencesOperationsPayload::is_lab_resource_id_Valid() const{
    return m_lab_resource_id_isValid;
}

bool OAIPersonalPreferencesOperationsPayload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_remove_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lab_account_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lab_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPersonalPreferencesOperationsPayload::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
