/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceVm.h
 *
 * Details of a Reference Vm
 */

#ifndef OAIReferenceVm_H
#define OAIReferenceVm_H

#include <QJsonObject>

#include "OAIVmStateDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVmStateDetails;

class OAIReferenceVm : public OAIObject {
public:
    OAIReferenceVm();
    OAIReferenceVm(QString json);
    ~OAIReferenceVm() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getUserName() const;
    void setUserName(const QString &user_name);
    bool is_user_name_Set() const;
    bool is_user_name_Valid() const;

    QString getVmResourceId() const;
    void setVmResourceId(const QString &vm_resource_id);
    bool is_vm_resource_id_Set() const;
    bool is_vm_resource_id_Valid() const;

    OAIVmStateDetails getVmStateDetails() const;
    void setVmStateDetails(const OAIVmStateDetails &vm_state_details);
    bool is_vm_state_details_Set() const;
    bool is_vm_state_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_user_name;
    bool m_user_name_isSet;
    bool m_user_name_isValid;

    QString m_vm_resource_id;
    bool m_vm_resource_id_isSet;
    bool m_vm_resource_id_isValid;

    OAIVmStateDetails m_vm_state_details;
    bool m_vm_state_details_isSet;
    bool m_vm_state_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceVm)

#endif // OAIReferenceVm_H
