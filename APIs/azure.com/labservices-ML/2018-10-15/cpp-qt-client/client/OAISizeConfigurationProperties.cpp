/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISizeConfigurationProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISizeConfigurationProperties::OAISizeConfigurationProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISizeConfigurationProperties::OAISizeConfigurationProperties() {
    this->initializeModel();
}

OAISizeConfigurationProperties::~OAISizeConfigurationProperties() {}

void OAISizeConfigurationProperties::initializeModel() {

    m_environment_sizes_isSet = false;
    m_environment_sizes_isValid = false;
}

void OAISizeConfigurationProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISizeConfigurationProperties::fromJsonObject(QJsonObject json) {

    m_environment_sizes_isValid = ::OpenAPI::fromJsonValue(m_environment_sizes, json[QString("environmentSizes")]);
    m_environment_sizes_isSet = !json[QString("environmentSizes")].isNull() && m_environment_sizes_isValid;
}

QString OAISizeConfigurationProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISizeConfigurationProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_environment_sizes.size() > 0) {
        obj.insert(QString("environmentSizes"), ::OpenAPI::toJsonValue(m_environment_sizes));
    }
    return obj;
}

QList<OAIEnvironmentSize> OAISizeConfigurationProperties::getEnvironmentSizes() const {
    return m_environment_sizes;
}
void OAISizeConfigurationProperties::setEnvironmentSizes(const QList<OAIEnvironmentSize> &environment_sizes) {
    m_environment_sizes = environment_sizes;
    m_environment_sizes_isSet = true;
}

bool OAISizeConfigurationProperties::is_environment_sizes_Set() const{
    return m_environment_sizes_isSet;
}

bool OAISizeConfigurationProperties::is_environment_sizes_Valid() const{
    return m_environment_sizes_isValid;
}

bool OAISizeConfigurationProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_environment_sizes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISizeConfigurationProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
