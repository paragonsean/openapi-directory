/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnvironmentProperties.h
 *
 * Properties of an environment
 */

#ifndef OAIEnvironmentProperties_H
#define OAIEnvironmentProperties_H

#include <QJsonObject>

#include "OAILatestOperationResult.h"
#include "OAINetworkInterface.h"
#include "OAIResourceSet.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILatestOperationResult;
class OAINetworkInterface;
class OAIResourceSet;

class OAIEnvironmentProperties : public OAIObject {
public:
    OAIEnvironmentProperties();
    OAIEnvironmentProperties(QString json);
    ~OAIEnvironmentProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClaimedByUserName() const;
    void setClaimedByUserName(const QString &claimed_by_user_name);
    bool is_claimed_by_user_name_Set() const;
    bool is_claimed_by_user_name_Valid() const;

    QString getClaimedByUserObjectId() const;
    void setClaimedByUserObjectId(const QString &claimed_by_user_object_id);
    bool is_claimed_by_user_object_id_Set() const;
    bool is_claimed_by_user_object_id_Valid() const;

    QString getClaimedByUserPrincipalId() const;
    void setClaimedByUserPrincipalId(const QString &claimed_by_user_principal_id);
    bool is_claimed_by_user_principal_id_Set() const;
    bool is_claimed_by_user_principal_id_Valid() const;

    bool isIsClaimed() const;
    void setIsClaimed(const bool &is_claimed);
    bool is_is_claimed_Set() const;
    bool is_is_claimed_Valid() const;

    QString getLastKnownPowerState() const;
    void setLastKnownPowerState(const QString &last_known_power_state);
    bool is_last_known_power_state_Set() const;
    bool is_last_known_power_state_Valid() const;

    OAILatestOperationResult getLatestOperationResult() const;
    void setLatestOperationResult(const OAILatestOperationResult &latest_operation_result);
    bool is_latest_operation_result_Set() const;
    bool is_latest_operation_result_Valid() const;

    OAINetworkInterface getNetworkInterface() const;
    void setNetworkInterface(const OAINetworkInterface &network_interface);
    bool is_network_interface_Set() const;
    bool is_network_interface_Valid() const;

    QDateTime getPasswordLastReset() const;
    void setPasswordLastReset(const QDateTime &password_last_reset);
    bool is_password_last_reset_Set() const;
    bool is_password_last_reset_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIResourceSet getResourceSets() const;
    void setResourceSets(const OAIResourceSet &resource_sets);
    bool is_resource_sets_Set() const;
    bool is_resource_sets_Valid() const;

    QString getTotalUsage() const;
    void setTotalUsage(const QString &total_usage);
    bool is_total_usage_Set() const;
    bool is_total_usage_Valid() const;

    QString getUniqueIdentifier() const;
    void setUniqueIdentifier(const QString &unique_identifier);
    bool is_unique_identifier_Set() const;
    bool is_unique_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_claimed_by_user_name;
    bool m_claimed_by_user_name_isSet;
    bool m_claimed_by_user_name_isValid;

    QString m_claimed_by_user_object_id;
    bool m_claimed_by_user_object_id_isSet;
    bool m_claimed_by_user_object_id_isValid;

    QString m_claimed_by_user_principal_id;
    bool m_claimed_by_user_principal_id_isSet;
    bool m_claimed_by_user_principal_id_isValid;

    bool m_is_claimed;
    bool m_is_claimed_isSet;
    bool m_is_claimed_isValid;

    QString m_last_known_power_state;
    bool m_last_known_power_state_isSet;
    bool m_last_known_power_state_isValid;

    OAILatestOperationResult m_latest_operation_result;
    bool m_latest_operation_result_isSet;
    bool m_latest_operation_result_isValid;

    OAINetworkInterface m_network_interface;
    bool m_network_interface_isSet;
    bool m_network_interface_isValid;

    QDateTime m_password_last_reset;
    bool m_password_last_reset_isSet;
    bool m_password_last_reset_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIResourceSet m_resource_sets;
    bool m_resource_sets_isSet;
    bool m_resource_sets_isValid;

    QString m_total_usage;
    bool m_total_usage_isSet;
    bool m_total_usage_isValid;

    QString m_unique_identifier;
    bool m_unique_identifier_isSet;
    bool m_unique_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnvironmentProperties)

#endif // OAIEnvironmentProperties_H
