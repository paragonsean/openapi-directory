/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegionalAvailability.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegionalAvailability::OAIRegionalAvailability(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegionalAvailability::OAIRegionalAvailability() {
    this->initializeModel();
}

OAIRegionalAvailability::~OAIRegionalAvailability() {}

void OAIRegionalAvailability::initializeModel() {

    m_region_isSet = false;
    m_region_isValid = false;

    m_size_availabilities_isSet = false;
    m_size_availabilities_isValid = false;
}

void OAIRegionalAvailability::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegionalAvailability::fromJsonObject(QJsonObject json) {

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;

    m_size_availabilities_isValid = ::OpenAPI::fromJsonValue(m_size_availabilities, json[QString("sizeAvailabilities")]);
    m_size_availabilities_isSet = !json[QString("sizeAvailabilities")].isNull() && m_size_availabilities_isValid;
}

QString OAIRegionalAvailability::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegionalAvailability::asJsonObject() const {
    QJsonObject obj;
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    if (m_size_availabilities.size() > 0) {
        obj.insert(QString("sizeAvailabilities"), ::OpenAPI::toJsonValue(m_size_availabilities));
    }
    return obj;
}

QString OAIRegionalAvailability::getRegion() const {
    return m_region;
}
void OAIRegionalAvailability::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIRegionalAvailability::is_region_Set() const{
    return m_region_isSet;
}

bool OAIRegionalAvailability::is_region_Valid() const{
    return m_region_isValid;
}

QList<OAISizeAvailability> OAIRegionalAvailability::getSizeAvailabilities() const {
    return m_size_availabilities;
}
void OAIRegionalAvailability::setSizeAvailabilities(const QList<OAISizeAvailability> &size_availabilities) {
    m_size_availabilities = size_availabilities;
    m_size_availabilities_isSet = true;
}

bool OAIRegionalAvailability::is_size_availabilities_Set() const{
    return m_size_availabilities_isSet;
}

bool OAIRegionalAvailability::is_size_availabilities_Valid() const{
    return m_size_availabilities_isValid;
}

bool OAIRegionalAvailability::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_availabilities.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegionalAvailability::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
