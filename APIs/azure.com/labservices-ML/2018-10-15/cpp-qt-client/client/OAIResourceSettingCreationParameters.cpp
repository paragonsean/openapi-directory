/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceSettingCreationParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceSettingCreationParameters::OAIResourceSettingCreationParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceSettingCreationParameters::OAIResourceSettingCreationParameters() {
    this->initializeModel();
}

OAIResourceSettingCreationParameters::~OAIResourceSettingCreationParameters() {}

void OAIResourceSettingCreationParameters::initializeModel() {

    m_gallery_image_resource_id_isSet = false;
    m_gallery_image_resource_id_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_reference_vm_creation_parameters_isSet = false;
    m_reference_vm_creation_parameters_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAIResourceSettingCreationParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResourceSettingCreationParameters::fromJsonObject(QJsonObject json) {

    m_gallery_image_resource_id_isValid = ::OpenAPI::fromJsonValue(m_gallery_image_resource_id, json[QString("galleryImageResourceId")]);
    m_gallery_image_resource_id_isSet = !json[QString("galleryImageResourceId")].isNull() && m_gallery_image_resource_id_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_reference_vm_creation_parameters_isValid = ::OpenAPI::fromJsonValue(m_reference_vm_creation_parameters, json[QString("referenceVmCreationParameters")]);
    m_reference_vm_creation_parameters_isSet = !json[QString("referenceVmCreationParameters")].isNull() && m_reference_vm_creation_parameters_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAIResourceSettingCreationParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResourceSettingCreationParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_gallery_image_resource_id_isSet) {
        obj.insert(QString("galleryImageResourceId"), ::OpenAPI::toJsonValue(m_gallery_image_resource_id));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_reference_vm_creation_parameters.isSet()) {
        obj.insert(QString("referenceVmCreationParameters"), ::OpenAPI::toJsonValue(m_reference_vm_creation_parameters));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

QString OAIResourceSettingCreationParameters::getGalleryImageResourceId() const {
    return m_gallery_image_resource_id;
}
void OAIResourceSettingCreationParameters::setGalleryImageResourceId(const QString &gallery_image_resource_id) {
    m_gallery_image_resource_id = gallery_image_resource_id;
    m_gallery_image_resource_id_isSet = true;
}

bool OAIResourceSettingCreationParameters::is_gallery_image_resource_id_Set() const{
    return m_gallery_image_resource_id_isSet;
}

bool OAIResourceSettingCreationParameters::is_gallery_image_resource_id_Valid() const{
    return m_gallery_image_resource_id_isValid;
}

QString OAIResourceSettingCreationParameters::getLocation() const {
    return m_location;
}
void OAIResourceSettingCreationParameters::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIResourceSettingCreationParameters::is_location_Set() const{
    return m_location_isSet;
}

bool OAIResourceSettingCreationParameters::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIResourceSettingCreationParameters::getName() const {
    return m_name;
}
void OAIResourceSettingCreationParameters::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIResourceSettingCreationParameters::is_name_Set() const{
    return m_name_isSet;
}

bool OAIResourceSettingCreationParameters::is_name_Valid() const{
    return m_name_isValid;
}

OAIReferenceVmCreationParameters OAIResourceSettingCreationParameters::getReferenceVmCreationParameters() const {
    return m_reference_vm_creation_parameters;
}
void OAIResourceSettingCreationParameters::setReferenceVmCreationParameters(const OAIReferenceVmCreationParameters &reference_vm_creation_parameters) {
    m_reference_vm_creation_parameters = reference_vm_creation_parameters;
    m_reference_vm_creation_parameters_isSet = true;
}

bool OAIResourceSettingCreationParameters::is_reference_vm_creation_parameters_Set() const{
    return m_reference_vm_creation_parameters_isSet;
}

bool OAIResourceSettingCreationParameters::is_reference_vm_creation_parameters_Valid() const{
    return m_reference_vm_creation_parameters_isValid;
}

QString OAIResourceSettingCreationParameters::getSize() const {
    return m_size;
}
void OAIResourceSettingCreationParameters::setSize(const QString &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIResourceSettingCreationParameters::is_size_Set() const{
    return m_size_isSet;
}

bool OAIResourceSettingCreationParameters::is_size_Valid() const{
    return m_size_isValid;
}

bool OAIResourceSettingCreationParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gallery_image_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_vm_creation_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResourceSettingCreationParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_gallery_image_resource_id_isValid && m_reference_vm_creation_parameters_isValid && true;
}

} // namespace OpenAPI
