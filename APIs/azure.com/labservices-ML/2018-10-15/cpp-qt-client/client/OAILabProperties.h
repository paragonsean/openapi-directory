/**
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILabProperties.h
 *
 * Properties of a Lab.
 */

#ifndef OAILabProperties_H
#define OAILabProperties_H

#include <QJsonObject>

#include "OAILatestOperationResult.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILatestOperationResult;

class OAILabProperties : public OAIObject {
public:
    OAILabProperties();
    OAILabProperties(QString json);
    ~OAILabProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreatedByObjectId() const;
    void setCreatedByObjectId(const QString &created_by_object_id);
    bool is_created_by_object_id_Set() const;
    bool is_created_by_object_id_Valid() const;

    QString getCreatedByUserPrincipalName() const;
    void setCreatedByUserPrincipalName(const QString &created_by_user_principal_name);
    bool is_created_by_user_principal_name_Set() const;
    bool is_created_by_user_principal_name_Valid() const;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getInvitationCode() const;
    void setInvitationCode(const QString &invitation_code);
    bool is_invitation_code_Set() const;
    bool is_invitation_code_Valid() const;

    OAILatestOperationResult getLatestOperationResult() const;
    void setLatestOperationResult(const OAILatestOperationResult &latest_operation_result);
    bool is_latest_operation_result_Set() const;
    bool is_latest_operation_result_Valid() const;

    qint32 getMaxUsersInLab() const;
    void setMaxUsersInLab(const qint32 &max_users_in_lab);
    bool is_max_users_in_lab_Set() const;
    bool is_max_users_in_lab_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getUniqueIdentifier() const;
    void setUniqueIdentifier(const QString &unique_identifier);
    bool is_unique_identifier_Set() const;
    bool is_unique_identifier_Valid() const;

    QString getUsageQuota() const;
    void setUsageQuota(const QString &usage_quota);
    bool is_usage_quota_Set() const;
    bool is_usage_quota_Valid() const;

    QString getUserAccessMode() const;
    void setUserAccessMode(const QString &user_access_mode);
    bool is_user_access_mode_Set() const;
    bool is_user_access_mode_Valid() const;

    qint32 getUserQuota() const;
    void setUserQuota(const qint32 &user_quota);
    bool is_user_quota_Set() const;
    bool is_user_quota_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_created_by_object_id;
    bool m_created_by_object_id_isSet;
    bool m_created_by_object_id_isValid;

    QString m_created_by_user_principal_name;
    bool m_created_by_user_principal_name_isSet;
    bool m_created_by_user_principal_name_isValid;

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_invitation_code;
    bool m_invitation_code_isSet;
    bool m_invitation_code_isValid;

    OAILatestOperationResult m_latest_operation_result;
    bool m_latest_operation_result_isSet;
    bool m_latest_operation_result_isValid;

    qint32 m_max_users_in_lab;
    bool m_max_users_in_lab_isSet;
    bool m_max_users_in_lab_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_unique_identifier;
    bool m_unique_identifier_isSet;
    bool m_unique_identifier_isValid;

    QString m_usage_quota;
    bool m_usage_quota_isSet;
    bool m_usage_quota_isValid;

    QString m_user_access_mode;
    bool m_user_access_mode_isSet;
    bool m_user_access_mode_isValid;

    qint32 m_user_quota;
    bool m_user_quota_isSet;
    bool m_user_quota_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILabProperties)

#endif // OAILabProperties_H
