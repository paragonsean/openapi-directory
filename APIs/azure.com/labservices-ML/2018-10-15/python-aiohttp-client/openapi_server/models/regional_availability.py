# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.size_availability import SizeAvailability
from openapi_server import util


class RegionalAvailability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, region: str=None, size_availabilities: List[SizeAvailability]=None):
        """RegionalAvailability - a model defined in OpenAPI

        :param region: The region of this RegionalAvailability.
        :param size_availabilities: The size_availabilities of this RegionalAvailability.
        """
        self.openapi_types = {
            'region': str,
            'size_availabilities': List[SizeAvailability]
        }

        self.attribute_map = {
            'region': 'region',
            'size_availabilities': 'sizeAvailabilities'
        }

        self._region = region
        self._size_availabilities = size_availabilities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegionalAvailability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegionalAvailability of this RegionalAvailability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def region(self):
        """Gets the region of this RegionalAvailability.

        Corresponding region

        :return: The region of this RegionalAvailability.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this RegionalAvailability.

        Corresponding region

        :param region: The region of this RegionalAvailability.
        :type region: str
        """

        self._region = region

    @property
    def size_availabilities(self):
        """Gets the size_availabilities of this RegionalAvailability.

        List of all the size information for the region

        :return: The size_availabilities of this RegionalAvailability.
        :rtype: List[SizeAvailability]
        """
        return self._size_availabilities

    @size_availabilities.setter
    def size_availabilities(self, size_availabilities):
        """Sets the size_availabilities of this RegionalAvailability.

        List of all the size information for the region

        :param size_availabilities: The size_availabilities of this RegionalAvailability.
        :type size_availabilities: List[SizeAvailability]
        """

        self._size_availabilities = size_availabilities
