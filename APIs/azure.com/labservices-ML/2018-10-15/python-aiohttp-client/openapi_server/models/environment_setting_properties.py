# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.latest_operation_result import LatestOperationResult
from openapi_server.models.resource_settings import ResourceSettings
from openapi_server import util


class EnvironmentSettingProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_state: str=None, description: str=None, last_changed: datetime=None, last_published: datetime=None, latest_operation_result: LatestOperationResult=None, provisioning_state: str=None, publishing_state: str=None, resource_settings: ResourceSettings=None, title: str=None, unique_identifier: str=None):
        """EnvironmentSettingProperties - a model defined in OpenAPI

        :param configuration_state: The configuration_state of this EnvironmentSettingProperties.
        :param description: The description of this EnvironmentSettingProperties.
        :param last_changed: The last_changed of this EnvironmentSettingProperties.
        :param last_published: The last_published of this EnvironmentSettingProperties.
        :param latest_operation_result: The latest_operation_result of this EnvironmentSettingProperties.
        :param provisioning_state: The provisioning_state of this EnvironmentSettingProperties.
        :param publishing_state: The publishing_state of this EnvironmentSettingProperties.
        :param resource_settings: The resource_settings of this EnvironmentSettingProperties.
        :param title: The title of this EnvironmentSettingProperties.
        :param unique_identifier: The unique_identifier of this EnvironmentSettingProperties.
        """
        self.openapi_types = {
            'configuration_state': str,
            'description': str,
            'last_changed': datetime,
            'last_published': datetime,
            'latest_operation_result': LatestOperationResult,
            'provisioning_state': str,
            'publishing_state': str,
            'resource_settings': ResourceSettings,
            'title': str,
            'unique_identifier': str
        }

        self.attribute_map = {
            'configuration_state': 'configurationState',
            'description': 'description',
            'last_changed': 'lastChanged',
            'last_published': 'lastPublished',
            'latest_operation_result': 'latestOperationResult',
            'provisioning_state': 'provisioningState',
            'publishing_state': 'publishingState',
            'resource_settings': 'resourceSettings',
            'title': 'title',
            'unique_identifier': 'uniqueIdentifier'
        }

        self._configuration_state = configuration_state
        self._description = description
        self._last_changed = last_changed
        self._last_published = last_published
        self._latest_operation_result = latest_operation_result
        self._provisioning_state = provisioning_state
        self._publishing_state = publishing_state
        self._resource_settings = resource_settings
        self._title = title
        self._unique_identifier = unique_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnvironmentSettingProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnvironmentSettingProperties of this EnvironmentSettingProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_state(self):
        """Gets the configuration_state of this EnvironmentSettingProperties.

        Describes the user's progress in configuring their environment setting

        :return: The configuration_state of this EnvironmentSettingProperties.
        :rtype: str
        """
        return self._configuration_state

    @configuration_state.setter
    def configuration_state(self, configuration_state):
        """Sets the configuration_state of this EnvironmentSettingProperties.

        Describes the user's progress in configuring their environment setting

        :param configuration_state: The configuration_state of this EnvironmentSettingProperties.
        :type configuration_state: str
        """
        allowed_values = ["NotApplicable", "Completed"]  # noqa: E501
        if configuration_state not in allowed_values:
            raise ValueError(
                "Invalid value for `configuration_state` ({0}), must be one of {1}"
                .format(configuration_state, allowed_values)
            )

        self._configuration_state = configuration_state

    @property
    def description(self):
        """Gets the description of this EnvironmentSettingProperties.

        Describes the environment and its resource settings

        :return: The description of this EnvironmentSettingProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this EnvironmentSettingProperties.

        Describes the environment and its resource settings

        :param description: The description of this EnvironmentSettingProperties.
        :type description: str
        """

        self._description = description

    @property
    def last_changed(self):
        """Gets the last_changed of this EnvironmentSettingProperties.

        Time when the template VM was last changed.

        :return: The last_changed of this EnvironmentSettingProperties.
        :rtype: datetime
        """
        return self._last_changed

    @last_changed.setter
    def last_changed(self, last_changed):
        """Sets the last_changed of this EnvironmentSettingProperties.

        Time when the template VM was last changed.

        :param last_changed: The last_changed of this EnvironmentSettingProperties.
        :type last_changed: datetime
        """

        self._last_changed = last_changed

    @property
    def last_published(self):
        """Gets the last_published of this EnvironmentSettingProperties.

        Time when the template VM was last sent for publishing.

        :return: The last_published of this EnvironmentSettingProperties.
        :rtype: datetime
        """
        return self._last_published

    @last_published.setter
    def last_published(self, last_published):
        """Sets the last_published of this EnvironmentSettingProperties.

        Time when the template VM was last sent for publishing.

        :param last_published: The last_published of this EnvironmentSettingProperties.
        :type last_published: datetime
        """

        self._last_published = last_published

    @property
    def latest_operation_result(self):
        """Gets the latest_operation_result of this EnvironmentSettingProperties.


        :return: The latest_operation_result of this EnvironmentSettingProperties.
        :rtype: LatestOperationResult
        """
        return self._latest_operation_result

    @latest_operation_result.setter
    def latest_operation_result(self, latest_operation_result):
        """Sets the latest_operation_result of this EnvironmentSettingProperties.


        :param latest_operation_result: The latest_operation_result of this EnvironmentSettingProperties.
        :type latest_operation_result: LatestOperationResult
        """

        self._latest_operation_result = latest_operation_result

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this EnvironmentSettingProperties.

        The provisioning status of the resource.

        :return: The provisioning_state of this EnvironmentSettingProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this EnvironmentSettingProperties.

        The provisioning status of the resource.

        :param provisioning_state: The provisioning_state of this EnvironmentSettingProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def publishing_state(self):
        """Gets the publishing_state of this EnvironmentSettingProperties.

        Describes the readiness of this environment setting

        :return: The publishing_state of this EnvironmentSettingProperties.
        :rtype: str
        """
        return self._publishing_state

    @publishing_state.setter
    def publishing_state(self, publishing_state):
        """Sets the publishing_state of this EnvironmentSettingProperties.

        Describes the readiness of this environment setting

        :param publishing_state: The publishing_state of this EnvironmentSettingProperties.
        :type publishing_state: str
        """
        allowed_values = ["Draft", "Publishing", "Published", "PublishFailed", "Scaling"]  # noqa: E501
        if publishing_state not in allowed_values:
            raise ValueError(
                "Invalid value for `publishing_state` ({0}), must be one of {1}"
                .format(publishing_state, allowed_values)
            )

        self._publishing_state = publishing_state

    @property
    def resource_settings(self):
        """Gets the resource_settings of this EnvironmentSettingProperties.


        :return: The resource_settings of this EnvironmentSettingProperties.
        :rtype: ResourceSettings
        """
        return self._resource_settings

    @resource_settings.setter
    def resource_settings(self, resource_settings):
        """Sets the resource_settings of this EnvironmentSettingProperties.


        :param resource_settings: The resource_settings of this EnvironmentSettingProperties.
        :type resource_settings: ResourceSettings
        """
        if resource_settings is None:
            raise ValueError("Invalid value for `resource_settings`, must not be `None`")

        self._resource_settings = resource_settings

    @property
    def title(self):
        """Gets the title of this EnvironmentSettingProperties.

        Brief title describing the environment and its resource settings

        :return: The title of this EnvironmentSettingProperties.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EnvironmentSettingProperties.

        Brief title describing the environment and its resource settings

        :param title: The title of this EnvironmentSettingProperties.
        :type title: str
        """

        self._title = title

    @property
    def unique_identifier(self):
        """Gets the unique_identifier of this EnvironmentSettingProperties.

        The unique immutable identifier of a resource (Guid).

        :return: The unique_identifier of this EnvironmentSettingProperties.
        :rtype: str
        """
        return self._unique_identifier

    @unique_identifier.setter
    def unique_identifier(self, unique_identifier):
        """Sets the unique_identifier of this EnvironmentSettingProperties.

        The unique immutable identifier of a resource (Guid).

        :param unique_identifier: The unique_identifier of this EnvironmentSettingProperties.
        :type unique_identifier: str
        """

        self._unique_identifier = unique_identifier
