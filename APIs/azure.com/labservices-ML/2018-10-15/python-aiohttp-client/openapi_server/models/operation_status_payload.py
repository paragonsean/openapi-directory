# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OperationStatusPayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operation_url: str=None):
        """OperationStatusPayload - a model defined in OpenAPI

        :param operation_url: The operation_url of this OperationStatusPayload.
        """
        self.openapi_types = {
            'operation_url': str
        }

        self.attribute_map = {
            'operation_url': 'operationUrl'
        }

        self._operation_url = operation_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OperationStatusPayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OperationStatusPayload of this OperationStatusPayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operation_url(self):
        """Gets the operation_url of this OperationStatusPayload.

        The operation url of long running operation

        :return: The operation_url of this OperationStatusPayload.
        :rtype: str
        """
        return self._operation_url

    @operation_url.setter
    def operation_url(self, operation_url):
        """Sets the operation_url of this OperationStatusPayload.

        The operation url of long running operation

        :param operation_url: The operation_url of this OperationStatusPayload.
        :type operation_url: str
        """
        if operation_url is None:
            raise ValueError("Invalid value for `operation_url`, must not be `None`")

        self._operation_url = operation_url
