# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VirtualMachineDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_known_power_state: str=None, private_ip_address: str=None, provisioning_state: str=None, rdp_authority: str=None, ssh_authority: str=None, user_name: str=None):
        """VirtualMachineDetails - a model defined in OpenAPI

        :param last_known_power_state: The last_known_power_state of this VirtualMachineDetails.
        :param private_ip_address: The private_ip_address of this VirtualMachineDetails.
        :param provisioning_state: The provisioning_state of this VirtualMachineDetails.
        :param rdp_authority: The rdp_authority of this VirtualMachineDetails.
        :param ssh_authority: The ssh_authority of this VirtualMachineDetails.
        :param user_name: The user_name of this VirtualMachineDetails.
        """
        self.openapi_types = {
            'last_known_power_state': str,
            'private_ip_address': str,
            'provisioning_state': str,
            'rdp_authority': str,
            'ssh_authority': str,
            'user_name': str
        }

        self.attribute_map = {
            'last_known_power_state': 'lastKnownPowerState',
            'private_ip_address': 'privateIpAddress',
            'provisioning_state': 'provisioningState',
            'rdp_authority': 'rdpAuthority',
            'ssh_authority': 'sshAuthority',
            'user_name': 'userName'
        }

        self._last_known_power_state = last_known_power_state
        self._private_ip_address = private_ip_address
        self._provisioning_state = provisioning_state
        self._rdp_authority = rdp_authority
        self._ssh_authority = ssh_authority
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VirtualMachineDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VirtualMachineDetails of this VirtualMachineDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_known_power_state(self):
        """Gets the last_known_power_state of this VirtualMachineDetails.

        Last known compute power state captured in DTL

        :return: The last_known_power_state of this VirtualMachineDetails.
        :rtype: str
        """
        return self._last_known_power_state

    @last_known_power_state.setter
    def last_known_power_state(self, last_known_power_state):
        """Sets the last_known_power_state of this VirtualMachineDetails.

        Last known compute power state captured in DTL

        :param last_known_power_state: The last_known_power_state of this VirtualMachineDetails.
        :type last_known_power_state: str
        """

        self._last_known_power_state = last_known_power_state

    @property
    def private_ip_address(self):
        """Gets the private_ip_address of this VirtualMachineDetails.

        PrivateIp address of the compute VM

        :return: The private_ip_address of this VirtualMachineDetails.
        :rtype: str
        """
        return self._private_ip_address

    @private_ip_address.setter
    def private_ip_address(self, private_ip_address):
        """Sets the private_ip_address of this VirtualMachineDetails.

        PrivateIp address of the compute VM

        :param private_ip_address: The private_ip_address of this VirtualMachineDetails.
        :type private_ip_address: str
        """

        self._private_ip_address = private_ip_address

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this VirtualMachineDetails.

        Provisioning state of the Dtl VM

        :return: The provisioning_state of this VirtualMachineDetails.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this VirtualMachineDetails.

        Provisioning state of the Dtl VM

        :param provisioning_state: The provisioning_state of this VirtualMachineDetails.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def rdp_authority(self):
        """Gets the rdp_authority of this VirtualMachineDetails.

        Connection information for Windows

        :return: The rdp_authority of this VirtualMachineDetails.
        :rtype: str
        """
        return self._rdp_authority

    @rdp_authority.setter
    def rdp_authority(self, rdp_authority):
        """Sets the rdp_authority of this VirtualMachineDetails.

        Connection information for Windows

        :param rdp_authority: The rdp_authority of this VirtualMachineDetails.
        :type rdp_authority: str
        """

        self._rdp_authority = rdp_authority

    @property
    def ssh_authority(self):
        """Gets the ssh_authority of this VirtualMachineDetails.

        Connection information for Linux

        :return: The ssh_authority of this VirtualMachineDetails.
        :rtype: str
        """
        return self._ssh_authority

    @ssh_authority.setter
    def ssh_authority(self, ssh_authority):
        """Sets the ssh_authority of this VirtualMachineDetails.

        Connection information for Linux

        :param ssh_authority: The ssh_authority of this VirtualMachineDetails.
        :type ssh_authority: str
        """

        self._ssh_authority = ssh_authority

    @property
    def user_name(self):
        """Gets the user_name of this VirtualMachineDetails.

        Compute VM login user name

        :return: The user_name of this VirtualMachineDetails.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this VirtualMachineDetails.

        Compute VM login user name

        :param user_name: The user_name of this VirtualMachineDetails.
        :type user_name: str
        """

        self._user_name = user_name
