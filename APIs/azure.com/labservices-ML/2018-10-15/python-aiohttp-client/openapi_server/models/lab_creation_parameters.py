# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LabCreationParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_users_in_lab: int=None):
        """LabCreationParameters - a model defined in OpenAPI

        :param max_users_in_lab: The max_users_in_lab of this LabCreationParameters.
        """
        self.openapi_types = {
            'max_users_in_lab': int
        }

        self.attribute_map = {
            'max_users_in_lab': 'maxUsersInLab'
        }

        self._max_users_in_lab = max_users_in_lab

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LabCreationParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LabCreationParameters of this LabCreationParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_users_in_lab(self):
        """Gets the max_users_in_lab of this LabCreationParameters.

        Maximum number of users allowed in the lab.

        :return: The max_users_in_lab of this LabCreationParameters.
        :rtype: int
        """
        return self._max_users_in_lab

    @max_users_in_lab.setter
    def max_users_in_lab(self, max_users_in_lab):
        """Sets the max_users_in_lab of this LabCreationParameters.

        Maximum number of users allowed in the lab.

        :param max_users_in_lab: The max_users_in_lab of this LabCreationParameters.
        :type max_users_in_lab: int
        """

        self._max_users_in_lab = max_users_in_lab
