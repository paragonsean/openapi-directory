# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PublishPayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, use_existing_image: bool=None):
        """PublishPayload - a model defined in OpenAPI

        :param use_existing_image: The use_existing_image of this PublishPayload.
        """
        self.openapi_types = {
            'use_existing_image': bool
        }

        self.attribute_map = {
            'use_existing_image': 'useExistingImage'
        }

        self._use_existing_image = use_existing_image

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishPayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishPayload of this PublishPayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def use_existing_image(self):
        """Gets the use_existing_image of this PublishPayload.

        Whether to use existing VM custom image when publishing.

        :return: The use_existing_image of this PublishPayload.
        :rtype: bool
        """
        return self._use_existing_image

    @use_existing_image.setter
    def use_existing_image(self, use_existing_image):
        """Sets the use_existing_image of this PublishPayload.

        Whether to use existing VM custom image when publishing.

        :param use_existing_image: The use_existing_image of this PublishPayload.
        :type use_existing_image: bool
        """

        self._use_existing_image = use_existing_image
