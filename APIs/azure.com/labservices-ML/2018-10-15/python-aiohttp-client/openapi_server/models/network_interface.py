# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NetworkInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, private_ip_address: str=None, rdp_authority: str=None, ssh_authority: str=None, username: str=None):
        """NetworkInterface - a model defined in OpenAPI

        :param private_ip_address: The private_ip_address of this NetworkInterface.
        :param rdp_authority: The rdp_authority of this NetworkInterface.
        :param ssh_authority: The ssh_authority of this NetworkInterface.
        :param username: The username of this NetworkInterface.
        """
        self.openapi_types = {
            'private_ip_address': str,
            'rdp_authority': str,
            'ssh_authority': str,
            'username': str
        }

        self.attribute_map = {
            'private_ip_address': 'privateIpAddress',
            'rdp_authority': 'rdpAuthority',
            'ssh_authority': 'sshAuthority',
            'username': 'username'
        }

        self._private_ip_address = private_ip_address
        self._rdp_authority = rdp_authority
        self._ssh_authority = ssh_authority
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkInterface of this NetworkInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def private_ip_address(self):
        """Gets the private_ip_address of this NetworkInterface.

        PrivateIp address of the Compute VM

        :return: The private_ip_address of this NetworkInterface.
        :rtype: str
        """
        return self._private_ip_address

    @private_ip_address.setter
    def private_ip_address(self, private_ip_address):
        """Sets the private_ip_address of this NetworkInterface.

        PrivateIp address of the Compute VM

        :param private_ip_address: The private_ip_address of this NetworkInterface.
        :type private_ip_address: str
        """

        self._private_ip_address = private_ip_address

    @property
    def rdp_authority(self):
        """Gets the rdp_authority of this NetworkInterface.

        Connection information for Windows

        :return: The rdp_authority of this NetworkInterface.
        :rtype: str
        """
        return self._rdp_authority

    @rdp_authority.setter
    def rdp_authority(self, rdp_authority):
        """Sets the rdp_authority of this NetworkInterface.

        Connection information for Windows

        :param rdp_authority: The rdp_authority of this NetworkInterface.
        :type rdp_authority: str
        """

        self._rdp_authority = rdp_authority

    @property
    def ssh_authority(self):
        """Gets the ssh_authority of this NetworkInterface.

        Connection information for Linux

        :return: The ssh_authority of this NetworkInterface.
        :rtype: str
        """
        return self._ssh_authority

    @ssh_authority.setter
    def ssh_authority(self, ssh_authority):
        """Sets the ssh_authority of this NetworkInterface.

        Connection information for Linux

        :param ssh_authority: The ssh_authority of this NetworkInterface.
        :type ssh_authority: str
        """

        self._ssh_authority = ssh_authority

    @property
    def username(self):
        """Gets the username of this NetworkInterface.

        Username of the VM

        :return: The username of this NetworkInterface.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this NetworkInterface.

        Username of the VM

        :param username: The username of this NetworkInterface.
        :type username: str
        """

        self._username = username
