# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.latest_operation_result import LatestOperationResult
from openapi_server.models.size_configuration_properties import SizeConfigurationProperties
from openapi_server import util


class LabAccountProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled_region_selection: bool=None, latest_operation_result: LatestOperationResult=None, provisioning_state: str=None, size_configuration: SizeConfigurationProperties=None, unique_identifier: str=None):
        """LabAccountProperties - a model defined in OpenAPI

        :param enabled_region_selection: The enabled_region_selection of this LabAccountProperties.
        :param latest_operation_result: The latest_operation_result of this LabAccountProperties.
        :param provisioning_state: The provisioning_state of this LabAccountProperties.
        :param size_configuration: The size_configuration of this LabAccountProperties.
        :param unique_identifier: The unique_identifier of this LabAccountProperties.
        """
        self.openapi_types = {
            'enabled_region_selection': bool,
            'latest_operation_result': LatestOperationResult,
            'provisioning_state': str,
            'size_configuration': SizeConfigurationProperties,
            'unique_identifier': str
        }

        self.attribute_map = {
            'enabled_region_selection': 'enabledRegionSelection',
            'latest_operation_result': 'latestOperationResult',
            'provisioning_state': 'provisioningState',
            'size_configuration': 'sizeConfiguration',
            'unique_identifier': 'uniqueIdentifier'
        }

        self._enabled_region_selection = enabled_region_selection
        self._latest_operation_result = latest_operation_result
        self._provisioning_state = provisioning_state
        self._size_configuration = size_configuration
        self._unique_identifier = unique_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LabAccountProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LabAccountProperties of this LabAccountProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled_region_selection(self):
        """Gets the enabled_region_selection of this LabAccountProperties.

        Represents if region selection is enabled

        :return: The enabled_region_selection of this LabAccountProperties.
        :rtype: bool
        """
        return self._enabled_region_selection

    @enabled_region_selection.setter
    def enabled_region_selection(self, enabled_region_selection):
        """Sets the enabled_region_selection of this LabAccountProperties.

        Represents if region selection is enabled

        :param enabled_region_selection: The enabled_region_selection of this LabAccountProperties.
        :type enabled_region_selection: bool
        """

        self._enabled_region_selection = enabled_region_selection

    @property
    def latest_operation_result(self):
        """Gets the latest_operation_result of this LabAccountProperties.


        :return: The latest_operation_result of this LabAccountProperties.
        :rtype: LatestOperationResult
        """
        return self._latest_operation_result

    @latest_operation_result.setter
    def latest_operation_result(self, latest_operation_result):
        """Sets the latest_operation_result of this LabAccountProperties.


        :param latest_operation_result: The latest_operation_result of this LabAccountProperties.
        :type latest_operation_result: LatestOperationResult
        """

        self._latest_operation_result = latest_operation_result

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this LabAccountProperties.

        The provisioning status of the resource.

        :return: The provisioning_state of this LabAccountProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this LabAccountProperties.

        The provisioning status of the resource.

        :param provisioning_state: The provisioning_state of this LabAccountProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def size_configuration(self):
        """Gets the size_configuration of this LabAccountProperties.


        :return: The size_configuration of this LabAccountProperties.
        :rtype: SizeConfigurationProperties
        """
        return self._size_configuration

    @size_configuration.setter
    def size_configuration(self, size_configuration):
        """Sets the size_configuration of this LabAccountProperties.


        :param size_configuration: The size_configuration of this LabAccountProperties.
        :type size_configuration: SizeConfigurationProperties
        """

        self._size_configuration = size_configuration

    @property
    def unique_identifier(self):
        """Gets the unique_identifier of this LabAccountProperties.

        The unique immutable identifier of a resource (Guid).

        :return: The unique_identifier of this LabAccountProperties.
        :rtype: str
        """
        return self._unique_identifier

    @unique_identifier.setter
    def unique_identifier(self, unique_identifier):
        """Sets the unique_identifier of this LabAccountProperties.

        The unique immutable identifier of a resource (Guid).

        :param unique_identifier: The unique_identifier of this LabAccountProperties.
        :type unique_identifier: str
        """

        self._unique_identifier = unique_identifier
