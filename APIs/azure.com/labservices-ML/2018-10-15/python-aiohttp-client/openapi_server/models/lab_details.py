# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LabDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, provisioning_state: str=None, usage_quota: str=None):
        """LabDetails - a model defined in OpenAPI

        :param id: The id of this LabDetails.
        :param name: The name of this LabDetails.
        :param provisioning_state: The provisioning_state of this LabDetails.
        :param usage_quota: The usage_quota of this LabDetails.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'provisioning_state': str,
            'usage_quota': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'provisioning_state': 'provisioningState',
            'usage_quota': 'usageQuota'
        }

        self._id = id
        self._name = name
        self._provisioning_state = provisioning_state
        self._usage_quota = usage_quota

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LabDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LabDetails of this LabDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this LabDetails.

        The Id of the lab.

        :return: The id of this LabDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LabDetails.

        The Id of the lab.

        :param id: The id of this LabDetails.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this LabDetails.

        Name of the lab

        :return: The name of this LabDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LabDetails.

        Name of the lab

        :param name: The name of this LabDetails.
        :type name: str
        """

        self._name = name

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this LabDetails.

        The provisioning state of the lab.

        :return: The provisioning_state of this LabDetails.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this LabDetails.

        The provisioning state of the lab.

        :param provisioning_state: The provisioning_state of this LabDetails.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def usage_quota(self):
        """Gets the usage_quota of this LabDetails.

        The maximum duration a user can use a VM in this lab.

        :return: The usage_quota of this LabDetails.
        :rtype: str
        """
        return self._usage_quota

    @usage_quota.setter
    def usage_quota(self, usage_quota):
        """Sets the usage_quota of this LabDetails.

        The maximum duration a user can use a VM in this lab.

        :param usage_quota: The usage_quota of this LabDetails.
        :type usage_quota: str
        """

        self._usage_quota = usage_quota
