# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.latest_operation_result import LatestOperationResult
from openapi_server.models.network_interface import NetworkInterface
from openapi_server.models.resource_set import ResourceSet
from openapi_server import util


class EnvironmentProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, claimed_by_user_name: str=None, claimed_by_user_object_id: str=None, claimed_by_user_principal_id: str=None, is_claimed: bool=None, last_known_power_state: str=None, latest_operation_result: LatestOperationResult=None, network_interface: NetworkInterface=None, password_last_reset: datetime=None, provisioning_state: str=None, resource_sets: ResourceSet=None, total_usage: str=None, unique_identifier: str=None):
        """EnvironmentProperties - a model defined in OpenAPI

        :param claimed_by_user_name: The claimed_by_user_name of this EnvironmentProperties.
        :param claimed_by_user_object_id: The claimed_by_user_object_id of this EnvironmentProperties.
        :param claimed_by_user_principal_id: The claimed_by_user_principal_id of this EnvironmentProperties.
        :param is_claimed: The is_claimed of this EnvironmentProperties.
        :param last_known_power_state: The last_known_power_state of this EnvironmentProperties.
        :param latest_operation_result: The latest_operation_result of this EnvironmentProperties.
        :param network_interface: The network_interface of this EnvironmentProperties.
        :param password_last_reset: The password_last_reset of this EnvironmentProperties.
        :param provisioning_state: The provisioning_state of this EnvironmentProperties.
        :param resource_sets: The resource_sets of this EnvironmentProperties.
        :param total_usage: The total_usage of this EnvironmentProperties.
        :param unique_identifier: The unique_identifier of this EnvironmentProperties.
        """
        self.openapi_types = {
            'claimed_by_user_name': str,
            'claimed_by_user_object_id': str,
            'claimed_by_user_principal_id': str,
            'is_claimed': bool,
            'last_known_power_state': str,
            'latest_operation_result': LatestOperationResult,
            'network_interface': NetworkInterface,
            'password_last_reset': datetime,
            'provisioning_state': str,
            'resource_sets': ResourceSet,
            'total_usage': str,
            'unique_identifier': str
        }

        self.attribute_map = {
            'claimed_by_user_name': 'claimedByUserName',
            'claimed_by_user_object_id': 'claimedByUserObjectId',
            'claimed_by_user_principal_id': 'claimedByUserPrincipalId',
            'is_claimed': 'isClaimed',
            'last_known_power_state': 'lastKnownPowerState',
            'latest_operation_result': 'latestOperationResult',
            'network_interface': 'networkInterface',
            'password_last_reset': 'passwordLastReset',
            'provisioning_state': 'provisioningState',
            'resource_sets': 'resourceSets',
            'total_usage': 'totalUsage',
            'unique_identifier': 'uniqueIdentifier'
        }

        self._claimed_by_user_name = claimed_by_user_name
        self._claimed_by_user_object_id = claimed_by_user_object_id
        self._claimed_by_user_principal_id = claimed_by_user_principal_id
        self._is_claimed = is_claimed
        self._last_known_power_state = last_known_power_state
        self._latest_operation_result = latest_operation_result
        self._network_interface = network_interface
        self._password_last_reset = password_last_reset
        self._provisioning_state = provisioning_state
        self._resource_sets = resource_sets
        self._total_usage = total_usage
        self._unique_identifier = unique_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnvironmentProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnvironmentProperties of this EnvironmentProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def claimed_by_user_name(self):
        """Gets the claimed_by_user_name of this EnvironmentProperties.

        The name or email address of the user who has claimed the environment

        :return: The claimed_by_user_name of this EnvironmentProperties.
        :rtype: str
        """
        return self._claimed_by_user_name

    @claimed_by_user_name.setter
    def claimed_by_user_name(self, claimed_by_user_name):
        """Sets the claimed_by_user_name of this EnvironmentProperties.

        The name or email address of the user who has claimed the environment

        :param claimed_by_user_name: The claimed_by_user_name of this EnvironmentProperties.
        :type claimed_by_user_name: str
        """

        self._claimed_by_user_name = claimed_by_user_name

    @property
    def claimed_by_user_object_id(self):
        """Gets the claimed_by_user_object_id of this EnvironmentProperties.

        The AAD object Id of the user who has claimed the environment

        :return: The claimed_by_user_object_id of this EnvironmentProperties.
        :rtype: str
        """
        return self._claimed_by_user_object_id

    @claimed_by_user_object_id.setter
    def claimed_by_user_object_id(self, claimed_by_user_object_id):
        """Sets the claimed_by_user_object_id of this EnvironmentProperties.

        The AAD object Id of the user who has claimed the environment

        :param claimed_by_user_object_id: The claimed_by_user_object_id of this EnvironmentProperties.
        :type claimed_by_user_object_id: str
        """

        self._claimed_by_user_object_id = claimed_by_user_object_id

    @property
    def claimed_by_user_principal_id(self):
        """Gets the claimed_by_user_principal_id of this EnvironmentProperties.

        The user principal Id of the user who has claimed the environment

        :return: The claimed_by_user_principal_id of this EnvironmentProperties.
        :rtype: str
        """
        return self._claimed_by_user_principal_id

    @claimed_by_user_principal_id.setter
    def claimed_by_user_principal_id(self, claimed_by_user_principal_id):
        """Sets the claimed_by_user_principal_id of this EnvironmentProperties.

        The user principal Id of the user who has claimed the environment

        :param claimed_by_user_principal_id: The claimed_by_user_principal_id of this EnvironmentProperties.
        :type claimed_by_user_principal_id: str
        """

        self._claimed_by_user_principal_id = claimed_by_user_principal_id

    @property
    def is_claimed(self):
        """Gets the is_claimed of this EnvironmentProperties.

        Is the environment claimed or not

        :return: The is_claimed of this EnvironmentProperties.
        :rtype: bool
        """
        return self._is_claimed

    @is_claimed.setter
    def is_claimed(self, is_claimed):
        """Sets the is_claimed of this EnvironmentProperties.

        Is the environment claimed or not

        :param is_claimed: The is_claimed of this EnvironmentProperties.
        :type is_claimed: bool
        """

        self._is_claimed = is_claimed

    @property
    def last_known_power_state(self):
        """Gets the last_known_power_state of this EnvironmentProperties.

        Last known power state of the environment

        :return: The last_known_power_state of this EnvironmentProperties.
        :rtype: str
        """
        return self._last_known_power_state

    @last_known_power_state.setter
    def last_known_power_state(self, last_known_power_state):
        """Sets the last_known_power_state of this EnvironmentProperties.

        Last known power state of the environment

        :param last_known_power_state: The last_known_power_state of this EnvironmentProperties.
        :type last_known_power_state: str
        """

        self._last_known_power_state = last_known_power_state

    @property
    def latest_operation_result(self):
        """Gets the latest_operation_result of this EnvironmentProperties.


        :return: The latest_operation_result of this EnvironmentProperties.
        :rtype: LatestOperationResult
        """
        return self._latest_operation_result

    @latest_operation_result.setter
    def latest_operation_result(self, latest_operation_result):
        """Sets the latest_operation_result of this EnvironmentProperties.


        :param latest_operation_result: The latest_operation_result of this EnvironmentProperties.
        :type latest_operation_result: LatestOperationResult
        """

        self._latest_operation_result = latest_operation_result

    @property
    def network_interface(self):
        """Gets the network_interface of this EnvironmentProperties.


        :return: The network_interface of this EnvironmentProperties.
        :rtype: NetworkInterface
        """
        return self._network_interface

    @network_interface.setter
    def network_interface(self, network_interface):
        """Sets the network_interface of this EnvironmentProperties.


        :param network_interface: The network_interface of this EnvironmentProperties.
        :type network_interface: NetworkInterface
        """

        self._network_interface = network_interface

    @property
    def password_last_reset(self):
        """Gets the password_last_reset of this EnvironmentProperties.

        When the password was last reset on the environment.

        :return: The password_last_reset of this EnvironmentProperties.
        :rtype: datetime
        """
        return self._password_last_reset

    @password_last_reset.setter
    def password_last_reset(self, password_last_reset):
        """Sets the password_last_reset of this EnvironmentProperties.

        When the password was last reset on the environment.

        :param password_last_reset: The password_last_reset of this EnvironmentProperties.
        :type password_last_reset: datetime
        """

        self._password_last_reset = password_last_reset

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this EnvironmentProperties.

        The provisioning status of the resource.

        :return: The provisioning_state of this EnvironmentProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this EnvironmentProperties.

        The provisioning status of the resource.

        :param provisioning_state: The provisioning_state of this EnvironmentProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def resource_sets(self):
        """Gets the resource_sets of this EnvironmentProperties.


        :return: The resource_sets of this EnvironmentProperties.
        :rtype: ResourceSet
        """
        return self._resource_sets

    @resource_sets.setter
    def resource_sets(self, resource_sets):
        """Sets the resource_sets of this EnvironmentProperties.


        :param resource_sets: The resource_sets of this EnvironmentProperties.
        :type resource_sets: ResourceSet
        """

        self._resource_sets = resource_sets

    @property
    def total_usage(self):
        """Gets the total_usage of this EnvironmentProperties.

        How long the environment has been used by a lab user

        :return: The total_usage of this EnvironmentProperties.
        :rtype: str
        """
        return self._total_usage

    @total_usage.setter
    def total_usage(self, total_usage):
        """Sets the total_usage of this EnvironmentProperties.

        How long the environment has been used by a lab user

        :param total_usage: The total_usage of this EnvironmentProperties.
        :type total_usage: str
        """

        self._total_usage = total_usage

    @property
    def unique_identifier(self):
        """Gets the unique_identifier of this EnvironmentProperties.

        The unique immutable identifier of a resource (Guid).

        :return: The unique_identifier of this EnvironmentProperties.
        :rtype: str
        """
        return self._unique_identifier

    @unique_identifier.setter
    def unique_identifier(self, unique_identifier):
        """Sets the unique_identifier of this EnvironmentProperties.

        The unique immutable identifier of a resource (Guid).

        :param unique_identifier: The unique_identifier of this EnvironmentProperties.
        :type unique_identifier: str
        """

        self._unique_identifier = unique_identifier
