/*
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.Environment;
import org.openapitools.client.model.EnvironmentFragment;
import org.openapitools.client.model.ResetPasswordPayload;
import org.openapitools.client.model.ResponseWithContinuationEnvironment;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EnvironmentsApi
 */
@Disabled
public class EnvironmentsApiTest {

    private final EnvironmentsApi api = new EnvironmentsApi();

    /**
     * Claims the environment and assigns it to the user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsClaimTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String environmentSettingName = null;
        String environmentName = null;
        String apiVersion = null;
        api.environmentsClaim(subscriptionId, resourceGroupName, labAccountName, labName, environmentSettingName, environmentName, apiVersion);
        // TODO: test validations
    }

    /**
     * Create or replace an existing Environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String environmentSettingName = null;
        String environmentName = null;
        String apiVersion = null;
        Environment environment = null;
        Environment response = api.environmentsCreateOrUpdate(subscriptionId, resourceGroupName, labAccountName, labName, environmentSettingName, environmentName, apiVersion, environment);
        // TODO: test validations
    }

    /**
     * Delete environment. This operation can take a while to complete
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String environmentSettingName = null;
        String environmentName = null;
        String apiVersion = null;
        api.environmentsDelete(subscriptionId, resourceGroupName, labAccountName, labName, environmentSettingName, environmentName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get environment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String environmentSettingName = null;
        String environmentName = null;
        String apiVersion = null;
        String $expand = null;
        Environment response = api.environmentsGet(subscriptionId, resourceGroupName, labAccountName, labName, environmentSettingName, environmentName, apiVersion, $expand);
        // TODO: test validations
    }

    /**
     * List environments in a given environment setting.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String environmentSettingName = null;
        String apiVersion = null;
        String $expand = null;
        String $filter = null;
        Integer $top = null;
        String $orderby = null;
        ResponseWithContinuationEnvironment response = api.environmentsList(subscriptionId, resourceGroupName, labAccountName, labName, environmentSettingName, apiVersion, $expand, $filter, $top, $orderby);
        // TODO: test validations
    }

    /**
     * Resets the user password on an environment This operation can take a while to complete
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsResetPasswordTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String environmentSettingName = null;
        String environmentName = null;
        String apiVersion = null;
        ResetPasswordPayload resetPasswordPayload = null;
        api.environmentsResetPassword(subscriptionId, resourceGroupName, labAccountName, labName, environmentSettingName, environmentName, apiVersion, resetPasswordPayload);
        // TODO: test validations
    }

    /**
     * Starts an environment by starting all resources inside the environment. This operation can take a while to complete
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsStartTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String environmentSettingName = null;
        String environmentName = null;
        String apiVersion = null;
        api.environmentsStart(subscriptionId, resourceGroupName, labAccountName, labName, environmentSettingName, environmentName, apiVersion);
        // TODO: test validations
    }

    /**
     * Stops an environment by stopping all resources inside the environment This operation can take a while to complete
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsStopTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String environmentSettingName = null;
        String environmentName = null;
        String apiVersion = null;
        api.environmentsStop(subscriptionId, resourceGroupName, labAccountName, labName, environmentSettingName, environmentName, apiVersion);
        // TODO: test validations
    }

    /**
     * Modify properties of environments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String environmentSettingName = null;
        String environmentName = null;
        String apiVersion = null;
        EnvironmentFragment environment = null;
        Environment response = api.environmentsUpdate(subscriptionId, resourceGroupName, labAccountName, labName, environmentSettingName, environmentName, apiVersion, environment);
        // TODO: test validations
    }

}
