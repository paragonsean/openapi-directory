/*
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.EnvironmentOperationsPayload;
import org.openapitools.client.model.GetEnvironmentResponse;
import org.openapitools.client.model.GetPersonalPreferencesResponse;
import org.openapitools.client.model.ListEnvironmentsPayload;
import org.openapitools.client.model.ListEnvironmentsResponse;
import org.openapitools.client.model.ListLabsResponse;
import org.openapitools.client.model.OperationBatchStatusPayload;
import org.openapitools.client.model.OperationBatchStatusResponse;
import org.openapitools.client.model.OperationStatusPayload;
import org.openapitools.client.model.OperationStatusResponse;
import org.openapitools.client.model.PersonalPreferencesOperationsPayload;
import org.openapitools.client.model.RegisterPayload;
import org.openapitools.client.model.ResetPasswordPayload;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GlobalUsersApi
 */
@Disabled
public class GlobalUsersApiTest {

    private final GlobalUsersApi api = new GlobalUsersApi();

    /**
     * Gets the virtual machine details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalUsersGetEnvironmentTest() throws ApiException {
        String userName = null;
        String apiVersion = null;
        EnvironmentOperationsPayload environmentOperationsPayload = null;
        String $expand = null;
        GetEnvironmentResponse response = api.globalUsersGetEnvironment(userName, apiVersion, environmentOperationsPayload, $expand);
        // TODO: test validations
    }

    /**
     * Get batch operation status
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalUsersGetOperationBatchStatusTest() throws ApiException {
        String userName = null;
        String apiVersion = null;
        OperationBatchStatusPayload operationBatchStatusPayload = null;
        OperationBatchStatusResponse response = api.globalUsersGetOperationBatchStatus(userName, apiVersion, operationBatchStatusPayload);
        // TODO: test validations
    }

    /**
     * Gets the status of long running operation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalUsersGetOperationStatusTest() throws ApiException {
        String userName = null;
        String apiVersion = null;
        OperationStatusPayload operationStatusPayload = null;
        OperationStatusResponse response = api.globalUsersGetOperationStatus(userName, apiVersion, operationStatusPayload);
        // TODO: test validations
    }

    /**
     * Get personal preferences for a user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalUsersGetPersonalPreferencesTest() throws ApiException {
        String userName = null;
        String apiVersion = null;
        PersonalPreferencesOperationsPayload personalPreferencesOperationsPayload = null;
        GetPersonalPreferencesResponse response = api.globalUsersGetPersonalPreferences(userName, apiVersion, personalPreferencesOperationsPayload);
        // TODO: test validations
    }

    /**
     * List Environments for the user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalUsersListEnvironmentsTest() throws ApiException {
        String userName = null;
        String apiVersion = null;
        ListEnvironmentsPayload listEnvironmentsPayload = null;
        ListEnvironmentsResponse response = api.globalUsersListEnvironments(userName, apiVersion, listEnvironmentsPayload);
        // TODO: test validations
    }

    /**
     * List labs for the user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalUsersListLabsTest() throws ApiException {
        String userName = null;
        String apiVersion = null;
        ListLabsResponse response = api.globalUsersListLabs(userName, apiVersion);
        // TODO: test validations
    }

    /**
     * Register a user to a managed lab
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalUsersRegisterTest() throws ApiException {
        String userName = null;
        String apiVersion = null;
        RegisterPayload registerPayload = null;
        api.globalUsersRegister(userName, apiVersion, registerPayload);
        // TODO: test validations
    }

    /**
     * Resets the user password on an environment This operation can take a while to complete
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalUsersResetPasswordTest() throws ApiException {
        String userName = null;
        String apiVersion = null;
        ResetPasswordPayload resetPasswordPayload = null;
        api.globalUsersResetPassword(userName, apiVersion, resetPasswordPayload);
        // TODO: test validations
    }

    /**
     * Starts an environment by starting all resources inside the environment. This operation can take a while to complete
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalUsersStartEnvironmentTest() throws ApiException {
        String userName = null;
        String apiVersion = null;
        EnvironmentOperationsPayload environmentOperationsPayload = null;
        api.globalUsersStartEnvironment(userName, apiVersion, environmentOperationsPayload);
        // TODO: test validations
    }

    /**
     * Stops an environment by stopping all resources inside the environment This operation can take a while to complete
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalUsersStopEnvironmentTest() throws ApiException {
        String userName = null;
        String apiVersion = null;
        EnvironmentOperationsPayload environmentOperationsPayload = null;
        api.globalUsersStopEnvironment(userName, apiVersion, environmentOperationsPayload);
        // TODO: test validations
    }

}
