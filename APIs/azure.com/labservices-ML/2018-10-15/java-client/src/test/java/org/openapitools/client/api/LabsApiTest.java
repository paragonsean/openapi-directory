/*
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddUsersPayload;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.Lab;
import org.openapitools.client.model.LabFragment;
import org.openapitools.client.model.ResponseWithContinuationLab;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LabsApi
 */
@Disabled
public class LabsApiTest {

    private final LabsApi api = new LabsApi();

    /**
     * Add users to a lab
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void labsAddUsersTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String apiVersion = null;
        AddUsersPayload addUsersPayload = null;
        api.labsAddUsers(subscriptionId, resourceGroupName, labAccountName, labName, apiVersion, addUsersPayload);
        // TODO: test validations
    }

    /**
     * Create or replace an existing Lab.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void labsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String apiVersion = null;
        Lab lab = null;
        Lab response = api.labsCreateOrUpdate(subscriptionId, resourceGroupName, labAccountName, labName, apiVersion, lab);
        // TODO: test validations
    }

    /**
     * Delete lab. This operation can take a while to complete
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void labsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String apiVersion = null;
        api.labsDelete(subscriptionId, resourceGroupName, labAccountName, labName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get lab
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void labsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String apiVersion = null;
        String $expand = null;
        Lab response = api.labsGet(subscriptionId, resourceGroupName, labAccountName, labName, apiVersion, $expand);
        // TODO: test validations
    }

    /**
     * List labs in a given lab account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void labsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String apiVersion = null;
        String $expand = null;
        String $filter = null;
        Integer $top = null;
        String $orderby = null;
        ResponseWithContinuationLab response = api.labsList(subscriptionId, resourceGroupName, labAccountName, apiVersion, $expand, $filter, $top, $orderby);
        // TODO: test validations
    }

    /**
     * Register to managed lab.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void labsRegisterTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String apiVersion = null;
        api.labsRegister(subscriptionId, resourceGroupName, labAccountName, labName, apiVersion);
        // TODO: test validations
    }

    /**
     * Modify properties of labs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void labsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String labAccountName = null;
        String labName = null;
        String apiVersion = null;
        LabFragment lab = null;
        Lab response = api.labsUpdate(subscriptionId, resourceGroupName, labAccountName, labName, apiVersion, lab);
        // TODO: test validations
    }

}
