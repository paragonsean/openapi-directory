/*
 * ManagedLabsClient
 * The Managed Labs Client.
 *
 * The version of the OpenAPI document: 2018-10-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ReferenceVmFragment;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents resource specific settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:48:25.069739-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResourceSettingsFragment {
  public static final String SERIALIZED_NAME_GALLERY_IMAGE_RESOURCE_ID = "galleryImageResourceId";
  @SerializedName(SERIALIZED_NAME_GALLERY_IMAGE_RESOURCE_ID)
  private String galleryImageResourceId;

  public static final String SERIALIZED_NAME_REFERENCE_VM = "referenceVm";
  @SerializedName(SERIALIZED_NAME_REFERENCE_VM)
  private ReferenceVmFragment referenceVm;

  /**
   * The size of the virtual machine
   */
  @JsonAdapter(SizeEnum.Adapter.class)
  public enum SizeEnum {
    BASIC("Basic"),
    
    STANDARD("Standard"),
    
    PERFORMANCE("Performance");

    private String value;

    SizeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SizeEnum fromValue(String value) {
      for (SizeEnum b : SizeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SizeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SizeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SizeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SizeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SizeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private SizeEnum size;

  public ResourceSettingsFragment() {
  }

  public ResourceSettingsFragment galleryImageResourceId(String galleryImageResourceId) {
    this.galleryImageResourceId = galleryImageResourceId;
    return this;
  }

  /**
   * The resource id of the gallery image used for creating the virtual machine
   * @return galleryImageResourceId
   */
  @javax.annotation.Nullable
  public String getGalleryImageResourceId() {
    return galleryImageResourceId;
  }

  public void setGalleryImageResourceId(String galleryImageResourceId) {
    this.galleryImageResourceId = galleryImageResourceId;
  }


  public ResourceSettingsFragment referenceVm(ReferenceVmFragment referenceVm) {
    this.referenceVm = referenceVm;
    return this;
  }

  /**
   * Get referenceVm
   * @return referenceVm
   */
  @javax.annotation.Nullable
  public ReferenceVmFragment getReferenceVm() {
    return referenceVm;
  }

  public void setReferenceVm(ReferenceVmFragment referenceVm) {
    this.referenceVm = referenceVm;
  }


  public ResourceSettingsFragment size(SizeEnum size) {
    this.size = size;
    return this;
  }

  /**
   * The size of the virtual machine
   * @return size
   */
  @javax.annotation.Nullable
  public SizeEnum getSize() {
    return size;
  }

  public void setSize(SizeEnum size) {
    this.size = size;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceSettingsFragment resourceSettingsFragment = (ResourceSettingsFragment) o;
    return Objects.equals(this.galleryImageResourceId, resourceSettingsFragment.galleryImageResourceId) &&
        Objects.equals(this.referenceVm, resourceSettingsFragment.referenceVm) &&
        Objects.equals(this.size, resourceSettingsFragment.size);
  }

  @Override
  public int hashCode() {
    return Objects.hash(galleryImageResourceId, referenceVm, size);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceSettingsFragment {\n");
    sb.append("    galleryImageResourceId: ").append(toIndentedString(galleryImageResourceId)).append("\n");
    sb.append("    referenceVm: ").append(toIndentedString(referenceVm)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("galleryImageResourceId");
    openapiFields.add("referenceVm");
    openapiFields.add("size");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResourceSettingsFragment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResourceSettingsFragment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResourceSettingsFragment is not found in the empty JSON string", ResourceSettingsFragment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResourceSettingsFragment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResourceSettingsFragment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("galleryImageResourceId") != null && !jsonObj.get("galleryImageResourceId").isJsonNull()) && !jsonObj.get("galleryImageResourceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `galleryImageResourceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("galleryImageResourceId").toString()));
      }
      // validate the optional field `referenceVm`
      if (jsonObj.get("referenceVm") != null && !jsonObj.get("referenceVm").isJsonNull()) {
        ReferenceVmFragment.validateJsonElement(jsonObj.get("referenceVm"));
      }
      if ((jsonObj.get("size") != null && !jsonObj.get("size").isJsonNull()) && !jsonObj.get("size").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `size` to be a primitive type in the JSON string but got `%s`", jsonObj.get("size").toString()));
      }
      // validate the optional field `size`
      if (jsonObj.get("size") != null && !jsonObj.get("size").isJsonNull()) {
        SizeEnum.validateJsonElement(jsonObj.get("size"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResourceSettingsFragment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResourceSettingsFragment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResourceSettingsFragment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResourceSettingsFragment.class));

       return (TypeAdapter<T>) new TypeAdapter<ResourceSettingsFragment>() {
           @Override
           public void write(JsonWriter out, ResourceSettingsFragment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResourceSettingsFragment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResourceSettingsFragment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResourceSettingsFragment
   * @throws IOException if the JSON string is invalid with respect to ResourceSettingsFragment
   */
  public static ResourceSettingsFragment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResourceSettingsFragment.class);
  }

  /**
   * Convert an instance of ResourceSettingsFragment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

