/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WebAppsApiClient);
  }
}(this, function(expect, WebAppsApiClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WebAppsList200ResponseValueInnerProperties', function() {
    it('should create an instance of WebAppsList200ResponseValueInnerProperties', function() {
      // uncomment below and update the code to test WebAppsList200ResponseValueInnerProperties
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be.a(WebAppsApiClient.WebAppsList200ResponseValueInnerProperties);
    });

    it('should have the property availabilityState (base name: "availabilityState")', function() {
      // uncomment below and update the code to test the property availabilityState
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property clientAffinityEnabled (base name: "clientAffinityEnabled")', function() {
      // uncomment below and update the code to test the property clientAffinityEnabled
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property clientCertEnabled (base name: "clientCertEnabled")', function() {
      // uncomment below and update the code to test the property clientCertEnabled
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property cloningInfo (base name: "cloningInfo")', function() {
      // uncomment below and update the code to test the property cloningInfo
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property containerSize (base name: "containerSize")', function() {
      // uncomment below and update the code to test the property containerSize
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property dailyMemoryTimeQuota (base name: "dailyMemoryTimeQuota")', function() {
      // uncomment below and update the code to test the property dailyMemoryTimeQuota
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property defaultHostName (base name: "defaultHostName")', function() {
      // uncomment below and update the code to test the property defaultHostName
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property enabledHostNames (base name: "enabledHostNames")', function() {
      // uncomment below and update the code to test the property enabledHostNames
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property hostNameSslStates (base name: "hostNameSslStates")', function() {
      // uncomment below and update the code to test the property hostNameSslStates
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property hostNames (base name: "hostNames")', function() {
      // uncomment below and update the code to test the property hostNames
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property hostNamesDisabled (base name: "hostNamesDisabled")', function() {
      // uncomment below and update the code to test the property hostNamesDisabled
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property hostingEnvironmentProfile (base name: "hostingEnvironmentProfile")', function() {
      // uncomment below and update the code to test the property hostingEnvironmentProfile
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property httpsOnly (base name: "httpsOnly")', function() {
      // uncomment below and update the code to test the property httpsOnly
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property isDefaultContainer (base name: "isDefaultContainer")', function() {
      // uncomment below and update the code to test the property isDefaultContainer
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedTimeUtc (base name: "lastModifiedTimeUtc")', function() {
      // uncomment below and update the code to test the property lastModifiedTimeUtc
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property maxNumberOfWorkers (base name: "maxNumberOfWorkers")', function() {
      // uncomment below and update the code to test the property maxNumberOfWorkers
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property outboundIpAddresses (base name: "outboundIpAddresses")', function() {
      // uncomment below and update the code to test the property outboundIpAddresses
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property possibleOutboundIpAddresses (base name: "possibleOutboundIpAddresses")', function() {
      // uncomment below and update the code to test the property possibleOutboundIpAddresses
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property repositorySiteName (base name: "repositorySiteName")', function() {
      // uncomment below and update the code to test the property repositorySiteName
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property reserved (base name: "reserved")', function() {
      // uncomment below and update the code to test the property reserved
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property resourceGroup (base name: "resourceGroup")', function() {
      // uncomment below and update the code to test the property resourceGroup
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property scmSiteAlsoStopped (base name: "scmSiteAlsoStopped")', function() {
      // uncomment below and update the code to test the property scmSiteAlsoStopped
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property serverFarmId (base name: "serverFarmId")', function() {
      // uncomment below and update the code to test the property serverFarmId
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property siteConfig (base name: "siteConfig")', function() {
      // uncomment below and update the code to test the property siteConfig
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property slotSwapStatus (base name: "slotSwapStatus")', function() {
      // uncomment below and update the code to test the property slotSwapStatus
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property snapshotInfo (base name: "snapshotInfo")', function() {
      // uncomment below and update the code to test the property snapshotInfo
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property suspendedTill (base name: "suspendedTill")', function() {
      // uncomment below and update the code to test the property suspendedTill
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property targetSwapSlot (base name: "targetSwapSlot")', function() {
      // uncomment below and update the code to test the property targetSwapSlot
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property trafficManagerHostNames (base name: "trafficManagerHostNames")', function() {
      // uncomment below and update the code to test the property trafficManagerHostNames
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property usageState (base name: "usageState")', function() {
      // uncomment below and update the code to test the property usageState
      //var instance = new WebAppsApiClient.WebAppsList200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

  });

}));
