/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WebAppsList200ResponseValueInnerPropertiesCloningInfo from './WebAppsList200ResponseValueInnerPropertiesCloningInfo';
import WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner from './WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner';
import WebAppsList200ResponseValueInnerPropertiesHostingEnvironmentProfile from './WebAppsList200ResponseValueInnerPropertiesHostingEnvironmentProfile';
import WebAppsList200ResponseValueInnerPropertiesSiteConfig from './WebAppsList200ResponseValueInnerPropertiesSiteConfig';
import WebAppsList200ResponseValueInnerPropertiesSlotSwapStatus from './WebAppsList200ResponseValueInnerPropertiesSlotSwapStatus';
import WebAppsList200ResponseValueInnerPropertiesSnapshotInfo from './WebAppsList200ResponseValueInnerPropertiesSnapshotInfo';

/**
 * The WebAppsList200ResponseValueInnerProperties model module.
 * @module model/WebAppsList200ResponseValueInnerProperties
 * @version 2016-08-01
 */
class WebAppsList200ResponseValueInnerProperties {
    /**
     * Constructs a new <code>WebAppsList200ResponseValueInnerProperties</code>.
     * Site resource specific properties
     * @alias module:model/WebAppsList200ResponseValueInnerProperties
     */
    constructor() { 
        
        WebAppsList200ResponseValueInnerProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['reserved'] = false;
        obj['scmSiteAlsoStopped'] = false;
    }

    /**
     * Constructs a <code>WebAppsList200ResponseValueInnerProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebAppsList200ResponseValueInnerProperties} obj Optional instance to populate.
     * @return {module:model/WebAppsList200ResponseValueInnerProperties} The populated <code>WebAppsList200ResponseValueInnerProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebAppsList200ResponseValueInnerProperties();

            if (data.hasOwnProperty('availabilityState')) {
                obj['availabilityState'] = ApiClient.convertToType(data['availabilityState'], 'String');
            }
            if (data.hasOwnProperty('clientAffinityEnabled')) {
                obj['clientAffinityEnabled'] = ApiClient.convertToType(data['clientAffinityEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('clientCertEnabled')) {
                obj['clientCertEnabled'] = ApiClient.convertToType(data['clientCertEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('cloningInfo')) {
                obj['cloningInfo'] = WebAppsList200ResponseValueInnerPropertiesCloningInfo.constructFromObject(data['cloningInfo']);
            }
            if (data.hasOwnProperty('containerSize')) {
                obj['containerSize'] = ApiClient.convertToType(data['containerSize'], 'Number');
            }
            if (data.hasOwnProperty('dailyMemoryTimeQuota')) {
                obj['dailyMemoryTimeQuota'] = ApiClient.convertToType(data['dailyMemoryTimeQuota'], 'Number');
            }
            if (data.hasOwnProperty('defaultHostName')) {
                obj['defaultHostName'] = ApiClient.convertToType(data['defaultHostName'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('enabledHostNames')) {
                obj['enabledHostNames'] = ApiClient.convertToType(data['enabledHostNames'], ['String']);
            }
            if (data.hasOwnProperty('hostNameSslStates')) {
                obj['hostNameSslStates'] = ApiClient.convertToType(data['hostNameSslStates'], [WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner]);
            }
            if (data.hasOwnProperty('hostNames')) {
                obj['hostNames'] = ApiClient.convertToType(data['hostNames'], ['String']);
            }
            if (data.hasOwnProperty('hostNamesDisabled')) {
                obj['hostNamesDisabled'] = ApiClient.convertToType(data['hostNamesDisabled'], 'Boolean');
            }
            if (data.hasOwnProperty('hostingEnvironmentProfile')) {
                obj['hostingEnvironmentProfile'] = WebAppsList200ResponseValueInnerPropertiesHostingEnvironmentProfile.constructFromObject(data['hostingEnvironmentProfile']);
            }
            if (data.hasOwnProperty('httpsOnly')) {
                obj['httpsOnly'] = ApiClient.convertToType(data['httpsOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('isDefaultContainer')) {
                obj['isDefaultContainer'] = ApiClient.convertToType(data['isDefaultContainer'], 'Boolean');
            }
            if (data.hasOwnProperty('lastModifiedTimeUtc')) {
                obj['lastModifiedTimeUtc'] = ApiClient.convertToType(data['lastModifiedTimeUtc'], 'Date');
            }
            if (data.hasOwnProperty('maxNumberOfWorkers')) {
                obj['maxNumberOfWorkers'] = ApiClient.convertToType(data['maxNumberOfWorkers'], 'Number');
            }
            if (data.hasOwnProperty('outboundIpAddresses')) {
                obj['outboundIpAddresses'] = ApiClient.convertToType(data['outboundIpAddresses'], 'String');
            }
            if (data.hasOwnProperty('possibleOutboundIpAddresses')) {
                obj['possibleOutboundIpAddresses'] = ApiClient.convertToType(data['possibleOutboundIpAddresses'], 'String');
            }
            if (data.hasOwnProperty('repositorySiteName')) {
                obj['repositorySiteName'] = ApiClient.convertToType(data['repositorySiteName'], 'String');
            }
            if (data.hasOwnProperty('reserved')) {
                obj['reserved'] = ApiClient.convertToType(data['reserved'], 'Boolean');
            }
            if (data.hasOwnProperty('resourceGroup')) {
                obj['resourceGroup'] = ApiClient.convertToType(data['resourceGroup'], 'String');
            }
            if (data.hasOwnProperty('scmSiteAlsoStopped')) {
                obj['scmSiteAlsoStopped'] = ApiClient.convertToType(data['scmSiteAlsoStopped'], 'Boolean');
            }
            if (data.hasOwnProperty('serverFarmId')) {
                obj['serverFarmId'] = ApiClient.convertToType(data['serverFarmId'], 'String');
            }
            if (data.hasOwnProperty('siteConfig')) {
                obj['siteConfig'] = WebAppsList200ResponseValueInnerPropertiesSiteConfig.constructFromObject(data['siteConfig']);
            }
            if (data.hasOwnProperty('slotSwapStatus')) {
                obj['slotSwapStatus'] = WebAppsList200ResponseValueInnerPropertiesSlotSwapStatus.constructFromObject(data['slotSwapStatus']);
            }
            if (data.hasOwnProperty('snapshotInfo')) {
                obj['snapshotInfo'] = WebAppsList200ResponseValueInnerPropertiesSnapshotInfo.constructFromObject(data['snapshotInfo']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('suspendedTill')) {
                obj['suspendedTill'] = ApiClient.convertToType(data['suspendedTill'], 'Date');
            }
            if (data.hasOwnProperty('targetSwapSlot')) {
                obj['targetSwapSlot'] = ApiClient.convertToType(data['targetSwapSlot'], 'String');
            }
            if (data.hasOwnProperty('trafficManagerHostNames')) {
                obj['trafficManagerHostNames'] = ApiClient.convertToType(data['trafficManagerHostNames'], ['String']);
            }
            if (data.hasOwnProperty('usageState')) {
                obj['usageState'] = ApiClient.convertToType(data['usageState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebAppsList200ResponseValueInnerProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebAppsList200ResponseValueInnerProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['availabilityState'] && !(typeof data['availabilityState'] === 'string' || data['availabilityState'] instanceof String)) {
            throw new Error("Expected the field `availabilityState` to be a primitive type in the JSON string but got " + data['availabilityState']);
        }
        // validate the optional field `cloningInfo`
        if (data['cloningInfo']) { // data not null
          WebAppsList200ResponseValueInnerPropertiesCloningInfo.validateJSON(data['cloningInfo']);
        }
        // ensure the json data is a string
        if (data['defaultHostName'] && !(typeof data['defaultHostName'] === 'string' || data['defaultHostName'] instanceof String)) {
            throw new Error("Expected the field `defaultHostName` to be a primitive type in the JSON string but got " + data['defaultHostName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['enabledHostNames'])) {
            throw new Error("Expected the field `enabledHostNames` to be an array in the JSON data but got " + data['enabledHostNames']);
        }
        if (data['hostNameSslStates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['hostNameSslStates'])) {
                throw new Error("Expected the field `hostNameSslStates` to be an array in the JSON data but got " + data['hostNameSslStates']);
            }
            // validate the optional field `hostNameSslStates` (array)
            for (const item of data['hostNameSslStates']) {
                WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['hostNames'])) {
            throw new Error("Expected the field `hostNames` to be an array in the JSON data but got " + data['hostNames']);
        }
        // validate the optional field `hostingEnvironmentProfile`
        if (data['hostingEnvironmentProfile']) { // data not null
          WebAppsList200ResponseValueInnerPropertiesHostingEnvironmentProfile.validateJSON(data['hostingEnvironmentProfile']);
        }
        // ensure the json data is a string
        if (data['outboundIpAddresses'] && !(typeof data['outboundIpAddresses'] === 'string' || data['outboundIpAddresses'] instanceof String)) {
            throw new Error("Expected the field `outboundIpAddresses` to be a primitive type in the JSON string but got " + data['outboundIpAddresses']);
        }
        // ensure the json data is a string
        if (data['possibleOutboundIpAddresses'] && !(typeof data['possibleOutboundIpAddresses'] === 'string' || data['possibleOutboundIpAddresses'] instanceof String)) {
            throw new Error("Expected the field `possibleOutboundIpAddresses` to be a primitive type in the JSON string but got " + data['possibleOutboundIpAddresses']);
        }
        // ensure the json data is a string
        if (data['repositorySiteName'] && !(typeof data['repositorySiteName'] === 'string' || data['repositorySiteName'] instanceof String)) {
            throw new Error("Expected the field `repositorySiteName` to be a primitive type in the JSON string but got " + data['repositorySiteName']);
        }
        // ensure the json data is a string
        if (data['resourceGroup'] && !(typeof data['resourceGroup'] === 'string' || data['resourceGroup'] instanceof String)) {
            throw new Error("Expected the field `resourceGroup` to be a primitive type in the JSON string but got " + data['resourceGroup']);
        }
        // ensure the json data is a string
        if (data['serverFarmId'] && !(typeof data['serverFarmId'] === 'string' || data['serverFarmId'] instanceof String)) {
            throw new Error("Expected the field `serverFarmId` to be a primitive type in the JSON string but got " + data['serverFarmId']);
        }
        // validate the optional field `siteConfig`
        if (data['siteConfig']) { // data not null
          WebAppsList200ResponseValueInnerPropertiesSiteConfig.validateJSON(data['siteConfig']);
        }
        // validate the optional field `slotSwapStatus`
        if (data['slotSwapStatus']) { // data not null
          WebAppsList200ResponseValueInnerPropertiesSlotSwapStatus.validateJSON(data['slotSwapStatus']);
        }
        // validate the optional field `snapshotInfo`
        if (data['snapshotInfo']) { // data not null
          WebAppsList200ResponseValueInnerPropertiesSnapshotInfo.validateJSON(data['snapshotInfo']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['targetSwapSlot'] && !(typeof data['targetSwapSlot'] === 'string' || data['targetSwapSlot'] instanceof String)) {
            throw new Error("Expected the field `targetSwapSlot` to be a primitive type in the JSON string but got " + data['targetSwapSlot']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['trafficManagerHostNames'])) {
            throw new Error("Expected the field `trafficManagerHostNames` to be an array in the JSON data but got " + data['trafficManagerHostNames']);
        }
        // ensure the json data is a string
        if (data['usageState'] && !(typeof data['usageState'] === 'string' || data['usageState'] instanceof String)) {
            throw new Error("Expected the field `usageState` to be a primitive type in the JSON string but got " + data['usageState']);
        }

        return true;
    }


}



/**
 * Management information availability state for the app.
 * @member {module:model/WebAppsList200ResponseValueInnerProperties.AvailabilityStateEnum} availabilityState
 */
WebAppsList200ResponseValueInnerProperties.prototype['availabilityState'] = undefined;

/**
 * <code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.
 * @member {Boolean} clientAffinityEnabled
 */
WebAppsList200ResponseValueInnerProperties.prototype['clientAffinityEnabled'] = undefined;

/**
 * <code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.
 * @member {Boolean} clientCertEnabled
 */
WebAppsList200ResponseValueInnerProperties.prototype['clientCertEnabled'] = undefined;

/**
 * @member {module:model/WebAppsList200ResponseValueInnerPropertiesCloningInfo} cloningInfo
 */
WebAppsList200ResponseValueInnerProperties.prototype['cloningInfo'] = undefined;

/**
 * Size of the function container.
 * @member {Number} containerSize
 */
WebAppsList200ResponseValueInnerProperties.prototype['containerSize'] = undefined;

/**
 * Maximum allowed daily memory-time quota (applicable on dynamic apps only).
 * @member {Number} dailyMemoryTimeQuota
 */
WebAppsList200ResponseValueInnerProperties.prototype['dailyMemoryTimeQuota'] = undefined;

/**
 * Default hostname of the app. Read-only.
 * @member {String} defaultHostName
 */
WebAppsList200ResponseValueInnerProperties.prototype['defaultHostName'] = undefined;

/**
 * <code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).
 * @member {Boolean} enabled
 */
WebAppsList200ResponseValueInnerProperties.prototype['enabled'] = undefined;

/**
 * Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise, the app is not served on those hostnames.
 * @member {Array.<String>} enabledHostNames
 */
WebAppsList200ResponseValueInnerProperties.prototype['enabledHostNames'] = undefined;

/**
 * Hostname SSL states are used to manage the SSL bindings for app's hostnames.
 * @member {Array.<module:model/WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner>} hostNameSslStates
 */
WebAppsList200ResponseValueInnerProperties.prototype['hostNameSslStates'] = undefined;

/**
 * Hostnames associated with the app.
 * @member {Array.<String>} hostNames
 */
WebAppsList200ResponseValueInnerProperties.prototype['hostNames'] = undefined;

/**
 * <code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.  If <code>true</code>, the app is only accessible via API management process.
 * @member {Boolean} hostNamesDisabled
 */
WebAppsList200ResponseValueInnerProperties.prototype['hostNamesDisabled'] = undefined;

/**
 * @member {module:model/WebAppsList200ResponseValueInnerPropertiesHostingEnvironmentProfile} hostingEnvironmentProfile
 */
WebAppsList200ResponseValueInnerProperties.prototype['hostingEnvironmentProfile'] = undefined;

/**
 * HttpsOnly: configures a web site to accept only https requests. Issues redirect for http requests
 * @member {Boolean} httpsOnly
 */
WebAppsList200ResponseValueInnerProperties.prototype['httpsOnly'] = undefined;

/**
 * <code>true</code> if the app is a default container; otherwise, <code>false</code>.
 * @member {Boolean} isDefaultContainer
 */
WebAppsList200ResponseValueInnerProperties.prototype['isDefaultContainer'] = undefined;

/**
 * Last time the app was modified, in UTC. Read-only.
 * @member {Date} lastModifiedTimeUtc
 */
WebAppsList200ResponseValueInnerProperties.prototype['lastModifiedTimeUtc'] = undefined;

/**
 * Maximum number of workers. This only applies to Functions container.
 * @member {Number} maxNumberOfWorkers
 */
WebAppsList200ResponseValueInnerProperties.prototype['maxNumberOfWorkers'] = undefined;

/**
 * List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.
 * @member {String} outboundIpAddresses
 */
WebAppsList200ResponseValueInnerProperties.prototype['outboundIpAddresses'] = undefined;

/**
 * List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants. Read-only.
 * @member {String} possibleOutboundIpAddresses
 */
WebAppsList200ResponseValueInnerProperties.prototype['possibleOutboundIpAddresses'] = undefined;

/**
 * Name of the repository site.
 * @member {String} repositorySiteName
 */
WebAppsList200ResponseValueInnerProperties.prototype['repositorySiteName'] = undefined;

/**
 * <code>true</code> if reserved; otherwise, <code>false</code>.
 * @member {Boolean} reserved
 * @default false
 */
WebAppsList200ResponseValueInnerProperties.prototype['reserved'] = false;

/**
 * Name of the resource group the app belongs to. Read-only.
 * @member {String} resourceGroup
 */
WebAppsList200ResponseValueInnerProperties.prototype['resourceGroup'] = undefined;

/**
 * <code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.
 * @member {Boolean} scmSiteAlsoStopped
 * @default false
 */
WebAppsList200ResponseValueInnerProperties.prototype['scmSiteAlsoStopped'] = false;

/**
 * Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".
 * @member {String} serverFarmId
 */
WebAppsList200ResponseValueInnerProperties.prototype['serverFarmId'] = undefined;

/**
 * @member {module:model/WebAppsList200ResponseValueInnerPropertiesSiteConfig} siteConfig
 */
WebAppsList200ResponseValueInnerProperties.prototype['siteConfig'] = undefined;

/**
 * @member {module:model/WebAppsList200ResponseValueInnerPropertiesSlotSwapStatus} slotSwapStatus
 */
WebAppsList200ResponseValueInnerProperties.prototype['slotSwapStatus'] = undefined;

/**
 * @member {module:model/WebAppsList200ResponseValueInnerPropertiesSnapshotInfo} snapshotInfo
 */
WebAppsList200ResponseValueInnerProperties.prototype['snapshotInfo'] = undefined;

/**
 * Current state of the app.
 * @member {String} state
 */
WebAppsList200ResponseValueInnerProperties.prototype['state'] = undefined;

/**
 * App suspended till in case memory-time quota is exceeded.
 * @member {Date} suspendedTill
 */
WebAppsList200ResponseValueInnerProperties.prototype['suspendedTill'] = undefined;

/**
 * Specifies which deployment slot this app will swap into. Read-only.
 * @member {String} targetSwapSlot
 */
WebAppsList200ResponseValueInnerProperties.prototype['targetSwapSlot'] = undefined;

/**
 * Azure Traffic Manager hostnames associated with the app. Read-only.
 * @member {Array.<String>} trafficManagerHostNames
 */
WebAppsList200ResponseValueInnerProperties.prototype['trafficManagerHostNames'] = undefined;

/**
 * State indicating whether the app has exceeded its quota usage. Read-only.
 * @member {module:model/WebAppsList200ResponseValueInnerProperties.UsageStateEnum} usageState
 */
WebAppsList200ResponseValueInnerProperties.prototype['usageState'] = undefined;





/**
 * Allowed values for the <code>availabilityState</code> property.
 * @enum {String}
 * @readonly
 */
WebAppsList200ResponseValueInnerProperties['AvailabilityStateEnum'] = {

    /**
     * value: "Normal"
     * @const
     */
    "Normal": "Normal",

    /**
     * value: "Limited"
     * @const
     */
    "Limited": "Limited",

    /**
     * value: "DisasterRecoveryMode"
     * @const
     */
    "DisasterRecoveryMode": "DisasterRecoveryMode"
};


/**
 * Allowed values for the <code>usageState</code> property.
 * @enum {String}
 * @readonly
 */
WebAppsList200ResponseValueInnerProperties['UsageStateEnum'] = {

    /**
     * value: "Normal"
     * @const
     */
    "Normal": "Normal",

    /**
     * value: "Exceeded"
     * @const
     */
    "Exceeded": "Exceeded"
};



export default WebAppsList200ResponseValueInnerProperties;

