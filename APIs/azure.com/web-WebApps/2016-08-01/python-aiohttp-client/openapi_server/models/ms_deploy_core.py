# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MSDeployCore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_offline: bool=None, connection_string: str=None, db_type: str=None, package_uri: str=None, set_parameters: Dict[str, str]=None, set_parameters_xml_file_uri: str=None, skip_app_data: bool=None):
        """MSDeployCore - a model defined in OpenAPI

        :param app_offline: The app_offline of this MSDeployCore.
        :param connection_string: The connection_string of this MSDeployCore.
        :param db_type: The db_type of this MSDeployCore.
        :param package_uri: The package_uri of this MSDeployCore.
        :param set_parameters: The set_parameters of this MSDeployCore.
        :param set_parameters_xml_file_uri: The set_parameters_xml_file_uri of this MSDeployCore.
        :param skip_app_data: The skip_app_data of this MSDeployCore.
        """
        self.openapi_types = {
            'app_offline': bool,
            'connection_string': str,
            'db_type': str,
            'package_uri': str,
            'set_parameters': Dict[str, str],
            'set_parameters_xml_file_uri': str,
            'skip_app_data': bool
        }

        self.attribute_map = {
            'app_offline': 'appOffline',
            'connection_string': 'connectionString',
            'db_type': 'dbType',
            'package_uri': 'packageUri',
            'set_parameters': 'setParameters',
            'set_parameters_xml_file_uri': 'setParametersXmlFileUri',
            'skip_app_data': 'skipAppData'
        }

        self._app_offline = app_offline
        self._connection_string = connection_string
        self._db_type = db_type
        self._package_uri = package_uri
        self._set_parameters = set_parameters
        self._set_parameters_xml_file_uri = set_parameters_xml_file_uri
        self._skip_app_data = skip_app_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MSDeployCore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MSDeployCore of this MSDeployCore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_offline(self):
        """Gets the app_offline of this MSDeployCore.

        Sets the AppOffline rule while the MSDeploy operation executes. Setting is <code>false</code> by default.

        :return: The app_offline of this MSDeployCore.
        :rtype: bool
        """
        return self._app_offline

    @app_offline.setter
    def app_offline(self, app_offline):
        """Sets the app_offline of this MSDeployCore.

        Sets the AppOffline rule while the MSDeploy operation executes. Setting is <code>false</code> by default.

        :param app_offline: The app_offline of this MSDeployCore.
        :type app_offline: bool
        """

        self._app_offline = app_offline

    @property
    def connection_string(self):
        """Gets the connection_string of this MSDeployCore.

        SQL Connection String

        :return: The connection_string of this MSDeployCore.
        :rtype: str
        """
        return self._connection_string

    @connection_string.setter
    def connection_string(self, connection_string):
        """Sets the connection_string of this MSDeployCore.

        SQL Connection String

        :param connection_string: The connection_string of this MSDeployCore.
        :type connection_string: str
        """

        self._connection_string = connection_string

    @property
    def db_type(self):
        """Gets the db_type of this MSDeployCore.

        Database Type

        :return: The db_type of this MSDeployCore.
        :rtype: str
        """
        return self._db_type

    @db_type.setter
    def db_type(self, db_type):
        """Sets the db_type of this MSDeployCore.

        Database Type

        :param db_type: The db_type of this MSDeployCore.
        :type db_type: str
        """

        self._db_type = db_type

    @property
    def package_uri(self):
        """Gets the package_uri of this MSDeployCore.

        Package URI

        :return: The package_uri of this MSDeployCore.
        :rtype: str
        """
        return self._package_uri

    @package_uri.setter
    def package_uri(self, package_uri):
        """Sets the package_uri of this MSDeployCore.

        Package URI

        :param package_uri: The package_uri of this MSDeployCore.
        :type package_uri: str
        """

        self._package_uri = package_uri

    @property
    def set_parameters(self):
        """Gets the set_parameters of this MSDeployCore.

        MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.

        :return: The set_parameters of this MSDeployCore.
        :rtype: Dict[str, str]
        """
        return self._set_parameters

    @set_parameters.setter
    def set_parameters(self, set_parameters):
        """Sets the set_parameters of this MSDeployCore.

        MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.

        :param set_parameters: The set_parameters of this MSDeployCore.
        :type set_parameters: Dict[str, str]
        """

        self._set_parameters = set_parameters

    @property
    def set_parameters_xml_file_uri(self):
        """Gets the set_parameters_xml_file_uri of this MSDeployCore.

        URI of MSDeploy Parameters file. Must not be set if SetParameters is used.

        :return: The set_parameters_xml_file_uri of this MSDeployCore.
        :rtype: str
        """
        return self._set_parameters_xml_file_uri

    @set_parameters_xml_file_uri.setter
    def set_parameters_xml_file_uri(self, set_parameters_xml_file_uri):
        """Sets the set_parameters_xml_file_uri of this MSDeployCore.

        URI of MSDeploy Parameters file. Must not be set if SetParameters is used.

        :param set_parameters_xml_file_uri: The set_parameters_xml_file_uri of this MSDeployCore.
        :type set_parameters_xml_file_uri: str
        """

        self._set_parameters_xml_file_uri = set_parameters_xml_file_uri

    @property
    def skip_app_data(self):
        """Gets the skip_app_data of this MSDeployCore.

        Controls whether the MSDeploy operation skips the App_Data directory. If set to <code>true</code>, the existing App_Data directory on the destination will not be deleted, and any App_Data directory in the source will be ignored. Setting is <code>false</code> by default.

        :return: The skip_app_data of this MSDeployCore.
        :rtype: bool
        """
        return self._skip_app_data

    @skip_app_data.setter
    def skip_app_data(self, skip_app_data):
        """Sets the skip_app_data of this MSDeployCore.

        Controls whether the MSDeploy operation skips the App_Data directory. If set to <code>true</code>, the existing App_Data directory on the destination will not be deleted, and any App_Data directory in the source will be ignored. Setting is <code>false</code> by default.

        :param skip_app_data: The skip_app_data of this MSDeployCore.
        :type skip_app_data: bool
        """

        self._skip_app_data = skip_app_data
