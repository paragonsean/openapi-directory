/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties.h
 *
 * SnapshotRecoveryRequest resource specific properties
 */

#ifndef OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties_H
#define OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties_H

#include <QJsonObject>

#include "OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties_recoveryTarget.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties_recoveryTarget;

class OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties : public OAIObject {
public:
    OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties();
    OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties(QString json);
    ~OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIgnoreConflictingHostNames() const;
    void setIgnoreConflictingHostNames(const bool &ignore_conflicting_host_names);
    bool is_ignore_conflicting_host_names_Set() const;
    bool is_ignore_conflicting_host_names_Valid() const;

    bool isOverwrite() const;
    void setOverwrite(const bool &overwrite);
    bool is_overwrite_Set() const;
    bool is_overwrite_Valid() const;

    bool isRecoverConfiguration() const;
    void setRecoverConfiguration(const bool &recover_configuration);
    bool is_recover_configuration_Set() const;
    bool is_recover_configuration_Valid() const;

    OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties_recoveryTarget getRecoveryTarget() const;
    void setRecoveryTarget(const OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties_recoveryTarget &recovery_target);
    bool is_recovery_target_Set() const;
    bool is_recovery_target_Valid() const;

    QString getSnapshotTime() const;
    void setSnapshotTime(const QString &snapshot_time);
    bool is_snapshot_time_Set() const;
    bool is_snapshot_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_ignore_conflicting_host_names;
    bool m_ignore_conflicting_host_names_isSet;
    bool m_ignore_conflicting_host_names_isValid;

    bool m_overwrite;
    bool m_overwrite_isSet;
    bool m_overwrite_isValid;

    bool m_recover_configuration;
    bool m_recover_configuration_isSet;
    bool m_recover_configuration_isValid;

    OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties_recoveryTarget m_recovery_target;
    bool m_recovery_target_isSet;
    bool m_recovery_target_isValid;

    QString m_snapshot_time;
    bool m_snapshot_time_isSet;
    bool m_snapshot_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties)

#endif // OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties_H
