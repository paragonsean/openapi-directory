/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties() {
    this->initializeModel();
}

OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::~OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties() {}

void OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::initializeModel() {

    m_ignore_conflicting_host_names_isSet = false;
    m_ignore_conflicting_host_names_isValid = false;

    m_overwrite_isSet = false;
    m_overwrite_isValid = false;

    m_recover_configuration_isSet = false;
    m_recover_configuration_isValid = false;

    m_recovery_target_isSet = false;
    m_recovery_target_isValid = false;

    m_snapshot_time_isSet = false;
    m_snapshot_time_isValid = false;
}

void OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::fromJsonObject(QJsonObject json) {

    m_ignore_conflicting_host_names_isValid = ::OpenAPI::fromJsonValue(m_ignore_conflicting_host_names, json[QString("ignoreConflictingHostNames")]);
    m_ignore_conflicting_host_names_isSet = !json[QString("ignoreConflictingHostNames")].isNull() && m_ignore_conflicting_host_names_isValid;

    m_overwrite_isValid = ::OpenAPI::fromJsonValue(m_overwrite, json[QString("overwrite")]);
    m_overwrite_isSet = !json[QString("overwrite")].isNull() && m_overwrite_isValid;

    m_recover_configuration_isValid = ::OpenAPI::fromJsonValue(m_recover_configuration, json[QString("recoverConfiguration")]);
    m_recover_configuration_isSet = !json[QString("recoverConfiguration")].isNull() && m_recover_configuration_isValid;

    m_recovery_target_isValid = ::OpenAPI::fromJsonValue(m_recovery_target, json[QString("recoveryTarget")]);
    m_recovery_target_isSet = !json[QString("recoveryTarget")].isNull() && m_recovery_target_isValid;

    m_snapshot_time_isValid = ::OpenAPI::fromJsonValue(m_snapshot_time, json[QString("snapshotTime")]);
    m_snapshot_time_isSet = !json[QString("snapshotTime")].isNull() && m_snapshot_time_isValid;
}

QString OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_ignore_conflicting_host_names_isSet) {
        obj.insert(QString("ignoreConflictingHostNames"), ::OpenAPI::toJsonValue(m_ignore_conflicting_host_names));
    }
    if (m_overwrite_isSet) {
        obj.insert(QString("overwrite"), ::OpenAPI::toJsonValue(m_overwrite));
    }
    if (m_recover_configuration_isSet) {
        obj.insert(QString("recoverConfiguration"), ::OpenAPI::toJsonValue(m_recover_configuration));
    }
    if (m_recovery_target.isSet()) {
        obj.insert(QString("recoveryTarget"), ::OpenAPI::toJsonValue(m_recovery_target));
    }
    if (m_snapshot_time_isSet) {
        obj.insert(QString("snapshotTime"), ::OpenAPI::toJsonValue(m_snapshot_time));
    }
    return obj;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::isIgnoreConflictingHostNames() const {
    return m_ignore_conflicting_host_names;
}
void OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::setIgnoreConflictingHostNames(const bool &ignore_conflicting_host_names) {
    m_ignore_conflicting_host_names = ignore_conflicting_host_names;
    m_ignore_conflicting_host_names_isSet = true;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::is_ignore_conflicting_host_names_Set() const{
    return m_ignore_conflicting_host_names_isSet;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::is_ignore_conflicting_host_names_Valid() const{
    return m_ignore_conflicting_host_names_isValid;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::isOverwrite() const {
    return m_overwrite;
}
void OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::setOverwrite(const bool &overwrite) {
    m_overwrite = overwrite;
    m_overwrite_isSet = true;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::is_overwrite_Set() const{
    return m_overwrite_isSet;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::is_overwrite_Valid() const{
    return m_overwrite_isValid;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::isRecoverConfiguration() const {
    return m_recover_configuration;
}
void OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::setRecoverConfiguration(const bool &recover_configuration) {
    m_recover_configuration = recover_configuration;
    m_recover_configuration_isSet = true;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::is_recover_configuration_Set() const{
    return m_recover_configuration_isSet;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::is_recover_configuration_Valid() const{
    return m_recover_configuration_isValid;
}

OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties_recoveryTarget OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::getRecoveryTarget() const {
    return m_recovery_target;
}
void OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::setRecoveryTarget(const OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties_recoveryTarget &recovery_target) {
    m_recovery_target = recovery_target;
    m_recovery_target_isSet = true;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::is_recovery_target_Set() const{
    return m_recovery_target_isSet;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::is_recovery_target_Valid() const{
    return m_recovery_target_isValid;
}

QString OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::getSnapshotTime() const {
    return m_snapshot_time;
}
void OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::setSnapshotTime(const QString &snapshot_time) {
    m_snapshot_time = snapshot_time;
    m_snapshot_time_isSet = true;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::is_snapshot_time_Set() const{
    return m_snapshot_time_isSet;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::is_snapshot_time_Valid() const{
    return m_snapshot_time_isValid;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ignore_conflicting_host_names_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_overwrite_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recover_configuration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_target.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_snapshot_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebApps_List_200_response_value_inner_properties_snapshotInfo_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_overwrite_isValid && true;
}

} // namespace OpenAPI
