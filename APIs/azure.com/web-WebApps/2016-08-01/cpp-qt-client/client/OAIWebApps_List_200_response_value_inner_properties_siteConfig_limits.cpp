/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits() {
    this->initializeModel();
}

OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::~OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits() {}

void OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::initializeModel() {

    m_max_disk_size_in_mb_isSet = false;
    m_max_disk_size_in_mb_isValid = false;

    m_max_memory_in_mb_isSet = false;
    m_max_memory_in_mb_isValid = false;

    m_max_percentage_cpu_isSet = false;
    m_max_percentage_cpu_isValid = false;
}

void OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::fromJsonObject(QJsonObject json) {

    m_max_disk_size_in_mb_isValid = ::OpenAPI::fromJsonValue(m_max_disk_size_in_mb, json[QString("maxDiskSizeInMb")]);
    m_max_disk_size_in_mb_isSet = !json[QString("maxDiskSizeInMb")].isNull() && m_max_disk_size_in_mb_isValid;

    m_max_memory_in_mb_isValid = ::OpenAPI::fromJsonValue(m_max_memory_in_mb, json[QString("maxMemoryInMb")]);
    m_max_memory_in_mb_isSet = !json[QString("maxMemoryInMb")].isNull() && m_max_memory_in_mb_isValid;

    m_max_percentage_cpu_isValid = ::OpenAPI::fromJsonValue(m_max_percentage_cpu, json[QString("maxPercentageCpu")]);
    m_max_percentage_cpu_isSet = !json[QString("maxPercentageCpu")].isNull() && m_max_percentage_cpu_isValid;
}

QString OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::asJsonObject() const {
    QJsonObject obj;
    if (m_max_disk_size_in_mb_isSet) {
        obj.insert(QString("maxDiskSizeInMb"), ::OpenAPI::toJsonValue(m_max_disk_size_in_mb));
    }
    if (m_max_memory_in_mb_isSet) {
        obj.insert(QString("maxMemoryInMb"), ::OpenAPI::toJsonValue(m_max_memory_in_mb));
    }
    if (m_max_percentage_cpu_isSet) {
        obj.insert(QString("maxPercentageCpu"), ::OpenAPI::toJsonValue(m_max_percentage_cpu));
    }
    return obj;
}

qint64 OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::getMaxDiskSizeInMb() const {
    return m_max_disk_size_in_mb;
}
void OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::setMaxDiskSizeInMb(const qint64 &max_disk_size_in_mb) {
    m_max_disk_size_in_mb = max_disk_size_in_mb;
    m_max_disk_size_in_mb_isSet = true;
}

bool OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::is_max_disk_size_in_mb_Set() const{
    return m_max_disk_size_in_mb_isSet;
}

bool OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::is_max_disk_size_in_mb_Valid() const{
    return m_max_disk_size_in_mb_isValid;
}

qint64 OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::getMaxMemoryInMb() const {
    return m_max_memory_in_mb;
}
void OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::setMaxMemoryInMb(const qint64 &max_memory_in_mb) {
    m_max_memory_in_mb = max_memory_in_mb;
    m_max_memory_in_mb_isSet = true;
}

bool OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::is_max_memory_in_mb_Set() const{
    return m_max_memory_in_mb_isSet;
}

bool OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::is_max_memory_in_mb_Valid() const{
    return m_max_memory_in_mb_isValid;
}

double OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::getMaxPercentageCpu() const {
    return m_max_percentage_cpu;
}
void OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::setMaxPercentageCpu(const double &max_percentage_cpu) {
    m_max_percentage_cpu = max_percentage_cpu;
    m_max_percentage_cpu_isSet = true;
}

bool OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::is_max_percentage_cpu_Set() const{
    return m_max_percentage_cpu_isSet;
}

bool OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::is_max_percentage_cpu_Valid() const{
    return m_max_percentage_cpu_isValid;
}

bool OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_disk_size_in_mb_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_memory_in_mb_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_percentage_cpu_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
