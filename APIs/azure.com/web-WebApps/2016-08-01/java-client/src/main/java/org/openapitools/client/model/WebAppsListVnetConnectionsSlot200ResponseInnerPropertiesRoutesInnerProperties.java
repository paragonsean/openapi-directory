/*
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2016-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VnetRoute resource specific properties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:50:18.189067-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties {
  public static final String SERIALIZED_NAME_END_ADDRESS = "endAddress";
  @SerializedName(SERIALIZED_NAME_END_ADDRESS)
  private String endAddress;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * The type of route this is: DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918 INHERITED - Routes inherited from the real Virtual Network routes STATIC - Static route set on the app only  These values will be used for syncing an app&#39;s routes with those from a Virtual Network.
   */
  @JsonAdapter(RouteTypeEnum.Adapter.class)
  public enum RouteTypeEnum {
    DEFAULT("DEFAULT"),
    
    INHERITED("INHERITED"),
    
    STATIC("STATIC");

    private String value;

    RouteTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RouteTypeEnum fromValue(String value) {
      for (RouteTypeEnum b : RouteTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RouteTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RouteTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RouteTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RouteTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RouteTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ROUTE_TYPE = "routeType";
  @SerializedName(SERIALIZED_NAME_ROUTE_TYPE)
  private RouteTypeEnum routeType;

  public static final String SERIALIZED_NAME_START_ADDRESS = "startAddress";
  @SerializedName(SERIALIZED_NAME_START_ADDRESS)
  private String startAddress;

  public WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties() {
  }

  public WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties endAddress(String endAddress) {
    this.endAddress = endAddress;
    return this;
  }

  /**
   * The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
   * @return endAddress
   */
  @javax.annotation.Nullable
  public String getEndAddress() {
    return endAddress;
  }

  public void setEndAddress(String endAddress) {
    this.endAddress = endAddress;
  }


  public WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of this route. This is only returned by the server and does not need to be set by the client.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties routeType(RouteTypeEnum routeType) {
    this.routeType = routeType;
    return this;
  }

  /**
   * The type of route this is: DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918 INHERITED - Routes inherited from the real Virtual Network routes STATIC - Static route set on the app only  These values will be used for syncing an app&#39;s routes with those from a Virtual Network.
   * @return routeType
   */
  @javax.annotation.Nullable
  public RouteTypeEnum getRouteType() {
    return routeType;
  }

  public void setRouteType(RouteTypeEnum routeType) {
    this.routeType = routeType;
  }


  public WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties startAddress(String startAddress) {
    this.startAddress = startAddress;
    return this;
  }

  /**
   * The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
   * @return startAddress
   */
  @javax.annotation.Nullable
  public String getStartAddress() {
    return startAddress;
  }

  public void setStartAddress(String startAddress) {
    this.startAddress = startAddress;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties webAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties = (WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties) o;
    return Objects.equals(this.endAddress, webAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties.endAddress) &&
        Objects.equals(this.name, webAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties.name) &&
        Objects.equals(this.routeType, webAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties.routeType) &&
        Objects.equals(this.startAddress, webAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties.startAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endAddress, name, routeType, startAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties {\n");
    sb.append("    endAddress: ").append(toIndentedString(endAddress)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    routeType: ").append(toIndentedString(routeType)).append("\n");
    sb.append("    startAddress: ").append(toIndentedString(startAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("endAddress");
    openapiFields.add("name");
    openapiFields.add("routeType");
    openapiFields.add("startAddress");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties is not found in the empty JSON string", WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("endAddress") != null && !jsonObj.get("endAddress").isJsonNull()) && !jsonObj.get("endAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endAddress").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("routeType") != null && !jsonObj.get("routeType").isJsonNull()) && !jsonObj.get("routeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `routeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("routeType").toString()));
      }
      // validate the optional field `routeType`
      if (jsonObj.get("routeType") != null && !jsonObj.get("routeType").isJsonNull()) {
        RouteTypeEnum.validateJsonElement(jsonObj.get("routeType"));
      }
      if ((jsonObj.get("startAddress") != null && !jsonObj.get("startAddress").isJsonNull()) && !jsonObj.get("startAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startAddress").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties>() {
           @Override
           public void write(JsonWriter out, WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties
   * @throws IOException if the JSON string is invalid with respect to WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties
   */
  public static WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties.class);
  }

  /**
   * Convert an instance of WebAppsListVnetConnectionsSlot200ResponseInnerPropertiesRoutesInnerProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

