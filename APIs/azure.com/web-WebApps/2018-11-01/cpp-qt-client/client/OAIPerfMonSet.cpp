/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPerfMonSet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPerfMonSet::OAIPerfMonSet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPerfMonSet::OAIPerfMonSet() {
    this->initializeModel();
}

OAIPerfMonSet::~OAIPerfMonSet() {}

void OAIPerfMonSet::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_time_grain_isSet = false;
    m_time_grain_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIPerfMonSet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPerfMonSet::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_time_grain_isValid = ::OpenAPI::fromJsonValue(m_time_grain, json[QString("timeGrain")]);
    m_time_grain_isSet = !json[QString("timeGrain")].isNull() && m_time_grain_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAIPerfMonSet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPerfMonSet::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_time_grain_isSet) {
        obj.insert(QString("timeGrain"), ::OpenAPI::toJsonValue(m_time_grain));
    }
    if (m_values.size() > 0) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QDateTime OAIPerfMonSet::getEndTime() const {
    return m_end_time;
}
void OAIPerfMonSet::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIPerfMonSet::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIPerfMonSet::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIPerfMonSet::getName() const {
    return m_name;
}
void OAIPerfMonSet::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPerfMonSet::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPerfMonSet::is_name_Valid() const{
    return m_name_isValid;
}

QDateTime OAIPerfMonSet::getStartTime() const {
    return m_start_time;
}
void OAIPerfMonSet::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIPerfMonSet::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIPerfMonSet::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIPerfMonSet::getTimeGrain() const {
    return m_time_grain;
}
void OAIPerfMonSet::setTimeGrain(const QString &time_grain) {
    m_time_grain = time_grain;
    m_time_grain_isSet = true;
}

bool OAIPerfMonSet::is_time_grain_Set() const{
    return m_time_grain_isSet;
}

bool OAIPerfMonSet::is_time_grain_Valid() const{
    return m_time_grain_isValid;
}

QList<OAIPerfMonSample> OAIPerfMonSet::getValues() const {
    return m_values;
}
void OAIPerfMonSet::setValues(const QList<OAIPerfMonSample> &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIPerfMonSet::is_values_Set() const{
    return m_values_isSet;
}

bool OAIPerfMonSet::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIPerfMonSet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_grain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPerfMonSet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
