/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebApps_List_200_response_value_inner_properties_siteConfig.h
 *
 * Configuration of an App Service app.
 */

#ifndef OAIWebApps_List_200_response_value_inner_properties_siteConfig_H
#define OAIWebApps_List_200_response_value_inner_properties_siteConfig_H

#include <QJsonObject>

#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_apiDefinition.h"
#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_appSettings_inner.h"
#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_autoHealRules.h"
#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_azureStorageAccounts_value.h"
#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_connectionStrings_inner.h"
#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_cors.h"
#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_experiments.h"
#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_handlerMappings_inner.h"
#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_ipSecurityRestrictions_inner.h"
#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits.h"
#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_machineKey.h"
#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_push.h"
#include "OAIWebApps_List_200_response_value_inner_properties_siteConfig_virtualApplications_inner.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_apiDefinition;
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_appSettings_inner;
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_autoHealRules;
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_azureStorageAccounts_value;
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_connectionStrings_inner;
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_cors;
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_experiments;
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_handlerMappings_inner;
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_ipSecurityRestrictions_inner;
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits;
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_machineKey;
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_push;
class OAIWebApps_List_200_response_value_inner_properties_siteConfig_virtualApplications_inner;

class OAIWebApps_List_200_response_value_inner_properties_siteConfig : public OAIObject {
public:
    OAIWebApps_List_200_response_value_inner_properties_siteConfig();
    OAIWebApps_List_200_response_value_inner_properties_siteConfig(QString json);
    ~OAIWebApps_List_200_response_value_inner_properties_siteConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAlwaysOn() const;
    void setAlwaysOn(const bool &always_on);
    bool is_always_on_Set() const;
    bool is_always_on_Valid() const;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_apiDefinition getApiDefinition() const;
    void setApiDefinition(const OAIWebApps_List_200_response_value_inner_properties_siteConfig_apiDefinition &api_definition);
    bool is_api_definition_Set() const;
    bool is_api_definition_Valid() const;

    QString getAppCommandLine() const;
    void setAppCommandLine(const QString &app_command_line);
    bool is_app_command_line_Set() const;
    bool is_app_command_line_Valid() const;

    QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_appSettings_inner> getAppSettings() const;
    void setAppSettings(const QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_appSettings_inner> &app_settings);
    bool is_app_settings_Set() const;
    bool is_app_settings_Valid() const;

    bool isAutoHealEnabled() const;
    void setAutoHealEnabled(const bool &auto_heal_enabled);
    bool is_auto_heal_enabled_Set() const;
    bool is_auto_heal_enabled_Valid() const;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_autoHealRules getAutoHealRules() const;
    void setAutoHealRules(const OAIWebApps_List_200_response_value_inner_properties_siteConfig_autoHealRules &auto_heal_rules);
    bool is_auto_heal_rules_Set() const;
    bool is_auto_heal_rules_Valid() const;

    QString getAutoSwapSlotName() const;
    void setAutoSwapSlotName(const QString &auto_swap_slot_name);
    bool is_auto_swap_slot_name_Set() const;
    bool is_auto_swap_slot_name_Valid() const;

    QMap<QString, OAIWebApps_List_200_response_value_inner_properties_siteConfig_azureStorageAccounts_value> getAzureStorageAccounts() const;
    void setAzureStorageAccounts(const QMap<QString, OAIWebApps_List_200_response_value_inner_properties_siteConfig_azureStorageAccounts_value> &azure_storage_accounts);
    bool is_azure_storage_accounts_Set() const;
    bool is_azure_storage_accounts_Valid() const;

    QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_connectionStrings_inner> getConnectionStrings() const;
    void setConnectionStrings(const QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_connectionStrings_inner> &connection_strings);
    bool is_connection_strings_Set() const;
    bool is_connection_strings_Valid() const;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_cors getCors() const;
    void setCors(const OAIWebApps_List_200_response_value_inner_properties_siteConfig_cors &cors);
    bool is_cors_Set() const;
    bool is_cors_Valid() const;

    QList<QString> getDefaultDocuments() const;
    void setDefaultDocuments(const QList<QString> &default_documents);
    bool is_default_documents_Set() const;
    bool is_default_documents_Valid() const;

    bool isDetailedErrorLoggingEnabled() const;
    void setDetailedErrorLoggingEnabled(const bool &detailed_error_logging_enabled);
    bool is_detailed_error_logging_enabled_Set() const;
    bool is_detailed_error_logging_enabled_Valid() const;

    QString getDocumentRoot() const;
    void setDocumentRoot(const QString &document_root);
    bool is_document_root_Set() const;
    bool is_document_root_Valid() const;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_experiments getExperiments() const;
    void setExperiments(const OAIWebApps_List_200_response_value_inner_properties_siteConfig_experiments &experiments);
    bool is_experiments_Set() const;
    bool is_experiments_Valid() const;

    QString getFtpsState() const;
    void setFtpsState(const QString &ftps_state);
    bool is_ftps_state_Set() const;
    bool is_ftps_state_Valid() const;

    QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_handlerMappings_inner> getHandlerMappings() const;
    void setHandlerMappings(const QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_handlerMappings_inner> &handler_mappings);
    bool is_handler_mappings_Set() const;
    bool is_handler_mappings_Valid() const;

    bool isHttp20Enabled() const;
    void setHttp20Enabled(const bool &http20_enabled);
    bool is_http20_enabled_Set() const;
    bool is_http20_enabled_Valid() const;

    bool isHttpLoggingEnabled() const;
    void setHttpLoggingEnabled(const bool &http_logging_enabled);
    bool is_http_logging_enabled_Set() const;
    bool is_http_logging_enabled_Valid() const;

    QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_ipSecurityRestrictions_inner> getIpSecurityRestrictions() const;
    void setIpSecurityRestrictions(const QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_ipSecurityRestrictions_inner> &ip_security_restrictions);
    bool is_ip_security_restrictions_Set() const;
    bool is_ip_security_restrictions_Valid() const;

    QString getJavaContainer() const;
    void setJavaContainer(const QString &java_container);
    bool is_java_container_Set() const;
    bool is_java_container_Valid() const;

    QString getJavaContainerVersion() const;
    void setJavaContainerVersion(const QString &java_container_version);
    bool is_java_container_version_Set() const;
    bool is_java_container_version_Valid() const;

    QString getJavaVersion() const;
    void setJavaVersion(const QString &java_version);
    bool is_java_version_Set() const;
    bool is_java_version_Valid() const;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits getLimits() const;
    void setLimits(const OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits &limits);
    bool is_limits_Set() const;
    bool is_limits_Valid() const;

    QString getLinuxFxVersion() const;
    void setLinuxFxVersion(const QString &linux_fx_version);
    bool is_linux_fx_version_Set() const;
    bool is_linux_fx_version_Valid() const;

    QString getLoadBalancing() const;
    void setLoadBalancing(const QString &load_balancing);
    bool is_load_balancing_Set() const;
    bool is_load_balancing_Valid() const;

    bool isLocalMySqlEnabled() const;
    void setLocalMySqlEnabled(const bool &local_my_sql_enabled);
    bool is_local_my_sql_enabled_Set() const;
    bool is_local_my_sql_enabled_Valid() const;

    qint32 getLogsDirectorySizeLimit() const;
    void setLogsDirectorySizeLimit(const qint32 &logs_directory_size_limit);
    bool is_logs_directory_size_limit_Set() const;
    bool is_logs_directory_size_limit_Valid() const;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_machineKey getMachineKey() const;
    void setMachineKey(const OAIWebApps_List_200_response_value_inner_properties_siteConfig_machineKey &machine_key);
    bool is_machine_key_Set() const;
    bool is_machine_key_Valid() const;

    QString getManagedPipelineMode() const;
    void setManagedPipelineMode(const QString &managed_pipeline_mode);
    bool is_managed_pipeline_mode_Set() const;
    bool is_managed_pipeline_mode_Valid() const;

    qint32 getManagedServiceIdentityId() const;
    void setManagedServiceIdentityId(const qint32 &managed_service_identity_id);
    bool is_managed_service_identity_id_Set() const;
    bool is_managed_service_identity_id_Valid() const;

    QString getMinTlsVersion() const;
    void setMinTlsVersion(const QString &min_tls_version);
    bool is_min_tls_version_Set() const;
    bool is_min_tls_version_Valid() const;

    QString getNetFrameworkVersion() const;
    void setNetFrameworkVersion(const QString &net_framework_version);
    bool is_net_framework_version_Set() const;
    bool is_net_framework_version_Valid() const;

    QString getNodeVersion() const;
    void setNodeVersion(const QString &node_version);
    bool is_node_version_Set() const;
    bool is_node_version_Valid() const;

    qint32 getNumberOfWorkers() const;
    void setNumberOfWorkers(const qint32 &number_of_workers);
    bool is_number_of_workers_Set() const;
    bool is_number_of_workers_Valid() const;

    QString getPhpVersion() const;
    void setPhpVersion(const QString &php_version);
    bool is_php_version_Set() const;
    bool is_php_version_Valid() const;

    QString getPublishingUsername() const;
    void setPublishingUsername(const QString &publishing_username);
    bool is_publishing_username_Set() const;
    bool is_publishing_username_Valid() const;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_push getPush() const;
    void setPush(const OAIWebApps_List_200_response_value_inner_properties_siteConfig_push &push);
    bool is_push_Set() const;
    bool is_push_Valid() const;

    QString getPythonVersion() const;
    void setPythonVersion(const QString &python_version);
    bool is_python_version_Set() const;
    bool is_python_version_Valid() const;

    bool isRemoteDebuggingEnabled() const;
    void setRemoteDebuggingEnabled(const bool &remote_debugging_enabled);
    bool is_remote_debugging_enabled_Set() const;
    bool is_remote_debugging_enabled_Valid() const;

    QString getRemoteDebuggingVersion() const;
    void setRemoteDebuggingVersion(const QString &remote_debugging_version);
    bool is_remote_debugging_version_Set() const;
    bool is_remote_debugging_version_Valid() const;

    bool isRequestTracingEnabled() const;
    void setRequestTracingEnabled(const bool &request_tracing_enabled);
    bool is_request_tracing_enabled_Set() const;
    bool is_request_tracing_enabled_Valid() const;

    QDateTime getRequestTracingExpirationTime() const;
    void setRequestTracingExpirationTime(const QDateTime &request_tracing_expiration_time);
    bool is_request_tracing_expiration_time_Set() const;
    bool is_request_tracing_expiration_time_Valid() const;

    qint32 getReservedInstanceCount() const;
    void setReservedInstanceCount(const qint32 &reserved_instance_count);
    bool is_reserved_instance_count_Set() const;
    bool is_reserved_instance_count_Valid() const;

    QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_ipSecurityRestrictions_inner> getScmIpSecurityRestrictions() const;
    void setScmIpSecurityRestrictions(const QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_ipSecurityRestrictions_inner> &scm_ip_security_restrictions);
    bool is_scm_ip_security_restrictions_Set() const;
    bool is_scm_ip_security_restrictions_Valid() const;

    bool isScmIpSecurityRestrictionsUseMain() const;
    void setScmIpSecurityRestrictionsUseMain(const bool &scm_ip_security_restrictions_use_main);
    bool is_scm_ip_security_restrictions_use_main_Set() const;
    bool is_scm_ip_security_restrictions_use_main_Valid() const;

    QString getScmType() const;
    void setScmType(const QString &scm_type);
    bool is_scm_type_Set() const;
    bool is_scm_type_Valid() const;

    QString getTracingOptions() const;
    void setTracingOptions(const QString &tracing_options);
    bool is_tracing_options_Set() const;
    bool is_tracing_options_Valid() const;

    bool isUse32BitWorkerProcess() const;
    void setUse32BitWorkerProcess(const bool &use32_bit_worker_process);
    bool is_use32_bit_worker_process_Set() const;
    bool is_use32_bit_worker_process_Valid() const;

    QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_virtualApplications_inner> getVirtualApplications() const;
    void setVirtualApplications(const QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_virtualApplications_inner> &virtual_applications);
    bool is_virtual_applications_Set() const;
    bool is_virtual_applications_Valid() const;

    QString getVnetName() const;
    void setVnetName(const QString &vnet_name);
    bool is_vnet_name_Set() const;
    bool is_vnet_name_Valid() const;

    bool isWebSocketsEnabled() const;
    void setWebSocketsEnabled(const bool &web_sockets_enabled);
    bool is_web_sockets_enabled_Set() const;
    bool is_web_sockets_enabled_Valid() const;

    QString getWindowsFxVersion() const;
    void setWindowsFxVersion(const QString &windows_fx_version);
    bool is_windows_fx_version_Set() const;
    bool is_windows_fx_version_Valid() const;

    qint32 getXManagedServiceIdentityId() const;
    void setXManagedServiceIdentityId(const qint32 &x_managed_service_identity_id);
    bool is_x_managed_service_identity_id_Set() const;
    bool is_x_managed_service_identity_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_always_on;
    bool m_always_on_isSet;
    bool m_always_on_isValid;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_apiDefinition m_api_definition;
    bool m_api_definition_isSet;
    bool m_api_definition_isValid;

    QString m_app_command_line;
    bool m_app_command_line_isSet;
    bool m_app_command_line_isValid;

    QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_appSettings_inner> m_app_settings;
    bool m_app_settings_isSet;
    bool m_app_settings_isValid;

    bool m_auto_heal_enabled;
    bool m_auto_heal_enabled_isSet;
    bool m_auto_heal_enabled_isValid;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_autoHealRules m_auto_heal_rules;
    bool m_auto_heal_rules_isSet;
    bool m_auto_heal_rules_isValid;

    QString m_auto_swap_slot_name;
    bool m_auto_swap_slot_name_isSet;
    bool m_auto_swap_slot_name_isValid;

    QMap<QString, OAIWebApps_List_200_response_value_inner_properties_siteConfig_azureStorageAccounts_value> m_azure_storage_accounts;
    bool m_azure_storage_accounts_isSet;
    bool m_azure_storage_accounts_isValid;

    QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_connectionStrings_inner> m_connection_strings;
    bool m_connection_strings_isSet;
    bool m_connection_strings_isValid;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_cors m_cors;
    bool m_cors_isSet;
    bool m_cors_isValid;

    QList<QString> m_default_documents;
    bool m_default_documents_isSet;
    bool m_default_documents_isValid;

    bool m_detailed_error_logging_enabled;
    bool m_detailed_error_logging_enabled_isSet;
    bool m_detailed_error_logging_enabled_isValid;

    QString m_document_root;
    bool m_document_root_isSet;
    bool m_document_root_isValid;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_experiments m_experiments;
    bool m_experiments_isSet;
    bool m_experiments_isValid;

    QString m_ftps_state;
    bool m_ftps_state_isSet;
    bool m_ftps_state_isValid;

    QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_handlerMappings_inner> m_handler_mappings;
    bool m_handler_mappings_isSet;
    bool m_handler_mappings_isValid;

    bool m_http20_enabled;
    bool m_http20_enabled_isSet;
    bool m_http20_enabled_isValid;

    bool m_http_logging_enabled;
    bool m_http_logging_enabled_isSet;
    bool m_http_logging_enabled_isValid;

    QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_ipSecurityRestrictions_inner> m_ip_security_restrictions;
    bool m_ip_security_restrictions_isSet;
    bool m_ip_security_restrictions_isValid;

    QString m_java_container;
    bool m_java_container_isSet;
    bool m_java_container_isValid;

    QString m_java_container_version;
    bool m_java_container_version_isSet;
    bool m_java_container_version_isValid;

    QString m_java_version;
    bool m_java_version_isSet;
    bool m_java_version_isValid;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_limits m_limits;
    bool m_limits_isSet;
    bool m_limits_isValid;

    QString m_linux_fx_version;
    bool m_linux_fx_version_isSet;
    bool m_linux_fx_version_isValid;

    QString m_load_balancing;
    bool m_load_balancing_isSet;
    bool m_load_balancing_isValid;

    bool m_local_my_sql_enabled;
    bool m_local_my_sql_enabled_isSet;
    bool m_local_my_sql_enabled_isValid;

    qint32 m_logs_directory_size_limit;
    bool m_logs_directory_size_limit_isSet;
    bool m_logs_directory_size_limit_isValid;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_machineKey m_machine_key;
    bool m_machine_key_isSet;
    bool m_machine_key_isValid;

    QString m_managed_pipeline_mode;
    bool m_managed_pipeline_mode_isSet;
    bool m_managed_pipeline_mode_isValid;

    qint32 m_managed_service_identity_id;
    bool m_managed_service_identity_id_isSet;
    bool m_managed_service_identity_id_isValid;

    QString m_min_tls_version;
    bool m_min_tls_version_isSet;
    bool m_min_tls_version_isValid;

    QString m_net_framework_version;
    bool m_net_framework_version_isSet;
    bool m_net_framework_version_isValid;

    QString m_node_version;
    bool m_node_version_isSet;
    bool m_node_version_isValid;

    qint32 m_number_of_workers;
    bool m_number_of_workers_isSet;
    bool m_number_of_workers_isValid;

    QString m_php_version;
    bool m_php_version_isSet;
    bool m_php_version_isValid;

    QString m_publishing_username;
    bool m_publishing_username_isSet;
    bool m_publishing_username_isValid;

    OAIWebApps_List_200_response_value_inner_properties_siteConfig_push m_push;
    bool m_push_isSet;
    bool m_push_isValid;

    QString m_python_version;
    bool m_python_version_isSet;
    bool m_python_version_isValid;

    bool m_remote_debugging_enabled;
    bool m_remote_debugging_enabled_isSet;
    bool m_remote_debugging_enabled_isValid;

    QString m_remote_debugging_version;
    bool m_remote_debugging_version_isSet;
    bool m_remote_debugging_version_isValid;

    bool m_request_tracing_enabled;
    bool m_request_tracing_enabled_isSet;
    bool m_request_tracing_enabled_isValid;

    QDateTime m_request_tracing_expiration_time;
    bool m_request_tracing_expiration_time_isSet;
    bool m_request_tracing_expiration_time_isValid;

    qint32 m_reserved_instance_count;
    bool m_reserved_instance_count_isSet;
    bool m_reserved_instance_count_isValid;

    QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_ipSecurityRestrictions_inner> m_scm_ip_security_restrictions;
    bool m_scm_ip_security_restrictions_isSet;
    bool m_scm_ip_security_restrictions_isValid;

    bool m_scm_ip_security_restrictions_use_main;
    bool m_scm_ip_security_restrictions_use_main_isSet;
    bool m_scm_ip_security_restrictions_use_main_isValid;

    QString m_scm_type;
    bool m_scm_type_isSet;
    bool m_scm_type_isValid;

    QString m_tracing_options;
    bool m_tracing_options_isSet;
    bool m_tracing_options_isValid;

    bool m_use32_bit_worker_process;
    bool m_use32_bit_worker_process_isSet;
    bool m_use32_bit_worker_process_isValid;

    QList<OAIWebApps_List_200_response_value_inner_properties_siteConfig_virtualApplications_inner> m_virtual_applications;
    bool m_virtual_applications_isSet;
    bool m_virtual_applications_isValid;

    QString m_vnet_name;
    bool m_vnet_name_isSet;
    bool m_vnet_name_isValid;

    bool m_web_sockets_enabled;
    bool m_web_sockets_enabled_isSet;
    bool m_web_sockets_enabled_isValid;

    QString m_windows_fx_version;
    bool m_windows_fx_version_isSet;
    bool m_windows_fx_version_isValid;

    qint32 m_x_managed_service_identity_id;
    bool m_x_managed_service_identity_id_isSet;
    bool m_x_managed_service_identity_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebApps_List_200_response_value_inner_properties_siteConfig)

#endif // OAIWebApps_List_200_response_value_inner_properties_siteConfig_H
