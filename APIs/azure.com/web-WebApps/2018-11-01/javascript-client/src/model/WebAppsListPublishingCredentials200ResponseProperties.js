/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WebAppsListPublishingCredentials200ResponseProperties model module.
 * @module model/WebAppsListPublishingCredentials200ResponseProperties
 * @version 2018-11-01
 */
class WebAppsListPublishingCredentials200ResponseProperties {
    /**
     * Constructs a new <code>WebAppsListPublishingCredentials200ResponseProperties</code>.
     * User resource specific properties
     * @alias module:model/WebAppsListPublishingCredentials200ResponseProperties
     * @param publishingUserName {String} Username used for publishing.
     */
    constructor(publishingUserName) { 
        
        WebAppsListPublishingCredentials200ResponseProperties.initialize(this, publishingUserName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, publishingUserName) { 
        obj['publishingUserName'] = publishingUserName;
    }

    /**
     * Constructs a <code>WebAppsListPublishingCredentials200ResponseProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebAppsListPublishingCredentials200ResponseProperties} obj Optional instance to populate.
     * @return {module:model/WebAppsListPublishingCredentials200ResponseProperties} The populated <code>WebAppsListPublishingCredentials200ResponseProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebAppsListPublishingCredentials200ResponseProperties();

            if (data.hasOwnProperty('publishingPassword')) {
                obj['publishingPassword'] = ApiClient.convertToType(data['publishingPassword'], 'String');
            }
            if (data.hasOwnProperty('publishingPasswordHash')) {
                obj['publishingPasswordHash'] = ApiClient.convertToType(data['publishingPasswordHash'], 'String');
            }
            if (data.hasOwnProperty('publishingPasswordHashSalt')) {
                obj['publishingPasswordHashSalt'] = ApiClient.convertToType(data['publishingPasswordHashSalt'], 'String');
            }
            if (data.hasOwnProperty('publishingUserName')) {
                obj['publishingUserName'] = ApiClient.convertToType(data['publishingUserName'], 'String');
            }
            if (data.hasOwnProperty('scmUri')) {
                obj['scmUri'] = ApiClient.convertToType(data['scmUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebAppsListPublishingCredentials200ResponseProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebAppsListPublishingCredentials200ResponseProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebAppsListPublishingCredentials200ResponseProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['publishingPassword'] && !(typeof data['publishingPassword'] === 'string' || data['publishingPassword'] instanceof String)) {
            throw new Error("Expected the field `publishingPassword` to be a primitive type in the JSON string but got " + data['publishingPassword']);
        }
        // ensure the json data is a string
        if (data['publishingPasswordHash'] && !(typeof data['publishingPasswordHash'] === 'string' || data['publishingPasswordHash'] instanceof String)) {
            throw new Error("Expected the field `publishingPasswordHash` to be a primitive type in the JSON string but got " + data['publishingPasswordHash']);
        }
        // ensure the json data is a string
        if (data['publishingPasswordHashSalt'] && !(typeof data['publishingPasswordHashSalt'] === 'string' || data['publishingPasswordHashSalt'] instanceof String)) {
            throw new Error("Expected the field `publishingPasswordHashSalt` to be a primitive type in the JSON string but got " + data['publishingPasswordHashSalt']);
        }
        // ensure the json data is a string
        if (data['publishingUserName'] && !(typeof data['publishingUserName'] === 'string' || data['publishingUserName'] instanceof String)) {
            throw new Error("Expected the field `publishingUserName` to be a primitive type in the JSON string but got " + data['publishingUserName']);
        }
        // ensure the json data is a string
        if (data['scmUri'] && !(typeof data['scmUri'] === 'string' || data['scmUri'] instanceof String)) {
            throw new Error("Expected the field `scmUri` to be a primitive type in the JSON string but got " + data['scmUri']);
        }

        return true;
    }


}

WebAppsListPublishingCredentials200ResponseProperties.RequiredProperties = ["publishingUserName"];

/**
 * Password used for publishing.
 * @member {String} publishingPassword
 */
WebAppsListPublishingCredentials200ResponseProperties.prototype['publishingPassword'] = undefined;

/**
 * Password hash used for publishing.
 * @member {String} publishingPasswordHash
 */
WebAppsListPublishingCredentials200ResponseProperties.prototype['publishingPasswordHash'] = undefined;

/**
 * Password hash salt used for publishing.
 * @member {String} publishingPasswordHashSalt
 */
WebAppsListPublishingCredentials200ResponseProperties.prototype['publishingPasswordHashSalt'] = undefined;

/**
 * Username used for publishing.
 * @member {String} publishingUserName
 */
WebAppsListPublishingCredentials200ResponseProperties.prototype['publishingUserName'] = undefined;

/**
 * Url of SCM site.
 * @member {String} scmUri
 */
WebAppsListPublishingCredentials200ResponseProperties.prototype['scmUri'] = undefined;






export default WebAppsListPublishingCredentials200ResponseProperties;

