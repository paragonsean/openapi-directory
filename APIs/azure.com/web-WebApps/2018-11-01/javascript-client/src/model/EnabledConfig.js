/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnabledConfig model module.
 * @module model/EnabledConfig
 * @version 2018-11-01
 */
class EnabledConfig {
    /**
     * Constructs a new <code>EnabledConfig</code>.
     * Enabled configuration.
     * @alias module:model/EnabledConfig
     */
    constructor() { 
        
        EnabledConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnabledConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnabledConfig} obj Optional instance to populate.
     * @return {module:model/EnabledConfig} The populated <code>EnabledConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnabledConfig();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnabledConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnabledConfig</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * True if configuration is enabled, false if it is disabled and null if configuration is not set.
 * @member {Boolean} enabled
 */
EnabledConfig.prototype['enabled'] = undefined;






export default EnabledConfig;

