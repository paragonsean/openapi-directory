# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebAppsMigrateMySql200ResponseErrorsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, extended_code: str=None, inner_errors: List[object]=None, message: str=None, message_template: str=None, parameters: List[str]=None):
        """WebAppsMigrateMySql200ResponseErrorsInner - a model defined in OpenAPI

        :param code: The code of this WebAppsMigrateMySql200ResponseErrorsInner.
        :param extended_code: The extended_code of this WebAppsMigrateMySql200ResponseErrorsInner.
        :param inner_errors: The inner_errors of this WebAppsMigrateMySql200ResponseErrorsInner.
        :param message: The message of this WebAppsMigrateMySql200ResponseErrorsInner.
        :param message_template: The message_template of this WebAppsMigrateMySql200ResponseErrorsInner.
        :param parameters: The parameters of this WebAppsMigrateMySql200ResponseErrorsInner.
        """
        self.openapi_types = {
            'code': str,
            'extended_code': str,
            'inner_errors': List[object],
            'message': str,
            'message_template': str,
            'parameters': List[str]
        }

        self.attribute_map = {
            'code': 'code',
            'extended_code': 'extendedCode',
            'inner_errors': 'innerErrors',
            'message': 'message',
            'message_template': 'messageTemplate',
            'parameters': 'parameters'
        }

        self._code = code
        self._extended_code = extended_code
        self._inner_errors = inner_errors
        self._message = message
        self._message_template = message_template
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebAppsMigrateMySql200ResponseErrorsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebApps_MigrateMySql_200_response_errors_inner of this WebAppsMigrateMySql200ResponseErrorsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this WebAppsMigrateMySql200ResponseErrorsInner.

        Basic error code.

        :return: The code of this WebAppsMigrateMySql200ResponseErrorsInner.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this WebAppsMigrateMySql200ResponseErrorsInner.

        Basic error code.

        :param code: The code of this WebAppsMigrateMySql200ResponseErrorsInner.
        :type code: str
        """

        self._code = code

    @property
    def extended_code(self):
        """Gets the extended_code of this WebAppsMigrateMySql200ResponseErrorsInner.

        Type of error.

        :return: The extended_code of this WebAppsMigrateMySql200ResponseErrorsInner.
        :rtype: str
        """
        return self._extended_code

    @extended_code.setter
    def extended_code(self, extended_code):
        """Sets the extended_code of this WebAppsMigrateMySql200ResponseErrorsInner.

        Type of error.

        :param extended_code: The extended_code of this WebAppsMigrateMySql200ResponseErrorsInner.
        :type extended_code: str
        """

        self._extended_code = extended_code

    @property
    def inner_errors(self):
        """Gets the inner_errors of this WebAppsMigrateMySql200ResponseErrorsInner.

        Inner errors.

        :return: The inner_errors of this WebAppsMigrateMySql200ResponseErrorsInner.
        :rtype: List[object]
        """
        return self._inner_errors

    @inner_errors.setter
    def inner_errors(self, inner_errors):
        """Sets the inner_errors of this WebAppsMigrateMySql200ResponseErrorsInner.

        Inner errors.

        :param inner_errors: The inner_errors of this WebAppsMigrateMySql200ResponseErrorsInner.
        :type inner_errors: List[object]
        """

        self._inner_errors = inner_errors

    @property
    def message(self):
        """Gets the message of this WebAppsMigrateMySql200ResponseErrorsInner.

        Any details of the error.

        :return: The message of this WebAppsMigrateMySql200ResponseErrorsInner.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this WebAppsMigrateMySql200ResponseErrorsInner.

        Any details of the error.

        :param message: The message of this WebAppsMigrateMySql200ResponseErrorsInner.
        :type message: str
        """

        self._message = message

    @property
    def message_template(self):
        """Gets the message_template of this WebAppsMigrateMySql200ResponseErrorsInner.

        Message template.

        :return: The message_template of this WebAppsMigrateMySql200ResponseErrorsInner.
        :rtype: str
        """
        return self._message_template

    @message_template.setter
    def message_template(self, message_template):
        """Sets the message_template of this WebAppsMigrateMySql200ResponseErrorsInner.

        Message template.

        :param message_template: The message_template of this WebAppsMigrateMySql200ResponseErrorsInner.
        :type message_template: str
        """

        self._message_template = message_template

    @property
    def parameters(self):
        """Gets the parameters of this WebAppsMigrateMySql200ResponseErrorsInner.

        Parameters for the template.

        :return: The parameters of this WebAppsMigrateMySql200ResponseErrorsInner.
        :rtype: List[str]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this WebAppsMigrateMySql200ResponseErrorsInner.

        Parameters for the template.

        :param parameters: The parameters of this WebAppsMigrateMySql200ResponseErrorsInner.
        :type parameters: List[str]
        """

        self._parameters = parameters
