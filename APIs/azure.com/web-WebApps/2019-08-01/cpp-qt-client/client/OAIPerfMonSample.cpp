/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPerfMonSample.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPerfMonSample::OAIPerfMonSample(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPerfMonSample::OAIPerfMonSample() {
    this->initializeModel();
}

OAIPerfMonSample::~OAIPerfMonSample() {}

void OAIPerfMonSample::initializeModel() {

    m_instance_name_isSet = false;
    m_instance_name_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIPerfMonSample::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPerfMonSample::fromJsonObject(QJsonObject json) {

    m_instance_name_isValid = ::OpenAPI::fromJsonValue(m_instance_name, json[QString("instanceName")]);
    m_instance_name_isSet = !json[QString("instanceName")].isNull() && m_instance_name_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIPerfMonSample::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPerfMonSample::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_name_isSet) {
        obj.insert(QString("instanceName"), ::OpenAPI::toJsonValue(m_instance_name));
    }
    if (m_time_isSet) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(m_time));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIPerfMonSample::getInstanceName() const {
    return m_instance_name;
}
void OAIPerfMonSample::setInstanceName(const QString &instance_name) {
    m_instance_name = instance_name;
    m_instance_name_isSet = true;
}

bool OAIPerfMonSample::is_instance_name_Set() const{
    return m_instance_name_isSet;
}

bool OAIPerfMonSample::is_instance_name_Valid() const{
    return m_instance_name_isValid;
}

QDateTime OAIPerfMonSample::getTime() const {
    return m_time;
}
void OAIPerfMonSample::setTime(const QDateTime &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAIPerfMonSample::is_time_Set() const{
    return m_time_isSet;
}

bool OAIPerfMonSample::is_time_Valid() const{
    return m_time_isValid;
}

double OAIPerfMonSample::getValue() const {
    return m_value;
}
void OAIPerfMonSample::setValue(const double &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIPerfMonSample::is_value_Set() const{
    return m_value_isSet;
}

bool OAIPerfMonSample::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIPerfMonSample::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPerfMonSample::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
