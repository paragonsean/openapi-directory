/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebApps_MigrateMySql_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebApps_MigrateMySql_200_response::OAIWebApps_MigrateMySql_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebApps_MigrateMySql_200_response::OAIWebApps_MigrateMySql_200_response() {
    this->initializeModel();
}

OAIWebApps_MigrateMySql_200_response::~OAIWebApps_MigrateMySql_200_response() {}

void OAIWebApps_MigrateMySql_200_response::initializeModel() {

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_expiration_time_isSet = false;
    m_expiration_time_isValid = false;

    m_geo_master_operation_id_isSet = false;
    m_geo_master_operation_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_modified_time_isSet = false;
    m_modified_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIWebApps_MigrateMySql_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebApps_MigrateMySql_200_response::fromJsonObject(QJsonObject json) {

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("createdTime")]);
    m_created_time_isSet = !json[QString("createdTime")].isNull() && m_created_time_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_expiration_time_isValid = ::OpenAPI::fromJsonValue(m_expiration_time, json[QString("expirationTime")]);
    m_expiration_time_isSet = !json[QString("expirationTime")].isNull() && m_expiration_time_isValid;

    m_geo_master_operation_id_isValid = ::OpenAPI::fromJsonValue(m_geo_master_operation_id, json[QString("geoMasterOperationId")]);
    m_geo_master_operation_id_isSet = !json[QString("geoMasterOperationId")].isNull() && m_geo_master_operation_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_modified_time_isValid = ::OpenAPI::fromJsonValue(m_modified_time, json[QString("modifiedTime")]);
    m_modified_time_isSet = !json[QString("modifiedTime")].isNull() && m_modified_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIWebApps_MigrateMySql_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebApps_MigrateMySql_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_created_time_isSet) {
        obj.insert(QString("createdTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_expiration_time_isSet) {
        obj.insert(QString("expirationTime"), ::OpenAPI::toJsonValue(m_expiration_time));
    }
    if (m_geo_master_operation_id_isSet) {
        obj.insert(QString("geoMasterOperationId"), ::OpenAPI::toJsonValue(m_geo_master_operation_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_modified_time_isSet) {
        obj.insert(QString("modifiedTime"), ::OpenAPI::toJsonValue(m_modified_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QDateTime OAIWebApps_MigrateMySql_200_response::getCreatedTime() const {
    return m_created_time;
}
void OAIWebApps_MigrateMySql_200_response::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIWebApps_MigrateMySql_200_response::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIWebApps_MigrateMySql_200_response::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QList<OAIWebApps_MigrateMySql_200_response_errors_inner> OAIWebApps_MigrateMySql_200_response::getErrors() const {
    return m_errors;
}
void OAIWebApps_MigrateMySql_200_response::setErrors(const QList<OAIWebApps_MigrateMySql_200_response_errors_inner> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIWebApps_MigrateMySql_200_response::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIWebApps_MigrateMySql_200_response::is_errors_Valid() const{
    return m_errors_isValid;
}

QDateTime OAIWebApps_MigrateMySql_200_response::getExpirationTime() const {
    return m_expiration_time;
}
void OAIWebApps_MigrateMySql_200_response::setExpirationTime(const QDateTime &expiration_time) {
    m_expiration_time = expiration_time;
    m_expiration_time_isSet = true;
}

bool OAIWebApps_MigrateMySql_200_response::is_expiration_time_Set() const{
    return m_expiration_time_isSet;
}

bool OAIWebApps_MigrateMySql_200_response::is_expiration_time_Valid() const{
    return m_expiration_time_isValid;
}

QString OAIWebApps_MigrateMySql_200_response::getGeoMasterOperationId() const {
    return m_geo_master_operation_id;
}
void OAIWebApps_MigrateMySql_200_response::setGeoMasterOperationId(const QString &geo_master_operation_id) {
    m_geo_master_operation_id = geo_master_operation_id;
    m_geo_master_operation_id_isSet = true;
}

bool OAIWebApps_MigrateMySql_200_response::is_geo_master_operation_id_Set() const{
    return m_geo_master_operation_id_isSet;
}

bool OAIWebApps_MigrateMySql_200_response::is_geo_master_operation_id_Valid() const{
    return m_geo_master_operation_id_isValid;
}

QString OAIWebApps_MigrateMySql_200_response::getId() const {
    return m_id;
}
void OAIWebApps_MigrateMySql_200_response::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIWebApps_MigrateMySql_200_response::is_id_Set() const{
    return m_id_isSet;
}

bool OAIWebApps_MigrateMySql_200_response::is_id_Valid() const{
    return m_id_isValid;
}

QDateTime OAIWebApps_MigrateMySql_200_response::getModifiedTime() const {
    return m_modified_time;
}
void OAIWebApps_MigrateMySql_200_response::setModifiedTime(const QDateTime &modified_time) {
    m_modified_time = modified_time;
    m_modified_time_isSet = true;
}

bool OAIWebApps_MigrateMySql_200_response::is_modified_time_Set() const{
    return m_modified_time_isSet;
}

bool OAIWebApps_MigrateMySql_200_response::is_modified_time_Valid() const{
    return m_modified_time_isValid;
}

QString OAIWebApps_MigrateMySql_200_response::getName() const {
    return m_name;
}
void OAIWebApps_MigrateMySql_200_response::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIWebApps_MigrateMySql_200_response::is_name_Set() const{
    return m_name_isSet;
}

bool OAIWebApps_MigrateMySql_200_response::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIWebApps_MigrateMySql_200_response::getStatus() const {
    return m_status;
}
void OAIWebApps_MigrateMySql_200_response::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIWebApps_MigrateMySql_200_response::is_status_Set() const{
    return m_status_isSet;
}

bool OAIWebApps_MigrateMySql_200_response::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIWebApps_MigrateMySql_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_geo_master_operation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebApps_MigrateMySql_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
