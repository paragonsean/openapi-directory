/*
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ContainerNetworkInterfaceStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:50:09.892764-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ContainerNetworkInterfaceStatistics {
  public static final String SERIALIZED_NAME_RX_BYTES = "rxBytes";
  @SerializedName(SERIALIZED_NAME_RX_BYTES)
  private Long rxBytes;

  public static final String SERIALIZED_NAME_RX_DROPPED = "rxDropped";
  @SerializedName(SERIALIZED_NAME_RX_DROPPED)
  private Long rxDropped;

  public static final String SERIALIZED_NAME_RX_ERRORS = "rxErrors";
  @SerializedName(SERIALIZED_NAME_RX_ERRORS)
  private Long rxErrors;

  public static final String SERIALIZED_NAME_RX_PACKETS = "rxPackets";
  @SerializedName(SERIALIZED_NAME_RX_PACKETS)
  private Long rxPackets;

  public static final String SERIALIZED_NAME_TX_BYTES = "txBytes";
  @SerializedName(SERIALIZED_NAME_TX_BYTES)
  private Long txBytes;

  public static final String SERIALIZED_NAME_TX_DROPPED = "txDropped";
  @SerializedName(SERIALIZED_NAME_TX_DROPPED)
  private Long txDropped;

  public static final String SERIALIZED_NAME_TX_ERRORS = "txErrors";
  @SerializedName(SERIALIZED_NAME_TX_ERRORS)
  private Long txErrors;

  public static final String SERIALIZED_NAME_TX_PACKETS = "txPackets";
  @SerializedName(SERIALIZED_NAME_TX_PACKETS)
  private Long txPackets;

  public ContainerNetworkInterfaceStatistics() {
  }

  public ContainerNetworkInterfaceStatistics rxBytes(Long rxBytes) {
    this.rxBytes = rxBytes;
    return this;
  }

  /**
   * Get rxBytes
   * @return rxBytes
   */
  @javax.annotation.Nullable
  public Long getRxBytes() {
    return rxBytes;
  }

  public void setRxBytes(Long rxBytes) {
    this.rxBytes = rxBytes;
  }


  public ContainerNetworkInterfaceStatistics rxDropped(Long rxDropped) {
    this.rxDropped = rxDropped;
    return this;
  }

  /**
   * Get rxDropped
   * @return rxDropped
   */
  @javax.annotation.Nullable
  public Long getRxDropped() {
    return rxDropped;
  }

  public void setRxDropped(Long rxDropped) {
    this.rxDropped = rxDropped;
  }


  public ContainerNetworkInterfaceStatistics rxErrors(Long rxErrors) {
    this.rxErrors = rxErrors;
    return this;
  }

  /**
   * Get rxErrors
   * @return rxErrors
   */
  @javax.annotation.Nullable
  public Long getRxErrors() {
    return rxErrors;
  }

  public void setRxErrors(Long rxErrors) {
    this.rxErrors = rxErrors;
  }


  public ContainerNetworkInterfaceStatistics rxPackets(Long rxPackets) {
    this.rxPackets = rxPackets;
    return this;
  }

  /**
   * Get rxPackets
   * @return rxPackets
   */
  @javax.annotation.Nullable
  public Long getRxPackets() {
    return rxPackets;
  }

  public void setRxPackets(Long rxPackets) {
    this.rxPackets = rxPackets;
  }


  public ContainerNetworkInterfaceStatistics txBytes(Long txBytes) {
    this.txBytes = txBytes;
    return this;
  }

  /**
   * Get txBytes
   * @return txBytes
   */
  @javax.annotation.Nullable
  public Long getTxBytes() {
    return txBytes;
  }

  public void setTxBytes(Long txBytes) {
    this.txBytes = txBytes;
  }


  public ContainerNetworkInterfaceStatistics txDropped(Long txDropped) {
    this.txDropped = txDropped;
    return this;
  }

  /**
   * Get txDropped
   * @return txDropped
   */
  @javax.annotation.Nullable
  public Long getTxDropped() {
    return txDropped;
  }

  public void setTxDropped(Long txDropped) {
    this.txDropped = txDropped;
  }


  public ContainerNetworkInterfaceStatistics txErrors(Long txErrors) {
    this.txErrors = txErrors;
    return this;
  }

  /**
   * Get txErrors
   * @return txErrors
   */
  @javax.annotation.Nullable
  public Long getTxErrors() {
    return txErrors;
  }

  public void setTxErrors(Long txErrors) {
    this.txErrors = txErrors;
  }


  public ContainerNetworkInterfaceStatistics txPackets(Long txPackets) {
    this.txPackets = txPackets;
    return this;
  }

  /**
   * Get txPackets
   * @return txPackets
   */
  @javax.annotation.Nullable
  public Long getTxPackets() {
    return txPackets;
  }

  public void setTxPackets(Long txPackets) {
    this.txPackets = txPackets;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContainerNetworkInterfaceStatistics containerNetworkInterfaceStatistics = (ContainerNetworkInterfaceStatistics) o;
    return Objects.equals(this.rxBytes, containerNetworkInterfaceStatistics.rxBytes) &&
        Objects.equals(this.rxDropped, containerNetworkInterfaceStatistics.rxDropped) &&
        Objects.equals(this.rxErrors, containerNetworkInterfaceStatistics.rxErrors) &&
        Objects.equals(this.rxPackets, containerNetworkInterfaceStatistics.rxPackets) &&
        Objects.equals(this.txBytes, containerNetworkInterfaceStatistics.txBytes) &&
        Objects.equals(this.txDropped, containerNetworkInterfaceStatistics.txDropped) &&
        Objects.equals(this.txErrors, containerNetworkInterfaceStatistics.txErrors) &&
        Objects.equals(this.txPackets, containerNetworkInterfaceStatistics.txPackets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rxBytes, rxDropped, rxErrors, rxPackets, txBytes, txDropped, txErrors, txPackets);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContainerNetworkInterfaceStatistics {\n");
    sb.append("    rxBytes: ").append(toIndentedString(rxBytes)).append("\n");
    sb.append("    rxDropped: ").append(toIndentedString(rxDropped)).append("\n");
    sb.append("    rxErrors: ").append(toIndentedString(rxErrors)).append("\n");
    sb.append("    rxPackets: ").append(toIndentedString(rxPackets)).append("\n");
    sb.append("    txBytes: ").append(toIndentedString(txBytes)).append("\n");
    sb.append("    txDropped: ").append(toIndentedString(txDropped)).append("\n");
    sb.append("    txErrors: ").append(toIndentedString(txErrors)).append("\n");
    sb.append("    txPackets: ").append(toIndentedString(txPackets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("rxBytes");
    openapiFields.add("rxDropped");
    openapiFields.add("rxErrors");
    openapiFields.add("rxPackets");
    openapiFields.add("txBytes");
    openapiFields.add("txDropped");
    openapiFields.add("txErrors");
    openapiFields.add("txPackets");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContainerNetworkInterfaceStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContainerNetworkInterfaceStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContainerNetworkInterfaceStatistics is not found in the empty JSON string", ContainerNetworkInterfaceStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContainerNetworkInterfaceStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContainerNetworkInterfaceStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContainerNetworkInterfaceStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContainerNetworkInterfaceStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContainerNetworkInterfaceStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContainerNetworkInterfaceStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<ContainerNetworkInterfaceStatistics>() {
           @Override
           public void write(JsonWriter out, ContainerNetworkInterfaceStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContainerNetworkInterfaceStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContainerNetworkInterfaceStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContainerNetworkInterfaceStatistics
   * @throws IOException if the JSON string is invalid with respect to ContainerNetworkInterfaceStatistics
   */
  public static ContainerNetworkInterfaceStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContainerNetworkInterfaceStatistics.class);
  }

  /**
   * Convert an instance of ContainerNetworkInterfaceStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

