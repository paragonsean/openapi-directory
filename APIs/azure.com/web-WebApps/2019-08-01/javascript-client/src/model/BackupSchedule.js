/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BackupSchedule model module.
 * @module model/BackupSchedule
 * @version 2019-08-01
 */
class BackupSchedule {
    /**
     * Constructs a new <code>BackupSchedule</code>.
     * Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
     * @alias module:model/BackupSchedule
     * @param frequencyInterval {Number} How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
     * @param frequencyUnit {module:model/BackupSchedule.FrequencyUnitEnum} The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
     * @param keepAtLeastOneBackup {Boolean} True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
     * @param retentionPeriodInDays {Number} After how many days backups should be deleted.
     */
    constructor(frequencyInterval, frequencyUnit, keepAtLeastOneBackup, retentionPeriodInDays) { 
        
        BackupSchedule.initialize(this, frequencyInterval, frequencyUnit, keepAtLeastOneBackup, retentionPeriodInDays);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, frequencyInterval, frequencyUnit, keepAtLeastOneBackup, retentionPeriodInDays) { 
        obj['frequencyInterval'] = frequencyInterval || 7;
        obj['frequencyUnit'] = frequencyUnit || 'Day';
        obj['keepAtLeastOneBackup'] = keepAtLeastOneBackup || true;
        obj['retentionPeriodInDays'] = retentionPeriodInDays || 30;
    }

    /**
     * Constructs a <code>BackupSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupSchedule} obj Optional instance to populate.
     * @return {module:model/BackupSchedule} The populated <code>BackupSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupSchedule();

            if (data.hasOwnProperty('frequencyInterval')) {
                obj['frequencyInterval'] = ApiClient.convertToType(data['frequencyInterval'], 'Number');
            }
            if (data.hasOwnProperty('frequencyUnit')) {
                obj['frequencyUnit'] = ApiClient.convertToType(data['frequencyUnit'], 'String');
            }
            if (data.hasOwnProperty('keepAtLeastOneBackup')) {
                obj['keepAtLeastOneBackup'] = ApiClient.convertToType(data['keepAtLeastOneBackup'], 'Boolean');
            }
            if (data.hasOwnProperty('lastExecutionTime')) {
                obj['lastExecutionTime'] = ApiClient.convertToType(data['lastExecutionTime'], 'Date');
            }
            if (data.hasOwnProperty('retentionPeriodInDays')) {
                obj['retentionPeriodInDays'] = ApiClient.convertToType(data['retentionPeriodInDays'], 'Number');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupSchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupSchedule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BackupSchedule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['frequencyUnit'] && !(typeof data['frequencyUnit'] === 'string' || data['frequencyUnit'] instanceof String)) {
            throw new Error("Expected the field `frequencyUnit` to be a primitive type in the JSON string but got " + data['frequencyUnit']);
        }

        return true;
    }


}

BackupSchedule.RequiredProperties = ["frequencyInterval", "frequencyUnit", "keepAtLeastOneBackup", "retentionPeriodInDays"];

/**
 * How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
 * @member {Number} frequencyInterval
 * @default 7
 */
BackupSchedule.prototype['frequencyInterval'] = 7;

/**
 * The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
 * @member {module:model/BackupSchedule.FrequencyUnitEnum} frequencyUnit
 * @default 'Day'
 */
BackupSchedule.prototype['frequencyUnit'] = 'Day';

/**
 * True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
 * @member {Boolean} keepAtLeastOneBackup
 * @default true
 */
BackupSchedule.prototype['keepAtLeastOneBackup'] = true;

/**
 * Last time when this schedule was triggered.
 * @member {Date} lastExecutionTime
 */
BackupSchedule.prototype['lastExecutionTime'] = undefined;

/**
 * After how many days backups should be deleted.
 * @member {Number} retentionPeriodInDays
 * @default 30
 */
BackupSchedule.prototype['retentionPeriodInDays'] = 30;

/**
 * When the schedule should start working.
 * @member {Date} startTime
 */
BackupSchedule.prototype['startTime'] = undefined;





/**
 * Allowed values for the <code>frequencyUnit</code> property.
 * @enum {String}
 * @readonly
 */
BackupSchedule['FrequencyUnitEnum'] = {

    /**
     * value: "Day"
     * @const
     */
    "Day": "Day",

    /**
     * value: "Hour"
     * @const
     */
    "Hour": "Hour"
};



export default BackupSchedule;

