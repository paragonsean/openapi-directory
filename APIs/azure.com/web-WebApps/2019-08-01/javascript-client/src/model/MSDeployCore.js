/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MSDeployCore model module.
 * @module model/MSDeployCore
 * @version 2019-08-01
 */
class MSDeployCore {
    /**
     * Constructs a new <code>MSDeployCore</code>.
     * MSDeploy ARM PUT core information
     * @alias module:model/MSDeployCore
     */
    constructor() { 
        
        MSDeployCore.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MSDeployCore</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MSDeployCore} obj Optional instance to populate.
     * @return {module:model/MSDeployCore} The populated <code>MSDeployCore</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MSDeployCore();

            if (data.hasOwnProperty('appOffline')) {
                obj['appOffline'] = ApiClient.convertToType(data['appOffline'], 'Boolean');
            }
            if (data.hasOwnProperty('connectionString')) {
                obj['connectionString'] = ApiClient.convertToType(data['connectionString'], 'String');
            }
            if (data.hasOwnProperty('dbType')) {
                obj['dbType'] = ApiClient.convertToType(data['dbType'], 'String');
            }
            if (data.hasOwnProperty('packageUri')) {
                obj['packageUri'] = ApiClient.convertToType(data['packageUri'], 'String');
            }
            if (data.hasOwnProperty('setParameters')) {
                obj['setParameters'] = ApiClient.convertToType(data['setParameters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('setParametersXmlFileUri')) {
                obj['setParametersXmlFileUri'] = ApiClient.convertToType(data['setParametersXmlFileUri'], 'String');
            }
            if (data.hasOwnProperty('skipAppData')) {
                obj['skipAppData'] = ApiClient.convertToType(data['skipAppData'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MSDeployCore</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MSDeployCore</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['connectionString'] && !(typeof data['connectionString'] === 'string' || data['connectionString'] instanceof String)) {
            throw new Error("Expected the field `connectionString` to be a primitive type in the JSON string but got " + data['connectionString']);
        }
        // ensure the json data is a string
        if (data['dbType'] && !(typeof data['dbType'] === 'string' || data['dbType'] instanceof String)) {
            throw new Error("Expected the field `dbType` to be a primitive type in the JSON string but got " + data['dbType']);
        }
        // ensure the json data is a string
        if (data['packageUri'] && !(typeof data['packageUri'] === 'string' || data['packageUri'] instanceof String)) {
            throw new Error("Expected the field `packageUri` to be a primitive type in the JSON string but got " + data['packageUri']);
        }
        // ensure the json data is a string
        if (data['setParametersXmlFileUri'] && !(typeof data['setParametersXmlFileUri'] === 'string' || data['setParametersXmlFileUri'] instanceof String)) {
            throw new Error("Expected the field `setParametersXmlFileUri` to be a primitive type in the JSON string but got " + data['setParametersXmlFileUri']);
        }

        return true;
    }


}



/**
 * Sets the AppOffline rule while the MSDeploy operation executes. Setting is <code>false</code> by default.
 * @member {Boolean} appOffline
 */
MSDeployCore.prototype['appOffline'] = undefined;

/**
 * SQL Connection String
 * @member {String} connectionString
 */
MSDeployCore.prototype['connectionString'] = undefined;

/**
 * Database Type
 * @member {String} dbType
 */
MSDeployCore.prototype['dbType'] = undefined;

/**
 * Package URI
 * @member {String} packageUri
 */
MSDeployCore.prototype['packageUri'] = undefined;

/**
 * MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.
 * @member {Object.<String, String>} setParameters
 */
MSDeployCore.prototype['setParameters'] = undefined;

/**
 * URI of MSDeploy Parameters file. Must not be set if SetParameters is used.
 * @member {String} setParametersXmlFileUri
 */
MSDeployCore.prototype['setParametersXmlFileUri'] = undefined;

/**
 * Controls whether the MSDeploy operation skips the App_Data directory. If set to <code>true</code>, the existing App_Data directory on the destination will not be deleted, and any App_Data directory in the source will be ignored. Setting is <code>false</code> by default.
 * @member {Boolean} skipAppData
 */
MSDeployCore.prototype['skipAppData'] = undefined;






export default MSDeployCore;

