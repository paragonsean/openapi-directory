/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiKVReference model module.
 * @module model/ApiKVReference
 * @version 2019-08-01
 */
class ApiKVReference {
    /**
     * Constructs a new <code>ApiKVReference</code>.
     * Description of site key vault references.
     * @alias module:model/ApiKVReference
     */
    constructor() { 
        
        ApiKVReference.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiKVReference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiKVReference} obj Optional instance to populate.
     * @return {module:model/ApiKVReference} The populated <code>ApiKVReference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiKVReference();

            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], 'String');
            }
            if (data.hasOwnProperty('identityType')) {
                obj['identityType'] = ApiClient.convertToType(data['identityType'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('secretName')) {
                obj['secretName'] = ApiClient.convertToType(data['secretName'], 'String');
            }
            if (data.hasOwnProperty('secretVersion')) {
                obj['secretVersion'] = ApiClient.convertToType(data['secretVersion'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('vaultName')) {
                obj['vaultName'] = ApiClient.convertToType(data['vaultName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiKVReference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiKVReference</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['details'] && !(typeof data['details'] === 'string' || data['details'] instanceof String)) {
            throw new Error("Expected the field `details` to be a primitive type in the JSON string but got " + data['details']);
        }
        // ensure the json data is a string
        if (data['identityType'] && !(typeof data['identityType'] === 'string' || data['identityType'] instanceof String)) {
            throw new Error("Expected the field `identityType` to be a primitive type in the JSON string but got " + data['identityType']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['reference'] && !(typeof data['reference'] === 'string' || data['reference'] instanceof String)) {
            throw new Error("Expected the field `reference` to be a primitive type in the JSON string but got " + data['reference']);
        }
        // ensure the json data is a string
        if (data['secretName'] && !(typeof data['secretName'] === 'string' || data['secretName'] instanceof String)) {
            throw new Error("Expected the field `secretName` to be a primitive type in the JSON string but got " + data['secretName']);
        }
        // ensure the json data is a string
        if (data['secretVersion'] && !(typeof data['secretVersion'] === 'string' || data['secretVersion'] instanceof String)) {
            throw new Error("Expected the field `secretVersion` to be a primitive type in the JSON string but got " + data['secretVersion']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['vaultName'] && !(typeof data['vaultName'] === 'string' || data['vaultName'] instanceof String)) {
            throw new Error("Expected the field `vaultName` to be a primitive type in the JSON string but got " + data['vaultName']);
        }

        return true;
    }


}



/**
 * @member {String} details
 */
ApiKVReference.prototype['details'] = undefined;

/**
 * @member {module:model/ApiKVReference.IdentityTypeEnum} identityType
 */
ApiKVReference.prototype['identityType'] = undefined;

/**
 * @member {module:model/ApiKVReference.LocationEnum} location
 */
ApiKVReference.prototype['location'] = undefined;

/**
 * @member {String} reference
 */
ApiKVReference.prototype['reference'] = undefined;

/**
 * @member {String} secretName
 */
ApiKVReference.prototype['secretName'] = undefined;

/**
 * @member {String} secretVersion
 */
ApiKVReference.prototype['secretVersion'] = undefined;

/**
 * @member {module:model/ApiKVReference.SourceEnum} source
 */
ApiKVReference.prototype['source'] = undefined;

/**
 * @member {module:model/ApiKVReference.StatusEnum} status
 */
ApiKVReference.prototype['status'] = undefined;

/**
 * @member {String} vaultName
 */
ApiKVReference.prototype['vaultName'] = undefined;





/**
 * Allowed values for the <code>identityType</code> property.
 * @enum {String}
 * @readonly
 */
ApiKVReference['IdentityTypeEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "SystemAssigned"
     * @const
     */
    "SystemAssigned": "SystemAssigned",

    /**
     * value: "UserAssigned"
     * @const
     */
    "UserAssigned": "UserAssigned"
};


/**
 * Allowed values for the <code>location</code> property.
 * @enum {String}
 * @readonly
 */
ApiKVReference['LocationEnum'] = {

    /**
     * value: "ApplicationSetting"
     * @const
     */
    "ApplicationSetting": "ApplicationSetting"
};


/**
 * Allowed values for the <code>source</code> property.
 * @enum {String}
 * @readonly
 */
ApiKVReference['SourceEnum'] = {

    /**
     * value: "KeyVault"
     * @const
     */
    "KeyVault": "KeyVault"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ApiKVReference['StatusEnum'] = {

    /**
     * value: "Initialized"
     * @const
     */
    "Initialized": "Initialized",

    /**
     * value: "Resolved"
     * @const
     */
    "Resolved": "Resolved",

    /**
     * value: "InvalidSyntax"
     * @const
     */
    "InvalidSyntax": "InvalidSyntax",

    /**
     * value: "MSINotEnabled"
     * @const
     */
    "MSINotEnabled": "MSINotEnabled",

    /**
     * value: "VaultNotFound"
     * @const
     */
    "VaultNotFound": "VaultNotFound",

    /**
     * value: "SecretNotFound"
     * @const
     */
    "SecretNotFound": "SecretNotFound",

    /**
     * value: "SecretVersionNotFound"
     * @const
     */
    "SecretVersionNotFound": "SecretVersionNotFound",

    /**
     * value: "AccessToKeyVaultDenied"
     * @const
     */
    "AccessToKeyVaultDenied": "AccessToKeyVaultDenied",

    /**
     * value: "OtherReasons"
     * @const
     */
    "OtherReasons": "OtherReasons"
};



export default ApiKVReference;

