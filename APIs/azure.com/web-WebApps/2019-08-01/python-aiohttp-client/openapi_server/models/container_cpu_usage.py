# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContainerCpuUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kernel_mode_usage: int=None, per_cpu_usage: List[int]=None, total_usage: int=None, user_mode_usage: int=None):
        """ContainerCpuUsage - a model defined in OpenAPI

        :param kernel_mode_usage: The kernel_mode_usage of this ContainerCpuUsage.
        :param per_cpu_usage: The per_cpu_usage of this ContainerCpuUsage.
        :param total_usage: The total_usage of this ContainerCpuUsage.
        :param user_mode_usage: The user_mode_usage of this ContainerCpuUsage.
        """
        self.openapi_types = {
            'kernel_mode_usage': int,
            'per_cpu_usage': List[int],
            'total_usage': int,
            'user_mode_usage': int
        }

        self.attribute_map = {
            'kernel_mode_usage': 'kernelModeUsage',
            'per_cpu_usage': 'perCpuUsage',
            'total_usage': 'totalUsage',
            'user_mode_usage': 'userModeUsage'
        }

        self._kernel_mode_usage = kernel_mode_usage
        self._per_cpu_usage = per_cpu_usage
        self._total_usage = total_usage
        self._user_mode_usage = user_mode_usage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerCpuUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerCpuUsage of this ContainerCpuUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kernel_mode_usage(self):
        """Gets the kernel_mode_usage of this ContainerCpuUsage.


        :return: The kernel_mode_usage of this ContainerCpuUsage.
        :rtype: int
        """
        return self._kernel_mode_usage

    @kernel_mode_usage.setter
    def kernel_mode_usage(self, kernel_mode_usage):
        """Sets the kernel_mode_usage of this ContainerCpuUsage.


        :param kernel_mode_usage: The kernel_mode_usage of this ContainerCpuUsage.
        :type kernel_mode_usage: int
        """

        self._kernel_mode_usage = kernel_mode_usage

    @property
    def per_cpu_usage(self):
        """Gets the per_cpu_usage of this ContainerCpuUsage.


        :return: The per_cpu_usage of this ContainerCpuUsage.
        :rtype: List[int]
        """
        return self._per_cpu_usage

    @per_cpu_usage.setter
    def per_cpu_usage(self, per_cpu_usage):
        """Sets the per_cpu_usage of this ContainerCpuUsage.


        :param per_cpu_usage: The per_cpu_usage of this ContainerCpuUsage.
        :type per_cpu_usage: List[int]
        """

        self._per_cpu_usage = per_cpu_usage

    @property
    def total_usage(self):
        """Gets the total_usage of this ContainerCpuUsage.


        :return: The total_usage of this ContainerCpuUsage.
        :rtype: int
        """
        return self._total_usage

    @total_usage.setter
    def total_usage(self, total_usage):
        """Sets the total_usage of this ContainerCpuUsage.


        :param total_usage: The total_usage of this ContainerCpuUsage.
        :type total_usage: int
        """

        self._total_usage = total_usage

    @property
    def user_mode_usage(self):
        """Gets the user_mode_usage of this ContainerCpuUsage.


        :return: The user_mode_usage of this ContainerCpuUsage.
        :rtype: int
        """
        return self._user_mode_usage

    @user_mode_usage.setter
    def user_mode_usage(self, user_mode_usage):
        """Sets the user_mode_usage of this ContainerCpuUsage.


        :param user_mode_usage: The user_mode_usage of this ContainerCpuUsage.
        :type user_mode_usage: int
        """

        self._user_mode_usage = user_mode_usage
