# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.web_apps_list200_response_value_inner_properties_site_config import WebAppsList200ResponseValueInnerPropertiesSiteConfig
from openapi_server import util


class CsmCopySlotEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, site_config: WebAppsList200ResponseValueInnerPropertiesSiteConfig=None, target_slot: str=None):
        """CsmCopySlotEntity - a model defined in OpenAPI

        :param site_config: The site_config of this CsmCopySlotEntity.
        :param target_slot: The target_slot of this CsmCopySlotEntity.
        """
        self.openapi_types = {
            'site_config': WebAppsList200ResponseValueInnerPropertiesSiteConfig,
            'target_slot': str
        }

        self.attribute_map = {
            'site_config': 'siteConfig',
            'target_slot': 'targetSlot'
        }

        self._site_config = site_config
        self._target_slot = target_slot

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CsmCopySlotEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CsmCopySlotEntity of this CsmCopySlotEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def site_config(self):
        """Gets the site_config of this CsmCopySlotEntity.


        :return: The site_config of this CsmCopySlotEntity.
        :rtype: WebAppsList200ResponseValueInnerPropertiesSiteConfig
        """
        return self._site_config

    @site_config.setter
    def site_config(self, site_config):
        """Sets the site_config of this CsmCopySlotEntity.


        :param site_config: The site_config of this CsmCopySlotEntity.
        :type site_config: WebAppsList200ResponseValueInnerPropertiesSiteConfig
        """
        if site_config is None:
            raise ValueError("Invalid value for `site_config`, must not be `None`")

        self._site_config = site_config

    @property
    def target_slot(self):
        """Gets the target_slot of this CsmCopySlotEntity.

        Destination deployment slot during copy operation.

        :return: The target_slot of this CsmCopySlotEntity.
        :rtype: str
        """
        return self._target_slot

    @target_slot.setter
    def target_slot(self, target_slot):
        """Sets the target_slot of this CsmCopySlotEntity.

        Destination deployment slot during copy operation.

        :param target_slot: The target_slot of this CsmCopySlotEntity.
        :type target_slot: str
        """
        if target_slot is None:
            raise ValueError("Invalid value for `target_slot`, must not be `None`")

        self._target_slot = target_slot
