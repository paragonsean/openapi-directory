# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContainerMemoryStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, limit: int=None, max_usage: int=None, usage: int=None):
        """ContainerMemoryStatistics - a model defined in OpenAPI

        :param limit: The limit of this ContainerMemoryStatistics.
        :param max_usage: The max_usage of this ContainerMemoryStatistics.
        :param usage: The usage of this ContainerMemoryStatistics.
        """
        self.openapi_types = {
            'limit': int,
            'max_usage': int,
            'usage': int
        }

        self.attribute_map = {
            'limit': 'limit',
            'max_usage': 'maxUsage',
            'usage': 'usage'
        }

        self._limit = limit
        self._max_usage = max_usage
        self._usage = usage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerMemoryStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerMemoryStatistics of this ContainerMemoryStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def limit(self):
        """Gets the limit of this ContainerMemoryStatistics.


        :return: The limit of this ContainerMemoryStatistics.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this ContainerMemoryStatistics.


        :param limit: The limit of this ContainerMemoryStatistics.
        :type limit: int
        """

        self._limit = limit

    @property
    def max_usage(self):
        """Gets the max_usage of this ContainerMemoryStatistics.


        :return: The max_usage of this ContainerMemoryStatistics.
        :rtype: int
        """
        return self._max_usage

    @max_usage.setter
    def max_usage(self, max_usage):
        """Sets the max_usage of this ContainerMemoryStatistics.


        :param max_usage: The max_usage of this ContainerMemoryStatistics.
        :type max_usage: int
        """

        self._max_usage = max_usage

    @property
    def usage(self):
        """Gets the usage of this ContainerMemoryStatistics.


        :return: The usage of this ContainerMemoryStatistics.
        :rtype: int
        """
        return self._usage

    @usage.setter
    def usage(self, usage):
        """Sets the usage of this ContainerMemoryStatistics.


        :param usage: The usage of this ContainerMemoryStatistics.
        :type usage: int
        """

        self._usage = usage
