# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CsmPublishingProfileOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, format: str=None, include_disaster_recovery_endpoints: bool=None):
        """CsmPublishingProfileOptions - a model defined in OpenAPI

        :param format: The format of this CsmPublishingProfileOptions.
        :param include_disaster_recovery_endpoints: The include_disaster_recovery_endpoints of this CsmPublishingProfileOptions.
        """
        self.openapi_types = {
            'format': str,
            'include_disaster_recovery_endpoints': bool
        }

        self.attribute_map = {
            'format': 'format',
            'include_disaster_recovery_endpoints': 'includeDisasterRecoveryEndpoints'
        }

        self._format = format
        self._include_disaster_recovery_endpoints = include_disaster_recovery_endpoints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CsmPublishingProfileOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CsmPublishingProfileOptions of this CsmPublishingProfileOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def format(self):
        """Gets the format of this CsmPublishingProfileOptions.

        Name of the format. Valid values are:  FileZilla3 WebDeploy -- default Ftp

        :return: The format of this CsmPublishingProfileOptions.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this CsmPublishingProfileOptions.

        Name of the format. Valid values are:  FileZilla3 WebDeploy -- default Ftp

        :param format: The format of this CsmPublishingProfileOptions.
        :type format: str
        """
        allowed_values = ["FileZilla3", "WebDeploy", "Ftp"]  # noqa: E501
        if format not in allowed_values:
            raise ValueError(
                "Invalid value for `format` ({0}), must be one of {1}"
                .format(format, allowed_values)
            )

        self._format = format

    @property
    def include_disaster_recovery_endpoints(self):
        """Gets the include_disaster_recovery_endpoints of this CsmPublishingProfileOptions.

        Include the DisasterRecover endpoint if true

        :return: The include_disaster_recovery_endpoints of this CsmPublishingProfileOptions.
        :rtype: bool
        """
        return self._include_disaster_recovery_endpoints

    @include_disaster_recovery_endpoints.setter
    def include_disaster_recovery_endpoints(self, include_disaster_recovery_endpoints):
        """Sets the include_disaster_recovery_endpoints of this CsmPublishingProfileOptions.

        Include the DisasterRecover endpoint if true

        :param include_disaster_recovery_endpoints: The include_disaster_recovery_endpoints of this CsmPublishingProfileOptions.
        :type include_disaster_recovery_endpoints: bool
        """

        self._include_disaster_recovery_endpoints = include_disaster_recovery_endpoints
