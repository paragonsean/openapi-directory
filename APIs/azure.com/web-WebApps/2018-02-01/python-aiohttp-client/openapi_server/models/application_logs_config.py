# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.azure_blob_storage_application_logs_config import AzureBlobStorageApplicationLogsConfig
from openapi_server.models.azure_table_storage_application_logs_config import AzureTableStorageApplicationLogsConfig
from openapi_server.models.file_system_application_logs_config import FileSystemApplicationLogsConfig
from openapi_server import util


class ApplicationLogsConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, azure_blob_storage: AzureBlobStorageApplicationLogsConfig=None, azure_table_storage: AzureTableStorageApplicationLogsConfig=None, file_system: FileSystemApplicationLogsConfig=None):
        """ApplicationLogsConfig - a model defined in OpenAPI

        :param azure_blob_storage: The azure_blob_storage of this ApplicationLogsConfig.
        :param azure_table_storage: The azure_table_storage of this ApplicationLogsConfig.
        :param file_system: The file_system of this ApplicationLogsConfig.
        """
        self.openapi_types = {
            'azure_blob_storage': AzureBlobStorageApplicationLogsConfig,
            'azure_table_storage': AzureTableStorageApplicationLogsConfig,
            'file_system': FileSystemApplicationLogsConfig
        }

        self.attribute_map = {
            'azure_blob_storage': 'azureBlobStorage',
            'azure_table_storage': 'azureTableStorage',
            'file_system': 'fileSystem'
        }

        self._azure_blob_storage = azure_blob_storage
        self._azure_table_storage = azure_table_storage
        self._file_system = file_system

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationLogsConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationLogsConfig of this ApplicationLogsConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def azure_blob_storage(self):
        """Gets the azure_blob_storage of this ApplicationLogsConfig.


        :return: The azure_blob_storage of this ApplicationLogsConfig.
        :rtype: AzureBlobStorageApplicationLogsConfig
        """
        return self._azure_blob_storage

    @azure_blob_storage.setter
    def azure_blob_storage(self, azure_blob_storage):
        """Sets the azure_blob_storage of this ApplicationLogsConfig.


        :param azure_blob_storage: The azure_blob_storage of this ApplicationLogsConfig.
        :type azure_blob_storage: AzureBlobStorageApplicationLogsConfig
        """

        self._azure_blob_storage = azure_blob_storage

    @property
    def azure_table_storage(self):
        """Gets the azure_table_storage of this ApplicationLogsConfig.


        :return: The azure_table_storage of this ApplicationLogsConfig.
        :rtype: AzureTableStorageApplicationLogsConfig
        """
        return self._azure_table_storage

    @azure_table_storage.setter
    def azure_table_storage(self, azure_table_storage):
        """Sets the azure_table_storage of this ApplicationLogsConfig.


        :param azure_table_storage: The azure_table_storage of this ApplicationLogsConfig.
        :type azure_table_storage: AzureTableStorageApplicationLogsConfig
        """

        self._azure_table_storage = azure_table_storage

    @property
    def file_system(self):
        """Gets the file_system of this ApplicationLogsConfig.


        :return: The file_system of this ApplicationLogsConfig.
        :rtype: FileSystemApplicationLogsConfig
        """
        return self._file_system

    @file_system.setter
    def file_system(self, file_system):
        """Sets the file_system of this ApplicationLogsConfig.


        :param file_system: The file_system of this ApplicationLogsConfig.
        :type file_system: FileSystemApplicationLogsConfig
        """

        self._file_system = file_system
