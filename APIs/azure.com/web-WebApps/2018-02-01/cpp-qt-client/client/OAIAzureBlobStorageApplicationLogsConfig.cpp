/**
 * WebApps API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureBlobStorageApplicationLogsConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureBlobStorageApplicationLogsConfig::OAIAzureBlobStorageApplicationLogsConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureBlobStorageApplicationLogsConfig::OAIAzureBlobStorageApplicationLogsConfig() {
    this->initializeModel();
}

OAIAzureBlobStorageApplicationLogsConfig::~OAIAzureBlobStorageApplicationLogsConfig() {}

void OAIAzureBlobStorageApplicationLogsConfig::initializeModel() {

    m_level_isSet = false;
    m_level_isValid = false;

    m_retention_in_days_isSet = false;
    m_retention_in_days_isValid = false;

    m_sas_url_isSet = false;
    m_sas_url_isValid = false;
}

void OAIAzureBlobStorageApplicationLogsConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureBlobStorageApplicationLogsConfig::fromJsonObject(QJsonObject json) {

    m_level_isValid = ::OpenAPI::fromJsonValue(m_level, json[QString("level")]);
    m_level_isSet = !json[QString("level")].isNull() && m_level_isValid;

    m_retention_in_days_isValid = ::OpenAPI::fromJsonValue(m_retention_in_days, json[QString("retentionInDays")]);
    m_retention_in_days_isSet = !json[QString("retentionInDays")].isNull() && m_retention_in_days_isValid;

    m_sas_url_isValid = ::OpenAPI::fromJsonValue(m_sas_url, json[QString("sasUrl")]);
    m_sas_url_isSet = !json[QString("sasUrl")].isNull() && m_sas_url_isValid;
}

QString OAIAzureBlobStorageApplicationLogsConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureBlobStorageApplicationLogsConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_level_isSet) {
        obj.insert(QString("level"), ::OpenAPI::toJsonValue(m_level));
    }
    if (m_retention_in_days_isSet) {
        obj.insert(QString("retentionInDays"), ::OpenAPI::toJsonValue(m_retention_in_days));
    }
    if (m_sas_url_isSet) {
        obj.insert(QString("sasUrl"), ::OpenAPI::toJsonValue(m_sas_url));
    }
    return obj;
}

QString OAIAzureBlobStorageApplicationLogsConfig::getLevel() const {
    return m_level;
}
void OAIAzureBlobStorageApplicationLogsConfig::setLevel(const QString &level) {
    m_level = level;
    m_level_isSet = true;
}

bool OAIAzureBlobStorageApplicationLogsConfig::is_level_Set() const{
    return m_level_isSet;
}

bool OAIAzureBlobStorageApplicationLogsConfig::is_level_Valid() const{
    return m_level_isValid;
}

qint32 OAIAzureBlobStorageApplicationLogsConfig::getRetentionInDays() const {
    return m_retention_in_days;
}
void OAIAzureBlobStorageApplicationLogsConfig::setRetentionInDays(const qint32 &retention_in_days) {
    m_retention_in_days = retention_in_days;
    m_retention_in_days_isSet = true;
}

bool OAIAzureBlobStorageApplicationLogsConfig::is_retention_in_days_Set() const{
    return m_retention_in_days_isSet;
}

bool OAIAzureBlobStorageApplicationLogsConfig::is_retention_in_days_Valid() const{
    return m_retention_in_days_isValid;
}

QString OAIAzureBlobStorageApplicationLogsConfig::getSasUrl() const {
    return m_sas_url;
}
void OAIAzureBlobStorageApplicationLogsConfig::setSasUrl(const QString &sas_url) {
    m_sas_url = sas_url;
    m_sas_url_isSet = true;
}

bool OAIAzureBlobStorageApplicationLogsConfig::is_sas_url_Set() const{
    return m_sas_url_isSet;
}

bool OAIAzureBlobStorageApplicationLogsConfig::is_sas_url_Valid() const{
    return m_sas_url_isValid;
}

bool OAIAzureBlobStorageApplicationLogsConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retention_in_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sas_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureBlobStorageApplicationLogsConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
