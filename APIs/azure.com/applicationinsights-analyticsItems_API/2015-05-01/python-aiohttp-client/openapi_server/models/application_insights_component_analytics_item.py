# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_insights_component_analytics_item_properties import ApplicationInsightsComponentAnalyticsItemProperties
from openapi_server import util


class ApplicationInsightsComponentAnalyticsItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, id: str=None, name: str=None, properties: ApplicationInsightsComponentAnalyticsItemProperties=None, scope: str=None, time_created: str=None, time_modified: str=None, type: str=None, version: str=None):
        """ApplicationInsightsComponentAnalyticsItem - a model defined in OpenAPI

        :param content: The content of this ApplicationInsightsComponentAnalyticsItem.
        :param id: The id of this ApplicationInsightsComponentAnalyticsItem.
        :param name: The name of this ApplicationInsightsComponentAnalyticsItem.
        :param properties: The properties of this ApplicationInsightsComponentAnalyticsItem.
        :param scope: The scope of this ApplicationInsightsComponentAnalyticsItem.
        :param time_created: The time_created of this ApplicationInsightsComponentAnalyticsItem.
        :param time_modified: The time_modified of this ApplicationInsightsComponentAnalyticsItem.
        :param type: The type of this ApplicationInsightsComponentAnalyticsItem.
        :param version: The version of this ApplicationInsightsComponentAnalyticsItem.
        """
        self.openapi_types = {
            'content': str,
            'id': str,
            'name': str,
            'properties': ApplicationInsightsComponentAnalyticsItemProperties,
            'scope': str,
            'time_created': str,
            'time_modified': str,
            'type': str,
            'version': str
        }

        self.attribute_map = {
            'content': 'Content',
            'id': 'Id',
            'name': 'Name',
            'properties': 'Properties',
            'scope': 'Scope',
            'time_created': 'TimeCreated',
            'time_modified': 'TimeModified',
            'type': 'Type',
            'version': 'Version'
        }

        self._content = content
        self._id = id
        self._name = name
        self._properties = properties
        self._scope = scope
        self._time_created = time_created
        self._time_modified = time_modified
        self._type = type
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationInsightsComponentAnalyticsItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationInsightsComponentAnalyticsItem of this ApplicationInsightsComponentAnalyticsItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this ApplicationInsightsComponentAnalyticsItem.

        The content of this item

        :return: The content of this ApplicationInsightsComponentAnalyticsItem.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this ApplicationInsightsComponentAnalyticsItem.

        The content of this item

        :param content: The content of this ApplicationInsightsComponentAnalyticsItem.
        :type content: str
        """

        self._content = content

    @property
    def id(self):
        """Gets the id of this ApplicationInsightsComponentAnalyticsItem.

        Internally assigned unique id of the item definition.

        :return: The id of this ApplicationInsightsComponentAnalyticsItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ApplicationInsightsComponentAnalyticsItem.

        Internally assigned unique id of the item definition.

        :param id: The id of this ApplicationInsightsComponentAnalyticsItem.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ApplicationInsightsComponentAnalyticsItem.

        The user-defined name of the item.

        :return: The name of this ApplicationInsightsComponentAnalyticsItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApplicationInsightsComponentAnalyticsItem.

        The user-defined name of the item.

        :param name: The name of this ApplicationInsightsComponentAnalyticsItem.
        :type name: str
        """

        self._name = name

    @property
    def properties(self):
        """Gets the properties of this ApplicationInsightsComponentAnalyticsItem.


        :return: The properties of this ApplicationInsightsComponentAnalyticsItem.
        :rtype: ApplicationInsightsComponentAnalyticsItemProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this ApplicationInsightsComponentAnalyticsItem.


        :param properties: The properties of this ApplicationInsightsComponentAnalyticsItem.
        :type properties: ApplicationInsightsComponentAnalyticsItemProperties
        """

        self._properties = properties

    @property
    def scope(self):
        """Gets the scope of this ApplicationInsightsComponentAnalyticsItem.

        Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.

        :return: The scope of this ApplicationInsightsComponentAnalyticsItem.
        :rtype: str
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this ApplicationInsightsComponentAnalyticsItem.

        Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.

        :param scope: The scope of this ApplicationInsightsComponentAnalyticsItem.
        :type scope: str
        """
        allowed_values = ["shared", "user"]  # noqa: E501
        if scope not in allowed_values:
            raise ValueError(
                "Invalid value for `scope` ({0}), must be one of {1}"
                .format(scope, allowed_values)
            )

        self._scope = scope

    @property
    def time_created(self):
        """Gets the time_created of this ApplicationInsightsComponentAnalyticsItem.

        Date and time in UTC when this item was created.

        :return: The time_created of this ApplicationInsightsComponentAnalyticsItem.
        :rtype: str
        """
        return self._time_created

    @time_created.setter
    def time_created(self, time_created):
        """Sets the time_created of this ApplicationInsightsComponentAnalyticsItem.

        Date and time in UTC when this item was created.

        :param time_created: The time_created of this ApplicationInsightsComponentAnalyticsItem.
        :type time_created: str
        """

        self._time_created = time_created

    @property
    def time_modified(self):
        """Gets the time_modified of this ApplicationInsightsComponentAnalyticsItem.

        Date and time in UTC of the last modification that was made to this item.

        :return: The time_modified of this ApplicationInsightsComponentAnalyticsItem.
        :rtype: str
        """
        return self._time_modified

    @time_modified.setter
    def time_modified(self, time_modified):
        """Sets the time_modified of this ApplicationInsightsComponentAnalyticsItem.

        Date and time in UTC of the last modification that was made to this item.

        :param time_modified: The time_modified of this ApplicationInsightsComponentAnalyticsItem.
        :type time_modified: str
        """

        self._time_modified = time_modified

    @property
    def type(self):
        """Gets the type of this ApplicationInsightsComponentAnalyticsItem.

        Enum indicating the type of the Analytics item.

        :return: The type of this ApplicationInsightsComponentAnalyticsItem.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ApplicationInsightsComponentAnalyticsItem.

        Enum indicating the type of the Analytics item.

        :param type: The type of this ApplicationInsightsComponentAnalyticsItem.
        :type type: str
        """
        allowed_values = ["query", "function", "folder", "recent"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def version(self):
        """Gets the version of this ApplicationInsightsComponentAnalyticsItem.

        This instance's version of the data model. This can change as new features are added.

        :return: The version of this ApplicationInsightsComponentAnalyticsItem.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ApplicationInsightsComponentAnalyticsItem.

        This instance's version of the data model. This can change as new features are added.

        :param version: The version of this ApplicationInsightsComponentAnalyticsItem.
        :type version: str
        """

        self._version = version
