/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for saved items.
 *
 * The version of the OpenAPI document: 2015-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationInsightsComponentAnalyticsItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationInsightsComponentAnalyticsItem::OAIApplicationInsightsComponentAnalyticsItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationInsightsComponentAnalyticsItem::OAIApplicationInsightsComponentAnalyticsItem() {
    this->initializeModel();
}

OAIApplicationInsightsComponentAnalyticsItem::~OAIApplicationInsightsComponentAnalyticsItem() {}

void OAIApplicationInsightsComponentAnalyticsItem::initializeModel() {

    m_content_isSet = false;
    m_content_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_scope_isSet = false;
    m_scope_isValid = false;

    m_time_created_isSet = false;
    m_time_created_isValid = false;

    m_time_modified_isSet = false;
    m_time_modified_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIApplicationInsightsComponentAnalyticsItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationInsightsComponentAnalyticsItem::fromJsonObject(QJsonObject json) {

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("Content")]);
    m_content_isSet = !json[QString("Content")].isNull() && m_content_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("Properties")]);
    m_properties_isSet = !json[QString("Properties")].isNull() && m_properties_isValid;

    m_scope_isValid = ::OpenAPI::fromJsonValue(m_scope, json[QString("Scope")]);
    m_scope_isSet = !json[QString("Scope")].isNull() && m_scope_isValid;

    m_time_created_isValid = ::OpenAPI::fromJsonValue(m_time_created, json[QString("TimeCreated")]);
    m_time_created_isSet = !json[QString("TimeCreated")].isNull() && m_time_created_isValid;

    m_time_modified_isValid = ::OpenAPI::fromJsonValue(m_time_modified, json[QString("TimeModified")]);
    m_time_modified_isSet = !json[QString("TimeModified")].isNull() && m_time_modified_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("Version")]);
    m_version_isSet = !json[QString("Version")].isNull() && m_version_isValid;
}

QString OAIApplicationInsightsComponentAnalyticsItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationInsightsComponentAnalyticsItem::asJsonObject() const {
    QJsonObject obj;
    if (m_content_isSet) {
        obj.insert(QString("Content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_properties.isSet()) {
        obj.insert(QString("Properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_scope_isSet) {
        obj.insert(QString("Scope"), ::OpenAPI::toJsonValue(m_scope));
    }
    if (m_time_created_isSet) {
        obj.insert(QString("TimeCreated"), ::OpenAPI::toJsonValue(m_time_created));
    }
    if (m_time_modified_isSet) {
        obj.insert(QString("TimeModified"), ::OpenAPI::toJsonValue(m_time_modified));
    }
    if (m_type_isSet) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_version_isSet) {
        obj.insert(QString("Version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAIApplicationInsightsComponentAnalyticsItem::getContent() const {
    return m_content;
}
void OAIApplicationInsightsComponentAnalyticsItem::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_content_Set() const{
    return m_content_isSet;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_content_Valid() const{
    return m_content_isValid;
}

QString OAIApplicationInsightsComponentAnalyticsItem::getId() const {
    return m_id;
}
void OAIApplicationInsightsComponentAnalyticsItem::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIApplicationInsightsComponentAnalyticsItem::getName() const {
    return m_name;
}
void OAIApplicationInsightsComponentAnalyticsItem::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_name_Valid() const{
    return m_name_isValid;
}

OAIApplicationInsightsComponentAnalyticsItemProperties OAIApplicationInsightsComponentAnalyticsItem::getProperties() const {
    return m_properties;
}
void OAIApplicationInsightsComponentAnalyticsItem::setProperties(const OAIApplicationInsightsComponentAnalyticsItemProperties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIApplicationInsightsComponentAnalyticsItem::getScope() const {
    return m_scope;
}
void OAIApplicationInsightsComponentAnalyticsItem::setScope(const QString &scope) {
    m_scope = scope;
    m_scope_isSet = true;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_scope_Set() const{
    return m_scope_isSet;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_scope_Valid() const{
    return m_scope_isValid;
}

QString OAIApplicationInsightsComponentAnalyticsItem::getTimeCreated() const {
    return m_time_created;
}
void OAIApplicationInsightsComponentAnalyticsItem::setTimeCreated(const QString &time_created) {
    m_time_created = time_created;
    m_time_created_isSet = true;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_time_created_Set() const{
    return m_time_created_isSet;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_time_created_Valid() const{
    return m_time_created_isValid;
}

QString OAIApplicationInsightsComponentAnalyticsItem::getTimeModified() const {
    return m_time_modified;
}
void OAIApplicationInsightsComponentAnalyticsItem::setTimeModified(const QString &time_modified) {
    m_time_modified = time_modified;
    m_time_modified_isSet = true;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_time_modified_Set() const{
    return m_time_modified_isSet;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_time_modified_Valid() const{
    return m_time_modified_isValid;
}

QString OAIApplicationInsightsComponentAnalyticsItem::getType() const {
    return m_type;
}
void OAIApplicationInsightsComponentAnalyticsItem::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_type_Set() const{
    return m_type_isSet;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIApplicationInsightsComponentAnalyticsItem::getVersion() const {
    return m_version;
}
void OAIApplicationInsightsComponentAnalyticsItem::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_version_Set() const{
    return m_version_isSet;
}

bool OAIApplicationInsightsComponentAnalyticsItem::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIApplicationInsightsComponentAnalyticsItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationInsightsComponentAnalyticsItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
