/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for saved items.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationInsightsComponentAnalyticsItemProperties from './ApplicationInsightsComponentAnalyticsItemProperties';

/**
 * The ApplicationInsightsComponentAnalyticsItem model module.
 * @module model/ApplicationInsightsComponentAnalyticsItem
 * @version 2015-05-01
 */
class ApplicationInsightsComponentAnalyticsItem {
    /**
     * Constructs a new <code>ApplicationInsightsComponentAnalyticsItem</code>.
     * Properties that define an Analytics item that is associated to an Application Insights component.
     * @alias module:model/ApplicationInsightsComponentAnalyticsItem
     */
    constructor() { 
        
        ApplicationInsightsComponentAnalyticsItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationInsightsComponentAnalyticsItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationInsightsComponentAnalyticsItem} obj Optional instance to populate.
     * @return {module:model/ApplicationInsightsComponentAnalyticsItem} The populated <code>ApplicationInsightsComponentAnalyticsItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationInsightsComponentAnalyticsItem();

            if (data.hasOwnProperty('Content')) {
                obj['Content'] = ApiClient.convertToType(data['Content'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Properties')) {
                obj['Properties'] = ApplicationInsightsComponentAnalyticsItemProperties.constructFromObject(data['Properties']);
            }
            if (data.hasOwnProperty('Scope')) {
                obj['Scope'] = ApiClient.convertToType(data['Scope'], 'String');
            }
            if (data.hasOwnProperty('TimeCreated')) {
                obj['TimeCreated'] = ApiClient.convertToType(data['TimeCreated'], 'String');
            }
            if (data.hasOwnProperty('TimeModified')) {
                obj['TimeModified'] = ApiClient.convertToType(data['TimeModified'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationInsightsComponentAnalyticsItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationInsightsComponentAnalyticsItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Content'] && !(typeof data['Content'] === 'string' || data['Content'] instanceof String)) {
            throw new Error("Expected the field `Content` to be a primitive type in the JSON string but got " + data['Content']);
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // validate the optional field `Properties`
        if (data['Properties']) { // data not null
          ApplicationInsightsComponentAnalyticsItemProperties.validateJSON(data['Properties']);
        }
        // ensure the json data is a string
        if (data['Scope'] && !(typeof data['Scope'] === 'string' || data['Scope'] instanceof String)) {
            throw new Error("Expected the field `Scope` to be a primitive type in the JSON string but got " + data['Scope']);
        }
        // ensure the json data is a string
        if (data['TimeCreated'] && !(typeof data['TimeCreated'] === 'string' || data['TimeCreated'] instanceof String)) {
            throw new Error("Expected the field `TimeCreated` to be a primitive type in the JSON string but got " + data['TimeCreated']);
        }
        // ensure the json data is a string
        if (data['TimeModified'] && !(typeof data['TimeModified'] === 'string' || data['TimeModified'] instanceof String)) {
            throw new Error("Expected the field `TimeModified` to be a primitive type in the JSON string but got " + data['TimeModified']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }
        // ensure the json data is a string
        if (data['Version'] && !(typeof data['Version'] === 'string' || data['Version'] instanceof String)) {
            throw new Error("Expected the field `Version` to be a primitive type in the JSON string but got " + data['Version']);
        }

        return true;
    }


}



/**
 * The content of this item
 * @member {String} Content
 */
ApplicationInsightsComponentAnalyticsItem.prototype['Content'] = undefined;

/**
 * Internally assigned unique id of the item definition.
 * @member {String} Id
 */
ApplicationInsightsComponentAnalyticsItem.prototype['Id'] = undefined;

/**
 * The user-defined name of the item.
 * @member {String} Name
 */
ApplicationInsightsComponentAnalyticsItem.prototype['Name'] = undefined;

/**
 * @member {module:model/ApplicationInsightsComponentAnalyticsItemProperties} Properties
 */
ApplicationInsightsComponentAnalyticsItem.prototype['Properties'] = undefined;

/**
 * Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
 * @member {module:model/ApplicationInsightsComponentAnalyticsItem.ScopeEnum} Scope
 */
ApplicationInsightsComponentAnalyticsItem.prototype['Scope'] = undefined;

/**
 * Date and time in UTC when this item was created.
 * @member {String} TimeCreated
 */
ApplicationInsightsComponentAnalyticsItem.prototype['TimeCreated'] = undefined;

/**
 * Date and time in UTC of the last modification that was made to this item.
 * @member {String} TimeModified
 */
ApplicationInsightsComponentAnalyticsItem.prototype['TimeModified'] = undefined;

/**
 * Enum indicating the type of the Analytics item.
 * @member {module:model/ApplicationInsightsComponentAnalyticsItem.TypeEnum} Type
 */
ApplicationInsightsComponentAnalyticsItem.prototype['Type'] = undefined;

/**
 * This instance's version of the data model. This can change as new features are added.
 * @member {String} Version
 */
ApplicationInsightsComponentAnalyticsItem.prototype['Version'] = undefined;





/**
 * Allowed values for the <code>Scope</code> property.
 * @enum {String}
 * @readonly
 */
ApplicationInsightsComponentAnalyticsItem['ScopeEnum'] = {

    /**
     * value: "shared"
     * @const
     */
    "shared": "shared",

    /**
     * value: "user"
     * @const
     */
    "user": "user"
};


/**
 * Allowed values for the <code>Type</code> property.
 * @enum {String}
 * @readonly
 */
ApplicationInsightsComponentAnalyticsItem['TypeEnum'] = {

    /**
     * value: "query"
     * @const
     */
    "query": "query",

    /**
     * value: "function"
     * @const
     */
    "function": "function",

    /**
     * value: "folder"
     * @const
     */
    "folder": "folder",

    /**
     * value: "recent"
     * @const
     */
    "recent": "recent"
};



export default ApplicationInsightsComponentAnalyticsItem;

