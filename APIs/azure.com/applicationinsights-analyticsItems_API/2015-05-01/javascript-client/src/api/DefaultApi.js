/**
 * ApplicationInsightsManagementClient
 * Azure Application Insights client for saved items.
 *
 * The version of the OpenAPI document: 2015-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationInsightsComponentAnalyticsItem from '../model/ApplicationInsightsComponentAnalyticsItem';

/**
* Default service.
* @module api/DefaultApi
* @version 2015-05-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the analyticsItemsDelete operation.
     * @callback module:api/DefaultApi~analyticsItemsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a specific Analytics Items defined within an Application Insights component.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {module:model/String} scopePath Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {Object} opts Optional parameters
     * @param {String} [id] The Id of a specific item defined in the Application Insights component
     * @param {String} [name] The name of a specific item defined in the Application Insights component
     * @param {module:api/DefaultApi~analyticsItemsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    analyticsItemsDelete(subscriptionId, resourceGroupName, resourceName, scopePath, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling analyticsItemsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling analyticsItemsDelete");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling analyticsItemsDelete");
      }
      // verify the required parameter 'scopePath' is set
      if (scopePath === undefined || scopePath === null) {
        throw new Error("Missing the required parameter 'scopePath' when calling analyticsItemsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling analyticsItemsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName,
        'scopePath': scopePath
      };
      let queryParams = {
        'api-version': apiVersion,
        'id': opts['id'],
        'name': opts['name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/{scopePath}/item', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsItemsGet operation.
     * @callback module:api/DefaultApi~analyticsItemsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentAnalyticsItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a specific Analytics Items defined within an Application Insights component.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {module:model/String} scopePath Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {Object} opts Optional parameters
     * @param {String} [id] The Id of a specific item defined in the Application Insights component
     * @param {String} [name] The name of a specific item defined in the Application Insights component
     * @param {module:api/DefaultApi~analyticsItemsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentAnalyticsItem}
     */
    analyticsItemsGet(subscriptionId, resourceGroupName, resourceName, scopePath, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling analyticsItemsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling analyticsItemsGet");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling analyticsItemsGet");
      }
      // verify the required parameter 'scopePath' is set
      if (scopePath === undefined || scopePath === null) {
        throw new Error("Missing the required parameter 'scopePath' when calling analyticsItemsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling analyticsItemsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName,
        'scopePath': scopePath
      };
      let queryParams = {
        'api-version': apiVersion,
        'id': opts['id'],
        'name': opts['name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentAnalyticsItem;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/{scopePath}/item', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsItemsList operation.
     * @callback module:api/DefaultApi~analyticsItemsListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ApplicationInsightsComponentAnalyticsItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of Analytics Items defined within an Application Insights component.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {module:model/String} scopePath Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [scope = 'shared')] Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
     * @param {module:model/String} [type = 'none')] Enum indicating the type of the Analytics item.
     * @param {Boolean} [includeContent] Flag indicating whether or not to return the content of each applicable item. If false, only return the item information.
     * @param {module:api/DefaultApi~analyticsItemsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ApplicationInsightsComponentAnalyticsItem>}
     */
    analyticsItemsList(subscriptionId, resourceGroupName, resourceName, scopePath, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling analyticsItemsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling analyticsItemsList");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling analyticsItemsList");
      }
      // verify the required parameter 'scopePath' is set
      if (scopePath === undefined || scopePath === null) {
        throw new Error("Missing the required parameter 'scopePath' when calling analyticsItemsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling analyticsItemsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName,
        'scopePath': scopePath
      };
      let queryParams = {
        'api-version': apiVersion,
        'scope': opts['scope'],
        'type': opts['type'],
        'includeContent': opts['includeContent']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ApplicationInsightsComponentAnalyticsItem];
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/{scopePath}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsItemsPut operation.
     * @callback module:api/DefaultApi~analyticsItemsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationInsightsComponentAnalyticsItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds or Updates a specific Analytics Item within an Application Insights component.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {String} resourceGroupName The name of the resource group. The name is case insensitive.
     * @param {String} resourceName The name of the Application Insights component resource.
     * @param {module:model/String} scopePath Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
     * @param {String} apiVersion The API version to use for this operation.
     * @param {module:model/ApplicationInsightsComponentAnalyticsItem} itemProperties Properties that need to be specified to create a new item and add it to an Application Insights component.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [overrideItem] Flag indicating whether or not to force save an item. This allows overriding an item if it already exists.
     * @param {module:api/DefaultApi~analyticsItemsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationInsightsComponentAnalyticsItem}
     */
    analyticsItemsPut(subscriptionId, resourceGroupName, resourceName, scopePath, apiVersion, itemProperties, opts, callback) {
      opts = opts || {};
      let postBody = itemProperties;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling analyticsItemsPut");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling analyticsItemsPut");
      }
      // verify the required parameter 'resourceName' is set
      if (resourceName === undefined || resourceName === null) {
        throw new Error("Missing the required parameter 'resourceName' when calling analyticsItemsPut");
      }
      // verify the required parameter 'scopePath' is set
      if (scopePath === undefined || scopePath === null) {
        throw new Error("Missing the required parameter 'scopePath' when calling analyticsItemsPut");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling analyticsItemsPut");
      }
      // verify the required parameter 'itemProperties' is set
      if (itemProperties === undefined || itemProperties === null) {
        throw new Error("Missing the required parameter 'itemProperties' when calling analyticsItemsPut");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'resourceName': resourceName,
        'scopePath': scopePath
      };
      let queryParams = {
        'api-version': apiVersion,
        'overrideItem': opts['overrideItem']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplicationInsightsComponentAnalyticsItem;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/{scopePath}/item', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
