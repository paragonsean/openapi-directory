/**
 * Machine Learning Compute Management Client
 * These APIs allow end users to operate on Azure Machine Learning Compute resources. They support the following operations:<ul><li>Create or update a cluster</li><li>Get a cluster</li><li>Patch a cluster</li><li>Delete a cluster</li><li>Get keys for a cluster</li><li>Check if updates are available for system services in a cluster</li><li>Update system services in a cluster</li><li>Get all clusters in a resource group</li><li>Get all clusters in a subscription</li></ul>
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MachineLearningComputeManagementClient);
  }
}(this, function(expect, MachineLearningComputeManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MachineLearningComputeManagementClient.OperationalizationClusterCredentials();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OperationalizationClusterCredentials', function() {
    it('should create an instance of OperationalizationClusterCredentials', function() {
      // uncomment below and update the code to test OperationalizationClusterCredentials
      //var instance = new MachineLearningComputeManagementClient.OperationalizationClusterCredentials();
      //expect(instance).to.be.a(MachineLearningComputeManagementClient.OperationalizationClusterCredentials);
    });

    it('should have the property appInsights (base name: "appInsights")', function() {
      // uncomment below and update the code to test the property appInsights
      //var instance = new MachineLearningComputeManagementClient.OperationalizationClusterCredentials();
      //expect(instance).to.be();
    });

    it('should have the property containerRegistry (base name: "containerRegistry")', function() {
      // uncomment below and update the code to test the property containerRegistry
      //var instance = new MachineLearningComputeManagementClient.OperationalizationClusterCredentials();
      //expect(instance).to.be();
    });

    it('should have the property containerService (base name: "containerService")', function() {
      // uncomment below and update the code to test the property containerService
      //var instance = new MachineLearningComputeManagementClient.OperationalizationClusterCredentials();
      //expect(instance).to.be();
    });

    it('should have the property serviceAuthConfiguration (base name: "serviceAuthConfiguration")', function() {
      // uncomment below and update the code to test the property serviceAuthConfiguration
      //var instance = new MachineLearningComputeManagementClient.OperationalizationClusterCredentials();
      //expect(instance).to.be();
    });

    it('should have the property sslConfiguration (base name: "sslConfiguration")', function() {
      // uncomment below and update the code to test the property sslConfiguration
      //var instance = new MachineLearningComputeManagementClient.OperationalizationClusterCredentials();
      //expect(instance).to.be();
    });

    it('should have the property storageAccount (base name: "storageAccount")', function() {
      // uncomment below and update the code to test the property storageAccount
      //var instance = new MachineLearningComputeManagementClient.OperationalizationClusterCredentials();
      //expect(instance).to.be();
    });

  });

}));
