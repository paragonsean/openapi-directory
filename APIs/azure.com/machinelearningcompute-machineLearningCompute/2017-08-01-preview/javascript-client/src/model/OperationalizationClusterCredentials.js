/**
 * Machine Learning Compute Management Client
 * These APIs allow end users to operate on Azure Machine Learning Compute resources. They support the following operations:<ul><li>Create or update a cluster</li><li>Get a cluster</li><li>Patch a cluster</li><li>Delete a cluster</li><li>Get keys for a cluster</li><li>Check if updates are available for system services in a cluster</li><li>Update system services in a cluster</li><li>Get all clusters in a resource group</li><li>Get all clusters in a subscription</li></ul>
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppInsightsCredentials from './AppInsightsCredentials';
import ContainerRegistryCredentials from './ContainerRegistryCredentials';
import ContainerServiceCredentials from './ContainerServiceCredentials';
import ServiceAuthConfiguration from './ServiceAuthConfiguration';
import SslConfiguration from './SslConfiguration';
import StorageAccountCredentials from './StorageAccountCredentials';

/**
 * The OperationalizationClusterCredentials model module.
 * @module model/OperationalizationClusterCredentials
 * @version 2017-08-01-preview
 */
class OperationalizationClusterCredentials {
    /**
     * Constructs a new <code>OperationalizationClusterCredentials</code>.
     * Credentials to resources in the cluster.
     * @alias module:model/OperationalizationClusterCredentials
     */
    constructor() { 
        
        OperationalizationClusterCredentials.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationalizationClusterCredentials</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationalizationClusterCredentials} obj Optional instance to populate.
     * @return {module:model/OperationalizationClusterCredentials} The populated <code>OperationalizationClusterCredentials</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationalizationClusterCredentials();

            if (data.hasOwnProperty('appInsights')) {
                obj['appInsights'] = AppInsightsCredentials.constructFromObject(data['appInsights']);
            }
            if (data.hasOwnProperty('containerRegistry')) {
                obj['containerRegistry'] = ContainerRegistryCredentials.constructFromObject(data['containerRegistry']);
            }
            if (data.hasOwnProperty('containerService')) {
                obj['containerService'] = ContainerServiceCredentials.constructFromObject(data['containerService']);
            }
            if (data.hasOwnProperty('serviceAuthConfiguration')) {
                obj['serviceAuthConfiguration'] = ServiceAuthConfiguration.constructFromObject(data['serviceAuthConfiguration']);
            }
            if (data.hasOwnProperty('sslConfiguration')) {
                obj['sslConfiguration'] = SslConfiguration.constructFromObject(data['sslConfiguration']);
            }
            if (data.hasOwnProperty('storageAccount')) {
                obj['storageAccount'] = StorageAccountCredentials.constructFromObject(data['storageAccount']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationalizationClusterCredentials</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationalizationClusterCredentials</code>.
     */
    static validateJSON(data) {
        // validate the optional field `appInsights`
        if (data['appInsights']) { // data not null
          AppInsightsCredentials.validateJSON(data['appInsights']);
        }
        // validate the optional field `containerRegistry`
        if (data['containerRegistry']) { // data not null
          ContainerRegistryCredentials.validateJSON(data['containerRegistry']);
        }
        // validate the optional field `containerService`
        if (data['containerService']) { // data not null
          ContainerServiceCredentials.validateJSON(data['containerService']);
        }
        // validate the optional field `serviceAuthConfiguration`
        if (data['serviceAuthConfiguration']) { // data not null
          ServiceAuthConfiguration.validateJSON(data['serviceAuthConfiguration']);
        }
        // validate the optional field `sslConfiguration`
        if (data['sslConfiguration']) { // data not null
          SslConfiguration.validateJSON(data['sslConfiguration']);
        }
        // validate the optional field `storageAccount`
        if (data['storageAccount']) { // data not null
          StorageAccountCredentials.validateJSON(data['storageAccount']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppInsightsCredentials} appInsights
 */
OperationalizationClusterCredentials.prototype['appInsights'] = undefined;

/**
 * @member {module:model/ContainerRegistryCredentials} containerRegistry
 */
OperationalizationClusterCredentials.prototype['containerRegistry'] = undefined;

/**
 * @member {module:model/ContainerServiceCredentials} containerService
 */
OperationalizationClusterCredentials.prototype['containerService'] = undefined;

/**
 * @member {module:model/ServiceAuthConfiguration} serviceAuthConfiguration
 */
OperationalizationClusterCredentials.prototype['serviceAuthConfiguration'] = undefined;

/**
 * @member {module:model/SslConfiguration} sslConfiguration
 */
OperationalizationClusterCredentials.prototype['sslConfiguration'] = undefined;

/**
 * @member {module:model/StorageAccountCredentials} storageAccount
 */
OperationalizationClusterCredentials.prototype['storageAccount'] = undefined;






export default OperationalizationClusterCredentials;

