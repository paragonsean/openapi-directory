# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_principal_properties import ServicePrincipalProperties
from openapi_server import util


class ContainerServiceCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acs_kube_config: str=None, image_pull_secret_name: str=None, service_principal_configuration: ServicePrincipalProperties=None):
        """ContainerServiceCredentials - a model defined in OpenAPI

        :param acs_kube_config: The acs_kube_config of this ContainerServiceCredentials.
        :param image_pull_secret_name: The image_pull_secret_name of this ContainerServiceCredentials.
        :param service_principal_configuration: The service_principal_configuration of this ContainerServiceCredentials.
        """
        self.openapi_types = {
            'acs_kube_config': str,
            'image_pull_secret_name': str,
            'service_principal_configuration': ServicePrincipalProperties
        }

        self.attribute_map = {
            'acs_kube_config': 'acsKubeConfig',
            'image_pull_secret_name': 'imagePullSecretName',
            'service_principal_configuration': 'servicePrincipalConfiguration'
        }

        self._acs_kube_config = acs_kube_config
        self._image_pull_secret_name = image_pull_secret_name
        self._service_principal_configuration = service_principal_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerServiceCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerServiceCredentials of this ContainerServiceCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acs_kube_config(self):
        """Gets the acs_kube_config of this ContainerServiceCredentials.

        The ACS kube config file.

        :return: The acs_kube_config of this ContainerServiceCredentials.
        :rtype: str
        """
        return self._acs_kube_config

    @acs_kube_config.setter
    def acs_kube_config(self, acs_kube_config):
        """Sets the acs_kube_config of this ContainerServiceCredentials.

        The ACS kube config file.

        :param acs_kube_config: The acs_kube_config of this ContainerServiceCredentials.
        :type acs_kube_config: str
        """

        self._acs_kube_config = acs_kube_config

    @property
    def image_pull_secret_name(self):
        """Gets the image_pull_secret_name of this ContainerServiceCredentials.

        The ACR image pull secret name which was created in Kubernetes.

        :return: The image_pull_secret_name of this ContainerServiceCredentials.
        :rtype: str
        """
        return self._image_pull_secret_name

    @image_pull_secret_name.setter
    def image_pull_secret_name(self, image_pull_secret_name):
        """Sets the image_pull_secret_name of this ContainerServiceCredentials.

        The ACR image pull secret name which was created in Kubernetes.

        :param image_pull_secret_name: The image_pull_secret_name of this ContainerServiceCredentials.
        :type image_pull_secret_name: str
        """

        self._image_pull_secret_name = image_pull_secret_name

    @property
    def service_principal_configuration(self):
        """Gets the service_principal_configuration of this ContainerServiceCredentials.


        :return: The service_principal_configuration of this ContainerServiceCredentials.
        :rtype: ServicePrincipalProperties
        """
        return self._service_principal_configuration

    @service_principal_configuration.setter
    def service_principal_configuration(self, service_principal_configuration):
        """Sets the service_principal_configuration of this ContainerServiceCredentials.


        :param service_principal_configuration: The service_principal_configuration of this ContainerServiceCredentials.
        :type service_principal_configuration: ServicePrincipalProperties
        """

        self._service_principal_configuration = service_principal_configuration
