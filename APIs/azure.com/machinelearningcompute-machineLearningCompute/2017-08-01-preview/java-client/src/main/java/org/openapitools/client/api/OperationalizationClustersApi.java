/*
 * Machine Learning Compute Management Client
 * These APIs allow end users to operate on Azure Machine Learning Compute resources. They support the following operations:<ul><li>Create or update a cluster</li><li>Get a cluster</li><li>Patch a cluster</li><li>Delete a cluster</li><li>Get keys for a cluster</li><li>Check if updates are available for system services in a cluster</li><li>Update system services in a cluster</li><li>Get all clusters in a resource group</li><li>Get all clusters in a subscription</li></ul>
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CheckSystemServicesUpdatesAvailableResponse;
import org.openapitools.client.model.ErrorResponseWrapper;
import org.openapitools.client.model.OperationalizationCluster;
import org.openapitools.client.model.OperationalizationClusterCredentials;
import org.openapitools.client.model.OperationalizationClusterUpdateParameters;
import org.openapitools.client.model.PaginatedOperationalizationClustersList;
import org.openapitools.client.model.UpdateSystemServicesResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OperationalizationClustersApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public OperationalizationClustersApi() {
        this(Configuration.getDefaultApiClient());
    }

    public OperationalizationClustersApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for operationalizationClustersCheckSystemServicesUpdatesAvailable
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request completed successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersCheckSystemServicesUpdatesAvailableCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/checkSystemServicesUpdatesAvailable"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "clusterName" + "}", localVarApiClient.escapeString(clusterName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call operationalizationClustersCheckSystemServicesUpdatesAvailableValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling operationalizationClustersCheckSystemServicesUpdatesAvailable(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling operationalizationClustersCheckSystemServicesUpdatesAvailable(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersCheckSystemServicesUpdatesAvailable(Async)");
        }

        // verify the required parameter 'clusterName' is set
        if (clusterName == null) {
            throw new ApiException("Missing the required parameter 'clusterName' when calling operationalizationClustersCheckSystemServicesUpdatesAvailable(Async)");
        }

        return operationalizationClustersCheckSystemServicesUpdatesAvailableCall(apiVersion, subscriptionId, resourceGroupName, clusterName, _callback);

    }

    /**
     * 
     * Checks if updates are available for system services in the cluster.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @return CheckSystemServicesUpdatesAvailableResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request completed successfully. </td><td>  -  </td></tr>
     </table>
     */
    public CheckSystemServicesUpdatesAvailableResponse operationalizationClustersCheckSystemServicesUpdatesAvailable(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName) throws ApiException {
        ApiResponse<CheckSystemServicesUpdatesAvailableResponse> localVarResp = operationalizationClustersCheckSystemServicesUpdatesAvailableWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, clusterName);
        return localVarResp.getData();
    }

    /**
     * 
     * Checks if updates are available for system services in the cluster.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @return ApiResponse&lt;CheckSystemServicesUpdatesAvailableResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request completed successfully. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CheckSystemServicesUpdatesAvailableResponse> operationalizationClustersCheckSystemServicesUpdatesAvailableWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName) throws ApiException {
        okhttp3.Call localVarCall = operationalizationClustersCheckSystemServicesUpdatesAvailableValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, null);
        Type localVarReturnType = new TypeToken<CheckSystemServicesUpdatesAvailableResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Checks if updates are available for system services in the cluster.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request completed successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersCheckSystemServicesUpdatesAvailableAsync(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, final ApiCallback<CheckSystemServicesUpdatesAvailableResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = operationalizationClustersCheckSystemServicesUpdatesAvailableValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, _callback);
        Type localVarReturnType = new TypeToken<CheckSystemServicesUpdatesAvailableResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for operationalizationClustersCreateOrUpdate
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param parameters Parameters supplied to create or update an Operationalization cluster. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The create or update succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> The request was accepted and will complete asynchronously. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersCreateOrUpdateCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, OperationalizationCluster parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "clusterName" + "}", localVarApiClient.escapeString(clusterName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call operationalizationClustersCreateOrUpdateValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, OperationalizationCluster parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling operationalizationClustersCreateOrUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling operationalizationClustersCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersCreateOrUpdate(Async)");
        }

        // verify the required parameter 'clusterName' is set
        if (clusterName == null) {
            throw new ApiException("Missing the required parameter 'clusterName' when calling operationalizationClustersCreateOrUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling operationalizationClustersCreateOrUpdate(Async)");
        }

        return operationalizationClustersCreateOrUpdateCall(apiVersion, subscriptionId, resourceGroupName, clusterName, parameters, _callback);

    }

    /**
     * 
     * Create or update an operationalization cluster.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param parameters Parameters supplied to create or update an Operationalization cluster. (required)
     * @return OperationalizationCluster
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The create or update succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> The request was accepted and will complete asynchronously. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public OperationalizationCluster operationalizationClustersCreateOrUpdate(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, OperationalizationCluster parameters) throws ApiException {
        ApiResponse<OperationalizationCluster> localVarResp = operationalizationClustersCreateOrUpdateWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, clusterName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * Create or update an operationalization cluster.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param parameters Parameters supplied to create or update an Operationalization cluster. (required)
     * @return ApiResponse&lt;OperationalizationCluster&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The create or update succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> The request was accepted and will complete asynchronously. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationalizationCluster> operationalizationClustersCreateOrUpdateWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, OperationalizationCluster parameters) throws ApiException {
        okhttp3.Call localVarCall = operationalizationClustersCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, parameters, null);
        Type localVarReturnType = new TypeToken<OperationalizationCluster>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create or update an operationalization cluster.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param parameters Parameters supplied to create or update an Operationalization cluster. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The create or update succeeded. </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> The request was accepted and will complete asynchronously. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersCreateOrUpdateAsync(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, OperationalizationCluster parameters, final ApiCallback<OperationalizationCluster> _callback) throws ApiException {

        okhttp3.Call localVarCall = operationalizationClustersCreateOrUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, parameters, _callback);
        Type localVarReturnType = new TypeToken<OperationalizationCluster>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for operationalizationClustersDelete
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param deleteAll If true, deletes all resources associated with this cluster. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The delete request was accepted and will complete asynchronously. The know the progress of the delete operation do a GET call on the URI in the Location header. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations. </td><td>  * Location - URI of the async operation. <br>  </td></tr>
        <tr><td> 204 </td><td> No Content. The cluster did not exist but the request was well formed. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersDeleteCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, Boolean deleteAll, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "clusterName" + "}", localVarApiClient.escapeString(clusterName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (deleteAll != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("deleteAll", deleteAll));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call operationalizationClustersDeleteValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, Boolean deleteAll, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling operationalizationClustersDelete(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling operationalizationClustersDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersDelete(Async)");
        }

        // verify the required parameter 'clusterName' is set
        if (clusterName == null) {
            throw new ApiException("Missing the required parameter 'clusterName' when calling operationalizationClustersDelete(Async)");
        }

        return operationalizationClustersDeleteCall(apiVersion, subscriptionId, resourceGroupName, clusterName, deleteAll, _callback);

    }

    /**
     * 
     * Deletes the specified cluster.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param deleteAll If true, deletes all resources associated with this cluster. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The delete request was accepted and will complete asynchronously. The know the progress of the delete operation do a GET call on the URI in the Location header. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations. </td><td>  * Location - URI of the async operation. <br>  </td></tr>
        <tr><td> 204 </td><td> No Content. The cluster did not exist but the request was well formed. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void operationalizationClustersDelete(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, Boolean deleteAll) throws ApiException {
        operationalizationClustersDeleteWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, clusterName, deleteAll);
    }

    /**
     * 
     * Deletes the specified cluster.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param deleteAll If true, deletes all resources associated with this cluster. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The delete request was accepted and will complete asynchronously. The know the progress of the delete operation do a GET call on the URI in the Location header. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations. </td><td>  * Location - URI of the async operation. <br>  </td></tr>
        <tr><td> 204 </td><td> No Content. The cluster did not exist but the request was well formed. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> operationalizationClustersDeleteWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, Boolean deleteAll) throws ApiException {
        okhttp3.Call localVarCall = operationalizationClustersDeleteValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, deleteAll, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes the specified cluster.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param deleteAll If true, deletes all resources associated with this cluster. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> The delete request was accepted and will complete asynchronously. The know the progress of the delete operation do a GET call on the URI in the Location header. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations. </td><td>  * Location - URI of the async operation. <br>  </td></tr>
        <tr><td> 204 </td><td> No Content. The cluster did not exist but the request was well formed. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersDeleteAsync(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, Boolean deleteAll, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = operationalizationClustersDeleteValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, deleteAll, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for operationalizationClustersGet
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersGetCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "clusterName" + "}", localVarApiClient.escapeString(clusterName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call operationalizationClustersGetValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling operationalizationClustersGet(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling operationalizationClustersGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersGet(Async)");
        }

        // verify the required parameter 'clusterName' is set
        if (clusterName == null) {
            throw new ApiException("Missing the required parameter 'clusterName' when calling operationalizationClustersGet(Async)");
        }

        return operationalizationClustersGetCall(apiVersion, subscriptionId, resourceGroupName, clusterName, _callback);

    }

    /**
     * 
     * Gets the operationalization cluster resource view. Note that the credentials are not returned by this call. Call ListKeys to get them.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @return OperationalizationCluster
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public OperationalizationCluster operationalizationClustersGet(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName) throws ApiException {
        ApiResponse<OperationalizationCluster> localVarResp = operationalizationClustersGetWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, clusterName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the operationalization cluster resource view. Note that the credentials are not returned by this call. Call ListKeys to get them.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @return ApiResponse&lt;OperationalizationCluster&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationalizationCluster> operationalizationClustersGetWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName) throws ApiException {
        okhttp3.Call localVarCall = operationalizationClustersGetValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, null);
        Type localVarReturnType = new TypeToken<OperationalizationCluster>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the operationalization cluster resource view. Note that the credentials are not returned by this call. Call ListKeys to get them.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersGetAsync(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, final ApiCallback<OperationalizationCluster> _callback) throws ApiException {

        okhttp3.Call localVarCall = operationalizationClustersGetValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, _callback);
        Type localVarReturnType = new TypeToken<OperationalizationCluster>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for operationalizationClustersListByResourceGroup
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The response includes a paginated array of cluster objects and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. Note that the cluster objects are sparsely populated to conserve space in the response content. To get the full cluster object, call the GET operation on the cluster. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersListByResourceGroupCall(String apiVersion, String subscriptionId, String resourceGroupName, String $skiptoken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call operationalizationClustersListByResourceGroupValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String $skiptoken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling operationalizationClustersListByResourceGroup(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling operationalizationClustersListByResourceGroup(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersListByResourceGroup(Async)");
        }

        return operationalizationClustersListByResourceGroupCall(apiVersion, subscriptionId, resourceGroupName, $skiptoken, _callback);

    }

    /**
     * 
     * Gets the clusters in the specified resource group.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return PaginatedOperationalizationClustersList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The response includes a paginated array of cluster objects and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. Note that the cluster objects are sparsely populated to conserve space in the response content. To get the full cluster object, call the GET operation on the cluster. </td><td>  -  </td></tr>
     </table>
     */
    public PaginatedOperationalizationClustersList operationalizationClustersListByResourceGroup(String apiVersion, String subscriptionId, String resourceGroupName, String $skiptoken) throws ApiException {
        ApiResponse<PaginatedOperationalizationClustersList> localVarResp = operationalizationClustersListByResourceGroupWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, $skiptoken);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the clusters in the specified resource group.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return ApiResponse&lt;PaginatedOperationalizationClustersList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The response includes a paginated array of cluster objects and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. Note that the cluster objects are sparsely populated to conserve space in the response content. To get the full cluster object, call the GET operation on the cluster. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PaginatedOperationalizationClustersList> operationalizationClustersListByResourceGroupWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String $skiptoken) throws ApiException {
        okhttp3.Call localVarCall = operationalizationClustersListByResourceGroupValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, $skiptoken, null);
        Type localVarReturnType = new TypeToken<PaginatedOperationalizationClustersList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the clusters in the specified resource group.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The response includes a paginated array of cluster objects and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. Note that the cluster objects are sparsely populated to conserve space in the response content. To get the full cluster object, call the GET operation on the cluster. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersListByResourceGroupAsync(String apiVersion, String subscriptionId, String resourceGroupName, String $skiptoken, final ApiCallback<PaginatedOperationalizationClustersList> _callback) throws ApiException {

        okhttp3.Call localVarCall = operationalizationClustersListByResourceGroupValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, $skiptoken, _callback);
        Type localVarReturnType = new TypeToken<PaginatedOperationalizationClustersList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for operationalizationClustersListBySubscriptionId
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The response includes a paginated array of cluster objects and a URI to the next set of results, if any. Note that the cluster objects are sparsely populated to conserve space in the response content. To get the full cluster object, call the GET operation on the cluster. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersListBySubscriptionIdCall(String apiVersion, String subscriptionId, String $skiptoken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningCompute/operationalizationClusters"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if ($skiptoken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$skiptoken", $skiptoken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call operationalizationClustersListBySubscriptionIdValidateBeforeCall(String apiVersion, String subscriptionId, String $skiptoken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling operationalizationClustersListBySubscriptionId(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling operationalizationClustersListBySubscriptionId(Async)");
        }

        return operationalizationClustersListBySubscriptionIdCall(apiVersion, subscriptionId, $skiptoken, _callback);

    }

    /**
     * 
     * Gets the operationalization clusters in the specified subscription.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return PaginatedOperationalizationClustersList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The response includes a paginated array of cluster objects and a URI to the next set of results, if any. Note that the cluster objects are sparsely populated to conserve space in the response content. To get the full cluster object, call the GET operation on the cluster. </td><td>  -  </td></tr>
     </table>
     */
    public PaginatedOperationalizationClustersList operationalizationClustersListBySubscriptionId(String apiVersion, String subscriptionId, String $skiptoken) throws ApiException {
        ApiResponse<PaginatedOperationalizationClustersList> localVarResp = operationalizationClustersListBySubscriptionIdWithHttpInfo(apiVersion, subscriptionId, $skiptoken);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the operationalization clusters in the specified subscription.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @return ApiResponse&lt;PaginatedOperationalizationClustersList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The response includes a paginated array of cluster objects and a URI to the next set of results, if any. Note that the cluster objects are sparsely populated to conserve space in the response content. To get the full cluster object, call the GET operation on the cluster. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PaginatedOperationalizationClustersList> operationalizationClustersListBySubscriptionIdWithHttpInfo(String apiVersion, String subscriptionId, String $skiptoken) throws ApiException {
        okhttp3.Call localVarCall = operationalizationClustersListBySubscriptionIdValidateBeforeCall(apiVersion, subscriptionId, $skiptoken, null);
        Type localVarReturnType = new TypeToken<PaginatedOperationalizationClustersList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the operationalization clusters in the specified subscription.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param $skiptoken Continuation token for pagination. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The response includes a paginated array of cluster objects and a URI to the next set of results, if any. Note that the cluster objects are sparsely populated to conserve space in the response content. To get the full cluster object, call the GET operation on the cluster. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersListBySubscriptionIdAsync(String apiVersion, String subscriptionId, String $skiptoken, final ApiCallback<PaginatedOperationalizationClustersList> _callback) throws ApiException {

        okhttp3.Call localVarCall = operationalizationClustersListBySubscriptionIdValidateBeforeCall(apiVersion, subscriptionId, $skiptoken, _callback);
        Type localVarReturnType = new TypeToken<PaginatedOperationalizationClustersList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for operationalizationClustersListKeys
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request completed successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersListKeysCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/listKeys"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "clusterName" + "}", localVarApiClient.escapeString(clusterName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call operationalizationClustersListKeysValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling operationalizationClustersListKeys(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling operationalizationClustersListKeys(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersListKeys(Async)");
        }

        // verify the required parameter 'clusterName' is set
        if (clusterName == null) {
            throw new ApiException("Missing the required parameter 'clusterName' when calling operationalizationClustersListKeys(Async)");
        }

        return operationalizationClustersListKeysCall(apiVersion, subscriptionId, resourceGroupName, clusterName, _callback);

    }

    /**
     * 
     * Gets the credentials for the specified cluster such as Storage, ACR and ACS credentials. This is a long running operation because it fetches keys from dependencies.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @return OperationalizationClusterCredentials
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request completed successfully. </td><td>  -  </td></tr>
     </table>
     */
    public OperationalizationClusterCredentials operationalizationClustersListKeys(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName) throws ApiException {
        ApiResponse<OperationalizationClusterCredentials> localVarResp = operationalizationClustersListKeysWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, clusterName);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the credentials for the specified cluster such as Storage, ACR and ACS credentials. This is a long running operation because it fetches keys from dependencies.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @return ApiResponse&lt;OperationalizationClusterCredentials&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request completed successfully. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationalizationClusterCredentials> operationalizationClustersListKeysWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName) throws ApiException {
        okhttp3.Call localVarCall = operationalizationClustersListKeysValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, null);
        Type localVarReturnType = new TypeToken<OperationalizationClusterCredentials>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the credentials for the specified cluster such as Storage, ACR and ACS credentials. This is a long running operation because it fetches keys from dependencies.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request completed successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersListKeysAsync(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, final ApiCallback<OperationalizationClusterCredentials> _callback) throws ApiException {

        okhttp3.Call localVarCall = operationalizationClustersListKeysValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, _callback);
        Type localVarReturnType = new TypeToken<OperationalizationClusterCredentials>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for operationalizationClustersUpdate
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param parameters The parameters supplied to patch the cluster. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The update completed successfully. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersUpdateCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, OperationalizationClusterUpdateParameters parameters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "clusterName" + "}", localVarApiClient.escapeString(clusterName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call operationalizationClustersUpdateValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, OperationalizationClusterUpdateParameters parameters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling operationalizationClustersUpdate(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling operationalizationClustersUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersUpdate(Async)");
        }

        // verify the required parameter 'clusterName' is set
        if (clusterName == null) {
            throw new ApiException("Missing the required parameter 'clusterName' when calling operationalizationClustersUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling operationalizationClustersUpdate(Async)");
        }

        return operationalizationClustersUpdateCall(apiVersion, subscriptionId, resourceGroupName, clusterName, parameters, _callback);

    }

    /**
     * 
     * The PATCH operation can be used to update only the tags for a cluster. Use PUT operation to update other properties.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param parameters The parameters supplied to patch the cluster. (required)
     * @return OperationalizationCluster
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The update completed successfully. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public OperationalizationCluster operationalizationClustersUpdate(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, OperationalizationClusterUpdateParameters parameters) throws ApiException {
        ApiResponse<OperationalizationCluster> localVarResp = operationalizationClustersUpdateWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, clusterName, parameters);
        return localVarResp.getData();
    }

    /**
     * 
     * The PATCH operation can be used to update only the tags for a cluster. Use PUT operation to update other properties.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param parameters The parameters supplied to patch the cluster. (required)
     * @return ApiResponse&lt;OperationalizationCluster&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The update completed successfully. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OperationalizationCluster> operationalizationClustersUpdateWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, OperationalizationClusterUpdateParameters parameters) throws ApiException {
        okhttp3.Call localVarCall = operationalizationClustersUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, parameters, null);
        Type localVarReturnType = new TypeToken<OperationalizationCluster>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * The PATCH operation can be used to update only the tags for a cluster. Use PUT operation to update other properties.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param parameters The parameters supplied to patch the cluster. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The update completed successfully. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersUpdateAsync(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, OperationalizationClusterUpdateParameters parameters, final ApiCallback<OperationalizationCluster> _callback) throws ApiException {

        okhttp3.Call localVarCall = operationalizationClustersUpdateValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, parameters, _callback);
        Type localVarReturnType = new TypeToken<OperationalizationCluster>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for operationalizationClustersUpdateSystemServices
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request completed successfully. Check the response body for update details. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> The request was accepted and will complete asynchronously. The know the progress of the async operation do a GET call on the URI in the Location header. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations. </td><td>  * Location - URI of the async operation. <br>  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersUpdateSystemServicesCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/updateSystemServices"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "clusterName" + "}", localVarApiClient.escapeString(clusterName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call operationalizationClustersUpdateSystemServicesValidateBeforeCall(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling operationalizationClustersUpdateSystemServices(Async)");
        }

        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling operationalizationClustersUpdateSystemServices(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersUpdateSystemServices(Async)");
        }

        // verify the required parameter 'clusterName' is set
        if (clusterName == null) {
            throw new ApiException("Missing the required parameter 'clusterName' when calling operationalizationClustersUpdateSystemServices(Async)");
        }

        return operationalizationClustersUpdateSystemServicesCall(apiVersion, subscriptionId, resourceGroupName, clusterName, _callback);

    }

    /**
     * 
     * Updates system services in a cluster.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @return UpdateSystemServicesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request completed successfully. Check the response body for update details. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> The request was accepted and will complete asynchronously. The know the progress of the async operation do a GET call on the URI in the Location header. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations. </td><td>  * Location - URI of the async operation. <br>  </td></tr>
     </table>
     */
    public UpdateSystemServicesResponse operationalizationClustersUpdateSystemServices(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName) throws ApiException {
        ApiResponse<UpdateSystemServicesResponse> localVarResp = operationalizationClustersUpdateSystemServicesWithHttpInfo(apiVersion, subscriptionId, resourceGroupName, clusterName);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates system services in a cluster.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @return ApiResponse&lt;UpdateSystemServicesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request completed successfully. Check the response body for update details. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> The request was accepted and will complete asynchronously. The know the progress of the async operation do a GET call on the URI in the Location header. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations. </td><td>  * Location - URI of the async operation. <br>  </td></tr>
     </table>
     */
    public ApiResponse<UpdateSystemServicesResponse> operationalizationClustersUpdateSystemServicesWithHttpInfo(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName) throws ApiException {
        okhttp3.Call localVarCall = operationalizationClustersUpdateSystemServicesValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, null);
        Type localVarReturnType = new TypeToken<UpdateSystemServicesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates system services in a cluster.
     * @param apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use. (required)
     * @param subscriptionId The Azure subscription ID. (required)
     * @param resourceGroupName Name of the resource group in which the cluster is located. (required)
     * @param clusterName The name of the cluster. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The request completed successfully. Check the response body for update details. </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> The request was accepted and will complete asynchronously. The know the progress of the async operation do a GET call on the URI in the Location header. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations. </td><td>  * Location - URI of the async operation. <br>  </td></tr>
     </table>
     */
    public okhttp3.Call operationalizationClustersUpdateSystemServicesAsync(String apiVersion, String subscriptionId, String resourceGroupName, String clusterName, final ApiCallback<UpdateSystemServicesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = operationalizationClustersUpdateSystemServicesValidateBeforeCall(apiVersion, subscriptionId, resourceGroupName, clusterName, _callback);
        Type localVarReturnType = new TypeToken<UpdateSystemServicesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
