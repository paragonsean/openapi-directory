/**
 * Machine Learning Compute Management Client
 * These APIs allow end users to operate on Azure Machine Learning Compute resources. They support the following operations:<ul><li>Create or update a cluster</li><li>Get a cluster</li><li>Patch a cluster</li><li>Delete a cluster</li><li>Get keys for a cluster</li><li>Check if updates are available for system services in a cluster</li><li>Update system services in a cluster</li><li>Get all clusters in a resource group</li><li>Get all clusters in a subscription</li></ul>
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAutoScaleConfiguration.h
 *
 * AutoScale configuration properties.
 */

#ifndef OAIAutoScaleConfiguration_H
#define OAIAutoScaleConfiguration_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAutoScaleConfiguration : public OAIObject {
public:
    OAIAutoScaleConfiguration();
    OAIAutoScaleConfiguration(QString json);
    ~OAIAutoScaleConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxReplicas() const;
    void setMaxReplicas(const qint32 &max_replicas);
    bool is_max_replicas_Set() const;
    bool is_max_replicas_Valid() const;

    qint32 getMinReplicas() const;
    void setMinReplicas(const qint32 &min_replicas);
    bool is_min_replicas_Set() const;
    bool is_min_replicas_Valid() const;

    qint32 getRefreshPeriodInSeconds() const;
    void setRefreshPeriodInSeconds(const qint32 &refresh_period_in_seconds);
    bool is_refresh_period_in_seconds_Set() const;
    bool is_refresh_period_in_seconds_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    double getTargetUtilization() const;
    void setTargetUtilization(const double &target_utilization);
    bool is_target_utilization_Set() const;
    bool is_target_utilization_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_replicas;
    bool m_max_replicas_isSet;
    bool m_max_replicas_isValid;

    qint32 m_min_replicas;
    bool m_min_replicas_isSet;
    bool m_min_replicas_isValid;

    qint32 m_refresh_period_in_seconds;
    bool m_refresh_period_in_seconds_isSet;
    bool m_refresh_period_in_seconds_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    double m_target_utilization;
    bool m_target_utilization_isSet;
    bool m_target_utilization_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAutoScaleConfiguration)

#endif // OAIAutoScaleConfiguration_H
