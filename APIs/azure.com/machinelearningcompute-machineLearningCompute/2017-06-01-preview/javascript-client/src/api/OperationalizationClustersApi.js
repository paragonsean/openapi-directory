/**
 * Azure Machine Learning Compute Management Client
 * These APIs allow end users to operate on Azure Machine Learning Compute resources. They support the following operations:<ul><li>Create or update a cluster</li><li>Get a cluster</li><li>Patch a cluster</li><li>Delete a cluster</li><li>Get keys for a cluster</li><li>Check if updates are available for system services in a cluster</li><li>Update system services in a cluster</li><li>Get all clusters in a resource group</li><li>Get all clusters in a subscription</li></ul>
 *
 * The version of the OpenAPI document: 2017-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CheckUpdateResponse from '../model/CheckUpdateResponse';
import ErrorResponse from '../model/ErrorResponse';
import OperationalizationCluster from '../model/OperationalizationCluster';
import OperationalizationClusterCredentials from '../model/OperationalizationClusterCredentials';
import OperationalizationClusterUpdateParameters from '../model/OperationalizationClusterUpdateParameters';
import PaginatedOperationalizationClustersList from '../model/PaginatedOperationalizationClustersList';
import UpdateSystemResponse from '../model/UpdateSystemResponse';

/**
* OperationalizationClusters service.
* @module api/OperationalizationClustersApi
* @version 2017-06-01-preview
*/
export default class OperationalizationClustersApi {

    /**
    * Constructs a new OperationalizationClustersApi. 
    * @alias module:api/OperationalizationClustersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the operationalizationClustersCheckUpdate operation.
     * @callback module:api/OperationalizationClustersApi~operationalizationClustersCheckUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CheckUpdateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks if updates are available for system services in the cluster
     * @param {String} apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} resourceGroupName Name of the resource group in which the cluster is located.
     * @param {String} clusterName The name of the cluster.
     * @param {module:api/OperationalizationClustersApi~operationalizationClustersCheckUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CheckUpdateResponse}
     */
    operationalizationClustersCheckUpdate(apiVersion, subscriptionId, resourceGroupName, clusterName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationalizationClustersCheckUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling operationalizationClustersCheckUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersCheckUpdate");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling operationalizationClustersCheckUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CheckUpdateResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/checkUpdate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the operationalizationClustersCreateOrUpdate operation.
     * @callback module:api/OperationalizationClustersApi~operationalizationClustersCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationalizationCluster} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update an operationalization cluster.
     * @param {String} apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} resourceGroupName Name of the resource group in which the cluster is located.
     * @param {String} clusterName The name of the cluster.
     * @param {module:model/OperationalizationCluster} parameters Parameters supplied to create or update an Operationalization cluster.
     * @param {module:api/OperationalizationClustersApi~operationalizationClustersCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationalizationCluster}
     */
    operationalizationClustersCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, clusterName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationalizationClustersCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling operationalizationClustersCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersCreateOrUpdate");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling operationalizationClustersCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling operationalizationClustersCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationalizationCluster;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the operationalizationClustersDelete operation.
     * @callback module:api/OperationalizationClustersApi~operationalizationClustersDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified cluster.
     * @param {String} apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} resourceGroupName Name of the resource group in which the cluster is located.
     * @param {String} clusterName The name of the cluster.
     * @param {module:api/OperationalizationClustersApi~operationalizationClustersDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    operationalizationClustersDelete(apiVersion, subscriptionId, resourceGroupName, clusterName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationalizationClustersDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling operationalizationClustersDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersDelete");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling operationalizationClustersDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the operationalizationClustersGet operation.
     * @callback module:api/OperationalizationClustersApi~operationalizationClustersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationalizationCluster} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the operationalization cluster resource view. Note that the credentials are not returned by this call. Call ListKeys to get them.
     * @param {String} apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} resourceGroupName Name of the resource group in which the cluster is located.
     * @param {String} clusterName The name of the cluster.
     * @param {module:api/OperationalizationClustersApi~operationalizationClustersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationalizationCluster}
     */
    operationalizationClustersGet(apiVersion, subscriptionId, resourceGroupName, clusterName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationalizationClustersGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling operationalizationClustersGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersGet");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling operationalizationClustersGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationalizationCluster;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the operationalizationClustersListByResourceGroup operation.
     * @callback module:api/OperationalizationClustersApi~operationalizationClustersListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedOperationalizationClustersList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the clusters in the specified resource group.
     * @param {String} apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} resourceGroupName Name of the resource group in which the cluster is located.
     * @param {Object} opts Optional parameters
     * @param {String} [skiptoken] Continuation token for pagination.
     * @param {module:api/OperationalizationClustersApi~operationalizationClustersListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedOperationalizationClustersList}
     */
    operationalizationClustersListByResourceGroup(apiVersion, subscriptionId, resourceGroupName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationalizationClustersListByResourceGroup");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling operationalizationClustersListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$skiptoken': opts['skiptoken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedOperationalizationClustersList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the operationalizationClustersListBySubscriptionId operation.
     * @callback module:api/OperationalizationClustersApi~operationalizationClustersListBySubscriptionIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedOperationalizationClustersList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the operationalization clusters in the specified subscription.
     * @param {String} apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {Object} opts Optional parameters
     * @param {String} [skiptoken] Continuation token for pagination.
     * @param {module:api/OperationalizationClustersApi~operationalizationClustersListBySubscriptionIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedOperationalizationClustersList}
     */
    operationalizationClustersListBySubscriptionId(apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationalizationClustersListBySubscriptionId");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling operationalizationClustersListBySubscriptionId");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion,
        '$skiptoken': opts['skiptoken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedOperationalizationClustersList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningCompute/operationalizationClusters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the operationalizationClustersListKeys operation.
     * @callback module:api/OperationalizationClustersApi~operationalizationClustersListKeysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationalizationClusterCredentials} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the credentials for the specified cluster such as Storage, ACR and ACS credentials. This is a long running operation because it fetches keys from dependencies.
     * @param {String} apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} resourceGroupName Name of the resource group in which the cluster is located.
     * @param {String} clusterName The name of the cluster.
     * @param {module:api/OperationalizationClustersApi~operationalizationClustersListKeysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationalizationClusterCredentials}
     */
    operationalizationClustersListKeys(apiVersion, subscriptionId, resourceGroupName, clusterName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationalizationClustersListKeys");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling operationalizationClustersListKeys");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersListKeys");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling operationalizationClustersListKeys");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OperationalizationClusterCredentials;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/listKeys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the operationalizationClustersUpdate operation.
     * @callback module:api/OperationalizationClustersApi~operationalizationClustersUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationalizationCluster} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The PATCH operation can be used to update only the tags for a cluster. Use PUT operation to update other properties.
     * @param {String} apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} resourceGroupName Name of the resource group in which the cluster is located.
     * @param {String} clusterName The name of the cluster.
     * @param {module:model/OperationalizationClusterUpdateParameters} parameters The parameters supplied to patch the cluster.
     * @param {module:api/OperationalizationClustersApi~operationalizationClustersUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationalizationCluster}
     */
    operationalizationClustersUpdate(apiVersion, subscriptionId, resourceGroupName, clusterName, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationalizationClustersUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling operationalizationClustersUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersUpdate");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling operationalizationClustersUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling operationalizationClustersUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationalizationCluster;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the operationalizationClustersUpdateSystem operation.
     * @callback module:api/OperationalizationClustersApi~operationalizationClustersUpdateSystemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateSystemResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates system services in a cluster.
     * @param {String} apiVersion The version of the Microsoft.MachineLearningCompute resource provider API to use.
     * @param {String} subscriptionId The Azure subscription ID.
     * @param {String} resourceGroupName Name of the resource group in which the cluster is located.
     * @param {String} clusterName The name of the cluster.
     * @param {module:api/OperationalizationClustersApi~operationalizationClustersUpdateSystemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateSystemResponse}
     */
    operationalizationClustersUpdateSystem(apiVersion, subscriptionId, resourceGroupName, clusterName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling operationalizationClustersUpdateSystem");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling operationalizationClustersUpdateSystem");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling operationalizationClustersUpdateSystem");
      }
      // verify the required parameter 'clusterName' is set
      if (clusterName === undefined || clusterName === null) {
        throw new Error("Missing the required parameter 'clusterName' when calling operationalizationClustersUpdateSystem");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'clusterName': clusterName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UpdateSystemResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/updateSystem', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
