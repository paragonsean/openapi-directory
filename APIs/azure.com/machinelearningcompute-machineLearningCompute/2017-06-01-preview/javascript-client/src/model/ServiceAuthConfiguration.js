/**
 * Azure Machine Learning Compute Management Client
 * These APIs allow end users to operate on Azure Machine Learning Compute resources. They support the following operations:<ul><li>Create or update a cluster</li><li>Get a cluster</li><li>Patch a cluster</li><li>Delete a cluster</li><li>Get keys for a cluster</li><li>Check if updates are available for system services in a cluster</li><li>Update system services in a cluster</li><li>Get all clusters in a resource group</li><li>Get all clusters in a subscription</li></ul>
 *
 * The version of the OpenAPI document: 2017-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceAuthConfiguration model module.
 * @module model/ServiceAuthConfiguration
 * @version 2017-06-01-preview
 */
class ServiceAuthConfiguration {
    /**
     * Constructs a new <code>ServiceAuthConfiguration</code>.
     * Global service auth configuration properties. These are the data-plane authorization keys and are used if a service doesn&#39;t define it&#39;s own.
     * @alias module:model/ServiceAuthConfiguration
     * @param primaryAuthKeyHash {String} The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
     * @param secondaryAuthKeyHash {String} The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
     */
    constructor(primaryAuthKeyHash, secondaryAuthKeyHash) { 
        
        ServiceAuthConfiguration.initialize(this, primaryAuthKeyHash, secondaryAuthKeyHash);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, primaryAuthKeyHash, secondaryAuthKeyHash) { 
        obj['primaryAuthKeyHash'] = primaryAuthKeyHash;
        obj['secondaryAuthKeyHash'] = secondaryAuthKeyHash;
    }

    /**
     * Constructs a <code>ServiceAuthConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceAuthConfiguration} obj Optional instance to populate.
     * @return {module:model/ServiceAuthConfiguration} The populated <code>ServiceAuthConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceAuthConfiguration();

            if (data.hasOwnProperty('primaryAuthKeyHash')) {
                obj['primaryAuthKeyHash'] = ApiClient.convertToType(data['primaryAuthKeyHash'], 'String');
            }
            if (data.hasOwnProperty('secondaryAuthKeyHash')) {
                obj['secondaryAuthKeyHash'] = ApiClient.convertToType(data['secondaryAuthKeyHash'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceAuthConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceAuthConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ServiceAuthConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['primaryAuthKeyHash'] && !(typeof data['primaryAuthKeyHash'] === 'string' || data['primaryAuthKeyHash'] instanceof String)) {
            throw new Error("Expected the field `primaryAuthKeyHash` to be a primitive type in the JSON string but got " + data['primaryAuthKeyHash']);
        }
        // ensure the json data is a string
        if (data['secondaryAuthKeyHash'] && !(typeof data['secondaryAuthKeyHash'] === 'string' || data['secondaryAuthKeyHash'] instanceof String)) {
            throw new Error("Expected the field `secondaryAuthKeyHash` to be a primitive type in the JSON string but got " + data['secondaryAuthKeyHash']);
        }

        return true;
    }


}

ServiceAuthConfiguration.RequiredProperties = ["primaryAuthKeyHash", "secondaryAuthKeyHash"];

/**
 * The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
 * @member {String} primaryAuthKeyHash
 */
ServiceAuthConfiguration.prototype['primaryAuthKeyHash'] = undefined;

/**
 * The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
 * @member {String} secondaryAuthKeyHash
 */
ServiceAuthConfiguration.prototype['secondaryAuthKeyHash'] = undefined;






export default ServiceAuthConfiguration;

