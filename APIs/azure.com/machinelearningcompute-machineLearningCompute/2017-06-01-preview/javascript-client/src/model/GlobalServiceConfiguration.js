/**
 * Azure Machine Learning Compute Management Client
 * These APIs allow end users to operate on Azure Machine Learning Compute resources. They support the following operations:<ul><li>Create or update a cluster</li><li>Get a cluster</li><li>Patch a cluster</li><li>Delete a cluster</li><li>Get keys for a cluster</li><li>Check if updates are available for system services in a cluster</li><li>Update system services in a cluster</li><li>Get all clusters in a resource group</li><li>Get all clusters in a subscription</li></ul>
 *
 * The version of the OpenAPI document: 2017-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoScaleConfiguration from './AutoScaleConfiguration';
import ServiceAuthConfiguration from './ServiceAuthConfiguration';
import SslConfiguration from './SslConfiguration';

/**
 * The GlobalServiceConfiguration model module.
 * @module model/GlobalServiceConfiguration
 * @version 2017-06-01-preview
 */
class GlobalServiceConfiguration {
    /**
     * Constructs a new <code>GlobalServiceConfiguration</code>.
     * Global configuration for services in the cluster.
     * @alias module:model/GlobalServiceConfiguration
     * @extends Object
     */
    constructor() { 
        
        GlobalServiceConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GlobalServiceConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GlobalServiceConfiguration} obj Optional instance to populate.
     * @return {module:model/GlobalServiceConfiguration} The populated <code>GlobalServiceConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GlobalServiceConfiguration();

            ApiClient.constructFromObject(data, obj, 'String');
            

            if (data.hasOwnProperty('autoScale')) {
                obj['autoScale'] = AutoScaleConfiguration.constructFromObject(data['autoScale']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('serviceAuth')) {
                obj['serviceAuth'] = ServiceAuthConfiguration.constructFromObject(data['serviceAuth']);
            }
            if (data.hasOwnProperty('ssl')) {
                obj['ssl'] = SslConfiguration.constructFromObject(data['ssl']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GlobalServiceConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GlobalServiceConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `autoScale`
        if (data['autoScale']) { // data not null
          AutoScaleConfiguration.validateJSON(data['autoScale']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // validate the optional field `serviceAuth`
        if (data['serviceAuth']) { // data not null
          ServiceAuthConfiguration.validateJSON(data['serviceAuth']);
        }
        // validate the optional field `ssl`
        if (data['ssl']) { // data not null
          SslConfiguration.validateJSON(data['ssl']);
        }

        return true;
    }


}



/**
 * @member {module:model/AutoScaleConfiguration} autoScale
 */
GlobalServiceConfiguration.prototype['autoScale'] = undefined;

/**
 * The configuration ETag for updates.
 * @member {String} etag
 */
GlobalServiceConfiguration.prototype['etag'] = undefined;

/**
 * @member {module:model/ServiceAuthConfiguration} serviceAuth
 */
GlobalServiceConfiguration.prototype['serviceAuth'] = undefined;

/**
 * @member {module:model/SslConfiguration} ssl
 */
GlobalServiceConfiguration.prototype['ssl'] = undefined;






export default GlobalServiceConfiguration;

