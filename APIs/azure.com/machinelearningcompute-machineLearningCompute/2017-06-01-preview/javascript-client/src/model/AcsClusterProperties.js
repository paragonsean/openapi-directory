/**
 * Azure Machine Learning Compute Management Client
 * These APIs allow end users to operate on Azure Machine Learning Compute resources. They support the following operations:<ul><li>Create or update a cluster</li><li>Get a cluster</li><li>Patch a cluster</li><li>Delete a cluster</li><li>Get keys for a cluster</li><li>Check if updates are available for system services in a cluster</li><li>Update system services in a cluster</li><li>Get all clusters in a resource group</li><li>Get all clusters in a subscription</li></ul>
 *
 * The version of the OpenAPI document: 2017-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KubernetesClusterProperties from './KubernetesClusterProperties';
import SystemServices from './SystemServices';

/**
 * The AcsClusterProperties model module.
 * @module model/AcsClusterProperties
 * @version 2017-06-01-preview
 */
class AcsClusterProperties {
    /**
     * Constructs a new <code>AcsClusterProperties</code>.
     * Information about the container service backing the cluster
     * @alias module:model/AcsClusterProperties
     * @param orchestratorProperties {module:model/KubernetesClusterProperties} 
     * @param orchestratorType {module:model/AcsClusterProperties.OrchestratorTypeEnum} Type of orchestrator. It cannot be changed once the cluster is created.
     */
    constructor(orchestratorProperties, orchestratorType) { 
        
        AcsClusterProperties.initialize(this, orchestratorProperties, orchestratorType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, orchestratorProperties, orchestratorType) { 
        obj['agentVmSize'] = 'Standard_D2_v2';
        obj['orchestratorProperties'] = orchestratorProperties;
        obj['orchestratorType'] = orchestratorType;
    }

    /**
     * Constructs a <code>AcsClusterProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AcsClusterProperties} obj Optional instance to populate.
     * @return {module:model/AcsClusterProperties} The populated <code>AcsClusterProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AcsClusterProperties();

            if (data.hasOwnProperty('agentCount')) {
                obj['agentCount'] = ApiClient.convertToType(data['agentCount'], 'Number');
            }
            if (data.hasOwnProperty('agentVmSize')) {
                obj['agentVmSize'] = ApiClient.convertToType(data['agentVmSize'], 'String');
            }
            if (data.hasOwnProperty('clusterFqdn')) {
                obj['clusterFqdn'] = ApiClient.convertToType(data['clusterFqdn'], 'String');
            }
            if (data.hasOwnProperty('orchestratorProperties')) {
                obj['orchestratorProperties'] = KubernetesClusterProperties.constructFromObject(data['orchestratorProperties']);
            }
            if (data.hasOwnProperty('orchestratorType')) {
                obj['orchestratorType'] = ApiClient.convertToType(data['orchestratorType'], 'String');
            }
            if (data.hasOwnProperty('systemServices')) {
                obj['systemServices'] = ApiClient.convertToType(data['systemServices'], [SystemServices]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AcsClusterProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AcsClusterProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AcsClusterProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['agentVmSize'] && !(typeof data['agentVmSize'] === 'string' || data['agentVmSize'] instanceof String)) {
            throw new Error("Expected the field `agentVmSize` to be a primitive type in the JSON string but got " + data['agentVmSize']);
        }
        // ensure the json data is a string
        if (data['clusterFqdn'] && !(typeof data['clusterFqdn'] === 'string' || data['clusterFqdn'] instanceof String)) {
            throw new Error("Expected the field `clusterFqdn` to be a primitive type in the JSON string but got " + data['clusterFqdn']);
        }
        // validate the optional field `orchestratorProperties`
        if (data['orchestratorProperties']) { // data not null
          KubernetesClusterProperties.validateJSON(data['orchestratorProperties']);
        }
        // ensure the json data is a string
        if (data['orchestratorType'] && !(typeof data['orchestratorType'] === 'string' || data['orchestratorType'] instanceof String)) {
            throw new Error("Expected the field `orchestratorType` to be a primitive type in the JSON string but got " + data['orchestratorType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['systemServices'])) {
            throw new Error("Expected the field `systemServices` to be an array in the JSON data but got " + data['systemServices']);
        }

        return true;
    }


}

AcsClusterProperties.RequiredProperties = ["orchestratorProperties", "orchestratorType"];

/**
 * The number of agent nodes in the Container Service. This can be changed to scale the cluster.
 * @member {Number} agentCount
 */
AcsClusterProperties.prototype['agentCount'] = undefined;

/**
 * The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created.
 * @member {module:model/AcsClusterProperties.AgentVmSizeEnum} agentVmSize
 * @default 'Standard_D2_v2'
 */
AcsClusterProperties.prototype['agentVmSize'] = 'Standard_D2_v2';

/**
 * The FQDN of the cluster. 
 * @member {String} clusterFqdn
 */
AcsClusterProperties.prototype['clusterFqdn'] = undefined;

/**
 * @member {module:model/KubernetesClusterProperties} orchestratorProperties
 */
AcsClusterProperties.prototype['orchestratorProperties'] = undefined;

/**
 * Type of orchestrator. It cannot be changed once the cluster is created.
 * @member {module:model/AcsClusterProperties.OrchestratorTypeEnum} orchestratorType
 */
AcsClusterProperties.prototype['orchestratorType'] = undefined;

/**
 * The system services deployed to the cluster
 * @member {Array.<module:model/SystemServices>} systemServices
 */
AcsClusterProperties.prototype['systemServices'] = undefined;





/**
 * Allowed values for the <code>agentVmSize</code> property.
 * @enum {String}
 * @readonly
 */
AcsClusterProperties['AgentVmSizeEnum'] = {

    /**
     * value: "Standard_A0"
     * @const
     */
    "A0": "Standard_A0",

    /**
     * value: "Standard_A1"
     * @const
     */
    "A1": "Standard_A1",

    /**
     * value: "Standard_A2"
     * @const
     */
    "A2": "Standard_A2",

    /**
     * value: "Standard_A3"
     * @const
     */
    "A3": "Standard_A3",

    /**
     * value: "Standard_A4"
     * @const
     */
    "A4": "Standard_A4",

    /**
     * value: "Standard_A5"
     * @const
     */
    "A5": "Standard_A5",

    /**
     * value: "Standard_A6"
     * @const
     */
    "A6": "Standard_A6",

    /**
     * value: "Standard_A7"
     * @const
     */
    "A7": "Standard_A7",

    /**
     * value: "Standard_A8"
     * @const
     */
    "A8": "Standard_A8",

    /**
     * value: "Standard_A9"
     * @const
     */
    "A9": "Standard_A9",

    /**
     * value: "Standard_A10"
     * @const
     */
    "A10": "Standard_A10",

    /**
     * value: "Standard_A11"
     * @const
     */
    "A11": "Standard_A11",

    /**
     * value: "Standard_D1"
     * @const
     */
    "D1": "Standard_D1",

    /**
     * value: "Standard_D2"
     * @const
     */
    "D2": "Standard_D2",

    /**
     * value: "Standard_D3"
     * @const
     */
    "D3": "Standard_D3",

    /**
     * value: "Standard_D4"
     * @const
     */
    "D4": "Standard_D4",

    /**
     * value: "Standard_D11"
     * @const
     */
    "D11": "Standard_D11",

    /**
     * value: "Standard_D12"
     * @const
     */
    "D12": "Standard_D12",

    /**
     * value: "Standard_D13"
     * @const
     */
    "D13": "Standard_D13",

    /**
     * value: "Standard_D14"
     * @const
     */
    "D14": "Standard_D14",

    /**
     * value: "Standard_D1_v2"
     * @const
     */
    "D1_v2": "Standard_D1_v2",

    /**
     * value: "Standard_D2_v2"
     * @const
     */
    "D2_v2": "Standard_D2_v2",

    /**
     * value: "Standard_D3_v2"
     * @const
     */
    "D3_v2": "Standard_D3_v2",

    /**
     * value: "Standard_D4_v2"
     * @const
     */
    "D4_v2": "Standard_D4_v2",

    /**
     * value: "Standard_D5_v2"
     * @const
     */
    "D5_v2": "Standard_D5_v2",

    /**
     * value: "Standard_D11_v2"
     * @const
     */
    "D11_v2": "Standard_D11_v2",

    /**
     * value: "Standard_D12_v2"
     * @const
     */
    "D12_v2": "Standard_D12_v2",

    /**
     * value: "Standard_D13_v2"
     * @const
     */
    "D13_v2": "Standard_D13_v2",

    /**
     * value: "Standard_D14_v2"
     * @const
     */
    "D14_v2": "Standard_D14_v2",

    /**
     * value: "Standard_G1"
     * @const
     */
    "G1": "Standard_G1",

    /**
     * value: "Standard_G2"
     * @const
     */
    "G2": "Standard_G2",

    /**
     * value: "Standard_G3"
     * @const
     */
    "G3": "Standard_G3",

    /**
     * value: "Standard_G4"
     * @const
     */
    "G4": "Standard_G4",

    /**
     * value: "Standard_G5"
     * @const
     */
    "G5": "Standard_G5",

    /**
     * value: "Standard_DS1"
     * @const
     */
    "DS1": "Standard_DS1",

    /**
     * value: "Standard_DS2"
     * @const
     */
    "DS2": "Standard_DS2",

    /**
     * value: "Standard_DS3"
     * @const
     */
    "DS3": "Standard_DS3",

    /**
     * value: "Standard_DS4"
     * @const
     */
    "DS4": "Standard_DS4",

    /**
     * value: "Standard_DS11"
     * @const
     */
    "DS11": "Standard_DS11",

    /**
     * value: "Standard_DS12"
     * @const
     */
    "DS12": "Standard_DS12",

    /**
     * value: "Standard_DS13"
     * @const
     */
    "DS13": "Standard_DS13",

    /**
     * value: "Standard_DS14"
     * @const
     */
    "DS14": "Standard_DS14",

    /**
     * value: "Standard_GS1"
     * @const
     */
    "GS1": "Standard_GS1",

    /**
     * value: "Standard_GS2"
     * @const
     */
    "GS2": "Standard_GS2",

    /**
     * value: "Standard_GS3"
     * @const
     */
    "GS3": "Standard_GS3",

    /**
     * value: "Standard_GS4"
     * @const
     */
    "GS4": "Standard_GS4",

    /**
     * value: "Standard_GS5"
     * @const
     */
    "GS5": "Standard_GS5"
};


/**
 * Allowed values for the <code>orchestratorType</code> property.
 * @enum {String}
 * @readonly
 */
AcsClusterProperties['OrchestratorTypeEnum'] = {

    /**
     * value: "Kubernetes"
     * @const
     */
    "Kubernetes": "Kubernetes"
};



export default AcsClusterProperties;

