/**
 * Azure Machine Learning Compute Management Client
 * These APIs allow end users to operate on Azure Machine Learning Compute resources. They support the following operations:<ul><li>Create or update a cluster</li><li>Get a cluster</li><li>Patch a cluster</li><li>Delete a cluster</li><li>Get keys for a cluster</li><li>Check if updates are available for system services in a cluster</li><li>Update system services in a cluster</li><li>Get all clusters in a resource group</li><li>Get all clusters in a subscription</li></ul>
 *
 * The version of the OpenAPI document: 2017-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISystemServices.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISystemServices::OAISystemServices(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISystemServices::OAISystemServices() {
    this->initializeModel();
}

OAISystemServices::~OAISystemServices() {}

void OAISystemServices::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISystemServices::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISystemServices::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Scoring", Qt::CaseInsensitive) == 0) {
        m_value = eOAISystemServices::SCORING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Batch", Qt::CaseInsensitive) == 0) {
        m_value = eOAISystemServices::BATCH;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISystemServices::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISystemServices::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISystemServices::SCORING:
            val = "Scoring";
            break;
        case eOAISystemServices::BATCH:
            val = "Batch";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISystemServices::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISystemServices::eOAISystemServices OAISystemServices::getValue() const {
    return m_value;
}

void OAISystemServices::setValue(const OAISystemServices::eOAISystemServices& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISystemServices::isSet() const {
    
    return m_value_isSet;
}

bool OAISystemServices::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
