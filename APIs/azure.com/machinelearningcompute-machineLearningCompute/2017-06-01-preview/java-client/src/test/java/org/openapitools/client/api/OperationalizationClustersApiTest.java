/*
 * Azure Machine Learning Compute Management Client
 * These APIs allow end users to operate on Azure Machine Learning Compute resources. They support the following operations:<ul><li>Create or update a cluster</li><li>Get a cluster</li><li>Patch a cluster</li><li>Delete a cluster</li><li>Get keys for a cluster</li><li>Check if updates are available for system services in a cluster</li><li>Update system services in a cluster</li><li>Get all clusters in a resource group</li><li>Get all clusters in a subscription</li></ul>
 *
 * The version of the OpenAPI document: 2017-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CheckUpdateResponse;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.OperationalizationCluster;
import org.openapitools.client.model.OperationalizationClusterCredentials;
import org.openapitools.client.model.OperationalizationClusterUpdateParameters;
import org.openapitools.client.model.PaginatedOperationalizationClustersList;
import org.openapitools.client.model.UpdateSystemResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OperationalizationClustersApi
 */
@Disabled
public class OperationalizationClustersApiTest {

    private final OperationalizationClustersApi api = new OperationalizationClustersApi();

    /**
     * Checks if updates are available for system services in the cluster
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationalizationClustersCheckUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        CheckUpdateResponse response = api.operationalizationClustersCheckUpdate(apiVersion, subscriptionId, resourceGroupName, clusterName);
        // TODO: test validations
    }

    /**
     * Create or update an operationalization cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationalizationClustersCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        OperationalizationCluster parameters = null;
        OperationalizationCluster response = api.operationalizationClustersCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, clusterName, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the specified cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationalizationClustersDeleteTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        api.operationalizationClustersDelete(apiVersion, subscriptionId, resourceGroupName, clusterName);
        // TODO: test validations
    }

    /**
     * Gets the operationalization cluster resource view. Note that the credentials are not returned by this call. Call ListKeys to get them.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationalizationClustersGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        OperationalizationCluster response = api.operationalizationClustersGet(apiVersion, subscriptionId, resourceGroupName, clusterName);
        // TODO: test validations
    }

    /**
     * Gets the clusters in the specified resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationalizationClustersListByResourceGroupTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String $skiptoken = null;
        PaginatedOperationalizationClustersList response = api.operationalizationClustersListByResourceGroup(apiVersion, subscriptionId, resourceGroupName, $skiptoken);
        // TODO: test validations
    }

    /**
     * Gets the operationalization clusters in the specified subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationalizationClustersListBySubscriptionIdTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String $skiptoken = null;
        PaginatedOperationalizationClustersList response = api.operationalizationClustersListBySubscriptionId(apiVersion, subscriptionId, $skiptoken);
        // TODO: test validations
    }

    /**
     * Gets the credentials for the specified cluster such as Storage, ACR and ACS credentials. This is a long running operation because it fetches keys from dependencies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationalizationClustersListKeysTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        OperationalizationClusterCredentials response = api.operationalizationClustersListKeys(apiVersion, subscriptionId, resourceGroupName, clusterName);
        // TODO: test validations
    }

    /**
     * The PATCH operation can be used to update only the tags for a cluster. Use PUT operation to update other properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationalizationClustersUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        OperationalizationClusterUpdateParameters parameters = null;
        OperationalizationCluster response = api.operationalizationClustersUpdate(apiVersion, subscriptionId, resourceGroupName, clusterName, parameters);
        // TODO: test validations
    }

    /**
     * Updates system services in a cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void operationalizationClustersUpdateSystemTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String clusterName = null;
        UpdateSystemResponse response = api.operationalizationClustersUpdateSystem(apiVersion, subscriptionId, resourceGroupName, clusterName);
        // TODO: test validations
    }

}
