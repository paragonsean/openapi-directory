# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_scale_configuration import AutoScaleConfiguration
from openapi_server.models.service_auth_configuration import ServiceAuthConfiguration
from openapi_server.models.ssl_configuration import SslConfiguration
from openapi_server import util


class GlobalServiceConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_scale: AutoScaleConfiguration=None, etag: str=None, service_auth: ServiceAuthConfiguration=None, ssl: SslConfiguration=None):
        """GlobalServiceConfiguration - a model defined in OpenAPI

        :param auto_scale: The auto_scale of this GlobalServiceConfiguration.
        :param etag: The etag of this GlobalServiceConfiguration.
        :param service_auth: The service_auth of this GlobalServiceConfiguration.
        :param ssl: The ssl of this GlobalServiceConfiguration.
        """
        self.openapi_types = {
            'auto_scale': AutoScaleConfiguration,
            'etag': str,
            'service_auth': ServiceAuthConfiguration,
            'ssl': SslConfiguration
        }

        self.attribute_map = {
            'auto_scale': 'autoScale',
            'etag': 'etag',
            'service_auth': 'serviceAuth',
            'ssl': 'ssl'
        }

        self._auto_scale = auto_scale
        self._etag = etag
        self._service_auth = service_auth
        self._ssl = ssl

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlobalServiceConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlobalServiceConfiguration of this GlobalServiceConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_scale(self):
        """Gets the auto_scale of this GlobalServiceConfiguration.


        :return: The auto_scale of this GlobalServiceConfiguration.
        :rtype: AutoScaleConfiguration
        """
        return self._auto_scale

    @auto_scale.setter
    def auto_scale(self, auto_scale):
        """Sets the auto_scale of this GlobalServiceConfiguration.


        :param auto_scale: The auto_scale of this GlobalServiceConfiguration.
        :type auto_scale: AutoScaleConfiguration
        """

        self._auto_scale = auto_scale

    @property
    def etag(self):
        """Gets the etag of this GlobalServiceConfiguration.

        The configuration ETag for updates.

        :return: The etag of this GlobalServiceConfiguration.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GlobalServiceConfiguration.

        The configuration ETag for updates.

        :param etag: The etag of this GlobalServiceConfiguration.
        :type etag: str
        """

        self._etag = etag

    @property
    def service_auth(self):
        """Gets the service_auth of this GlobalServiceConfiguration.


        :return: The service_auth of this GlobalServiceConfiguration.
        :rtype: ServiceAuthConfiguration
        """
        return self._service_auth

    @service_auth.setter
    def service_auth(self, service_auth):
        """Sets the service_auth of this GlobalServiceConfiguration.


        :param service_auth: The service_auth of this GlobalServiceConfiguration.
        :type service_auth: ServiceAuthConfiguration
        """

        self._service_auth = service_auth

    @property
    def ssl(self):
        """Gets the ssl of this GlobalServiceConfiguration.


        :return: The ssl of this GlobalServiceConfiguration.
        :rtype: SslConfiguration
        """
        return self._ssl

    @ssl.setter
    def ssl(self, ssl):
        """Sets the ssl of this GlobalServiceConfiguration.


        :param ssl: The ssl of this GlobalServiceConfiguration.
        :type ssl: SslConfiguration
        """

        self._ssl = ssl
