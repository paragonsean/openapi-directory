# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SslConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cert: str=None, key: str=None, status: str='Enabled'):
        """SslConfiguration - a model defined in OpenAPI

        :param cert: The cert of this SslConfiguration.
        :param key: The key of this SslConfiguration.
        :param status: The status of this SslConfiguration.
        """
        self.openapi_types = {
            'cert': str,
            'key': str,
            'status': str
        }

        self.attribute_map = {
            'cert': 'cert',
            'key': 'key',
            'status': 'status'
        }

        self._cert = cert
        self._key = key
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SslConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SslConfiguration of this SslConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cert(self):
        """Gets the cert of this SslConfiguration.

        The SSL cert data in PEM format encoded as base64 string

        :return: The cert of this SslConfiguration.
        :rtype: str
        """
        return self._cert

    @cert.setter
    def cert(self, cert):
        """Sets the cert of this SslConfiguration.

        The SSL cert data in PEM format encoded as base64 string

        :param cert: The cert of this SslConfiguration.
        :type cert: str
        """

        self._cert = cert

    @property
    def key(self):
        """Gets the key of this SslConfiguration.

        The SSL key data in PEM format encoded as base64 string. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.

        :return: The key of this SslConfiguration.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this SslConfiguration.

        The SSL key data in PEM format encoded as base64 string. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.

        :param key: The key of this SslConfiguration.
        :type key: str
        """

        self._key = key

    @property
    def status(self):
        """Gets the status of this SslConfiguration.

        SSL status. Allowed values are Enabled and Disabled.

        :return: The status of this SslConfiguration.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SslConfiguration.

        SSL status. Allowed values are Enabled and Disabled.

        :param status: The status of this SslConfiguration.
        :type status: str
        """
        allowed_values = ["Enabled", "Disabled"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
