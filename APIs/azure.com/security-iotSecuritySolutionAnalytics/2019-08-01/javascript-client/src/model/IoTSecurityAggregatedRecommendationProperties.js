/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoTSecurityAggregatedRecommendationProperties model module.
 * @module model/IoTSecurityAggregatedRecommendationProperties
 * @version 2019-08-01
 */
class IoTSecurityAggregatedRecommendationProperties {
    /**
     * Constructs a new <code>IoTSecurityAggregatedRecommendationProperties</code>.
     * IoT Security solution aggregated recommendation information
     * @alias module:model/IoTSecurityAggregatedRecommendationProperties
     */
    constructor() { 
        
        IoTSecurityAggregatedRecommendationProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoTSecurityAggregatedRecommendationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoTSecurityAggregatedRecommendationProperties} obj Optional instance to populate.
     * @return {module:model/IoTSecurityAggregatedRecommendationProperties} The populated <code>IoTSecurityAggregatedRecommendationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoTSecurityAggregatedRecommendationProperties();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('detectedBy')) {
                obj['detectedBy'] = ApiClient.convertToType(data['detectedBy'], 'String');
            }
            if (data.hasOwnProperty('healthyDevices')) {
                obj['healthyDevices'] = ApiClient.convertToType(data['healthyDevices'], 'Number');
            }
            if (data.hasOwnProperty('logAnalyticsQuery')) {
                obj['logAnalyticsQuery'] = ApiClient.convertToType(data['logAnalyticsQuery'], 'String');
            }
            if (data.hasOwnProperty('recommendationDisplayName')) {
                obj['recommendationDisplayName'] = ApiClient.convertToType(data['recommendationDisplayName'], 'String');
            }
            if (data.hasOwnProperty('recommendationName')) {
                obj['recommendationName'] = ApiClient.convertToType(data['recommendationName'], 'String');
            }
            if (data.hasOwnProperty('recommendationTypeId')) {
                obj['recommendationTypeId'] = ApiClient.convertToType(data['recommendationTypeId'], 'String');
            }
            if (data.hasOwnProperty('remediationSteps')) {
                obj['remediationSteps'] = ApiClient.convertToType(data['remediationSteps'], 'String');
            }
            if (data.hasOwnProperty('reportedSeverity')) {
                obj['reportedSeverity'] = ApiClient.convertToType(data['reportedSeverity'], 'String');
            }
            if (data.hasOwnProperty('unhealthyDeviceCount')) {
                obj['unhealthyDeviceCount'] = ApiClient.convertToType(data['unhealthyDeviceCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoTSecurityAggregatedRecommendationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoTSecurityAggregatedRecommendationProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['detectedBy'] && !(typeof data['detectedBy'] === 'string' || data['detectedBy'] instanceof String)) {
            throw new Error("Expected the field `detectedBy` to be a primitive type in the JSON string but got " + data['detectedBy']);
        }
        // ensure the json data is a string
        if (data['logAnalyticsQuery'] && !(typeof data['logAnalyticsQuery'] === 'string' || data['logAnalyticsQuery'] instanceof String)) {
            throw new Error("Expected the field `logAnalyticsQuery` to be a primitive type in the JSON string but got " + data['logAnalyticsQuery']);
        }
        // ensure the json data is a string
        if (data['recommendationDisplayName'] && !(typeof data['recommendationDisplayName'] === 'string' || data['recommendationDisplayName'] instanceof String)) {
            throw new Error("Expected the field `recommendationDisplayName` to be a primitive type in the JSON string but got " + data['recommendationDisplayName']);
        }
        // ensure the json data is a string
        if (data['recommendationName'] && !(typeof data['recommendationName'] === 'string' || data['recommendationName'] instanceof String)) {
            throw new Error("Expected the field `recommendationName` to be a primitive type in the JSON string but got " + data['recommendationName']);
        }
        // ensure the json data is a string
        if (data['recommendationTypeId'] && !(typeof data['recommendationTypeId'] === 'string' || data['recommendationTypeId'] instanceof String)) {
            throw new Error("Expected the field `recommendationTypeId` to be a primitive type in the JSON string but got " + data['recommendationTypeId']);
        }
        // ensure the json data is a string
        if (data['remediationSteps'] && !(typeof data['remediationSteps'] === 'string' || data['remediationSteps'] instanceof String)) {
            throw new Error("Expected the field `remediationSteps` to be a primitive type in the JSON string but got " + data['remediationSteps']);
        }
        // ensure the json data is a string
        if (data['reportedSeverity'] && !(typeof data['reportedSeverity'] === 'string' || data['reportedSeverity'] instanceof String)) {
            throw new Error("Expected the field `reportedSeverity` to be a primitive type in the JSON string but got " + data['reportedSeverity']);
        }

        return true;
    }


}



/**
 * Description of the suspected vulnerability and meaning.
 * @member {String} description
 */
IoTSecurityAggregatedRecommendationProperties.prototype['description'] = undefined;

/**
 * Name of the organization that made the recommendation.
 * @member {String} detectedBy
 */
IoTSecurityAggregatedRecommendationProperties.prototype['detectedBy'] = undefined;

/**
 * Number of healthy devices within the IoT Security solution.
 * @member {Number} healthyDevices
 */
IoTSecurityAggregatedRecommendationProperties.prototype['healthyDevices'] = undefined;

/**
 * Log analytics query for getting the list of affected devices/alerts.
 * @member {String} logAnalyticsQuery
 */
IoTSecurityAggregatedRecommendationProperties.prototype['logAnalyticsQuery'] = undefined;

/**
 * Display name of the recommendation type.
 * @member {String} recommendationDisplayName
 */
IoTSecurityAggregatedRecommendationProperties.prototype['recommendationDisplayName'] = undefined;

/**
 * Name of the recommendation.
 * @member {String} recommendationName
 */
IoTSecurityAggregatedRecommendationProperties.prototype['recommendationName'] = undefined;

/**
 * Recommendation-type GUID.
 * @member {String} recommendationTypeId
 */
IoTSecurityAggregatedRecommendationProperties.prototype['recommendationTypeId'] = undefined;

/**
 * Recommended steps for remediation
 * @member {String} remediationSteps
 */
IoTSecurityAggregatedRecommendationProperties.prototype['remediationSteps'] = undefined;

/**
 * Assessed recommendation severity.
 * @member {module:model/IoTSecurityAggregatedRecommendationProperties.ReportedSeverityEnum} reportedSeverity
 */
IoTSecurityAggregatedRecommendationProperties.prototype['reportedSeverity'] = undefined;

/**
 * Number of unhealthy devices within the IoT Security solution.
 * @member {Number} unhealthyDeviceCount
 */
IoTSecurityAggregatedRecommendationProperties.prototype['unhealthyDeviceCount'] = undefined;





/**
 * Allowed values for the <code>reportedSeverity</code> property.
 * @enum {String}
 * @readonly
 */
IoTSecurityAggregatedRecommendationProperties['ReportedSeverityEnum'] = {

    /**
     * value: "Informational"
     * @const
     */
    "Informational": "Informational",

    /**
     * value: "Low"
     * @const
     */
    "Low": "Low",

    /**
     * value: "Medium"
     * @const
     */
    "Medium": "Medium",

    /**
     * value: "High"
     * @const
     */
    "High": "High"
};



export default IoTSecurityAggregatedRecommendationProperties;

