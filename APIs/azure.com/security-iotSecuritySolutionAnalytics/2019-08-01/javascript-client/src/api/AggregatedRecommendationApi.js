/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import IoTSecurityAggregatedRecommendation from '../model/IoTSecurityAggregatedRecommendation';
import IoTSecurityAggregatedRecommendationList from '../model/IoTSecurityAggregatedRecommendationList';
import IotSecuritySolutionAnalyticsListDefaultResponse from '../model/IotSecuritySolutionAnalyticsListDefaultResponse';

/**
* AggregatedRecommendation service.
* @module api/AggregatedRecommendationApi
* @version 2019-08-01
*/
export default class AggregatedRecommendationApi {

    /**
    * Constructs a new AggregatedRecommendationApi. 
    * @alias module:api/AggregatedRecommendationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the iotSecuritySolutionsAnalyticsRecommendationGet operation.
     * @callback module:api/AggregatedRecommendationApi~iotSecuritySolutionsAnalyticsRecommendationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IoTSecurityAggregatedRecommendation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Use this method to get the aggregated security analytics recommendation of yours IoT Security solution. This aggregation is performed by recommendation name.
     * @param {String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} solutionName The name of the IoT Security solution.
     * @param {String} aggregatedRecommendationName Name of the recommendation aggregated for this query.
     * @param {module:api/AggregatedRecommendationApi~iotSecuritySolutionsAnalyticsRecommendationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IoTSecurityAggregatedRecommendation}
     */
    iotSecuritySolutionsAnalyticsRecommendationGet(apiVersion, subscriptionId, resourceGroupName, solutionName, aggregatedRecommendationName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling iotSecuritySolutionsAnalyticsRecommendationGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling iotSecuritySolutionsAnalyticsRecommendationGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling iotSecuritySolutionsAnalyticsRecommendationGet");
      }
      // verify the required parameter 'solutionName' is set
      if (solutionName === undefined || solutionName === null) {
        throw new Error("Missing the required parameter 'solutionName' when calling iotSecuritySolutionsAnalyticsRecommendationGet");
      }
      // verify the required parameter 'aggregatedRecommendationName' is set
      if (aggregatedRecommendationName === undefined || aggregatedRecommendationName === null) {
        throw new Error("Missing the required parameter 'aggregatedRecommendationName' when calling iotSecuritySolutionsAnalyticsRecommendationGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'solutionName': solutionName,
        'aggregatedRecommendationName': aggregatedRecommendationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IoTSecurityAggregatedRecommendation;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/analyticsModels/default/aggregatedRecommendations/{aggregatedRecommendationName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the iotSecuritySolutionsAnalyticsRecommendationList operation.
     * @callback module:api/AggregatedRecommendationApi~iotSecuritySolutionsAnalyticsRecommendationListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IoTSecurityAggregatedRecommendationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Use this method to get the list of aggregated security analytics recommendations of yours IoT Security solution.
     * @param {String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} solutionName The name of the IoT Security solution.
     * @param {Object} opts Optional parameters
     * @param {Number} [top] Number of results to retrieve.
     * @param {module:api/AggregatedRecommendationApi~iotSecuritySolutionsAnalyticsRecommendationListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IoTSecurityAggregatedRecommendationList}
     */
    iotSecuritySolutionsAnalyticsRecommendationList(apiVersion, subscriptionId, resourceGroupName, solutionName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling iotSecuritySolutionsAnalyticsRecommendationList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling iotSecuritySolutionsAnalyticsRecommendationList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling iotSecuritySolutionsAnalyticsRecommendationList");
      }
      // verify the required parameter 'solutionName' is set
      if (solutionName === undefined || solutionName === null) {
        throw new Error("Missing the required parameter 'solutionName' when calling iotSecuritySolutionsAnalyticsRecommendationList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'solutionName': solutionName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$top': opts['top']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IoTSecurityAggregatedRecommendationList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/analyticsModels/default/aggregatedRecommendations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
