/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import IoTSecuritySolutionAnalyticsModel from '../model/IoTSecuritySolutionAnalyticsModel';
import IoTSecuritySolutionAnalyticsModelList from '../model/IoTSecuritySolutionAnalyticsModelList';
import IotSecuritySolutionAnalyticsListDefaultResponse from '../model/IotSecuritySolutionAnalyticsListDefaultResponse';

/**
* IoTSecuritySolutionAnalytics service.
* @module api/IoTSecuritySolutionAnalyticsApi
* @version 2019-08-01
*/
export default class IoTSecuritySolutionAnalyticsApi {

    /**
    * Constructs a new IoTSecuritySolutionAnalyticsApi. 
    * @alias module:api/IoTSecuritySolutionAnalyticsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the iotSecuritySolutionAnalyticsGet operation.
     * @callback module:api/IoTSecuritySolutionAnalyticsApi~iotSecuritySolutionAnalyticsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IoTSecuritySolutionAnalyticsModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Use this method to get IoT Security Analytics metrics.
     * @param {String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} solutionName The name of the IoT Security solution.
     * @param {module:api/IoTSecuritySolutionAnalyticsApi~iotSecuritySolutionAnalyticsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IoTSecuritySolutionAnalyticsModel}
     */
    iotSecuritySolutionAnalyticsGet(apiVersion, subscriptionId, resourceGroupName, solutionName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling iotSecuritySolutionAnalyticsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling iotSecuritySolutionAnalyticsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling iotSecuritySolutionAnalyticsGet");
      }
      // verify the required parameter 'solutionName' is set
      if (solutionName === undefined || solutionName === null) {
        throw new Error("Missing the required parameter 'solutionName' when calling iotSecuritySolutionAnalyticsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'solutionName': solutionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IoTSecuritySolutionAnalyticsModel;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/analyticsModels/default', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the iotSecuritySolutionAnalyticsList operation.
     * @callback module:api/IoTSecuritySolutionAnalyticsApi~iotSecuritySolutionAnalyticsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IoTSecuritySolutionAnalyticsModelList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Use this method to get IoT security Analytics metrics in an array.
     * @param {String} apiVersion API version for the operation
     * @param {String} subscriptionId Azure subscription ID
     * @param {String} resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.
     * @param {String} solutionName The name of the IoT Security solution.
     * @param {module:api/IoTSecuritySolutionAnalyticsApi~iotSecuritySolutionAnalyticsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IoTSecuritySolutionAnalyticsModelList}
     */
    iotSecuritySolutionAnalyticsList(apiVersion, subscriptionId, resourceGroupName, solutionName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling iotSecuritySolutionAnalyticsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling iotSecuritySolutionAnalyticsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling iotSecuritySolutionAnalyticsList");
      }
      // verify the required parameter 'solutionName' is set
      if (solutionName === undefined || solutionName === null) {
        throw new Error("Missing the required parameter 'solutionName' when calling iotSecuritySolutionAnalyticsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'solutionName': solutionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IoTSecuritySolutionAnalyticsModelList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/analyticsModels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
