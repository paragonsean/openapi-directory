/*
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2019-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IoTSecurityAlertedDevice;
import org.openapitools.client.model.IoTSecurityDeviceAlert;
import org.openapitools.client.model.IoTSecurityDeviceRecommendation;
import org.openapitools.client.model.IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsInner;
import org.openapitools.client.model.IoTSeverityMetrics;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Security analytics properties of your IoT Security solution
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:47:19.524022-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IoTSecuritySolutionAnalyticsModelProperties {
  public static final String SERIALIZED_NAME_DEVICES_METRICS = "devicesMetrics";
  @SerializedName(SERIALIZED_NAME_DEVICES_METRICS)
  private List<IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsInner> devicesMetrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_METRICS = "metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private IoTSeverityMetrics metrics;

  public static final String SERIALIZED_NAME_MOST_PREVALENT_DEVICE_ALERTS = "mostPrevalentDeviceAlerts";
  @SerializedName(SERIALIZED_NAME_MOST_PREVALENT_DEVICE_ALERTS)
  private List<IoTSecurityDeviceAlert> mostPrevalentDeviceAlerts = new ArrayList<>();

  public static final String SERIALIZED_NAME_MOST_PREVALENT_DEVICE_RECOMMENDATIONS = "mostPrevalentDeviceRecommendations";
  @SerializedName(SERIALIZED_NAME_MOST_PREVALENT_DEVICE_RECOMMENDATIONS)
  private List<IoTSecurityDeviceRecommendation> mostPrevalentDeviceRecommendations = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOP_ALERTED_DEVICES = "topAlertedDevices";
  @SerializedName(SERIALIZED_NAME_TOP_ALERTED_DEVICES)
  private List<IoTSecurityAlertedDevice> topAlertedDevices = new ArrayList<>();

  public static final String SERIALIZED_NAME_UNHEALTHY_DEVICE_COUNT = "unhealthyDeviceCount";
  @SerializedName(SERIALIZED_NAME_UNHEALTHY_DEVICE_COUNT)
  private Integer unhealthyDeviceCount;

  public IoTSecuritySolutionAnalyticsModelProperties() {
  }

  public IoTSecuritySolutionAnalyticsModelProperties(
     List<IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsInner> devicesMetrics, 
     Integer unhealthyDeviceCount
  ) {
    this();
    this.devicesMetrics = devicesMetrics;
    this.unhealthyDeviceCount = unhealthyDeviceCount;
  }

  /**
   * List of device metrics by the aggregation date.
   * @return devicesMetrics
   */
  @javax.annotation.Nullable
  public List<IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsInner> getDevicesMetrics() {
    return devicesMetrics;
  }



  public IoTSecuritySolutionAnalyticsModelProperties metrics(IoTSeverityMetrics metrics) {
    this.metrics = metrics;
    return this;
  }

  /**
   * Get metrics
   * @return metrics
   */
  @javax.annotation.Nullable
  public IoTSeverityMetrics getMetrics() {
    return metrics;
  }

  public void setMetrics(IoTSeverityMetrics metrics) {
    this.metrics = metrics;
  }


  public IoTSecuritySolutionAnalyticsModelProperties mostPrevalentDeviceAlerts(List<IoTSecurityDeviceAlert> mostPrevalentDeviceAlerts) {
    this.mostPrevalentDeviceAlerts = mostPrevalentDeviceAlerts;
    return this;
  }

  public IoTSecuritySolutionAnalyticsModelProperties addMostPrevalentDeviceAlertsItem(IoTSecurityDeviceAlert mostPrevalentDeviceAlertsItem) {
    if (this.mostPrevalentDeviceAlerts == null) {
      this.mostPrevalentDeviceAlerts = new ArrayList<>();
    }
    this.mostPrevalentDeviceAlerts.add(mostPrevalentDeviceAlertsItem);
    return this;
  }

  /**
   * List of alerts with the count of raised alerts
   * @return mostPrevalentDeviceAlerts
   */
  @javax.annotation.Nullable
  public List<IoTSecurityDeviceAlert> getMostPrevalentDeviceAlerts() {
    return mostPrevalentDeviceAlerts;
  }

  public void setMostPrevalentDeviceAlerts(List<IoTSecurityDeviceAlert> mostPrevalentDeviceAlerts) {
    this.mostPrevalentDeviceAlerts = mostPrevalentDeviceAlerts;
  }


  public IoTSecuritySolutionAnalyticsModelProperties mostPrevalentDeviceRecommendations(List<IoTSecurityDeviceRecommendation> mostPrevalentDeviceRecommendations) {
    this.mostPrevalentDeviceRecommendations = mostPrevalentDeviceRecommendations;
    return this;
  }

  public IoTSecuritySolutionAnalyticsModelProperties addMostPrevalentDeviceRecommendationsItem(IoTSecurityDeviceRecommendation mostPrevalentDeviceRecommendationsItem) {
    if (this.mostPrevalentDeviceRecommendations == null) {
      this.mostPrevalentDeviceRecommendations = new ArrayList<>();
    }
    this.mostPrevalentDeviceRecommendations.add(mostPrevalentDeviceRecommendationsItem);
    return this;
  }

  /**
   * List of aggregated recommendation data, per recommendation type, per device.
   * @return mostPrevalentDeviceRecommendations
   */
  @javax.annotation.Nullable
  public List<IoTSecurityDeviceRecommendation> getMostPrevalentDeviceRecommendations() {
    return mostPrevalentDeviceRecommendations;
  }

  public void setMostPrevalentDeviceRecommendations(List<IoTSecurityDeviceRecommendation> mostPrevalentDeviceRecommendations) {
    this.mostPrevalentDeviceRecommendations = mostPrevalentDeviceRecommendations;
  }


  public IoTSecuritySolutionAnalyticsModelProperties topAlertedDevices(List<IoTSecurityAlertedDevice> topAlertedDevices) {
    this.topAlertedDevices = topAlertedDevices;
    return this;
  }

  public IoTSecuritySolutionAnalyticsModelProperties addTopAlertedDevicesItem(IoTSecurityAlertedDevice topAlertedDevicesItem) {
    if (this.topAlertedDevices == null) {
      this.topAlertedDevices = new ArrayList<>();
    }
    this.topAlertedDevices.add(topAlertedDevicesItem);
    return this;
  }

  /**
   * List of devices with open alerts including the count of alerts per device.
   * @return topAlertedDevices
   */
  @javax.annotation.Nullable
  public List<IoTSecurityAlertedDevice> getTopAlertedDevices() {
    return topAlertedDevices;
  }

  public void setTopAlertedDevices(List<IoTSecurityAlertedDevice> topAlertedDevices) {
    this.topAlertedDevices = topAlertedDevices;
  }


  /**
   * Number of unhealthy devices within your IoT Security solution.
   * @return unhealthyDeviceCount
   */
  @javax.annotation.Nullable
  public Integer getUnhealthyDeviceCount() {
    return unhealthyDeviceCount;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoTSecuritySolutionAnalyticsModelProperties ioTSecuritySolutionAnalyticsModelProperties = (IoTSecuritySolutionAnalyticsModelProperties) o;
    return Objects.equals(this.devicesMetrics, ioTSecuritySolutionAnalyticsModelProperties.devicesMetrics) &&
        Objects.equals(this.metrics, ioTSecuritySolutionAnalyticsModelProperties.metrics) &&
        Objects.equals(this.mostPrevalentDeviceAlerts, ioTSecuritySolutionAnalyticsModelProperties.mostPrevalentDeviceAlerts) &&
        Objects.equals(this.mostPrevalentDeviceRecommendations, ioTSecuritySolutionAnalyticsModelProperties.mostPrevalentDeviceRecommendations) &&
        Objects.equals(this.topAlertedDevices, ioTSecuritySolutionAnalyticsModelProperties.topAlertedDevices) &&
        Objects.equals(this.unhealthyDeviceCount, ioTSecuritySolutionAnalyticsModelProperties.unhealthyDeviceCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(devicesMetrics, metrics, mostPrevalentDeviceAlerts, mostPrevalentDeviceRecommendations, topAlertedDevices, unhealthyDeviceCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoTSecuritySolutionAnalyticsModelProperties {\n");
    sb.append("    devicesMetrics: ").append(toIndentedString(devicesMetrics)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    mostPrevalentDeviceAlerts: ").append(toIndentedString(mostPrevalentDeviceAlerts)).append("\n");
    sb.append("    mostPrevalentDeviceRecommendations: ").append(toIndentedString(mostPrevalentDeviceRecommendations)).append("\n");
    sb.append("    topAlertedDevices: ").append(toIndentedString(topAlertedDevices)).append("\n");
    sb.append("    unhealthyDeviceCount: ").append(toIndentedString(unhealthyDeviceCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("devicesMetrics");
    openapiFields.add("metrics");
    openapiFields.add("mostPrevalentDeviceAlerts");
    openapiFields.add("mostPrevalentDeviceRecommendations");
    openapiFields.add("topAlertedDevices");
    openapiFields.add("unhealthyDeviceCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoTSecuritySolutionAnalyticsModelProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoTSecuritySolutionAnalyticsModelProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoTSecuritySolutionAnalyticsModelProperties is not found in the empty JSON string", IoTSecuritySolutionAnalyticsModelProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoTSecuritySolutionAnalyticsModelProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoTSecuritySolutionAnalyticsModelProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("devicesMetrics") != null && !jsonObj.get("devicesMetrics").isJsonNull()) {
        JsonArray jsonArraydevicesMetrics = jsonObj.getAsJsonArray("devicesMetrics");
        if (jsonArraydevicesMetrics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("devicesMetrics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `devicesMetrics` to be an array in the JSON string but got `%s`", jsonObj.get("devicesMetrics").toString()));
          }

          // validate the optional field `devicesMetrics` (array)
          for (int i = 0; i < jsonArraydevicesMetrics.size(); i++) {
            IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsInner.validateJsonElement(jsonArraydevicesMetrics.get(i));
          };
        }
      }
      // validate the optional field `metrics`
      if (jsonObj.get("metrics") != null && !jsonObj.get("metrics").isJsonNull()) {
        IoTSeverityMetrics.validateJsonElement(jsonObj.get("metrics"));
      }
      if (jsonObj.get("mostPrevalentDeviceAlerts") != null && !jsonObj.get("mostPrevalentDeviceAlerts").isJsonNull()) {
        JsonArray jsonArraymostPrevalentDeviceAlerts = jsonObj.getAsJsonArray("mostPrevalentDeviceAlerts");
        if (jsonArraymostPrevalentDeviceAlerts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("mostPrevalentDeviceAlerts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `mostPrevalentDeviceAlerts` to be an array in the JSON string but got `%s`", jsonObj.get("mostPrevalentDeviceAlerts").toString()));
          }

          // validate the optional field `mostPrevalentDeviceAlerts` (array)
          for (int i = 0; i < jsonArraymostPrevalentDeviceAlerts.size(); i++) {
            IoTSecurityDeviceAlert.validateJsonElement(jsonArraymostPrevalentDeviceAlerts.get(i));
          };
        }
      }
      if (jsonObj.get("mostPrevalentDeviceRecommendations") != null && !jsonObj.get("mostPrevalentDeviceRecommendations").isJsonNull()) {
        JsonArray jsonArraymostPrevalentDeviceRecommendations = jsonObj.getAsJsonArray("mostPrevalentDeviceRecommendations");
        if (jsonArraymostPrevalentDeviceRecommendations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("mostPrevalentDeviceRecommendations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `mostPrevalentDeviceRecommendations` to be an array in the JSON string but got `%s`", jsonObj.get("mostPrevalentDeviceRecommendations").toString()));
          }

          // validate the optional field `mostPrevalentDeviceRecommendations` (array)
          for (int i = 0; i < jsonArraymostPrevalentDeviceRecommendations.size(); i++) {
            IoTSecurityDeviceRecommendation.validateJsonElement(jsonArraymostPrevalentDeviceRecommendations.get(i));
          };
        }
      }
      if (jsonObj.get("topAlertedDevices") != null && !jsonObj.get("topAlertedDevices").isJsonNull()) {
        JsonArray jsonArraytopAlertedDevices = jsonObj.getAsJsonArray("topAlertedDevices");
        if (jsonArraytopAlertedDevices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("topAlertedDevices").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `topAlertedDevices` to be an array in the JSON string but got `%s`", jsonObj.get("topAlertedDevices").toString()));
          }

          // validate the optional field `topAlertedDevices` (array)
          for (int i = 0; i < jsonArraytopAlertedDevices.size(); i++) {
            IoTSecurityAlertedDevice.validateJsonElement(jsonArraytopAlertedDevices.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoTSecuritySolutionAnalyticsModelProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoTSecuritySolutionAnalyticsModelProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoTSecuritySolutionAnalyticsModelProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoTSecuritySolutionAnalyticsModelProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<IoTSecuritySolutionAnalyticsModelProperties>() {
           @Override
           public void write(JsonWriter out, IoTSecuritySolutionAnalyticsModelProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoTSecuritySolutionAnalyticsModelProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoTSecuritySolutionAnalyticsModelProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoTSecuritySolutionAnalyticsModelProperties
   * @throws IOException if the JSON string is invalid with respect to IoTSecuritySolutionAnalyticsModelProperties
   */
  public static IoTSecuritySolutionAnalyticsModelProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoTSecuritySolutionAnalyticsModelProperties.class);
  }

  /**
   * Convert an instance of IoTSecuritySolutionAnalyticsModelProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

