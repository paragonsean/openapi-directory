/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIoTSecurityAggregatedRecommendationProperties.h
 *
 * IoT Security solution aggregated recommendation information
 */

#ifndef OAIIoTSecurityAggregatedRecommendationProperties_H
#define OAIIoTSecurityAggregatedRecommendationProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIoTSecurityAggregatedRecommendationProperties : public OAIObject {
public:
    OAIIoTSecurityAggregatedRecommendationProperties();
    OAIIoTSecurityAggregatedRecommendationProperties(QString json);
    ~OAIIoTSecurityAggregatedRecommendationProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDetectedBy() const;
    void setDetectedBy(const QString &detected_by);
    bool is_detected_by_Set() const;
    bool is_detected_by_Valid() const;

    qint32 getHealthyDevices() const;
    void setHealthyDevices(const qint32 &healthy_devices);
    bool is_healthy_devices_Set() const;
    bool is_healthy_devices_Valid() const;

    QString getLogAnalyticsQuery() const;
    void setLogAnalyticsQuery(const QString &log_analytics_query);
    bool is_log_analytics_query_Set() const;
    bool is_log_analytics_query_Valid() const;

    QString getRecommendationDisplayName() const;
    void setRecommendationDisplayName(const QString &recommendation_display_name);
    bool is_recommendation_display_name_Set() const;
    bool is_recommendation_display_name_Valid() const;

    QString getRecommendationName() const;
    void setRecommendationName(const QString &recommendation_name);
    bool is_recommendation_name_Set() const;
    bool is_recommendation_name_Valid() const;

    QString getRecommendationTypeId() const;
    void setRecommendationTypeId(const QString &recommendation_type_id);
    bool is_recommendation_type_id_Set() const;
    bool is_recommendation_type_id_Valid() const;

    QString getRemediationSteps() const;
    void setRemediationSteps(const QString &remediation_steps);
    bool is_remediation_steps_Set() const;
    bool is_remediation_steps_Valid() const;

    QString getReportedSeverity() const;
    void setReportedSeverity(const QString &reported_severity);
    bool is_reported_severity_Set() const;
    bool is_reported_severity_Valid() const;

    qint32 getUnhealthyDeviceCount() const;
    void setUnhealthyDeviceCount(const qint32 &unhealthy_device_count);
    bool is_unhealthy_device_count_Set() const;
    bool is_unhealthy_device_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_detected_by;
    bool m_detected_by_isSet;
    bool m_detected_by_isValid;

    qint32 m_healthy_devices;
    bool m_healthy_devices_isSet;
    bool m_healthy_devices_isValid;

    QString m_log_analytics_query;
    bool m_log_analytics_query_isSet;
    bool m_log_analytics_query_isValid;

    QString m_recommendation_display_name;
    bool m_recommendation_display_name_isSet;
    bool m_recommendation_display_name_isValid;

    QString m_recommendation_name;
    bool m_recommendation_name_isSet;
    bool m_recommendation_name_isValid;

    QString m_recommendation_type_id;
    bool m_recommendation_type_id_isSet;
    bool m_recommendation_type_id_isValid;

    QString m_remediation_steps;
    bool m_remediation_steps_isSet;
    bool m_remediation_steps_isValid;

    QString m_reported_severity;
    bool m_reported_severity_isSet;
    bool m_reported_severity_isValid;

    qint32 m_unhealthy_device_count;
    bool m_unhealthy_device_count_isSet;
    bool m_unhealthy_device_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIoTSecurityAggregatedRecommendationProperties)

#endif // OAIIoTSecurityAggregatedRecommendationProperties_H
