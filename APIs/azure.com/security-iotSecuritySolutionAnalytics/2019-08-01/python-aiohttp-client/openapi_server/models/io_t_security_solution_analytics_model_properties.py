# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.io_t_security_alerted_device import IoTSecurityAlertedDevice
from openapi_server.models.io_t_security_device_alert import IoTSecurityDeviceAlert
from openapi_server.models.io_t_security_device_recommendation import IoTSecurityDeviceRecommendation
from openapi_server.models.io_t_security_solution_analytics_model_properties_devices_metrics_inner import IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsInner
from openapi_server.models.io_t_severity_metrics import IoTSeverityMetrics
from openapi_server import util


class IoTSecuritySolutionAnalyticsModelProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, devices_metrics: List[IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsInner]=None, metrics: IoTSeverityMetrics=None, most_prevalent_device_alerts: List[IoTSecurityDeviceAlert]=None, most_prevalent_device_recommendations: List[IoTSecurityDeviceRecommendation]=None, top_alerted_devices: List[IoTSecurityAlertedDevice]=None, unhealthy_device_count: int=None):
        """IoTSecuritySolutionAnalyticsModelProperties - a model defined in OpenAPI

        :param devices_metrics: The devices_metrics of this IoTSecuritySolutionAnalyticsModelProperties.
        :param metrics: The metrics of this IoTSecuritySolutionAnalyticsModelProperties.
        :param most_prevalent_device_alerts: The most_prevalent_device_alerts of this IoTSecuritySolutionAnalyticsModelProperties.
        :param most_prevalent_device_recommendations: The most_prevalent_device_recommendations of this IoTSecuritySolutionAnalyticsModelProperties.
        :param top_alerted_devices: The top_alerted_devices of this IoTSecuritySolutionAnalyticsModelProperties.
        :param unhealthy_device_count: The unhealthy_device_count of this IoTSecuritySolutionAnalyticsModelProperties.
        """
        self.openapi_types = {
            'devices_metrics': List[IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsInner],
            'metrics': IoTSeverityMetrics,
            'most_prevalent_device_alerts': List[IoTSecurityDeviceAlert],
            'most_prevalent_device_recommendations': List[IoTSecurityDeviceRecommendation],
            'top_alerted_devices': List[IoTSecurityAlertedDevice],
            'unhealthy_device_count': int
        }

        self.attribute_map = {
            'devices_metrics': 'devicesMetrics',
            'metrics': 'metrics',
            'most_prevalent_device_alerts': 'mostPrevalentDeviceAlerts',
            'most_prevalent_device_recommendations': 'mostPrevalentDeviceRecommendations',
            'top_alerted_devices': 'topAlertedDevices',
            'unhealthy_device_count': 'unhealthyDeviceCount'
        }

        self._devices_metrics = devices_metrics
        self._metrics = metrics
        self._most_prevalent_device_alerts = most_prevalent_device_alerts
        self._most_prevalent_device_recommendations = most_prevalent_device_recommendations
        self._top_alerted_devices = top_alerted_devices
        self._unhealthy_device_count = unhealthy_device_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IoTSecuritySolutionAnalyticsModelProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IoTSecuritySolutionAnalyticsModelProperties of this IoTSecuritySolutionAnalyticsModelProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def devices_metrics(self):
        """Gets the devices_metrics of this IoTSecuritySolutionAnalyticsModelProperties.

        List of device metrics by the aggregation date.

        :return: The devices_metrics of this IoTSecuritySolutionAnalyticsModelProperties.
        :rtype: List[IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsInner]
        """
        return self._devices_metrics

    @devices_metrics.setter
    def devices_metrics(self, devices_metrics):
        """Sets the devices_metrics of this IoTSecuritySolutionAnalyticsModelProperties.

        List of device metrics by the aggregation date.

        :param devices_metrics: The devices_metrics of this IoTSecuritySolutionAnalyticsModelProperties.
        :type devices_metrics: List[IoTSecuritySolutionAnalyticsModelPropertiesDevicesMetricsInner]
        """

        self._devices_metrics = devices_metrics

    @property
    def metrics(self):
        """Gets the metrics of this IoTSecuritySolutionAnalyticsModelProperties.


        :return: The metrics of this IoTSecuritySolutionAnalyticsModelProperties.
        :rtype: IoTSeverityMetrics
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this IoTSecuritySolutionAnalyticsModelProperties.


        :param metrics: The metrics of this IoTSecuritySolutionAnalyticsModelProperties.
        :type metrics: IoTSeverityMetrics
        """

        self._metrics = metrics

    @property
    def most_prevalent_device_alerts(self):
        """Gets the most_prevalent_device_alerts of this IoTSecuritySolutionAnalyticsModelProperties.

        List of alerts with the count of raised alerts

        :return: The most_prevalent_device_alerts of this IoTSecuritySolutionAnalyticsModelProperties.
        :rtype: List[IoTSecurityDeviceAlert]
        """
        return self._most_prevalent_device_alerts

    @most_prevalent_device_alerts.setter
    def most_prevalent_device_alerts(self, most_prevalent_device_alerts):
        """Sets the most_prevalent_device_alerts of this IoTSecuritySolutionAnalyticsModelProperties.

        List of alerts with the count of raised alerts

        :param most_prevalent_device_alerts: The most_prevalent_device_alerts of this IoTSecuritySolutionAnalyticsModelProperties.
        :type most_prevalent_device_alerts: List[IoTSecurityDeviceAlert]
        """

        self._most_prevalent_device_alerts = most_prevalent_device_alerts

    @property
    def most_prevalent_device_recommendations(self):
        """Gets the most_prevalent_device_recommendations of this IoTSecuritySolutionAnalyticsModelProperties.

        List of aggregated recommendation data, per recommendation type, per device.

        :return: The most_prevalent_device_recommendations of this IoTSecuritySolutionAnalyticsModelProperties.
        :rtype: List[IoTSecurityDeviceRecommendation]
        """
        return self._most_prevalent_device_recommendations

    @most_prevalent_device_recommendations.setter
    def most_prevalent_device_recommendations(self, most_prevalent_device_recommendations):
        """Sets the most_prevalent_device_recommendations of this IoTSecuritySolutionAnalyticsModelProperties.

        List of aggregated recommendation data, per recommendation type, per device.

        :param most_prevalent_device_recommendations: The most_prevalent_device_recommendations of this IoTSecuritySolutionAnalyticsModelProperties.
        :type most_prevalent_device_recommendations: List[IoTSecurityDeviceRecommendation]
        """

        self._most_prevalent_device_recommendations = most_prevalent_device_recommendations

    @property
    def top_alerted_devices(self):
        """Gets the top_alerted_devices of this IoTSecuritySolutionAnalyticsModelProperties.

        List of devices with open alerts including the count of alerts per device.

        :return: The top_alerted_devices of this IoTSecuritySolutionAnalyticsModelProperties.
        :rtype: List[IoTSecurityAlertedDevice]
        """
        return self._top_alerted_devices

    @top_alerted_devices.setter
    def top_alerted_devices(self, top_alerted_devices):
        """Sets the top_alerted_devices of this IoTSecuritySolutionAnalyticsModelProperties.

        List of devices with open alerts including the count of alerts per device.

        :param top_alerted_devices: The top_alerted_devices of this IoTSecuritySolutionAnalyticsModelProperties.
        :type top_alerted_devices: List[IoTSecurityAlertedDevice]
        """

        self._top_alerted_devices = top_alerted_devices

    @property
    def unhealthy_device_count(self):
        """Gets the unhealthy_device_count of this IoTSecuritySolutionAnalyticsModelProperties.

        Number of unhealthy devices within your IoT Security solution.

        :return: The unhealthy_device_count of this IoTSecuritySolutionAnalyticsModelProperties.
        :rtype: int
        """
        return self._unhealthy_device_count

    @unhealthy_device_count.setter
    def unhealthy_device_count(self, unhealthy_device_count):
        """Sets the unhealthy_device_count of this IoTSecuritySolutionAnalyticsModelProperties.

        Number of unhealthy devices within your IoT Security solution.

        :param unhealthy_device_count: The unhealthy_device_count of this IoTSecuritySolutionAnalyticsModelProperties.
        :type unhealthy_device_count: int
        """

        self._unhealthy_device_count = unhealthy_device_count
