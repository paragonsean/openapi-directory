# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IoTSecurityAlertedDevice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alerts_count: int=None, device_id: str=None):
        """IoTSecurityAlertedDevice - a model defined in OpenAPI

        :param alerts_count: The alerts_count of this IoTSecurityAlertedDevice.
        :param device_id: The device_id of this IoTSecurityAlertedDevice.
        """
        self.openapi_types = {
            'alerts_count': int,
            'device_id': str
        }

        self.attribute_map = {
            'alerts_count': 'alertsCount',
            'device_id': 'deviceId'
        }

        self._alerts_count = alerts_count
        self._device_id = device_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IoTSecurityAlertedDevice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IoTSecurityAlertedDevice of this IoTSecurityAlertedDevice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alerts_count(self):
        """Gets the alerts_count of this IoTSecurityAlertedDevice.

        Number of alerts raised for this device.

        :return: The alerts_count of this IoTSecurityAlertedDevice.
        :rtype: int
        """
        return self._alerts_count

    @alerts_count.setter
    def alerts_count(self, alerts_count):
        """Sets the alerts_count of this IoTSecurityAlertedDevice.

        Number of alerts raised for this device.

        :param alerts_count: The alerts_count of this IoTSecurityAlertedDevice.
        :type alerts_count: int
        """

        self._alerts_count = alerts_count

    @property
    def device_id(self):
        """Gets the device_id of this IoTSecurityAlertedDevice.

        Device identifier.

        :return: The device_id of this IoTSecurityAlertedDevice.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this IoTSecurityAlertedDevice.

        Device identifier.

        :param device_id: The device_id of this IoTSecurityAlertedDevice.
        :type device_id: str
        """

        self._device_id = device_id
