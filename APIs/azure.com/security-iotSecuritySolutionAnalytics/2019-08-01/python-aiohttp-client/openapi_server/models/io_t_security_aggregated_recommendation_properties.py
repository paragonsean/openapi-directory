# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IoTSecurityAggregatedRecommendationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, detected_by: str=None, healthy_devices: int=None, log_analytics_query: str=None, recommendation_display_name: str=None, recommendation_name: str=None, recommendation_type_id: str=None, remediation_steps: str=None, reported_severity: str=None, unhealthy_device_count: int=None):
        """IoTSecurityAggregatedRecommendationProperties - a model defined in OpenAPI

        :param description: The description of this IoTSecurityAggregatedRecommendationProperties.
        :param detected_by: The detected_by of this IoTSecurityAggregatedRecommendationProperties.
        :param healthy_devices: The healthy_devices of this IoTSecurityAggregatedRecommendationProperties.
        :param log_analytics_query: The log_analytics_query of this IoTSecurityAggregatedRecommendationProperties.
        :param recommendation_display_name: The recommendation_display_name of this IoTSecurityAggregatedRecommendationProperties.
        :param recommendation_name: The recommendation_name of this IoTSecurityAggregatedRecommendationProperties.
        :param recommendation_type_id: The recommendation_type_id of this IoTSecurityAggregatedRecommendationProperties.
        :param remediation_steps: The remediation_steps of this IoTSecurityAggregatedRecommendationProperties.
        :param reported_severity: The reported_severity of this IoTSecurityAggregatedRecommendationProperties.
        :param unhealthy_device_count: The unhealthy_device_count of this IoTSecurityAggregatedRecommendationProperties.
        """
        self.openapi_types = {
            'description': str,
            'detected_by': str,
            'healthy_devices': int,
            'log_analytics_query': str,
            'recommendation_display_name': str,
            'recommendation_name': str,
            'recommendation_type_id': str,
            'remediation_steps': str,
            'reported_severity': str,
            'unhealthy_device_count': int
        }

        self.attribute_map = {
            'description': 'description',
            'detected_by': 'detectedBy',
            'healthy_devices': 'healthyDevices',
            'log_analytics_query': 'logAnalyticsQuery',
            'recommendation_display_name': 'recommendationDisplayName',
            'recommendation_name': 'recommendationName',
            'recommendation_type_id': 'recommendationTypeId',
            'remediation_steps': 'remediationSteps',
            'reported_severity': 'reportedSeverity',
            'unhealthy_device_count': 'unhealthyDeviceCount'
        }

        self._description = description
        self._detected_by = detected_by
        self._healthy_devices = healthy_devices
        self._log_analytics_query = log_analytics_query
        self._recommendation_display_name = recommendation_display_name
        self._recommendation_name = recommendation_name
        self._recommendation_type_id = recommendation_type_id
        self._remediation_steps = remediation_steps
        self._reported_severity = reported_severity
        self._unhealthy_device_count = unhealthy_device_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IoTSecurityAggregatedRecommendationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IoTSecurityAggregatedRecommendationProperties of this IoTSecurityAggregatedRecommendationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this IoTSecurityAggregatedRecommendationProperties.

        Description of the suspected vulnerability and meaning.

        :return: The description of this IoTSecurityAggregatedRecommendationProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this IoTSecurityAggregatedRecommendationProperties.

        Description of the suspected vulnerability and meaning.

        :param description: The description of this IoTSecurityAggregatedRecommendationProperties.
        :type description: str
        """

        self._description = description

    @property
    def detected_by(self):
        """Gets the detected_by of this IoTSecurityAggregatedRecommendationProperties.

        Name of the organization that made the recommendation.

        :return: The detected_by of this IoTSecurityAggregatedRecommendationProperties.
        :rtype: str
        """
        return self._detected_by

    @detected_by.setter
    def detected_by(self, detected_by):
        """Sets the detected_by of this IoTSecurityAggregatedRecommendationProperties.

        Name of the organization that made the recommendation.

        :param detected_by: The detected_by of this IoTSecurityAggregatedRecommendationProperties.
        :type detected_by: str
        """

        self._detected_by = detected_by

    @property
    def healthy_devices(self):
        """Gets the healthy_devices of this IoTSecurityAggregatedRecommendationProperties.

        Number of healthy devices within the IoT Security solution.

        :return: The healthy_devices of this IoTSecurityAggregatedRecommendationProperties.
        :rtype: int
        """
        return self._healthy_devices

    @healthy_devices.setter
    def healthy_devices(self, healthy_devices):
        """Sets the healthy_devices of this IoTSecurityAggregatedRecommendationProperties.

        Number of healthy devices within the IoT Security solution.

        :param healthy_devices: The healthy_devices of this IoTSecurityAggregatedRecommendationProperties.
        :type healthy_devices: int
        """

        self._healthy_devices = healthy_devices

    @property
    def log_analytics_query(self):
        """Gets the log_analytics_query of this IoTSecurityAggregatedRecommendationProperties.

        Log analytics query for getting the list of affected devices/alerts.

        :return: The log_analytics_query of this IoTSecurityAggregatedRecommendationProperties.
        :rtype: str
        """
        return self._log_analytics_query

    @log_analytics_query.setter
    def log_analytics_query(self, log_analytics_query):
        """Sets the log_analytics_query of this IoTSecurityAggregatedRecommendationProperties.

        Log analytics query for getting the list of affected devices/alerts.

        :param log_analytics_query: The log_analytics_query of this IoTSecurityAggregatedRecommendationProperties.
        :type log_analytics_query: str
        """

        self._log_analytics_query = log_analytics_query

    @property
    def recommendation_display_name(self):
        """Gets the recommendation_display_name of this IoTSecurityAggregatedRecommendationProperties.

        Display name of the recommendation type.

        :return: The recommendation_display_name of this IoTSecurityAggregatedRecommendationProperties.
        :rtype: str
        """
        return self._recommendation_display_name

    @recommendation_display_name.setter
    def recommendation_display_name(self, recommendation_display_name):
        """Sets the recommendation_display_name of this IoTSecurityAggregatedRecommendationProperties.

        Display name of the recommendation type.

        :param recommendation_display_name: The recommendation_display_name of this IoTSecurityAggregatedRecommendationProperties.
        :type recommendation_display_name: str
        """

        self._recommendation_display_name = recommendation_display_name

    @property
    def recommendation_name(self):
        """Gets the recommendation_name of this IoTSecurityAggregatedRecommendationProperties.

        Name of the recommendation.

        :return: The recommendation_name of this IoTSecurityAggregatedRecommendationProperties.
        :rtype: str
        """
        return self._recommendation_name

    @recommendation_name.setter
    def recommendation_name(self, recommendation_name):
        """Sets the recommendation_name of this IoTSecurityAggregatedRecommendationProperties.

        Name of the recommendation.

        :param recommendation_name: The recommendation_name of this IoTSecurityAggregatedRecommendationProperties.
        :type recommendation_name: str
        """

        self._recommendation_name = recommendation_name

    @property
    def recommendation_type_id(self):
        """Gets the recommendation_type_id of this IoTSecurityAggregatedRecommendationProperties.

        Recommendation-type GUID.

        :return: The recommendation_type_id of this IoTSecurityAggregatedRecommendationProperties.
        :rtype: str
        """
        return self._recommendation_type_id

    @recommendation_type_id.setter
    def recommendation_type_id(self, recommendation_type_id):
        """Sets the recommendation_type_id of this IoTSecurityAggregatedRecommendationProperties.

        Recommendation-type GUID.

        :param recommendation_type_id: The recommendation_type_id of this IoTSecurityAggregatedRecommendationProperties.
        :type recommendation_type_id: str
        """

        self._recommendation_type_id = recommendation_type_id

    @property
    def remediation_steps(self):
        """Gets the remediation_steps of this IoTSecurityAggregatedRecommendationProperties.

        Recommended steps for remediation

        :return: The remediation_steps of this IoTSecurityAggregatedRecommendationProperties.
        :rtype: str
        """
        return self._remediation_steps

    @remediation_steps.setter
    def remediation_steps(self, remediation_steps):
        """Sets the remediation_steps of this IoTSecurityAggregatedRecommendationProperties.

        Recommended steps for remediation

        :param remediation_steps: The remediation_steps of this IoTSecurityAggregatedRecommendationProperties.
        :type remediation_steps: str
        """

        self._remediation_steps = remediation_steps

    @property
    def reported_severity(self):
        """Gets the reported_severity of this IoTSecurityAggregatedRecommendationProperties.

        Assessed recommendation severity.

        :return: The reported_severity of this IoTSecurityAggregatedRecommendationProperties.
        :rtype: str
        """
        return self._reported_severity

    @reported_severity.setter
    def reported_severity(self, reported_severity):
        """Sets the reported_severity of this IoTSecurityAggregatedRecommendationProperties.

        Assessed recommendation severity.

        :param reported_severity: The reported_severity of this IoTSecurityAggregatedRecommendationProperties.
        :type reported_severity: str
        """
        allowed_values = ["Informational", "Low", "Medium", "High"]  # noqa: E501
        if reported_severity not in allowed_values:
            raise ValueError(
                "Invalid value for `reported_severity` ({0}), must be one of {1}"
                .format(reported_severity, allowed_values)
            )

        self._reported_severity = reported_severity

    @property
    def unhealthy_device_count(self):
        """Gets the unhealthy_device_count of this IoTSecurityAggregatedRecommendationProperties.

        Number of unhealthy devices within the IoT Security solution.

        :return: The unhealthy_device_count of this IoTSecurityAggregatedRecommendationProperties.
        :rtype: int
        """
        return self._unhealthy_device_count

    @unhealthy_device_count.setter
    def unhealthy_device_count(self, unhealthy_device_count):
        """Sets the unhealthy_device_count of this IoTSecurityAggregatedRecommendationProperties.

        Number of unhealthy devices within the IoT Security solution.

        :param unhealthy_device_count: The unhealthy_device_count of this IoTSecurityAggregatedRecommendationProperties.
        :type unhealthy_device_count: int
        """

        self._unhealthy_device_count = unhealthy_device_count
