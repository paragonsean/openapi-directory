/*
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.IoTSecurityAggregatedAlert;
import org.openapitools.client.model.IoTSecurityAggregatedAlertList;
import org.openapitools.client.model.IoTSecurityAggregatedRecommendation;
import org.openapitools.client.model.IoTSecurityAggregatedRecommendationList;
import org.openapitools.client.model.IoTSecuritySolutionAnalyticsModel;
import org.openapitools.client.model.IoTSecuritySolutionAnalyticsModelList;
import org.openapitools.client.model.IoTSecuritySolutionsAnalyticsGetAllDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IoTSecuritySolutionsAnalyticsApi
 */
@Disabled
public class IoTSecuritySolutionsAnalyticsApiTest {

    private final IoTSecuritySolutionsAnalyticsApi api = new IoTSecuritySolutionsAnalyticsApi();

    /**
     * Security Analytics of a security solution
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ioTSecuritySolutionsAnalyticsAggregatedAlertDismissTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String solutionName = null;
        String aggregatedAlertName = null;
        api.ioTSecuritySolutionsAnalyticsAggregatedAlertDismiss(apiVersion, subscriptionId, resourceGroupName, solutionName, aggregatedAlertName);
        // TODO: test validations
    }

    /**
     * Security Analytics of a security solution
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ioTSecuritySolutionsAnalyticsAggregatedAlertGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String solutionName = null;
        String aggregatedAlertName = null;
        IoTSecurityAggregatedAlert response = api.ioTSecuritySolutionsAnalyticsAggregatedAlertGet(apiVersion, subscriptionId, resourceGroupName, solutionName, aggregatedAlertName);
        // TODO: test validations
    }

    /**
     * Security Analytics of a security solution
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ioTSecuritySolutionsAnalyticsAggregatedAlertsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String solutionName = null;
        Integer $top = null;
        IoTSecurityAggregatedAlertList response = api.ioTSecuritySolutionsAnalyticsAggregatedAlertsList(apiVersion, subscriptionId, resourceGroupName, solutionName, $top);
        // TODO: test validations
    }

    /**
     * Security Analytics of a security solution
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ioTSecuritySolutionsAnalyticsGetAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String solutionName = null;
        IoTSecuritySolutionAnalyticsModelList response = api.ioTSecuritySolutionsAnalyticsGetAll(apiVersion, subscriptionId, resourceGroupName, solutionName);
        // TODO: test validations
    }

    /**
     * Security Analytics of a security solution
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ioTSecuritySolutionsAnalyticsGetDefaultTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String solutionName = null;
        IoTSecuritySolutionAnalyticsModel response = api.ioTSecuritySolutionsAnalyticsGetDefault(apiVersion, subscriptionId, resourceGroupName, solutionName);
        // TODO: test validations
    }

    /**
     * Security Analytics of a security solution
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ioTSecuritySolutionsAnalyticsRecommendationGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String solutionName = null;
        String aggregatedRecommendationName = null;
        IoTSecurityAggregatedRecommendation response = api.ioTSecuritySolutionsAnalyticsRecommendationGet(apiVersion, subscriptionId, resourceGroupName, solutionName, aggregatedRecommendationName);
        // TODO: test validations
    }

    /**
     * Security Analytics of a security solution
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ioTSecuritySolutionsAnalyticsRecommendationsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String solutionName = null;
        Integer $top = null;
        IoTSecurityAggregatedRecommendationList response = api.ioTSecuritySolutionsAnalyticsRecommendationsList(apiVersion, subscriptionId, resourceGroupName, solutionName, $top);
        // TODO: test validations
    }

}
