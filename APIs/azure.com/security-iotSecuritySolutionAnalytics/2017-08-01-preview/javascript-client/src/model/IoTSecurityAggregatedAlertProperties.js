/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoTSecurityAggregatedAlertProperties model module.
 * @module model/IoTSecurityAggregatedAlertProperties
 * @version 2017-08-01-preview
 */
class IoTSecurityAggregatedAlertProperties {
    /**
     * Constructs a new <code>IoTSecurityAggregatedAlertProperties</code>.
     * Security Solution Aggregated Alert data
     * @alias module:model/IoTSecurityAggregatedAlertProperties
     */
    constructor() { 
        
        IoTSecurityAggregatedAlertProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoTSecurityAggregatedAlertProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoTSecurityAggregatedAlertProperties} obj Optional instance to populate.
     * @return {module:model/IoTSecurityAggregatedAlertProperties} The populated <code>IoTSecurityAggregatedAlertProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoTSecurityAggregatedAlertProperties();

            if (data.hasOwnProperty('actionTaken')) {
                obj['actionTaken'] = ApiClient.convertToType(data['actionTaken'], 'String');
            }
            if (data.hasOwnProperty('aggregatedDateUtc')) {
                obj['aggregatedDateUtc'] = ApiClient.convertToType(data['aggregatedDateUtc'], 'Date');
            }
            if (data.hasOwnProperty('alertDisplayName')) {
                obj['alertDisplayName'] = ApiClient.convertToType(data['alertDisplayName'], 'String');
            }
            if (data.hasOwnProperty('alertType')) {
                obj['alertType'] = ApiClient.convertToType(data['alertType'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('effectedResourceType')) {
                obj['effectedResourceType'] = ApiClient.convertToType(data['effectedResourceType'], 'String');
            }
            if (data.hasOwnProperty('logAnalyticsQuery')) {
                obj['logAnalyticsQuery'] = ApiClient.convertToType(data['logAnalyticsQuery'], 'String');
            }
            if (data.hasOwnProperty('remediationSteps')) {
                obj['remediationSteps'] = ApiClient.convertToType(data['remediationSteps'], 'String');
            }
            if (data.hasOwnProperty('reportedSeverity')) {
                obj['reportedSeverity'] = ApiClient.convertToType(data['reportedSeverity'], 'String');
            }
            if (data.hasOwnProperty('systemSource')) {
                obj['systemSource'] = ApiClient.convertToType(data['systemSource'], 'String');
            }
            if (data.hasOwnProperty('vendorName')) {
                obj['vendorName'] = ApiClient.convertToType(data['vendorName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoTSecurityAggregatedAlertProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoTSecurityAggregatedAlertProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['actionTaken'] && !(typeof data['actionTaken'] === 'string' || data['actionTaken'] instanceof String)) {
            throw new Error("Expected the field `actionTaken` to be a primitive type in the JSON string but got " + data['actionTaken']);
        }
        // ensure the json data is a string
        if (data['alertDisplayName'] && !(typeof data['alertDisplayName'] === 'string' || data['alertDisplayName'] instanceof String)) {
            throw new Error("Expected the field `alertDisplayName` to be a primitive type in the JSON string but got " + data['alertDisplayName']);
        }
        // ensure the json data is a string
        if (data['alertType'] && !(typeof data['alertType'] === 'string' || data['alertType'] instanceof String)) {
            throw new Error("Expected the field `alertType` to be a primitive type in the JSON string but got " + data['alertType']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['effectedResourceType'] && !(typeof data['effectedResourceType'] === 'string' || data['effectedResourceType'] instanceof String)) {
            throw new Error("Expected the field `effectedResourceType` to be a primitive type in the JSON string but got " + data['effectedResourceType']);
        }
        // ensure the json data is a string
        if (data['logAnalyticsQuery'] && !(typeof data['logAnalyticsQuery'] === 'string' || data['logAnalyticsQuery'] instanceof String)) {
            throw new Error("Expected the field `logAnalyticsQuery` to be a primitive type in the JSON string but got " + data['logAnalyticsQuery']);
        }
        // ensure the json data is a string
        if (data['remediationSteps'] && !(typeof data['remediationSteps'] === 'string' || data['remediationSteps'] instanceof String)) {
            throw new Error("Expected the field `remediationSteps` to be a primitive type in the JSON string but got " + data['remediationSteps']);
        }
        // ensure the json data is a string
        if (data['reportedSeverity'] && !(typeof data['reportedSeverity'] === 'string' || data['reportedSeverity'] instanceof String)) {
            throw new Error("Expected the field `reportedSeverity` to be a primitive type in the JSON string but got " + data['reportedSeverity']);
        }
        // ensure the json data is a string
        if (data['systemSource'] && !(typeof data['systemSource'] === 'string' || data['systemSource'] instanceof String)) {
            throw new Error("Expected the field `systemSource` to be a primitive type in the JSON string but got " + data['systemSource']);
        }
        // ensure the json data is a string
        if (data['vendorName'] && !(typeof data['vendorName'] === 'string' || data['vendorName'] instanceof String)) {
            throw new Error("Expected the field `vendorName` to be a primitive type in the JSON string but got " + data['vendorName']);
        }

        return true;
    }


}



/**
 * The action that was taken as a response to the alert (Active, Blocked etc.)
 * @member {String} actionTaken
 */
IoTSecurityAggregatedAlertProperties.prototype['actionTaken'] = undefined;

/**
 * The date the incidents were detected by the vendor
 * @member {Date} aggregatedDateUtc
 */
IoTSecurityAggregatedAlertProperties.prototype['aggregatedDateUtc'] = undefined;

/**
 * Display name of the alert type
 * @member {String} alertDisplayName
 */
IoTSecurityAggregatedAlertProperties.prototype['alertDisplayName'] = undefined;

/**
 * Name of the alert type
 * @member {String} alertType
 */
IoTSecurityAggregatedAlertProperties.prototype['alertType'] = undefined;

/**
 * Occurrence number of the alert within the aggregated date
 * @member {Number} count
 */
IoTSecurityAggregatedAlertProperties.prototype['count'] = undefined;

/**
 * Description of the incident and what it means
 * @member {String} description
 */
IoTSecurityAggregatedAlertProperties.prototype['description'] = undefined;

/**
 * Azure resource ID of the resource that got the alerts
 * @member {String} effectedResourceType
 */
IoTSecurityAggregatedAlertProperties.prototype['effectedResourceType'] = undefined;

/**
 * query in log analytics to get the list of affected devices/alerts
 * @member {String} logAnalyticsQuery
 */
IoTSecurityAggregatedAlertProperties.prototype['logAnalyticsQuery'] = undefined;

/**
 * Recommended steps for remediation
 * @member {String} remediationSteps
 */
IoTSecurityAggregatedAlertProperties.prototype['remediationSteps'] = undefined;

/**
 * Estimated severity of this alert
 * @member {module:model/IoTSecurityAggregatedAlertProperties.ReportedSeverityEnum} reportedSeverity
 */
IoTSecurityAggregatedAlertProperties.prototype['reportedSeverity'] = undefined;

/**
 * The type of the alerted resource (Azure, Non-Azure)
 * @member {String} systemSource
 */
IoTSecurityAggregatedAlertProperties.prototype['systemSource'] = undefined;

/**
 * Name of the vendor that discovered the incident
 * @member {String} vendorName
 */
IoTSecurityAggregatedAlertProperties.prototype['vendorName'] = undefined;





/**
 * Allowed values for the <code>reportedSeverity</code> property.
 * @enum {String}
 * @readonly
 */
IoTSecurityAggregatedAlertProperties['ReportedSeverityEnum'] = {

    /**
     * value: "Informational"
     * @const
     */
    "Informational": "Informational",

    /**
     * value: "Low"
     * @const
     */
    "Low": "Low",

    /**
     * value: "Medium"
     * @const
     */
    "Medium": "Medium",

    /**
     * value: "High"
     * @const
     */
    "High": "High"
};



export default IoTSecurityAggregatedAlertProperties;

