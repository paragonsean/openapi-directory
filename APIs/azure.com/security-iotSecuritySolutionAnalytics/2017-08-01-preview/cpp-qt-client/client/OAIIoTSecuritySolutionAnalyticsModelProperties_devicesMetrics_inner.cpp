/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner() {
    this->initializeModel();
}

OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::~OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner() {}

void OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::initializeModel() {

    m_date_isSet = false;
    m_date_isValid = false;

    m_devices_metrics_isSet = false;
    m_devices_metrics_isValid = false;
}

void OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::fromJsonObject(QJsonObject json) {

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_devices_metrics_isValid = ::OpenAPI::fromJsonValue(m_devices_metrics, json[QString("devicesMetrics")]);
    m_devices_metrics_isSet = !json[QString("devicesMetrics")].isNull() && m_devices_metrics_isValid;
}

QString OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_devices_metrics.isSet()) {
        obj.insert(QString("devicesMetrics"), ::OpenAPI::toJsonValue(m_devices_metrics));
    }
    return obj;
}

QDateTime OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::getDate() const {
    return m_date;
}
void OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::setDate(const QDateTime &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::is_date_Set() const{
    return m_date_isSet;
}

bool OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::is_date_Valid() const{
    return m_date_isValid;
}

OAIIoTSeverityMetrics OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::getDevicesMetrics() const {
    return m_devices_metrics;
}
void OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::setDevicesMetrics(const OAIIoTSeverityMetrics &devices_metrics) {
    m_devices_metrics = devices_metrics;
    m_devices_metrics_isSet = true;
}

bool OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::is_devices_metrics_Set() const{
    return m_devices_metrics_isSet;
}

bool OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::is_devices_metrics_Valid() const{
    return m_devices_metrics_isValid;
}

bool OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_devices_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIoTSecuritySolutionAnalyticsModelProperties_devicesMetrics_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
