/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIoTSecurityAggregatedRecommendationProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIoTSecurityAggregatedRecommendationProperties::OAIIoTSecurityAggregatedRecommendationProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIoTSecurityAggregatedRecommendationProperties::OAIIoTSecurityAggregatedRecommendationProperties() {
    this->initializeModel();
}

OAIIoTSecurityAggregatedRecommendationProperties::~OAIIoTSecurityAggregatedRecommendationProperties() {}

void OAIIoTSecurityAggregatedRecommendationProperties::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_detected_by_isSet = false;
    m_detected_by_isValid = false;

    m_healthy_devices_isSet = false;
    m_healthy_devices_isValid = false;

    m_log_analytics_query_isSet = false;
    m_log_analytics_query_isValid = false;

    m_recommendation_display_name_isSet = false;
    m_recommendation_display_name_isValid = false;

    m_recommendation_name_isSet = false;
    m_recommendation_name_isValid = false;

    m_recommendation_type_id_isSet = false;
    m_recommendation_type_id_isValid = false;

    m_remediation_steps_isSet = false;
    m_remediation_steps_isValid = false;

    m_reported_severity_isSet = false;
    m_reported_severity_isValid = false;

    m_unhealthy_device_count_isSet = false;
    m_unhealthy_device_count_isValid = false;
}

void OAIIoTSecurityAggregatedRecommendationProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIoTSecurityAggregatedRecommendationProperties::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_detected_by_isValid = ::OpenAPI::fromJsonValue(m_detected_by, json[QString("detectedBy")]);
    m_detected_by_isSet = !json[QString("detectedBy")].isNull() && m_detected_by_isValid;

    m_healthy_devices_isValid = ::OpenAPI::fromJsonValue(m_healthy_devices, json[QString("healthyDevices")]);
    m_healthy_devices_isSet = !json[QString("healthyDevices")].isNull() && m_healthy_devices_isValid;

    m_log_analytics_query_isValid = ::OpenAPI::fromJsonValue(m_log_analytics_query, json[QString("logAnalyticsQuery")]);
    m_log_analytics_query_isSet = !json[QString("logAnalyticsQuery")].isNull() && m_log_analytics_query_isValid;

    m_recommendation_display_name_isValid = ::OpenAPI::fromJsonValue(m_recommendation_display_name, json[QString("recommendationDisplayName")]);
    m_recommendation_display_name_isSet = !json[QString("recommendationDisplayName")].isNull() && m_recommendation_display_name_isValid;

    m_recommendation_name_isValid = ::OpenAPI::fromJsonValue(m_recommendation_name, json[QString("recommendationName")]);
    m_recommendation_name_isSet = !json[QString("recommendationName")].isNull() && m_recommendation_name_isValid;

    m_recommendation_type_id_isValid = ::OpenAPI::fromJsonValue(m_recommendation_type_id, json[QString("recommendationTypeId")]);
    m_recommendation_type_id_isSet = !json[QString("recommendationTypeId")].isNull() && m_recommendation_type_id_isValid;

    m_remediation_steps_isValid = ::OpenAPI::fromJsonValue(m_remediation_steps, json[QString("remediationSteps")]);
    m_remediation_steps_isSet = !json[QString("remediationSteps")].isNull() && m_remediation_steps_isValid;

    m_reported_severity_isValid = ::OpenAPI::fromJsonValue(m_reported_severity, json[QString("reportedSeverity")]);
    m_reported_severity_isSet = !json[QString("reportedSeverity")].isNull() && m_reported_severity_isValid;

    m_unhealthy_device_count_isValid = ::OpenAPI::fromJsonValue(m_unhealthy_device_count, json[QString("unhealthyDeviceCount")]);
    m_unhealthy_device_count_isSet = !json[QString("unhealthyDeviceCount")].isNull() && m_unhealthy_device_count_isValid;
}

QString OAIIoTSecurityAggregatedRecommendationProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIoTSecurityAggregatedRecommendationProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_detected_by_isSet) {
        obj.insert(QString("detectedBy"), ::OpenAPI::toJsonValue(m_detected_by));
    }
    if (m_healthy_devices_isSet) {
        obj.insert(QString("healthyDevices"), ::OpenAPI::toJsonValue(m_healthy_devices));
    }
    if (m_log_analytics_query_isSet) {
        obj.insert(QString("logAnalyticsQuery"), ::OpenAPI::toJsonValue(m_log_analytics_query));
    }
    if (m_recommendation_display_name_isSet) {
        obj.insert(QString("recommendationDisplayName"), ::OpenAPI::toJsonValue(m_recommendation_display_name));
    }
    if (m_recommendation_name_isSet) {
        obj.insert(QString("recommendationName"), ::OpenAPI::toJsonValue(m_recommendation_name));
    }
    if (m_recommendation_type_id_isSet) {
        obj.insert(QString("recommendationTypeId"), ::OpenAPI::toJsonValue(m_recommendation_type_id));
    }
    if (m_remediation_steps_isSet) {
        obj.insert(QString("remediationSteps"), ::OpenAPI::toJsonValue(m_remediation_steps));
    }
    if (m_reported_severity_isSet) {
        obj.insert(QString("reportedSeverity"), ::OpenAPI::toJsonValue(m_reported_severity));
    }
    if (m_unhealthy_device_count_isSet) {
        obj.insert(QString("unhealthyDeviceCount"), ::OpenAPI::toJsonValue(m_unhealthy_device_count));
    }
    return obj;
}

QString OAIIoTSecurityAggregatedRecommendationProperties::getDescription() const {
    return m_description;
}
void OAIIoTSecurityAggregatedRecommendationProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIIoTSecurityAggregatedRecommendationProperties::getDetectedBy() const {
    return m_detected_by;
}
void OAIIoTSecurityAggregatedRecommendationProperties::setDetectedBy(const QString &detected_by) {
    m_detected_by = detected_by;
    m_detected_by_isSet = true;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_detected_by_Set() const{
    return m_detected_by_isSet;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_detected_by_Valid() const{
    return m_detected_by_isValid;
}

qint32 OAIIoTSecurityAggregatedRecommendationProperties::getHealthyDevices() const {
    return m_healthy_devices;
}
void OAIIoTSecurityAggregatedRecommendationProperties::setHealthyDevices(const qint32 &healthy_devices) {
    m_healthy_devices = healthy_devices;
    m_healthy_devices_isSet = true;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_healthy_devices_Set() const{
    return m_healthy_devices_isSet;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_healthy_devices_Valid() const{
    return m_healthy_devices_isValid;
}

QString OAIIoTSecurityAggregatedRecommendationProperties::getLogAnalyticsQuery() const {
    return m_log_analytics_query;
}
void OAIIoTSecurityAggregatedRecommendationProperties::setLogAnalyticsQuery(const QString &log_analytics_query) {
    m_log_analytics_query = log_analytics_query;
    m_log_analytics_query_isSet = true;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_log_analytics_query_Set() const{
    return m_log_analytics_query_isSet;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_log_analytics_query_Valid() const{
    return m_log_analytics_query_isValid;
}

QString OAIIoTSecurityAggregatedRecommendationProperties::getRecommendationDisplayName() const {
    return m_recommendation_display_name;
}
void OAIIoTSecurityAggregatedRecommendationProperties::setRecommendationDisplayName(const QString &recommendation_display_name) {
    m_recommendation_display_name = recommendation_display_name;
    m_recommendation_display_name_isSet = true;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_recommendation_display_name_Set() const{
    return m_recommendation_display_name_isSet;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_recommendation_display_name_Valid() const{
    return m_recommendation_display_name_isValid;
}

QString OAIIoTSecurityAggregatedRecommendationProperties::getRecommendationName() const {
    return m_recommendation_name;
}
void OAIIoTSecurityAggregatedRecommendationProperties::setRecommendationName(const QString &recommendation_name) {
    m_recommendation_name = recommendation_name;
    m_recommendation_name_isSet = true;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_recommendation_name_Set() const{
    return m_recommendation_name_isSet;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_recommendation_name_Valid() const{
    return m_recommendation_name_isValid;
}

QString OAIIoTSecurityAggregatedRecommendationProperties::getRecommendationTypeId() const {
    return m_recommendation_type_id;
}
void OAIIoTSecurityAggregatedRecommendationProperties::setRecommendationTypeId(const QString &recommendation_type_id) {
    m_recommendation_type_id = recommendation_type_id;
    m_recommendation_type_id_isSet = true;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_recommendation_type_id_Set() const{
    return m_recommendation_type_id_isSet;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_recommendation_type_id_Valid() const{
    return m_recommendation_type_id_isValid;
}

QString OAIIoTSecurityAggregatedRecommendationProperties::getRemediationSteps() const {
    return m_remediation_steps;
}
void OAIIoTSecurityAggregatedRecommendationProperties::setRemediationSteps(const QString &remediation_steps) {
    m_remediation_steps = remediation_steps;
    m_remediation_steps_isSet = true;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_remediation_steps_Set() const{
    return m_remediation_steps_isSet;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_remediation_steps_Valid() const{
    return m_remediation_steps_isValid;
}

QString OAIIoTSecurityAggregatedRecommendationProperties::getReportedSeverity() const {
    return m_reported_severity;
}
void OAIIoTSecurityAggregatedRecommendationProperties::setReportedSeverity(const QString &reported_severity) {
    m_reported_severity = reported_severity;
    m_reported_severity_isSet = true;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_reported_severity_Set() const{
    return m_reported_severity_isSet;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_reported_severity_Valid() const{
    return m_reported_severity_isValid;
}

qint32 OAIIoTSecurityAggregatedRecommendationProperties::getUnhealthyDeviceCount() const {
    return m_unhealthy_device_count;
}
void OAIIoTSecurityAggregatedRecommendationProperties::setUnhealthyDeviceCount(const qint32 &unhealthy_device_count) {
    m_unhealthy_device_count = unhealthy_device_count;
    m_unhealthy_device_count_isSet = true;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_unhealthy_device_count_Set() const{
    return m_unhealthy_device_count_isSet;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::is_unhealthy_device_count_Valid() const{
    return m_unhealthy_device_count_isValid;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_detected_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_healthy_devices_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_analytics_query_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remediation_steps_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reported_severity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unhealthy_device_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIoTSecurityAggregatedRecommendationProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
