/**
 * Security Center
 * API spec for Microsoft.Security (Azure Security Center) resource provider
 *
 * The version of the OpenAPI document: 2017-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIoTSecurityAggregatedAlertProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIoTSecurityAggregatedAlertProperties::OAIIoTSecurityAggregatedAlertProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIoTSecurityAggregatedAlertProperties::OAIIoTSecurityAggregatedAlertProperties() {
    this->initializeModel();
}

OAIIoTSecurityAggregatedAlertProperties::~OAIIoTSecurityAggregatedAlertProperties() {}

void OAIIoTSecurityAggregatedAlertProperties::initializeModel() {

    m_action_taken_isSet = false;
    m_action_taken_isValid = false;

    m_aggregated_date_utc_isSet = false;
    m_aggregated_date_utc_isValid = false;

    m_alert_display_name_isSet = false;
    m_alert_display_name_isValid = false;

    m_alert_type_isSet = false;
    m_alert_type_isValid = false;

    m_count_isSet = false;
    m_count_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_effected_resource_type_isSet = false;
    m_effected_resource_type_isValid = false;

    m_log_analytics_query_isSet = false;
    m_log_analytics_query_isValid = false;

    m_remediation_steps_isSet = false;
    m_remediation_steps_isValid = false;

    m_reported_severity_isSet = false;
    m_reported_severity_isValid = false;

    m_system_source_isSet = false;
    m_system_source_isValid = false;

    m_vendor_name_isSet = false;
    m_vendor_name_isValid = false;
}

void OAIIoTSecurityAggregatedAlertProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIoTSecurityAggregatedAlertProperties::fromJsonObject(QJsonObject json) {

    m_action_taken_isValid = ::OpenAPI::fromJsonValue(m_action_taken, json[QString("actionTaken")]);
    m_action_taken_isSet = !json[QString("actionTaken")].isNull() && m_action_taken_isValid;

    m_aggregated_date_utc_isValid = ::OpenAPI::fromJsonValue(m_aggregated_date_utc, json[QString("aggregatedDateUtc")]);
    m_aggregated_date_utc_isSet = !json[QString("aggregatedDateUtc")].isNull() && m_aggregated_date_utc_isValid;

    m_alert_display_name_isValid = ::OpenAPI::fromJsonValue(m_alert_display_name, json[QString("alertDisplayName")]);
    m_alert_display_name_isSet = !json[QString("alertDisplayName")].isNull() && m_alert_display_name_isValid;

    m_alert_type_isValid = ::OpenAPI::fromJsonValue(m_alert_type, json[QString("alertType")]);
    m_alert_type_isSet = !json[QString("alertType")].isNull() && m_alert_type_isValid;

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("count")]);
    m_count_isSet = !json[QString("count")].isNull() && m_count_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_effected_resource_type_isValid = ::OpenAPI::fromJsonValue(m_effected_resource_type, json[QString("effectedResourceType")]);
    m_effected_resource_type_isSet = !json[QString("effectedResourceType")].isNull() && m_effected_resource_type_isValid;

    m_log_analytics_query_isValid = ::OpenAPI::fromJsonValue(m_log_analytics_query, json[QString("logAnalyticsQuery")]);
    m_log_analytics_query_isSet = !json[QString("logAnalyticsQuery")].isNull() && m_log_analytics_query_isValid;

    m_remediation_steps_isValid = ::OpenAPI::fromJsonValue(m_remediation_steps, json[QString("remediationSteps")]);
    m_remediation_steps_isSet = !json[QString("remediationSteps")].isNull() && m_remediation_steps_isValid;

    m_reported_severity_isValid = ::OpenAPI::fromJsonValue(m_reported_severity, json[QString("reportedSeverity")]);
    m_reported_severity_isSet = !json[QString("reportedSeverity")].isNull() && m_reported_severity_isValid;

    m_system_source_isValid = ::OpenAPI::fromJsonValue(m_system_source, json[QString("systemSource")]);
    m_system_source_isSet = !json[QString("systemSource")].isNull() && m_system_source_isValid;

    m_vendor_name_isValid = ::OpenAPI::fromJsonValue(m_vendor_name, json[QString("vendorName")]);
    m_vendor_name_isSet = !json[QString("vendorName")].isNull() && m_vendor_name_isValid;
}

QString OAIIoTSecurityAggregatedAlertProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIoTSecurityAggregatedAlertProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_action_taken_isSet) {
        obj.insert(QString("actionTaken"), ::OpenAPI::toJsonValue(m_action_taken));
    }
    if (m_aggregated_date_utc_isSet) {
        obj.insert(QString("aggregatedDateUtc"), ::OpenAPI::toJsonValue(m_aggregated_date_utc));
    }
    if (m_alert_display_name_isSet) {
        obj.insert(QString("alertDisplayName"), ::OpenAPI::toJsonValue(m_alert_display_name));
    }
    if (m_alert_type_isSet) {
        obj.insert(QString("alertType"), ::OpenAPI::toJsonValue(m_alert_type));
    }
    if (m_count_isSet) {
        obj.insert(QString("count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_effected_resource_type_isSet) {
        obj.insert(QString("effectedResourceType"), ::OpenAPI::toJsonValue(m_effected_resource_type));
    }
    if (m_log_analytics_query_isSet) {
        obj.insert(QString("logAnalyticsQuery"), ::OpenAPI::toJsonValue(m_log_analytics_query));
    }
    if (m_remediation_steps_isSet) {
        obj.insert(QString("remediationSteps"), ::OpenAPI::toJsonValue(m_remediation_steps));
    }
    if (m_reported_severity_isSet) {
        obj.insert(QString("reportedSeverity"), ::OpenAPI::toJsonValue(m_reported_severity));
    }
    if (m_system_source_isSet) {
        obj.insert(QString("systemSource"), ::OpenAPI::toJsonValue(m_system_source));
    }
    if (m_vendor_name_isSet) {
        obj.insert(QString("vendorName"), ::OpenAPI::toJsonValue(m_vendor_name));
    }
    return obj;
}

QString OAIIoTSecurityAggregatedAlertProperties::getActionTaken() const {
    return m_action_taken;
}
void OAIIoTSecurityAggregatedAlertProperties::setActionTaken(const QString &action_taken) {
    m_action_taken = action_taken;
    m_action_taken_isSet = true;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_action_taken_Set() const{
    return m_action_taken_isSet;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_action_taken_Valid() const{
    return m_action_taken_isValid;
}

QDate OAIIoTSecurityAggregatedAlertProperties::getAggregatedDateUtc() const {
    return m_aggregated_date_utc;
}
void OAIIoTSecurityAggregatedAlertProperties::setAggregatedDateUtc(const QDate &aggregated_date_utc) {
    m_aggregated_date_utc = aggregated_date_utc;
    m_aggregated_date_utc_isSet = true;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_aggregated_date_utc_Set() const{
    return m_aggregated_date_utc_isSet;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_aggregated_date_utc_Valid() const{
    return m_aggregated_date_utc_isValid;
}

QString OAIIoTSecurityAggregatedAlertProperties::getAlertDisplayName() const {
    return m_alert_display_name;
}
void OAIIoTSecurityAggregatedAlertProperties::setAlertDisplayName(const QString &alert_display_name) {
    m_alert_display_name = alert_display_name;
    m_alert_display_name_isSet = true;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_alert_display_name_Set() const{
    return m_alert_display_name_isSet;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_alert_display_name_Valid() const{
    return m_alert_display_name_isValid;
}

QString OAIIoTSecurityAggregatedAlertProperties::getAlertType() const {
    return m_alert_type;
}
void OAIIoTSecurityAggregatedAlertProperties::setAlertType(const QString &alert_type) {
    m_alert_type = alert_type;
    m_alert_type_isSet = true;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_alert_type_Set() const{
    return m_alert_type_isSet;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_alert_type_Valid() const{
    return m_alert_type_isValid;
}

qint32 OAIIoTSecurityAggregatedAlertProperties::getCount() const {
    return m_count;
}
void OAIIoTSecurityAggregatedAlertProperties::setCount(const qint32 &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_count_Set() const{
    return m_count_isSet;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_count_Valid() const{
    return m_count_isValid;
}

QString OAIIoTSecurityAggregatedAlertProperties::getDescription() const {
    return m_description;
}
void OAIIoTSecurityAggregatedAlertProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIIoTSecurityAggregatedAlertProperties::getEffectedResourceType() const {
    return m_effected_resource_type;
}
void OAIIoTSecurityAggregatedAlertProperties::setEffectedResourceType(const QString &effected_resource_type) {
    m_effected_resource_type = effected_resource_type;
    m_effected_resource_type_isSet = true;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_effected_resource_type_Set() const{
    return m_effected_resource_type_isSet;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_effected_resource_type_Valid() const{
    return m_effected_resource_type_isValid;
}

QString OAIIoTSecurityAggregatedAlertProperties::getLogAnalyticsQuery() const {
    return m_log_analytics_query;
}
void OAIIoTSecurityAggregatedAlertProperties::setLogAnalyticsQuery(const QString &log_analytics_query) {
    m_log_analytics_query = log_analytics_query;
    m_log_analytics_query_isSet = true;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_log_analytics_query_Set() const{
    return m_log_analytics_query_isSet;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_log_analytics_query_Valid() const{
    return m_log_analytics_query_isValid;
}

QString OAIIoTSecurityAggregatedAlertProperties::getRemediationSteps() const {
    return m_remediation_steps;
}
void OAIIoTSecurityAggregatedAlertProperties::setRemediationSteps(const QString &remediation_steps) {
    m_remediation_steps = remediation_steps;
    m_remediation_steps_isSet = true;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_remediation_steps_Set() const{
    return m_remediation_steps_isSet;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_remediation_steps_Valid() const{
    return m_remediation_steps_isValid;
}

QString OAIIoTSecurityAggregatedAlertProperties::getReportedSeverity() const {
    return m_reported_severity;
}
void OAIIoTSecurityAggregatedAlertProperties::setReportedSeverity(const QString &reported_severity) {
    m_reported_severity = reported_severity;
    m_reported_severity_isSet = true;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_reported_severity_Set() const{
    return m_reported_severity_isSet;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_reported_severity_Valid() const{
    return m_reported_severity_isValid;
}

QString OAIIoTSecurityAggregatedAlertProperties::getSystemSource() const {
    return m_system_source;
}
void OAIIoTSecurityAggregatedAlertProperties::setSystemSource(const QString &system_source) {
    m_system_source = system_source;
    m_system_source_isSet = true;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_system_source_Set() const{
    return m_system_source_isSet;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_system_source_Valid() const{
    return m_system_source_isValid;
}

QString OAIIoTSecurityAggregatedAlertProperties::getVendorName() const {
    return m_vendor_name;
}
void OAIIoTSecurityAggregatedAlertProperties::setVendorName(const QString &vendor_name) {
    m_vendor_name = vendor_name;
    m_vendor_name_isSet = true;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_vendor_name_Set() const{
    return m_vendor_name_isSet;
}

bool OAIIoTSecurityAggregatedAlertProperties::is_vendor_name_Valid() const{
    return m_vendor_name_isValid;
}

bool OAIIoTSecurityAggregatedAlertProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_taken_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aggregated_date_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alert_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alert_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_effected_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_analytics_query_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remediation_steps_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reported_severity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vendor_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIoTSecurityAggregatedAlertProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
