/**
 * SubscriptionsManagementClient
 * The Admin Subscriptions Management Client.
 *
 * The version of the OpenAPI document: 2015-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccessibilityState from './AccessibilityState';

/**
 * The DelegatedProviderOfferProperties model module.
 * @module model/DelegatedProviderOfferProperties
 * @version 2015-11-01
 */
class DelegatedProviderOfferProperties {
    /**
     * Constructs a new <code>DelegatedProviderOfferProperties</code>.
     * Properties for an delegated provider.
     * @alias module:model/DelegatedProviderOfferProperties
     */
    constructor() { 
        
        DelegatedProviderOfferProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DelegatedProviderOfferProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DelegatedProviderOfferProperties} obj Optional instance to populate.
     * @return {module:model/DelegatedProviderOfferProperties} The populated <code>DelegatedProviderOfferProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DelegatedProviderOfferProperties();

            if (data.hasOwnProperty('accessibilityState')) {
                obj['accessibilityState'] = AccessibilityState.constructFromObject(data['accessibilityState']);
            }
            if (data.hasOwnProperty('delegatedOfferId')) {
                obj['delegatedOfferId'] = ApiClient.convertToType(data['delegatedOfferId'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('externalReferenceId')) {
                obj['externalReferenceId'] = ApiClient.convertToType(data['externalReferenceId'], 'String');
            }
            if (data.hasOwnProperty('subscriptionCount')) {
                obj['subscriptionCount'] = ApiClient.convertToType(data['subscriptionCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DelegatedProviderOfferProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DelegatedProviderOfferProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['delegatedOfferId'] && !(typeof data['delegatedOfferId'] === 'string' || data['delegatedOfferId'] instanceof String)) {
            throw new Error("Expected the field `delegatedOfferId` to be a primitive type in the JSON string but got " + data['delegatedOfferId']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['externalReferenceId'] && !(typeof data['externalReferenceId'] === 'string' || data['externalReferenceId'] instanceof String)) {
            throw new Error("Expected the field `externalReferenceId` to be a primitive type in the JSON string but got " + data['externalReferenceId']);
        }

        return true;
    }


}



/**
 * @member {module:model/AccessibilityState} accessibilityState
 */
DelegatedProviderOfferProperties.prototype['accessibilityState'] = undefined;

/**
 * The delegated offer identifier.
 * @member {String} delegatedOfferId
 */
DelegatedProviderOfferProperties.prototype['delegatedOfferId'] = undefined;

/**
 * Description of offer.
 * @member {String} description
 */
DelegatedProviderOfferProperties.prototype['description'] = undefined;

/**
 * Display name of offer.
 * @member {String} displayName
 */
DelegatedProviderOfferProperties.prototype['displayName'] = undefined;

/**
 * External reference identifier.
 * @member {String} externalReferenceId
 */
DelegatedProviderOfferProperties.prototype['externalReferenceId'] = undefined;

/**
 * Current subscription count.
 * @member {Number} subscriptionCount
 */
DelegatedProviderOfferProperties.prototype['subscriptionCount'] = undefined;






export default DelegatedProviderOfferProperties;

