# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.accessibility_state import AccessibilityState
from openapi_server import util


class DelegatedProviderOfferProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accessibility_state: AccessibilityState=None, delegated_offer_id: str=None, description: str=None, display_name: str=None, external_reference_id: str=None, subscription_count: int=None):
        """DelegatedProviderOfferProperties - a model defined in OpenAPI

        :param accessibility_state: The accessibility_state of this DelegatedProviderOfferProperties.
        :param delegated_offer_id: The delegated_offer_id of this DelegatedProviderOfferProperties.
        :param description: The description of this DelegatedProviderOfferProperties.
        :param display_name: The display_name of this DelegatedProviderOfferProperties.
        :param external_reference_id: The external_reference_id of this DelegatedProviderOfferProperties.
        :param subscription_count: The subscription_count of this DelegatedProviderOfferProperties.
        """
        self.openapi_types = {
            'accessibility_state': AccessibilityState,
            'delegated_offer_id': str,
            'description': str,
            'display_name': str,
            'external_reference_id': str,
            'subscription_count': int
        }

        self.attribute_map = {
            'accessibility_state': 'accessibilityState',
            'delegated_offer_id': 'delegatedOfferId',
            'description': 'description',
            'display_name': 'displayName',
            'external_reference_id': 'externalReferenceId',
            'subscription_count': 'subscriptionCount'
        }

        self._accessibility_state = accessibility_state
        self._delegated_offer_id = delegated_offer_id
        self._description = description
        self._display_name = display_name
        self._external_reference_id = external_reference_id
        self._subscription_count = subscription_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DelegatedProviderOfferProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DelegatedProviderOfferProperties of this DelegatedProviderOfferProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accessibility_state(self):
        """Gets the accessibility_state of this DelegatedProviderOfferProperties.


        :return: The accessibility_state of this DelegatedProviderOfferProperties.
        :rtype: AccessibilityState
        """
        return self._accessibility_state

    @accessibility_state.setter
    def accessibility_state(self, accessibility_state):
        """Sets the accessibility_state of this DelegatedProviderOfferProperties.


        :param accessibility_state: The accessibility_state of this DelegatedProviderOfferProperties.
        :type accessibility_state: AccessibilityState
        """

        self._accessibility_state = accessibility_state

    @property
    def delegated_offer_id(self):
        """Gets the delegated_offer_id of this DelegatedProviderOfferProperties.

        The delegated offer identifier.

        :return: The delegated_offer_id of this DelegatedProviderOfferProperties.
        :rtype: str
        """
        return self._delegated_offer_id

    @delegated_offer_id.setter
    def delegated_offer_id(self, delegated_offer_id):
        """Sets the delegated_offer_id of this DelegatedProviderOfferProperties.

        The delegated offer identifier.

        :param delegated_offer_id: The delegated_offer_id of this DelegatedProviderOfferProperties.
        :type delegated_offer_id: str
        """

        self._delegated_offer_id = delegated_offer_id

    @property
    def description(self):
        """Gets the description of this DelegatedProviderOfferProperties.

        Description of offer.

        :return: The description of this DelegatedProviderOfferProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DelegatedProviderOfferProperties.

        Description of offer.

        :param description: The description of this DelegatedProviderOfferProperties.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this DelegatedProviderOfferProperties.

        Display name of offer.

        :return: The display_name of this DelegatedProviderOfferProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this DelegatedProviderOfferProperties.

        Display name of offer.

        :param display_name: The display_name of this DelegatedProviderOfferProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def external_reference_id(self):
        """Gets the external_reference_id of this DelegatedProviderOfferProperties.

        External reference identifier.

        :return: The external_reference_id of this DelegatedProviderOfferProperties.
        :rtype: str
        """
        return self._external_reference_id

    @external_reference_id.setter
    def external_reference_id(self, external_reference_id):
        """Sets the external_reference_id of this DelegatedProviderOfferProperties.

        External reference identifier.

        :param external_reference_id: The external_reference_id of this DelegatedProviderOfferProperties.
        :type external_reference_id: str
        """

        self._external_reference_id = external_reference_id

    @property
    def subscription_count(self):
        """Gets the subscription_count of this DelegatedProviderOfferProperties.

        Current subscription count.

        :return: The subscription_count of this DelegatedProviderOfferProperties.
        :rtype: int
        """
        return self._subscription_count

    @subscription_count.setter
    def subscription_count(self, subscription_count):
        """Sets the subscription_count of this DelegatedProviderOfferProperties.

        Current subscription count.

        :param subscription_count: The subscription_count of this DelegatedProviderOfferProperties.
        :type subscription_count: int
        """

        self._subscription_count = subscription_count
