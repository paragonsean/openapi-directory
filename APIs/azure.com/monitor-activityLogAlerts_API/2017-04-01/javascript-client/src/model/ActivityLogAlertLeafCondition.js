/**
 * Azure Activity Log Alerts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActivityLogAlertLeafCondition model module.
 * @module model/ActivityLogAlertLeafCondition
 * @version 2017-04-01
 */
class ActivityLogAlertLeafCondition {
    /**
     * Constructs a new <code>ActivityLogAlertLeafCondition</code>.
     * An Activity Log alert condition that is met by comparing an activity log field and value.
     * @alias module:model/ActivityLogAlertLeafCondition
     * @param equals {String} The field value will be compared to this value (case-insensitive) to determine if the condition is met.
     * @param field {String} The name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.
     */
    constructor(equals, field) { 
        
        ActivityLogAlertLeafCondition.initialize(this, equals, field);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, equals, field) { 
        obj['equals'] = equals;
        obj['field'] = field;
    }

    /**
     * Constructs a <code>ActivityLogAlertLeafCondition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityLogAlertLeafCondition} obj Optional instance to populate.
     * @return {module:model/ActivityLogAlertLeafCondition} The populated <code>ActivityLogAlertLeafCondition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityLogAlertLeafCondition();

            if (data.hasOwnProperty('equals')) {
                obj['equals'] = ApiClient.convertToType(data['equals'], 'String');
            }
            if (data.hasOwnProperty('field')) {
                obj['field'] = ApiClient.convertToType(data['field'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivityLogAlertLeafCondition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivityLogAlertLeafCondition</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActivityLogAlertLeafCondition.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['equals'] && !(typeof data['equals'] === 'string' || data['equals'] instanceof String)) {
            throw new Error("Expected the field `equals` to be a primitive type in the JSON string but got " + data['equals']);
        }
        // ensure the json data is a string
        if (data['field'] && !(typeof data['field'] === 'string' || data['field'] instanceof String)) {
            throw new Error("Expected the field `field` to be a primitive type in the JSON string but got " + data['field']);
        }

        return true;
    }


}

ActivityLogAlertLeafCondition.RequiredProperties = ["equals", "field"];

/**
 * The field value will be compared to this value (case-insensitive) to determine if the condition is met.
 * @member {String} equals
 */
ActivityLogAlertLeafCondition.prototype['equals'] = undefined;

/**
 * The name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.
 * @member {String} field
 */
ActivityLogAlertLeafCondition.prototype['field'] = undefined;






export default ActivityLogAlertLeafCondition;

