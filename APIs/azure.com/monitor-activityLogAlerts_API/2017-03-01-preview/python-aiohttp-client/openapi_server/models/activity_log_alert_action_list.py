# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activity_log_alert_action_group import ActivityLogAlertActionGroup
from openapi_server import util


class ActivityLogAlertActionList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_groups: List[ActivityLogAlertActionGroup]=None):
        """ActivityLogAlertActionList - a model defined in OpenAPI

        :param action_groups: The action_groups of this ActivityLogAlertActionList.
        """
        self.openapi_types = {
            'action_groups': List[ActivityLogAlertActionGroup]
        }

        self.attribute_map = {
            'action_groups': 'actionGroups'
        }

        self._action_groups = action_groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityLogAlertActionList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityLogAlertActionList of this ActivityLogAlertActionList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_groups(self):
        """Gets the action_groups of this ActivityLogAlertActionList.

        The list of activity log alerts.

        :return: The action_groups of this ActivityLogAlertActionList.
        :rtype: List[ActivityLogAlertActionGroup]
        """
        return self._action_groups

    @action_groups.setter
    def action_groups(self, action_groups):
        """Sets the action_groups of this ActivityLogAlertActionList.

        The list of activity log alerts.

        :param action_groups: The action_groups of this ActivityLogAlertActionList.
        :type action_groups: List[ActivityLogAlertActionGroup]
        """

        self._action_groups = action_groups
