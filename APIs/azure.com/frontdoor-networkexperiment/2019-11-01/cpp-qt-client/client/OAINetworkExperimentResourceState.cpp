/**
 * NetworkExperiments
 * These are the Network Experiment APIs. 
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINetworkExperimentResourceState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINetworkExperimentResourceState::OAINetworkExperimentResourceState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINetworkExperimentResourceState::OAINetworkExperimentResourceState() {
    this->initializeModel();
}

OAINetworkExperimentResourceState::~OAINetworkExperimentResourceState() {}

void OAINetworkExperimentResourceState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAINetworkExperimentResourceState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAINetworkExperimentResourceState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Creating", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkExperimentResourceState::CREATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Enabling", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkExperimentResourceState::ENABLING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Enabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkExperimentResourceState::ENABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Disabling", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkExperimentResourceState::DISABLING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Disabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkExperimentResourceState::DISABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Deleting", Qt::CaseInsensitive) == 0) {
        m_value = eOAINetworkExperimentResourceState::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAINetworkExperimentResourceState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAINetworkExperimentResourceState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAINetworkExperimentResourceState::CREATING:
            val = "Creating";
            break;
        case eOAINetworkExperimentResourceState::ENABLING:
            val = "Enabling";
            break;
        case eOAINetworkExperimentResourceState::ENABLED:
            val = "Enabled";
            break;
        case eOAINetworkExperimentResourceState::DISABLING:
            val = "Disabling";
            break;
        case eOAINetworkExperimentResourceState::DISABLED:
            val = "Disabled";
            break;
        case eOAINetworkExperimentResourceState::DELETING:
            val = "Deleting";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAINetworkExperimentResourceState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAINetworkExperimentResourceState::eOAINetworkExperimentResourceState OAINetworkExperimentResourceState::getValue() const {
    return m_value;
}

void OAINetworkExperimentResourceState::setValue(const OAINetworkExperimentResourceState::eOAINetworkExperimentResourceState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAINetworkExperimentResourceState::isSet() const {
    
    return m_value_isSet;
}

bool OAINetworkExperimentResourceState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
