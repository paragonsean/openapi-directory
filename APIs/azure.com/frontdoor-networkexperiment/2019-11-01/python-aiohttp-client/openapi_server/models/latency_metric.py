# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LatencyMetric(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, a_c_lower95_ci: float=None, a_h_upper95_ci: float=None, a_value: float=None, b_c_lower95_ci: float=None, b_upper95_ci: float=None, b_value: float=None, delta: float=None, delta_percent: float=None, end_date_time_utc: str=None, name: str=None):
        """LatencyMetric - a model defined in OpenAPI

        :param a_c_lower95_ci: The a_c_lower95_ci of this LatencyMetric.
        :param a_h_upper95_ci: The a_h_upper95_ci of this LatencyMetric.
        :param a_value: The a_value of this LatencyMetric.
        :param b_c_lower95_ci: The b_c_lower95_ci of this LatencyMetric.
        :param b_upper95_ci: The b_upper95_ci of this LatencyMetric.
        :param b_value: The b_value of this LatencyMetric.
        :param delta: The delta of this LatencyMetric.
        :param delta_percent: The delta_percent of this LatencyMetric.
        :param end_date_time_utc: The end_date_time_utc of this LatencyMetric.
        :param name: The name of this LatencyMetric.
        """
        self.openapi_types = {
            'a_c_lower95_ci': float,
            'a_h_upper95_ci': float,
            'a_value': float,
            'b_c_lower95_ci': float,
            'b_upper95_ci': float,
            'b_value': float,
            'delta': float,
            'delta_percent': float,
            'end_date_time_utc': str,
            'name': str
        }

        self.attribute_map = {
            'a_c_lower95_ci': 'aCLower95CI',
            'a_h_upper95_ci': 'aHUpper95CI',
            'a_value': 'aValue',
            'b_c_lower95_ci': 'bCLower95CI',
            'b_upper95_ci': 'bUpper95CI',
            'b_value': 'bValue',
            'delta': 'delta',
            'delta_percent': 'deltaPercent',
            'end_date_time_utc': 'endDateTimeUTC',
            'name': 'name'
        }

        self._a_c_lower95_ci = a_c_lower95_ci
        self._a_h_upper95_ci = a_h_upper95_ci
        self._a_value = a_value
        self._b_c_lower95_ci = b_c_lower95_ci
        self._b_upper95_ci = b_upper95_ci
        self._b_value = b_value
        self._delta = delta
        self._delta_percent = delta_percent
        self._end_date_time_utc = end_date_time_utc
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LatencyMetric':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LatencyMetric of this LatencyMetric.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def a_c_lower95_ci(self):
        """Gets the a_c_lower95_ci of this LatencyMetric.

        The lower end of the 95% confidence interval for endpoint A

        :return: The a_c_lower95_ci of this LatencyMetric.
        :rtype: float
        """
        return self._a_c_lower95_ci

    @a_c_lower95_ci.setter
    def a_c_lower95_ci(self, a_c_lower95_ci):
        """Sets the a_c_lower95_ci of this LatencyMetric.

        The lower end of the 95% confidence interval for endpoint A

        :param a_c_lower95_ci: The a_c_lower95_ci of this LatencyMetric.
        :type a_c_lower95_ci: float
        """

        self._a_c_lower95_ci = a_c_lower95_ci

    @property
    def a_h_upper95_ci(self):
        """Gets the a_h_upper95_ci of this LatencyMetric.

        The upper end of the 95% confidence interval for endpoint A

        :return: The a_h_upper95_ci of this LatencyMetric.
        :rtype: float
        """
        return self._a_h_upper95_ci

    @a_h_upper95_ci.setter
    def a_h_upper95_ci(self, a_h_upper95_ci):
        """Sets the a_h_upper95_ci of this LatencyMetric.

        The upper end of the 95% confidence interval for endpoint A

        :param a_h_upper95_ci: The a_h_upper95_ci of this LatencyMetric.
        :type a_h_upper95_ci: float
        """

        self._a_h_upper95_ci = a_h_upper95_ci

    @property
    def a_value(self):
        """Gets the a_value of this LatencyMetric.

        The metric value of the A endpoint

        :return: The a_value of this LatencyMetric.
        :rtype: float
        """
        return self._a_value

    @a_value.setter
    def a_value(self, a_value):
        """Sets the a_value of this LatencyMetric.

        The metric value of the A endpoint

        :param a_value: The a_value of this LatencyMetric.
        :type a_value: float
        """

        self._a_value = a_value

    @property
    def b_c_lower95_ci(self):
        """Gets the b_c_lower95_ci of this LatencyMetric.

        The lower end of the 95% confidence interval for endpoint B

        :return: The b_c_lower95_ci of this LatencyMetric.
        :rtype: float
        """
        return self._b_c_lower95_ci

    @b_c_lower95_ci.setter
    def b_c_lower95_ci(self, b_c_lower95_ci):
        """Sets the b_c_lower95_ci of this LatencyMetric.

        The lower end of the 95% confidence interval for endpoint B

        :param b_c_lower95_ci: The b_c_lower95_ci of this LatencyMetric.
        :type b_c_lower95_ci: float
        """

        self._b_c_lower95_ci = b_c_lower95_ci

    @property
    def b_upper95_ci(self):
        """Gets the b_upper95_ci of this LatencyMetric.

        The upper end of the 95% confidence interval for endpoint B

        :return: The b_upper95_ci of this LatencyMetric.
        :rtype: float
        """
        return self._b_upper95_ci

    @b_upper95_ci.setter
    def b_upper95_ci(self, b_upper95_ci):
        """Sets the b_upper95_ci of this LatencyMetric.

        The upper end of the 95% confidence interval for endpoint B

        :param b_upper95_ci: The b_upper95_ci of this LatencyMetric.
        :type b_upper95_ci: float
        """

        self._b_upper95_ci = b_upper95_ci

    @property
    def b_value(self):
        """Gets the b_value of this LatencyMetric.

        The metric value of the B endpoint

        :return: The b_value of this LatencyMetric.
        :rtype: float
        """
        return self._b_value

    @b_value.setter
    def b_value(self, b_value):
        """Sets the b_value of this LatencyMetric.

        The metric value of the B endpoint

        :param b_value: The b_value of this LatencyMetric.
        :type b_value: float
        """

        self._b_value = b_value

    @property
    def delta(self):
        """Gets the delta of this LatencyMetric.

        The difference in value between endpoint A and B

        :return: The delta of this LatencyMetric.
        :rtype: float
        """
        return self._delta

    @delta.setter
    def delta(self, delta):
        """Sets the delta of this LatencyMetric.

        The difference in value between endpoint A and B

        :param delta: The delta of this LatencyMetric.
        :type delta: float
        """

        self._delta = delta

    @property
    def delta_percent(self):
        """Gets the delta_percent of this LatencyMetric.

        The percent difference between endpoint A and B

        :return: The delta_percent of this LatencyMetric.
        :rtype: float
        """
        return self._delta_percent

    @delta_percent.setter
    def delta_percent(self, delta_percent):
        """Sets the delta_percent of this LatencyMetric.

        The percent difference between endpoint A and B

        :param delta_percent: The delta_percent of this LatencyMetric.
        :type delta_percent: float
        """

        self._delta_percent = delta_percent

    @property
    def end_date_time_utc(self):
        """Gets the end_date_time_utc of this LatencyMetric.

        The end time of the Latency Scorecard in UTC

        :return: The end_date_time_utc of this LatencyMetric.
        :rtype: str
        """
        return self._end_date_time_utc

    @end_date_time_utc.setter
    def end_date_time_utc(self, end_date_time_utc):
        """Sets the end_date_time_utc of this LatencyMetric.

        The end time of the Latency Scorecard in UTC

        :param end_date_time_utc: The end_date_time_utc of this LatencyMetric.
        :type end_date_time_utc: str
        """

        self._end_date_time_utc = end_date_time_utc

    @property
    def name(self):
        """Gets the name of this LatencyMetric.

        The name of the Latency Metric

        :return: The name of this LatencyMetric.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LatencyMetric.

        The name of the Latency Metric

        :param name: The name of this LatencyMetric.
        :type name: str
        """

        self._name = name
