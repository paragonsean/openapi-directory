# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProfileUpdateProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled_state: str=None):
        """ProfileUpdateProperties - a model defined in OpenAPI

        :param enabled_state: The enabled_state of this ProfileUpdateProperties.
        """
        self.openapi_types = {
            'enabled_state': str
        }

        self.attribute_map = {
            'enabled_state': 'enabledState'
        }

        self._enabled_state = enabled_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfileUpdateProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProfileUpdateProperties of this ProfileUpdateProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled_state(self):
        """Gets the enabled_state of this ProfileUpdateProperties.

        The enabled state of the Profile

        :return: The enabled_state of this ProfileUpdateProperties.
        :rtype: str
        """
        return self._enabled_state

    @enabled_state.setter
    def enabled_state(self, enabled_state):
        """Sets the enabled_state of this ProfileUpdateProperties.

        The enabled state of the Profile

        :param enabled_state: The enabled_state of this ProfileUpdateProperties.
        :type enabled_state: str
        """
        allowed_values = ["Enabled", "Disabled"]  # noqa: E501
        if enabled_state not in allowed_values:
            raise ValueError(
                "Invalid value for `enabled_state` ({0}), must be one of {1}"
                .format(enabled_state, allowed_values)
            )

        self._enabled_state = enabled_state
