# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.endpoint import Endpoint
from openapi_server.models.network_experiment_resource_state import NetworkExperimentResourceState
from openapi_server import util


class ExperimentProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, enabled_state: str=None, endpoint_a: Endpoint=None, endpoint_b: Endpoint=None, resource_state: NetworkExperimentResourceState=None, script_file_uri: str=None, status: str=None):
        """ExperimentProperties - a model defined in OpenAPI

        :param description: The description of this ExperimentProperties.
        :param enabled_state: The enabled_state of this ExperimentProperties.
        :param endpoint_a: The endpoint_a of this ExperimentProperties.
        :param endpoint_b: The endpoint_b of this ExperimentProperties.
        :param resource_state: The resource_state of this ExperimentProperties.
        :param script_file_uri: The script_file_uri of this ExperimentProperties.
        :param status: The status of this ExperimentProperties.
        """
        self.openapi_types = {
            'description': str,
            'enabled_state': str,
            'endpoint_a': Endpoint,
            'endpoint_b': Endpoint,
            'resource_state': NetworkExperimentResourceState,
            'script_file_uri': str,
            'status': str
        }

        self.attribute_map = {
            'description': 'description',
            'enabled_state': 'enabledState',
            'endpoint_a': 'endpointA',
            'endpoint_b': 'endpointB',
            'resource_state': 'resourceState',
            'script_file_uri': 'scriptFileUri',
            'status': 'status'
        }

        self._description = description
        self._enabled_state = enabled_state
        self._endpoint_a = endpoint_a
        self._endpoint_b = endpoint_b
        self._resource_state = resource_state
        self._script_file_uri = script_file_uri
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExperimentProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExperimentProperties of this ExperimentProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ExperimentProperties.

        The description of the details or intents of the Experiment

        :return: The description of this ExperimentProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ExperimentProperties.

        The description of the details or intents of the Experiment

        :param description: The description of this ExperimentProperties.
        :type description: str
        """

        self._description = description

    @property
    def enabled_state(self):
        """Gets the enabled_state of this ExperimentProperties.

        The state of the Experiment

        :return: The enabled_state of this ExperimentProperties.
        :rtype: str
        """
        return self._enabled_state

    @enabled_state.setter
    def enabled_state(self, enabled_state):
        """Sets the enabled_state of this ExperimentProperties.

        The state of the Experiment

        :param enabled_state: The enabled_state of this ExperimentProperties.
        :type enabled_state: str
        """
        allowed_values = ["Enabled", "Disabled"]  # noqa: E501
        if enabled_state not in allowed_values:
            raise ValueError(
                "Invalid value for `enabled_state` ({0}), must be one of {1}"
                .format(enabled_state, allowed_values)
            )

        self._enabled_state = enabled_state

    @property
    def endpoint_a(self):
        """Gets the endpoint_a of this ExperimentProperties.


        :return: The endpoint_a of this ExperimentProperties.
        :rtype: Endpoint
        """
        return self._endpoint_a

    @endpoint_a.setter
    def endpoint_a(self, endpoint_a):
        """Sets the endpoint_a of this ExperimentProperties.


        :param endpoint_a: The endpoint_a of this ExperimentProperties.
        :type endpoint_a: Endpoint
        """

        self._endpoint_a = endpoint_a

    @property
    def endpoint_b(self):
        """Gets the endpoint_b of this ExperimentProperties.


        :return: The endpoint_b of this ExperimentProperties.
        :rtype: Endpoint
        """
        return self._endpoint_b

    @endpoint_b.setter
    def endpoint_b(self, endpoint_b):
        """Sets the endpoint_b of this ExperimentProperties.


        :param endpoint_b: The endpoint_b of this ExperimentProperties.
        :type endpoint_b: Endpoint
        """

        self._endpoint_b = endpoint_b

    @property
    def resource_state(self):
        """Gets the resource_state of this ExperimentProperties.


        :return: The resource_state of this ExperimentProperties.
        :rtype: NetworkExperimentResourceState
        """
        return self._resource_state

    @resource_state.setter
    def resource_state(self, resource_state):
        """Sets the resource_state of this ExperimentProperties.


        :param resource_state: The resource_state of this ExperimentProperties.
        :type resource_state: NetworkExperimentResourceState
        """

        self._resource_state = resource_state

    @property
    def script_file_uri(self):
        """Gets the script_file_uri of this ExperimentProperties.

        The uri to the Script used in the Experiment

        :return: The script_file_uri of this ExperimentProperties.
        :rtype: str
        """
        return self._script_file_uri

    @script_file_uri.setter
    def script_file_uri(self, script_file_uri):
        """Sets the script_file_uri of this ExperimentProperties.

        The uri to the Script used in the Experiment

        :param script_file_uri: The script_file_uri of this ExperimentProperties.
        :type script_file_uri: str
        """

        self._script_file_uri = script_file_uri

    @property
    def status(self):
        """Gets the status of this ExperimentProperties.

        The description of Experiment status from the server side

        :return: The status of this ExperimentProperties.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ExperimentProperties.

        The description of Experiment status from the server side

        :param status: The status of this ExperimentProperties.
        :type status: str
        """

        self._status = status
