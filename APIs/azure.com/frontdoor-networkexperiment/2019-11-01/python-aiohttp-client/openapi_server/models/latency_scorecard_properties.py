# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.latency_metric import LatencyMetric
from openapi_server import util


class LatencyScorecardProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, description: str=None, end_date_time_utc: datetime=None, endpoint_a: str=None, endpoint_b: str=None, id: str=None, latency_metrics: List[LatencyMetric]=None, name: str=None, start_date_time_utc: datetime=None):
        """LatencyScorecardProperties - a model defined in OpenAPI

        :param country: The country of this LatencyScorecardProperties.
        :param description: The description of this LatencyScorecardProperties.
        :param end_date_time_utc: The end_date_time_utc of this LatencyScorecardProperties.
        :param endpoint_a: The endpoint_a of this LatencyScorecardProperties.
        :param endpoint_b: The endpoint_b of this LatencyScorecardProperties.
        :param id: The id of this LatencyScorecardProperties.
        :param latency_metrics: The latency_metrics of this LatencyScorecardProperties.
        :param name: The name of this LatencyScorecardProperties.
        :param start_date_time_utc: The start_date_time_utc of this LatencyScorecardProperties.
        """
        self.openapi_types = {
            'country': str,
            'description': str,
            'end_date_time_utc': datetime,
            'endpoint_a': str,
            'endpoint_b': str,
            'id': str,
            'latency_metrics': List[LatencyMetric],
            'name': str,
            'start_date_time_utc': datetime
        }

        self.attribute_map = {
            'country': 'country',
            'description': 'description',
            'end_date_time_utc': 'endDateTimeUTC',
            'endpoint_a': 'endpointA',
            'endpoint_b': 'endpointB',
            'id': 'id',
            'latency_metrics': 'latencyMetrics',
            'name': 'name',
            'start_date_time_utc': 'startDateTimeUTC'
        }

        self._country = country
        self._description = description
        self._end_date_time_utc = end_date_time_utc
        self._endpoint_a = endpoint_a
        self._endpoint_b = endpoint_b
        self._id = id
        self._latency_metrics = latency_metrics
        self._name = name
        self._start_date_time_utc = start_date_time_utc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LatencyScorecardProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LatencyScorecardProperties of this LatencyScorecardProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this LatencyScorecardProperties.

        The country associated with the Latency Scorecard. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html

        :return: The country of this LatencyScorecardProperties.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this LatencyScorecardProperties.

        The country associated with the Latency Scorecard. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html

        :param country: The country of this LatencyScorecardProperties.
        :type country: str
        """

        self._country = country

    @property
    def description(self):
        """Gets the description of this LatencyScorecardProperties.

        The description of the Latency Scorecard

        :return: The description of this LatencyScorecardProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this LatencyScorecardProperties.

        The description of the Latency Scorecard

        :param description: The description of this LatencyScorecardProperties.
        :type description: str
        """

        self._description = description

    @property
    def end_date_time_utc(self):
        """Gets the end_date_time_utc of this LatencyScorecardProperties.

        The end time of the Latency Scorecard in UTC

        :return: The end_date_time_utc of this LatencyScorecardProperties.
        :rtype: datetime
        """
        return self._end_date_time_utc

    @end_date_time_utc.setter
    def end_date_time_utc(self, end_date_time_utc):
        """Sets the end_date_time_utc of this LatencyScorecardProperties.

        The end time of the Latency Scorecard in UTC

        :param end_date_time_utc: The end_date_time_utc of this LatencyScorecardProperties.
        :type end_date_time_utc: datetime
        """

        self._end_date_time_utc = end_date_time_utc

    @property
    def endpoint_a(self):
        """Gets the endpoint_a of this LatencyScorecardProperties.

        The A endpoint in the scorecard

        :return: The endpoint_a of this LatencyScorecardProperties.
        :rtype: str
        """
        return self._endpoint_a

    @endpoint_a.setter
    def endpoint_a(self, endpoint_a):
        """Sets the endpoint_a of this LatencyScorecardProperties.

        The A endpoint in the scorecard

        :param endpoint_a: The endpoint_a of this LatencyScorecardProperties.
        :type endpoint_a: str
        """

        self._endpoint_a = endpoint_a

    @property
    def endpoint_b(self):
        """Gets the endpoint_b of this LatencyScorecardProperties.

        The B endpoint in the scorecard

        :return: The endpoint_b of this LatencyScorecardProperties.
        :rtype: str
        """
        return self._endpoint_b

    @endpoint_b.setter
    def endpoint_b(self, endpoint_b):
        """Sets the endpoint_b of this LatencyScorecardProperties.

        The B endpoint in the scorecard

        :param endpoint_b: The endpoint_b of this LatencyScorecardProperties.
        :type endpoint_b: str
        """

        self._endpoint_b = endpoint_b

    @property
    def id(self):
        """Gets the id of this LatencyScorecardProperties.

        The unique identifier of the Latency Scorecard

        :return: The id of this LatencyScorecardProperties.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LatencyScorecardProperties.

        The unique identifier of the Latency Scorecard

        :param id: The id of this LatencyScorecardProperties.
        :type id: str
        """

        self._id = id

    @property
    def latency_metrics(self):
        """Gets the latency_metrics of this LatencyScorecardProperties.

        The latency metrics of the Latency Scorecard

        :return: The latency_metrics of this LatencyScorecardProperties.
        :rtype: List[LatencyMetric]
        """
        return self._latency_metrics

    @latency_metrics.setter
    def latency_metrics(self, latency_metrics):
        """Sets the latency_metrics of this LatencyScorecardProperties.

        The latency metrics of the Latency Scorecard

        :param latency_metrics: The latency_metrics of this LatencyScorecardProperties.
        :type latency_metrics: List[LatencyMetric]
        """

        self._latency_metrics = latency_metrics

    @property
    def name(self):
        """Gets the name of this LatencyScorecardProperties.

        The name of the Latency Scorecard

        :return: The name of this LatencyScorecardProperties.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LatencyScorecardProperties.

        The name of the Latency Scorecard

        :param name: The name of this LatencyScorecardProperties.
        :type name: str
        """

        self._name = name

    @property
    def start_date_time_utc(self):
        """Gets the start_date_time_utc of this LatencyScorecardProperties.

        The start time of the Latency Scorecard in UTC

        :return: The start_date_time_utc of this LatencyScorecardProperties.
        :rtype: datetime
        """
        return self._start_date_time_utc

    @start_date_time_utc.setter
    def start_date_time_utc(self, start_date_time_utc):
        """Sets the start_date_time_utc of this LatencyScorecardProperties.

        The start time of the Latency Scorecard in UTC

        :param start_date_time_utc: The start_date_time_utc of this LatencyScorecardProperties.
        :type start_date_time_utc: datetime
        """

        self._start_date_time_utc = start_date_time_utc
