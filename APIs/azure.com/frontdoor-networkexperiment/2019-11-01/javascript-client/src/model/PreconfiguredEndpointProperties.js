/**
 * NetworkExperiments
 * These are the Network Experiment APIs. 
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PreconfiguredEndpointProperties model module.
 * @module model/PreconfiguredEndpointProperties
 * @version 2019-11-01
 */
class PreconfiguredEndpointProperties {
    /**
     * Constructs a new <code>PreconfiguredEndpointProperties</code>.
     * Defines the properties of a preconfigured endpoint
     * @alias module:model/PreconfiguredEndpointProperties
     */
    constructor() { 
        
        PreconfiguredEndpointProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PreconfiguredEndpointProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PreconfiguredEndpointProperties} obj Optional instance to populate.
     * @return {module:model/PreconfiguredEndpointProperties} The populated <code>PreconfiguredEndpointProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PreconfiguredEndpointProperties();

            if (data.hasOwnProperty('backend')) {
                obj['backend'] = ApiClient.convertToType(data['backend'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('endpointType')) {
                obj['endpointType'] = ApiClient.convertToType(data['endpointType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PreconfiguredEndpointProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PreconfiguredEndpointProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['backend'] && !(typeof data['backend'] === 'string' || data['backend'] instanceof String)) {
            throw new Error("Expected the field `backend` to be a primitive type in the JSON string but got " + data['backend']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['endpointType'] && !(typeof data['endpointType'] === 'string' || data['endpointType'] instanceof String)) {
            throw new Error("Expected the field `endpointType` to be a primitive type in the JSON string but got " + data['endpointType']);
        }

        return true;
    }


}



/**
 * The preconfigured endpoint backend
 * @member {String} backend
 */
PreconfiguredEndpointProperties.prototype['backend'] = undefined;

/**
 * The description of the endpoint
 * @member {String} description
 */
PreconfiguredEndpointProperties.prototype['description'] = undefined;

/**
 * The endpoint that is preconfigured
 * @member {String} endpoint
 */
PreconfiguredEndpointProperties.prototype['endpoint'] = undefined;

/**
 * The type of endpoint
 * @member {module:model/PreconfiguredEndpointProperties.EndpointTypeEnum} endpointType
 */
PreconfiguredEndpointProperties.prototype['endpointType'] = undefined;





/**
 * Allowed values for the <code>endpointType</code> property.
 * @enum {String}
 * @readonly
 */
PreconfiguredEndpointProperties['EndpointTypeEnum'] = {

    /**
     * value: "AFD"
     * @const
     */
    "AFD": "AFD",

    /**
     * value: "AzureRegion"
     * @const
     */
    "AzureRegion": "AzureRegion",

    /**
     * value: "CDN"
     * @const
     */
    "CDN": "CDN",

    /**
     * value: "ATM"
     * @const
     */
    "ATM": "ATM"
};



export default PreconfiguredEndpointProperties;

