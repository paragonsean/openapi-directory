/*
 * NetworkExperiments
 * These are the Network Experiment APIs. 
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Defines the properties of a latency metric used in the latency scorecard
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:31:41.448584-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LatencyMetric {
  public static final String SERIALIZED_NAME_A_C_LOWER95_C_I = "aCLower95CI";
  @SerializedName(SERIALIZED_NAME_A_C_LOWER95_C_I)
  private BigDecimal aCLower95CI;

  public static final String SERIALIZED_NAME_A_H_UPPER95_C_I = "aHUpper95CI";
  @SerializedName(SERIALIZED_NAME_A_H_UPPER95_C_I)
  private BigDecimal aHUpper95CI;

  public static final String SERIALIZED_NAME_A_VALUE = "aValue";
  @SerializedName(SERIALIZED_NAME_A_VALUE)
  private BigDecimal aValue;

  public static final String SERIALIZED_NAME_B_C_LOWER95_C_I = "bCLower95CI";
  @SerializedName(SERIALIZED_NAME_B_C_LOWER95_C_I)
  private BigDecimal bCLower95CI;

  public static final String SERIALIZED_NAME_B_UPPER95_C_I = "bUpper95CI";
  @SerializedName(SERIALIZED_NAME_B_UPPER95_C_I)
  private BigDecimal bUpper95CI;

  public static final String SERIALIZED_NAME_B_VALUE = "bValue";
  @SerializedName(SERIALIZED_NAME_B_VALUE)
  private BigDecimal bValue;

  public static final String SERIALIZED_NAME_DELTA = "delta";
  @SerializedName(SERIALIZED_NAME_DELTA)
  private BigDecimal delta;

  public static final String SERIALIZED_NAME_DELTA_PERCENT = "deltaPercent";
  @SerializedName(SERIALIZED_NAME_DELTA_PERCENT)
  private BigDecimal deltaPercent;

  public static final String SERIALIZED_NAME_END_DATE_TIME_U_T_C = "endDateTimeUTC";
  @SerializedName(SERIALIZED_NAME_END_DATE_TIME_U_T_C)
  private String endDateTimeUTC;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public LatencyMetric() {
  }

  public LatencyMetric(
     BigDecimal aCLower95CI, 
     BigDecimal aHUpper95CI, 
     BigDecimal aValue, 
     BigDecimal bCLower95CI, 
     BigDecimal bUpper95CI, 
     BigDecimal bValue, 
     BigDecimal delta, 
     BigDecimal deltaPercent, 
     String endDateTimeUTC, 
     String name
  ) {
    this();
    this.aCLower95CI = aCLower95CI;
    this.aHUpper95CI = aHUpper95CI;
    this.aValue = aValue;
    this.bCLower95CI = bCLower95CI;
    this.bUpper95CI = bUpper95CI;
    this.bValue = bValue;
    this.delta = delta;
    this.deltaPercent = deltaPercent;
    this.endDateTimeUTC = endDateTimeUTC;
    this.name = name;
  }

  /**
   * The lower end of the 95% confidence interval for endpoint A
   * @return aCLower95CI
   */
  @javax.annotation.Nullable
  public BigDecimal getaCLower95CI() {
    return aCLower95CI;
  }



  /**
   * The upper end of the 95% confidence interval for endpoint A
   * @return aHUpper95CI
   */
  @javax.annotation.Nullable
  public BigDecimal getaHUpper95CI() {
    return aHUpper95CI;
  }



  /**
   * The metric value of the A endpoint
   * @return aValue
   */
  @javax.annotation.Nullable
  public BigDecimal getaValue() {
    return aValue;
  }



  /**
   * The lower end of the 95% confidence interval for endpoint B
   * @return bCLower95CI
   */
  @javax.annotation.Nullable
  public BigDecimal getbCLower95CI() {
    return bCLower95CI;
  }



  /**
   * The upper end of the 95% confidence interval for endpoint B
   * @return bUpper95CI
   */
  @javax.annotation.Nullable
  public BigDecimal getbUpper95CI() {
    return bUpper95CI;
  }



  /**
   * The metric value of the B endpoint
   * @return bValue
   */
  @javax.annotation.Nullable
  public BigDecimal getbValue() {
    return bValue;
  }



  /**
   * The difference in value between endpoint A and B
   * @return delta
   */
  @javax.annotation.Nullable
  public BigDecimal getDelta() {
    return delta;
  }



  /**
   * The percent difference between endpoint A and B
   * @return deltaPercent
   */
  @javax.annotation.Nullable
  public BigDecimal getDeltaPercent() {
    return deltaPercent;
  }



  /**
   * The end time of the Latency Scorecard in UTC
   * @return endDateTimeUTC
   */
  @javax.annotation.Nullable
  public String getEndDateTimeUTC() {
    return endDateTimeUTC;
  }



  /**
   * The name of the Latency Metric
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LatencyMetric latencyMetric = (LatencyMetric) o;
    return Objects.equals(this.aCLower95CI, latencyMetric.aCLower95CI) &&
        Objects.equals(this.aHUpper95CI, latencyMetric.aHUpper95CI) &&
        Objects.equals(this.aValue, latencyMetric.aValue) &&
        Objects.equals(this.bCLower95CI, latencyMetric.bCLower95CI) &&
        Objects.equals(this.bUpper95CI, latencyMetric.bUpper95CI) &&
        Objects.equals(this.bValue, latencyMetric.bValue) &&
        Objects.equals(this.delta, latencyMetric.delta) &&
        Objects.equals(this.deltaPercent, latencyMetric.deltaPercent) &&
        Objects.equals(this.endDateTimeUTC, latencyMetric.endDateTimeUTC) &&
        Objects.equals(this.name, latencyMetric.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aCLower95CI, aHUpper95CI, aValue, bCLower95CI, bUpper95CI, bValue, delta, deltaPercent, endDateTimeUTC, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LatencyMetric {\n");
    sb.append("    aCLower95CI: ").append(toIndentedString(aCLower95CI)).append("\n");
    sb.append("    aHUpper95CI: ").append(toIndentedString(aHUpper95CI)).append("\n");
    sb.append("    aValue: ").append(toIndentedString(aValue)).append("\n");
    sb.append("    bCLower95CI: ").append(toIndentedString(bCLower95CI)).append("\n");
    sb.append("    bUpper95CI: ").append(toIndentedString(bUpper95CI)).append("\n");
    sb.append("    bValue: ").append(toIndentedString(bValue)).append("\n");
    sb.append("    delta: ").append(toIndentedString(delta)).append("\n");
    sb.append("    deltaPercent: ").append(toIndentedString(deltaPercent)).append("\n");
    sb.append("    endDateTimeUTC: ").append(toIndentedString(endDateTimeUTC)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aCLower95CI");
    openapiFields.add("aHUpper95CI");
    openapiFields.add("aValue");
    openapiFields.add("bCLower95CI");
    openapiFields.add("bUpper95CI");
    openapiFields.add("bValue");
    openapiFields.add("delta");
    openapiFields.add("deltaPercent");
    openapiFields.add("endDateTimeUTC");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LatencyMetric
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LatencyMetric.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LatencyMetric is not found in the empty JSON string", LatencyMetric.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LatencyMetric.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LatencyMetric` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("endDateTimeUTC") != null && !jsonObj.get("endDateTimeUTC").isJsonNull()) && !jsonObj.get("endDateTimeUTC").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDateTimeUTC` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDateTimeUTC").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LatencyMetric.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LatencyMetric' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LatencyMetric> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LatencyMetric.class));

       return (TypeAdapter<T>) new TypeAdapter<LatencyMetric>() {
           @Override
           public void write(JsonWriter out, LatencyMetric value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LatencyMetric read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LatencyMetric given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LatencyMetric
   * @throws IOException if the JSON string is invalid with respect to LatencyMetric
   */
  public static LatencyMetric fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LatencyMetric.class);
  }

  /**
   * Convert an instance of LatencyMetric to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

