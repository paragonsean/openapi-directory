/*
 * NetworkExperiments
 * These are the Network Experiment APIs. 
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.Experiment;
import org.openapitools.client.model.ExperimentList;
import org.openapitools.client.model.ExperimentUpdateModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExperimentsApi
 */
@Disabled
public class ExperimentsApiTest {

    private final ExperimentsApi api = new ExperimentsApi();

    /**
     * Creates or updates an Experiment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void experimentsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String profileName = null;
        String experimentName = null;
        Experiment parameters = null;
        Experiment response = api.experimentsCreateOrUpdate(subscriptionId, apiVersion, resourceGroupName, profileName, experimentName, parameters);
        // TODO: test validations
    }

    /**
     * Deletes an Experiment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void experimentsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String profileName = null;
        String experimentName = null;
        api.experimentsDelete(subscriptionId, apiVersion, resourceGroupName, profileName, experimentName);
        // TODO: test validations
    }

    /**
     * Gets an Experiment by ExperimentName
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void experimentsGetTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String profileName = null;
        String experimentName = null;
        Experiment response = api.experimentsGet(subscriptionId, apiVersion, resourceGroupName, profileName, experimentName);
        // TODO: test validations
    }

    /**
     * Gets a list of Experiments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void experimentsListByProfileTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String profileName = null;
        ExperimentList response = api.experimentsListByProfile(subscriptionId, apiVersion, resourceGroupName, profileName);
        // TODO: test validations
    }

    /**
     * Updates an Experiment by Experiment id
     *
     * Updates an Experiment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void experimentsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        String resourceGroupName = null;
        String profileName = null;
        String experimentName = null;
        ExperimentUpdateModel parameters = null;
        Experiment response = api.experimentsUpdate(subscriptionId, apiVersion, resourceGroupName, profileName, experimentName, parameters);
        // TODO: test validations
    }

}
