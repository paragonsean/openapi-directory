openapi: 3.0.1
info:
  description: The Microsoft Azure Network management API provides a RESTful set of
    web services that interact with Microsoft Azure Networks service to manage your
    network resources. The API has entities that capture the relationship between
    an end user and the Microsoft Azure Networks service.
  title: NetworkManagementClient
  version: 2016-09-01
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2016-09-01/networkWatcher.json
    version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: network-networkWatcher
  x-tags:
  - Azure
  - Microsoft
servers:
- url: https://management.azure.com/
security:
- azure_auth:
  - user_impersonation
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/networkWatchers:
    get:
      description: Gets all network watchers by subscription.
      operationId: NetworkWatchers_ListAll
      parameters:
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcherListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcherListResult'
          description: Request successful. The operation returns a list of network
            watcher resources.
      tags:
      - NetworkWatchers
      x-ms-pageable: {}
      x-accepts:
      - application/json
      - text/json
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers:
    get:
      description: Gets all network watchers by resource group.
      operationId: NetworkWatchers_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcherListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcherListResult'
          description: Request successful. The operation returns a list of network
            watcher resources.
      tags:
      - NetworkWatchers
      x-ms-pageable: {}
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}
  : delete:
      description: Deletes the specified network watcher resource.
      operationId: NetworkWatchers_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: Accepted and the operation will complete asynchronously.
        "204":
          content: {}
          description: Delete successful.
      tags:
      - NetworkWatchers
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets the specified network watcher by resource group.
      operationId: NetworkWatchers_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcher'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcher'
          description: Request successful. The operation returns a network watcher
            resource.
      tags:
      - NetworkWatchers
      x-accepts:
      - application/json
      - text/json
    put:
      description: Creates or updates a network watcher in the specified resource
        group.
      operationId: NetworkWatchers_CreateOrUpdate
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkWatcher'
          text/json:
            schema:
              $ref: '#/components/schemas/NetworkWatcher'
        description: Parameters that define the network watcher resource.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcher'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcher'
          description: Update successful. The operation returns the resulting network
            watcher resource.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcher'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkWatcher'
          description: Create successful. The operation returns the resulting network
            watcher resource.
      tags:
      - NetworkWatchers
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog
  : post:
      description: Configures flow log on a specified resource.
      operationId: NetworkWatchers_SetFlowLogConfiguration
      parameters:
      - description: The name of the network watcher resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher resource.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowLogInformation'
          text/json:
            schema:
              $ref: '#/components/schemas/FlowLogInformation'
        description: Parameters that define the configuration of flow log.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLogInformation'
            text/json:
              schema:
                $ref: '#/components/schemas/FlowLogInformation'
          description: Successful request for setting flow log configuration.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLogInformation'
            text/json:
              schema:
                $ref: '#/components/schemas/FlowLogInformation'
          description: Accepted and the operation will complete asynchronously.
      tags:
      - NetworkWatchers
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify
  : post:
      description: Verify IP flow from the specified VM to a location given the currently
        configured NSG rules.
      operationId: NetworkWatchers_VerifyIPFlow
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationIPFlowParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/VerificationIPFlowParameters'
        description: Parameters that define the IP flow to be verified.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationIPFlowResult'
            text/json:
              schema:
                $ref: '#/components/schemas/VerificationIPFlowResult'
          description: Request successful. The operation returns the result of IP
            flow verification.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationIPFlowResult'
            text/json:
              schema:
                $ref: '#/components/schemas/VerificationIPFlowResult'
          description: Accepted and the operation will complete asynchronously.
      tags:
      - NetworkWatchers
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop
  : post:
      description: Gets the next hop from the specified VM.
      operationId: NetworkWatchers_GetNextHop
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NextHopParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/NextHopParameters'
        description: Parameters that define the source and destination endpoint.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextHopResult'
            text/json:
              schema:
                $ref: '#/components/schemas/NextHopResult'
          description: Request successful. The operation returns the next hop from
            the VM.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextHopResult'
            text/json:
              schema:
                $ref: '#/components/schemas/NextHopResult'
          description: Accepted and the operation will complete asynchronously.
      tags:
      - NetworkWatchers
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures
  : get:
      description: Lists all packet capture sessions within the specified resource
        group.
      operationId: PacketCaptures_List
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Network Watcher resource.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureListResult'
          description: Successful packet capture enumeration request.
      tags:
      - PacketCaptures
      x-ms-pageable: {}
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}
  : delete:
      description: Deletes the specified packet capture session.
      operationId: PacketCaptures_Delete
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: The name of the packet capture session.
        in: path
        name: packetCaptureName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: Accepted and the operation will complete asynchronously.
        "204":
          content: {}
          description: Delete successful.
      tags:
      - PacketCaptures
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
    get:
      description: Gets a packet capture session by name.
      operationId: PacketCaptures_Get
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: The name of the packet capture session.
        in: path
        name: packetCaptureName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureResult'
          description: Request successful. The operation returns a packet capture
            session.
      tags:
      - PacketCaptures
      x-accepts:
      - application/json
      - text/json
    put:
      description: Create and start a packet capture on the specified VM.
      operationId: PacketCaptures_Create
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: The name of the packet capture session.
        in: path
        name: packetCaptureName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PacketCapture'
          text/json:
            schema:
              $ref: '#/components/schemas/PacketCapture'
        description: Parameters that define the create packet capture operation.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureResult'
          description: Request successful. The operation returns the resulting packet
            capture session.
      tags:
      - PacketCaptures
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus
  : post:
      description: Query the status of a running packet capture session.
      operationId: PacketCaptures_GetStatus
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the Network Watcher resource.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: The name given to the packet capture session.
        in: path
        name: packetCaptureName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureQueryStatusResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureQueryStatusResult'
          description: Successful query of packet capture status.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureQueryStatusResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureQueryStatusResult'
          description: Accepted query status of packet capture.
      tags:
      - PacketCaptures
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop
  : post:
      description: Stops a specified packet capture session.
      operationId: PacketCaptures_Stop
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: The name of the packet capture session.
        in: path
        name: packetCaptureName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Request successful. The operation stops the packet capture
            session.
        "202":
          content: {}
          description: Accepted and the operation will complete asynchronously.
      tags:
      - PacketCaptures
      x-ms-long-running-operation: true
      x-accepts:
      - application/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus
  : post:
      description: Queries status of flow log on a specified resource.
      operationId: NetworkWatchers_GetFlowLogStatus
      parameters:
      - description: The name of the network watcher resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher resource.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowLogStatusParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/FlowLogStatusParameters'
        description: Parameters that define a resource to query flow log status.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLogInformation'
            text/json:
              schema:
                $ref: '#/components/schemas/FlowLogInformation'
          description: Successful request for query flow log status.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowLogInformation'
            text/json:
              schema:
                $ref: '#/components/schemas/FlowLogInformation'
          description: Accepted and the operation will complete asynchronously.
      tags:
      - NetworkWatchers
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult
  : post:
      description: Get the last completed troubleshooting result on a specified resource
      operationId: NetworkWatchers_GetTroubleshootingResult
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher resource.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryTroubleshootingParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/QueryTroubleshootingParameters'
        description: Parameters that define the resource to query the troubleshooting
          result.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TroubleshootingResult'
            text/json:
              schema:
                $ref: '#/components/schemas/TroubleshootingResult'
          description: Successful get troubleshooting result request
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TroubleshootingResult'
            text/json:
              schema:
                $ref: '#/components/schemas/TroubleshootingResult'
          description: Accepted get troubleshooting result request.
      tags:
      - NetworkWatchers
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView
  : post:
      description: Gets the configured and effective security group rules on the specified
        VM.
      operationId: NetworkWatchers_GetVMSecurityRules
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityGroupViewParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityGroupViewParameters'
        description: Parameters that define the VM to check security groups for.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupViewResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupViewResult'
          description: Request successful. The operation returns security group rules
            on the VM.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupViewResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupViewResult'
          description: Accepted and the operation will complete asynchronously.
      tags:
      - NetworkWatchers
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/topology
  : post:
      description: Gets the current network topology by resource group.
      operationId: NetworkWatchers_GetTopology
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/TopologyParameters'
        description: Parameters that define the representation of topology.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topology'
            text/json:
              schema:
                $ref: '#/components/schemas/Topology'
          description: Request successful. The operation returns the topology of resource
            group.
      tags:
      - NetworkWatchers
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  ? /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot
  : post:
      description: Initiate troubleshooting on a specified resource
      operationId: NetworkWatchers_GetTroubleshooting
      parameters:
      - description: The name of the resource group.
        in: path
        name: resourceGroupName
        required: true
        schema:
          type: string
      - description: The name of the network watcher resource.
        in: path
        name: networkWatcherName
        required: true
        schema:
          type: string
      - description: Client API version.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      - description: The subscription credentials which uniquely identify the Microsoft
          Azure subscription. The subscription ID forms part of the URI for every
          service call.
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TroubleshootingParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/TroubleshootingParameters'
        description: Parameters that define the resource to troubleshoot.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TroubleshootingResult'
            text/json:
              schema:
                $ref: '#/components/schemas/TroubleshootingResult'
          description: Successful troubleshooting request
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TroubleshootingResult'
            text/json:
              schema:
                $ref: '#/components/schemas/TroubleshootingResult'
          description: Accepted get troubleshooting request.
      tags:
      - NetworkWatchers
      x-ms-long-running-operation: true
      x-codegen-request-body-name: parameters
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
components:
  parameters:
    ApiVersionParameter:
      description: Client API version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: The subscription credentials which uniquely identify the Microsoft
        Azure subscription. The subscription ID forms part of the URI for every service
        call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    FlowLogInformation:
      description: Information on the configuration of flow log.
      example:
        targetResourceId: targetResourceId
        properties:
          retentionPolicy:
            days: 0
            enabled: false
          enabled: true
          storageId: storageId
      properties:
        properties:
          $ref: '#/components/schemas/FlowLogProperties'
        targetResourceId:
          description: The ID of the resource to configure for flow logging.
          type: string
      required:
      - properties
      - targetResourceId
      type: object
    FlowLogProperties:
      description: Parameters that define the configuration of flow log.
      example:
        retentionPolicy:
          days: 0
          enabled: false
        enabled: true
        storageId: storageId
      properties:
        enabled:
          description: Flag to enable/disable flow logging.
          type: boolean
        retentionPolicy:
          $ref: '#/components/schemas/RetentionPolicyParameters'
        storageId:
          description: ID of the storage account which is used to store the flow log.
          type: string
      required:
      - enabled
      - storageId
      type: object
    FlowLogStatusParameters:
      description: Parameters that define a resource to query flow log status.
      example:
        targetResourceId: targetResourceId
      properties:
        targetResourceId:
          description: The target resource where getting the flow logging status.
          type: string
      required:
      - targetResourceId
      type: object
    NetworkInterfaceAssociation:
      description: Network interface and its custom security rules.
      example:
        securityRules:
        - name: name
          etag: etag
          properties:
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            description: description
            provisioningState: provisioningState
            priority: 0
            direction: Inbound
        - name: name
          etag: etag
          properties:
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            description: description
            provisioningState: provisioningState
            priority: 0
            direction: Inbound
        id: id
      properties:
        id:
          description: Network interface ID.
          readOnly: true
          type: string
        securityRules:
          description: Collection of custom security rules.
          items:
            $ref: '#/components/schemas/NetworkInterfaceAssociation_securityRules_inner'
          type: array
      type: object
    NetworkWatcher:
      allOf:
      - properties:
          id:
            description: Resource ID.
            type: string
          location:
            description: Resource location.
            type: string
          name:
            description: Resource name.
            readOnly: true
            type: string
          tags:
            additionalProperties:
              type: string
            description: Resource tags.
            type: object
          type:
            description: Resource type.
            readOnly: true
            type: string
        type: object
        x-ms-azure-resource: true
      description: Network watcher in a resource group.
      example:
        etag: etag
        properties:
          provisioningState: Succeeded
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated.
          type: string
        properties:
          $ref: '#/components/schemas/NetworkWatcherPropertiesFormat'
    NetworkWatcherListResult:
      description: List of network watcher resources.
      example:
        value:
        - etag: etag
          properties:
            provisioningState: Succeeded
        - etag: etag
          properties:
            provisioningState: Succeeded
      properties:
        value:
          items:
            $ref: '#/components/schemas/NetworkWatcher'
          type: array
      type: object
    NetworkWatcherPropertiesFormat:
      description: The network watcher properties.
      example:
        provisioningState: Succeeded
      properties:
        provisioningState:
          description: The provisioning state of the resource.
          enum:
          - Succeeded
          - Updating
          - Deleting
          - Failed
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
      type: object
    NextHopParameters:
      description: Parameters that define the source and destination endpoint.
      example:
        targetResourceId: targetResourceId
        destinationIPAddress: destinationIPAddress
        sourceIPAddress: sourceIPAddress
        targetNicResourceId: targetNicResourceId
      properties:
        destinationIPAddress:
          description: The destination IP address.
          type: string
        sourceIPAddress:
          description: The source IP address.
          type: string
        targetNicResourceId:
          description: "The NIC ID. (If VM has multiple NICs and IP forwarding is\
            \ enabled on any of the nics, then this parameter must be specified. Otherwise\
            \ optional)."
          type: string
        targetResourceId:
          description: The resource identifier of the target resource against which
            the action is to be performed.
          type: string
      required:
      - destinationIPAddress
      - sourceIPAddress
      - targetResourceId
      type: object
    NextHopResult:
      description: The information about next hop from the specified VM.
      example:
        nextHopType: Internet
        routeTableId: routeTableId
        nextHopIpAddress: nextHopIpAddress
      properties:
        nextHopIpAddress:
          description: Next hop IP Address
          type: string
        nextHopType:
          description: Next hop type.
          enum:
          - Internet
          - VirtualAppliance
          - VirtualNetworkGateway
          - VnetLocal
          - HyperNetGateway
          - None
          type: string
          x-ms-enum:
            modelAsString: true
            name: NextHopType
        routeTableId:
          description: The resource identifier for the route table associated with
            the route being returned. If the route being returned does not correspond
            to any user created routes then this field will be the string 'System
            Route'.
          type: string
      type: object
    PacketCapture:
      description: Parameters that define the create packet capture operation.
      example:
        properties:
          totalBytesPerSession: 1
          timeLimitInSeconds: 6
          bytesToCapturePerPacket: 0
          storageLocation:
            filePath: filePath
            storagePath: storagePath
            storageId: storageId
          filters:
          - protocol: Any
            localPort: localPort
            remoteIPAddress: remoteIPAddress
            remotePort: remotePort
            localIPAddress: localIPAddress
          - protocol: Any
            localPort: localPort
            remoteIPAddress: remoteIPAddress
            remotePort: remotePort
            localIPAddress: localIPAddress
          target: target
      properties:
        properties:
          $ref: '#/components/schemas/PacketCaptureParameters'
      required:
      - properties
      type: object
    PacketCaptureFilter:
      description: Filter that is applied to packet capture request. Multiple filters
        can be applied.
      example:
        protocol: Any
        localPort: localPort
        remoteIPAddress: remoteIPAddress
        remotePort: remotePort
        localIPAddress: localIPAddress
      properties:
        localIPAddress:
          description: "Local IP Address to be filtered on. Notation: \"127.0.0.1\"\
            \ for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5\"\
            ? for multiple entries. Multiple ranges not currently supported. Mixing\
            \ ranges with multiple entries not currently supported. Default = null."
          type: string
        localPort:
          description: "Local port to be filtered on. Notation: \"80\" for single\
            \ port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple\
            \ ranges not currently supported. Mixing ranges with multiple entries\
            \ not currently supported. Default = null."
          type: string
        protocol:
          default: Any
          description: Protocol to be filtered on.
          enum:
          - TCP
          - UDP
          - Any
          type: string
          x-ms-enum:
            modelAsString: true
            name: PcProtocol
        remoteIPAddress:
          description: "Local IP Address to be filtered on. Notation: \"127.0.0.1\"\
            \ for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5;\"\
            \ for multiple entries. Multiple ranges not currently supported. Mixing\
            \ ranges with multiple entries not currently supported. Default = null."
          type: string
        remotePort:
          description: "Remote port to be filtered on. Notation: \"80\" for single\
            \ port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple\
            \ ranges not currently supported. Mixing ranges with multiple entries\
            \ not currently supported. Default = null."
          type: string
      type: object
    PacketCaptureListResult:
      description: List of packet capture sessions.
      example:
        value:
        - name: name
          etag: A unique read-only string that changes whenever the resource is updated.
          id: id
          properties:
            provisioningState: Succeeded
        - name: name
          etag: A unique read-only string that changes whenever the resource is updated.
          id: id
          properties:
            provisioningState: Succeeded
      properties:
        value:
          description: Information about packet capture sessions.
          items:
            $ref: '#/components/schemas/PacketCaptureResult'
          type: array
      type: object
    PacketCaptureParameters:
      description: Parameters that define the create packet capture operation.
      example:
        totalBytesPerSession: 1
        timeLimitInSeconds: 6
        bytesToCapturePerPacket: 0
        storageLocation:
          filePath: filePath
          storagePath: storagePath
          storageId: storageId
        filters:
        - protocol: Any
          localPort: localPort
          remoteIPAddress: remoteIPAddress
          remotePort: remotePort
          localIPAddress: localIPAddress
        - protocol: Any
          localPort: localPort
          remoteIPAddress: remoteIPAddress
          remotePort: remotePort
          localIPAddress: localIPAddress
        target: target
      properties:
        bytesToCapturePerPacket:
          description: "Number of bytes captured per packet, the remaining bytes are\
            \ truncated."
          type: integer
        filters:
          items:
            $ref: '#/components/schemas/PacketCaptureFilter'
          type: array
        storageLocation:
          $ref: '#/components/schemas/PacketCaptureStorageLocation'
        target:
          description: "The ID of the targeted resource, only VM is currently supported."
          type: string
        timeLimitInSeconds:
          description: Maximum duration of the capture session in seconds.
          type: integer
        totalBytesPerSession:
          description: Maximum size of the capture output.
          type: integer
      required:
      - storageLocation
      - target
      type: object
    PacketCaptureQueryStatusResult:
      description: Status of packet capture session.
      example:
        stopReason: stopReason
        captureStartTime: 2000-01-23T04:56:07.000+00:00
        name: name
        packetCaptureError:
        - InternalError
        - InternalError
        id: id
        packetCaptureStatus: NotStarted
      properties:
        captureStartTime:
          description: The start time of the packet capture session.
          format: date-time
          type: string
        id:
          description: The ID of the packet capture resource.
          type: string
        name:
          description: The name of the packet capture resource.
          type: string
        packetCaptureError:
          description: List of errors of packet capture session.
          items:
            enum:
            - InternalError
            - AgentStopped
            - CaptureFailed
            - LocalFileFailed
            - StorageFailed
            type: string
            x-ms-enum:
              modelAsString: true
              name: PcError
          type: array
        packetCaptureStatus:
          description: The status of the packet capture session.
          enum:
          - NotStarted
          - Running
          - Stopped
          - Error
          - Unknown
          type: string
          x-ms-enum:
            modelAsString: true
            name: PcStatus
        stopReason:
          description: The reason the current packet capture session was stopped.
          type: string
      type: object
    PacketCaptureResult:
      description: Information about packet capture session.
      example:
        name: name
        etag: A unique read-only string that changes whenever the resource is updated.
        id: id
        properties:
          provisioningState: Succeeded
      properties:
        etag:
          default: A unique read-only string that changes whenever the resource is
            updated.
          type: string
        id:
          description: ID of the packet capture operation.
          readOnly: true
          type: string
        name:
          description: Name of the packet capture session.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/PacketCaptureResultProperties'
      type: object
    PacketCaptureResultProperties:
      allOf:
      - $ref: '#/components/schemas/PacketCaptureParameters'
      description: Describes the properties of a packet capture session.
      example:
        provisioningState: Succeeded
      properties:
        provisioningState:
          description: The provisioning state of the packet capture session.
          enum:
          - Succeeded
          - Updating
          - Deleting
          - Failed
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
    PacketCaptureStorageLocation:
      description: Describes the storage location for a packet capture session.
      example:
        filePath: filePath
        storagePath: storagePath
        storageId: storageId
      properties:
        filePath:
          description: "A valid local path on the targeting VM. Must include the name\
            \ of the capture file (*.cap). For linux virtual machine it must start\
            \ with /var/captures. Required if no storage ID is provided, otherwise\
            \ optional."
          type: string
        storageId:
          description: The ID of the storage account to save the packet capture session.
            Required if no local file path is provided.
          type: string
        storagePath:
          description: The URI of the storage path to save the packet capture. Must
            be a well-formed URI describing the location to save the packet capture.
          type: string
      type: object
    QueryTroubleshootingParameters:
      description: Parameters that define the resource to query the troubleshooting
        result.
      example:
        targetResourceId: targetResourceId
      properties:
        targetResourceId:
          description: The target resource ID to query the troubleshooting result.
          type: string
      required:
      - targetResourceId
      type: object
    RetentionPolicyParameters:
      description: Parameters that define the retention policy for flow log.
      example:
        days: 0
        enabled: false
      properties:
        days:
          description: Number of days to retain flow log records.
          type: integer
        enabled:
          default: false
          description: Flag to enable/disable retention.
          type: boolean
      type: object
    SecurityGroupNetworkInterface:
      description: Network interface and all its associated security rules.
      example:
        securityRuleAssociations:
          networkInterfaceAssociation:
            securityRules:
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            id: id
          defaultSecurityRules:
          - name: name
            etag: etag
            properties:
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              description: description
              provisioningState: provisioningState
              priority: 0
              direction: Inbound
          - name: name
            etag: etag
            properties:
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              description: description
              provisioningState: provisioningState
              priority: 0
              direction: Inbound
          effectiveSecurityRules:
          - expandedSourceAddressPrefix:
            - expandedSourceAddressPrefix
            - expandedSourceAddressPrefix
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            expandedDestinationAddressPrefix:
            - expandedDestinationAddressPrefix
            - expandedDestinationAddressPrefix
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            name: name
            priority: 6
            direction: Inbound
          - expandedSourceAddressPrefix:
            - expandedSourceAddressPrefix
            - expandedSourceAddressPrefix
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            expandedDestinationAddressPrefix:
            - expandedDestinationAddressPrefix
            - expandedDestinationAddressPrefix
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            name: name
            priority: 6
            direction: Inbound
          subnetAssociation:
            securityRules:
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            id: id
        id: id
      properties:
        id:
          description: ID of the network interface.
          type: string
        securityRuleAssociations:
          $ref: '#/components/schemas/SecurityRuleAssociations'
      type: object
    SecurityGroupViewParameters:
      description: Parameters that define the VM to check security groups for.
      example:
        targetResourceId: targetResourceId
      properties:
        targetResourceId:
          description: ID of the target VM.
          type: string
      required:
      - targetResourceId
      type: object
    SecurityGroupViewResult:
      description: The information about security rules applied to the specified VM.
      example:
        networkInterfaces:
        - securityRuleAssociations:
            networkInterfaceAssociation:
              securityRules:
              - name: name
                etag: etag
                properties:
                  destinationAddressPrefix: destinationAddressPrefix
                  protocol: Tcp
                  access: Allow
                  sourcePortRange: sourcePortRange
                  sourceAddressPrefix: sourceAddressPrefix
                  destinationPortRange: destinationPortRange
                  description: description
                  provisioningState: provisioningState
                  priority: 0
                  direction: Inbound
              - name: name
                etag: etag
                properties:
                  destinationAddressPrefix: destinationAddressPrefix
                  protocol: Tcp
                  access: Allow
                  sourcePortRange: sourcePortRange
                  sourceAddressPrefix: sourceAddressPrefix
                  destinationPortRange: destinationPortRange
                  description: description
                  provisioningState: provisioningState
                  priority: 0
                  direction: Inbound
              id: id
            defaultSecurityRules:
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            effectiveSecurityRules:
            - expandedSourceAddressPrefix:
              - expandedSourceAddressPrefix
              - expandedSourceAddressPrefix
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              expandedDestinationAddressPrefix:
              - expandedDestinationAddressPrefix
              - expandedDestinationAddressPrefix
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              name: name
              priority: 6
              direction: Inbound
            - expandedSourceAddressPrefix:
              - expandedSourceAddressPrefix
              - expandedSourceAddressPrefix
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              expandedDestinationAddressPrefix:
              - expandedDestinationAddressPrefix
              - expandedDestinationAddressPrefix
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              name: name
              priority: 6
              direction: Inbound
            subnetAssociation:
              securityRules:
              - name: name
                etag: etag
                properties:
                  destinationAddressPrefix: destinationAddressPrefix
                  protocol: Tcp
                  access: Allow
                  sourcePortRange: sourcePortRange
                  sourceAddressPrefix: sourceAddressPrefix
                  destinationPortRange: destinationPortRange
                  description: description
                  provisioningState: provisioningState
                  priority: 0
                  direction: Inbound
              - name: name
                etag: etag
                properties:
                  destinationAddressPrefix: destinationAddressPrefix
                  protocol: Tcp
                  access: Allow
                  sourcePortRange: sourcePortRange
                  sourceAddressPrefix: sourceAddressPrefix
                  destinationPortRange: destinationPortRange
                  description: description
                  provisioningState: provisioningState
                  priority: 0
                  direction: Inbound
              id: id
          id: id
        - securityRuleAssociations:
            networkInterfaceAssociation:
              securityRules:
              - name: name
                etag: etag
                properties:
                  destinationAddressPrefix: destinationAddressPrefix
                  protocol: Tcp
                  access: Allow
                  sourcePortRange: sourcePortRange
                  sourceAddressPrefix: sourceAddressPrefix
                  destinationPortRange: destinationPortRange
                  description: description
                  provisioningState: provisioningState
                  priority: 0
                  direction: Inbound
              - name: name
                etag: etag
                properties:
                  destinationAddressPrefix: destinationAddressPrefix
                  protocol: Tcp
                  access: Allow
                  sourcePortRange: sourcePortRange
                  sourceAddressPrefix: sourceAddressPrefix
                  destinationPortRange: destinationPortRange
                  description: description
                  provisioningState: provisioningState
                  priority: 0
                  direction: Inbound
              id: id
            defaultSecurityRules:
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            - name: name
              etag: etag
              properties:
                destinationAddressPrefix: destinationAddressPrefix
                protocol: Tcp
                access: Allow
                sourcePortRange: sourcePortRange
                sourceAddressPrefix: sourceAddressPrefix
                destinationPortRange: destinationPortRange
                description: description
                provisioningState: provisioningState
                priority: 0
                direction: Inbound
            effectiveSecurityRules:
            - expandedSourceAddressPrefix:
              - expandedSourceAddressPrefix
              - expandedSourceAddressPrefix
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              expandedDestinationAddressPrefix:
              - expandedDestinationAddressPrefix
              - expandedDestinationAddressPrefix
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              name: name
              priority: 6
              direction: Inbound
            - expandedSourceAddressPrefix:
              - expandedSourceAddressPrefix
              - expandedSourceAddressPrefix
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              expandedDestinationAddressPrefix:
              - expandedDestinationAddressPrefix
              - expandedDestinationAddressPrefix
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              name: name
              priority: 6
              direction: Inbound
            subnetAssociation:
              securityRules:
              - name: name
                etag: etag
                properties:
                  destinationAddressPrefix: destinationAddressPrefix
                  protocol: Tcp
                  access: Allow
                  sourcePortRange: sourcePortRange
                  sourceAddressPrefix: sourceAddressPrefix
                  destinationPortRange: destinationPortRange
                  description: description
                  provisioningState: provisioningState
                  priority: 0
                  direction: Inbound
              - name: name
                etag: etag
                properties:
                  destinationAddressPrefix: destinationAddressPrefix
                  protocol: Tcp
                  access: Allow
                  sourcePortRange: sourcePortRange
                  sourceAddressPrefix: sourceAddressPrefix
                  destinationPortRange: destinationPortRange
                  description: description
                  provisioningState: provisioningState
                  priority: 0
                  direction: Inbound
              id: id
          id: id
      properties:
        networkInterfaces:
          description: List of network interfaces on the specified VM.
          items:
            $ref: '#/components/schemas/SecurityGroupNetworkInterface'
          type: array
      type: object
    SecurityRuleAssociations:
      description: All security rules associated with the network interface.
      example:
        networkInterfaceAssociation:
          securityRules:
          - name: name
            etag: etag
            properties:
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              description: description
              provisioningState: provisioningState
              priority: 0
              direction: Inbound
          - name: name
            etag: etag
            properties:
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              description: description
              provisioningState: provisioningState
              priority: 0
              direction: Inbound
          id: id
        defaultSecurityRules:
        - name: name
          etag: etag
          properties:
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            description: description
            provisioningState: provisioningState
            priority: 0
            direction: Inbound
        - name: name
          etag: etag
          properties:
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            description: description
            provisioningState: provisioningState
            priority: 0
            direction: Inbound
        effectiveSecurityRules:
        - expandedSourceAddressPrefix:
          - expandedSourceAddressPrefix
          - expandedSourceAddressPrefix
          destinationAddressPrefix: destinationAddressPrefix
          protocol: Tcp
          access: Allow
          sourcePortRange: sourcePortRange
          expandedDestinationAddressPrefix:
          - expandedDestinationAddressPrefix
          - expandedDestinationAddressPrefix
          sourceAddressPrefix: sourceAddressPrefix
          destinationPortRange: destinationPortRange
          name: name
          priority: 6
          direction: Inbound
        - expandedSourceAddressPrefix:
          - expandedSourceAddressPrefix
          - expandedSourceAddressPrefix
          destinationAddressPrefix: destinationAddressPrefix
          protocol: Tcp
          access: Allow
          sourcePortRange: sourcePortRange
          expandedDestinationAddressPrefix:
          - expandedDestinationAddressPrefix
          - expandedDestinationAddressPrefix
          sourceAddressPrefix: sourceAddressPrefix
          destinationPortRange: destinationPortRange
          name: name
          priority: 6
          direction: Inbound
        subnetAssociation:
          securityRules:
          - name: name
            etag: etag
            properties:
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              description: description
              provisioningState: provisioningState
              priority: 0
              direction: Inbound
          - name: name
            etag: etag
            properties:
              destinationAddressPrefix: destinationAddressPrefix
              protocol: Tcp
              access: Allow
              sourcePortRange: sourcePortRange
              sourceAddressPrefix: sourceAddressPrefix
              destinationPortRange: destinationPortRange
              description: description
              provisioningState: provisioningState
              priority: 0
              direction: Inbound
          id: id
      properties:
        defaultSecurityRules:
          description: Collection of default security rules of the network security
            group.
          items:
            $ref: '#/components/schemas/NetworkInterfaceAssociation_securityRules_inner'
          type: array
        effectiveSecurityRules:
          description: Collection of effective security rules.
          items:
            $ref: '#/components/schemas/SecurityRuleAssociations_effectiveSecurityRules_inner'
          type: array
        networkInterfaceAssociation:
          $ref: '#/components/schemas/NetworkInterfaceAssociation'
        subnetAssociation:
          $ref: '#/components/schemas/SubnetAssociation'
      type: object
    SubnetAssociation:
      description: Network interface and its custom security rules.
      example:
        securityRules:
        - name: name
          etag: etag
          properties:
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            description: description
            provisioningState: provisioningState
            priority: 0
            direction: Inbound
        - name: name
          etag: etag
          properties:
            destinationAddressPrefix: destinationAddressPrefix
            protocol: Tcp
            access: Allow
            sourcePortRange: sourcePortRange
            sourceAddressPrefix: sourceAddressPrefix
            destinationPortRange: destinationPortRange
            description: description
            provisioningState: provisioningState
            priority: 0
            direction: Inbound
        id: id
      properties:
        id:
          description: Subnet ID.
          readOnly: true
          type: string
        securityRules:
          description: Collection of custom security rules.
          items:
            $ref: '#/components/schemas/NetworkInterfaceAssociation_securityRules_inner'
          type: array
      type: object
    Topology:
      description: Topology of the specified resource group.
      example:
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        resources:
        - associations:
          - resourceId: resourceId
            associationType: Associated
            name: name
          - resourceId: resourceId
            associationType: Associated
            name: name
          name: name
          location: location
          id: id
        - associations:
          - resourceId: resourceId
            associationType: Associated
            name: name
          - resourceId: resourceId
            associationType: Associated
            name: name
          name: name
          location: location
          id: id
        id: id
        lastModified: 2000-01-23T04:56:07.000+00:00
      properties:
        createdDateTime:
          description: The datetime when the topology was initially created for the
            resource group.
          format: date-time
          readOnly: true
          type: string
        id:
          description: GUID representing the operation id.
          readOnly: true
          type: string
        lastModified:
          description: The datetime when the topology was last modified.
          format: date-time
          readOnly: true
          type: string
        resources:
          items:
            $ref: '#/components/schemas/TopologyResource'
          type: array
      type: object
    TopologyAssociation:
      description: Resources that have an association with the parent resource.
      example:
        resourceId: resourceId
        associationType: Associated
        name: name
      properties:
        associationType:
          description: The association type of the child resource to the parent resource.
          enum:
          - Associated
          - Contains
          type: string
          x-ms-enum:
            modelAsString: true
            name: AssociationType
        name:
          description: The name of the resource that is associated with the parent
            resource.
          type: string
        resourceId:
          description: The ID of the resource that is associated with the parent resource.
          type: string
      type: object
    TopologyParameters:
      description: Parameters that define the representation of topology.
      example:
        targetResourceGroupName: targetResourceGroupName
      properties:
        targetResourceGroupName:
          description: The name of the target resource group to perform topology on.
          type: string
      required:
      - targetResourceGroupName
      type: object
    TopologyResource:
      description: The network resource topology information for the given resource
        group.
      example:
        associations:
        - resourceId: resourceId
          associationType: Associated
          name: name
        - resourceId: resourceId
          associationType: Associated
          name: name
        name: name
        location: location
        id: id
      properties:
        associations:
          description: Holds the associations the resource has with other resources
            in the resource group.
          items:
            $ref: '#/components/schemas/TopologyAssociation'
          type: array
        id:
          description: ID of the resource.
          type: string
        location:
          description: Resource location.
          type: string
        name:
          description: Name of the resource.
          type: string
      type: object
    TroubleshootingDetails:
      description: Information gained from troubleshooting of specified resource.
      example:
        summary: summary
        detail: detail
        id: id
        recommendedActions:
        - actionText: actionText
          actionUri: actionUri
          actionId: actionId
          actionUriText: actionUriText
        - actionText: actionText
          actionUri: actionUri
          actionId: actionId
          actionUriText: actionUriText
        reasonType: reasonType
      properties:
        detail:
          description: Details on troubleshooting results.
          type: string
        id:
          description: The id of the get troubleshoot operation.
          type: string
        reasonType:
          description: Reason type of failure.
          type: string
        recommendedActions:
          description: List of recommended actions.
          items:
            $ref: '#/components/schemas/TroubleshootingRecommendedActions'
          type: array
        summary:
          description: A summary of troubleshooting.
          type: string
      type: object
    TroubleshootingParameters:
      description: Parameters that define the resource to troubleshoot.
      example:
        targetResourceId: targetResourceId
        properties:
          storagePath: storagePath
          storageId: storageId
      properties:
        properties:
          $ref: '#/components/schemas/TroubleshootingProperties'
        targetResourceId:
          description: The target resource to troubleshoot.
          type: string
      required:
      - properties
      - targetResourceId
      type: object
    TroubleshootingProperties:
      description: Storage location provided for troubleshoot.
      example:
        storagePath: storagePath
        storageId: storageId
      properties:
        storageId:
          description: The ID for the storage account to save the troubleshoot result.
          type: string
        storagePath:
          description: The path to the blob to save the troubleshoot result in.
          type: string
      required:
      - storageId
      - storagePath
      type: object
    TroubleshootingRecommendedActions:
      description: Recommended actions based on discovered issues.
      example:
        actionText: actionText
        actionUri: actionUri
        actionId: actionId
        actionUriText: actionUriText
      properties:
        actionId:
          description: ID of the recommended action.
          type: string
        actionText:
          description: Description of recommended actions.
          type: string
        actionUri:
          description: The uri linking to a documentation for the recommended troubleshooting
            actions.
          type: string
        actionUriText:
          description: The information from the URI for the recommended troubleshooting
            actions.
          type: string
      type: object
    TroubleshootingResult:
      description: Troubleshooting information gained from specified resource.
      example:
        code: code
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        results:
        - summary: summary
          detail: detail
          id: id
          recommendedActions:
          - actionText: actionText
            actionUri: actionUri
            actionId: actionId
            actionUriText: actionUriText
          - actionText: actionText
            actionUri: actionUri
            actionId: actionId
            actionUriText: actionUriText
          reasonType: reasonType
        - summary: summary
          detail: detail
          id: id
          recommendedActions:
          - actionText: actionText
            actionUri: actionUri
            actionId: actionId
            actionUriText: actionUriText
          - actionText: actionText
            actionUri: actionUri
            actionId: actionId
            actionUriText: actionUriText
          reasonType: reasonType
      properties:
        code:
          description: The result code of the troubleshooting.
          type: string
        endTime:
          description: The end time of the troubleshooting.
          format: date-time
          type: string
        results:
          description: Information from troubleshooting.
          items:
            $ref: '#/components/schemas/TroubleshootingDetails'
          type: array
        startTime:
          description: The start time of the troubleshooting.
          format: date-time
          type: string
      type: object
    VerificationIPFlowParameters:
      description: Parameters that define the IP flow to be verified.
      example:
        targetResourceId: targetResourceId
        protocol: TCP
        localPort: localPort
        remoteIPAddress: remoteIPAddress
        targetNicResourceId: targetNicResourceId
        remotePort: remotePort
        localIPAddress: localIPAddress
        direction: Inbound
      properties:
        direction:
          description: The direction of the packet represented as a 5-tuple.
          enum:
          - Inbound
          - Outbound
          type: string
          x-ms-enum:
            modelAsString: true
            name: Direction
        localIPAddress:
          description: The local IP address. Acceptable values are valid IPv4 addresses.
          type: string
        localPort:
          description: "The local port. Acceptable values are a single integer in\
            \ the range (0-65535). Support for * for the source port, which depends\
            \ on the direction."
          type: string
        protocol:
          description: Protocol to be verified on.
          enum:
          - TCP
          - UDP
          type: string
          x-ms-enum:
            modelAsString: true
            name: Protocol
        remoteIPAddress:
          description: The remote IP address. Acceptable values are valid IPv4 addresses.
          type: string
        remotePort:
          description: "The remote port. Acceptable values are a single integer in\
            \ the range (0-65535). Support for * for the source port, which depends\
            \ on the direction."
          type: string
        targetNicResourceId:
          description: "The NIC ID. (If VM has multiple NICs and IP forwarding is\
            \ enabled on any of them, then this parameter must be specified. Otherwise\
            \ optional)."
          type: string
        targetResourceId:
          description: The ID of the target resource to perform next-hop on.
          type: string
      required:
      - direction
      - localIPAddress
      - localPort
      - protocol
      - remoteIPAddress
      - remotePort
      - targetResourceId
      type: object
    VerificationIPFlowResult:
      description: Results of IP flow verification on the target resource.
      example:
        access: Allow
        ruleName: ruleName
      properties:
        access:
          description: Indicates whether the traffic is allowed or denied.
          enum:
          - Allow
          - Deny
          type: string
          x-ms-enum:
            modelAsString: true
            name: Access
        ruleName:
          description: "Name of the rule. If input is not matched against any security\
            \ rule, it is not displayed."
          type: string
      type: object
    NetworkInterfaceAssociation_securityRules_inner_properties:
      example:
        destinationAddressPrefix: destinationAddressPrefix
        protocol: Tcp
        access: Allow
        sourcePortRange: sourcePortRange
        sourceAddressPrefix: sourceAddressPrefix
        destinationPortRange: destinationPortRange
        description: description
        provisioningState: provisioningState
        priority: 0
        direction: Inbound
      properties:
        access:
          description: "The network traffic is allowed or denied. Possible values\
            \ are: 'Allow' and 'Deny'."
          enum:
          - Allow
          - Deny
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityRuleAccess
        description:
          description: A description for this rule. Restricted to 140 chars.
          type: string
        destinationAddressPrefix:
          description: "The destination address prefix. CIDR or source IP range. Asterisk\
            \ '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork',\
            \ 'AzureLoadBalancer' and 'Internet' can also be used."
          type: string
        destinationPortRange:
          description: The destination port or range. Integer or range between 0 and
            65535. Asterisk '*' can also be used to match all ports.
          type: string
        direction:
          description: "The direction of the rule. The direction specifies if rule\
            \ will be evaluated on incoming or outgoing traffic. Possible values are:\
            \ 'Inbound' and 'Outbound'."
          enum:
          - Inbound
          - Outbound
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityRuleDirection
        priority:
          description: "The priority of the rule. The value can be between 100 and\
            \ 4096. The priority number must be unique for each rule in the collection.\
            \ The lower the priority number, the higher the priority of the rule."
          format: int32
          type: integer
        protocol:
          description: "Network protocol this rule applies to. Possible values are\
            \ 'Tcp', 'Udp', and '*'."
          enum:
          - Tcp
          - Udp
          - '*'
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityRuleProtocol
        provisioningState:
          description: "The provisioning state of the public IP resource. Possible\
            \ values are: 'Updating', 'Deleting', and 'Failed'."
          type: string
        sourceAddressPrefix:
          description: "The CIDR or source IP range. Asterisk '*' can also be used\
            \ to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer'\
            \ and 'Internet' can also be used. If this is an ingress rule, specifies\
            \ where network traffic originates from. "
          type: string
        sourcePortRange:
          description: The source port or range. Integer or range between 0 and 65535.
            Asterisk '*' can also be used to match all ports.
          type: string
      required:
      - access
      - destinationAddressPrefix
      - direction
      - protocol
      - sourceAddressPrefix
      type: object
    NetworkInterfaceAssociation_securityRules_inner:
      description: Network security rule.
      example:
        name: name
        etag: etag
        properties:
          destinationAddressPrefix: destinationAddressPrefix
          protocol: Tcp
          access: Allow
          sourcePortRange: sourcePortRange
          sourceAddressPrefix: sourceAddressPrefix
          destinationPortRange: destinationPortRange
          description: description
          provisioningState: provisioningState
          priority: 0
          direction: Inbound
      properties:
        etag:
          description: A unique read-only string that changes whenever the resource
            is updated.
          type: string
        name:
          description: The name of the resource that is unique within a resource group.
            This name can be used to access the resource.
          type: string
        properties:
          $ref: '#/components/schemas/NetworkInterfaceAssociation_securityRules_inner_properties'
      type: object
    SecurityRuleAssociations_effectiveSecurityRules_inner:
      description: Effective network security rules.
      example:
        expandedSourceAddressPrefix:
        - expandedSourceAddressPrefix
        - expandedSourceAddressPrefix
        destinationAddressPrefix: destinationAddressPrefix
        protocol: Tcp
        access: Allow
        sourcePortRange: sourcePortRange
        expandedDestinationAddressPrefix:
        - expandedDestinationAddressPrefix
        - expandedDestinationAddressPrefix
        sourceAddressPrefix: sourceAddressPrefix
        destinationPortRange: destinationPortRange
        name: name
        priority: 6
        direction: Inbound
      properties:
        access:
          description: "Whether network traffic is allowed or denied. Possible values\
            \ are: 'Allow' and 'Deny'."
          enum:
          - Allow
          - Deny
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityRuleAccess
        destinationAddressPrefix:
          description: The destination address prefix.
          type: string
        destinationPortRange:
          description: The destination port or range.
          type: string
        direction:
          description: "The direction of the rule. Possible values are: 'Inbound and\
            \ Outbound'."
          enum:
          - Inbound
          - Outbound
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityRuleDirection
        expandedDestinationAddressPrefix:
          description: Expanded destination address prefix.
          items:
            type: string
          type: array
        expandedSourceAddressPrefix:
          description: The expanded source address prefix.
          items:
            type: string
          type: array
        name:
          description: The name of the security rule specified by the user (if created
            by the user).
          type: string
        priority:
          description: The priority of the rule.
          format: int32
          type: integer
        protocol:
          description: "The network protocol this rule applies to. Possible values\
            \ are: 'Tcp', 'Udp', and '*'."
          enum:
          - Tcp
          - Udp
          - '*'
          type: string
          x-ms-enum:
            modelAsString: true
            name: SecurityRuleProtocol
        sourceAddressPrefix:
          description: The source address prefix.
          type: string
        sourcePortRange:
          description: The source port or range.
          type: string
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
x-original-swagger-version: "2.0"

