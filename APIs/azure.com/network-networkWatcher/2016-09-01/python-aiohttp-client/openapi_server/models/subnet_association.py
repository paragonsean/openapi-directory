# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_interface_association_security_rules_inner import NetworkInterfaceAssociationSecurityRulesInner
from openapi_server import util


class SubnetAssociation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, security_rules: List[NetworkInterfaceAssociationSecurityRulesInner]=None):
        """SubnetAssociation - a model defined in OpenAPI

        :param id: The id of this SubnetAssociation.
        :param security_rules: The security_rules of this SubnetAssociation.
        """
        self.openapi_types = {
            'id': str,
            'security_rules': List[NetworkInterfaceAssociationSecurityRulesInner]
        }

        self.attribute_map = {
            'id': 'id',
            'security_rules': 'securityRules'
        }

        self._id = id
        self._security_rules = security_rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubnetAssociation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubnetAssociation of this SubnetAssociation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this SubnetAssociation.

        Subnet ID.

        :return: The id of this SubnetAssociation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SubnetAssociation.

        Subnet ID.

        :param id: The id of this SubnetAssociation.
        :type id: str
        """

        self._id = id

    @property
    def security_rules(self):
        """Gets the security_rules of this SubnetAssociation.

        Collection of custom security rules.

        :return: The security_rules of this SubnetAssociation.
        :rtype: List[NetworkInterfaceAssociationSecurityRulesInner]
        """
        return self._security_rules

    @security_rules.setter
    def security_rules(self, security_rules):
        """Sets the security_rules of this SubnetAssociation.

        Collection of custom security rules.

        :param security_rules: The security_rules of this SubnetAssociation.
        :type security_rules: List[NetworkInterfaceAssociationSecurityRulesInner]
        """

        self._security_rules = security_rules
