/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementClient);
  }
}(this, function(expect, NetworkManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SecurityRuleAssociationsEffectiveSecurityRulesInner', function() {
    it('should create an instance of SecurityRuleAssociationsEffectiveSecurityRulesInner', function() {
      // uncomment below and update the code to test SecurityRuleAssociationsEffectiveSecurityRulesInner
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be.a(NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner);
    });

    it('should have the property access (base name: "access")', function() {
      // uncomment below and update the code to test the property access
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property destinationAddressPrefix (base name: "destinationAddressPrefix")', function() {
      // uncomment below and update the code to test the property destinationAddressPrefix
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property destinationAddressPrefixes (base name: "destinationAddressPrefixes")', function() {
      // uncomment below and update the code to test the property destinationAddressPrefixes
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property destinationPortRange (base name: "destinationPortRange")', function() {
      // uncomment below and update the code to test the property destinationPortRange
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property destinationPortRanges (base name: "destinationPortRanges")', function() {
      // uncomment below and update the code to test the property destinationPortRanges
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property direction (base name: "direction")', function() {
      // uncomment below and update the code to test the property direction
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property expandedDestinationAddressPrefix (base name: "expandedDestinationAddressPrefix")', function() {
      // uncomment below and update the code to test the property expandedDestinationAddressPrefix
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property expandedSourceAddressPrefix (base name: "expandedSourceAddressPrefix")', function() {
      // uncomment below and update the code to test the property expandedSourceAddressPrefix
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property priority (base name: "priority")', function() {
      // uncomment below and update the code to test the property priority
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property protocol (base name: "protocol")', function() {
      // uncomment below and update the code to test the property protocol
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property sourceAddressPrefix (base name: "sourceAddressPrefix")', function() {
      // uncomment below and update the code to test the property sourceAddressPrefix
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property sourceAddressPrefixes (base name: "sourceAddressPrefixes")', function() {
      // uncomment below and update the code to test the property sourceAddressPrefixes
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property sourcePortRange (base name: "sourcePortRange")', function() {
      // uncomment below and update the code to test the property sourcePortRange
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

    it('should have the property sourcePortRanges (base name: "sourcePortRanges")', function() {
      // uncomment below and update the code to test the property sourcePortRanges
      //var instance = new NetworkManagementClient.SecurityRuleAssociationsEffectiveSecurityRulesInner();
      //expect(instance).to.be();
    });

  });

}));
