# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.azure_reachability_report_location import AzureReachabilityReportLocation
from openapi_server import util


class AzureReachabilityReportParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, azure_locations: List[str]=None, end_time: datetime=None, provider_location: AzureReachabilityReportLocation=None, providers: List[str]=None, start_time: datetime=None):
        """AzureReachabilityReportParameters - a model defined in OpenAPI

        :param azure_locations: The azure_locations of this AzureReachabilityReportParameters.
        :param end_time: The end_time of this AzureReachabilityReportParameters.
        :param provider_location: The provider_location of this AzureReachabilityReportParameters.
        :param providers: The providers of this AzureReachabilityReportParameters.
        :param start_time: The start_time of this AzureReachabilityReportParameters.
        """
        self.openapi_types = {
            'azure_locations': List[str],
            'end_time': datetime,
            'provider_location': AzureReachabilityReportLocation,
            'providers': List[str],
            'start_time': datetime
        }

        self.attribute_map = {
            'azure_locations': 'azureLocations',
            'end_time': 'endTime',
            'provider_location': 'providerLocation',
            'providers': 'providers',
            'start_time': 'startTime'
        }

        self._azure_locations = azure_locations
        self._end_time = end_time
        self._provider_location = provider_location
        self._providers = providers
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureReachabilityReportParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureReachabilityReportParameters of this AzureReachabilityReportParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def azure_locations(self):
        """Gets the azure_locations of this AzureReachabilityReportParameters.

        Optional Azure regions to scope the query to.

        :return: The azure_locations of this AzureReachabilityReportParameters.
        :rtype: List[str]
        """
        return self._azure_locations

    @azure_locations.setter
    def azure_locations(self, azure_locations):
        """Sets the azure_locations of this AzureReachabilityReportParameters.

        Optional Azure regions to scope the query to.

        :param azure_locations: The azure_locations of this AzureReachabilityReportParameters.
        :type azure_locations: List[str]
        """

        self._azure_locations = azure_locations

    @property
    def end_time(self):
        """Gets the end_time of this AzureReachabilityReportParameters.

        The end time for the Azure reachability report.

        :return: The end_time of this AzureReachabilityReportParameters.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this AzureReachabilityReportParameters.

        The end time for the Azure reachability report.

        :param end_time: The end_time of this AzureReachabilityReportParameters.
        :type end_time: datetime
        """
        if end_time is None:
            raise ValueError("Invalid value for `end_time`, must not be `None`")

        self._end_time = end_time

    @property
    def provider_location(self):
        """Gets the provider_location of this AzureReachabilityReportParameters.


        :return: The provider_location of this AzureReachabilityReportParameters.
        :rtype: AzureReachabilityReportLocation
        """
        return self._provider_location

    @provider_location.setter
    def provider_location(self, provider_location):
        """Sets the provider_location of this AzureReachabilityReportParameters.


        :param provider_location: The provider_location of this AzureReachabilityReportParameters.
        :type provider_location: AzureReachabilityReportLocation
        """
        if provider_location is None:
            raise ValueError("Invalid value for `provider_location`, must not be `None`")

        self._provider_location = provider_location

    @property
    def providers(self):
        """Gets the providers of this AzureReachabilityReportParameters.

        List of Internet service providers.

        :return: The providers of this AzureReachabilityReportParameters.
        :rtype: List[str]
        """
        return self._providers

    @providers.setter
    def providers(self, providers):
        """Sets the providers of this AzureReachabilityReportParameters.

        List of Internet service providers.

        :param providers: The providers of this AzureReachabilityReportParameters.
        :type providers: List[str]
        """

        self._providers = providers

    @property
    def start_time(self):
        """Gets the start_time of this AzureReachabilityReportParameters.

        The start time for the Azure reachability report.

        :return: The start_time of this AzureReachabilityReportParameters.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this AzureReachabilityReportParameters.

        The start time for the Azure reachability report.

        :param start_time: The start_time of this AzureReachabilityReportParameters.
        :type start_time: datetime
        """
        if start_time is None:
            raise ValueError("Invalid value for `start_time`, must not be `None`")

        self._start_time = start_time
