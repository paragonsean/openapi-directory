/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEvaluatedNetworkSecurityGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEvaluatedNetworkSecurityGroup::OAIEvaluatedNetworkSecurityGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEvaluatedNetworkSecurityGroup::OAIEvaluatedNetworkSecurityGroup() {
    this->initializeModel();
}

OAIEvaluatedNetworkSecurityGroup::~OAIEvaluatedNetworkSecurityGroup() {}

void OAIEvaluatedNetworkSecurityGroup::initializeModel() {

    m_matched_rule_isSet = false;
    m_matched_rule_isValid = false;

    m_network_security_group_id_isSet = false;
    m_network_security_group_id_isValid = false;

    m_rules_evaluation_result_isSet = false;
    m_rules_evaluation_result_isValid = false;
}

void OAIEvaluatedNetworkSecurityGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEvaluatedNetworkSecurityGroup::fromJsonObject(QJsonObject json) {

    m_matched_rule_isValid = ::OpenAPI::fromJsonValue(m_matched_rule, json[QString("matchedRule")]);
    m_matched_rule_isSet = !json[QString("matchedRule")].isNull() && m_matched_rule_isValid;

    m_network_security_group_id_isValid = ::OpenAPI::fromJsonValue(m_network_security_group_id, json[QString("networkSecurityGroupId")]);
    m_network_security_group_id_isSet = !json[QString("networkSecurityGroupId")].isNull() && m_network_security_group_id_isValid;

    m_rules_evaluation_result_isValid = ::OpenAPI::fromJsonValue(m_rules_evaluation_result, json[QString("rulesEvaluationResult")]);
    m_rules_evaluation_result_isSet = !json[QString("rulesEvaluationResult")].isNull() && m_rules_evaluation_result_isValid;
}

QString OAIEvaluatedNetworkSecurityGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEvaluatedNetworkSecurityGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_matched_rule.isSet()) {
        obj.insert(QString("matchedRule"), ::OpenAPI::toJsonValue(m_matched_rule));
    }
    if (m_network_security_group_id_isSet) {
        obj.insert(QString("networkSecurityGroupId"), ::OpenAPI::toJsonValue(m_network_security_group_id));
    }
    if (m_rules_evaluation_result.size() > 0) {
        obj.insert(QString("rulesEvaluationResult"), ::OpenAPI::toJsonValue(m_rules_evaluation_result));
    }
    return obj;
}

OAIMatchedRule OAIEvaluatedNetworkSecurityGroup::getMatchedRule() const {
    return m_matched_rule;
}
void OAIEvaluatedNetworkSecurityGroup::setMatchedRule(const OAIMatchedRule &matched_rule) {
    m_matched_rule = matched_rule;
    m_matched_rule_isSet = true;
}

bool OAIEvaluatedNetworkSecurityGroup::is_matched_rule_Set() const{
    return m_matched_rule_isSet;
}

bool OAIEvaluatedNetworkSecurityGroup::is_matched_rule_Valid() const{
    return m_matched_rule_isValid;
}

QString OAIEvaluatedNetworkSecurityGroup::getNetworkSecurityGroupId() const {
    return m_network_security_group_id;
}
void OAIEvaluatedNetworkSecurityGroup::setNetworkSecurityGroupId(const QString &network_security_group_id) {
    m_network_security_group_id = network_security_group_id;
    m_network_security_group_id_isSet = true;
}

bool OAIEvaluatedNetworkSecurityGroup::is_network_security_group_id_Set() const{
    return m_network_security_group_id_isSet;
}

bool OAIEvaluatedNetworkSecurityGroup::is_network_security_group_id_Valid() const{
    return m_network_security_group_id_isValid;
}

QList<OAINetworkSecurityRulesEvaluationResult> OAIEvaluatedNetworkSecurityGroup::getRulesEvaluationResult() const {
    return m_rules_evaluation_result;
}
void OAIEvaluatedNetworkSecurityGroup::setRulesEvaluationResult(const QList<OAINetworkSecurityRulesEvaluationResult> &rules_evaluation_result) {
    m_rules_evaluation_result = rules_evaluation_result;
    m_rules_evaluation_result_isSet = true;
}

bool OAIEvaluatedNetworkSecurityGroup::is_rules_evaluation_result_Set() const{
    return m_rules_evaluation_result_isSet;
}

bool OAIEvaluatedNetworkSecurityGroup::is_rules_evaluation_result_Valid() const{
    return m_rules_evaluation_result_isValid;
}

bool OAIEvaluatedNetworkSecurityGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_matched_rule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_security_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rules_evaluation_result.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEvaluatedNetworkSecurityGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
