/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnectionMonitorParameters.h
 *
 * Parameters that define the operation to create a connection monitor.
 */

#ifndef OAIConnectionMonitorParameters_H
#define OAIConnectionMonitorParameters_H

#include <QJsonObject>

#include "OAIConnectionMonitorDestination.h"
#include "OAIConnectionMonitorSource.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConnectionMonitorDestination;
class OAIConnectionMonitorSource;

class OAIConnectionMonitorParameters : public OAIObject {
public:
    OAIConnectionMonitorParameters();
    OAIConnectionMonitorParameters(QString json);
    ~OAIConnectionMonitorParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoStart() const;
    void setAutoStart(const bool &auto_start);
    bool is_auto_start_Set() const;
    bool is_auto_start_Valid() const;

    OAIConnectionMonitorDestination getDestination() const;
    void setDestination(const OAIConnectionMonitorDestination &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    qint32 getMonitoringIntervalInSeconds() const;
    void setMonitoringIntervalInSeconds(const qint32 &monitoring_interval_in_seconds);
    bool is_monitoring_interval_in_seconds_Set() const;
    bool is_monitoring_interval_in_seconds_Valid() const;

    OAIConnectionMonitorSource getSource() const;
    void setSource(const OAIConnectionMonitorSource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_auto_start;
    bool m_auto_start_isSet;
    bool m_auto_start_isValid;

    OAIConnectionMonitorDestination m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    qint32 m_monitoring_interval_in_seconds;
    bool m_monitoring_interval_in_seconds_isSet;
    bool m_monitoring_interval_in_seconds_isValid;

    OAIConnectionMonitorSource m_source;
    bool m_source_isSet;
    bool m_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnectionMonitorParameters)

#endif // OAIConnectionMonitorParameters_H
