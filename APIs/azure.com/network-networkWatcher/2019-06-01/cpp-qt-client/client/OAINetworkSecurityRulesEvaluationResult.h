/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkSecurityRulesEvaluationResult.h
 *
 * Network security rules evaluation result.
 */

#ifndef OAINetworkSecurityRulesEvaluationResult_H
#define OAINetworkSecurityRulesEvaluationResult_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkSecurityRulesEvaluationResult : public OAIObject {
public:
    OAINetworkSecurityRulesEvaluationResult();
    OAINetworkSecurityRulesEvaluationResult(QString json);
    ~OAINetworkSecurityRulesEvaluationResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDestinationMatched() const;
    void setDestinationMatched(const bool &destination_matched);
    bool is_destination_matched_Set() const;
    bool is_destination_matched_Valid() const;

    bool isDestinationPortMatched() const;
    void setDestinationPortMatched(const bool &destination_port_matched);
    bool is_destination_port_matched_Set() const;
    bool is_destination_port_matched_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isProtocolMatched() const;
    void setProtocolMatched(const bool &protocol_matched);
    bool is_protocol_matched_Set() const;
    bool is_protocol_matched_Valid() const;

    bool isSourceMatched() const;
    void setSourceMatched(const bool &source_matched);
    bool is_source_matched_Set() const;
    bool is_source_matched_Valid() const;

    bool isSourcePortMatched() const;
    void setSourcePortMatched(const bool &source_port_matched);
    bool is_source_port_matched_Set() const;
    bool is_source_port_matched_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_destination_matched;
    bool m_destination_matched_isSet;
    bool m_destination_matched_isValid;

    bool m_destination_port_matched;
    bool m_destination_port_matched_isSet;
    bool m_destination_port_matched_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_protocol_matched;
    bool m_protocol_matched_isSet;
    bool m_protocol_matched_isValid;

    bool m_source_matched;
    bool m_source_matched_isSet;
    bool m_source_matched_isValid;

    bool m_source_port_matched;
    bool m_source_port_matched_isSet;
    bool m_source_port_matched_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkSecurityRulesEvaluationResult)

#endif // OAINetworkSecurityRulesEvaluationResult_H
