# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.http_configuration import HTTPConfiguration
from openapi_server import util


class ProtocolConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, http_configuration: HTTPConfiguration=None):
        """ProtocolConfiguration - a model defined in OpenAPI

        :param http_configuration: The http_configuration of this ProtocolConfiguration.
        """
        self.openapi_types = {
            'http_configuration': HTTPConfiguration
        }

        self.attribute_map = {
            'http_configuration': 'HTTPConfiguration'
        }

        self._http_configuration = http_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProtocolConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProtocolConfiguration of this ProtocolConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def http_configuration(self):
        """Gets the http_configuration of this ProtocolConfiguration.


        :return: The http_configuration of this ProtocolConfiguration.
        :rtype: HTTPConfiguration
        """
        return self._http_configuration

    @http_configuration.setter
    def http_configuration(self, http_configuration):
        """Sets the http_configuration of this ProtocolConfiguration.


        :param http_configuration: The http_configuration of this ProtocolConfiguration.
        :type http_configuration: HTTPConfiguration
        """

        self._http_configuration = http_configuration
