/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2016-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVerificationIPFlowParameters.h
 *
 * Parameters that define the IP flow to be verified.
 */

#ifndef OAIVerificationIPFlowParameters_H
#define OAIVerificationIPFlowParameters_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVerificationIPFlowParameters : public OAIObject {
public:
    OAIVerificationIPFlowParameters();
    OAIVerificationIPFlowParameters(QString json);
    ~OAIVerificationIPFlowParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    QString getLocalIpAddress() const;
    void setLocalIpAddress(const QString &local_ip_address);
    bool is_local_ip_address_Set() const;
    bool is_local_ip_address_Valid() const;

    QString getLocalPort() const;
    void setLocalPort(const QString &local_port);
    bool is_local_port_Set() const;
    bool is_local_port_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    QString getRemoteIpAddress() const;
    void setRemoteIpAddress(const QString &remote_ip_address);
    bool is_remote_ip_address_Set() const;
    bool is_remote_ip_address_Valid() const;

    QString getRemotePort() const;
    void setRemotePort(const QString &remote_port);
    bool is_remote_port_Set() const;
    bool is_remote_port_Valid() const;

    QString getTargetNicResourceId() const;
    void setTargetNicResourceId(const QString &target_nic_resource_id);
    bool is_target_nic_resource_id_Set() const;
    bool is_target_nic_resource_id_Valid() const;

    QString getTargetResourceId() const;
    void setTargetResourceId(const QString &target_resource_id);
    bool is_target_resource_id_Set() const;
    bool is_target_resource_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    QString m_local_ip_address;
    bool m_local_ip_address_isSet;
    bool m_local_ip_address_isValid;

    QString m_local_port;
    bool m_local_port_isSet;
    bool m_local_port_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    QString m_remote_ip_address;
    bool m_remote_ip_address_isSet;
    bool m_remote_ip_address_isValid;

    QString m_remote_port;
    bool m_remote_port_isSet;
    bool m_remote_port_isValid;

    QString m_target_nic_resource_id;
    bool m_target_nic_resource_id_isSet;
    bool m_target_nic_resource_id_isValid;

    QString m_target_resource_id;
    bool m_target_resource_id_isSet;
    bool m_target_resource_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVerificationIPFlowParameters)

#endif // OAIVerificationIPFlowParameters_H
