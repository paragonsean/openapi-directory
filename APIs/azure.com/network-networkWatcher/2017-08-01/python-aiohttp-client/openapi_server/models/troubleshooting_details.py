# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.troubleshooting_recommended_actions import TroubleshootingRecommendedActions
from openapi_server import util


class TroubleshootingDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detail: str=None, id: str=None, reason_type: str=None, recommended_actions: List[TroubleshootingRecommendedActions]=None, summary: str=None):
        """TroubleshootingDetails - a model defined in OpenAPI

        :param detail: The detail of this TroubleshootingDetails.
        :param id: The id of this TroubleshootingDetails.
        :param reason_type: The reason_type of this TroubleshootingDetails.
        :param recommended_actions: The recommended_actions of this TroubleshootingDetails.
        :param summary: The summary of this TroubleshootingDetails.
        """
        self.openapi_types = {
            'detail': str,
            'id': str,
            'reason_type': str,
            'recommended_actions': List[TroubleshootingRecommendedActions],
            'summary': str
        }

        self.attribute_map = {
            'detail': 'detail',
            'id': 'id',
            'reason_type': 'reasonType',
            'recommended_actions': 'recommendedActions',
            'summary': 'summary'
        }

        self._detail = detail
        self._id = id
        self._reason_type = reason_type
        self._recommended_actions = recommended_actions
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TroubleshootingDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TroubleshootingDetails of this TroubleshootingDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detail(self):
        """Gets the detail of this TroubleshootingDetails.

        Details on troubleshooting results.

        :return: The detail of this TroubleshootingDetails.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this TroubleshootingDetails.

        Details on troubleshooting results.

        :param detail: The detail of this TroubleshootingDetails.
        :type detail: str
        """

        self._detail = detail

    @property
    def id(self):
        """Gets the id of this TroubleshootingDetails.

        The id of the get troubleshoot operation.

        :return: The id of this TroubleshootingDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TroubleshootingDetails.

        The id of the get troubleshoot operation.

        :param id: The id of this TroubleshootingDetails.
        :type id: str
        """

        self._id = id

    @property
    def reason_type(self):
        """Gets the reason_type of this TroubleshootingDetails.

        Reason type of failure.

        :return: The reason_type of this TroubleshootingDetails.
        :rtype: str
        """
        return self._reason_type

    @reason_type.setter
    def reason_type(self, reason_type):
        """Sets the reason_type of this TroubleshootingDetails.

        Reason type of failure.

        :param reason_type: The reason_type of this TroubleshootingDetails.
        :type reason_type: str
        """

        self._reason_type = reason_type

    @property
    def recommended_actions(self):
        """Gets the recommended_actions of this TroubleshootingDetails.

        List of recommended actions.

        :return: The recommended_actions of this TroubleshootingDetails.
        :rtype: List[TroubleshootingRecommendedActions]
        """
        return self._recommended_actions

    @recommended_actions.setter
    def recommended_actions(self, recommended_actions):
        """Sets the recommended_actions of this TroubleshootingDetails.

        List of recommended actions.

        :param recommended_actions: The recommended_actions of this TroubleshootingDetails.
        :type recommended_actions: List[TroubleshootingRecommendedActions]
        """

        self._recommended_actions = recommended_actions

    @property
    def summary(self):
        """Gets the summary of this TroubleshootingDetails.

        A summary of troubleshooting.

        :return: The summary of this TroubleshootingDetails.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this TroubleshootingDetails.

        A summary of troubleshooting.

        :param summary: The summary of this TroubleshootingDetails.
        :type summary: str
        """

        self._summary = summary
