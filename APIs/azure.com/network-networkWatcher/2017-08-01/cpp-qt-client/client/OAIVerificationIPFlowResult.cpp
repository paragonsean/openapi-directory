/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerificationIPFlowResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerificationIPFlowResult::OAIVerificationIPFlowResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerificationIPFlowResult::OAIVerificationIPFlowResult() {
    this->initializeModel();
}

OAIVerificationIPFlowResult::~OAIVerificationIPFlowResult() {}

void OAIVerificationIPFlowResult::initializeModel() {

    m_access_isSet = false;
    m_access_isValid = false;

    m_rule_name_isSet = false;
    m_rule_name_isValid = false;
}

void OAIVerificationIPFlowResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVerificationIPFlowResult::fromJsonObject(QJsonObject json) {

    m_access_isValid = ::OpenAPI::fromJsonValue(m_access, json[QString("access")]);
    m_access_isSet = !json[QString("access")].isNull() && m_access_isValid;

    m_rule_name_isValid = ::OpenAPI::fromJsonValue(m_rule_name, json[QString("ruleName")]);
    m_rule_name_isSet = !json[QString("ruleName")].isNull() && m_rule_name_isValid;
}

QString OAIVerificationIPFlowResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVerificationIPFlowResult::asJsonObject() const {
    QJsonObject obj;
    if (m_access_isSet) {
        obj.insert(QString("access"), ::OpenAPI::toJsonValue(m_access));
    }
    if (m_rule_name_isSet) {
        obj.insert(QString("ruleName"), ::OpenAPI::toJsonValue(m_rule_name));
    }
    return obj;
}

QString OAIVerificationIPFlowResult::getAccess() const {
    return m_access;
}
void OAIVerificationIPFlowResult::setAccess(const QString &access) {
    m_access = access;
    m_access_isSet = true;
}

bool OAIVerificationIPFlowResult::is_access_Set() const{
    return m_access_isSet;
}

bool OAIVerificationIPFlowResult::is_access_Valid() const{
    return m_access_isValid;
}

QString OAIVerificationIPFlowResult::getRuleName() const {
    return m_rule_name;
}
void OAIVerificationIPFlowResult::setRuleName(const QString &rule_name) {
    m_rule_name = rule_name;
    m_rule_name_isSet = true;
}

bool OAIVerificationIPFlowResult::is_rule_name_Set() const{
    return m_rule_name_isSet;
}

bool OAIVerificationIPFlowResult::is_rule_name_Valid() const{
    return m_rule_name_isValid;
}

bool OAIVerificationIPFlowResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVerificationIPFlowResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
