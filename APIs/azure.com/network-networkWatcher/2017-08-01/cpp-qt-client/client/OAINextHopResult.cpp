/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINextHopResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINextHopResult::OAINextHopResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINextHopResult::OAINextHopResult() {
    this->initializeModel();
}

OAINextHopResult::~OAINextHopResult() {}

void OAINextHopResult::initializeModel() {

    m_next_hop_ip_address_isSet = false;
    m_next_hop_ip_address_isValid = false;

    m_next_hop_type_isSet = false;
    m_next_hop_type_isValid = false;

    m_route_table_id_isSet = false;
    m_route_table_id_isValid = false;
}

void OAINextHopResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINextHopResult::fromJsonObject(QJsonObject json) {

    m_next_hop_ip_address_isValid = ::OpenAPI::fromJsonValue(m_next_hop_ip_address, json[QString("nextHopIpAddress")]);
    m_next_hop_ip_address_isSet = !json[QString("nextHopIpAddress")].isNull() && m_next_hop_ip_address_isValid;

    m_next_hop_type_isValid = ::OpenAPI::fromJsonValue(m_next_hop_type, json[QString("nextHopType")]);
    m_next_hop_type_isSet = !json[QString("nextHopType")].isNull() && m_next_hop_type_isValid;

    m_route_table_id_isValid = ::OpenAPI::fromJsonValue(m_route_table_id, json[QString("routeTableId")]);
    m_route_table_id_isSet = !json[QString("routeTableId")].isNull() && m_route_table_id_isValid;
}

QString OAINextHopResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINextHopResult::asJsonObject() const {
    QJsonObject obj;
    if (m_next_hop_ip_address_isSet) {
        obj.insert(QString("nextHopIpAddress"), ::OpenAPI::toJsonValue(m_next_hop_ip_address));
    }
    if (m_next_hop_type_isSet) {
        obj.insert(QString("nextHopType"), ::OpenAPI::toJsonValue(m_next_hop_type));
    }
    if (m_route_table_id_isSet) {
        obj.insert(QString("routeTableId"), ::OpenAPI::toJsonValue(m_route_table_id));
    }
    return obj;
}

QString OAINextHopResult::getNextHopIpAddress() const {
    return m_next_hop_ip_address;
}
void OAINextHopResult::setNextHopIpAddress(const QString &next_hop_ip_address) {
    m_next_hop_ip_address = next_hop_ip_address;
    m_next_hop_ip_address_isSet = true;
}

bool OAINextHopResult::is_next_hop_ip_address_Set() const{
    return m_next_hop_ip_address_isSet;
}

bool OAINextHopResult::is_next_hop_ip_address_Valid() const{
    return m_next_hop_ip_address_isValid;
}

QString OAINextHopResult::getNextHopType() const {
    return m_next_hop_type;
}
void OAINextHopResult::setNextHopType(const QString &next_hop_type) {
    m_next_hop_type = next_hop_type;
    m_next_hop_type_isSet = true;
}

bool OAINextHopResult::is_next_hop_type_Set() const{
    return m_next_hop_type_isSet;
}

bool OAINextHopResult::is_next_hop_type_Valid() const{
    return m_next_hop_type_isValid;
}

QString OAINextHopResult::getRouteTableId() const {
    return m_route_table_id;
}
void OAINextHopResult::setRouteTableId(const QString &route_table_id) {
    m_route_table_id = route_table_id;
    m_route_table_id_isSet = true;
}

bool OAINextHopResult::is_route_table_id_Set() const{
    return m_route_table_id_isSet;
}

bool OAINextHopResult::is_route_table_id_Valid() const{
    return m_route_table_id_isValid;
}

bool OAINextHopResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_hop_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_hop_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_route_table_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINextHopResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
