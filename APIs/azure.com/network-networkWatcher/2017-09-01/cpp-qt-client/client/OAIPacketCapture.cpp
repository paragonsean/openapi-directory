/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPacketCapture.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPacketCapture::OAIPacketCapture(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPacketCapture::OAIPacketCapture() {
    this->initializeModel();
}

OAIPacketCapture::~OAIPacketCapture() {}

void OAIPacketCapture::initializeModel() {

    m_properties_isSet = false;
    m_properties_isValid = false;
}

void OAIPacketCapture::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPacketCapture::fromJsonObject(QJsonObject json) {

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;
}

QString OAIPacketCapture::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPacketCapture::asJsonObject() const {
    QJsonObject obj;
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    return obj;
}

OAIPacketCaptureParameters OAIPacketCapture::getProperties() const {
    return m_properties;
}
void OAIPacketCapture::setProperties(const OAIPacketCaptureParameters &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIPacketCapture::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIPacketCapture::is_properties_Valid() const{
    return m_properties_isValid;
}

bool OAIPacketCapture::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPacketCapture::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_properties_isValid && true;
}

} // namespace OpenAPI
