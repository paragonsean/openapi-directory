# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TopologyParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_resource_group_name: str=None):
        """TopologyParameters - a model defined in OpenAPI

        :param target_resource_group_name: The target_resource_group_name of this TopologyParameters.
        """
        self.openapi_types = {
            'target_resource_group_name': str
        }

        self.attribute_map = {
            'target_resource_group_name': 'targetResourceGroupName'
        }

        self._target_resource_group_name = target_resource_group_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TopologyParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TopologyParameters of this TopologyParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_resource_group_name(self):
        """Gets the target_resource_group_name of this TopologyParameters.

        The name of the target resource group to perform topology on.

        :return: The target_resource_group_name of this TopologyParameters.
        :rtype: str
        """
        return self._target_resource_group_name

    @target_resource_group_name.setter
    def target_resource_group_name(self, target_resource_group_name):
        """Sets the target_resource_group_name of this TopologyParameters.

        The name of the target resource group to perform topology on.

        :param target_resource_group_name: The target_resource_group_name of this TopologyParameters.
        :type target_resource_group_name: str
        """
        if target_resource_group_name is None:
            raise ValueError("Invalid value for `target_resource_group_name`, must not be `None`")

        self._target_resource_group_name = target_resource_group_name
