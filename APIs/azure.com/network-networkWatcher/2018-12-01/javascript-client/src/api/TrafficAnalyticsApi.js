/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import FlowLogInformation from '../model/FlowLogInformation';
import FlowLogStatusParameters from '../model/FlowLogStatusParameters';

/**
* TrafficAnalytics service.
* @module api/TrafficAnalyticsApi
* @version 2018-12-01
*/
export default class TrafficAnalyticsApi {

    /**
    * Constructs a new TrafficAnalyticsApi. 
    * @alias module:api/TrafficAnalyticsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the networkWatchersGetFlowLogStatus_0 operation.
     * @callback module:api/TrafficAnalyticsApi~networkWatchersGetFlowLogStatus_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/FlowLogInformation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Queries status of flow log and traffic analytics (optional) on a specified resource.
     * @param {String} resourceGroupName The name of the network watcher resource group.
     * @param {String} networkWatcherName The name of the network watcher resource.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/FlowLogStatusParameters} parameters Parameters that define a resource to query flow log and traffic analytics (optional)  status.
     * @param {module:api/TrafficAnalyticsApi~networkWatchersGetFlowLogStatus_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlowLogInformation}
     */
    networkWatchersGetFlowLogStatus_0(resourceGroupName, networkWatcherName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkWatchersGetFlowLogStatus_0");
      }
      // verify the required parameter 'networkWatcherName' is set
      if (networkWatcherName === undefined || networkWatcherName === null) {
        throw new Error("Missing the required parameter 'networkWatcherName' when calling networkWatchersGetFlowLogStatus_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkWatchersGetFlowLogStatus_0");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkWatchersGetFlowLogStatus_0");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling networkWatchersGetFlowLogStatus_0");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkWatcherName': networkWatcherName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = FlowLogInformation;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the networkWatchersSetFlowLogConfiguration_0 operation.
     * @callback module:api/TrafficAnalyticsApi~networkWatchersSetFlowLogConfiguration_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/FlowLogInformation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Configures flow log  and traffic analytics (optional) on a specified resource.
     * @param {String} resourceGroupName The name of the network watcher resource group.
     * @param {String} networkWatcherName The name of the network watcher resource.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/FlowLogInformation} parameters Parameters that define the configuration of flow log.
     * @param {module:api/TrafficAnalyticsApi~networkWatchersSetFlowLogConfiguration_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlowLogInformation}
     */
    networkWatchersSetFlowLogConfiguration_0(resourceGroupName, networkWatcherName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling networkWatchersSetFlowLogConfiguration_0");
      }
      // verify the required parameter 'networkWatcherName' is set
      if (networkWatcherName === undefined || networkWatcherName === null) {
        throw new Error("Missing the required parameter 'networkWatcherName' when calling networkWatchersSetFlowLogConfiguration_0");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling networkWatchersSetFlowLogConfiguration_0");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling networkWatchersSetFlowLogConfiguration_0");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling networkWatchersSetFlowLogConfiguration_0");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkWatcherName': networkWatcherName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = FlowLogInformation;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
