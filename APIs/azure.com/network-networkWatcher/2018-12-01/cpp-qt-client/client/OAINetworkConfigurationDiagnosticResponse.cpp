/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINetworkConfigurationDiagnosticResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINetworkConfigurationDiagnosticResponse::OAINetworkConfigurationDiagnosticResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINetworkConfigurationDiagnosticResponse::OAINetworkConfigurationDiagnosticResponse() {
    this->initializeModel();
}

OAINetworkConfigurationDiagnosticResponse::~OAINetworkConfigurationDiagnosticResponse() {}

void OAINetworkConfigurationDiagnosticResponse::initializeModel() {

    m_results_isSet = false;
    m_results_isValid = false;
}

void OAINetworkConfigurationDiagnosticResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINetworkConfigurationDiagnosticResponse::fromJsonObject(QJsonObject json) {

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("results")]);
    m_results_isSet = !json[QString("results")].isNull() && m_results_isValid;
}

QString OAINetworkConfigurationDiagnosticResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINetworkConfigurationDiagnosticResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_results.size() > 0) {
        obj.insert(QString("results"), ::OpenAPI::toJsonValue(m_results));
    }
    return obj;
}

QList<OAINetworkConfigurationDiagnosticResult> OAINetworkConfigurationDiagnosticResponse::getResults() const {
    return m_results;
}
void OAINetworkConfigurationDiagnosticResponse::setResults(const QList<OAINetworkConfigurationDiagnosticResult> &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAINetworkConfigurationDiagnosticResponse::is_results_Set() const{
    return m_results_isSet;
}

bool OAINetworkConfigurationDiagnosticResponse::is_results_Valid() const{
    return m_results_isValid;
}

bool OAINetworkConfigurationDiagnosticResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINetworkConfigurationDiagnosticResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
