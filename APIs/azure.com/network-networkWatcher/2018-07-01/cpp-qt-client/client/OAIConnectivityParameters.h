/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnectivityParameters.h
 *
 * Parameters that determine how the connectivity check will be performed.
 */

#ifndef OAIConnectivityParameters_H
#define OAIConnectivityParameters_H

#include <QJsonObject>

#include "OAIConnectivityDestination.h"
#include "OAIConnectivitySource.h"
#include "OAIProtocolConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConnectivityDestination;
class OAIProtocolConfiguration;
class OAIConnectivitySource;

class OAIConnectivityParameters : public OAIObject {
public:
    OAIConnectivityParameters();
    OAIConnectivityParameters(QString json);
    ~OAIConnectivityParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConnectivityDestination getDestination() const;
    void setDestination(const OAIConnectivityDestination &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    OAIProtocolConfiguration getProtocolConfiguration() const;
    void setProtocolConfiguration(const OAIProtocolConfiguration &protocol_configuration);
    bool is_protocol_configuration_Set() const;
    bool is_protocol_configuration_Valid() const;

    OAIConnectivitySource getSource() const;
    void setSource(const OAIConnectivitySource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConnectivityDestination m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    OAIProtocolConfiguration m_protocol_configuration;
    bool m_protocol_configuration_isSet;
    bool m_protocol_configuration_isValid;

    OAIConnectivitySource m_source;
    bool m_source_isSet;
    bool m_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnectivityParameters)

#endif // OAIConnectivityParameters_H
