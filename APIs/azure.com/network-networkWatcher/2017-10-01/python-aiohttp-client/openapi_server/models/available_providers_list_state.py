# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.available_providers_list_city import AvailableProvidersListCity
from openapi_server import util


class AvailableProvidersListState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cities: List[AvailableProvidersListCity]=None, providers: List[str]=None, state_name: str=None):
        """AvailableProvidersListState - a model defined in OpenAPI

        :param cities: The cities of this AvailableProvidersListState.
        :param providers: The providers of this AvailableProvidersListState.
        :param state_name: The state_name of this AvailableProvidersListState.
        """
        self.openapi_types = {
            'cities': List[AvailableProvidersListCity],
            'providers': List[str],
            'state_name': str
        }

        self.attribute_map = {
            'cities': 'cities',
            'providers': 'providers',
            'state_name': 'stateName'
        }

        self._cities = cities
        self._providers = providers
        self._state_name = state_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailableProvidersListState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvailableProvidersListState of this AvailableProvidersListState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cities(self):
        """Gets the cities of this AvailableProvidersListState.

        List of available cities or towns in the state.

        :return: The cities of this AvailableProvidersListState.
        :rtype: List[AvailableProvidersListCity]
        """
        return self._cities

    @cities.setter
    def cities(self, cities):
        """Sets the cities of this AvailableProvidersListState.

        List of available cities or towns in the state.

        :param cities: The cities of this AvailableProvidersListState.
        :type cities: List[AvailableProvidersListCity]
        """

        self._cities = cities

    @property
    def providers(self):
        """Gets the providers of this AvailableProvidersListState.

        A list of Internet service providers.

        :return: The providers of this AvailableProvidersListState.
        :rtype: List[str]
        """
        return self._providers

    @providers.setter
    def providers(self, providers):
        """Sets the providers of this AvailableProvidersListState.

        A list of Internet service providers.

        :param providers: The providers of this AvailableProvidersListState.
        :type providers: List[str]
        """

        self._providers = providers

    @property
    def state_name(self):
        """Gets the state_name of this AvailableProvidersListState.

        The state name.

        :return: The state_name of this AvailableProvidersListState.
        :rtype: str
        """
        return self._state_name

    @state_name.setter
    def state_name(self, state_name):
        """Sets the state_name of this AvailableProvidersListState.

        The state name.

        :param state_name: The state_name of this AvailableProvidersListState.
        :type state_name: str
        """

        self._state_name = state_name
