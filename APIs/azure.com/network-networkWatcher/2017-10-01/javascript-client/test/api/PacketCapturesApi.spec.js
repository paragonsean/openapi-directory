/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-10-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementClient);
  }
}(this, function(expect, NetworkManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementClient.PacketCapturesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PacketCapturesApi', function() {
    describe('packetCapturesCreate', function() {
      it('should call packetCapturesCreate successfully', function(done) {
        //uncomment below and update the code to test packetCapturesCreate
        //instance.packetCapturesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('packetCapturesDelete', function() {
      it('should call packetCapturesDelete successfully', function(done) {
        //uncomment below and update the code to test packetCapturesDelete
        //instance.packetCapturesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('packetCapturesGet', function() {
      it('should call packetCapturesGet successfully', function(done) {
        //uncomment below and update the code to test packetCapturesGet
        //instance.packetCapturesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('packetCapturesGetStatus', function() {
      it('should call packetCapturesGetStatus successfully', function(done) {
        //uncomment below and update the code to test packetCapturesGetStatus
        //instance.packetCapturesGetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('packetCapturesList', function() {
      it('should call packetCapturesList successfully', function(done) {
        //uncomment below and update the code to test packetCapturesList
        //instance.packetCapturesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('packetCapturesStop', function() {
      it('should call packetCapturesStop successfully', function(done) {
        //uncomment below and update the code to test packetCapturesStop
        //instance.packetCapturesStop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
