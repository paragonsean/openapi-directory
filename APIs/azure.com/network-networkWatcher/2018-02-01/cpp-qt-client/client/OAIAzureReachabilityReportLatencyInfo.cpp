/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureReachabilityReportLatencyInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureReachabilityReportLatencyInfo::OAIAzureReachabilityReportLatencyInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureReachabilityReportLatencyInfo::OAIAzureReachabilityReportLatencyInfo() {
    this->initializeModel();
}

OAIAzureReachabilityReportLatencyInfo::~OAIAzureReachabilityReportLatencyInfo() {}

void OAIAzureReachabilityReportLatencyInfo::initializeModel() {

    m_score_isSet = false;
    m_score_isValid = false;

    m_time_stamp_isSet = false;
    m_time_stamp_isValid = false;
}

void OAIAzureReachabilityReportLatencyInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureReachabilityReportLatencyInfo::fromJsonObject(QJsonObject json) {

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;

    m_time_stamp_isValid = ::OpenAPI::fromJsonValue(m_time_stamp, json[QString("timeStamp")]);
    m_time_stamp_isSet = !json[QString("timeStamp")].isNull() && m_time_stamp_isValid;
}

QString OAIAzureReachabilityReportLatencyInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureReachabilityReportLatencyInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    if (m_time_stamp_isSet) {
        obj.insert(QString("timeStamp"), ::OpenAPI::toJsonValue(m_time_stamp));
    }
    return obj;
}

qint32 OAIAzureReachabilityReportLatencyInfo::getScore() const {
    return m_score;
}
void OAIAzureReachabilityReportLatencyInfo::setScore(const qint32 &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAIAzureReachabilityReportLatencyInfo::is_score_Set() const{
    return m_score_isSet;
}

bool OAIAzureReachabilityReportLatencyInfo::is_score_Valid() const{
    return m_score_isValid;
}

QDateTime OAIAzureReachabilityReportLatencyInfo::getTimeStamp() const {
    return m_time_stamp;
}
void OAIAzureReachabilityReportLatencyInfo::setTimeStamp(const QDateTime &time_stamp) {
    m_time_stamp = time_stamp;
    m_time_stamp_isSet = true;
}

bool OAIAzureReachabilityReportLatencyInfo::is_time_stamp_Set() const{
    return m_time_stamp_isSet;
}

bool OAIAzureReachabilityReportLatencyInfo::is_time_stamp_Valid() const{
    return m_time_stamp_isValid;
}

bool OAIAzureReachabilityReportLatencyInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_stamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureReachabilityReportLatencyInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
