/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-02-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISecurityGroupNetworkInterface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISecurityGroupNetworkInterface::OAISecurityGroupNetworkInterface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISecurityGroupNetworkInterface::OAISecurityGroupNetworkInterface() {
    this->initializeModel();
}

OAISecurityGroupNetworkInterface::~OAISecurityGroupNetworkInterface() {}

void OAISecurityGroupNetworkInterface::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_security_rule_associations_isSet = false;
    m_security_rule_associations_isValid = false;
}

void OAISecurityGroupNetworkInterface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISecurityGroupNetworkInterface::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_security_rule_associations_isValid = ::OpenAPI::fromJsonValue(m_security_rule_associations, json[QString("securityRuleAssociations")]);
    m_security_rule_associations_isSet = !json[QString("securityRuleAssociations")].isNull() && m_security_rule_associations_isValid;
}

QString OAISecurityGroupNetworkInterface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISecurityGroupNetworkInterface::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_security_rule_associations.isSet()) {
        obj.insert(QString("securityRuleAssociations"), ::OpenAPI::toJsonValue(m_security_rule_associations));
    }
    return obj;
}

QString OAISecurityGroupNetworkInterface::getId() const {
    return m_id;
}
void OAISecurityGroupNetworkInterface::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISecurityGroupNetworkInterface::is_id_Set() const{
    return m_id_isSet;
}

bool OAISecurityGroupNetworkInterface::is_id_Valid() const{
    return m_id_isValid;
}

OAISecurityRuleAssociations OAISecurityGroupNetworkInterface::getSecurityRuleAssociations() const {
    return m_security_rule_associations;
}
void OAISecurityGroupNetworkInterface::setSecurityRuleAssociations(const OAISecurityRuleAssociations &security_rule_associations) {
    m_security_rule_associations = security_rule_associations;
    m_security_rule_associations_isSet = true;
}

bool OAISecurityGroupNetworkInterface::is_security_rule_associations_Set() const{
    return m_security_rule_associations_isSet;
}

bool OAISecurityGroupNetworkInterface::is_security_rule_associations_Valid() const{
    return m_security_rule_associations_isValid;
}

bool OAISecurityGroupNetworkInterface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_rule_associations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISecurityGroupNetworkInterface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
