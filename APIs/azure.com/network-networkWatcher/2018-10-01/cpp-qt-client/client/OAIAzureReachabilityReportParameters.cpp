/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureReachabilityReportParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureReachabilityReportParameters::OAIAzureReachabilityReportParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureReachabilityReportParameters::OAIAzureReachabilityReportParameters() {
    this->initializeModel();
}

OAIAzureReachabilityReportParameters::~OAIAzureReachabilityReportParameters() {}

void OAIAzureReachabilityReportParameters::initializeModel() {

    m_azure_locations_isSet = false;
    m_azure_locations_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_provider_location_isSet = false;
    m_provider_location_isValid = false;

    m_providers_isSet = false;
    m_providers_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIAzureReachabilityReportParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureReachabilityReportParameters::fromJsonObject(QJsonObject json) {

    m_azure_locations_isValid = ::OpenAPI::fromJsonValue(m_azure_locations, json[QString("azureLocations")]);
    m_azure_locations_isSet = !json[QString("azureLocations")].isNull() && m_azure_locations_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_provider_location_isValid = ::OpenAPI::fromJsonValue(m_provider_location, json[QString("providerLocation")]);
    m_provider_location_isSet = !json[QString("providerLocation")].isNull() && m_provider_location_isValid;

    m_providers_isValid = ::OpenAPI::fromJsonValue(m_providers, json[QString("providers")]);
    m_providers_isSet = !json[QString("providers")].isNull() && m_providers_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIAzureReachabilityReportParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureReachabilityReportParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_azure_locations.size() > 0) {
        obj.insert(QString("azureLocations"), ::OpenAPI::toJsonValue(m_azure_locations));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_provider_location.isSet()) {
        obj.insert(QString("providerLocation"), ::OpenAPI::toJsonValue(m_provider_location));
    }
    if (m_providers.size() > 0) {
        obj.insert(QString("providers"), ::OpenAPI::toJsonValue(m_providers));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QList<QString> OAIAzureReachabilityReportParameters::getAzureLocations() const {
    return m_azure_locations;
}
void OAIAzureReachabilityReportParameters::setAzureLocations(const QList<QString> &azure_locations) {
    m_azure_locations = azure_locations;
    m_azure_locations_isSet = true;
}

bool OAIAzureReachabilityReportParameters::is_azure_locations_Set() const{
    return m_azure_locations_isSet;
}

bool OAIAzureReachabilityReportParameters::is_azure_locations_Valid() const{
    return m_azure_locations_isValid;
}

QDateTime OAIAzureReachabilityReportParameters::getEndTime() const {
    return m_end_time;
}
void OAIAzureReachabilityReportParameters::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIAzureReachabilityReportParameters::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIAzureReachabilityReportParameters::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAIAzureReachabilityReportLocation OAIAzureReachabilityReportParameters::getProviderLocation() const {
    return m_provider_location;
}
void OAIAzureReachabilityReportParameters::setProviderLocation(const OAIAzureReachabilityReportLocation &provider_location) {
    m_provider_location = provider_location;
    m_provider_location_isSet = true;
}

bool OAIAzureReachabilityReportParameters::is_provider_location_Set() const{
    return m_provider_location_isSet;
}

bool OAIAzureReachabilityReportParameters::is_provider_location_Valid() const{
    return m_provider_location_isValid;
}

QList<QString> OAIAzureReachabilityReportParameters::getProviders() const {
    return m_providers;
}
void OAIAzureReachabilityReportParameters::setProviders(const QList<QString> &providers) {
    m_providers = providers;
    m_providers_isSet = true;
}

bool OAIAzureReachabilityReportParameters::is_providers_Set() const{
    return m_providers_isSet;
}

bool OAIAzureReachabilityReportParameters::is_providers_Valid() const{
    return m_providers_isValid;
}

QDateTime OAIAzureReachabilityReportParameters::getStartTime() const {
    return m_start_time;
}
void OAIAzureReachabilityReportParameters::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIAzureReachabilityReportParameters::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIAzureReachabilityReportParameters::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIAzureReachabilityReportParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_azure_locations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_providers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureReachabilityReportParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_end_time_isValid && m_provider_location_isValid && m_start_time_isValid && true;
}

} // namespace OpenAPI
