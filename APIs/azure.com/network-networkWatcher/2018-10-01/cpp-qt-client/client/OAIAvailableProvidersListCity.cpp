/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-10-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAvailableProvidersListCity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAvailableProvidersListCity::OAIAvailableProvidersListCity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAvailableProvidersListCity::OAIAvailableProvidersListCity() {
    this->initializeModel();
}

OAIAvailableProvidersListCity::~OAIAvailableProvidersListCity() {}

void OAIAvailableProvidersListCity::initializeModel() {

    m_city_name_isSet = false;
    m_city_name_isValid = false;

    m_providers_isSet = false;
    m_providers_isValid = false;
}

void OAIAvailableProvidersListCity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAvailableProvidersListCity::fromJsonObject(QJsonObject json) {

    m_city_name_isValid = ::OpenAPI::fromJsonValue(m_city_name, json[QString("cityName")]);
    m_city_name_isSet = !json[QString("cityName")].isNull() && m_city_name_isValid;

    m_providers_isValid = ::OpenAPI::fromJsonValue(m_providers, json[QString("providers")]);
    m_providers_isSet = !json[QString("providers")].isNull() && m_providers_isValid;
}

QString OAIAvailableProvidersListCity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAvailableProvidersListCity::asJsonObject() const {
    QJsonObject obj;
    if (m_city_name_isSet) {
        obj.insert(QString("cityName"), ::OpenAPI::toJsonValue(m_city_name));
    }
    if (m_providers.size() > 0) {
        obj.insert(QString("providers"), ::OpenAPI::toJsonValue(m_providers));
    }
    return obj;
}

QString OAIAvailableProvidersListCity::getCityName() const {
    return m_city_name;
}
void OAIAvailableProvidersListCity::setCityName(const QString &city_name) {
    m_city_name = city_name;
    m_city_name_isSet = true;
}

bool OAIAvailableProvidersListCity::is_city_name_Set() const{
    return m_city_name_isSet;
}

bool OAIAvailableProvidersListCity::is_city_name_Valid() const{
    return m_city_name_isValid;
}

QList<QString> OAIAvailableProvidersListCity::getProviders() const {
    return m_providers;
}
void OAIAvailableProvidersListCity::setProviders(const QList<QString> &providers) {
    m_providers = providers;
    m_providers_isSet = true;
}

bool OAIAvailableProvidersListCity::is_providers_Set() const{
    return m_providers_isSet;
}

bool OAIAvailableProvidersListCity::is_providers_Valid() const{
    return m_providers_isValid;
}

bool OAIAvailableProvidersListCity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_city_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_providers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAvailableProvidersListCity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
