# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.matched_rule import MatchedRule
from openapi_server.models.network_security_rules_evaluation_result import NetworkSecurityRulesEvaluationResult
from openapi_server import util


class EvaluatedNetworkSecurityGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, applied_to: str=None, matched_rule: MatchedRule=None, network_security_group_id: str=None, rules_evaluation_result: List[NetworkSecurityRulesEvaluationResult]=None):
        """EvaluatedNetworkSecurityGroup - a model defined in OpenAPI

        :param applied_to: The applied_to of this EvaluatedNetworkSecurityGroup.
        :param matched_rule: The matched_rule of this EvaluatedNetworkSecurityGroup.
        :param network_security_group_id: The network_security_group_id of this EvaluatedNetworkSecurityGroup.
        :param rules_evaluation_result: The rules_evaluation_result of this EvaluatedNetworkSecurityGroup.
        """
        self.openapi_types = {
            'applied_to': str,
            'matched_rule': MatchedRule,
            'network_security_group_id': str,
            'rules_evaluation_result': List[NetworkSecurityRulesEvaluationResult]
        }

        self.attribute_map = {
            'applied_to': 'appliedTo',
            'matched_rule': 'matchedRule',
            'network_security_group_id': 'networkSecurityGroupId',
            'rules_evaluation_result': 'rulesEvaluationResult'
        }

        self._applied_to = applied_to
        self._matched_rule = matched_rule
        self._network_security_group_id = network_security_group_id
        self._rules_evaluation_result = rules_evaluation_result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluatedNetworkSecurityGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluatedNetworkSecurityGroup of this EvaluatedNetworkSecurityGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def applied_to(self):
        """Gets the applied_to of this EvaluatedNetworkSecurityGroup.

        Resource ID of nic or subnet to which network security group is applied.

        :return: The applied_to of this EvaluatedNetworkSecurityGroup.
        :rtype: str
        """
        return self._applied_to

    @applied_to.setter
    def applied_to(self, applied_to):
        """Sets the applied_to of this EvaluatedNetworkSecurityGroup.

        Resource ID of nic or subnet to which network security group is applied.

        :param applied_to: The applied_to of this EvaluatedNetworkSecurityGroup.
        :type applied_to: str
        """

        self._applied_to = applied_to

    @property
    def matched_rule(self):
        """Gets the matched_rule of this EvaluatedNetworkSecurityGroup.


        :return: The matched_rule of this EvaluatedNetworkSecurityGroup.
        :rtype: MatchedRule
        """
        return self._matched_rule

    @matched_rule.setter
    def matched_rule(self, matched_rule):
        """Sets the matched_rule of this EvaluatedNetworkSecurityGroup.


        :param matched_rule: The matched_rule of this EvaluatedNetworkSecurityGroup.
        :type matched_rule: MatchedRule
        """

        self._matched_rule = matched_rule

    @property
    def network_security_group_id(self):
        """Gets the network_security_group_id of this EvaluatedNetworkSecurityGroup.

        Network security group ID.

        :return: The network_security_group_id of this EvaluatedNetworkSecurityGroup.
        :rtype: str
        """
        return self._network_security_group_id

    @network_security_group_id.setter
    def network_security_group_id(self, network_security_group_id):
        """Sets the network_security_group_id of this EvaluatedNetworkSecurityGroup.

        Network security group ID.

        :param network_security_group_id: The network_security_group_id of this EvaluatedNetworkSecurityGroup.
        :type network_security_group_id: str
        """

        self._network_security_group_id = network_security_group_id

    @property
    def rules_evaluation_result(self):
        """Gets the rules_evaluation_result of this EvaluatedNetworkSecurityGroup.

        List of network security rules evaluation results.

        :return: The rules_evaluation_result of this EvaluatedNetworkSecurityGroup.
        :rtype: List[NetworkSecurityRulesEvaluationResult]
        """
        return self._rules_evaluation_result

    @rules_evaluation_result.setter
    def rules_evaluation_result(self, rules_evaluation_result):
        """Sets the rules_evaluation_result of this EvaluatedNetworkSecurityGroup.

        List of network security rules evaluation results.

        :param rules_evaluation_result: The rules_evaluation_result of this EvaluatedNetworkSecurityGroup.
        :type rules_evaluation_result: List[NetworkSecurityRulesEvaluationResult]
        """

        self._rules_evaluation_result = rules_evaluation_result
