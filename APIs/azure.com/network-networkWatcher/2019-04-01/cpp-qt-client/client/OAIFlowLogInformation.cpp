/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFlowLogInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFlowLogInformation::OAIFlowLogInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFlowLogInformation::OAIFlowLogInformation() {
    this->initializeModel();
}

OAIFlowLogInformation::~OAIFlowLogInformation() {}

void OAIFlowLogInformation::initializeModel() {

    m_flow_analytics_configuration_isSet = false;
    m_flow_analytics_configuration_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_target_resource_id_isSet = false;
    m_target_resource_id_isValid = false;
}

void OAIFlowLogInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFlowLogInformation::fromJsonObject(QJsonObject json) {

    m_flow_analytics_configuration_isValid = ::OpenAPI::fromJsonValue(m_flow_analytics_configuration, json[QString("flowAnalyticsConfiguration")]);
    m_flow_analytics_configuration_isSet = !json[QString("flowAnalyticsConfiguration")].isNull() && m_flow_analytics_configuration_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_target_resource_id_isValid = ::OpenAPI::fromJsonValue(m_target_resource_id, json[QString("targetResourceId")]);
    m_target_resource_id_isSet = !json[QString("targetResourceId")].isNull() && m_target_resource_id_isValid;
}

QString OAIFlowLogInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFlowLogInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_flow_analytics_configuration.isSet()) {
        obj.insert(QString("flowAnalyticsConfiguration"), ::OpenAPI::toJsonValue(m_flow_analytics_configuration));
    }
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_target_resource_id_isSet) {
        obj.insert(QString("targetResourceId"), ::OpenAPI::toJsonValue(m_target_resource_id));
    }
    return obj;
}

OAITrafficAnalyticsProperties OAIFlowLogInformation::getFlowAnalyticsConfiguration() const {
    return m_flow_analytics_configuration;
}
void OAIFlowLogInformation::setFlowAnalyticsConfiguration(const OAITrafficAnalyticsProperties &flow_analytics_configuration) {
    m_flow_analytics_configuration = flow_analytics_configuration;
    m_flow_analytics_configuration_isSet = true;
}

bool OAIFlowLogInformation::is_flow_analytics_configuration_Set() const{
    return m_flow_analytics_configuration_isSet;
}

bool OAIFlowLogInformation::is_flow_analytics_configuration_Valid() const{
    return m_flow_analytics_configuration_isValid;
}

OAIFlowLogProperties OAIFlowLogInformation::getProperties() const {
    return m_properties;
}
void OAIFlowLogInformation::setProperties(const OAIFlowLogProperties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIFlowLogInformation::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIFlowLogInformation::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIFlowLogInformation::getTargetResourceId() const {
    return m_target_resource_id;
}
void OAIFlowLogInformation::setTargetResourceId(const QString &target_resource_id) {
    m_target_resource_id = target_resource_id;
    m_target_resource_id_isSet = true;
}

bool OAIFlowLogInformation::is_target_resource_id_Set() const{
    return m_target_resource_id_isSet;
}

bool OAIFlowLogInformation::is_target_resource_id_Valid() const{
    return m_target_resource_id_isValid;
}

bool OAIFlowLogInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_flow_analytics_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFlowLogInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_properties_isValid && m_target_resource_id_isValid && true;
}

} // namespace OpenAPI
