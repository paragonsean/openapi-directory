/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkConfigurationDiagnosticProfile.h
 *
 * Parameters to compare with network configuration.
 */

#ifndef OAINetworkConfigurationDiagnosticProfile_H
#define OAINetworkConfigurationDiagnosticProfile_H

#include <QJsonObject>

#include "OAIDirection.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkConfigurationDiagnosticProfile : public OAIObject {
public:
    OAINetworkConfigurationDiagnosticProfile();
    OAINetworkConfigurationDiagnosticProfile(QString json);
    ~OAINetworkConfigurationDiagnosticProfile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDestination() const;
    void setDestination(const QString &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    QString getDestinationPort() const;
    void setDestinationPort(const QString &destination_port);
    bool is_destination_port_Set() const;
    bool is_destination_port_Valid() const;

    OAIDirection getDirection() const;
    void setDirection(const OAIDirection &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    QString m_destination_port;
    bool m_destination_port_isSet;
    bool m_destination_port_isValid;

    OAIDirection m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkConfigurationDiagnosticProfile)

#endif // OAINetworkConfigurationDiagnosticProfile_H
