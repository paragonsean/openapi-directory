/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRetentionPolicyParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRetentionPolicyParameters::OAIRetentionPolicyParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRetentionPolicyParameters::OAIRetentionPolicyParameters() {
    this->initializeModel();
}

OAIRetentionPolicyParameters::~OAIRetentionPolicyParameters() {}

void OAIRetentionPolicyParameters::initializeModel() {

    m_days_isSet = false;
    m_days_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;
}

void OAIRetentionPolicyParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRetentionPolicyParameters::fromJsonObject(QJsonObject json) {

    m_days_isValid = ::OpenAPI::fromJsonValue(m_days, json[QString("days")]);
    m_days_isSet = !json[QString("days")].isNull() && m_days_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;
}

QString OAIRetentionPolicyParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRetentionPolicyParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_days_isSet) {
        obj.insert(QString("days"), ::OpenAPI::toJsonValue(m_days));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    return obj;
}

qint32 OAIRetentionPolicyParameters::getDays() const {
    return m_days;
}
void OAIRetentionPolicyParameters::setDays(const qint32 &days) {
    m_days = days;
    m_days_isSet = true;
}

bool OAIRetentionPolicyParameters::is_days_Set() const{
    return m_days_isSet;
}

bool OAIRetentionPolicyParameters::is_days_Valid() const{
    return m_days_isValid;
}

bool OAIRetentionPolicyParameters::isEnabled() const {
    return m_enabled;
}
void OAIRetentionPolicyParameters::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIRetentionPolicyParameters::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIRetentionPolicyParameters::is_enabled_Valid() const{
    return m_enabled_isValid;
}

bool OAIRetentionPolicyParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRetentionPolicyParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
