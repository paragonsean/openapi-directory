/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMatchedRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMatchedRule::OAIMatchedRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMatchedRule::OAIMatchedRule() {
    this->initializeModel();
}

OAIMatchedRule::~OAIMatchedRule() {}

void OAIMatchedRule::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_rule_name_isSet = false;
    m_rule_name_isValid = false;
}

void OAIMatchedRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMatchedRule::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_rule_name_isValid = ::OpenAPI::fromJsonValue(m_rule_name, json[QString("ruleName")]);
    m_rule_name_isSet = !json[QString("ruleName")].isNull() && m_rule_name_isValid;
}

QString OAIMatchedRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMatchedRule::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_rule_name_isSet) {
        obj.insert(QString("ruleName"), ::OpenAPI::toJsonValue(m_rule_name));
    }
    return obj;
}

QString OAIMatchedRule::getAction() const {
    return m_action;
}
void OAIMatchedRule::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIMatchedRule::is_action_Set() const{
    return m_action_isSet;
}

bool OAIMatchedRule::is_action_Valid() const{
    return m_action_isValid;
}

QString OAIMatchedRule::getRuleName() const {
    return m_rule_name;
}
void OAIMatchedRule::setRuleName(const QString &rule_name) {
    m_rule_name = rule_name;
    m_rule_name_isSet = true;
}

bool OAIMatchedRule::is_rule_name_Set() const{
    return m_rule_name_isSet;
}

bool OAIMatchedRule::is_rule_name_Valid() const{
    return m_rule_name_isValid;
}

bool OAIMatchedRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMatchedRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
