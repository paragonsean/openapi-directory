/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrafficAnalyticsConfigurationProperties.h
 *
 * Parameters that define the configuration of traffic analytics.
 */

#ifndef OAITrafficAnalyticsConfigurationProperties_H
#define OAITrafficAnalyticsConfigurationProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITrafficAnalyticsConfigurationProperties : public OAIObject {
public:
    OAITrafficAnalyticsConfigurationProperties();
    OAITrafficAnalyticsConfigurationProperties(QString json);
    ~OAITrafficAnalyticsConfigurationProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    qint32 getTrafficAnalyticsInterval() const;
    void setTrafficAnalyticsInterval(const qint32 &traffic_analytics_interval);
    bool is_traffic_analytics_interval_Set() const;
    bool is_traffic_analytics_interval_Valid() const;

    QString getWorkspaceId() const;
    void setWorkspaceId(const QString &workspace_id);
    bool is_workspace_id_Set() const;
    bool is_workspace_id_Valid() const;

    QString getWorkspaceRegion() const;
    void setWorkspaceRegion(const QString &workspace_region);
    bool is_workspace_region_Set() const;
    bool is_workspace_region_Valid() const;

    QString getWorkspaceResourceId() const;
    void setWorkspaceResourceId(const QString &workspace_resource_id);
    bool is_workspace_resource_id_Set() const;
    bool is_workspace_resource_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    qint32 m_traffic_analytics_interval;
    bool m_traffic_analytics_interval_isSet;
    bool m_traffic_analytics_interval_isValid;

    QString m_workspace_id;
    bool m_workspace_id_isSet;
    bool m_workspace_id_isValid;

    QString m_workspace_region;
    bool m_workspace_region_isSet;
    bool m_workspace_region_isValid;

    QString m_workspace_resource_id;
    bool m_workspace_resource_id_isSet;
    bool m_workspace_resource_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrafficAnalyticsConfigurationProperties)

#endif // OAITrafficAnalyticsConfigurationProperties_H
