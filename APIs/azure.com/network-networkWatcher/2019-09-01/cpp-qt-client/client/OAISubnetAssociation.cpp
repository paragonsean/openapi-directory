/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-09-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubnetAssociation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubnetAssociation::OAISubnetAssociation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubnetAssociation::OAISubnetAssociation() {
    this->initializeModel();
}

OAISubnetAssociation::~OAISubnetAssociation() {}

void OAISubnetAssociation::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_security_rules_isSet = false;
    m_security_rules_isValid = false;
}

void OAISubnetAssociation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubnetAssociation::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_security_rules_isValid = ::OpenAPI::fromJsonValue(m_security_rules, json[QString("securityRules")]);
    m_security_rules_isSet = !json[QString("securityRules")].isNull() && m_security_rules_isValid;
}

QString OAISubnetAssociation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubnetAssociation::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_security_rules.size() > 0) {
        obj.insert(QString("securityRules"), ::OpenAPI::toJsonValue(m_security_rules));
    }
    return obj;
}

QString OAISubnetAssociation::getId() const {
    return m_id;
}
void OAISubnetAssociation::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISubnetAssociation::is_id_Set() const{
    return m_id_isSet;
}

bool OAISubnetAssociation::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAINetworkInterfaceAssociation_securityRules_inner> OAISubnetAssociation::getSecurityRules() const {
    return m_security_rules;
}
void OAISubnetAssociation::setSecurityRules(const QList<OAINetworkInterfaceAssociation_securityRules_inner> &security_rules) {
    m_security_rules = security_rules;
    m_security_rules_isSet = true;
}

bool OAISubnetAssociation::is_security_rules_Set() const{
    return m_security_rules_isSet;
}

bool OAISubnetAssociation::is_security_rules_Valid() const{
    return m_security_rules_isValid;
}

bool OAISubnetAssociation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubnetAssociation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
