/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NetworkInterfaceAssociation;
import org.openapitools.client.model.NetworkInterfaceAssociationSecurityRulesInner;
import org.openapitools.client.model.SecurityRuleAssociationsEffectiveSecurityRulesInner;
import org.openapitools.client.model.SubnetAssociation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * All security rules associated with the network interface.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:34:01.903102-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SecurityRuleAssociations {
  public static final String SERIALIZED_NAME_DEFAULT_SECURITY_RULES = "defaultSecurityRules";
  @SerializedName(SERIALIZED_NAME_DEFAULT_SECURITY_RULES)
  private List<NetworkInterfaceAssociationSecurityRulesInner> defaultSecurityRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_EFFECTIVE_SECURITY_RULES = "effectiveSecurityRules";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_SECURITY_RULES)
  private List<SecurityRuleAssociationsEffectiveSecurityRulesInner> effectiveSecurityRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_NETWORK_INTERFACE_ASSOCIATION = "networkInterfaceAssociation";
  @SerializedName(SERIALIZED_NAME_NETWORK_INTERFACE_ASSOCIATION)
  private NetworkInterfaceAssociation networkInterfaceAssociation;

  public static final String SERIALIZED_NAME_SUBNET_ASSOCIATION = "subnetAssociation";
  @SerializedName(SERIALIZED_NAME_SUBNET_ASSOCIATION)
  private SubnetAssociation subnetAssociation;

  public SecurityRuleAssociations() {
  }

  public SecurityRuleAssociations defaultSecurityRules(List<NetworkInterfaceAssociationSecurityRulesInner> defaultSecurityRules) {
    this.defaultSecurityRules = defaultSecurityRules;
    return this;
  }

  public SecurityRuleAssociations addDefaultSecurityRulesItem(NetworkInterfaceAssociationSecurityRulesInner defaultSecurityRulesItem) {
    if (this.defaultSecurityRules == null) {
      this.defaultSecurityRules = new ArrayList<>();
    }
    this.defaultSecurityRules.add(defaultSecurityRulesItem);
    return this;
  }

  /**
   * Collection of default security rules of the network security group.
   * @return defaultSecurityRules
   */
  @javax.annotation.Nullable
  public List<NetworkInterfaceAssociationSecurityRulesInner> getDefaultSecurityRules() {
    return defaultSecurityRules;
  }

  public void setDefaultSecurityRules(List<NetworkInterfaceAssociationSecurityRulesInner> defaultSecurityRules) {
    this.defaultSecurityRules = defaultSecurityRules;
  }


  public SecurityRuleAssociations effectiveSecurityRules(List<SecurityRuleAssociationsEffectiveSecurityRulesInner> effectiveSecurityRules) {
    this.effectiveSecurityRules = effectiveSecurityRules;
    return this;
  }

  public SecurityRuleAssociations addEffectiveSecurityRulesItem(SecurityRuleAssociationsEffectiveSecurityRulesInner effectiveSecurityRulesItem) {
    if (this.effectiveSecurityRules == null) {
      this.effectiveSecurityRules = new ArrayList<>();
    }
    this.effectiveSecurityRules.add(effectiveSecurityRulesItem);
    return this;
  }

  /**
   * Collection of effective security rules.
   * @return effectiveSecurityRules
   */
  @javax.annotation.Nullable
  public List<SecurityRuleAssociationsEffectiveSecurityRulesInner> getEffectiveSecurityRules() {
    return effectiveSecurityRules;
  }

  public void setEffectiveSecurityRules(List<SecurityRuleAssociationsEffectiveSecurityRulesInner> effectiveSecurityRules) {
    this.effectiveSecurityRules = effectiveSecurityRules;
  }


  public SecurityRuleAssociations networkInterfaceAssociation(NetworkInterfaceAssociation networkInterfaceAssociation) {
    this.networkInterfaceAssociation = networkInterfaceAssociation;
    return this;
  }

  /**
   * Get networkInterfaceAssociation
   * @return networkInterfaceAssociation
   */
  @javax.annotation.Nullable
  public NetworkInterfaceAssociation getNetworkInterfaceAssociation() {
    return networkInterfaceAssociation;
  }

  public void setNetworkInterfaceAssociation(NetworkInterfaceAssociation networkInterfaceAssociation) {
    this.networkInterfaceAssociation = networkInterfaceAssociation;
  }


  public SecurityRuleAssociations subnetAssociation(SubnetAssociation subnetAssociation) {
    this.subnetAssociation = subnetAssociation;
    return this;
  }

  /**
   * Get subnetAssociation
   * @return subnetAssociation
   */
  @javax.annotation.Nullable
  public SubnetAssociation getSubnetAssociation() {
    return subnetAssociation;
  }

  public void setSubnetAssociation(SubnetAssociation subnetAssociation) {
    this.subnetAssociation = subnetAssociation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecurityRuleAssociations securityRuleAssociations = (SecurityRuleAssociations) o;
    return Objects.equals(this.defaultSecurityRules, securityRuleAssociations.defaultSecurityRules) &&
        Objects.equals(this.effectiveSecurityRules, securityRuleAssociations.effectiveSecurityRules) &&
        Objects.equals(this.networkInterfaceAssociation, securityRuleAssociations.networkInterfaceAssociation) &&
        Objects.equals(this.subnetAssociation, securityRuleAssociations.subnetAssociation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultSecurityRules, effectiveSecurityRules, networkInterfaceAssociation, subnetAssociation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecurityRuleAssociations {\n");
    sb.append("    defaultSecurityRules: ").append(toIndentedString(defaultSecurityRules)).append("\n");
    sb.append("    effectiveSecurityRules: ").append(toIndentedString(effectiveSecurityRules)).append("\n");
    sb.append("    networkInterfaceAssociation: ").append(toIndentedString(networkInterfaceAssociation)).append("\n");
    sb.append("    subnetAssociation: ").append(toIndentedString(subnetAssociation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultSecurityRules");
    openapiFields.add("effectiveSecurityRules");
    openapiFields.add("networkInterfaceAssociation");
    openapiFields.add("subnetAssociation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SecurityRuleAssociations
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SecurityRuleAssociations.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SecurityRuleAssociations is not found in the empty JSON string", SecurityRuleAssociations.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SecurityRuleAssociations.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SecurityRuleAssociations` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("defaultSecurityRules") != null && !jsonObj.get("defaultSecurityRules").isJsonNull()) {
        JsonArray jsonArraydefaultSecurityRules = jsonObj.getAsJsonArray("defaultSecurityRules");
        if (jsonArraydefaultSecurityRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("defaultSecurityRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `defaultSecurityRules` to be an array in the JSON string but got `%s`", jsonObj.get("defaultSecurityRules").toString()));
          }

          // validate the optional field `defaultSecurityRules` (array)
          for (int i = 0; i < jsonArraydefaultSecurityRules.size(); i++) {
            NetworkInterfaceAssociationSecurityRulesInner.validateJsonElement(jsonArraydefaultSecurityRules.get(i));
          };
        }
      }
      if (jsonObj.get("effectiveSecurityRules") != null && !jsonObj.get("effectiveSecurityRules").isJsonNull()) {
        JsonArray jsonArrayeffectiveSecurityRules = jsonObj.getAsJsonArray("effectiveSecurityRules");
        if (jsonArrayeffectiveSecurityRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("effectiveSecurityRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `effectiveSecurityRules` to be an array in the JSON string but got `%s`", jsonObj.get("effectiveSecurityRules").toString()));
          }

          // validate the optional field `effectiveSecurityRules` (array)
          for (int i = 0; i < jsonArrayeffectiveSecurityRules.size(); i++) {
            SecurityRuleAssociationsEffectiveSecurityRulesInner.validateJsonElement(jsonArrayeffectiveSecurityRules.get(i));
          };
        }
      }
      // validate the optional field `networkInterfaceAssociation`
      if (jsonObj.get("networkInterfaceAssociation") != null && !jsonObj.get("networkInterfaceAssociation").isJsonNull()) {
        NetworkInterfaceAssociation.validateJsonElement(jsonObj.get("networkInterfaceAssociation"));
      }
      // validate the optional field `subnetAssociation`
      if (jsonObj.get("subnetAssociation") != null && !jsonObj.get("subnetAssociation").isJsonNull()) {
        SubnetAssociation.validateJsonElement(jsonObj.get("subnetAssociation"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SecurityRuleAssociations.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SecurityRuleAssociations' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SecurityRuleAssociations> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SecurityRuleAssociations.class));

       return (TypeAdapter<T>) new TypeAdapter<SecurityRuleAssociations>() {
           @Override
           public void write(JsonWriter out, SecurityRuleAssociations value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SecurityRuleAssociations read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SecurityRuleAssociations given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SecurityRuleAssociations
   * @throws IOException if the JSON string is invalid with respect to SecurityRuleAssociations
   */
  public static SecurityRuleAssociations fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SecurityRuleAssociations.class);
  }

  /**
   * Convert an instance of SecurityRuleAssociations to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

