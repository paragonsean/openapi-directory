/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2017-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureReachabilityReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureReachabilityReport::OAIAzureReachabilityReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureReachabilityReport::OAIAzureReachabilityReport() {
    this->initializeModel();
}

OAIAzureReachabilityReport::~OAIAzureReachabilityReport() {}

void OAIAzureReachabilityReport::initializeModel() {

    m_aggregation_level_isSet = false;
    m_aggregation_level_isValid = false;

    m_provider_location_isSet = false;
    m_provider_location_isValid = false;

    m_reachability_report_isSet = false;
    m_reachability_report_isValid = false;
}

void OAIAzureReachabilityReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureReachabilityReport::fromJsonObject(QJsonObject json) {

    m_aggregation_level_isValid = ::OpenAPI::fromJsonValue(m_aggregation_level, json[QString("aggregationLevel")]);
    m_aggregation_level_isSet = !json[QString("aggregationLevel")].isNull() && m_aggregation_level_isValid;

    m_provider_location_isValid = ::OpenAPI::fromJsonValue(m_provider_location, json[QString("providerLocation")]);
    m_provider_location_isSet = !json[QString("providerLocation")].isNull() && m_provider_location_isValid;

    m_reachability_report_isValid = ::OpenAPI::fromJsonValue(m_reachability_report, json[QString("reachabilityReport")]);
    m_reachability_report_isSet = !json[QString("reachabilityReport")].isNull() && m_reachability_report_isValid;
}

QString OAIAzureReachabilityReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureReachabilityReport::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregation_level_isSet) {
        obj.insert(QString("aggregationLevel"), ::OpenAPI::toJsonValue(m_aggregation_level));
    }
    if (m_provider_location.isSet()) {
        obj.insert(QString("providerLocation"), ::OpenAPI::toJsonValue(m_provider_location));
    }
    if (m_reachability_report.size() > 0) {
        obj.insert(QString("reachabilityReport"), ::OpenAPI::toJsonValue(m_reachability_report));
    }
    return obj;
}

QString OAIAzureReachabilityReport::getAggregationLevel() const {
    return m_aggregation_level;
}
void OAIAzureReachabilityReport::setAggregationLevel(const QString &aggregation_level) {
    m_aggregation_level = aggregation_level;
    m_aggregation_level_isSet = true;
}

bool OAIAzureReachabilityReport::is_aggregation_level_Set() const{
    return m_aggregation_level_isSet;
}

bool OAIAzureReachabilityReport::is_aggregation_level_Valid() const{
    return m_aggregation_level_isValid;
}

OAIAzureReachabilityReportLocation OAIAzureReachabilityReport::getProviderLocation() const {
    return m_provider_location;
}
void OAIAzureReachabilityReport::setProviderLocation(const OAIAzureReachabilityReportLocation &provider_location) {
    m_provider_location = provider_location;
    m_provider_location_isSet = true;
}

bool OAIAzureReachabilityReport::is_provider_location_Set() const{
    return m_provider_location_isSet;
}

bool OAIAzureReachabilityReport::is_provider_location_Valid() const{
    return m_provider_location_isValid;
}

QList<OAIAzureReachabilityReportItem> OAIAzureReachabilityReport::getReachabilityReport() const {
    return m_reachability_report;
}
void OAIAzureReachabilityReport::setReachabilityReport(const QList<OAIAzureReachabilityReportItem> &reachability_report) {
    m_reachability_report = reachability_report;
    m_reachability_report_isSet = true;
}

bool OAIAzureReachabilityReport::is_reachability_report_Set() const{
    return m_reachability_report_isSet;
}

bool OAIAzureReachabilityReport::is_reachability_report_Valid() const{
    return m_reachability_report_isValid;
}

bool OAIAzureReachabilityReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregation_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reachability_report.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureReachabilityReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_aggregation_level_isValid && m_provider_location_isValid && m_reachability_report_isValid && true;
}

} // namespace OpenAPI
