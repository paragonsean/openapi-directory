/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureReachabilityReportItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureReachabilityReportItem::OAIAzureReachabilityReportItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureReachabilityReportItem::OAIAzureReachabilityReportItem() {
    this->initializeModel();
}

OAIAzureReachabilityReportItem::~OAIAzureReachabilityReportItem() {}

void OAIAzureReachabilityReportItem::initializeModel() {

    m_azure_location_isSet = false;
    m_azure_location_isValid = false;

    m_latencies_isSet = false;
    m_latencies_isValid = false;

    m_provider_isSet = false;
    m_provider_isValid = false;
}

void OAIAzureReachabilityReportItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureReachabilityReportItem::fromJsonObject(QJsonObject json) {

    m_azure_location_isValid = ::OpenAPI::fromJsonValue(m_azure_location, json[QString("azureLocation")]);
    m_azure_location_isSet = !json[QString("azureLocation")].isNull() && m_azure_location_isValid;

    m_latencies_isValid = ::OpenAPI::fromJsonValue(m_latencies, json[QString("latencies")]);
    m_latencies_isSet = !json[QString("latencies")].isNull() && m_latencies_isValid;

    m_provider_isValid = ::OpenAPI::fromJsonValue(m_provider, json[QString("provider")]);
    m_provider_isSet = !json[QString("provider")].isNull() && m_provider_isValid;
}

QString OAIAzureReachabilityReportItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureReachabilityReportItem::asJsonObject() const {
    QJsonObject obj;
    if (m_azure_location_isSet) {
        obj.insert(QString("azureLocation"), ::OpenAPI::toJsonValue(m_azure_location));
    }
    if (m_latencies.size() > 0) {
        obj.insert(QString("latencies"), ::OpenAPI::toJsonValue(m_latencies));
    }
    if (m_provider_isSet) {
        obj.insert(QString("provider"), ::OpenAPI::toJsonValue(m_provider));
    }
    return obj;
}

QString OAIAzureReachabilityReportItem::getAzureLocation() const {
    return m_azure_location;
}
void OAIAzureReachabilityReportItem::setAzureLocation(const QString &azure_location) {
    m_azure_location = azure_location;
    m_azure_location_isSet = true;
}

bool OAIAzureReachabilityReportItem::is_azure_location_Set() const{
    return m_azure_location_isSet;
}

bool OAIAzureReachabilityReportItem::is_azure_location_Valid() const{
    return m_azure_location_isValid;
}

QList<OAIAzureReachabilityReportLatencyInfo> OAIAzureReachabilityReportItem::getLatencies() const {
    return m_latencies;
}
void OAIAzureReachabilityReportItem::setLatencies(const QList<OAIAzureReachabilityReportLatencyInfo> &latencies) {
    m_latencies = latencies;
    m_latencies_isSet = true;
}

bool OAIAzureReachabilityReportItem::is_latencies_Set() const{
    return m_latencies_isSet;
}

bool OAIAzureReachabilityReportItem::is_latencies_Valid() const{
    return m_latencies_isValid;
}

QString OAIAzureReachabilityReportItem::getProvider() const {
    return m_provider;
}
void OAIAzureReachabilityReportItem::setProvider(const QString &provider) {
    m_provider = provider;
    m_provider_isSet = true;
}

bool OAIAzureReachabilityReportItem::is_provider_Set() const{
    return m_provider_isSet;
}

bool OAIAzureReachabilityReportItem::is_provider_Valid() const{
    return m_provider_isValid;
}

bool OAIAzureReachabilityReportItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_azure_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latencies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureReachabilityReportItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
