/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-01-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISecurityGroupViewResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISecurityGroupViewResult::OAISecurityGroupViewResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISecurityGroupViewResult::OAISecurityGroupViewResult() {
    this->initializeModel();
}

OAISecurityGroupViewResult::~OAISecurityGroupViewResult() {}

void OAISecurityGroupViewResult::initializeModel() {

    m_network_interfaces_isSet = false;
    m_network_interfaces_isValid = false;
}

void OAISecurityGroupViewResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISecurityGroupViewResult::fromJsonObject(QJsonObject json) {

    m_network_interfaces_isValid = ::OpenAPI::fromJsonValue(m_network_interfaces, json[QString("networkInterfaces")]);
    m_network_interfaces_isSet = !json[QString("networkInterfaces")].isNull() && m_network_interfaces_isValid;
}

QString OAISecurityGroupViewResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISecurityGroupViewResult::asJsonObject() const {
    QJsonObject obj;
    if (m_network_interfaces.size() > 0) {
        obj.insert(QString("networkInterfaces"), ::OpenAPI::toJsonValue(m_network_interfaces));
    }
    return obj;
}

QList<OAISecurityGroupNetworkInterface> OAISecurityGroupViewResult::getNetworkInterfaces() const {
    return m_network_interfaces;
}
void OAISecurityGroupViewResult::setNetworkInterfaces(const QList<OAISecurityGroupNetworkInterface> &network_interfaces) {
    m_network_interfaces = network_interfaces;
    m_network_interfaces_isSet = true;
}

bool OAISecurityGroupViewResult::is_network_interfaces_Set() const{
    return m_network_interfaces_isSet;
}

bool OAISecurityGroupViewResult::is_network_interfaces_Valid() const{
    return m_network_interfaces_isValid;
}

bool OAISecurityGroupViewResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_interfaces.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISecurityGroupViewResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
