# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NextHopParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_ip_address: str=None, source_ip_address: str=None, target_nic_resource_id: str=None, target_resource_id: str=None):
        """NextHopParameters - a model defined in OpenAPI

        :param destination_ip_address: The destination_ip_address of this NextHopParameters.
        :param source_ip_address: The source_ip_address of this NextHopParameters.
        :param target_nic_resource_id: The target_nic_resource_id of this NextHopParameters.
        :param target_resource_id: The target_resource_id of this NextHopParameters.
        """
        self.openapi_types = {
            'destination_ip_address': str,
            'source_ip_address': str,
            'target_nic_resource_id': str,
            'target_resource_id': str
        }

        self.attribute_map = {
            'destination_ip_address': 'destinationIPAddress',
            'source_ip_address': 'sourceIPAddress',
            'target_nic_resource_id': 'targetNicResourceId',
            'target_resource_id': 'targetResourceId'
        }

        self._destination_ip_address = destination_ip_address
        self._source_ip_address = source_ip_address
        self._target_nic_resource_id = target_nic_resource_id
        self._target_resource_id = target_resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NextHopParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NextHopParameters of this NextHopParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_ip_address(self):
        """Gets the destination_ip_address of this NextHopParameters.

        The destination IP address.

        :return: The destination_ip_address of this NextHopParameters.
        :rtype: str
        """
        return self._destination_ip_address

    @destination_ip_address.setter
    def destination_ip_address(self, destination_ip_address):
        """Sets the destination_ip_address of this NextHopParameters.

        The destination IP address.

        :param destination_ip_address: The destination_ip_address of this NextHopParameters.
        :type destination_ip_address: str
        """
        if destination_ip_address is None:
            raise ValueError("Invalid value for `destination_ip_address`, must not be `None`")

        self._destination_ip_address = destination_ip_address

    @property
    def source_ip_address(self):
        """Gets the source_ip_address of this NextHopParameters.

        The source IP address.

        :return: The source_ip_address of this NextHopParameters.
        :rtype: str
        """
        return self._source_ip_address

    @source_ip_address.setter
    def source_ip_address(self, source_ip_address):
        """Sets the source_ip_address of this NextHopParameters.

        The source IP address.

        :param source_ip_address: The source_ip_address of this NextHopParameters.
        :type source_ip_address: str
        """
        if source_ip_address is None:
            raise ValueError("Invalid value for `source_ip_address`, must not be `None`")

        self._source_ip_address = source_ip_address

    @property
    def target_nic_resource_id(self):
        """Gets the target_nic_resource_id of this NextHopParameters.

        The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of the nics, then this parameter must be specified. Otherwise optional).

        :return: The target_nic_resource_id of this NextHopParameters.
        :rtype: str
        """
        return self._target_nic_resource_id

    @target_nic_resource_id.setter
    def target_nic_resource_id(self, target_nic_resource_id):
        """Sets the target_nic_resource_id of this NextHopParameters.

        The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of the nics, then this parameter must be specified. Otherwise optional).

        :param target_nic_resource_id: The target_nic_resource_id of this NextHopParameters.
        :type target_nic_resource_id: str
        """

        self._target_nic_resource_id = target_nic_resource_id

    @property
    def target_resource_id(self):
        """Gets the target_resource_id of this NextHopParameters.

        The resource identifier of the target resource against which the action is to be performed.

        :return: The target_resource_id of this NextHopParameters.
        :rtype: str
        """
        return self._target_resource_id

    @target_resource_id.setter
    def target_resource_id(self, target_resource_id):
        """Sets the target_resource_id of this NextHopParameters.

        The resource identifier of the target resource against which the action is to be performed.

        :param target_resource_id: The target_resource_id of this NextHopParameters.
        :type target_resource_id: str
        """
        if target_resource_id is None:
            raise ValueError("Invalid value for `target_resource_id`, must not be `None`")

        self._target_resource_id = target_resource_id
