# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.available_providers_list_state import AvailableProvidersListState
from openapi_server import util


class AvailableProvidersListCountry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_name: str=None, providers: List[str]=None, states: List[AvailableProvidersListState]=None):
        """AvailableProvidersListCountry - a model defined in OpenAPI

        :param country_name: The country_name of this AvailableProvidersListCountry.
        :param providers: The providers of this AvailableProvidersListCountry.
        :param states: The states of this AvailableProvidersListCountry.
        """
        self.openapi_types = {
            'country_name': str,
            'providers': List[str],
            'states': List[AvailableProvidersListState]
        }

        self.attribute_map = {
            'country_name': 'countryName',
            'providers': 'providers',
            'states': 'states'
        }

        self._country_name = country_name
        self._providers = providers
        self._states = states

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailableProvidersListCountry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvailableProvidersListCountry of this AvailableProvidersListCountry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_name(self):
        """Gets the country_name of this AvailableProvidersListCountry.

        The country name.

        :return: The country_name of this AvailableProvidersListCountry.
        :rtype: str
        """
        return self._country_name

    @country_name.setter
    def country_name(self, country_name):
        """Sets the country_name of this AvailableProvidersListCountry.

        The country name.

        :param country_name: The country_name of this AvailableProvidersListCountry.
        :type country_name: str
        """

        self._country_name = country_name

    @property
    def providers(self):
        """Gets the providers of this AvailableProvidersListCountry.

        A list of Internet service providers.

        :return: The providers of this AvailableProvidersListCountry.
        :rtype: List[str]
        """
        return self._providers

    @providers.setter
    def providers(self, providers):
        """Sets the providers of this AvailableProvidersListCountry.

        A list of Internet service providers.

        :param providers: The providers of this AvailableProvidersListCountry.
        :type providers: List[str]
        """

        self._providers = providers

    @property
    def states(self):
        """Gets the states of this AvailableProvidersListCountry.

        List of available states in the country.

        :return: The states of this AvailableProvidersListCountry.
        :rtype: List[AvailableProvidersListState]
        """
        return self._states

    @states.setter
    def states(self, states):
        """Sets the states of this AvailableProvidersListCountry.

        List of available states in the country.

        :param states: The states of this AvailableProvidersListCountry.
        :type states: List[AvailableProvidersListState]
        """

        self._states = states
