/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PacketCapture from '../model/PacketCapture';
import PacketCaptureListResult from '../model/PacketCaptureListResult';
import PacketCaptureQueryStatusResult from '../model/PacketCaptureQueryStatusResult';
import PacketCaptureResult from '../model/PacketCaptureResult';

/**
* PacketCaptures service.
* @module api/PacketCapturesApi
* @version 2018-01-01
*/
export default class PacketCapturesApi {

    /**
    * Constructs a new PacketCapturesApi. 
    * @alias module:api/PacketCapturesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the packetCapturesCreate operation.
     * @callback module:api/PacketCapturesApi~packetCapturesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PacketCaptureResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create and start a packet capture on the specified VM.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkWatcherName The name of the network watcher.
     * @param {String} packetCaptureName The name of the packet capture session.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/PacketCapture} parameters Parameters that define the create packet capture operation.
     * @param {module:api/PacketCapturesApi~packetCapturesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PacketCaptureResult}
     */
    packetCapturesCreate(resourceGroupName, networkWatcherName, packetCaptureName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling packetCapturesCreate");
      }
      // verify the required parameter 'networkWatcherName' is set
      if (networkWatcherName === undefined || networkWatcherName === null) {
        throw new Error("Missing the required parameter 'networkWatcherName' when calling packetCapturesCreate");
      }
      // verify the required parameter 'packetCaptureName' is set
      if (packetCaptureName === undefined || packetCaptureName === null) {
        throw new Error("Missing the required parameter 'packetCaptureName' when calling packetCapturesCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling packetCapturesCreate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling packetCapturesCreate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling packetCapturesCreate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkWatcherName': networkWatcherName,
        'packetCaptureName': packetCaptureName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = PacketCaptureResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the packetCapturesDelete operation.
     * @callback module:api/PacketCapturesApi~packetCapturesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified packet capture session.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkWatcherName The name of the network watcher.
     * @param {String} packetCaptureName The name of the packet capture session.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/PacketCapturesApi~packetCapturesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    packetCapturesDelete(resourceGroupName, networkWatcherName, packetCaptureName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling packetCapturesDelete");
      }
      // verify the required parameter 'networkWatcherName' is set
      if (networkWatcherName === undefined || networkWatcherName === null) {
        throw new Error("Missing the required parameter 'networkWatcherName' when calling packetCapturesDelete");
      }
      // verify the required parameter 'packetCaptureName' is set
      if (packetCaptureName === undefined || packetCaptureName === null) {
        throw new Error("Missing the required parameter 'packetCaptureName' when calling packetCapturesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling packetCapturesDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling packetCapturesDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkWatcherName': networkWatcherName,
        'packetCaptureName': packetCaptureName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the packetCapturesGet operation.
     * @callback module:api/PacketCapturesApi~packetCapturesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PacketCaptureResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a packet capture session by name.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkWatcherName The name of the network watcher.
     * @param {String} packetCaptureName The name of the packet capture session.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/PacketCapturesApi~packetCapturesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PacketCaptureResult}
     */
    packetCapturesGet(resourceGroupName, networkWatcherName, packetCaptureName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling packetCapturesGet");
      }
      // verify the required parameter 'networkWatcherName' is set
      if (networkWatcherName === undefined || networkWatcherName === null) {
        throw new Error("Missing the required parameter 'networkWatcherName' when calling packetCapturesGet");
      }
      // verify the required parameter 'packetCaptureName' is set
      if (packetCaptureName === undefined || packetCaptureName === null) {
        throw new Error("Missing the required parameter 'packetCaptureName' when calling packetCapturesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling packetCapturesGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling packetCapturesGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkWatcherName': networkWatcherName,
        'packetCaptureName': packetCaptureName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = PacketCaptureResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the packetCapturesGetStatus operation.
     * @callback module:api/PacketCapturesApi~packetCapturesGetStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PacketCaptureQueryStatusResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query the status of a running packet capture session.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkWatcherName The name of the Network Watcher resource.
     * @param {String} packetCaptureName The name given to the packet capture session.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/PacketCapturesApi~packetCapturesGetStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PacketCaptureQueryStatusResult}
     */
    packetCapturesGetStatus(resourceGroupName, networkWatcherName, packetCaptureName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling packetCapturesGetStatus");
      }
      // verify the required parameter 'networkWatcherName' is set
      if (networkWatcherName === undefined || networkWatcherName === null) {
        throw new Error("Missing the required parameter 'networkWatcherName' when calling packetCapturesGetStatus");
      }
      // verify the required parameter 'packetCaptureName' is set
      if (packetCaptureName === undefined || packetCaptureName === null) {
        throw new Error("Missing the required parameter 'packetCaptureName' when calling packetCapturesGetStatus");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling packetCapturesGetStatus");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling packetCapturesGetStatus");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkWatcherName': networkWatcherName,
        'packetCaptureName': packetCaptureName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = PacketCaptureQueryStatusResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the packetCapturesList operation.
     * @callback module:api/PacketCapturesApi~packetCapturesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PacketCaptureListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all packet capture sessions within the specified resource group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkWatcherName The name of the Network Watcher resource.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/PacketCapturesApi~packetCapturesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PacketCaptureListResult}
     */
    packetCapturesList(resourceGroupName, networkWatcherName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling packetCapturesList");
      }
      // verify the required parameter 'networkWatcherName' is set
      if (networkWatcherName === undefined || networkWatcherName === null) {
        throw new Error("Missing the required parameter 'networkWatcherName' when calling packetCapturesList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling packetCapturesList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling packetCapturesList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkWatcherName': networkWatcherName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = PacketCaptureListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the packetCapturesStop operation.
     * @callback module:api/PacketCapturesApi~packetCapturesStopCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Stops a specified packet capture session.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkWatcherName The name of the network watcher.
     * @param {String} packetCaptureName The name of the packet capture session.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/PacketCapturesApi~packetCapturesStopCallback} callback The callback function, accepting three arguments: error, data, response
     */
    packetCapturesStop(resourceGroupName, networkWatcherName, packetCaptureName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling packetCapturesStop");
      }
      // verify the required parameter 'networkWatcherName' is set
      if (networkWatcherName === undefined || networkWatcherName === null) {
        throw new Error("Missing the required parameter 'networkWatcherName' when calling packetCapturesStop");
      }
      // verify the required parameter 'packetCaptureName' is set
      if (packetCaptureName === undefined || packetCaptureName === null) {
        throw new Error("Missing the required parameter 'packetCaptureName' when calling packetCapturesStop");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling packetCapturesStop");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling packetCapturesStop");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkWatcherName': networkWatcherName,
        'packetCaptureName': packetCaptureName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
