/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FlowLogFormatParameters from './FlowLogFormatParameters';
import RetentionPolicyParameters from './RetentionPolicyParameters';

/**
 * The FlowLogProperties model module.
 * @module model/FlowLogProperties
 * @version 2019-07-01
 */
class FlowLogProperties {
    /**
     * Constructs a new <code>FlowLogProperties</code>.
     * Parameters that define the configuration of flow log.
     * @alias module:model/FlowLogProperties
     * @param enabled {Boolean} Flag to enable/disable flow logging.
     * @param storageId {String} ID of the storage account which is used to store the flow log.
     */
    constructor(enabled, storageId) { 
        
        FlowLogProperties.initialize(this, enabled, storageId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enabled, storageId) { 
        obj['enabled'] = enabled;
        obj['storageId'] = storageId;
    }

    /**
     * Constructs a <code>FlowLogProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FlowLogProperties} obj Optional instance to populate.
     * @return {module:model/FlowLogProperties} The populated <code>FlowLogProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FlowLogProperties();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = FlowLogFormatParameters.constructFromObject(data['format']);
            }
            if (data.hasOwnProperty('retentionPolicy')) {
                obj['retentionPolicy'] = RetentionPolicyParameters.constructFromObject(data['retentionPolicy']);
            }
            if (data.hasOwnProperty('storageId')) {
                obj['storageId'] = ApiClient.convertToType(data['storageId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FlowLogProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FlowLogProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FlowLogProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `format`
        if (data['format']) { // data not null
          FlowLogFormatParameters.validateJSON(data['format']);
        }
        // validate the optional field `retentionPolicy`
        if (data['retentionPolicy']) { // data not null
          RetentionPolicyParameters.validateJSON(data['retentionPolicy']);
        }
        // ensure the json data is a string
        if (data['storageId'] && !(typeof data['storageId'] === 'string' || data['storageId'] instanceof String)) {
            throw new Error("Expected the field `storageId` to be a primitive type in the JSON string but got " + data['storageId']);
        }

        return true;
    }


}

FlowLogProperties.RequiredProperties = ["enabled", "storageId"];

/**
 * Flag to enable/disable flow logging.
 * @member {Boolean} enabled
 */
FlowLogProperties.prototype['enabled'] = undefined;

/**
 * @member {module:model/FlowLogFormatParameters} format
 */
FlowLogProperties.prototype['format'] = undefined;

/**
 * @member {module:model/RetentionPolicyParameters} retentionPolicy
 */
FlowLogProperties.prototype['retentionPolicy'] = undefined;

/**
 * ID of the storage account which is used to store the flow log.
 * @member {String} storageId
 */
FlowLogProperties.prototype['storageId'] = undefined;






export default FlowLogProperties;

