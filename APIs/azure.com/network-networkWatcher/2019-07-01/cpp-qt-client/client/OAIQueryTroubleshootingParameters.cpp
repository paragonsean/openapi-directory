/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-07-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryTroubleshootingParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryTroubleshootingParameters::OAIQueryTroubleshootingParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryTroubleshootingParameters::OAIQueryTroubleshootingParameters() {
    this->initializeModel();
}

OAIQueryTroubleshootingParameters::~OAIQueryTroubleshootingParameters() {}

void OAIQueryTroubleshootingParameters::initializeModel() {

    m_target_resource_id_isSet = false;
    m_target_resource_id_isValid = false;
}

void OAIQueryTroubleshootingParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueryTroubleshootingParameters::fromJsonObject(QJsonObject json) {

    m_target_resource_id_isValid = ::OpenAPI::fromJsonValue(m_target_resource_id, json[QString("targetResourceId")]);
    m_target_resource_id_isSet = !json[QString("targetResourceId")].isNull() && m_target_resource_id_isValid;
}

QString OAIQueryTroubleshootingParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueryTroubleshootingParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_target_resource_id_isSet) {
        obj.insert(QString("targetResourceId"), ::OpenAPI::toJsonValue(m_target_resource_id));
    }
    return obj;
}

QString OAIQueryTroubleshootingParameters::getTargetResourceId() const {
    return m_target_resource_id;
}
void OAIQueryTroubleshootingParameters::setTargetResourceId(const QString &target_resource_id) {
    m_target_resource_id = target_resource_id;
    m_target_resource_id_isSet = true;
}

bool OAIQueryTroubleshootingParameters::is_target_resource_id_Set() const{
    return m_target_resource_id_isSet;
}

bool OAIQueryTroubleshootingParameters::is_target_resource_id_Valid() const{
    return m_target_resource_id_isValid;
}

bool OAIQueryTroubleshootingParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueryTroubleshootingParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_target_resource_id_isValid && true;
}

} // namespace OpenAPI
