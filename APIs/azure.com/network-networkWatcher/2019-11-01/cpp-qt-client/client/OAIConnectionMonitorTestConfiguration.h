/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnectionMonitorTestConfiguration.h
 *
 * Describes a connection monitor test configuration.
 */

#ifndef OAIConnectionMonitorTestConfiguration_H
#define OAIConnectionMonitorTestConfiguration_H

#include <QJsonObject>

#include "OAIConnectionMonitorHttpConfiguration.h"
#include "OAIConnectionMonitorIcmpConfiguration.h"
#include "OAIConnectionMonitorSuccessThreshold.h"
#include "OAIConnectionMonitorTcpConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConnectionMonitorHttpConfiguration;
class OAIConnectionMonitorIcmpConfiguration;
class OAIConnectionMonitorSuccessThreshold;
class OAIConnectionMonitorTcpConfiguration;

class OAIConnectionMonitorTestConfiguration : public OAIObject {
public:
    OAIConnectionMonitorTestConfiguration();
    OAIConnectionMonitorTestConfiguration(QString json);
    ~OAIConnectionMonitorTestConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConnectionMonitorHttpConfiguration getHttpConfiguration() const;
    void setHttpConfiguration(const OAIConnectionMonitorHttpConfiguration &http_configuration);
    bool is_http_configuration_Set() const;
    bool is_http_configuration_Valid() const;

    OAIConnectionMonitorIcmpConfiguration getIcmpConfiguration() const;
    void setIcmpConfiguration(const OAIConnectionMonitorIcmpConfiguration &icmp_configuration);
    bool is_icmp_configuration_Set() const;
    bool is_icmp_configuration_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPreferredIpVersion() const;
    void setPreferredIpVersion(const QString &preferred_ip_version);
    bool is_preferred_ip_version_Set() const;
    bool is_preferred_ip_version_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    OAIConnectionMonitorSuccessThreshold getSuccessThreshold() const;
    void setSuccessThreshold(const OAIConnectionMonitorSuccessThreshold &success_threshold);
    bool is_success_threshold_Set() const;
    bool is_success_threshold_Valid() const;

    OAIConnectionMonitorTcpConfiguration getTcpConfiguration() const;
    void setTcpConfiguration(const OAIConnectionMonitorTcpConfiguration &tcp_configuration);
    bool is_tcp_configuration_Set() const;
    bool is_tcp_configuration_Valid() const;

    qint32 getTestFrequencySec() const;
    void setTestFrequencySec(const qint32 &test_frequency_sec);
    bool is_test_frequency_sec_Set() const;
    bool is_test_frequency_sec_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConnectionMonitorHttpConfiguration m_http_configuration;
    bool m_http_configuration_isSet;
    bool m_http_configuration_isValid;

    OAIConnectionMonitorIcmpConfiguration m_icmp_configuration;
    bool m_icmp_configuration_isSet;
    bool m_icmp_configuration_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_preferred_ip_version;
    bool m_preferred_ip_version_isSet;
    bool m_preferred_ip_version_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    OAIConnectionMonitorSuccessThreshold m_success_threshold;
    bool m_success_threshold_isSet;
    bool m_success_threshold_isValid;

    OAIConnectionMonitorTcpConfiguration m_tcp_configuration;
    bool m_tcp_configuration_isSet;
    bool m_tcp_configuration_isValid;

    qint32 m_test_frequency_sec;
    bool m_test_frequency_sec_isSet;
    bool m_test_frequency_sec_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnectionMonitorTestConfiguration)

#endif // OAIConnectionMonitorTestConfiguration_H
