/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectionMonitorSuccessThreshold.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectionMonitorSuccessThreshold::OAIConnectionMonitorSuccessThreshold(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectionMonitorSuccessThreshold::OAIConnectionMonitorSuccessThreshold() {
    this->initializeModel();
}

OAIConnectionMonitorSuccessThreshold::~OAIConnectionMonitorSuccessThreshold() {}

void OAIConnectionMonitorSuccessThreshold::initializeModel() {

    m_checks_failed_percent_isSet = false;
    m_checks_failed_percent_isValid = false;

    m_round_trip_time_ms_isSet = false;
    m_round_trip_time_ms_isValid = false;
}

void OAIConnectionMonitorSuccessThreshold::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnectionMonitorSuccessThreshold::fromJsonObject(QJsonObject json) {

    m_checks_failed_percent_isValid = ::OpenAPI::fromJsonValue(m_checks_failed_percent, json[QString("checksFailedPercent")]);
    m_checks_failed_percent_isSet = !json[QString("checksFailedPercent")].isNull() && m_checks_failed_percent_isValid;

    m_round_trip_time_ms_isValid = ::OpenAPI::fromJsonValue(m_round_trip_time_ms, json[QString("roundTripTimeMs")]);
    m_round_trip_time_ms_isSet = !json[QString("roundTripTimeMs")].isNull() && m_round_trip_time_ms_isValid;
}

QString OAIConnectionMonitorSuccessThreshold::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnectionMonitorSuccessThreshold::asJsonObject() const {
    QJsonObject obj;
    if (m_checks_failed_percent_isSet) {
        obj.insert(QString("checksFailedPercent"), ::OpenAPI::toJsonValue(m_checks_failed_percent));
    }
    if (m_round_trip_time_ms_isSet) {
        obj.insert(QString("roundTripTimeMs"), ::OpenAPI::toJsonValue(m_round_trip_time_ms));
    }
    return obj;
}

qint32 OAIConnectionMonitorSuccessThreshold::getChecksFailedPercent() const {
    return m_checks_failed_percent;
}
void OAIConnectionMonitorSuccessThreshold::setChecksFailedPercent(const qint32 &checks_failed_percent) {
    m_checks_failed_percent = checks_failed_percent;
    m_checks_failed_percent_isSet = true;
}

bool OAIConnectionMonitorSuccessThreshold::is_checks_failed_percent_Set() const{
    return m_checks_failed_percent_isSet;
}

bool OAIConnectionMonitorSuccessThreshold::is_checks_failed_percent_Valid() const{
    return m_checks_failed_percent_isValid;
}

qint32 OAIConnectionMonitorSuccessThreshold::getRoundTripTimeMs() const {
    return m_round_trip_time_ms;
}
void OAIConnectionMonitorSuccessThreshold::setRoundTripTimeMs(const qint32 &round_trip_time_ms) {
    m_round_trip_time_ms = round_trip_time_ms;
    m_round_trip_time_ms_isSet = true;
}

bool OAIConnectionMonitorSuccessThreshold::is_round_trip_time_ms_Set() const{
    return m_round_trip_time_ms_isSet;
}

bool OAIConnectionMonitorSuccessThreshold::is_round_trip_time_ms_Valid() const{
    return m_round_trip_time_ms_isValid;
}

bool OAIConnectionMonitorSuccessThreshold::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_checks_failed_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_round_trip_time_ms_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnectionMonitorSuccessThreshold::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
