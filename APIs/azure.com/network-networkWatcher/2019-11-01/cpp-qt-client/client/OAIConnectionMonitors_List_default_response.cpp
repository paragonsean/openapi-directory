/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectionMonitors_List_default_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectionMonitors_List_default_response::OAIConnectionMonitors_List_default_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectionMonitors_List_default_response::OAIConnectionMonitors_List_default_response() {
    this->initializeModel();
}

OAIConnectionMonitors_List_default_response::~OAIConnectionMonitors_List_default_response() {}

void OAIConnectionMonitors_List_default_response::initializeModel() {

    m_error_isSet = false;
    m_error_isValid = false;
}

void OAIConnectionMonitors_List_default_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnectionMonitors_List_default_response::fromJsonObject(QJsonObject json) {

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;
}

QString OAIConnectionMonitors_List_default_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnectionMonitors_List_default_response::asJsonObject() const {
    QJsonObject obj;
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    return obj;
}

OAIConnectionMonitors_List_default_response_error OAIConnectionMonitors_List_default_response::getError() const {
    return m_error;
}
void OAIConnectionMonitors_List_default_response::setError(const OAIConnectionMonitors_List_default_response_error &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIConnectionMonitors_List_default_response::is_error_Set() const{
    return m_error_isSet;
}

bool OAIConnectionMonitors_List_default_response::is_error_Valid() const{
    return m_error_isValid;
}

bool OAIConnectionMonitors_List_default_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnectionMonitors_List_default_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
