/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectionMonitorWorkspaceSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectionMonitorWorkspaceSettings::OAIConnectionMonitorWorkspaceSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectionMonitorWorkspaceSettings::OAIConnectionMonitorWorkspaceSettings() {
    this->initializeModel();
}

OAIConnectionMonitorWorkspaceSettings::~OAIConnectionMonitorWorkspaceSettings() {}

void OAIConnectionMonitorWorkspaceSettings::initializeModel() {

    m_workspace_resource_id_isSet = false;
    m_workspace_resource_id_isValid = false;
}

void OAIConnectionMonitorWorkspaceSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnectionMonitorWorkspaceSettings::fromJsonObject(QJsonObject json) {

    m_workspace_resource_id_isValid = ::OpenAPI::fromJsonValue(m_workspace_resource_id, json[QString("workspaceResourceId")]);
    m_workspace_resource_id_isSet = !json[QString("workspaceResourceId")].isNull() && m_workspace_resource_id_isValid;
}

QString OAIConnectionMonitorWorkspaceSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnectionMonitorWorkspaceSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_workspace_resource_id_isSet) {
        obj.insert(QString("workspaceResourceId"), ::OpenAPI::toJsonValue(m_workspace_resource_id));
    }
    return obj;
}

QString OAIConnectionMonitorWorkspaceSettings::getWorkspaceResourceId() const {
    return m_workspace_resource_id;
}
void OAIConnectionMonitorWorkspaceSettings::setWorkspaceResourceId(const QString &workspace_resource_id) {
    m_workspace_resource_id = workspace_resource_id;
    m_workspace_resource_id_isSet = true;
}

bool OAIConnectionMonitorWorkspaceSettings::is_workspace_resource_id_Set() const{
    return m_workspace_resource_id_isSet;
}

bool OAIConnectionMonitorWorkspaceSettings::is_workspace_resource_id_Valid() const{
    return m_workspace_resource_id_isValid;
}

bool OAIConnectionMonitorWorkspaceSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_workspace_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnectionMonitorWorkspaceSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
