/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-11-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlowLogPropertiesFormat.h
 *
 * Parameters that define the configuration of flow log.
 */

#ifndef OAIFlowLogPropertiesFormat_H
#define OAIFlowLogPropertiesFormat_H

#include <QJsonObject>

#include "OAIFlowLogFormatParameters.h"
#include "OAIRetentionPolicyParameters.h"
#include "OAITrafficAnalyticsProperties.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITrafficAnalyticsProperties;
class OAIFlowLogFormatParameters;
class OAIRetentionPolicyParameters;

class OAIFlowLogPropertiesFormat : public OAIObject {
public:
    OAIFlowLogPropertiesFormat();
    OAIFlowLogPropertiesFormat(QString json);
    ~OAIFlowLogPropertiesFormat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    OAITrafficAnalyticsProperties getFlowAnalyticsConfiguration() const;
    void setFlowAnalyticsConfiguration(const OAITrafficAnalyticsProperties &flow_analytics_configuration);
    bool is_flow_analytics_configuration_Set() const;
    bool is_flow_analytics_configuration_Valid() const;

    OAIFlowLogFormatParameters getFormat() const;
    void setFormat(const OAIFlowLogFormatParameters &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIRetentionPolicyParameters getRetentionPolicy() const;
    void setRetentionPolicy(const OAIRetentionPolicyParameters &retention_policy);
    bool is_retention_policy_Set() const;
    bool is_retention_policy_Valid() const;

    QString getStorageId() const;
    void setStorageId(const QString &storage_id);
    bool is_storage_id_Set() const;
    bool is_storage_id_Valid() const;

    QString getTargetResourceGuid() const;
    void setTargetResourceGuid(const QString &target_resource_guid);
    bool is_target_resource_guid_Set() const;
    bool is_target_resource_guid_Valid() const;

    QString getTargetResourceId() const;
    void setTargetResourceId(const QString &target_resource_id);
    bool is_target_resource_id_Set() const;
    bool is_target_resource_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    OAITrafficAnalyticsProperties m_flow_analytics_configuration;
    bool m_flow_analytics_configuration_isSet;
    bool m_flow_analytics_configuration_isValid;

    OAIFlowLogFormatParameters m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIRetentionPolicyParameters m_retention_policy;
    bool m_retention_policy_isSet;
    bool m_retention_policy_isValid;

    QString m_storage_id;
    bool m_storage_id_isSet;
    bool m_storage_id_isValid;

    QString m_target_resource_guid;
    bool m_target_resource_guid_isSet;
    bool m_target_resource_guid_isValid;

    QString m_target_resource_id;
    bool m_target_resource_id_isSet;
    bool m_target_resource_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlowLogPropertiesFormat)

#endif // OAIFlowLogPropertiesFormat_H
