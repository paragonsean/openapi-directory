# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectionMonitorTcpConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_trace_route: bool=None, port: int=None):
        """ConnectionMonitorTcpConfiguration - a model defined in OpenAPI

        :param disable_trace_route: The disable_trace_route of this ConnectionMonitorTcpConfiguration.
        :param port: The port of this ConnectionMonitorTcpConfiguration.
        """
        self.openapi_types = {
            'disable_trace_route': bool,
            'port': int
        }

        self.attribute_map = {
            'disable_trace_route': 'disableTraceRoute',
            'port': 'port'
        }

        self._disable_trace_route = disable_trace_route
        self._port = port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectionMonitorTcpConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectionMonitorTcpConfiguration of this ConnectionMonitorTcpConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_trace_route(self):
        """Gets the disable_trace_route of this ConnectionMonitorTcpConfiguration.

        Value indicating whether path evaluation with trace route should be disabled.

        :return: The disable_trace_route of this ConnectionMonitorTcpConfiguration.
        :rtype: bool
        """
        return self._disable_trace_route

    @disable_trace_route.setter
    def disable_trace_route(self, disable_trace_route):
        """Sets the disable_trace_route of this ConnectionMonitorTcpConfiguration.

        Value indicating whether path evaluation with trace route should be disabled.

        :param disable_trace_route: The disable_trace_route of this ConnectionMonitorTcpConfiguration.
        :type disable_trace_route: bool
        """

        self._disable_trace_route = disable_trace_route

    @property
    def port(self):
        """Gets the port of this ConnectionMonitorTcpConfiguration.

        The port to connect to.

        :return: The port of this ConnectionMonitorTcpConfiguration.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this ConnectionMonitorTcpConfiguration.

        The port to connect to.

        :param port: The port of this ConnectionMonitorTcpConfiguration.
        :type port: int
        """

        self._port = port
