# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectionMonitorWorkspaceSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workspace_resource_id: str=None):
        """ConnectionMonitorWorkspaceSettings - a model defined in OpenAPI

        :param workspace_resource_id: The workspace_resource_id of this ConnectionMonitorWorkspaceSettings.
        """
        self.openapi_types = {
            'workspace_resource_id': str
        }

        self.attribute_map = {
            'workspace_resource_id': 'workspaceResourceId'
        }

        self._workspace_resource_id = workspace_resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectionMonitorWorkspaceSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectionMonitorWorkspaceSettings of this ConnectionMonitorWorkspaceSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workspace_resource_id(self):
        """Gets the workspace_resource_id of this ConnectionMonitorWorkspaceSettings.

        Log analytics workspace resource ID.

        :return: The workspace_resource_id of this ConnectionMonitorWorkspaceSettings.
        :rtype: str
        """
        return self._workspace_resource_id

    @workspace_resource_id.setter
    def workspace_resource_id(self, workspace_resource_id):
        """Sets the workspace_resource_id of this ConnectionMonitorWorkspaceSettings.

        Log analytics workspace resource ID.

        :param workspace_resource_id: The workspace_resource_id of this ConnectionMonitorWorkspaceSettings.
        :type workspace_resource_id: str
        """

        self._workspace_resource_id = workspace_resource_id
