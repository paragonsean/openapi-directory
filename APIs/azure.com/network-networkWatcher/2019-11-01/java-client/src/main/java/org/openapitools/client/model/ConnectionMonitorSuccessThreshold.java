/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes the threshold for declaring a test successful.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:33:12.028284-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ConnectionMonitorSuccessThreshold {
  public static final String SERIALIZED_NAME_CHECKS_FAILED_PERCENT = "checksFailedPercent";
  @SerializedName(SERIALIZED_NAME_CHECKS_FAILED_PERCENT)
  private Integer checksFailedPercent;

  public static final String SERIALIZED_NAME_ROUND_TRIP_TIME_MS = "roundTripTimeMs";
  @SerializedName(SERIALIZED_NAME_ROUND_TRIP_TIME_MS)
  private Integer roundTripTimeMs;

  public ConnectionMonitorSuccessThreshold() {
  }

  public ConnectionMonitorSuccessThreshold checksFailedPercent(Integer checksFailedPercent) {
    this.checksFailedPercent = checksFailedPercent;
    return this;
  }

  /**
   * The maximum percentage of failed checks permitted for a test to evaluate as successful.
   * @return checksFailedPercent
   */
  @javax.annotation.Nullable
  public Integer getChecksFailedPercent() {
    return checksFailedPercent;
  }

  public void setChecksFailedPercent(Integer checksFailedPercent) {
    this.checksFailedPercent = checksFailedPercent;
  }


  public ConnectionMonitorSuccessThreshold roundTripTimeMs(Integer roundTripTimeMs) {
    this.roundTripTimeMs = roundTripTimeMs;
    return this;
  }

  /**
   * The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
   * @return roundTripTimeMs
   */
  @javax.annotation.Nullable
  public Integer getRoundTripTimeMs() {
    return roundTripTimeMs;
  }

  public void setRoundTripTimeMs(Integer roundTripTimeMs) {
    this.roundTripTimeMs = roundTripTimeMs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionMonitorSuccessThreshold connectionMonitorSuccessThreshold = (ConnectionMonitorSuccessThreshold) o;
    return Objects.equals(this.checksFailedPercent, connectionMonitorSuccessThreshold.checksFailedPercent) &&
        Objects.equals(this.roundTripTimeMs, connectionMonitorSuccessThreshold.roundTripTimeMs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(checksFailedPercent, roundTripTimeMs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionMonitorSuccessThreshold {\n");
    sb.append("    checksFailedPercent: ").append(toIndentedString(checksFailedPercent)).append("\n");
    sb.append("    roundTripTimeMs: ").append(toIndentedString(roundTripTimeMs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("checksFailedPercent");
    openapiFields.add("roundTripTimeMs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ConnectionMonitorSuccessThreshold
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ConnectionMonitorSuccessThreshold.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConnectionMonitorSuccessThreshold is not found in the empty JSON string", ConnectionMonitorSuccessThreshold.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ConnectionMonitorSuccessThreshold.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConnectionMonitorSuccessThreshold` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConnectionMonitorSuccessThreshold.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConnectionMonitorSuccessThreshold' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConnectionMonitorSuccessThreshold> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConnectionMonitorSuccessThreshold.class));

       return (TypeAdapter<T>) new TypeAdapter<ConnectionMonitorSuccessThreshold>() {
           @Override
           public void write(JsonWriter out, ConnectionMonitorSuccessThreshold value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConnectionMonitorSuccessThreshold read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ConnectionMonitorSuccessThreshold given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ConnectionMonitorSuccessThreshold
   * @throws IOException if the JSON string is invalid with respect to ConnectionMonitorSuccessThreshold
   */
  public static ConnectionMonitorSuccessThreshold fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConnectionMonitorSuccessThreshold.class);
  }

  /**
   * Convert an instance of ConnectionMonitorSuccessThreshold to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

