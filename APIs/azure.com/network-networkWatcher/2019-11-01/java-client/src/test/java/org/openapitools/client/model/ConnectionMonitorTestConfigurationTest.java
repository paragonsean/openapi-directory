/*
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ConnectionMonitorHttpConfiguration;
import org.openapitools.client.model.ConnectionMonitorIcmpConfiguration;
import org.openapitools.client.model.ConnectionMonitorSuccessThreshold;
import org.openapitools.client.model.ConnectionMonitorTcpConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ConnectionMonitorTestConfiguration
 */
public class ConnectionMonitorTestConfigurationTest {
    private final ConnectionMonitorTestConfiguration model = new ConnectionMonitorTestConfiguration();

    /**
     * Model tests for ConnectionMonitorTestConfiguration
     */
    @Test
    public void testConnectionMonitorTestConfiguration() {
        // TODO: test ConnectionMonitorTestConfiguration
    }

    /**
     * Test the property 'httpConfiguration'
     */
    @Test
    public void httpConfigurationTest() {
        // TODO: test httpConfiguration
    }

    /**
     * Test the property 'icmpConfiguration'
     */
    @Test
    public void icmpConfigurationTest() {
        // TODO: test icmpConfiguration
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'preferredIPVersion'
     */
    @Test
    public void preferredIPVersionTest() {
        // TODO: test preferredIPVersion
    }

    /**
     * Test the property 'protocol'
     */
    @Test
    public void protocolTest() {
        // TODO: test protocol
    }

    /**
     * Test the property 'successThreshold'
     */
    @Test
    public void successThresholdTest() {
        // TODO: test successThreshold
    }

    /**
     * Test the property 'tcpConfiguration'
     */
    @Test
    public void tcpConfigurationTest() {
        // TODO: test tcpConfiguration
    }

    /**
     * Test the property 'testFrequencySec'
     */
    @Test
    public void testFrequencySecTest() {
        // TODO: test testFrequencySec
    }

}
