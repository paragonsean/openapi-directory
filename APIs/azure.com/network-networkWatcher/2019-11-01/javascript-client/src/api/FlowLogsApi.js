/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConnectionMonitorsListDefaultResponse from '../model/ConnectionMonitorsListDefaultResponse';
import ErrorResponse from '../model/ErrorResponse';
import FlowLog from '../model/FlowLog';
import FlowLogListResult from '../model/FlowLogListResult';

/**
* FlowLogs service.
* @module api/FlowLogsApi
* @version 2019-11-01
*/
export default class FlowLogsApi {

    /**
    * Constructs a new FlowLogsApi. 
    * @alias module:api/FlowLogsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the flowLogsCreateOrUpdate operation.
     * @callback module:api/FlowLogsApi~flowLogsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlowLog} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update a flow log for the specified network security group.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkWatcherName The name of the network watcher.
     * @param {String} flowLogName The name of the flow log.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/FlowLog} parameters Parameters that define the create or update flow log resource.
     * @param {module:api/FlowLogsApi~flowLogsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlowLog}
     */
    flowLogsCreateOrUpdate(resourceGroupName, networkWatcherName, flowLogName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling flowLogsCreateOrUpdate");
      }
      // verify the required parameter 'networkWatcherName' is set
      if (networkWatcherName === undefined || networkWatcherName === null) {
        throw new Error("Missing the required parameter 'networkWatcherName' when calling flowLogsCreateOrUpdate");
      }
      // verify the required parameter 'flowLogName' is set
      if (flowLogName === undefined || flowLogName === null) {
        throw new Error("Missing the required parameter 'flowLogName' when calling flowLogsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling flowLogsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling flowLogsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling flowLogsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkWatcherName': networkWatcherName,
        'flowLogName': flowLogName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = FlowLog;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the flowLogsDelete operation.
     * @callback module:api/FlowLogsApi~flowLogsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified flow log resource.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkWatcherName The name of the network watcher.
     * @param {String} flowLogName The name of the flow log resource.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/FlowLogsApi~flowLogsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    flowLogsDelete(resourceGroupName, networkWatcherName, flowLogName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling flowLogsDelete");
      }
      // verify the required parameter 'networkWatcherName' is set
      if (networkWatcherName === undefined || networkWatcherName === null) {
        throw new Error("Missing the required parameter 'networkWatcherName' when calling flowLogsDelete");
      }
      // verify the required parameter 'flowLogName' is set
      if (flowLogName === undefined || flowLogName === null) {
        throw new Error("Missing the required parameter 'flowLogName' when calling flowLogsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling flowLogsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling flowLogsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkWatcherName': networkWatcherName,
        'flowLogName': flowLogName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the flowLogsGet operation.
     * @callback module:api/FlowLogsApi~flowLogsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlowLog} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a flow log resource by name.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} networkWatcherName The name of the network watcher.
     * @param {String} flowLogName The name of the flow log resource.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/FlowLogsApi~flowLogsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlowLog}
     */
    flowLogsGet(resourceGroupName, networkWatcherName, flowLogName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling flowLogsGet");
      }
      // verify the required parameter 'networkWatcherName' is set
      if (networkWatcherName === undefined || networkWatcherName === null) {
        throw new Error("Missing the required parameter 'networkWatcherName' when calling flowLogsGet");
      }
      // verify the required parameter 'flowLogName' is set
      if (flowLogName === undefined || flowLogName === null) {
        throw new Error("Missing the required parameter 'flowLogName' when calling flowLogsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling flowLogsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling flowLogsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkWatcherName': networkWatcherName,
        'flowLogName': flowLogName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FlowLog;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the flowLogsList operation.
     * @callback module:api/FlowLogsApi~flowLogsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlowLogListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all flow log resources for the specified Network Watcher.
     * @param {String} resourceGroupName The name of the resource group containing Network Watcher.
     * @param {String} networkWatcherName The name of the Network Watcher resource.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/FlowLogsApi~flowLogsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlowLogListResult}
     */
    flowLogsList(resourceGroupName, networkWatcherName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling flowLogsList");
      }
      // verify the required parameter 'networkWatcherName' is set
      if (networkWatcherName === undefined || networkWatcherName === null) {
        throw new Error("Missing the required parameter 'networkWatcherName' when calling flowLogsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling flowLogsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling flowLogsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'networkWatcherName': networkWatcherName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FlowLogListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
