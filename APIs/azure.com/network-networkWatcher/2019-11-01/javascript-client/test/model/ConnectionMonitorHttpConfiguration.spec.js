/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementClient);
  }
}(this, function(expect, NetworkManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementClient.ConnectionMonitorHttpConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConnectionMonitorHttpConfiguration', function() {
    it('should create an instance of ConnectionMonitorHttpConfiguration', function() {
      // uncomment below and update the code to test ConnectionMonitorHttpConfiguration
      //var instance = new NetworkManagementClient.ConnectionMonitorHttpConfiguration();
      //expect(instance).to.be.a(NetworkManagementClient.ConnectionMonitorHttpConfiguration);
    });

    it('should have the property method (base name: "method")', function() {
      // uncomment below and update the code to test the property method
      //var instance = new NetworkManagementClient.ConnectionMonitorHttpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new NetworkManagementClient.ConnectionMonitorHttpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property port (base name: "port")', function() {
      // uncomment below and update the code to test the property port
      //var instance = new NetworkManagementClient.ConnectionMonitorHttpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property preferHTTPS (base name: "preferHTTPS")', function() {
      // uncomment below and update the code to test the property preferHTTPS
      //var instance = new NetworkManagementClient.ConnectionMonitorHttpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property requestHeaders (base name: "requestHeaders")', function() {
      // uncomment below and update the code to test the property requestHeaders
      //var instance = new NetworkManagementClient.ConnectionMonitorHttpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property validStatusCodeRanges (base name: "validStatusCodeRanges")', function() {
      // uncomment below and update the code to test the property validStatusCodeRanges
      //var instance = new NetworkManagementClient.ConnectionMonitorHttpConfiguration();
      //expect(instance).to.be();
    });

  });

}));
