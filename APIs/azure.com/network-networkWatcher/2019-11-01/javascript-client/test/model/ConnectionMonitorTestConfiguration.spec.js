/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementClient);
  }
}(this, function(expect, NetworkManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementClient.ConnectionMonitorTestConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConnectionMonitorTestConfiguration', function() {
    it('should create an instance of ConnectionMonitorTestConfiguration', function() {
      // uncomment below and update the code to test ConnectionMonitorTestConfiguration
      //var instance = new NetworkManagementClient.ConnectionMonitorTestConfiguration();
      //expect(instance).to.be.a(NetworkManagementClient.ConnectionMonitorTestConfiguration);
    });

    it('should have the property httpConfiguration (base name: "httpConfiguration")', function() {
      // uncomment below and update the code to test the property httpConfiguration
      //var instance = new NetworkManagementClient.ConnectionMonitorTestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property icmpConfiguration (base name: "icmpConfiguration")', function() {
      // uncomment below and update the code to test the property icmpConfiguration
      //var instance = new NetworkManagementClient.ConnectionMonitorTestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new NetworkManagementClient.ConnectionMonitorTestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property preferredIPVersion (base name: "preferredIPVersion")', function() {
      // uncomment below and update the code to test the property preferredIPVersion
      //var instance = new NetworkManagementClient.ConnectionMonitorTestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property protocol (base name: "protocol")', function() {
      // uncomment below and update the code to test the property protocol
      //var instance = new NetworkManagementClient.ConnectionMonitorTestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property successThreshold (base name: "successThreshold")', function() {
      // uncomment below and update the code to test the property successThreshold
      //var instance = new NetworkManagementClient.ConnectionMonitorTestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property tcpConfiguration (base name: "tcpConfiguration")', function() {
      // uncomment below and update the code to test the property tcpConfiguration
      //var instance = new NetworkManagementClient.ConnectionMonitorTestConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property testFrequencySec (base name: "testFrequencySec")', function() {
      // uncomment below and update the code to test the property testFrequencySec
      //var instance = new NetworkManagementClient.ConnectionMonitorTestConfiguration();
      //expect(instance).to.be();
    });

  });

}));
