/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2018-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProtocolConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProtocolConfiguration::OAIProtocolConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProtocolConfiguration::OAIProtocolConfiguration() {
    this->initializeModel();
}

OAIProtocolConfiguration::~OAIProtocolConfiguration() {}

void OAIProtocolConfiguration::initializeModel() {

    m_http_configuration_isSet = false;
    m_http_configuration_isValid = false;
}

void OAIProtocolConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProtocolConfiguration::fromJsonObject(QJsonObject json) {

    m_http_configuration_isValid = ::OpenAPI::fromJsonValue(m_http_configuration, json[QString("HTTPConfiguration")]);
    m_http_configuration_isSet = !json[QString("HTTPConfiguration")].isNull() && m_http_configuration_isValid;
}

QString OAIProtocolConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProtocolConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_http_configuration.isSet()) {
        obj.insert(QString("HTTPConfiguration"), ::OpenAPI::toJsonValue(m_http_configuration));
    }
    return obj;
}

OAIHTTPConfiguration OAIProtocolConfiguration::getHttpConfiguration() const {
    return m_http_configuration;
}
void OAIProtocolConfiguration::setHttpConfiguration(const OAIHTTPConfiguration &http_configuration) {
    m_http_configuration = http_configuration;
    m_http_configuration_isSet = true;
}

bool OAIProtocolConfiguration::is_http_configuration_Set() const{
    return m_http_configuration_isSet;
}

bool OAIProtocolConfiguration::is_http_configuration_Valid() const{
    return m_http_configuration_isValid;
}

bool OAIProtocolConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_http_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProtocolConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
