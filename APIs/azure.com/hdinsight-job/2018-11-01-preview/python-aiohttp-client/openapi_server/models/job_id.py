# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobID(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, jt_identifier: str=None):
        """JobID - a model defined in OpenAPI

        :param id: The id of this JobID.
        :param jt_identifier: The jt_identifier of this JobID.
        """
        self.openapi_types = {
            'id': int,
            'jt_identifier': str
        }

        self.attribute_map = {
            'id': 'id',
            'jt_identifier': 'jtIdentifier'
        }

        self._id = id
        self._jt_identifier = jt_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobID':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobID of this JobID.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this JobID.

        The job number.

        :return: The id of this JobID.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this JobID.

        The job number.

        :param id: The id of this JobID.
        :type id: int
        """

        self._id = id

    @property
    def jt_identifier(self):
        """Gets the jt_identifier of this JobID.

        The jobTracker identifier.

        :return: The jt_identifier of this JobID.
        :rtype: str
        """
        return self._jt_identifier

    @jt_identifier.setter
    def jt_identifier(self, jt_identifier):
        """Sets the jt_identifier of this JobID.

        The jobTracker identifier.

        :param jt_identifier: The jt_identifier of this JobID.
        :type jt_identifier: str
        """

        self._jt_identifier = jt_identifier
