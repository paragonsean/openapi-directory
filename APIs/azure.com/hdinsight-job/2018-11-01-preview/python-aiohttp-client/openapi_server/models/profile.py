# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_id import JobID
from openapi_server import util


class Profile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_file: str=None, job_id: JobID=None, job_id: str=None, job_name: str=None, queue_name: str=None, url: str=None, user: str=None):
        """Profile - a model defined in OpenAPI

        :param job_file: The job_file of this Profile.
        :param job_id: The job_id of this Profile.
        :param job_id: The job_id of this Profile.
        :param job_name: The job_name of this Profile.
        :param queue_name: The queue_name of this Profile.
        :param url: The url of this Profile.
        :param user: The user of this Profile.
        """
        self.openapi_types = {
            'job_file': str,
            'job_id': JobID,
            'job_id': str,
            'job_name': str,
            'queue_name': str,
            'url': str,
            'user': str
        }

        self.attribute_map = {
            'job_file': 'jobFile',
            'job_id': 'jobID',
            'job_id': 'jobId',
            'job_name': 'jobName',
            'queue_name': 'queueName',
            'url': 'url',
            'user': 'user'
        }

        self._job_file = job_file
        self._job_id = job_id
        self._job_id = job_id
        self._job_name = job_name
        self._queue_name = queue_name
        self._url = url
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Profile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Profile of this Profile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_file(self):
        """Gets the job_file of this Profile.

        The job configuration file.

        :return: The job_file of this Profile.
        :rtype: str
        """
        return self._job_file

    @job_file.setter
    def job_file(self, job_file):
        """Sets the job_file of this Profile.

        The job configuration file.

        :param job_file: The job_file of this Profile.
        :type job_file: str
        """

        self._job_file = job_file

    @property
    def job_id(self):
        """Gets the job_id of this Profile.


        :return: The job_id of this Profile.
        :rtype: JobID
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this Profile.


        :param job_id: The job_id of this Profile.
        :type job_id: JobID
        """

        self._job_id = job_id

    @property
    def job_id(self):
        """Gets the job_id of this Profile.

        The full ID of the job.

        :return: The job_id of this Profile.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this Profile.

        The full ID of the job.

        :param job_id: The job_id of this Profile.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def job_name(self):
        """Gets the job_name of this Profile.

        The user-specified job name.

        :return: The job_name of this Profile.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this Profile.

        The user-specified job name.

        :param job_name: The job_name of this Profile.
        :type job_name: str
        """

        self._job_name = job_name

    @property
    def queue_name(self):
        """Gets the queue_name of this Profile.

        The name of the queue to which the job is submitted.

        :return: The queue_name of this Profile.
        :rtype: str
        """
        return self._queue_name

    @queue_name.setter
    def queue_name(self, queue_name):
        """Sets the queue_name of this Profile.

        The name of the queue to which the job is submitted.

        :param queue_name: The queue_name of this Profile.
        :type queue_name: str
        """

        self._queue_name = queue_name

    @property
    def url(self):
        """Gets the url of this Profile.

        The link to the web-ui for details of the job.

        :return: The url of this Profile.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Profile.

        The link to the web-ui for details of the job.

        :param url: The url of this Profile.
        :type url: str
        """

        self._url = url

    @property
    def user(self):
        """Gets the user of this Profile.

        The userid of the person who submitted the job.

        :return: The user of this Profile.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this Profile.

        The userid of the person who submitted the job.

        :param user: The user of this Profile.
        :type user: str
        """

        self._user = user
