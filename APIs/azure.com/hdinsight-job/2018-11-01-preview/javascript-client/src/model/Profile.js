/**
 * HDInsightJobManagementClient
 * The HDInsight Job Client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobID from './JobID';

/**
 * The Profile model module.
 * @module model/Profile
 * @version 2018-11-01-preview
 */
class Profile {
    /**
     * Constructs a new <code>Profile</code>.
     * The object containing the job profile information.
     * @alias module:model/Profile
     */
    constructor() { 
        
        Profile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Profile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Profile} obj Optional instance to populate.
     * @return {module:model/Profile} The populated <code>Profile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Profile();

            if (data.hasOwnProperty('jobFile')) {
                obj['jobFile'] = ApiClient.convertToType(data['jobFile'], 'String');
            }
            if (data.hasOwnProperty('jobID')) {
                obj['jobID'] = JobID.constructFromObject(data['jobID']);
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
            }
            if (data.hasOwnProperty('jobName')) {
                obj['jobName'] = ApiClient.convertToType(data['jobName'], 'String');
            }
            if (data.hasOwnProperty('queueName')) {
                obj['queueName'] = ApiClient.convertToType(data['queueName'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Profile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Profile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['jobFile'] && !(typeof data['jobFile'] === 'string' || data['jobFile'] instanceof String)) {
            throw new Error("Expected the field `jobFile` to be a primitive type in the JSON string but got " + data['jobFile']);
        }
        // validate the optional field `jobID`
        if (data['jobID']) { // data not null
          JobID.validateJSON(data['jobID']);
        }
        // ensure the json data is a string
        if (data['jobId'] && !(typeof data['jobId'] === 'string' || data['jobId'] instanceof String)) {
            throw new Error("Expected the field `jobId` to be a primitive type in the JSON string but got " + data['jobId']);
        }
        // ensure the json data is a string
        if (data['jobName'] && !(typeof data['jobName'] === 'string' || data['jobName'] instanceof String)) {
            throw new Error("Expected the field `jobName` to be a primitive type in the JSON string but got " + data['jobName']);
        }
        // ensure the json data is a string
        if (data['queueName'] && !(typeof data['queueName'] === 'string' || data['queueName'] instanceof String)) {
            throw new Error("Expected the field `queueName` to be a primitive type in the JSON string but got " + data['queueName']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['user'] && !(typeof data['user'] === 'string' || data['user'] instanceof String)) {
            throw new Error("Expected the field `user` to be a primitive type in the JSON string but got " + data['user']);
        }

        return true;
    }


}



/**
 * The job configuration file.
 * @member {String} jobFile
 */
Profile.prototype['jobFile'] = undefined;

/**
 * @member {module:model/JobID} jobID
 */
Profile.prototype['jobID'] = undefined;

/**
 * The full ID of the job.
 * @member {String} jobId
 */
Profile.prototype['jobId'] = undefined;

/**
 * The user-specified job name.
 * @member {String} jobName
 */
Profile.prototype['jobName'] = undefined;

/**
 * The name of the queue to which the job is submitted.
 * @member {String} queueName
 */
Profile.prototype['queueName'] = undefined;

/**
 * The link to the web-ui for details of the job.
 * @member {String} url
 */
Profile.prototype['url'] = undefined;

/**
 * The userid of the person who submitted the job.
 * @member {String} user
 */
Profile.prototype['user'] = undefined;






export default Profile;

