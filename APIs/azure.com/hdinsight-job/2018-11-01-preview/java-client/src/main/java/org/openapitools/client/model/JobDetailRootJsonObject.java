/*
 * HDInsightJobManagementClient
 * The HDInsight Job Client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Profile;
import org.openapitools.client.model.Status;
import org.openapitools.client.model.Userargs;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The object containing the job details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:00:08.201046-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class JobDetailRootJsonObject {
  public static final String SERIALIZED_NAME_CALLBACK = "callback";
  @SerializedName(SERIALIZED_NAME_CALLBACK)
  private Object callback;

  public static final String SERIALIZED_NAME_COMPLETED = "completed";
  @SerializedName(SERIALIZED_NAME_COMPLETED)
  private String completed;

  public static final String SERIALIZED_NAME_EXIT_VALUE = "exitValue";
  @SerializedName(SERIALIZED_NAME_EXIT_VALUE)
  private Integer exitValue;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_MSG = "msg";
  @SerializedName(SERIALIZED_NAME_MSG)
  private Object msg;

  public static final String SERIALIZED_NAME_PARENT_ID = "parentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private String parentId;

  public static final String SERIALIZED_NAME_PERCENT_COMPLETE = "percentComplete";
  @SerializedName(SERIALIZED_NAME_PERCENT_COMPLETE)
  private String percentComplete;

  public static final String SERIALIZED_NAME_PROFILE = "profile";
  @SerializedName(SERIALIZED_NAME_PROFILE)
  private Profile profile;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Status status;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private String user;

  public static final String SERIALIZED_NAME_USERARGS = "userargs";
  @SerializedName(SERIALIZED_NAME_USERARGS)
  private Userargs userargs;

  public JobDetailRootJsonObject() {
  }

  public JobDetailRootJsonObject callback(Object callback) {
    this.callback = callback;
    return this;
  }

  /**
   * The callback URL, if any.
   * @return callback
   */
  @javax.annotation.Nullable
  public Object getCallback() {
    return callback;
  }

  public void setCallback(Object callback) {
    this.callback = callback;
  }


  public JobDetailRootJsonObject completed(String completed) {
    this.completed = completed;
    return this;
  }

  /**
   * The string representing completed status, for example &#39;done&#39;.
   * @return completed
   */
  @javax.annotation.Nullable
  public String getCompleted() {
    return completed;
  }

  public void setCompleted(String completed) {
    this.completed = completed;
  }


  public JobDetailRootJsonObject exitValue(Integer exitValue) {
    this.exitValue = exitValue;
    return this;
  }

  /**
   * The job&#39;s exit value.
   * @return exitValue
   */
  @javax.annotation.Nullable
  public Integer getExitValue() {
    return exitValue;
  }

  public void setExitValue(Integer exitValue) {
    this.exitValue = exitValue;
  }


  public JobDetailRootJsonObject id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The job ID.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public JobDetailRootJsonObject msg(Object msg) {
    this.msg = msg;
    return this;
  }

  /**
   * The message returned.
   * @return msg
   */
  @javax.annotation.Nullable
  public Object getMsg() {
    return msg;
  }

  public void setMsg(Object msg) {
    this.msg = msg;
  }


  public JobDetailRootJsonObject parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * The parent job ID.
   * @return parentId
   */
  @javax.annotation.Nullable
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public JobDetailRootJsonObject percentComplete(String percentComplete) {
    this.percentComplete = percentComplete;
    return this;
  }

  /**
   * The job completion percentage, for example &#39;75% complete&#39;.
   * @return percentComplete
   */
  @javax.annotation.Nullable
  public String getPercentComplete() {
    return percentComplete;
  }

  public void setPercentComplete(String percentComplete) {
    this.percentComplete = percentComplete;
  }


  public JobDetailRootJsonObject profile(Profile profile) {
    this.profile = profile;
    return this;
  }

  /**
   * Get profile
   * @return profile
   */
  @javax.annotation.Nullable
  public Profile getProfile() {
    return profile;
  }

  public void setProfile(Profile profile) {
    this.profile = profile;
  }


  public JobDetailRootJsonObject status(Status status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public Status getStatus() {
    return status;
  }

  public void setStatus(Status status) {
    this.status = status;
  }


  public JobDetailRootJsonObject user(String user) {
    this.user = user;
    return this;
  }

  /**
   * The user name of the job creator.
   * @return user
   */
  @javax.annotation.Nullable
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }


  public JobDetailRootJsonObject userargs(Userargs userargs) {
    this.userargs = userargs;
    return this;
  }

  /**
   * Get userargs
   * @return userargs
   */
  @javax.annotation.Nullable
  public Userargs getUserargs() {
    return userargs;
  }

  public void setUserargs(Userargs userargs) {
    this.userargs = userargs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobDetailRootJsonObject jobDetailRootJsonObject = (JobDetailRootJsonObject) o;
    return Objects.equals(this.callback, jobDetailRootJsonObject.callback) &&
        Objects.equals(this.completed, jobDetailRootJsonObject.completed) &&
        Objects.equals(this.exitValue, jobDetailRootJsonObject.exitValue) &&
        Objects.equals(this.id, jobDetailRootJsonObject.id) &&
        Objects.equals(this.msg, jobDetailRootJsonObject.msg) &&
        Objects.equals(this.parentId, jobDetailRootJsonObject.parentId) &&
        Objects.equals(this.percentComplete, jobDetailRootJsonObject.percentComplete) &&
        Objects.equals(this.profile, jobDetailRootJsonObject.profile) &&
        Objects.equals(this.status, jobDetailRootJsonObject.status) &&
        Objects.equals(this.user, jobDetailRootJsonObject.user) &&
        Objects.equals(this.userargs, jobDetailRootJsonObject.userargs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callback, completed, exitValue, id, msg, parentId, percentComplete, profile, status, user, userargs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobDetailRootJsonObject {\n");
    sb.append("    callback: ").append(toIndentedString(callback)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    exitValue: ").append(toIndentedString(exitValue)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    msg: ").append(toIndentedString(msg)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    percentComplete: ").append(toIndentedString(percentComplete)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userargs: ").append(toIndentedString(userargs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("callback");
    openapiFields.add("completed");
    openapiFields.add("exitValue");
    openapiFields.add("id");
    openapiFields.add("msg");
    openapiFields.add("parentId");
    openapiFields.add("percentComplete");
    openapiFields.add("profile");
    openapiFields.add("status");
    openapiFields.add("user");
    openapiFields.add("userargs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to JobDetailRootJsonObject
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!JobDetailRootJsonObject.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobDetailRootJsonObject is not found in the empty JSON string", JobDetailRootJsonObject.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!JobDetailRootJsonObject.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `JobDetailRootJsonObject` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("completed") != null && !jsonObj.get("completed").isJsonNull()) && !jsonObj.get("completed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `completed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("completed").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("parentId") != null && !jsonObj.get("parentId").isJsonNull()) && !jsonObj.get("parentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentId").toString()));
      }
      if ((jsonObj.get("percentComplete") != null && !jsonObj.get("percentComplete").isJsonNull()) && !jsonObj.get("percentComplete").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `percentComplete` to be a primitive type in the JSON string but got `%s`", jsonObj.get("percentComplete").toString()));
      }
      // validate the optional field `profile`
      if (jsonObj.get("profile") != null && !jsonObj.get("profile").isJsonNull()) {
        Profile.validateJsonElement(jsonObj.get("profile"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        Status.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("user") != null && !jsonObj.get("user").isJsonNull()) && !jsonObj.get("user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user").toString()));
      }
      // validate the optional field `userargs`
      if (jsonObj.get("userargs") != null && !jsonObj.get("userargs").isJsonNull()) {
        Userargs.validateJsonElement(jsonObj.get("userargs"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobDetailRootJsonObject.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobDetailRootJsonObject' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobDetailRootJsonObject> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobDetailRootJsonObject.class));

       return (TypeAdapter<T>) new TypeAdapter<JobDetailRootJsonObject>() {
           @Override
           public void write(JsonWriter out, JobDetailRootJsonObject value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public JobDetailRootJsonObject read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of JobDetailRootJsonObject given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of JobDetailRootJsonObject
   * @throws IOException if the JSON string is invalid with respect to JobDetailRootJsonObject
   */
  public static JobDetailRootJsonObject fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobDetailRootJsonObject.class);
  }

  /**
   * Convert an instance of JobDetailRootJsonObject to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

