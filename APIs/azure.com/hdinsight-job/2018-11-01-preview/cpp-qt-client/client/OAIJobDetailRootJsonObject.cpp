/**
 * HDInsightJobManagementClient
 * The HDInsight Job Client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobDetailRootJsonObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobDetailRootJsonObject::OAIJobDetailRootJsonObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobDetailRootJsonObject::OAIJobDetailRootJsonObject() {
    this->initializeModel();
}

OAIJobDetailRootJsonObject::~OAIJobDetailRootJsonObject() {}

void OAIJobDetailRootJsonObject::initializeModel() {

    m_callback_isSet = false;
    m_callback_isValid = false;

    m_completed_isSet = false;
    m_completed_isValid = false;

    m_exit_value_isSet = false;
    m_exit_value_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_msg_isSet = false;
    m_msg_isValid = false;

    m_parent_id_isSet = false;
    m_parent_id_isValid = false;

    m_percent_complete_isSet = false;
    m_percent_complete_isValid = false;

    m_profile_isSet = false;
    m_profile_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;

    m_userargs_isSet = false;
    m_userargs_isValid = false;
}

void OAIJobDetailRootJsonObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobDetailRootJsonObject::fromJsonObject(QJsonObject json) {

    m_callback_isValid = ::OpenAPI::fromJsonValue(m_callback, json[QString("callback")]);
    m_callback_isSet = !json[QString("callback")].isNull() && m_callback_isValid;

    m_completed_isValid = ::OpenAPI::fromJsonValue(m_completed, json[QString("completed")]);
    m_completed_isSet = !json[QString("completed")].isNull() && m_completed_isValid;

    m_exit_value_isValid = ::OpenAPI::fromJsonValue(m_exit_value, json[QString("exitValue")]);
    m_exit_value_isSet = !json[QString("exitValue")].isNull() && m_exit_value_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_msg_isValid = ::OpenAPI::fromJsonValue(m_msg, json[QString("msg")]);
    m_msg_isSet = !json[QString("msg")].isNull() && m_msg_isValid;

    m_parent_id_isValid = ::OpenAPI::fromJsonValue(m_parent_id, json[QString("parentId")]);
    m_parent_id_isSet = !json[QString("parentId")].isNull() && m_parent_id_isValid;

    m_percent_complete_isValid = ::OpenAPI::fromJsonValue(m_percent_complete, json[QString("percentComplete")]);
    m_percent_complete_isSet = !json[QString("percentComplete")].isNull() && m_percent_complete_isValid;

    m_profile_isValid = ::OpenAPI::fromJsonValue(m_profile, json[QString("profile")]);
    m_profile_isSet = !json[QString("profile")].isNull() && m_profile_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;

    m_userargs_isValid = ::OpenAPI::fromJsonValue(m_userargs, json[QString("userargs")]);
    m_userargs_isSet = !json[QString("userargs")].isNull() && m_userargs_isValid;
}

QString OAIJobDetailRootJsonObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobDetailRootJsonObject::asJsonObject() const {
    QJsonObject obj;
    if (m_callback_isSet) {
        obj.insert(QString("callback"), ::OpenAPI::toJsonValue(m_callback));
    }
    if (m_completed_isSet) {
        obj.insert(QString("completed"), ::OpenAPI::toJsonValue(m_completed));
    }
    if (m_exit_value_isSet) {
        obj.insert(QString("exitValue"), ::OpenAPI::toJsonValue(m_exit_value));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_msg_isSet) {
        obj.insert(QString("msg"), ::OpenAPI::toJsonValue(m_msg));
    }
    if (m_parent_id_isSet) {
        obj.insert(QString("parentId"), ::OpenAPI::toJsonValue(m_parent_id));
    }
    if (m_percent_complete_isSet) {
        obj.insert(QString("percentComplete"), ::OpenAPI::toJsonValue(m_percent_complete));
    }
    if (m_profile.isSet()) {
        obj.insert(QString("profile"), ::OpenAPI::toJsonValue(m_profile));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_user_isSet) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    if (m_userargs.isSet()) {
        obj.insert(QString("userargs"), ::OpenAPI::toJsonValue(m_userargs));
    }
    return obj;
}

OAIObject OAIJobDetailRootJsonObject::getCallback() const {
    return m_callback;
}
void OAIJobDetailRootJsonObject::setCallback(const OAIObject &callback) {
    m_callback = callback;
    m_callback_isSet = true;
}

bool OAIJobDetailRootJsonObject::is_callback_Set() const{
    return m_callback_isSet;
}

bool OAIJobDetailRootJsonObject::is_callback_Valid() const{
    return m_callback_isValid;
}

QString OAIJobDetailRootJsonObject::getCompleted() const {
    return m_completed;
}
void OAIJobDetailRootJsonObject::setCompleted(const QString &completed) {
    m_completed = completed;
    m_completed_isSet = true;
}

bool OAIJobDetailRootJsonObject::is_completed_Set() const{
    return m_completed_isSet;
}

bool OAIJobDetailRootJsonObject::is_completed_Valid() const{
    return m_completed_isValid;
}

qint32 OAIJobDetailRootJsonObject::getExitValue() const {
    return m_exit_value;
}
void OAIJobDetailRootJsonObject::setExitValue(const qint32 &exit_value) {
    m_exit_value = exit_value;
    m_exit_value_isSet = true;
}

bool OAIJobDetailRootJsonObject::is_exit_value_Set() const{
    return m_exit_value_isSet;
}

bool OAIJobDetailRootJsonObject::is_exit_value_Valid() const{
    return m_exit_value_isValid;
}

QString OAIJobDetailRootJsonObject::getId() const {
    return m_id;
}
void OAIJobDetailRootJsonObject::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIJobDetailRootJsonObject::is_id_Set() const{
    return m_id_isSet;
}

bool OAIJobDetailRootJsonObject::is_id_Valid() const{
    return m_id_isValid;
}

OAIObject OAIJobDetailRootJsonObject::getMsg() const {
    return m_msg;
}
void OAIJobDetailRootJsonObject::setMsg(const OAIObject &msg) {
    m_msg = msg;
    m_msg_isSet = true;
}

bool OAIJobDetailRootJsonObject::is_msg_Set() const{
    return m_msg_isSet;
}

bool OAIJobDetailRootJsonObject::is_msg_Valid() const{
    return m_msg_isValid;
}

QString OAIJobDetailRootJsonObject::getParentId() const {
    return m_parent_id;
}
void OAIJobDetailRootJsonObject::setParentId(const QString &parent_id) {
    m_parent_id = parent_id;
    m_parent_id_isSet = true;
}

bool OAIJobDetailRootJsonObject::is_parent_id_Set() const{
    return m_parent_id_isSet;
}

bool OAIJobDetailRootJsonObject::is_parent_id_Valid() const{
    return m_parent_id_isValid;
}

QString OAIJobDetailRootJsonObject::getPercentComplete() const {
    return m_percent_complete;
}
void OAIJobDetailRootJsonObject::setPercentComplete(const QString &percent_complete) {
    m_percent_complete = percent_complete;
    m_percent_complete_isSet = true;
}

bool OAIJobDetailRootJsonObject::is_percent_complete_Set() const{
    return m_percent_complete_isSet;
}

bool OAIJobDetailRootJsonObject::is_percent_complete_Valid() const{
    return m_percent_complete_isValid;
}

OAIProfile OAIJobDetailRootJsonObject::getProfile() const {
    return m_profile;
}
void OAIJobDetailRootJsonObject::setProfile(const OAIProfile &profile) {
    m_profile = profile;
    m_profile_isSet = true;
}

bool OAIJobDetailRootJsonObject::is_profile_Set() const{
    return m_profile_isSet;
}

bool OAIJobDetailRootJsonObject::is_profile_Valid() const{
    return m_profile_isValid;
}

OAIStatus OAIJobDetailRootJsonObject::getStatus() const {
    return m_status;
}
void OAIJobDetailRootJsonObject::setStatus(const OAIStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIJobDetailRootJsonObject::is_status_Set() const{
    return m_status_isSet;
}

bool OAIJobDetailRootJsonObject::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIJobDetailRootJsonObject::getUser() const {
    return m_user;
}
void OAIJobDetailRootJsonObject::setUser(const QString &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIJobDetailRootJsonObject::is_user_Set() const{
    return m_user_isSet;
}

bool OAIJobDetailRootJsonObject::is_user_Valid() const{
    return m_user_isValid;
}

OAIUserargs OAIJobDetailRootJsonObject::getUserargs() const {
    return m_userargs;
}
void OAIJobDetailRootJsonObject::setUserargs(const OAIUserargs &userargs) {
    m_userargs = userargs;
    m_userargs_isSet = true;
}

bool OAIJobDetailRootJsonObject::is_userargs_Set() const{
    return m_userargs_isSet;
}

bool OAIJobDetailRootJsonObject::is_userargs_Valid() const{
    return m_userargs_isValid;
}

bool OAIJobDetailRootJsonObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_callback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exit_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_msg_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_complete_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_userargs.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobDetailRootJsonObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
