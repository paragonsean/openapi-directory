/**
 * HDInsightJobManagementClient
 * The HDInsight Job Client.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProfile::OAIProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProfile::OAIProfile() {
    this->initializeModel();
}

OAIProfile::~OAIProfile() {}

void OAIProfile::initializeModel() {

    m_job_file_isSet = false;
    m_job_file_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_job_name_isSet = false;
    m_job_name_isValid = false;

    m_queue_name_isSet = false;
    m_queue_name_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;
}

void OAIProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProfile::fromJsonObject(QJsonObject json) {

    m_job_file_isValid = ::OpenAPI::fromJsonValue(m_job_file, json[QString("jobFile")]);
    m_job_file_isSet = !json[QString("jobFile")].isNull() && m_job_file_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("jobID")]);
    m_job_id_isSet = !json[QString("jobID")].isNull() && m_job_id_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("jobId")]);
    m_job_id_isSet = !json[QString("jobId")].isNull() && m_job_id_isValid;

    m_job_name_isValid = ::OpenAPI::fromJsonValue(m_job_name, json[QString("jobName")]);
    m_job_name_isSet = !json[QString("jobName")].isNull() && m_job_name_isValid;

    m_queue_name_isValid = ::OpenAPI::fromJsonValue(m_queue_name, json[QString("queueName")]);
    m_queue_name_isSet = !json[QString("queueName")].isNull() && m_queue_name_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;
}

QString OAIProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_job_file_isSet) {
        obj.insert(QString("jobFile"), ::OpenAPI::toJsonValue(m_job_file));
    }
    if (m_job_id.isSet()) {
        obj.insert(QString("jobID"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("jobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_job_name_isSet) {
        obj.insert(QString("jobName"), ::OpenAPI::toJsonValue(m_job_name));
    }
    if (m_queue_name_isSet) {
        obj.insert(QString("queueName"), ::OpenAPI::toJsonValue(m_queue_name));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_user_isSet) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    return obj;
}

QString OAIProfile::getJobFile() const {
    return m_job_file;
}
void OAIProfile::setJobFile(const QString &job_file) {
    m_job_file = job_file;
    m_job_file_isSet = true;
}

bool OAIProfile::is_job_file_Set() const{
    return m_job_file_isSet;
}

bool OAIProfile::is_job_file_Valid() const{
    return m_job_file_isValid;
}

OAIJobID OAIProfile::getJobId() const {
    return m_job_id;
}
void OAIProfile::setJobId(const OAIJobID &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIProfile::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIProfile::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAIProfile::getJobId() const {
    return m_job_id;
}
void OAIProfile::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIProfile::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIProfile::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAIProfile::getJobName() const {
    return m_job_name;
}
void OAIProfile::setJobName(const QString &job_name) {
    m_job_name = job_name;
    m_job_name_isSet = true;
}

bool OAIProfile::is_job_name_Set() const{
    return m_job_name_isSet;
}

bool OAIProfile::is_job_name_Valid() const{
    return m_job_name_isValid;
}

QString OAIProfile::getQueueName() const {
    return m_queue_name;
}
void OAIProfile::setQueueName(const QString &queue_name) {
    m_queue_name = queue_name;
    m_queue_name_isSet = true;
}

bool OAIProfile::is_queue_name_Set() const{
    return m_queue_name_isSet;
}

bool OAIProfile::is_queue_name_Valid() const{
    return m_queue_name_isValid;
}

QString OAIProfile::getUrl() const {
    return m_url;
}
void OAIProfile::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIProfile::is_url_Set() const{
    return m_url_isSet;
}

bool OAIProfile::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIProfile::getUser() const {
    return m_user;
}
void OAIProfile::setUser(const QString &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIProfile::is_user_Set() const{
    return m_user_isSet;
}

bool OAIProfile::is_user_Valid() const{
    return m_user_isValid;
}

bool OAIProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_file_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
