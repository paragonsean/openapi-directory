/**
 * NetworkManagementClient
 * The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.
 *
 * The version of the OpenAPI document: 2019-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VirtualRouterPeering from '../model/VirtualRouterPeering';
import VirtualRouterPeeringListResult from '../model/VirtualRouterPeeringListResult';
import VirtualRoutersListDefaultResponse from '../model/VirtualRoutersListDefaultResponse';

/**
* VirtualRouterPeerings service.
* @module api/VirtualRouterPeeringsApi
* @version 2019-09-01
*/
export default class VirtualRouterPeeringsApi {

    /**
    * Constructs a new VirtualRouterPeeringsApi. 
    * @alias module:api/VirtualRouterPeeringsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the virtualRouterPeeringsCreateOrUpdate operation.
     * @callback module:api/VirtualRouterPeeringsApi~virtualRouterPeeringsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualRouterPeering} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates the specified Virtual Router Peering.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualRouterName The name of the Virtual Router.
     * @param {String} peeringName The name of the Virtual Router Peering.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:model/VirtualRouterPeering} parameters Parameters supplied to the create or update Virtual Router Peering operation.
     * @param {module:api/VirtualRouterPeeringsApi~virtualRouterPeeringsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualRouterPeering}
     */
    virtualRouterPeeringsCreateOrUpdate(resourceGroupName, virtualRouterName, peeringName, apiVersion, subscriptionId, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualRouterPeeringsCreateOrUpdate");
      }
      // verify the required parameter 'virtualRouterName' is set
      if (virtualRouterName === undefined || virtualRouterName === null) {
        throw new Error("Missing the required parameter 'virtualRouterName' when calling virtualRouterPeeringsCreateOrUpdate");
      }
      // verify the required parameter 'peeringName' is set
      if (peeringName === undefined || peeringName === null) {
        throw new Error("Missing the required parameter 'peeringName' when calling virtualRouterPeeringsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualRouterPeeringsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualRouterPeeringsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling virtualRouterPeeringsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualRouterName': virtualRouterName,
        'peeringName': peeringName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = VirtualRouterPeering;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualRouterPeeringsDelete operation.
     * @callback module:api/VirtualRouterPeeringsApi~virtualRouterPeeringsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified peering from a Virtual Router.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualRouterName The name of the Virtual Router.
     * @param {String} peeringName The name of the peering.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualRouterPeeringsApi~virtualRouterPeeringsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    virtualRouterPeeringsDelete(resourceGroupName, virtualRouterName, peeringName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualRouterPeeringsDelete");
      }
      // verify the required parameter 'virtualRouterName' is set
      if (virtualRouterName === undefined || virtualRouterName === null) {
        throw new Error("Missing the required parameter 'virtualRouterName' when calling virtualRouterPeeringsDelete");
      }
      // verify the required parameter 'peeringName' is set
      if (peeringName === undefined || peeringName === null) {
        throw new Error("Missing the required parameter 'peeringName' when calling virtualRouterPeeringsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualRouterPeeringsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualRouterPeeringsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualRouterName': virtualRouterName,
        'peeringName': peeringName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualRouterPeeringsGet operation.
     * @callback module:api/VirtualRouterPeeringsApi~virtualRouterPeeringsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualRouterPeering} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the specified Virtual Router Peering.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualRouterName The name of the Virtual Router.
     * @param {String} peeringName The name of the Virtual Router Peering.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualRouterPeeringsApi~virtualRouterPeeringsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualRouterPeering}
     */
    virtualRouterPeeringsGet(resourceGroupName, virtualRouterName, peeringName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualRouterPeeringsGet");
      }
      // verify the required parameter 'virtualRouterName' is set
      if (virtualRouterName === undefined || virtualRouterName === null) {
        throw new Error("Missing the required parameter 'virtualRouterName' when calling virtualRouterPeeringsGet");
      }
      // verify the required parameter 'peeringName' is set
      if (peeringName === undefined || peeringName === null) {
        throw new Error("Missing the required parameter 'peeringName' when calling virtualRouterPeeringsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualRouterPeeringsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualRouterPeeringsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualRouterName': virtualRouterName,
        'peeringName': peeringName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualRouterPeering;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the virtualRouterPeeringsList operation.
     * @callback module:api/VirtualRouterPeeringsApi~virtualRouterPeeringsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VirtualRouterPeeringListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all Virtual Router Peerings in a Virtual Router resource.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} virtualRouterName The name of the Virtual Router.
     * @param {String} apiVersion Client API version.
     * @param {String} subscriptionId The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {module:api/VirtualRouterPeeringsApi~virtualRouterPeeringsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VirtualRouterPeeringListResult}
     */
    virtualRouterPeeringsList(resourceGroupName, virtualRouterName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling virtualRouterPeeringsList");
      }
      // verify the required parameter 'virtualRouterName' is set
      if (virtualRouterName === undefined || virtualRouterName === null) {
        throw new Error("Missing the required parameter 'virtualRouterName' when calling virtualRouterPeeringsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling virtualRouterPeeringsList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling virtualRouterPeeringsList");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'virtualRouterName': virtualRouterName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VirtualRouterPeeringListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
