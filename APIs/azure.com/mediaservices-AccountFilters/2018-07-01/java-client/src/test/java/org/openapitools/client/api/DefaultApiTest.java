/*
 * Azure Media Services
 * This Swagger was generated by the API Framework.
 *
 * The version of the OpenAPI document: 2018-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountFilter;
import org.openapitools.client.model.AccountFilterCollection;
import org.openapitools.client.model.ApiError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Create or update an Account Filter
     *
     * Creates or updates an Account Filter in the Media Services account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountFiltersCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String filterName = null;
        String apiVersion = null;
        AccountFilter parameters = null;
        AccountFilter response = api.accountFiltersCreateOrUpdate(subscriptionId, resourceGroupName, accountName, filterName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete an Account Filter.
     *
     * Deletes an Account Filter in the Media Services account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountFiltersDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String filterName = null;
        String apiVersion = null;
        api.accountFiltersDelete(subscriptionId, resourceGroupName, accountName, filterName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get an Account Filter.
     *
     * Get the details of an Account Filter in the Media Services account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountFiltersGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String filterName = null;
        String apiVersion = null;
        AccountFilter response = api.accountFiltersGet(subscriptionId, resourceGroupName, accountName, filterName, apiVersion);
        // TODO: test validations
    }

    /**
     * List Account Filters
     *
     * List Account Filters in the Media Services account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountFiltersListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String apiVersion = null;
        AccountFilterCollection response = api.accountFiltersList(subscriptionId, resourceGroupName, accountName, apiVersion);
        // TODO: test validations
    }

    /**
     * Update an Account Filter
     *
     * Updates an existing Account Filter in the Media Services account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountFiltersUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String accountName = null;
        String filterName = null;
        String apiVersion = null;
        AccountFilter parameters = null;
        AccountFilter response = api.accountFiltersUpdate(subscriptionId, resourceGroupName, accountName, filterName, apiVersion, parameters);
        // TODO: test validations
    }

}
