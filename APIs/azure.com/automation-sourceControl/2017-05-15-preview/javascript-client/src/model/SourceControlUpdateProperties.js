/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SourceControlSecurityTokenProperties from './SourceControlSecurityTokenProperties';

/**
 * The SourceControlUpdateProperties model module.
 * @module model/SourceControlUpdateProperties
 * @version 2017-05-15-preview
 */
class SourceControlUpdateProperties {
    /**
     * Constructs a new <code>SourceControlUpdateProperties</code>.
     * The properties of the update source control
     * @alias module:model/SourceControlUpdateProperties
     */
    constructor() { 
        
        SourceControlUpdateProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceControlUpdateProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceControlUpdateProperties} obj Optional instance to populate.
     * @return {module:model/SourceControlUpdateProperties} The populated <code>SourceControlUpdateProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceControlUpdateProperties();

            if (data.hasOwnProperty('autoSync')) {
                obj['autoSync'] = ApiClient.convertToType(data['autoSync'], 'Boolean');
            }
            if (data.hasOwnProperty('branch')) {
                obj['branch'] = ApiClient.convertToType(data['branch'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('folderPath')) {
                obj['folderPath'] = ApiClient.convertToType(data['folderPath'], 'String');
            }
            if (data.hasOwnProperty('publishRunbook')) {
                obj['publishRunbook'] = ApiClient.convertToType(data['publishRunbook'], 'Boolean');
            }
            if (data.hasOwnProperty('securityToken')) {
                obj['securityToken'] = SourceControlSecurityTokenProperties.constructFromObject(data['securityToken']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceControlUpdateProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceControlUpdateProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['branch'] && !(typeof data['branch'] === 'string' || data['branch'] instanceof String)) {
            throw new Error("Expected the field `branch` to be a primitive type in the JSON string but got " + data['branch']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['folderPath'] && !(typeof data['folderPath'] === 'string' || data['folderPath'] instanceof String)) {
            throw new Error("Expected the field `folderPath` to be a primitive type in the JSON string but got " + data['folderPath']);
        }
        // validate the optional field `securityToken`
        if (data['securityToken']) { // data not null
          SourceControlSecurityTokenProperties.validateJSON(data['securityToken']);
        }

        return true;
    }


}



/**
 * The auto sync of the source control. Default is false.
 * @member {Boolean} autoSync
 */
SourceControlUpdateProperties.prototype['autoSync'] = undefined;

/**
 * The repo branch of the source control.
 * @member {String} branch
 */
SourceControlUpdateProperties.prototype['branch'] = undefined;

/**
 * The user description of the source control.
 * @member {String} description
 */
SourceControlUpdateProperties.prototype['description'] = undefined;

/**
 * The folder path of the source control. Path must be relative.
 * @member {String} folderPath
 */
SourceControlUpdateProperties.prototype['folderPath'] = undefined;

/**
 * The auto publish of the source control. Default is true.
 * @member {Boolean} publishRunbook
 */
SourceControlUpdateProperties.prototype['publishRunbook'] = undefined;

/**
 * @member {module:model/SourceControlSecurityTokenProperties} securityToken
 */
SourceControlUpdateProperties.prototype['securityToken'] = undefined;






export default SourceControlUpdateProperties;

