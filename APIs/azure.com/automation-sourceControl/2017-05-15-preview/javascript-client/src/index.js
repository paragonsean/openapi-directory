/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import SourceControl from './model/SourceControl';
import SourceControlCreateOrUpdateParameters from './model/SourceControlCreateOrUpdateParameters';
import SourceControlCreateOrUpdateProperties from './model/SourceControlCreateOrUpdateProperties';
import SourceControlListByAutomationAccountDefaultResponse from './model/SourceControlListByAutomationAccountDefaultResponse';
import SourceControlListResult from './model/SourceControlListResult';
import SourceControlProperties from './model/SourceControlProperties';
import SourceControlSecurityTokenProperties from './model/SourceControlSecurityTokenProperties';
import SourceControlUpdateParameters from './model/SourceControlUpdateParameters';
import SourceControlUpdateProperties from './model/SourceControlUpdateProperties';
import SourceControlApi from './api/SourceControlApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AutomationManagement = require('index'); // See note below*.
* var xxxSvc = new AutomationManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AutomationManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AutomationManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AutomationManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-05-15-preview
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The SourceControl model constructor.
     * @property {module:model/SourceControl}
     */
    SourceControl,

    /**
     * The SourceControlCreateOrUpdateParameters model constructor.
     * @property {module:model/SourceControlCreateOrUpdateParameters}
     */
    SourceControlCreateOrUpdateParameters,

    /**
     * The SourceControlCreateOrUpdateProperties model constructor.
     * @property {module:model/SourceControlCreateOrUpdateProperties}
     */
    SourceControlCreateOrUpdateProperties,

    /**
     * The SourceControlListByAutomationAccountDefaultResponse model constructor.
     * @property {module:model/SourceControlListByAutomationAccountDefaultResponse}
     */
    SourceControlListByAutomationAccountDefaultResponse,

    /**
     * The SourceControlListResult model constructor.
     * @property {module:model/SourceControlListResult}
     */
    SourceControlListResult,

    /**
     * The SourceControlProperties model constructor.
     * @property {module:model/SourceControlProperties}
     */
    SourceControlProperties,

    /**
     * The SourceControlSecurityTokenProperties model constructor.
     * @property {module:model/SourceControlSecurityTokenProperties}
     */
    SourceControlSecurityTokenProperties,

    /**
     * The SourceControlUpdateParameters model constructor.
     * @property {module:model/SourceControlUpdateParameters}
     */
    SourceControlUpdateParameters,

    /**
     * The SourceControlUpdateProperties model constructor.
     * @property {module:model/SourceControlUpdateProperties}
     */
    SourceControlUpdateProperties,

    /**
    * The SourceControlApi service constructor.
    * @property {module:api/SourceControlApi}
    */
    SourceControlApi
};
