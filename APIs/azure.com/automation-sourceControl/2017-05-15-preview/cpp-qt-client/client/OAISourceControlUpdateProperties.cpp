/**
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISourceControlUpdateProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISourceControlUpdateProperties::OAISourceControlUpdateProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISourceControlUpdateProperties::OAISourceControlUpdateProperties() {
    this->initializeModel();
}

OAISourceControlUpdateProperties::~OAISourceControlUpdateProperties() {}

void OAISourceControlUpdateProperties::initializeModel() {

    m_auto_sync_isSet = false;
    m_auto_sync_isValid = false;

    m_branch_isSet = false;
    m_branch_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_folder_path_isSet = false;
    m_folder_path_isValid = false;

    m_publish_runbook_isSet = false;
    m_publish_runbook_isValid = false;

    m_security_token_isSet = false;
    m_security_token_isValid = false;
}

void OAISourceControlUpdateProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISourceControlUpdateProperties::fromJsonObject(QJsonObject json) {

    m_auto_sync_isValid = ::OpenAPI::fromJsonValue(m_auto_sync, json[QString("autoSync")]);
    m_auto_sync_isSet = !json[QString("autoSync")].isNull() && m_auto_sync_isValid;

    m_branch_isValid = ::OpenAPI::fromJsonValue(m_branch, json[QString("branch")]);
    m_branch_isSet = !json[QString("branch")].isNull() && m_branch_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_folder_path_isValid = ::OpenAPI::fromJsonValue(m_folder_path, json[QString("folderPath")]);
    m_folder_path_isSet = !json[QString("folderPath")].isNull() && m_folder_path_isValid;

    m_publish_runbook_isValid = ::OpenAPI::fromJsonValue(m_publish_runbook, json[QString("publishRunbook")]);
    m_publish_runbook_isSet = !json[QString("publishRunbook")].isNull() && m_publish_runbook_isValid;

    m_security_token_isValid = ::OpenAPI::fromJsonValue(m_security_token, json[QString("securityToken")]);
    m_security_token_isSet = !json[QString("securityToken")].isNull() && m_security_token_isValid;
}

QString OAISourceControlUpdateProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISourceControlUpdateProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_sync_isSet) {
        obj.insert(QString("autoSync"), ::OpenAPI::toJsonValue(m_auto_sync));
    }
    if (m_branch_isSet) {
        obj.insert(QString("branch"), ::OpenAPI::toJsonValue(m_branch));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_folder_path_isSet) {
        obj.insert(QString("folderPath"), ::OpenAPI::toJsonValue(m_folder_path));
    }
    if (m_publish_runbook_isSet) {
        obj.insert(QString("publishRunbook"), ::OpenAPI::toJsonValue(m_publish_runbook));
    }
    if (m_security_token.isSet()) {
        obj.insert(QString("securityToken"), ::OpenAPI::toJsonValue(m_security_token));
    }
    return obj;
}

bool OAISourceControlUpdateProperties::isAutoSync() const {
    return m_auto_sync;
}
void OAISourceControlUpdateProperties::setAutoSync(const bool &auto_sync) {
    m_auto_sync = auto_sync;
    m_auto_sync_isSet = true;
}

bool OAISourceControlUpdateProperties::is_auto_sync_Set() const{
    return m_auto_sync_isSet;
}

bool OAISourceControlUpdateProperties::is_auto_sync_Valid() const{
    return m_auto_sync_isValid;
}

QString OAISourceControlUpdateProperties::getBranch() const {
    return m_branch;
}
void OAISourceControlUpdateProperties::setBranch(const QString &branch) {
    m_branch = branch;
    m_branch_isSet = true;
}

bool OAISourceControlUpdateProperties::is_branch_Set() const{
    return m_branch_isSet;
}

bool OAISourceControlUpdateProperties::is_branch_Valid() const{
    return m_branch_isValid;
}

QString OAISourceControlUpdateProperties::getDescription() const {
    return m_description;
}
void OAISourceControlUpdateProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAISourceControlUpdateProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAISourceControlUpdateProperties::is_description_Valid() const{
    return m_description_isValid;
}

QString OAISourceControlUpdateProperties::getFolderPath() const {
    return m_folder_path;
}
void OAISourceControlUpdateProperties::setFolderPath(const QString &folder_path) {
    m_folder_path = folder_path;
    m_folder_path_isSet = true;
}

bool OAISourceControlUpdateProperties::is_folder_path_Set() const{
    return m_folder_path_isSet;
}

bool OAISourceControlUpdateProperties::is_folder_path_Valid() const{
    return m_folder_path_isValid;
}

bool OAISourceControlUpdateProperties::isPublishRunbook() const {
    return m_publish_runbook;
}
void OAISourceControlUpdateProperties::setPublishRunbook(const bool &publish_runbook) {
    m_publish_runbook = publish_runbook;
    m_publish_runbook_isSet = true;
}

bool OAISourceControlUpdateProperties::is_publish_runbook_Set() const{
    return m_publish_runbook_isSet;
}

bool OAISourceControlUpdateProperties::is_publish_runbook_Valid() const{
    return m_publish_runbook_isValid;
}

OAISourceControlSecurityTokenProperties OAISourceControlUpdateProperties::getSecurityToken() const {
    return m_security_token;
}
void OAISourceControlUpdateProperties::setSecurityToken(const OAISourceControlSecurityTokenProperties &security_token) {
    m_security_token = security_token;
    m_security_token_isSet = true;
}

bool OAISourceControlUpdateProperties::is_security_token_Set() const{
    return m_security_token_isSet;
}

bool OAISourceControlUpdateProperties::is_security_token_Valid() const{
    return m_security_token_isValid;
}

bool OAISourceControlUpdateProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_sync_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_branch_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_folder_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publish_runbook_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_token.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISourceControlUpdateProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
