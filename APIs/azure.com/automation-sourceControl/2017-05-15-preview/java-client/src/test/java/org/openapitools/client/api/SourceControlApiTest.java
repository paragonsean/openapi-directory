/*
 * AutomationManagement
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SourceControl;
import org.openapitools.client.model.SourceControlCreateOrUpdateParameters;
import org.openapitools.client.model.SourceControlListByAutomationAccountDefaultResponse;
import org.openapitools.client.model.SourceControlListResult;
import org.openapitools.client.model.SourceControlUpdateParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SourceControlApi
 */
@Disabled
public class SourceControlApiTest {

    private final SourceControlApi api = new SourceControlApi();

    /**
     * Create a source control.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sourceControlCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String sourceControlName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SourceControlCreateOrUpdateParameters parameters = null;
        SourceControl response = api.sourceControlCreateOrUpdate(resourceGroupName, automationAccountName, sourceControlName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Delete the source control.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sourceControlDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String sourceControlName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.sourceControlDelete(resourceGroupName, automationAccountName, sourceControlName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve the source control identified by source control name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sourceControlGetTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String sourceControlName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SourceControl response = api.sourceControlGet(resourceGroupName, automationAccountName, sourceControlName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieve a list of source controls.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sourceControlListByAutomationAccountTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String subscriptionId = null;
        String apiVersion = null;
        String $filter = null;
        SourceControlListResult response = api.sourceControlListByAutomationAccount(resourceGroupName, automationAccountName, subscriptionId, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Update a source control.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sourceControlUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String automationAccountName = null;
        String sourceControlName = null;
        String subscriptionId = null;
        String apiVersion = null;
        SourceControlUpdateParameters parameters = null;
        SourceControl response = api.sourceControlUpdate(resourceGroupName, automationAccountName, sourceControlName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
