/**
 * AppServiceCertificateOrders API Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-08-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateDetails.h
 *
 * SSL certificate details.
 */

#ifndef OAICertificateDetails_H
#define OAICertificateDetails_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICertificateDetails : public OAIObject {
public:
    OAICertificateDetails();
    OAICertificateDetails(QString json);
    ~OAICertificateDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIssuer() const;
    void setIssuer(const QString &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    QDateTime getNotAfter() const;
    void setNotAfter(const QDateTime &not_after);
    bool is_not_after_Set() const;
    bool is_not_after_Valid() const;

    QDateTime getNotBefore() const;
    void setNotBefore(const QDateTime &not_before);
    bool is_not_before_Set() const;
    bool is_not_before_Valid() const;

    QString getRawData() const;
    void setRawData(const QString &raw_data);
    bool is_raw_data_Set() const;
    bool is_raw_data_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    QString getSignatureAlgorithm() const;
    void setSignatureAlgorithm(const QString &signature_algorithm);
    bool is_signature_algorithm_Set() const;
    bool is_signature_algorithm_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QString getThumbprint() const;
    void setThumbprint(const QString &thumbprint);
    bool is_thumbprint_Set() const;
    bool is_thumbprint_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    QDateTime m_not_after;
    bool m_not_after_isSet;
    bool m_not_after_isValid;

    QDateTime m_not_before;
    bool m_not_before_isSet;
    bool m_not_before_isValid;

    QString m_raw_data;
    bool m_raw_data_isSet;
    bool m_raw_data_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    QString m_signature_algorithm;
    bool m_signature_algorithm_isSet;
    bool m_signature_algorithm_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QString m_thumbprint;
    bool m_thumbprint_isSet;
    bool m_thumbprint_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateDetails)

#endif // OAICertificateDetails_H
