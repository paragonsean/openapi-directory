/**
 * StorageManagementClient
 * The Admin Storage Management Client.
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShareProperties.h
 *
 * Storage share properties.
 */

#ifndef OAIShareProperties_H
#define OAIShareProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIShareProperties : public OAIObject {
public:
    OAIShareProperties();
    OAIShareProperties(QString json);
    ~OAIShareProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getFreeCapacity() const;
    void setFreeCapacity(const qint64 &free_capacity);
    bool is_free_capacity_Set() const;
    bool is_free_capacity_Valid() const;

    QString getHealthStatus() const;
    void setHealthStatus(const QString &health_status);
    bool is_health_status_Set() const;
    bool is_health_status_Valid() const;

    QString getShareName() const;
    void setShareName(const QString &share_name);
    bool is_share_name_Set() const;
    bool is_share_name_Valid() const;

    qint64 getTotalCapacity() const;
    void setTotalCapacity(const qint64 &total_capacity);
    bool is_total_capacity_Set() const;
    bool is_total_capacity_Valid() const;

    QString getUncPath() const;
    void setUncPath(const QString &unc_path);
    bool is_unc_path_Set() const;
    bool is_unc_path_Valid() const;

    qint64 getUsedCapacity() const;
    void setUsedCapacity(const qint64 &used_capacity);
    bool is_used_capacity_Set() const;
    bool is_used_capacity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_free_capacity;
    bool m_free_capacity_isSet;
    bool m_free_capacity_isValid;

    QString m_health_status;
    bool m_health_status_isSet;
    bool m_health_status_isValid;

    QString m_share_name;
    bool m_share_name_isSet;
    bool m_share_name_isValid;

    qint64 m_total_capacity;
    bool m_total_capacity_isSet;
    bool m_total_capacity_isValid;

    QString m_unc_path;
    bool m_unc_path_isSet;
    bool m_unc_path_isValid;

    qint64 m_used_capacity;
    bool m_used_capacity_isSet;
    bool m_used_capacity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShareProperties)

#endif // OAIShareProperties_H
