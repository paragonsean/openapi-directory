/*
 * MarketplaceOrdering.Agreements
 * REST API for MarketplaceOrdering Agreements.
 *
 * The version of the OpenAPI document: 2015-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AgreementTerms;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Cancel marketplace terms.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplaceAgreementsCancelTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String publisherId = null;
        String offerId = null;
        String planId = null;
        AgreementTerms response = api.marketplaceAgreementsCancel(apiVersion, subscriptionId, publisherId, offerId, planId);
        // TODO: test validations
    }

    /**
     * Save marketplace terms.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplaceAgreementsCreateTest() throws ApiException {
        String apiVersion = null;
        String offerType = null;
        String subscriptionId = null;
        String publisherId = null;
        String offerId = null;
        String planId = null;
        AgreementTerms parameters = null;
        AgreementTerms response = api.marketplaceAgreementsCreate(apiVersion, offerType, subscriptionId, publisherId, offerId, planId, parameters);
        // TODO: test validations
    }

    /**
     * Get marketplace terms.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplaceAgreementsGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String offerType = null;
        String publisherId = null;
        String offerId = null;
        String planId = null;
        AgreementTerms response = api.marketplaceAgreementsGet(apiVersion, subscriptionId, offerType, publisherId, offerId, planId);
        // TODO: test validations
    }

    /**
     * Get marketplace agreement.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplaceAgreementsGetAgreementTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String publisherId = null;
        String offerId = null;
        String planId = null;
        AgreementTerms response = api.marketplaceAgreementsGetAgreement(apiVersion, subscriptionId, publisherId, offerId, planId);
        // TODO: test validations
    }

    /**
     * List marketplace agreements in the subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplaceAgreementsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        List<AgreementTerms> response = api.marketplaceAgreementsList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Sign marketplace terms.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void marketplaceAgreementsSignTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String publisherId = null;
        String offerId = null;
        String planId = null;
        AgreementTerms response = api.marketplaceAgreementsSign(apiVersion, subscriptionId, publisherId, offerId, planId);
        // TODO: test validations
    }

}
