/**
 * ApiManagementClient
 * Use these REST APIs for querying APIs. Operations and Products by tags in your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2019-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import TagResourceListByService200Response from '../model/TagResourceListByService200Response';
import TagResourceListByServiceDefaultResponse from '../model/TagResourceListByServiceDefaultResponse';

/**
* TagResource service.
* @module api/TagResourceApi
* @version 2019-01-01
*/
export default class TagResourceApi {

    /**
    * Constructs a new TagResourceApi. 
    * @alias module:api/TagResourceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the tagResourceListByService operation.
     * @callback module:api/TagResourceApi~tagResourceListByServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TagResourceListByService200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists a collection of resources associated with tags.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} serviceName The name of the API Management service.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] |   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| aid | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| state | filter | eq |     | </br>| isCurrent | filter | eq |     | </br>
     * @param {Number} [top] Number of records to return.
     * @param {Number} [skip] Number of records to skip.
     * @param {module:api/TagResourceApi~tagResourceListByServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TagResourceListByService200Response}
     */
    tagResourceListByService(resourceGroupName, serviceName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling tagResourceListByService");
      }
      // verify the required parameter 'serviceName' is set
      if (serviceName === undefined || serviceName === null) {
        throw new Error("Missing the required parameter 'serviceName' when calling tagResourceListByService");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling tagResourceListByService");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling tagResourceListByService");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serviceName': serviceName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$top': opts['top'],
        '$skip': opts['skip'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TagResourceListByService200Response;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tagResources', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
