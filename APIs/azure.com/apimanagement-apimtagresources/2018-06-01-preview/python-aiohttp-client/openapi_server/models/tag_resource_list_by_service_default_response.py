# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag_resource_list_by_service_default_response_error import TagResourceListByServiceDefaultResponseError
from openapi_server import util


class TagResourceListByServiceDefaultResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: TagResourceListByServiceDefaultResponseError=None):
        """TagResourceListByServiceDefaultResponse - a model defined in OpenAPI

        :param error: The error of this TagResourceListByServiceDefaultResponse.
        """
        self.openapi_types = {
            'error': TagResourceListByServiceDefaultResponseError
        }

        self.attribute_map = {
            'error': 'error'
        }

        self._error = error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagResourceListByServiceDefaultResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TagResource_ListByService_default_response of this TagResourceListByServiceDefaultResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this TagResourceListByServiceDefaultResponse.


        :return: The error of this TagResourceListByServiceDefaultResponse.
        :rtype: TagResourceListByServiceDefaultResponseError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this TagResourceListByServiceDefaultResponse.


        :param error: The error of this TagResourceListByServiceDefaultResponse.
        :type error: TagResourceListByServiceDefaultResponseError
        """

        self._error = error
