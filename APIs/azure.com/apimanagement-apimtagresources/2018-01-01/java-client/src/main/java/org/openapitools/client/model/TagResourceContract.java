/*
 * ApiManagementClient
 * Use these REST APIs for querying APIs. Operations and Products by tags in your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ApiTagResourceContractProperties;
import org.openapitools.client.model.OperationTagResourceContractProperties;
import org.openapitools.client.model.ProductTagResourceContractProperties;
import org.openapitools.client.model.TagTagResourceContractProperties;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TagResource contract properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:29:12.293186-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TagResourceContract {
  public static final String SERIALIZED_NAME_API = "api";
  @SerializedName(SERIALIZED_NAME_API)
  private ApiTagResourceContractProperties api;

  public static final String SERIALIZED_NAME_OPERATION = "operation";
  @SerializedName(SERIALIZED_NAME_OPERATION)
  private OperationTagResourceContractProperties operation;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private ProductTagResourceContractProperties product;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private TagTagResourceContractProperties tag;

  public TagResourceContract() {
  }

  public TagResourceContract api(ApiTagResourceContractProperties api) {
    this.api = api;
    return this;
  }

  /**
   * Get api
   * @return api
   */
  @javax.annotation.Nullable
  public ApiTagResourceContractProperties getApi() {
    return api;
  }

  public void setApi(ApiTagResourceContractProperties api) {
    this.api = api;
  }


  public TagResourceContract operation(OperationTagResourceContractProperties operation) {
    this.operation = operation;
    return this;
  }

  /**
   * Get operation
   * @return operation
   */
  @javax.annotation.Nullable
  public OperationTagResourceContractProperties getOperation() {
    return operation;
  }

  public void setOperation(OperationTagResourceContractProperties operation) {
    this.operation = operation;
  }


  public TagResourceContract product(ProductTagResourceContractProperties product) {
    this.product = product;
    return this;
  }

  /**
   * Get product
   * @return product
   */
  @javax.annotation.Nullable
  public ProductTagResourceContractProperties getProduct() {
    return product;
  }

  public void setProduct(ProductTagResourceContractProperties product) {
    this.product = product;
  }


  public TagResourceContract tag(TagTagResourceContractProperties tag) {
    this.tag = tag;
    return this;
  }

  /**
   * Get tag
   * @return tag
   */
  @javax.annotation.Nonnull
  public TagTagResourceContractProperties getTag() {
    return tag;
  }

  public void setTag(TagTagResourceContractProperties tag) {
    this.tag = tag;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TagResourceContract tagResourceContract = (TagResourceContract) o;
    return Objects.equals(this.api, tagResourceContract.api) &&
        Objects.equals(this.operation, tagResourceContract.operation) &&
        Objects.equals(this.product, tagResourceContract.product) &&
        Objects.equals(this.tag, tagResourceContract.tag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(api, operation, product, tag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TagResourceContract {\n");
    sb.append("    api: ").append(toIndentedString(api)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("api");
    openapiFields.add("operation");
    openapiFields.add("product");
    openapiFields.add("tag");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("tag");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TagResourceContract
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TagResourceContract.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TagResourceContract is not found in the empty JSON string", TagResourceContract.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TagResourceContract.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TagResourceContract` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TagResourceContract.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `api`
      if (jsonObj.get("api") != null && !jsonObj.get("api").isJsonNull()) {
        ApiTagResourceContractProperties.validateJsonElement(jsonObj.get("api"));
      }
      // validate the optional field `operation`
      if (jsonObj.get("operation") != null && !jsonObj.get("operation").isJsonNull()) {
        OperationTagResourceContractProperties.validateJsonElement(jsonObj.get("operation"));
      }
      // validate the optional field `product`
      if (jsonObj.get("product") != null && !jsonObj.get("product").isJsonNull()) {
        ProductTagResourceContractProperties.validateJsonElement(jsonObj.get("product"));
      }
      // validate the required field `tag`
      TagTagResourceContractProperties.validateJsonElement(jsonObj.get("tag"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TagResourceContract.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TagResourceContract' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TagResourceContract> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TagResourceContract.class));

       return (TypeAdapter<T>) new TypeAdapter<TagResourceContract>() {
           @Override
           public void write(JsonWriter out, TagResourceContract value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TagResourceContract read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TagResourceContract given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TagResourceContract
   * @throws IOException if the JSON string is invalid with respect to TagResourceContract
   */
  public static TagResourceContract fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TagResourceContract.class);
  }

  /**
   * Convert an instance of TagResourceContract to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

