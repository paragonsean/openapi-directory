# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_tag_resource_contract_properties_all_of_authentication_settings import ApiTagResourceContractPropertiesAllOfAuthenticationSettings
from openapi_server.models.api_tag_resource_contract_properties_all_of_subscription_key_parameter_names import ApiTagResourceContractPropertiesAllOfSubscriptionKeyParameterNames
from openapi_server import util


class ApiTagResourceContractProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, path: str=None, protocols: List[str]=None, service_url: str=None, api_revision: str=None, api_revision_description: str=None, api_version: str=None, api_version_description: str=None, api_version_set_id: str=None, authentication_settings: ApiTagResourceContractPropertiesAllOfAuthenticationSettings=None, description: str=None, is_current: bool=None, is_online: bool=None, subscription_key_parameter_names: ApiTagResourceContractPropertiesAllOfSubscriptionKeyParameterNames=None, type: str=None):
        """ApiTagResourceContractProperties - a model defined in OpenAPI

        :param id: The id of this ApiTagResourceContractProperties.
        :param name: The name of this ApiTagResourceContractProperties.
        :param path: The path of this ApiTagResourceContractProperties.
        :param protocols: The protocols of this ApiTagResourceContractProperties.
        :param service_url: The service_url of this ApiTagResourceContractProperties.
        :param api_revision: The api_revision of this ApiTagResourceContractProperties.
        :param api_revision_description: The api_revision_description of this ApiTagResourceContractProperties.
        :param api_version: The api_version of this ApiTagResourceContractProperties.
        :param api_version_description: The api_version_description of this ApiTagResourceContractProperties.
        :param api_version_set_id: The api_version_set_id of this ApiTagResourceContractProperties.
        :param authentication_settings: The authentication_settings of this ApiTagResourceContractProperties.
        :param description: The description of this ApiTagResourceContractProperties.
        :param is_current: The is_current of this ApiTagResourceContractProperties.
        :param is_online: The is_online of this ApiTagResourceContractProperties.
        :param subscription_key_parameter_names: The subscription_key_parameter_names of this ApiTagResourceContractProperties.
        :param type: The type of this ApiTagResourceContractProperties.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'path': str,
            'protocols': List[str],
            'service_url': str,
            'api_revision': str,
            'api_revision_description': str,
            'api_version': str,
            'api_version_description': str,
            'api_version_set_id': str,
            'authentication_settings': ApiTagResourceContractPropertiesAllOfAuthenticationSettings,
            'description': str,
            'is_current': bool,
            'is_online': bool,
            'subscription_key_parameter_names': ApiTagResourceContractPropertiesAllOfSubscriptionKeyParameterNames,
            'type': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'path': 'path',
            'protocols': 'protocols',
            'service_url': 'serviceUrl',
            'api_revision': 'apiRevision',
            'api_revision_description': 'apiRevisionDescription',
            'api_version': 'apiVersion',
            'api_version_description': 'apiVersionDescription',
            'api_version_set_id': 'apiVersionSetId',
            'authentication_settings': 'authenticationSettings',
            'description': 'description',
            'is_current': 'isCurrent',
            'is_online': 'isOnline',
            'subscription_key_parameter_names': 'subscriptionKeyParameterNames',
            'type': 'type'
        }

        self._id = id
        self._name = name
        self._path = path
        self._protocols = protocols
        self._service_url = service_url
        self._api_revision = api_revision
        self._api_revision_description = api_revision_description
        self._api_version = api_version
        self._api_version_description = api_version_description
        self._api_version_set_id = api_version_set_id
        self._authentication_settings = authentication_settings
        self._description = description
        self._is_current = is_current
        self._is_online = is_online
        self._subscription_key_parameter_names = subscription_key_parameter_names
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiTagResourceContractProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiTagResourceContractProperties of this ApiTagResourceContractProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ApiTagResourceContractProperties.

        API identifier in the form /apis/{apiId}.

        :return: The id of this ApiTagResourceContractProperties.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ApiTagResourceContractProperties.

        API identifier in the form /apis/{apiId}.

        :param id: The id of this ApiTagResourceContractProperties.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ApiTagResourceContractProperties.

        API name.

        :return: The name of this ApiTagResourceContractProperties.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApiTagResourceContractProperties.

        API name.

        :param name: The name of this ApiTagResourceContractProperties.
        :type name: str
        """
        if name is not None and len(name) > 300:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `300`")
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")

        self._name = name

    @property
    def path(self):
        """Gets the path of this ApiTagResourceContractProperties.

        Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.

        :return: The path of this ApiTagResourceContractProperties.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ApiTagResourceContractProperties.

        Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.

        :param path: The path of this ApiTagResourceContractProperties.
        :type path: str
        """
        if path is not None and len(path) > 400:
            raise ValueError("Invalid value for `path`, length must be less than or equal to `400`")
        if path is not None and len(path) < 0:
            raise ValueError("Invalid value for `path`, length must be greater than or equal to `0`")

        self._path = path

    @property
    def protocols(self):
        """Gets the protocols of this ApiTagResourceContractProperties.

        Describes on which protocols the operations in this API can be invoked.

        :return: The protocols of this ApiTagResourceContractProperties.
        :rtype: List[str]
        """
        return self._protocols

    @protocols.setter
    def protocols(self, protocols):
        """Sets the protocols of this ApiTagResourceContractProperties.

        Describes on which protocols the operations in this API can be invoked.

        :param protocols: The protocols of this ApiTagResourceContractProperties.
        :type protocols: List[str]
        """
        allowed_values = ["http", "https"]  # noqa: E501
        if not set(protocols).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `protocols` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(protocols) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._protocols = protocols

    @property
    def service_url(self):
        """Gets the service_url of this ApiTagResourceContractProperties.

        Absolute URL of the backend service implementing this API.

        :return: The service_url of this ApiTagResourceContractProperties.
        :rtype: str
        """
        return self._service_url

    @service_url.setter
    def service_url(self, service_url):
        """Sets the service_url of this ApiTagResourceContractProperties.

        Absolute URL of the backend service implementing this API.

        :param service_url: The service_url of this ApiTagResourceContractProperties.
        :type service_url: str
        """
        if service_url is not None and len(service_url) > 2000:
            raise ValueError("Invalid value for `service_url`, length must be less than or equal to `2000`")
        if service_url is not None and len(service_url) < 1:
            raise ValueError("Invalid value for `service_url`, length must be greater than or equal to `1`")

        self._service_url = service_url

    @property
    def api_revision(self):
        """Gets the api_revision of this ApiTagResourceContractProperties.

        Describes the Revision of the Api. If no value is provided, default revision 1 is created

        :return: The api_revision of this ApiTagResourceContractProperties.
        :rtype: str
        """
        return self._api_revision

    @api_revision.setter
    def api_revision(self, api_revision):
        """Sets the api_revision of this ApiTagResourceContractProperties.

        Describes the Revision of the Api. If no value is provided, default revision 1 is created

        :param api_revision: The api_revision of this ApiTagResourceContractProperties.
        :type api_revision: str
        """
        if api_revision is not None and len(api_revision) > 100:
            raise ValueError("Invalid value for `api_revision`, length must be less than or equal to `100`")
        if api_revision is not None and len(api_revision) < 1:
            raise ValueError("Invalid value for `api_revision`, length must be greater than or equal to `1`")

        self._api_revision = api_revision

    @property
    def api_revision_description(self):
        """Gets the api_revision_description of this ApiTagResourceContractProperties.

        Description of the Api Revision.

        :return: The api_revision_description of this ApiTagResourceContractProperties.
        :rtype: str
        """
        return self._api_revision_description

    @api_revision_description.setter
    def api_revision_description(self, api_revision_description):
        """Sets the api_revision_description of this ApiTagResourceContractProperties.

        Description of the Api Revision.

        :param api_revision_description: The api_revision_description of this ApiTagResourceContractProperties.
        :type api_revision_description: str
        """
        if api_revision_description is not None and len(api_revision_description) > 256:
            raise ValueError("Invalid value for `api_revision_description`, length must be less than or equal to `256`")

        self._api_revision_description = api_revision_description

    @property
    def api_version(self):
        """Gets the api_version of this ApiTagResourceContractProperties.

        Indicates the Version identifier of the API if the API is versioned

        :return: The api_version of this ApiTagResourceContractProperties.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this ApiTagResourceContractProperties.

        Indicates the Version identifier of the API if the API is versioned

        :param api_version: The api_version of this ApiTagResourceContractProperties.
        :type api_version: str
        """
        if api_version is not None and len(api_version) > 100:
            raise ValueError("Invalid value for `api_version`, length must be less than or equal to `100`")

        self._api_version = api_version

    @property
    def api_version_description(self):
        """Gets the api_version_description of this ApiTagResourceContractProperties.

        Description of the Api Version.

        :return: The api_version_description of this ApiTagResourceContractProperties.
        :rtype: str
        """
        return self._api_version_description

    @api_version_description.setter
    def api_version_description(self, api_version_description):
        """Sets the api_version_description of this ApiTagResourceContractProperties.

        Description of the Api Version.

        :param api_version_description: The api_version_description of this ApiTagResourceContractProperties.
        :type api_version_description: str
        """
        if api_version_description is not None and len(api_version_description) > 256:
            raise ValueError("Invalid value for `api_version_description`, length must be less than or equal to `256`")

        self._api_version_description = api_version_description

    @property
    def api_version_set_id(self):
        """Gets the api_version_set_id of this ApiTagResourceContractProperties.

        A resource identifier for the related ApiVersionSet.

        :return: The api_version_set_id of this ApiTagResourceContractProperties.
        :rtype: str
        """
        return self._api_version_set_id

    @api_version_set_id.setter
    def api_version_set_id(self, api_version_set_id):
        """Sets the api_version_set_id of this ApiTagResourceContractProperties.

        A resource identifier for the related ApiVersionSet.

        :param api_version_set_id: The api_version_set_id of this ApiTagResourceContractProperties.
        :type api_version_set_id: str
        """

        self._api_version_set_id = api_version_set_id

    @property
    def authentication_settings(self):
        """Gets the authentication_settings of this ApiTagResourceContractProperties.


        :return: The authentication_settings of this ApiTagResourceContractProperties.
        :rtype: ApiTagResourceContractPropertiesAllOfAuthenticationSettings
        """
        return self._authentication_settings

    @authentication_settings.setter
    def authentication_settings(self, authentication_settings):
        """Sets the authentication_settings of this ApiTagResourceContractProperties.


        :param authentication_settings: The authentication_settings of this ApiTagResourceContractProperties.
        :type authentication_settings: ApiTagResourceContractPropertiesAllOfAuthenticationSettings
        """

        self._authentication_settings = authentication_settings

    @property
    def description(self):
        """Gets the description of this ApiTagResourceContractProperties.

        Description of the API. May include HTML formatting tags.

        :return: The description of this ApiTagResourceContractProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApiTagResourceContractProperties.

        Description of the API. May include HTML formatting tags.

        :param description: The description of this ApiTagResourceContractProperties.
        :type description: str
        """

        self._description = description

    @property
    def is_current(self):
        """Gets the is_current of this ApiTagResourceContractProperties.

        Indicates if API revision is current api revision.

        :return: The is_current of this ApiTagResourceContractProperties.
        :rtype: bool
        """
        return self._is_current

    @is_current.setter
    def is_current(self, is_current):
        """Sets the is_current of this ApiTagResourceContractProperties.

        Indicates if API revision is current api revision.

        :param is_current: The is_current of this ApiTagResourceContractProperties.
        :type is_current: bool
        """

        self._is_current = is_current

    @property
    def is_online(self):
        """Gets the is_online of this ApiTagResourceContractProperties.

        Indicates if API revision is accessible via the gateway.

        :return: The is_online of this ApiTagResourceContractProperties.
        :rtype: bool
        """
        return self._is_online

    @is_online.setter
    def is_online(self, is_online):
        """Sets the is_online of this ApiTagResourceContractProperties.

        Indicates if API revision is accessible via the gateway.

        :param is_online: The is_online of this ApiTagResourceContractProperties.
        :type is_online: bool
        """

        self._is_online = is_online

    @property
    def subscription_key_parameter_names(self):
        """Gets the subscription_key_parameter_names of this ApiTagResourceContractProperties.


        :return: The subscription_key_parameter_names of this ApiTagResourceContractProperties.
        :rtype: ApiTagResourceContractPropertiesAllOfSubscriptionKeyParameterNames
        """
        return self._subscription_key_parameter_names

    @subscription_key_parameter_names.setter
    def subscription_key_parameter_names(self, subscription_key_parameter_names):
        """Sets the subscription_key_parameter_names of this ApiTagResourceContractProperties.


        :param subscription_key_parameter_names: The subscription_key_parameter_names of this ApiTagResourceContractProperties.
        :type subscription_key_parameter_names: ApiTagResourceContractPropertiesAllOfSubscriptionKeyParameterNames
        """

        self._subscription_key_parameter_names = subscription_key_parameter_names

    @property
    def type(self):
        """Gets the type of this ApiTagResourceContractProperties.

        Type of API.

        :return: The type of this ApiTagResourceContractProperties.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ApiTagResourceContractProperties.

        Type of API.

        :param type: The type of this ApiTagResourceContractProperties.
        :type type: str
        """
        allowed_values = ["http", "soap"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
