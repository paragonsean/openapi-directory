/**
 * ApiManagementClient
 * Use these REST APIs for querying APIs. Operations and Products by tags in your Azure API Management deployment.
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TagResourceContractPropertiesApiPropertiesApiVersionSetProperties model module.
 * @module model/TagResourceContractPropertiesApiPropertiesApiVersionSetProperties
 * @version 2017-03-01
 */
class TagResourceContractPropertiesApiPropertiesApiVersionSetProperties {
    /**
     * Constructs a new <code>TagResourceContractPropertiesApiPropertiesApiVersionSetProperties</code>.
     * Properties of an API Version Set.
     * @alias module:model/TagResourceContractPropertiesApiPropertiesApiVersionSetProperties
     * @param displayName {String} Name of API Version Set
     * @param versioningScheme {module:model/TagResourceContractPropertiesApiPropertiesApiVersionSetProperties.VersioningSchemeEnum} An value that determines where the API Version identifer will be located in a HTTP request.
     */
    constructor(displayName, versioningScheme) { 
        
        TagResourceContractPropertiesApiPropertiesApiVersionSetProperties.initialize(this, displayName, versioningScheme);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, displayName, versioningScheme) { 
        obj['displayName'] = displayName;
        obj['versioningScheme'] = versioningScheme;
    }

    /**
     * Constructs a <code>TagResourceContractPropertiesApiPropertiesApiVersionSetProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TagResourceContractPropertiesApiPropertiesApiVersionSetProperties} obj Optional instance to populate.
     * @return {module:model/TagResourceContractPropertiesApiPropertiesApiVersionSetProperties} The populated <code>TagResourceContractPropertiesApiPropertiesApiVersionSetProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TagResourceContractPropertiesApiPropertiesApiVersionSetProperties();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('versioningScheme')) {
                obj['versioningScheme'] = ApiClient.convertToType(data['versioningScheme'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TagResourceContractPropertiesApiPropertiesApiVersionSetProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TagResourceContractPropertiesApiPropertiesApiVersionSetProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TagResourceContractPropertiesApiPropertiesApiVersionSetProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['versioningScheme'] && !(typeof data['versioningScheme'] === 'string' || data['versioningScheme'] instanceof String)) {
            throw new Error("Expected the field `versioningScheme` to be a primitive type in the JSON string but got " + data['versioningScheme']);
        }

        return true;
    }


}

TagResourceContractPropertiesApiPropertiesApiVersionSetProperties.RequiredProperties = ["displayName", "versioningScheme"];

/**
 * Name of API Version Set
 * @member {String} displayName
 */
TagResourceContractPropertiesApiPropertiesApiVersionSetProperties.prototype['displayName'] = undefined;

/**
 * An value that determines where the API Version identifer will be located in a HTTP request.
 * @member {module:model/TagResourceContractPropertiesApiPropertiesApiVersionSetProperties.VersioningSchemeEnum} versioningScheme
 */
TagResourceContractPropertiesApiPropertiesApiVersionSetProperties.prototype['versioningScheme'] = undefined;





/**
 * Allowed values for the <code>versioningScheme</code> property.
 * @enum {String}
 * @readonly
 */
TagResourceContractPropertiesApiPropertiesApiVersionSetProperties['VersioningSchemeEnum'] = {

    /**
     * value: "Segment"
     * @const
     */
    "Segment": "Segment",

    /**
     * value: "Query"
     * @const
     */
    "Query": "Query",

    /**
     * value: "Header"
     * @const
     */
    "Header": "Header"
};



export default TagResourceContractPropertiesApiPropertiesApiVersionSetProperties;

