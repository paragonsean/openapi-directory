# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operation_entity_contract import OperationEntityContract
from openapi_server.models.tag_resource_contract_properties_api import TagResourceContractPropertiesApi
from openapi_server.models.tag_resource_contract_properties_product import TagResourceContractPropertiesProduct
from openapi_server.models.tag_resource_contract_properties_tag import TagResourceContractPropertiesTag
from openapi_server import util


class TagResourceContractProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api: TagResourceContractPropertiesApi=None, operation: OperationEntityContract=None, product: TagResourceContractPropertiesProduct=None, tag: TagResourceContractPropertiesTag=None):
        """TagResourceContractProperties - a model defined in OpenAPI

        :param api: The api of this TagResourceContractProperties.
        :param operation: The operation of this TagResourceContractProperties.
        :param product: The product of this TagResourceContractProperties.
        :param tag: The tag of this TagResourceContractProperties.
        """
        self.openapi_types = {
            'api': TagResourceContractPropertiesApi,
            'operation': OperationEntityContract,
            'product': TagResourceContractPropertiesProduct,
            'tag': TagResourceContractPropertiesTag
        }

        self.attribute_map = {
            'api': 'api',
            'operation': 'operation',
            'product': 'product',
            'tag': 'tag'
        }

        self._api = api
        self._operation = operation
        self._product = product
        self._tag = tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagResourceContractProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TagResourceContractProperties of this TagResourceContractProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api(self):
        """Gets the api of this TagResourceContractProperties.


        :return: The api of this TagResourceContractProperties.
        :rtype: TagResourceContractPropertiesApi
        """
        return self._api

    @api.setter
    def api(self, api):
        """Sets the api of this TagResourceContractProperties.


        :param api: The api of this TagResourceContractProperties.
        :type api: TagResourceContractPropertiesApi
        """

        self._api = api

    @property
    def operation(self):
        """Gets the operation of this TagResourceContractProperties.


        :return: The operation of this TagResourceContractProperties.
        :rtype: OperationEntityContract
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this TagResourceContractProperties.


        :param operation: The operation of this TagResourceContractProperties.
        :type operation: OperationEntityContract
        """

        self._operation = operation

    @property
    def product(self):
        """Gets the product of this TagResourceContractProperties.


        :return: The product of this TagResourceContractProperties.
        :rtype: TagResourceContractPropertiesProduct
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this TagResourceContractProperties.


        :param product: The product of this TagResourceContractProperties.
        :type product: TagResourceContractPropertiesProduct
        """

        self._product = product

    @property
    def tag(self):
        """Gets the tag of this TagResourceContractProperties.


        :return: The tag of this TagResourceContractProperties.
        :rtype: TagResourceContractPropertiesTag
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this TagResourceContractProperties.


        :param tag: The tag of this TagResourceContractProperties.
        :type tag: TagResourceContractPropertiesTag
        """

        self._tag = tag
