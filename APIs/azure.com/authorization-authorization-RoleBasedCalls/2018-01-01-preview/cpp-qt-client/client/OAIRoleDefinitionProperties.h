/**
 * AuthorizationManagementClient
 * Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations enable you to manage role definitions and role assignments. A role definition describes the set of actions that can be performed on resources. A role assignment grants access to Azure Active Directory users.
 *
 * The version of the OpenAPI document: 2018-01-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoleDefinitionProperties.h
 *
 * Role definition properties.
 */

#ifndef OAIRoleDefinitionProperties_H
#define OAIRoleDefinitionProperties_H

#include <QJsonObject>

#include "OAIPermission.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPermission;

class OAIRoleDefinitionProperties : public OAIObject {
public:
    OAIRoleDefinitionProperties();
    OAIRoleDefinitionProperties(QString json);
    ~OAIRoleDefinitionProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAssignableScopes() const;
    void setAssignableScopes(const QList<QString> &assignable_scopes);
    bool is_assignable_scopes_Set() const;
    bool is_assignable_scopes_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIPermission> getPermissions() const;
    void setPermissions(const QList<OAIPermission> &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    QString getRoleName() const;
    void setRoleName(const QString &role_name);
    bool is_role_name_Set() const;
    bool is_role_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_assignable_scopes;
    bool m_assignable_scopes_isSet;
    bool m_assignable_scopes_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIPermission> m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    QString m_role_name;
    bool m_role_name_isSet;
    bool m_role_name_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoleDefinitionProperties)

#endif // OAIRoleDefinitionProperties_H
