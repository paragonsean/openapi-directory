/*
 * AuthorizationManagementClient
 * Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations enable you to manage role definitions and role assignments. A role definition describes the set of actions that can be performed on resources. A role assignment grants access to Azure Active Directory users.
 *
 * The version of the OpenAPI document: 2018-01-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PermissionGetResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PermissionsApi
 */
@Disabled
public class PermissionsApiTest {

    private final PermissionsApi api = new PermissionsApi();

    /**
     * Gets all permissions the caller has for a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void permissionsListForResourceTest() throws ApiException {
        String resourceGroupName = null;
        String resourceProviderNamespace = null;
        String parentResourcePath = null;
        String resourceType = null;
        String resourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PermissionGetResult response = api.permissionsListForResource(resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Gets all permissions the caller has for a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void permissionsListForResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String apiVersion = null;
        String subscriptionId = null;
        PermissionGetResult response = api.permissionsListForResourceGroup(resourceGroupName, apiVersion, subscriptionId);
        // TODO: test validations
    }

}
