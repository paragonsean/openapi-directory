/**
 * TimeSeriesInsightsClient
 * Time Series Insights client
 *
 * The version of the OpenAPI document: 2017-11-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import ReferenceDataSetCreateOrUpdateParameters from '../model/ReferenceDataSetCreateOrUpdateParameters';
import ReferenceDataSetListResponse from '../model/ReferenceDataSetListResponse';
import ReferenceDataSetResource from '../model/ReferenceDataSetResource';
import ReferenceDataSetUpdateParameters from '../model/ReferenceDataSetUpdateParameters';

/**
* ReferenceDataSets service.
* @module api/ReferenceDataSetsApi
* @version 2017-11-15
*/
export default class ReferenceDataSetsApi {

    /**
    * Constructs a new ReferenceDataSetsApi. 
    * @alias module:api/ReferenceDataSetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the referenceDataSetsCreateOrUpdate operation.
     * @callback module:api/ReferenceDataSetsApi~referenceDataSetsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReferenceDataSetResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update a reference data set in the specified environment.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} environmentName The name of the Time Series Insights environment associated with the specified resource group.
     * @param {String} referenceDataSetName Name of the reference data set.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/ReferenceDataSetCreateOrUpdateParameters} parameters Parameters for creating a reference data set.
     * @param {module:api/ReferenceDataSetsApi~referenceDataSetsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReferenceDataSetResource}
     */
    referenceDataSetsCreateOrUpdate(subscriptionId, resourceGroupName, environmentName, referenceDataSetName, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling referenceDataSetsCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling referenceDataSetsCreateOrUpdate");
      }
      // verify the required parameter 'environmentName' is set
      if (environmentName === undefined || environmentName === null) {
        throw new Error("Missing the required parameter 'environmentName' when calling referenceDataSetsCreateOrUpdate");
      }
      // verify the required parameter 'referenceDataSetName' is set
      if (referenceDataSetName === undefined || referenceDataSetName === null) {
        throw new Error("Missing the required parameter 'referenceDataSetName' when calling referenceDataSetsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling referenceDataSetsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling referenceDataSetsCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'environmentName': environmentName,
        'referenceDataSetName': referenceDataSetName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReferenceDataSetResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the referenceDataSetsDelete operation.
     * @callback module:api/ReferenceDataSetsApi~referenceDataSetsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the reference data set with the specified name in the specified subscription, resource group, and environment
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} environmentName The name of the Time Series Insights environment associated with the specified resource group.
     * @param {String} referenceDataSetName The name of the Time Series Insights reference data set associated with the specified environment.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/ReferenceDataSetsApi~referenceDataSetsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    referenceDataSetsDelete(subscriptionId, resourceGroupName, environmentName, referenceDataSetName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling referenceDataSetsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling referenceDataSetsDelete");
      }
      // verify the required parameter 'environmentName' is set
      if (environmentName === undefined || environmentName === null) {
        throw new Error("Missing the required parameter 'environmentName' when calling referenceDataSetsDelete");
      }
      // verify the required parameter 'referenceDataSetName' is set
      if (referenceDataSetName === undefined || referenceDataSetName === null) {
        throw new Error("Missing the required parameter 'referenceDataSetName' when calling referenceDataSetsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling referenceDataSetsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'environmentName': environmentName,
        'referenceDataSetName': referenceDataSetName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the referenceDataSetsGet operation.
     * @callback module:api/ReferenceDataSetsApi~referenceDataSetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReferenceDataSetResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the reference data set with the specified name in the specified environment.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} environmentName The name of the Time Series Insights environment associated with the specified resource group.
     * @param {String} referenceDataSetName The name of the Time Series Insights reference data set associated with the specified environment.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/ReferenceDataSetsApi~referenceDataSetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReferenceDataSetResource}
     */
    referenceDataSetsGet(subscriptionId, resourceGroupName, environmentName, referenceDataSetName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling referenceDataSetsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling referenceDataSetsGet");
      }
      // verify the required parameter 'environmentName' is set
      if (environmentName === undefined || environmentName === null) {
        throw new Error("Missing the required parameter 'environmentName' when calling referenceDataSetsGet");
      }
      // verify the required parameter 'referenceDataSetName' is set
      if (referenceDataSetName === undefined || referenceDataSetName === null) {
        throw new Error("Missing the required parameter 'referenceDataSetName' when calling referenceDataSetsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling referenceDataSetsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'environmentName': environmentName,
        'referenceDataSetName': referenceDataSetName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReferenceDataSetResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the referenceDataSetsListByEnvironment operation.
     * @callback module:api/ReferenceDataSetsApi~referenceDataSetsListByEnvironmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReferenceDataSetListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the available reference data sets associated with the subscription and within the specified resource group and environment.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} environmentName The name of the Time Series Insights environment associated with the specified resource group.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:api/ReferenceDataSetsApi~referenceDataSetsListByEnvironmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReferenceDataSetListResponse}
     */
    referenceDataSetsListByEnvironment(subscriptionId, resourceGroupName, environmentName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling referenceDataSetsListByEnvironment");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling referenceDataSetsListByEnvironment");
      }
      // verify the required parameter 'environmentName' is set
      if (environmentName === undefined || environmentName === null) {
        throw new Error("Missing the required parameter 'environmentName' when calling referenceDataSetsListByEnvironment");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling referenceDataSetsListByEnvironment");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'environmentName': environmentName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReferenceDataSetListResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the referenceDataSetsUpdate operation.
     * @callback module:api/ReferenceDataSetsApi~referenceDataSetsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReferenceDataSetResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the reference data set with the specified name in the specified subscription, resource group, and environment.
     * @param {String} subscriptionId Azure Subscription ID.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} environmentName The name of the Time Series Insights environment associated with the specified resource group.
     * @param {String} referenceDataSetName The name of the Time Series Insights reference data set associated with the specified environment.
     * @param {String} apiVersion Version of the API to be used with the client request.
     * @param {module:model/ReferenceDataSetUpdateParameters} referenceDataSetUpdateParameters Request object that contains the updated information for the reference data set.
     * @param {module:api/ReferenceDataSetsApi~referenceDataSetsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReferenceDataSetResource}
     */
    referenceDataSetsUpdate(subscriptionId, resourceGroupName, environmentName, referenceDataSetName, apiVersion, referenceDataSetUpdateParameters, callback) {
      let postBody = referenceDataSetUpdateParameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling referenceDataSetsUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling referenceDataSetsUpdate");
      }
      // verify the required parameter 'environmentName' is set
      if (environmentName === undefined || environmentName === null) {
        throw new Error("Missing the required parameter 'environmentName' when calling referenceDataSetsUpdate");
      }
      // verify the required parameter 'referenceDataSetName' is set
      if (referenceDataSetName === undefined || referenceDataSetName === null) {
        throw new Error("Missing the required parameter 'referenceDataSetName' when calling referenceDataSetsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling referenceDataSetsUpdate");
      }
      // verify the required parameter 'referenceDataSetUpdateParameters' is set
      if (referenceDataSetUpdateParameters === undefined || referenceDataSetUpdateParameters === null) {
        throw new Error("Missing the required parameter 'referenceDataSetUpdateParameters' when calling referenceDataSetsUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'environmentName': environmentName,
        'referenceDataSetName': referenceDataSetName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReferenceDataSetResource;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
