/*
 * TimeSeriesInsightsClient
 * Time Series Insights client
 *
 * The version of the OpenAPI document: 2017-11-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.EnvironmentCreateOrUpdateParameters;
import org.openapitools.client.model.EnvironmentListResponse;
import org.openapitools.client.model.EnvironmentResource;
import org.openapitools.client.model.EnvironmentUpdateParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EnvironmentsApi
 */
@Disabled
public class EnvironmentsApiTest {

    private final EnvironmentsApi api = new EnvironmentsApi();

    /**
     * Create or update an environment in the specified subscription and resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String apiVersion = null;
        EnvironmentCreateOrUpdateParameters parameters = null;
        EnvironmentResource response = api.environmentsCreateOrUpdate(subscriptionId, resourceGroupName, environmentName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the environment with the specified name in the specified subscription and resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String apiVersion = null;
        api.environmentsDelete(subscriptionId, resourceGroupName, environmentName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the environment with the specified name in the specified subscription and resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String apiVersion = null;
        String $expand = null;
        EnvironmentResource response = api.environmentsGet(subscriptionId, resourceGroupName, environmentName, apiVersion, $expand);
        // TODO: test validations
    }

    /**
     * Lists all the available environments associated with the subscription and within the specified resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        EnvironmentListResponse response = api.environmentsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all the available environments within a subscription, irrespective of the resource groups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        EnvironmentListResponse response = api.environmentsListBySubscription(subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates the environment with the specified name in the specified subscription and resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void environmentsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String apiVersion = null;
        EnvironmentUpdateParameters environmentUpdateParameters = null;
        EnvironmentResource response = api.environmentsUpdate(subscriptionId, resourceGroupName, environmentName, apiVersion, environmentUpdateParameters);
        // TODO: test validations
    }

}
