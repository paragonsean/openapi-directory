# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reference_data_set_key_property import ReferenceDataSetKeyProperty
from openapi_server import util


class ReferenceDataSetCreationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_properties: List[ReferenceDataSetKeyProperty]=None):
        """ReferenceDataSetCreationProperties - a model defined in OpenAPI

        :param key_properties: The key_properties of this ReferenceDataSetCreationProperties.
        """
        self.openapi_types = {
            'key_properties': List[ReferenceDataSetKeyProperty]
        }

        self.attribute_map = {
            'key_properties': 'keyProperties'
        }

        self._key_properties = key_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReferenceDataSetCreationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReferenceDataSetCreationProperties of this ReferenceDataSetCreationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_properties(self):
        """Gets the key_properties of this ReferenceDataSetCreationProperties.

        The list of key properties for the reference data set.

        :return: The key_properties of this ReferenceDataSetCreationProperties.
        :rtype: List[ReferenceDataSetKeyProperty]
        """
        return self._key_properties

    @key_properties.setter
    def key_properties(self, key_properties):
        """Sets the key_properties of this ReferenceDataSetCreationProperties.

        The list of key properties for the reference data set.

        :param key_properties: The key_properties of this ReferenceDataSetCreationProperties.
        :type key_properties: List[ReferenceDataSetKeyProperty]
        """
        if key_properties is None:
            raise ValueError("Invalid value for `key_properties`, must not be `None`")

        self._key_properties = key_properties
