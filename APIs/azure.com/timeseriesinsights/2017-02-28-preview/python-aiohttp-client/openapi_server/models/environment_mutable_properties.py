# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnvironmentMutableProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_retention_time: str=None):
        """EnvironmentMutableProperties - a model defined in OpenAPI

        :param data_retention_time: The data_retention_time of this EnvironmentMutableProperties.
        """
        self.openapi_types = {
            'data_retention_time': str
        }

        self.attribute_map = {
            'data_retention_time': 'dataRetentionTime'
        }

        self._data_retention_time = data_retention_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnvironmentMutableProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnvironmentMutableProperties of this EnvironmentMutableProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_retention_time(self):
        """Gets the data_retention_time of this EnvironmentMutableProperties.

        ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.

        :return: The data_retention_time of this EnvironmentMutableProperties.
        :rtype: str
        """
        return self._data_retention_time

    @data_retention_time.setter
    def data_retention_time(self, data_retention_time):
        """Sets the data_retention_time of this EnvironmentMutableProperties.

        ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.

        :param data_retention_time: The data_retention_time of this EnvironmentMutableProperties.
        :type data_retention_time: str
        """

        self._data_retention_time = data_retention_time
