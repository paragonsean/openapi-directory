/**
 * TimeSeriesInsightsClient
 * Time Series Insights client
 *
 * The version of the OpenAPI document: 2017-02-28-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReferenceDataSetCreationProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReferenceDataSetCreationProperties::OAIReferenceDataSetCreationProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReferenceDataSetCreationProperties::OAIReferenceDataSetCreationProperties() {
    this->initializeModel();
}

OAIReferenceDataSetCreationProperties::~OAIReferenceDataSetCreationProperties() {}

void OAIReferenceDataSetCreationProperties::initializeModel() {

    m_key_properties_isSet = false;
    m_key_properties_isValid = false;
}

void OAIReferenceDataSetCreationProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReferenceDataSetCreationProperties::fromJsonObject(QJsonObject json) {

    m_key_properties_isValid = ::OpenAPI::fromJsonValue(m_key_properties, json[QString("keyProperties")]);
    m_key_properties_isSet = !json[QString("keyProperties")].isNull() && m_key_properties_isValid;
}

QString OAIReferenceDataSetCreationProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReferenceDataSetCreationProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_key_properties.size() > 0) {
        obj.insert(QString("keyProperties"), ::OpenAPI::toJsonValue(m_key_properties));
    }
    return obj;
}

QList<OAIReferenceDataSetKeyProperty> OAIReferenceDataSetCreationProperties::getKeyProperties() const {
    return m_key_properties;
}
void OAIReferenceDataSetCreationProperties::setKeyProperties(const QList<OAIReferenceDataSetKeyProperty> &key_properties) {
    m_key_properties = key_properties;
    m_key_properties_isSet = true;
}

bool OAIReferenceDataSetCreationProperties::is_key_properties_Set() const{
    return m_key_properties_isSet;
}

bool OAIReferenceDataSetCreationProperties::is_key_properties_Valid() const{
    return m_key_properties_isValid;
}

bool OAIReferenceDataSetCreationProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_properties.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReferenceDataSetCreationProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_key_properties_isValid && true;
}

} // namespace OpenAPI
