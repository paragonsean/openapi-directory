/**
 * TimeSeriesInsightsClient
 * Time Series Insights client
 *
 * The version of the OpenAPI document: 2017-02-28-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccessPolicyResourceProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccessPolicyResourceProperties::OAIAccessPolicyResourceProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccessPolicyResourceProperties::OAIAccessPolicyResourceProperties() {
    this->initializeModel();
}

OAIAccessPolicyResourceProperties::~OAIAccessPolicyResourceProperties() {}

void OAIAccessPolicyResourceProperties::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_principal_object_id_isSet = false;
    m_principal_object_id_isValid = false;

    m_roles_isSet = false;
    m_roles_isValid = false;
}

void OAIAccessPolicyResourceProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccessPolicyResourceProperties::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_principal_object_id_isValid = ::OpenAPI::fromJsonValue(m_principal_object_id, json[QString("principalObjectId")]);
    m_principal_object_id_isSet = !json[QString("principalObjectId")].isNull() && m_principal_object_id_isValid;

    m_roles_isValid = ::OpenAPI::fromJsonValue(m_roles, json[QString("roles")]);
    m_roles_isSet = !json[QString("roles")].isNull() && m_roles_isValid;
}

QString OAIAccessPolicyResourceProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccessPolicyResourceProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_principal_object_id_isSet) {
        obj.insert(QString("principalObjectId"), ::OpenAPI::toJsonValue(m_principal_object_id));
    }
    if (m_roles.size() > 0) {
        obj.insert(QString("roles"), ::OpenAPI::toJsonValue(m_roles));
    }
    return obj;
}

QString OAIAccessPolicyResourceProperties::getDescription() const {
    return m_description;
}
void OAIAccessPolicyResourceProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAccessPolicyResourceProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAccessPolicyResourceProperties::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIAccessPolicyResourceProperties::getPrincipalObjectId() const {
    return m_principal_object_id;
}
void OAIAccessPolicyResourceProperties::setPrincipalObjectId(const QString &principal_object_id) {
    m_principal_object_id = principal_object_id;
    m_principal_object_id_isSet = true;
}

bool OAIAccessPolicyResourceProperties::is_principal_object_id_Set() const{
    return m_principal_object_id_isSet;
}

bool OAIAccessPolicyResourceProperties::is_principal_object_id_Valid() const{
    return m_principal_object_id_isValid;
}

QList<QString> OAIAccessPolicyResourceProperties::getRoles() const {
    return m_roles;
}
void OAIAccessPolicyResourceProperties::setRoles(const QList<QString> &roles) {
    m_roles = roles;
    m_roles_isSet = true;
}

bool OAIAccessPolicyResourceProperties::is_roles_Set() const{
    return m_roles_isSet;
}

bool OAIAccessPolicyResourceProperties::is_roles_Valid() const{
    return m_roles_isValid;
}

bool OAIAccessPolicyResourceProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_principal_object_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccessPolicyResourceProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
