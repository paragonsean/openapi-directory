/*
 * TimeSeriesInsightsClient
 * Time Series Insights client
 *
 * The version of the OpenAPI document: 2017-02-28-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccessPolicyCreateOrUpdateParameters;
import org.openapitools.client.model.AccessPolicyListResponse;
import org.openapitools.client.model.AccessPolicyResource;
import org.openapitools.client.model.AccessPolicyUpdateParameters;
import org.openapitools.client.model.CloudError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccessPoliciesApi
 */
@Disabled
public class AccessPoliciesApiTest {

    private final AccessPoliciesApi api = new AccessPoliciesApi();

    /**
     * Create or update an access policy in the specified environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accessPoliciesCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String accessPolicyName = null;
        String apiVersion = null;
        AccessPolicyCreateOrUpdateParameters parameters = null;
        AccessPolicyResource response = api.accessPoliciesCreateOrUpdate(subscriptionId, resourceGroupName, environmentName, accessPolicyName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the access policy with the specified name in the specified subscription, resource group, and environment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accessPoliciesDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String accessPolicyName = null;
        String apiVersion = null;
        api.accessPoliciesDelete(subscriptionId, resourceGroupName, environmentName, accessPolicyName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the access policy with the specified name in the specified environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accessPoliciesGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String accessPolicyName = null;
        String apiVersion = null;
        AccessPolicyResource response = api.accessPoliciesGet(subscriptionId, resourceGroupName, environmentName, accessPolicyName, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all the available access policies associated with the environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accessPoliciesListByEnvironmentTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String apiVersion = null;
        AccessPolicyListResponse response = api.accessPoliciesListByEnvironment(subscriptionId, resourceGroupName, environmentName, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates the access policy with the specified name in the specified subscription, resource group, and environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accessPoliciesUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String accessPolicyName = null;
        String apiVersion = null;
        AccessPolicyUpdateParameters accessPolicyUpdateParameters = null;
        AccessPolicyResource response = api.accessPoliciesUpdate(subscriptionId, resourceGroupName, environmentName, accessPolicyName, apiVersion, accessPolicyUpdateParameters);
        // TODO: test validations
    }

}
