/**
 * TimeSeriesInsightsClient
 * Time Series Insights client
 *
 * The version of the OpenAPI document: 2017-02-28-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnvironmentCreationProperties from './EnvironmentCreationProperties';
import ResourceProperties from './ResourceProperties';

/**
 * The EnvironmentResourceProperties model module.
 * @module model/EnvironmentResourceProperties
 * @version 2017-02-28-preview
 */
class EnvironmentResourceProperties {
    /**
     * Constructs a new <code>EnvironmentResourceProperties</code>.
     * Properties of the environment.
     * @alias module:model/EnvironmentResourceProperties
     * @implements module:model/EnvironmentCreationProperties
     * @implements module:model/ResourceProperties
     * @param dataRetentionTime {String} ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
     */
    constructor(dataRetentionTime) { 
        EnvironmentCreationProperties.initialize(this, dataRetentionTime);ResourceProperties.initialize(this);
        EnvironmentResourceProperties.initialize(this, dataRetentionTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dataRetentionTime) { 
        obj['dataRetentionTime'] = dataRetentionTime;
    }

    /**
     * Constructs a <code>EnvironmentResourceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnvironmentResourceProperties} obj Optional instance to populate.
     * @return {module:model/EnvironmentResourceProperties} The populated <code>EnvironmentResourceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnvironmentResourceProperties();
            EnvironmentCreationProperties.constructFromObject(data, obj);
            ResourceProperties.constructFromObject(data, obj);

            if (data.hasOwnProperty('dataAccessFqdn')) {
                obj['dataAccessFqdn'] = ApiClient.convertToType(data['dataAccessFqdn'], 'String');
            }
            if (data.hasOwnProperty('dataAccessId')) {
                obj['dataAccessId'] = ApiClient.convertToType(data['dataAccessId'], 'String');
            }
            if (data.hasOwnProperty('dataRetentionTime')) {
                obj['dataRetentionTime'] = ApiClient.convertToType(data['dataRetentionTime'], 'String');
            }
            if (data.hasOwnProperty('storageLimitExceededBehavior')) {
                obj['storageLimitExceededBehavior'] = ApiClient.convertToType(data['storageLimitExceededBehavior'], 'String');
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnvironmentResourceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnvironmentResourceProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EnvironmentResourceProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dataAccessFqdn'] && !(typeof data['dataAccessFqdn'] === 'string' || data['dataAccessFqdn'] instanceof String)) {
            throw new Error("Expected the field `dataAccessFqdn` to be a primitive type in the JSON string but got " + data['dataAccessFqdn']);
        }
        // ensure the json data is a string
        if (data['dataAccessId'] && !(typeof data['dataAccessId'] === 'string' || data['dataAccessId'] instanceof String)) {
            throw new Error("Expected the field `dataAccessId` to be a primitive type in the JSON string but got " + data['dataAccessId']);
        }
        // ensure the json data is a string
        if (data['dataRetentionTime'] && !(typeof data['dataRetentionTime'] === 'string' || data['dataRetentionTime'] instanceof String)) {
            throw new Error("Expected the field `dataRetentionTime` to be a primitive type in the JSON string but got " + data['dataRetentionTime']);
        }
        // ensure the json data is a string
        if (data['storageLimitExceededBehavior'] && !(typeof data['storageLimitExceededBehavior'] === 'string' || data['storageLimitExceededBehavior'] instanceof String)) {
            throw new Error("Expected the field `storageLimitExceededBehavior` to be a primitive type in the JSON string but got " + data['storageLimitExceededBehavior']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}

EnvironmentResourceProperties.RequiredProperties = ["dataRetentionTime"];

/**
 * The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
 * @member {String} dataAccessFqdn
 */
EnvironmentResourceProperties.prototype['dataAccessFqdn'] = undefined;

/**
 * An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
 * @member {String} dataAccessId
 */
EnvironmentResourceProperties.prototype['dataAccessId'] = undefined;

/**
 * ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
 * @member {String} dataRetentionTime
 */
EnvironmentResourceProperties.prototype['dataRetentionTime'] = undefined;

/**
 * The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If \"PauseIngress\" is specified, new events will not be read from the event source. If \"PurgeOldData\" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
 * @member {module:model/EnvironmentResourceProperties.StorageLimitExceededBehaviorEnum} storageLimitExceededBehavior
 */
EnvironmentResourceProperties.prototype['storageLimitExceededBehavior'] = undefined;

/**
 * The time the resource was created.
 * @member {Date} creationTime
 */
EnvironmentResourceProperties.prototype['creationTime'] = undefined;

/**
 * Provisioning state of the resource.
 * @member {module:model/EnvironmentResourceProperties.ProvisioningStateEnum} provisioningState
 */
EnvironmentResourceProperties.prototype['provisioningState'] = undefined;


// Implement EnvironmentCreationProperties interface:
/**
 * ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
 * @member {String} dataRetentionTime
 */
EnvironmentCreationProperties.prototype['dataRetentionTime'] = undefined;
/**
 * The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If \"PauseIngress\" is specified, new events will not be read from the event source. If \"PurgeOldData\" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
 * @member {module:model/EnvironmentCreationProperties.StorageLimitExceededBehaviorEnum} storageLimitExceededBehavior
 */
EnvironmentCreationProperties.prototype['storageLimitExceededBehavior'] = undefined;
// Implement ResourceProperties interface:
/**
 * The time the resource was created.
 * @member {Date} creationTime
 */
ResourceProperties.prototype['creationTime'] = undefined;
/**
 * Provisioning state of the resource.
 * @member {module:model/ResourceProperties.ProvisioningStateEnum} provisioningState
 */
ResourceProperties.prototype['provisioningState'] = undefined;



/**
 * Allowed values for the <code>storageLimitExceededBehavior</code> property.
 * @enum {String}
 * @readonly
 */
EnvironmentResourceProperties['StorageLimitExceededBehaviorEnum'] = {

    /**
     * value: "PurgeOldData"
     * @const
     */
    "PurgeOldData": "PurgeOldData",

    /**
     * value: "PauseIngress"
     * @const
     */
    "PauseIngress": "PauseIngress"
};


/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
EnvironmentResourceProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Accepted"
     * @const
     */
    "Accepted": "Accepted",

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting"
};



export default EnvironmentResourceProperties;

