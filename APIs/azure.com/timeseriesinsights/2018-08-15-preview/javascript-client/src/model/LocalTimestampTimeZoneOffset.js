/**
 * TimeSeriesInsightsClient
 * Time Series Insights client
 *
 * The version of the OpenAPI document: 2018-08-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LocalTimestampTimeZoneOffset model module.
 * @module model/LocalTimestampTimeZoneOffset
 * @version 2018-08-15-preview
 */
class LocalTimestampTimeZoneOffset {
    /**
     * Constructs a new <code>LocalTimestampTimeZoneOffset</code>.
     * An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
     * @alias module:model/LocalTimestampTimeZoneOffset
     */
    constructor() { 
        
        LocalTimestampTimeZoneOffset.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LocalTimestampTimeZoneOffset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LocalTimestampTimeZoneOffset} obj Optional instance to populate.
     * @return {module:model/LocalTimestampTimeZoneOffset} The populated <code>LocalTimestampTimeZoneOffset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LocalTimestampTimeZoneOffset();

            if (data.hasOwnProperty('propertyName')) {
                obj['propertyName'] = ApiClient.convertToType(data['propertyName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LocalTimestampTimeZoneOffset</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LocalTimestampTimeZoneOffset</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['propertyName'] && !(typeof data['propertyName'] === 'string' || data['propertyName'] instanceof String)) {
            throw new Error("Expected the field `propertyName` to be a primitive type in the JSON string but got " + data['propertyName']);
        }

        return true;
    }


}



/**
 * The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
 * @member {String} propertyName
 */
LocalTimestampTimeZoneOffset.prototype['propertyName'] = undefined;






export default LocalTimestampTimeZoneOffset;

