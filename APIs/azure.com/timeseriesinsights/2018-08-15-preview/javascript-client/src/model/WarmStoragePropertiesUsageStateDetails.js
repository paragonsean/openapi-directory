/**
 * TimeSeriesInsightsClient
 * Time Series Insights client
 *
 * The version of the OpenAPI document: 2018-08-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WarmStoragePropertiesUsageStateDetails model module.
 * @module model/WarmStoragePropertiesUsageStateDetails
 * @version 2018-08-15-preview
 */
class WarmStoragePropertiesUsageStateDetails {
    /**
     * Constructs a new <code>WarmStoragePropertiesUsageStateDetails</code>.
     * An object that contains the details about warm storage properties usage state.
     * @alias module:model/WarmStoragePropertiesUsageStateDetails
     */
    constructor() { 
        
        WarmStoragePropertiesUsageStateDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WarmStoragePropertiesUsageStateDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WarmStoragePropertiesUsageStateDetails} obj Optional instance to populate.
     * @return {module:model/WarmStoragePropertiesUsageStateDetails} The populated <code>WarmStoragePropertiesUsageStateDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WarmStoragePropertiesUsageStateDetails();

            if (data.hasOwnProperty('currentCount')) {
                obj['currentCount'] = ApiClient.convertToType(data['currentCount'], 'Number');
            }
            if (data.hasOwnProperty('maxCount')) {
                obj['maxCount'] = ApiClient.convertToType(data['maxCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WarmStoragePropertiesUsageStateDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WarmStoragePropertiesUsageStateDetails</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
 * @member {Number} currentCount
 */
WarmStoragePropertiesUsageStateDetails.prototype['currentCount'] = undefined;

/**
 * A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
 * @member {Number} maxCount
 */
WarmStoragePropertiesUsageStateDetails.prototype['maxCount'] = undefined;






export default WarmStoragePropertiesUsageStateDetails;

