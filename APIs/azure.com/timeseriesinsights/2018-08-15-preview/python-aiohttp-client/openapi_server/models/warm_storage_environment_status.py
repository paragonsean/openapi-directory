# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.warm_storage_properties_usage import WarmStoragePropertiesUsage
from openapi_server import util


class WarmStorageEnvironmentStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, properties_usage: WarmStoragePropertiesUsage=None):
        """WarmStorageEnvironmentStatus - a model defined in OpenAPI

        :param properties_usage: The properties_usage of this WarmStorageEnvironmentStatus.
        """
        self.openapi_types = {
            'properties_usage': WarmStoragePropertiesUsage
        }

        self.attribute_map = {
            'properties_usage': 'propertiesUsage'
        }

        self._properties_usage = properties_usage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WarmStorageEnvironmentStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WarmStorageEnvironmentStatus of this WarmStorageEnvironmentStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def properties_usage(self):
        """Gets the properties_usage of this WarmStorageEnvironmentStatus.


        :return: The properties_usage of this WarmStorageEnvironmentStatus.
        :rtype: WarmStoragePropertiesUsage
        """
        return self._properties_usage

    @properties_usage.setter
    def properties_usage(self, properties_usage):
        """Sets the properties_usage of this WarmStorageEnvironmentStatus.


        :param properties_usage: The properties_usage of this WarmStorageEnvironmentStatus.
        :type properties_usage: WarmStoragePropertiesUsage
        """

        self._properties_usage = properties_usage
