# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LongTermStorageConfigurationMutableProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, management_key: str=None):
        """LongTermStorageConfigurationMutableProperties - a model defined in OpenAPI

        :param management_key: The management_key of this LongTermStorageConfigurationMutableProperties.
        """
        self.openapi_types = {
            'management_key': str
        }

        self.attribute_map = {
            'management_key': 'managementKey'
        }

        self._management_key = management_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LongTermStorageConfigurationMutableProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LongTermStorageConfigurationMutableProperties of this LongTermStorageConfigurationMutableProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def management_key(self):
        """Gets the management_key of this LongTermStorageConfigurationMutableProperties.

        The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.

        :return: The management_key of this LongTermStorageConfigurationMutableProperties.
        :rtype: str
        """
        return self._management_key

    @management_key.setter
    def management_key(self, management_key):
        """Sets the management_key of this LongTermStorageConfigurationMutableProperties.

        The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.

        :param management_key: The management_key of this LongTermStorageConfigurationMutableProperties.
        :type management_key: str
        """
        if management_key is None:
            raise ValueError("Invalid value for `management_key`, must not be `None`")

        self._management_key = management_key
