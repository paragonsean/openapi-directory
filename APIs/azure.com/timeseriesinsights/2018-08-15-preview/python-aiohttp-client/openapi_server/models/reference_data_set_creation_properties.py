# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reference_data_set_key_property import ReferenceDataSetKeyProperty
from openapi_server import util


class ReferenceDataSetCreationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_string_comparison_behavior: str=None, key_properties: List[ReferenceDataSetKeyProperty]=None):
        """ReferenceDataSetCreationProperties - a model defined in OpenAPI

        :param data_string_comparison_behavior: The data_string_comparison_behavior of this ReferenceDataSetCreationProperties.
        :param key_properties: The key_properties of this ReferenceDataSetCreationProperties.
        """
        self.openapi_types = {
            'data_string_comparison_behavior': str,
            'key_properties': List[ReferenceDataSetKeyProperty]
        }

        self.attribute_map = {
            'data_string_comparison_behavior': 'dataStringComparisonBehavior',
            'key_properties': 'keyProperties'
        }

        self._data_string_comparison_behavior = data_string_comparison_behavior
        self._key_properties = key_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReferenceDataSetCreationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReferenceDataSetCreationProperties of this ReferenceDataSetCreationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_string_comparison_behavior(self):
        """Gets the data_string_comparison_behavior of this ReferenceDataSetCreationProperties.

        The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.

        :return: The data_string_comparison_behavior of this ReferenceDataSetCreationProperties.
        :rtype: str
        """
        return self._data_string_comparison_behavior

    @data_string_comparison_behavior.setter
    def data_string_comparison_behavior(self, data_string_comparison_behavior):
        """Sets the data_string_comparison_behavior of this ReferenceDataSetCreationProperties.

        The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.

        :param data_string_comparison_behavior: The data_string_comparison_behavior of this ReferenceDataSetCreationProperties.
        :type data_string_comparison_behavior: str
        """
        allowed_values = ["Ordinal", "OrdinalIgnoreCase"]  # noqa: E501
        if data_string_comparison_behavior not in allowed_values:
            raise ValueError(
                "Invalid value for `data_string_comparison_behavior` ({0}), must be one of {1}"
                .format(data_string_comparison_behavior, allowed_values)
            )

        self._data_string_comparison_behavior = data_string_comparison_behavior

    @property
    def key_properties(self):
        """Gets the key_properties of this ReferenceDataSetCreationProperties.

        The list of key properties for the reference data set.

        :return: The key_properties of this ReferenceDataSetCreationProperties.
        :rtype: List[ReferenceDataSetKeyProperty]
        """
        return self._key_properties

    @key_properties.setter
    def key_properties(self, key_properties):
        """Sets the key_properties of this ReferenceDataSetCreationProperties.

        The list of key properties for the reference data set.

        :param key_properties: The key_properties of this ReferenceDataSetCreationProperties.
        :type key_properties: List[ReferenceDataSetKeyProperty]
        """
        if key_properties is None:
            raise ValueError("Invalid value for `key_properties`, must not be `None`")

        self._key_properties = key_properties
