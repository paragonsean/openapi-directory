/*
 * TimeSeriesInsightsClient
 * Time Series Insights client
 *
 * The version of the OpenAPI document: 2018-08-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.EventSourceCreateOrUpdateParameters;
import org.openapitools.client.model.EventSourceListResponse;
import org.openapitools.client.model.EventSourceResource;
import org.openapitools.client.model.EventSourceUpdateParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventSourcesApi
 */
@Disabled
public class EventSourcesApiTest {

    private final EventSourcesApi api = new EventSourcesApi();

    /**
     * Create or update an event source under the specified environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventSourcesCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String eventSourceName = null;
        String apiVersion = null;
        EventSourceCreateOrUpdateParameters parameters = null;
        EventSourceResource response = api.eventSourcesCreateOrUpdate(subscriptionId, resourceGroupName, environmentName, eventSourceName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the event source with the specified name in the specified subscription, resource group, and environment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventSourcesDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String eventSourceName = null;
        String apiVersion = null;
        api.eventSourcesDelete(subscriptionId, resourceGroupName, environmentName, eventSourceName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the event source with the specified name in the specified environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventSourcesGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String eventSourceName = null;
        String apiVersion = null;
        EventSourceResource response = api.eventSourcesGet(subscriptionId, resourceGroupName, environmentName, eventSourceName, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all the available event sources associated with the subscription and within the specified resource group and environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventSourcesListByEnvironmentTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String apiVersion = null;
        EventSourceListResponse response = api.eventSourcesListByEnvironment(subscriptionId, resourceGroupName, environmentName, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates the event source with the specified name in the specified subscription, resource group, and environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventSourcesUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String environmentName = null;
        String eventSourceName = null;
        String apiVersion = null;
        EventSourceUpdateParameters eventSourceUpdateParameters = null;
        EventSourceResource response = api.eventSourcesUpdate(subscriptionId, resourceGroupName, environmentName, eventSourceName, apiVersion, eventSourceUpdateParameters);
        // TODO: test validations
    }

}
