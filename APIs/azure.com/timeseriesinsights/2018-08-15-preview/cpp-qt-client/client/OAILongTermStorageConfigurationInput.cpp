/**
 * TimeSeriesInsightsClient
 * Time Series Insights client
 *
 * The version of the OpenAPI document: 2018-08-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILongTermStorageConfigurationInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILongTermStorageConfigurationInput::OAILongTermStorageConfigurationInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILongTermStorageConfigurationInput::OAILongTermStorageConfigurationInput() {
    this->initializeModel();
}

OAILongTermStorageConfigurationInput::~OAILongTermStorageConfigurationInput() {}

void OAILongTermStorageConfigurationInput::initializeModel() {

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_management_key_isSet = false;
    m_management_key_isValid = false;
}

void OAILongTermStorageConfigurationInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILongTermStorageConfigurationInput::fromJsonObject(QJsonObject json) {

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("accountName")]);
    m_account_name_isSet = !json[QString("accountName")].isNull() && m_account_name_isValid;

    m_management_key_isValid = ::OpenAPI::fromJsonValue(m_management_key, json[QString("managementKey")]);
    m_management_key_isSet = !json[QString("managementKey")].isNull() && m_management_key_isValid;
}

QString OAILongTermStorageConfigurationInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILongTermStorageConfigurationInput::asJsonObject() const {
    QJsonObject obj;
    if (m_account_name_isSet) {
        obj.insert(QString("accountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_management_key_isSet) {
        obj.insert(QString("managementKey"), ::OpenAPI::toJsonValue(m_management_key));
    }
    return obj;
}

QString OAILongTermStorageConfigurationInput::getAccountName() const {
    return m_account_name;
}
void OAILongTermStorageConfigurationInput::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAILongTermStorageConfigurationInput::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAILongTermStorageConfigurationInput::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAILongTermStorageConfigurationInput::getManagementKey() const {
    return m_management_key;
}
void OAILongTermStorageConfigurationInput::setManagementKey(const QString &management_key) {
    m_management_key = management_key;
    m_management_key_isSet = true;
}

bool OAILongTermStorageConfigurationInput::is_management_key_Set() const{
    return m_management_key_isSet;
}

bool OAILongTermStorageConfigurationInput::is_management_key_Valid() const{
    return m_management_key_isValid;
}

bool OAILongTermStorageConfigurationInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_management_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILongTermStorageConfigurationInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_name_isValid && m_management_key_isValid && true;
}

} // namespace OpenAPI
