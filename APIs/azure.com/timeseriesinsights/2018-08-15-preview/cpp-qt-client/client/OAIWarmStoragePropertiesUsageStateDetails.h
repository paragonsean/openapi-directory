/**
 * TimeSeriesInsightsClient
 * Time Series Insights client
 *
 * The version of the OpenAPI document: 2018-08-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWarmStoragePropertiesUsageStateDetails.h
 *
 * An object that contains the details about warm storage properties usage state.
 */

#ifndef OAIWarmStoragePropertiesUsageStateDetails_H
#define OAIWarmStoragePropertiesUsageStateDetails_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWarmStoragePropertiesUsageStateDetails : public OAIObject {
public:
    OAIWarmStoragePropertiesUsageStateDetails();
    OAIWarmStoragePropertiesUsageStateDetails(QString json);
    ~OAIWarmStoragePropertiesUsageStateDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCurrentCount() const;
    void setCurrentCount(const qint32 &current_count);
    bool is_current_count_Set() const;
    bool is_current_count_Valid() const;

    qint32 getMaxCount() const;
    void setMaxCount(const qint32 &max_count);
    bool is_max_count_Set() const;
    bool is_max_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_current_count;
    bool m_current_count_isSet;
    bool m_current_count_isValid;

    qint32 m_max_count;
    bool m_max_count_isSet;
    bool m_max_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWarmStoragePropertiesUsageStateDetails)

#endif // OAIWarmStoragePropertiesUsageStateDetails_H
