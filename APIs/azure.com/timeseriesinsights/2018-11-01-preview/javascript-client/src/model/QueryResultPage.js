/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PagedResponse from './PagedResponse';
import PropertyValues from './PropertyValues';

/**
 * The QueryResultPage model module.
 * @module model/QueryResultPage
 * @version 2018-11-01-preview
 */
class QueryResultPage {
    /**
     * Constructs a new <code>QueryResultPage</code>.
     * A single page of query results. If query has not finished yet, a page will have continuation token set. In this case, to get the next page of results, send the same request again with continuation token parameter. If query has completed, the continuation token is null. It is also possible to get an empty page with only continuation token set when no query results have been computed yet. If paging has completed (continuation token is null), then timestamps and properties may be empty if there is no data to return.
     * @alias module:model/QueryResultPage
     * @implements module:model/PagedResponse
     */
    constructor() { 
        PagedResponse.initialize(this);
        QueryResultPage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryResultPage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryResultPage} obj Optional instance to populate.
     * @return {module:model/QueryResultPage} The populated <code>QueryResultPage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryResultPage();
            PagedResponse.constructFromObject(data, obj);

            if (data.hasOwnProperty('continuationToken')) {
                obj['continuationToken'] = ApiClient.convertToType(data['continuationToken'], 'String');
            }
            if (data.hasOwnProperty('progress')) {
                obj['progress'] = ApiClient.convertToType(data['progress'], 'Number');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], [PropertyValues]);
            }
            if (data.hasOwnProperty('timestamps')) {
                obj['timestamps'] = ApiClient.convertToType(data['timestamps'], ['Date']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryResultPage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryResultPage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['continuationToken'] && !(typeof data['continuationToken'] === 'string' || data['continuationToken'] instanceof String)) {
            throw new Error("Expected the field `continuationToken` to be a primitive type in the JSON string but got " + data['continuationToken']);
        }
        if (data['properties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['properties'])) {
                throw new Error("Expected the field `properties` to be an array in the JSON data but got " + data['properties']);
            }
            // validate the optional field `properties` (array)
            for (const item of data['properties']) {
                PropertyValues.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['timestamps'])) {
            throw new Error("Expected the field `timestamps` to be an array in the JSON data but got " + data['timestamps']);
        }

        return true;
    }


}



/**
 * If returned, this means that current results represent a partial result. Continuation token allows to get the next page of results. To get the next page of query results, send the same request with continuation token parameter in \"x-ms-continuation\" HTTP header.
 * @member {String} continuationToken
 */
QueryResultPage.prototype['continuationToken'] = undefined;

/**
 * Approximate progress of the query in percentage. It can be between 0 and 100. When the continuation token in the response is null, the progress is expected to be 100.
 * @member {Number} progress
 */
QueryResultPage.prototype['progress'] = undefined;

/**
 * Collection of time series properties and values for each of the timestamps.  Can be null if server was unable to fill the page in this request, or can be empty if there are no more objects when continuation token is null.
 * @member {Array.<module:model/PropertyValues>} properties
 */
QueryResultPage.prototype['properties'] = undefined;

/**
 * The timestamps of the values of the time series. If an aggregation over intervals is used, timestamps represent the start of corresponding intervals. If events are retrieved, timestamps are values of timestamp $ts property of events. Can be null if server was unable to fill the page in this request, or can be empty if there are no more objects when continuation token is null.
 * @member {Array.<Date>} timestamps
 */
QueryResultPage.prototype['timestamps'] = undefined;


// Implement PagedResponse interface:
/**
 * If returned, this means that current results represent a partial result. Continuation token allows to get the next page of results. To get the next page of query results, send the same request with continuation token parameter in \"x-ms-continuation\" HTTP header.
 * @member {String} continuationToken
 */
PagedResponse.prototype['continuationToken'] = undefined;




export default QueryResultPage;

