/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateTimeRange from './DateTimeRange';

/**
 * The GetEventSchemaRequest model module.
 * @module model/GetEventSchemaRequest
 * @version 2018-11-01-preview
 */
class GetEventSchemaRequest {
    /**
     * Constructs a new <code>GetEventSchemaRequest</code>.
     * Request to get the event schema of all events within a given search span.
     * @alias module:model/GetEventSchemaRequest
     * @param searchSpan {module:model/DateTimeRange} 
     */
    constructor(searchSpan) { 
        
        GetEventSchemaRequest.initialize(this, searchSpan);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, searchSpan) { 
        obj['searchSpan'] = searchSpan;
    }

    /**
     * Constructs a <code>GetEventSchemaRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetEventSchemaRequest} obj Optional instance to populate.
     * @return {module:model/GetEventSchemaRequest} The populated <code>GetEventSchemaRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetEventSchemaRequest();

            if (data.hasOwnProperty('searchSpan')) {
                obj['searchSpan'] = DateTimeRange.constructFromObject(data['searchSpan']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetEventSchemaRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetEventSchemaRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetEventSchemaRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `searchSpan`
        if (data['searchSpan']) { // data not null
          DateTimeRange.validateJSON(data['searchSpan']);
        }

        return true;
    }


}

GetEventSchemaRequest.RequiredProperties = ["searchSpan"];

/**
 * @member {module:model/DateTimeRange} searchSpan
 */
GetEventSchemaRequest.prototype['searchSpan'] = undefined;






export default GetEventSchemaRequest;

