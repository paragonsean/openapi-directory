/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceHitHighlights from './InstanceHitHighlights';

/**
 * The InstanceHit model module.
 * @module model/InstanceHit
 * @version 2018-11-01-preview
 */
class InstanceHit {
    /**
     * Constructs a new <code>InstanceHit</code>.
     * Time series instance that is returned by instances search call. Returned instance matched the search request and contains highlighted text to be displayed to the user if it is set to &#39;true&#39;.
     * @alias module:model/InstanceHit
     */
    constructor() { 
        
        InstanceHit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstanceHit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceHit} obj Optional instance to populate.
     * @return {module:model/InstanceHit} The populated <code>InstanceHit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceHit();

            if (data.hasOwnProperty('hierarchyIds')) {
                obj['hierarchyIds'] = ApiClient.convertToType(data['hierarchyIds'], ['String']);
            }
            if (data.hasOwnProperty('highlights')) {
                obj['highlights'] = InstanceHitHighlights.constructFromObject(data['highlights']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('timeSeriesId')) {
                obj['timeSeriesId'] = ApiClient.convertToType(data['timeSeriesId'], [Object]);
            }
            if (data.hasOwnProperty('typeId')) {
                obj['typeId'] = ApiClient.convertToType(data['typeId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceHit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceHit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['hierarchyIds'])) {
            throw new Error("Expected the field `hierarchyIds` to be an array in the JSON data but got " + data['hierarchyIds']);
        }
        // validate the optional field `highlights`
        if (data['highlights']) { // data not null
          InstanceHitHighlights.validateJSON(data['highlights']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['timeSeriesId'])) {
            throw new Error("Expected the field `timeSeriesId` to be an array in the JSON data but got " + data['timeSeriesId']);
        }
        // ensure the json data is a string
        if (data['typeId'] && !(typeof data['typeId'] === 'string' || data['typeId'] instanceof String)) {
            throw new Error("Expected the field `typeId` to be a primitive type in the JSON string but got " + data['typeId']);
        }

        return true;
    }


}



/**
 * List of time series hierarchy IDs that time series instance which matched the search request belongs to. Cannot be used to lookup hierarchies. May be null.
 * @member {Array.<String>} hierarchyIds
 */
InstanceHit.prototype['hierarchyIds'] = undefined;

/**
 * @member {module:model/InstanceHitHighlights} highlights
 */
InstanceHit.prototype['highlights'] = undefined;

/**
 * Name of the time series instance that matched the search request. May be null.
 * @member {String} name
 */
InstanceHit.prototype['name'] = undefined;

/**
 * A single Time Series ID value that is an array of primitive values that uniquely identifies a time series instance (e.g. a single device). Note that a single Time Series ID can be composite if multiple properties are specified as Time Series ID at environment creation time. The position and type of values must match Time Series ID properties specified on the environment and returned by Get Model Setting API. Cannot be empty.
 * @member {Array.<Object>} timeSeriesId
 */
InstanceHit.prototype['timeSeriesId'] = undefined;

/**
 * Represents the type that time series instance which matched the search request belongs to. Never null.
 * @member {String} typeId
 */
InstanceHit.prototype['typeId'] = undefined;






export default InstanceHit;

