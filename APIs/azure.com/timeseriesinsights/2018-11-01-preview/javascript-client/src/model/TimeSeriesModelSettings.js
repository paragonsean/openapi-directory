/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TimeSeriesIdProperty from './TimeSeriesIdProperty';

/**
 * The TimeSeriesModelSettings model module.
 * @module model/TimeSeriesModelSettings
 * @version 2018-11-01-preview
 */
class TimeSeriesModelSettings {
    /**
     * Constructs a new <code>TimeSeriesModelSettings</code>.
     * Time series model settings including model name, Time Series ID properties and default type ID.
     * @alias module:model/TimeSeriesModelSettings
     */
    constructor() { 
        
        TimeSeriesModelSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TimeSeriesModelSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeSeriesModelSettings} obj Optional instance to populate.
     * @return {module:model/TimeSeriesModelSettings} The populated <code>TimeSeriesModelSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeSeriesModelSettings();

            if (data.hasOwnProperty('defaultTypeId')) {
                obj['defaultTypeId'] = ApiClient.convertToType(data['defaultTypeId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('timeSeriesIdProperties')) {
                obj['timeSeriesIdProperties'] = ApiClient.convertToType(data['timeSeriesIdProperties'], [TimeSeriesIdProperty]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeSeriesModelSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeSeriesModelSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['defaultTypeId'] && !(typeof data['defaultTypeId'] === 'string' || data['defaultTypeId'] instanceof String)) {
            throw new Error("Expected the field `defaultTypeId` to be a primitive type in the JSON string but got " + data['defaultTypeId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['timeSeriesIdProperties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['timeSeriesIdProperties'])) {
                throw new Error("Expected the field `timeSeriesIdProperties` to be an array in the JSON data but got " + data['timeSeriesIdProperties']);
            }
            // validate the optional field `timeSeriesIdProperties` (array)
            for (const item of data['timeSeriesIdProperties']) {
                TimeSeriesIdProperty.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Default type ID of the model that new time series instances will automatically belong to.
 * @member {String} defaultTypeId
 */
TimeSeriesModelSettings.prototype['defaultTypeId'] = undefined;

/**
 * Time series model display name which is shown in the UX. Examples: \"Temperature Sensors\", \"MyDevices\".
 * @member {String} name
 */
TimeSeriesModelSettings.prototype['name'] = undefined;

/**
 * Time series ID properties defined during environment creation.
 * @member {Array.<module:model/TimeSeriesIdProperty>} timeSeriesIdProperties
 */
TimeSeriesModelSettings.prototype['timeSeriesIdProperties'] = undefined;






export default TimeSeriesModelSettings;

