/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InstanceHitHighlights model module.
 * @module model/InstanceHitHighlights
 * @version 2018-11-01-preview
 */
class InstanceHitHighlights {
    /**
     * Constructs a new <code>InstanceHitHighlights</code>.
     * Highlighted text of time series instance to be displayed to the user. Highlighting inserts &lt;hit&gt; and &lt;/hit&gt; tags in the portions of text that matched the search string. Do not use any of the highlighted properties to do further API calls.
     * @alias module:model/InstanceHitHighlights
     */
    constructor() { 
        
        InstanceHitHighlights.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstanceHitHighlights</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceHitHighlights} obj Optional instance to populate.
     * @return {module:model/InstanceHitHighlights} The populated <code>InstanceHitHighlights</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceHitHighlights();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('hierarchyIds')) {
                obj['hierarchyIds'] = ApiClient.convertToType(data['hierarchyIds'], ['String']);
            }
            if (data.hasOwnProperty('hierarchyNames')) {
                obj['hierarchyNames'] = ApiClient.convertToType(data['hierarchyNames'], ['String']);
            }
            if (data.hasOwnProperty('instanceFieldNames')) {
                obj['instanceFieldNames'] = ApiClient.convertToType(data['instanceFieldNames'], ['String']);
            }
            if (data.hasOwnProperty('instanceFieldValues')) {
                obj['instanceFieldValues'] = ApiClient.convertToType(data['instanceFieldValues'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('timeSeriesId')) {
                obj['timeSeriesId'] = ApiClient.convertToType(data['timeSeriesId'], ['String']);
            }
            if (data.hasOwnProperty('typeName')) {
                obj['typeName'] = ApiClient.convertToType(data['typeName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceHitHighlights</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceHitHighlights</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['hierarchyIds'])) {
            throw new Error("Expected the field `hierarchyIds` to be an array in the JSON data but got " + data['hierarchyIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['hierarchyNames'])) {
            throw new Error("Expected the field `hierarchyNames` to be an array in the JSON data but got " + data['hierarchyNames']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['instanceFieldNames'])) {
            throw new Error("Expected the field `instanceFieldNames` to be an array in the JSON data but got " + data['instanceFieldNames']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['instanceFieldValues'])) {
            throw new Error("Expected the field `instanceFieldValues` to be an array in the JSON data but got " + data['instanceFieldValues']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['timeSeriesId'])) {
            throw new Error("Expected the field `timeSeriesId` to be an array in the JSON data but got " + data['timeSeriesId']);
        }
        // ensure the json data is a string
        if (data['typeName'] && !(typeof data['typeName'] === 'string' || data['typeName'] instanceof String)) {
            throw new Error("Expected the field `typeName` to be a primitive type in the JSON string but got " + data['typeName']);
        }

        return true;
    }


}



/**
 * Highlighted description of time series instance. May be null.
 * @member {String} description
 */
InstanceHitHighlights.prototype['description'] = undefined;

/**
 * List of highlighted time series hierarchy IDs that time series instance belongs to. Cannot be used to lookup hierarchies. May be null.
 * @member {Array.<String>} hierarchyIds
 */
InstanceHitHighlights.prototype['hierarchyIds'] = undefined;

/**
 * List of highlighted time series hierarchy names that time series instance belongs to. Cannot be used to lookup hierarchies. May be null.
 * @member {Array.<String>} hierarchyNames
 */
InstanceHitHighlights.prototype['hierarchyNames'] = undefined;

/**
 * List of highlighted time series instance field names. May be null.
 * @member {Array.<String>} instanceFieldNames
 */
InstanceHitHighlights.prototype['instanceFieldNames'] = undefined;

/**
 * List of highlighted time series instance field values. May be null.
 * @member {Array.<String>} instanceFieldValues
 */
InstanceHitHighlights.prototype['instanceFieldValues'] = undefined;

/**
 * Highlighted name of time series instance. May be null.
 * @member {String} name
 */
InstanceHitHighlights.prototype['name'] = undefined;

/**
 * List of highlighted string values of Time Series ID for displaying. Cannot be used to lookup instance.
 * @member {Array.<String>} timeSeriesId
 */
InstanceHitHighlights.prototype['timeSeriesId'] = undefined;

/**
 * Highlighted time series type name that this instance belongs to.
 * @member {String} typeName
 */
InstanceHitHighlights.prototype['typeName'] = undefined;






export default InstanceHitHighlights;

