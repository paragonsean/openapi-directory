/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InstancesSuggestRequest model module.
 * @module model/InstancesSuggestRequest
 * @version 2018-11-01-preview
 */
class InstancesSuggestRequest {
    /**
     * Constructs a new <code>InstancesSuggestRequest</code>.
     * Request to get search string suggestions for time series instances search based on prefix text.
     * @alias module:model/InstancesSuggestRequest
     * @param searchString {String} Search string for which suggestions are required. Empty is allowed, but not null.
     */
    constructor(searchString) { 
        
        InstancesSuggestRequest.initialize(this, searchString);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, searchString) { 
        obj['searchString'] = searchString;
    }

    /**
     * Constructs a <code>InstancesSuggestRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstancesSuggestRequest} obj Optional instance to populate.
     * @return {module:model/InstancesSuggestRequest} The populated <code>InstancesSuggestRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstancesSuggestRequest();

            if (data.hasOwnProperty('searchString')) {
                obj['searchString'] = ApiClient.convertToType(data['searchString'], 'String');
            }
            if (data.hasOwnProperty('take')) {
                obj['take'] = ApiClient.convertToType(data['take'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstancesSuggestRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstancesSuggestRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InstancesSuggestRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['searchString'] && !(typeof data['searchString'] === 'string' || data['searchString'] instanceof String)) {
            throw new Error("Expected the field `searchString` to be a primitive type in the JSON string but got " + data['searchString']);
        }

        return true;
    }


}

InstancesSuggestRequest.RequiredProperties = ["searchString"];

/**
 * Search string for which suggestions are required. Empty is allowed, but not null.
 * @member {String} searchString
 */
InstancesSuggestRequest.prototype['searchString'] = undefined;

/**
 * Maximum number of suggestions expected in the result. Defaults to 10 when not set.
 * @member {Number} take
 */
InstancesSuggestRequest.prototype['take'] = undefined;






export default InstancesSuggestRequest;

