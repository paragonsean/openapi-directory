/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SearchInstancesHierarchiesParameters from './SearchInstancesHierarchiesParameters';
import SearchInstancesParameters from './SearchInstancesParameters';

/**
 * The SearchInstancesRequest model module.
 * @module model/SearchInstancesRequest
 * @version 2018-11-01-preview
 */
class SearchInstancesRequest {
    /**
     * Constructs a new <code>SearchInstancesRequest</code>.
     * Request to execute a search query against time series instances and return matching time series instances.
     * @alias module:model/SearchInstancesRequest
     * @param searchString {String} Query search string that will be matched to the attributes of time series instances. Example: \"floor 100\". Case-insensitive, must be present, but can be empty string.
     */
    constructor(searchString) { 
        
        SearchInstancesRequest.initialize(this, searchString);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, searchString) { 
        obj['searchString'] = searchString;
    }

    /**
     * Constructs a <code>SearchInstancesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchInstancesRequest} obj Optional instance to populate.
     * @return {module:model/SearchInstancesRequest} The populated <code>SearchInstancesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchInstancesRequest();

            if (data.hasOwnProperty('hierarchies')) {
                obj['hierarchies'] = SearchInstancesHierarchiesParameters.constructFromObject(data['hierarchies']);
            }
            if (data.hasOwnProperty('instances')) {
                obj['instances'] = SearchInstancesParameters.constructFromObject(data['instances']);
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], ['String']);
            }
            if (data.hasOwnProperty('searchString')) {
                obj['searchString'] = ApiClient.convertToType(data['searchString'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchInstancesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchInstancesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchInstancesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `hierarchies`
        if (data['hierarchies']) { // data not null
          SearchInstancesHierarchiesParameters.validateJSON(data['hierarchies']);
        }
        // validate the optional field `instances`
        if (data['instances']) { // data not null
          SearchInstancesParameters.validateJSON(data['instances']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['path'])) {
            throw new Error("Expected the field `path` to be an array in the JSON data but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['searchString'] && !(typeof data['searchString'] === 'string' || data['searchString'] instanceof String)) {
            throw new Error("Expected the field `searchString` to be a primitive type in the JSON string but got " + data['searchString']);
        }

        return true;
    }


}

SearchInstancesRequest.RequiredProperties = ["searchString"];

/**
 * @member {module:model/SearchInstancesHierarchiesParameters} hierarchies
 */
SearchInstancesRequest.prototype['hierarchies'] = undefined;

/**
 * @member {module:model/SearchInstancesParameters} instances
 */
SearchInstancesRequest.prototype['instances'] = undefined;

/**
 * Filter on hierarchy path of time series instances. Path is represented as array of string path segments. First element should be hierarchy name. Example: [\"Location\", \"California\"]. Optional, case sensitive, never empty and can be null.
 * @member {Array.<String>} path
 */
SearchInstancesRequest.prototype['path'] = undefined;

/**
 * Query search string that will be matched to the attributes of time series instances. Example: \"floor 100\". Case-insensitive, must be present, but can be empty string.
 * @member {String} searchString
 */
SearchInstancesRequest.prototype['searchString'] = undefined;






export default SearchInstancesRequest;

