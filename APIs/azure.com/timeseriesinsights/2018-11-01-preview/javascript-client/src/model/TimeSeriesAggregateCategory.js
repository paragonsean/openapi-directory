/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TimeSeriesAggregateCategory model module.
 * @module model/TimeSeriesAggregateCategory
 * @version 2018-11-01-preview
 */
class TimeSeriesAggregateCategory {
    /**
     * Constructs a new <code>TimeSeriesAggregateCategory</code>.
     * Category used in categorical variables. A category is defined by &#39;label&#39; and the &#39;values&#39; that are assigned this label.
     * @alias module:model/TimeSeriesAggregateCategory
     * @param label {String} The name of the category which will be used in constructing the output variable names.
     * @param values {Array.<Object>} The list of values that a category maps to. Can be either a unique list of string or list of long.
     */
    constructor(label, values) { 
        
        TimeSeriesAggregateCategory.initialize(this, label, values);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, label, values) { 
        obj['label'] = label;
        obj['values'] = values;
    }

    /**
     * Constructs a <code>TimeSeriesAggregateCategory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeSeriesAggregateCategory} obj Optional instance to populate.
     * @return {module:model/TimeSeriesAggregateCategory} The populated <code>TimeSeriesAggregateCategory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeSeriesAggregateCategory();

            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [Object]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeSeriesAggregateCategory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeSeriesAggregateCategory</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TimeSeriesAggregateCategory.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['values'])) {
            throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
        }

        return true;
    }


}

TimeSeriesAggregateCategory.RequiredProperties = ["label", "values"];

/**
 * The name of the category which will be used in constructing the output variable names.
 * @member {String} label
 */
TimeSeriesAggregateCategory.prototype['label'] = undefined;

/**
 * The list of values that a category maps to. Can be either a unique list of string or list of long.
 * @member {Array.<Object>} values
 */
TimeSeriesAggregateCategory.prototype['values'] = undefined;






export default TimeSeriesAggregateCategory;

