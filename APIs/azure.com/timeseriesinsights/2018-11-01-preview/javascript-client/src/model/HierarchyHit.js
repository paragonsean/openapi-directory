/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SearchHierarchyNodesResponse from './SearchHierarchyNodesResponse';

/**
 * The HierarchyHit model module.
 * @module model/HierarchyHit
 * @version 2018-11-01-preview
 */
class HierarchyHit {
    /**
     * Constructs a new <code>HierarchyHit</code>.
     * The hierarchy node which contains the instances matching the query based on the input. May be empty or null.
     * @alias module:model/HierarchyHit
     */
    constructor() { 
        
        HierarchyHit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HierarchyHit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HierarchyHit} obj Optional instance to populate.
     * @return {module:model/HierarchyHit} The populated <code>HierarchyHit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HierarchyHit();

            if (data.hasOwnProperty('cumulativeInstanceCount')) {
                obj['cumulativeInstanceCount'] = ApiClient.convertToType(data['cumulativeInstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('hierarchyNodes')) {
                obj['hierarchyNodes'] = SearchHierarchyNodesResponse.constructFromObject(data['hierarchyNodes']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HierarchyHit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HierarchyHit</code>.
     */
    static validateJSON(data) {
        // validate the optional field `hierarchyNodes`
        if (data['hierarchyNodes']) { // data not null
          SearchHierarchyNodesResponse.validateJSON(data['hierarchyNodes']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Total number of instances that belong to this node and it's subtrees matching the query.
 * @member {Number} cumulativeInstanceCount
 */
HierarchyHit.prototype['cumulativeInstanceCount'] = undefined;

/**
 * @member {module:model/SearchHierarchyNodesResponse} hierarchyNodes
 */
HierarchyHit.prototype['hierarchyNodes'] = undefined;

/**
 * Name of the hierarchy node. May be empty, cannot be null.
 * @member {String} name
 */
HierarchyHit.prototype['name'] = undefined;






export default HierarchyHit;

