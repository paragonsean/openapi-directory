/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchInstancesHierarchiesParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchInstancesHierarchiesParameters::OAISearchInstancesHierarchiesParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchInstancesHierarchiesParameters::OAISearchInstancesHierarchiesParameters() {
    this->initializeModel();
}

OAISearchInstancesHierarchiesParameters::~OAISearchInstancesHierarchiesParameters() {}

void OAISearchInstancesHierarchiesParameters::initializeModel() {

    m_expand_isSet = false;
    m_expand_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_sort_isSet = false;
    m_sort_isValid = false;
}

void OAISearchInstancesHierarchiesParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchInstancesHierarchiesParameters::fromJsonObject(QJsonObject json) {

    m_expand_isValid = ::OpenAPI::fromJsonValue(m_expand, json[QString("expand")]);
    m_expand_isSet = !json[QString("expand")].isNull() && m_expand_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("pageSize")]);
    m_page_size_isSet = !json[QString("pageSize")].isNull() && m_page_size_isValid;

    m_sort_isValid = ::OpenAPI::fromJsonValue(m_sort, json[QString("sort")]);
    m_sort_isSet = !json[QString("sort")].isNull() && m_sort_isValid;
}

QString OAISearchInstancesHierarchiesParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchInstancesHierarchiesParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_expand.isSet()) {
        obj.insert(QString("expand"), ::OpenAPI::toJsonValue(m_expand));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("pageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_sort.isSet()) {
        obj.insert(QString("sort"), ::OpenAPI::toJsonValue(m_sort));
    }
    return obj;
}

OAIHierarchiesExpandParameter OAISearchInstancesHierarchiesParameters::getExpand() const {
    return m_expand;
}
void OAISearchInstancesHierarchiesParameters::setExpand(const OAIHierarchiesExpandParameter &expand) {
    m_expand = expand;
    m_expand_isSet = true;
}

bool OAISearchInstancesHierarchiesParameters::is_expand_Set() const{
    return m_expand_isSet;
}

bool OAISearchInstancesHierarchiesParameters::is_expand_Valid() const{
    return m_expand_isValid;
}

qint32 OAISearchInstancesHierarchiesParameters::getPageSize() const {
    return m_page_size;
}
void OAISearchInstancesHierarchiesParameters::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAISearchInstancesHierarchiesParameters::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAISearchInstancesHierarchiesParameters::is_page_size_Valid() const{
    return m_page_size_isValid;
}

OAIHierarchiesSortParameter OAISearchInstancesHierarchiesParameters::getSort() const {
    return m_sort;
}
void OAISearchInstancesHierarchiesParameters::setSort(const OAIHierarchiesSortParameter &sort) {
    m_sort = sort;
    m_sort_isSet = true;
}

bool OAISearchInstancesHierarchiesParameters::is_sort_Set() const{
    return m_sort_isSet;
}

bool OAISearchInstancesHierarchiesParameters::is_sort_Valid() const{
    return m_sort_isValid;
}

bool OAISearchInstancesHierarchiesParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expand.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchInstancesHierarchiesParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
