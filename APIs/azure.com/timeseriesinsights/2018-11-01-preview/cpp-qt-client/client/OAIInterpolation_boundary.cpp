/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInterpolation_boundary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInterpolation_boundary::OAIInterpolation_boundary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInterpolation_boundary::OAIInterpolation_boundary() {
    this->initializeModel();
}

OAIInterpolation_boundary::~OAIInterpolation_boundary() {}

void OAIInterpolation_boundary::initializeModel() {

    m_span_isSet = false;
    m_span_isValid = false;
}

void OAIInterpolation_boundary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInterpolation_boundary::fromJsonObject(QJsonObject json) {

    m_span_isValid = ::OpenAPI::fromJsonValue(m_span, json[QString("span")]);
    m_span_isSet = !json[QString("span")].isNull() && m_span_isValid;
}

QString OAIInterpolation_boundary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInterpolation_boundary::asJsonObject() const {
    QJsonObject obj;
    if (m_span_isSet) {
        obj.insert(QString("span"), ::OpenAPI::toJsonValue(m_span));
    }
    return obj;
}

QString OAIInterpolation_boundary::getSpan() const {
    return m_span;
}
void OAIInterpolation_boundary::setSpan(const QString &span) {
    m_span = span;
    m_span_isSet = true;
}

bool OAIInterpolation_boundary::is_span_Set() const{
    return m_span_isSet;
}

bool OAIInterpolation_boundary::is_span_Valid() const{
    return m_span_isValid;
}

bool OAIInterpolation_boundary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_span_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInterpolation_boundary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
