/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetHierarchiesPage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetHierarchiesPage::OAIGetHierarchiesPage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetHierarchiesPage::OAIGetHierarchiesPage() {
    this->initializeModel();
}

OAIGetHierarchiesPage::~OAIGetHierarchiesPage() {}

void OAIGetHierarchiesPage::initializeModel() {

    m_continuation_token_isSet = false;
    m_continuation_token_isValid = false;

    m_hierarchies_isSet = false;
    m_hierarchies_isValid = false;
}

void OAIGetHierarchiesPage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetHierarchiesPage::fromJsonObject(QJsonObject json) {

    m_continuation_token_isValid = ::OpenAPI::fromJsonValue(m_continuation_token, json[QString("continuationToken")]);
    m_continuation_token_isSet = !json[QString("continuationToken")].isNull() && m_continuation_token_isValid;

    m_hierarchies_isValid = ::OpenAPI::fromJsonValue(m_hierarchies, json[QString("hierarchies")]);
    m_hierarchies_isSet = !json[QString("hierarchies")].isNull() && m_hierarchies_isValid;
}

QString OAIGetHierarchiesPage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetHierarchiesPage::asJsonObject() const {
    QJsonObject obj;
    if (m_continuation_token_isSet) {
        obj.insert(QString("continuationToken"), ::OpenAPI::toJsonValue(m_continuation_token));
    }
    if (m_hierarchies.size() > 0) {
        obj.insert(QString("hierarchies"), ::OpenAPI::toJsonValue(m_hierarchies));
    }
    return obj;
}

QString OAIGetHierarchiesPage::getContinuationToken() const {
    return m_continuation_token;
}
void OAIGetHierarchiesPage::setContinuationToken(const QString &continuation_token) {
    m_continuation_token = continuation_token;
    m_continuation_token_isSet = true;
}

bool OAIGetHierarchiesPage::is_continuation_token_Set() const{
    return m_continuation_token_isSet;
}

bool OAIGetHierarchiesPage::is_continuation_token_Valid() const{
    return m_continuation_token_isValid;
}

QList<OAITimeSeriesHierarchy> OAIGetHierarchiesPage::getHierarchies() const {
    return m_hierarchies;
}
void OAIGetHierarchiesPage::setHierarchies(const QList<OAITimeSeriesHierarchy> &hierarchies) {
    m_hierarchies = hierarchies;
    m_hierarchies_isSet = true;
}

bool OAIGetHierarchiesPage::is_hierarchies_Set() const{
    return m_hierarchies_isSet;
}

bool OAIGetHierarchiesPage::is_hierarchies_Valid() const{
    return m_hierarchies_isValid;
}

bool OAIGetHierarchiesPage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_continuation_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hierarchies.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetHierarchiesPage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
