/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAvailability.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAvailability::OAIAvailability(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAvailability::OAIAvailability() {
    this->initializeModel();
}

OAIAvailability::~OAIAvailability() {}

void OAIAvailability::initializeModel() {

    m_distribution_isSet = false;
    m_distribution_isValid = false;

    m_interval_size_isSet = false;
    m_interval_size_isValid = false;

    m_range_isSet = false;
    m_range_isValid = false;
}

void OAIAvailability::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAvailability::fromJsonObject(QJsonObject json) {

    m_distribution_isValid = ::OpenAPI::fromJsonValue(m_distribution, json[QString("distribution")]);
    m_distribution_isSet = !json[QString("distribution")].isNull() && m_distribution_isValid;

    m_interval_size_isValid = ::OpenAPI::fromJsonValue(m_interval_size, json[QString("intervalSize")]);
    m_interval_size_isSet = !json[QString("intervalSize")].isNull() && m_interval_size_isValid;

    m_range_isValid = ::OpenAPI::fromJsonValue(m_range, json[QString("range")]);
    m_range_isSet = !json[QString("range")].isNull() && m_range_isValid;
}

QString OAIAvailability::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAvailability::asJsonObject() const {
    QJsonObject obj;
    if (m_distribution_isSet) {
        obj.insert(QString("distribution"), ::OpenAPI::toJsonValue(m_distribution));
    }
    if (m_interval_size_isSet) {
        obj.insert(QString("intervalSize"), ::OpenAPI::toJsonValue(m_interval_size));
    }
    if (m_range.isSet()) {
        obj.insert(QString("range"), ::OpenAPI::toJsonValue(m_range));
    }
    return obj;
}

OAIObject OAIAvailability::getDistribution() const {
    return m_distribution;
}
void OAIAvailability::setDistribution(const OAIObject &distribution) {
    m_distribution = distribution;
    m_distribution_isSet = true;
}

bool OAIAvailability::is_distribution_Set() const{
    return m_distribution_isSet;
}

bool OAIAvailability::is_distribution_Valid() const{
    return m_distribution_isValid;
}

QString OAIAvailability::getIntervalSize() const {
    return m_interval_size;
}
void OAIAvailability::setIntervalSize(const QString &interval_size) {
    m_interval_size = interval_size;
    m_interval_size_isSet = true;
}

bool OAIAvailability::is_interval_size_Set() const{
    return m_interval_size_isSet;
}

bool OAIAvailability::is_interval_size_Valid() const{
    return m_interval_size_isValid;
}

OAIDateTimeRange OAIAvailability::getRange() const {
    return m_range;
}
void OAIAvailability::setRange(const OAIDateTimeRange &range) {
    m_range = range;
    m_range_isSet = true;
}

bool OAIAvailability::is_range_Set() const{
    return m_range_isSet;
}

bool OAIAvailability::is_range_Valid() const{
    return m_range_isValid;
}

bool OAIAvailability::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_distribution_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_interval_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAvailability::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
