/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHierarchiesRequestBatchGetDelete.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHierarchiesRequestBatchGetDelete::OAIHierarchiesRequestBatchGetDelete(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHierarchiesRequestBatchGetDelete::OAIHierarchiesRequestBatchGetDelete() {
    this->initializeModel();
}

OAIHierarchiesRequestBatchGetDelete::~OAIHierarchiesRequestBatchGetDelete() {}

void OAIHierarchiesRequestBatchGetDelete::initializeModel() {

    m_hierarchy_ids_isSet = false;
    m_hierarchy_ids_isValid = false;

    m_names_isSet = false;
    m_names_isValid = false;
}

void OAIHierarchiesRequestBatchGetDelete::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHierarchiesRequestBatchGetDelete::fromJsonObject(QJsonObject json) {

    m_hierarchy_ids_isValid = ::OpenAPI::fromJsonValue(m_hierarchy_ids, json[QString("hierarchyIds")]);
    m_hierarchy_ids_isSet = !json[QString("hierarchyIds")].isNull() && m_hierarchy_ids_isValid;

    m_names_isValid = ::OpenAPI::fromJsonValue(m_names, json[QString("names")]);
    m_names_isSet = !json[QString("names")].isNull() && m_names_isValid;
}

QString OAIHierarchiesRequestBatchGetDelete::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHierarchiesRequestBatchGetDelete::asJsonObject() const {
    QJsonObject obj;
    if (m_hierarchy_ids.size() > 0) {
        obj.insert(QString("hierarchyIds"), ::OpenAPI::toJsonValue(m_hierarchy_ids));
    }
    if (m_names.size() > 0) {
        obj.insert(QString("names"), ::OpenAPI::toJsonValue(m_names));
    }
    return obj;
}

QList<QString> OAIHierarchiesRequestBatchGetDelete::getHierarchyIds() const {
    return m_hierarchy_ids;
}
void OAIHierarchiesRequestBatchGetDelete::setHierarchyIds(const QList<QString> &hierarchy_ids) {
    m_hierarchy_ids = hierarchy_ids;
    m_hierarchy_ids_isSet = true;
}

bool OAIHierarchiesRequestBatchGetDelete::is_hierarchy_ids_Set() const{
    return m_hierarchy_ids_isSet;
}

bool OAIHierarchiesRequestBatchGetDelete::is_hierarchy_ids_Valid() const{
    return m_hierarchy_ids_isValid;
}

QList<QString> OAIHierarchiesRequestBatchGetDelete::getNames() const {
    return m_names;
}
void OAIHierarchiesRequestBatchGetDelete::setNames(const QList<QString> &names) {
    m_names = names;
    m_names_isSet = true;
}

bool OAIHierarchiesRequestBatchGetDelete::is_names_Set() const{
    return m_names_isSet;
}

bool OAIHierarchiesRequestBatchGetDelete::is_names_Valid() const{
    return m_names_isValid;
}

bool OAIHierarchiesRequestBatchGetDelete::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hierarchy_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHierarchiesRequestBatchGetDelete::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
