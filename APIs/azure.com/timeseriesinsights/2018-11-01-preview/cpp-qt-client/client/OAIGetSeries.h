/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetSeries.h
 *
 * Get Series query. Allows to retrieve time series of calculated variable values from events for a given Time Series ID and search span.
 */

#ifndef OAIGetSeries_H
#define OAIGetSeries_H

#include <QJsonObject>

#include "OAIDateTimeRange.h"
#include "OAIObject.h"
#include "OAITsx.h"
#include "OAIVariable.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITsx;
class OAIVariable;
class OAIDateTimeRange;

class OAIGetSeries : public OAIObject {
public:
    OAIGetSeries();
    OAIGetSeries(QString json);
    ~OAIGetSeries() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITsx getFilter() const;
    void setFilter(const OAITsx &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QMap<QString, OAIVariable> getInlineVariables() const;
    void setInlineVariables(const QMap<QString, OAIVariable> &inline_variables);
    bool is_inline_variables_Set() const;
    bool is_inline_variables_Valid() const;

    QList<QString> getProjectedVariables() const;
    void setProjectedVariables(const QList<QString> &projected_variables);
    bool is_projected_variables_Set() const;
    bool is_projected_variables_Valid() const;

    OAIDateTimeRange getSearchSpan() const;
    void setSearchSpan(const OAIDateTimeRange &search_span);
    bool is_search_span_Set() const;
    bool is_search_span_Valid() const;

    qint32 getTake() const;
    void setTake(const qint32 &take);
    bool is_take_Set() const;
    bool is_take_Valid() const;

    QList<OAIObject> getTimeSeriesId() const;
    void setTimeSeriesId(const QList<OAIObject> &time_series_id);
    bool is_time_series_id_Set() const;
    bool is_time_series_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITsx m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QMap<QString, OAIVariable> m_inline_variables;
    bool m_inline_variables_isSet;
    bool m_inline_variables_isValid;

    QList<QString> m_projected_variables;
    bool m_projected_variables_isSet;
    bool m_projected_variables_isValid;

    OAIDateTimeRange m_search_span;
    bool m_search_span_isSet;
    bool m_search_span_isValid;

    qint32 m_take;
    bool m_take_isSet;
    bool m_take_isValid;

    QList<OAIObject> m_time_series_id;
    bool m_time_series_id_isSet;
    bool m_time_series_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetSeries)

#endif // OAIGetSeries_H
