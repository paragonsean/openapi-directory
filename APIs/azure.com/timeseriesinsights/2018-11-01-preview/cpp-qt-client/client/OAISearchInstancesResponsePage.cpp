/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchInstancesResponsePage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchInstancesResponsePage::OAISearchInstancesResponsePage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchInstancesResponsePage::OAISearchInstancesResponsePage() {
    this->initializeModel();
}

OAISearchInstancesResponsePage::~OAISearchInstancesResponsePage() {}

void OAISearchInstancesResponsePage::initializeModel() {

    m_hierarchy_nodes_isSet = false;
    m_hierarchy_nodes_isValid = false;

    m_instances_isSet = false;
    m_instances_isValid = false;
}

void OAISearchInstancesResponsePage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchInstancesResponsePage::fromJsonObject(QJsonObject json) {

    m_hierarchy_nodes_isValid = ::OpenAPI::fromJsonValue(m_hierarchy_nodes, json[QString("hierarchyNodes")]);
    m_hierarchy_nodes_isSet = !json[QString("hierarchyNodes")].isNull() && m_hierarchy_nodes_isValid;

    m_instances_isValid = ::OpenAPI::fromJsonValue(m_instances, json[QString("instances")]);
    m_instances_isSet = !json[QString("instances")].isNull() && m_instances_isValid;
}

QString OAISearchInstancesResponsePage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchInstancesResponsePage::asJsonObject() const {
    QJsonObject obj;
    if (m_hierarchy_nodes.isSet()) {
        obj.insert(QString("hierarchyNodes"), ::OpenAPI::toJsonValue(m_hierarchy_nodes));
    }
    if (m_instances.isSet()) {
        obj.insert(QString("instances"), ::OpenAPI::toJsonValue(m_instances));
    }
    return obj;
}

OAISearchHierarchyNodesResponse OAISearchInstancesResponsePage::getHierarchyNodes() const {
    return m_hierarchy_nodes;
}
void OAISearchInstancesResponsePage::setHierarchyNodes(const OAISearchHierarchyNodesResponse &hierarchy_nodes) {
    m_hierarchy_nodes = hierarchy_nodes;
    m_hierarchy_nodes_isSet = true;
}

bool OAISearchInstancesResponsePage::is_hierarchy_nodes_Set() const{
    return m_hierarchy_nodes_isSet;
}

bool OAISearchInstancesResponsePage::is_hierarchy_nodes_Valid() const{
    return m_hierarchy_nodes_isValid;
}

OAISearchInstancesResponse OAISearchInstancesResponsePage::getInstances() const {
    return m_instances;
}
void OAISearchInstancesResponsePage::setInstances(const OAISearchInstancesResponse &instances) {
    m_instances = instances;
    m_instances_isSet = true;
}

bool OAISearchInstancesResponsePage::is_instances_Set() const{
    return m_instances_isSet;
}

bool OAISearchInstancesResponsePage::is_instances_Valid() const{
    return m_instances_isValid;
}

bool OAISearchInstancesResponsePage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hierarchy_nodes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_instances.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchInstancesResponsePage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
