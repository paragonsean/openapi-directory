/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchInstancesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchInstancesRequest::OAISearchInstancesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchInstancesRequest::OAISearchInstancesRequest() {
    this->initializeModel();
}

OAISearchInstancesRequest::~OAISearchInstancesRequest() {}

void OAISearchInstancesRequest::initializeModel() {

    m_hierarchies_isSet = false;
    m_hierarchies_isValid = false;

    m_instances_isSet = false;
    m_instances_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_search_string_isSet = false;
    m_search_string_isValid = false;
}

void OAISearchInstancesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchInstancesRequest::fromJsonObject(QJsonObject json) {

    m_hierarchies_isValid = ::OpenAPI::fromJsonValue(m_hierarchies, json[QString("hierarchies")]);
    m_hierarchies_isSet = !json[QString("hierarchies")].isNull() && m_hierarchies_isValid;

    m_instances_isValid = ::OpenAPI::fromJsonValue(m_instances, json[QString("instances")]);
    m_instances_isSet = !json[QString("instances")].isNull() && m_instances_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_search_string_isValid = ::OpenAPI::fromJsonValue(m_search_string, json[QString("searchString")]);
    m_search_string_isSet = !json[QString("searchString")].isNull() && m_search_string_isValid;
}

QString OAISearchInstancesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchInstancesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_hierarchies.isSet()) {
        obj.insert(QString("hierarchies"), ::OpenAPI::toJsonValue(m_hierarchies));
    }
    if (m_instances.isSet()) {
        obj.insert(QString("instances"), ::OpenAPI::toJsonValue(m_instances));
    }
    if (m_path.size() > 0) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_search_string_isSet) {
        obj.insert(QString("searchString"), ::OpenAPI::toJsonValue(m_search_string));
    }
    return obj;
}

OAISearchInstancesHierarchiesParameters OAISearchInstancesRequest::getHierarchies() const {
    return m_hierarchies;
}
void OAISearchInstancesRequest::setHierarchies(const OAISearchInstancesHierarchiesParameters &hierarchies) {
    m_hierarchies = hierarchies;
    m_hierarchies_isSet = true;
}

bool OAISearchInstancesRequest::is_hierarchies_Set() const{
    return m_hierarchies_isSet;
}

bool OAISearchInstancesRequest::is_hierarchies_Valid() const{
    return m_hierarchies_isValid;
}

OAISearchInstancesParameters OAISearchInstancesRequest::getInstances() const {
    return m_instances;
}
void OAISearchInstancesRequest::setInstances(const OAISearchInstancesParameters &instances) {
    m_instances = instances;
    m_instances_isSet = true;
}

bool OAISearchInstancesRequest::is_instances_Set() const{
    return m_instances_isSet;
}

bool OAISearchInstancesRequest::is_instances_Valid() const{
    return m_instances_isValid;
}

QList<QString> OAISearchInstancesRequest::getPath() const {
    return m_path;
}
void OAISearchInstancesRequest::setPath(const QList<QString> &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAISearchInstancesRequest::is_path_Set() const{
    return m_path_isSet;
}

bool OAISearchInstancesRequest::is_path_Valid() const{
    return m_path_isValid;
}

QString OAISearchInstancesRequest::getSearchString() const {
    return m_search_string;
}
void OAISearchInstancesRequest::setSearchString(const QString &search_string) {
    m_search_string = search_string;
    m_search_string_isSet = true;
}

bool OAISearchInstancesRequest::is_search_string_Set() const{
    return m_search_string_isSet;
}

bool OAISearchInstancesRequest::is_search_string_Valid() const{
    return m_search_string_isValid;
}

bool OAISearchInstancesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hierarchies.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_instances.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_path.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_string_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchInstancesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_search_string_isValid && true;
}

} // namespace OpenAPI
