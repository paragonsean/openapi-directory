/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryRequest::OAIQueryRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryRequest::OAIQueryRequest() {
    this->initializeModel();
}

OAIQueryRequest::~OAIQueryRequest() {}

void OAIQueryRequest::initializeModel() {

    m_aggregate_series_isSet = false;
    m_aggregate_series_isValid = false;

    m_get_events_isSet = false;
    m_get_events_isValid = false;

    m_get_series_isSet = false;
    m_get_series_isValid = false;
}

void OAIQueryRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueryRequest::fromJsonObject(QJsonObject json) {

    m_aggregate_series_isValid = ::OpenAPI::fromJsonValue(m_aggregate_series, json[QString("aggregateSeries")]);
    m_aggregate_series_isSet = !json[QString("aggregateSeries")].isNull() && m_aggregate_series_isValid;

    m_get_events_isValid = ::OpenAPI::fromJsonValue(m_get_events, json[QString("getEvents")]);
    m_get_events_isSet = !json[QString("getEvents")].isNull() && m_get_events_isValid;

    m_get_series_isValid = ::OpenAPI::fromJsonValue(m_get_series, json[QString("getSeries")]);
    m_get_series_isSet = !json[QString("getSeries")].isNull() && m_get_series_isValid;
}

QString OAIQueryRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueryRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregate_series.isSet()) {
        obj.insert(QString("aggregateSeries"), ::OpenAPI::toJsonValue(m_aggregate_series));
    }
    if (m_get_events.isSet()) {
        obj.insert(QString("getEvents"), ::OpenAPI::toJsonValue(m_get_events));
    }
    if (m_get_series.isSet()) {
        obj.insert(QString("getSeries"), ::OpenAPI::toJsonValue(m_get_series));
    }
    return obj;
}

OAIAggregateSeries OAIQueryRequest::getAggregateSeries() const {
    return m_aggregate_series;
}
void OAIQueryRequest::setAggregateSeries(const OAIAggregateSeries &aggregate_series) {
    m_aggregate_series = aggregate_series;
    m_aggregate_series_isSet = true;
}

bool OAIQueryRequest::is_aggregate_series_Set() const{
    return m_aggregate_series_isSet;
}

bool OAIQueryRequest::is_aggregate_series_Valid() const{
    return m_aggregate_series_isValid;
}

OAIGetEvents OAIQueryRequest::getGetEvents() const {
    return m_get_events;
}
void OAIQueryRequest::setGetEvents(const OAIGetEvents &get_events) {
    m_get_events = get_events;
    m_get_events_isSet = true;
}

bool OAIQueryRequest::is_get_events_Set() const{
    return m_get_events_isSet;
}

bool OAIQueryRequest::is_get_events_Valid() const{
    return m_get_events_isValid;
}

OAIGetSeries OAIQueryRequest::getGetSeries() const {
    return m_get_series;
}
void OAIQueryRequest::setGetSeries(const OAIGetSeries &get_series) {
    m_get_series = get_series;
    m_get_series_isSet = true;
}

bool OAIQueryRequest::is_get_series_Set() const{
    return m_get_series_isSet;
}

bool OAIQueryRequest::is_get_series_Valid() const{
    return m_get_series_isValid;
}

bool OAIQueryRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregate_series.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_get_events.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_get_series.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueryRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
