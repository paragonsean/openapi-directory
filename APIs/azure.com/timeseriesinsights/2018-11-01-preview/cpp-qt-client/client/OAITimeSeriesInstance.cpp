/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeSeriesInstance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeSeriesInstance::OAITimeSeriesInstance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeSeriesInstance::OAITimeSeriesInstance() {
    this->initializeModel();
}

OAITimeSeriesInstance::~OAITimeSeriesInstance() {}

void OAITimeSeriesInstance::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_hierarchy_ids_isSet = false;
    m_hierarchy_ids_isValid = false;

    m_instance_fields_isSet = false;
    m_instance_fields_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_time_series_id_isSet = false;
    m_time_series_id_isValid = false;

    m_type_id_isSet = false;
    m_type_id_isValid = false;
}

void OAITimeSeriesInstance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeSeriesInstance::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_hierarchy_ids_isValid = ::OpenAPI::fromJsonValue(m_hierarchy_ids, json[QString("hierarchyIds")]);
    m_hierarchy_ids_isSet = !json[QString("hierarchyIds")].isNull() && m_hierarchy_ids_isValid;

    m_instance_fields_isValid = ::OpenAPI::fromJsonValue(m_instance_fields, json[QString("instanceFields")]);
    m_instance_fields_isSet = !json[QString("instanceFields")].isNull() && m_instance_fields_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_time_series_id_isValid = ::OpenAPI::fromJsonValue(m_time_series_id, json[QString("timeSeriesId")]);
    m_time_series_id_isSet = !json[QString("timeSeriesId")].isNull() && m_time_series_id_isValid;

    m_type_id_isValid = ::OpenAPI::fromJsonValue(m_type_id, json[QString("typeId")]);
    m_type_id_isSet = !json[QString("typeId")].isNull() && m_type_id_isValid;
}

QString OAITimeSeriesInstance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeSeriesInstance::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_hierarchy_ids.size() > 0) {
        obj.insert(QString("hierarchyIds"), ::OpenAPI::toJsonValue(m_hierarchy_ids));
    }
    if (m_instance_fields.size() > 0) {
        obj.insert(QString("instanceFields"), ::OpenAPI::toJsonValue(m_instance_fields));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_time_series_id.size() > 0) {
        obj.insert(QString("timeSeriesId"), ::OpenAPI::toJsonValue(m_time_series_id));
    }
    if (m_type_id_isSet) {
        obj.insert(QString("typeId"), ::OpenAPI::toJsonValue(m_type_id));
    }
    return obj;
}

QString OAITimeSeriesInstance::getDescription() const {
    return m_description;
}
void OAITimeSeriesInstance::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITimeSeriesInstance::is_description_Set() const{
    return m_description_isSet;
}

bool OAITimeSeriesInstance::is_description_Valid() const{
    return m_description_isValid;
}

QList<QString> OAITimeSeriesInstance::getHierarchyIds() const {
    return m_hierarchy_ids;
}
void OAITimeSeriesInstance::setHierarchyIds(const QList<QString> &hierarchy_ids) {
    m_hierarchy_ids = hierarchy_ids;
    m_hierarchy_ids_isSet = true;
}

bool OAITimeSeriesInstance::is_hierarchy_ids_Set() const{
    return m_hierarchy_ids_isSet;
}

bool OAITimeSeriesInstance::is_hierarchy_ids_Valid() const{
    return m_hierarchy_ids_isValid;
}

QMap<QString, OAIObject> OAITimeSeriesInstance::getInstanceFields() const {
    return m_instance_fields;
}
void OAITimeSeriesInstance::setInstanceFields(const QMap<QString, OAIObject> &instance_fields) {
    m_instance_fields = instance_fields;
    m_instance_fields_isSet = true;
}

bool OAITimeSeriesInstance::is_instance_fields_Set() const{
    return m_instance_fields_isSet;
}

bool OAITimeSeriesInstance::is_instance_fields_Valid() const{
    return m_instance_fields_isValid;
}

QString OAITimeSeriesInstance::getName() const {
    return m_name;
}
void OAITimeSeriesInstance::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITimeSeriesInstance::is_name_Set() const{
    return m_name_isSet;
}

bool OAITimeSeriesInstance::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIObject> OAITimeSeriesInstance::getTimeSeriesId() const {
    return m_time_series_id;
}
void OAITimeSeriesInstance::setTimeSeriesId(const QList<OAIObject> &time_series_id) {
    m_time_series_id = time_series_id;
    m_time_series_id_isSet = true;
}

bool OAITimeSeriesInstance::is_time_series_id_Set() const{
    return m_time_series_id_isSet;
}

bool OAITimeSeriesInstance::is_time_series_id_Valid() const{
    return m_time_series_id_isValid;
}

QString OAITimeSeriesInstance::getTypeId() const {
    return m_type_id;
}
void OAITimeSeriesInstance::setTypeId(const QString &type_id) {
    m_type_id = type_id;
    m_type_id_isSet = true;
}

bool OAITimeSeriesInstance::is_type_id_Set() const{
    return m_type_id_isSet;
}

bool OAITimeSeriesInstance::is_type_id_Valid() const{
    return m_type_id_isValid;
}

bool OAITimeSeriesInstance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hierarchy_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_series_id.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeSeriesInstance::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_time_series_id_isValid && m_type_id_isValid && true;
}

} // namespace OpenAPI
