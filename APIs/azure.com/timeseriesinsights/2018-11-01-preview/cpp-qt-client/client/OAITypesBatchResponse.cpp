/**
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITypesBatchResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITypesBatchResponse::OAITypesBatchResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITypesBatchResponse::OAITypesBatchResponse() {
    this->initializeModel();
}

OAITypesBatchResponse::~OAITypesBatchResponse() {}

void OAITypesBatchResponse::initializeModel() {

    m_r_delete_isSet = false;
    m_r_delete_isValid = false;

    m_get_isSet = false;
    m_get_isValid = false;

    m_put_isSet = false;
    m_put_isValid = false;
}

void OAITypesBatchResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITypesBatchResponse::fromJsonObject(QJsonObject json) {

    m_r_delete_isValid = ::OpenAPI::fromJsonValue(m_r_delete, json[QString("delete")]);
    m_r_delete_isSet = !json[QString("delete")].isNull() && m_r_delete_isValid;

    m_get_isValid = ::OpenAPI::fromJsonValue(m_get, json[QString("get")]);
    m_get_isSet = !json[QString("get")].isNull() && m_get_isValid;

    m_put_isValid = ::OpenAPI::fromJsonValue(m_put, json[QString("put")]);
    m_put_isSet = !json[QString("put")].isNull() && m_put_isValid;
}

QString OAITypesBatchResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITypesBatchResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_r_delete.size() > 0) {
        obj.insert(QString("delete"), ::OpenAPI::toJsonValue(m_r_delete));
    }
    if (m_get.size() > 0) {
        obj.insert(QString("get"), ::OpenAPI::toJsonValue(m_get));
    }
    if (m_put.size() > 0) {
        obj.insert(QString("put"), ::OpenAPI::toJsonValue(m_put));
    }
    return obj;
}

QList<OAITsiErrorBody> OAITypesBatchResponse::getRDelete() const {
    return m_r_delete;
}
void OAITypesBatchResponse::setRDelete(const QList<OAITsiErrorBody> &r_delete) {
    m_r_delete = r_delete;
    m_r_delete_isSet = true;
}

bool OAITypesBatchResponse::is_r_delete_Set() const{
    return m_r_delete_isSet;
}

bool OAITypesBatchResponse::is_r_delete_Valid() const{
    return m_r_delete_isValid;
}

QList<OAITimeSeriesTypeOrError> OAITypesBatchResponse::getGet() const {
    return m_get;
}
void OAITypesBatchResponse::setGet(const QList<OAITimeSeriesTypeOrError> &get) {
    m_get = get;
    m_get_isSet = true;
}

bool OAITypesBatchResponse::is_get_Set() const{
    return m_get_isSet;
}

bool OAITypesBatchResponse::is_get_Valid() const{
    return m_get_isValid;
}

QList<OAITimeSeriesTypeOrError> OAITypesBatchResponse::getPut() const {
    return m_put;
}
void OAITypesBatchResponse::setPut(const QList<OAITimeSeriesTypeOrError> &put) {
    m_put = put;
    m_put_isSet = true;
}

bool OAITypesBatchResponse::is_put_Set() const{
    return m_put_isSet;
}

bool OAITypesBatchResponse::is_put_Valid() const{
    return m_put_isValid;
}

bool OAITypesBatchResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_r_delete.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_get.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_put.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITypesBatchResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
