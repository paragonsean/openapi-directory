# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.instances_search_string_suggestion import InstancesSearchStringSuggestion
from openapi_server import util


class InstancesSuggestResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, suggestions: List[InstancesSearchStringSuggestion]=None):
        """InstancesSuggestResponse - a model defined in OpenAPI

        :param suggestions: The suggestions of this InstancesSuggestResponse.
        """
        self.openapi_types = {
            'suggestions': List[InstancesSearchStringSuggestion]
        }

        self.attribute_map = {
            'suggestions': 'suggestions'
        }

        self._suggestions = suggestions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstancesSuggestResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstancesSuggestResponse of this InstancesSuggestResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def suggestions(self):
        """Gets the suggestions of this InstancesSuggestResponse.

        List of instance suggestions for searching time series models.

        :return: The suggestions of this InstancesSuggestResponse.
        :rtype: List[InstancesSearchStringSuggestion]
        """
        return self._suggestions

    @suggestions.setter
    def suggestions(self, suggestions):
        """Sets the suggestions of this InstancesSuggestResponse.

        List of instance suggestions for searching time series models.

        :param suggestions: The suggestions of this InstancesSuggestResponse.
        :type suggestions: List[InstancesSearchStringSuggestion]
        """

        self._suggestions = suggestions
