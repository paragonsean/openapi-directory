# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.search_instances_hierarchies_parameters import SearchInstancesHierarchiesParameters
from openapi_server.models.search_instances_parameters import SearchInstancesParameters
from openapi_server import util


class SearchInstancesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hierarchies: SearchInstancesHierarchiesParameters=None, instances: SearchInstancesParameters=None, path: List[str]=None, search_string: str=None):
        """SearchInstancesRequest - a model defined in OpenAPI

        :param hierarchies: The hierarchies of this SearchInstancesRequest.
        :param instances: The instances of this SearchInstancesRequest.
        :param path: The path of this SearchInstancesRequest.
        :param search_string: The search_string of this SearchInstancesRequest.
        """
        self.openapi_types = {
            'hierarchies': SearchInstancesHierarchiesParameters,
            'instances': SearchInstancesParameters,
            'path': List[str],
            'search_string': str
        }

        self.attribute_map = {
            'hierarchies': 'hierarchies',
            'instances': 'instances',
            'path': 'path',
            'search_string': 'searchString'
        }

        self._hierarchies = hierarchies
        self._instances = instances
        self._path = path
        self._search_string = search_string

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchInstancesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchInstancesRequest of this SearchInstancesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hierarchies(self):
        """Gets the hierarchies of this SearchInstancesRequest.


        :return: The hierarchies of this SearchInstancesRequest.
        :rtype: SearchInstancesHierarchiesParameters
        """
        return self._hierarchies

    @hierarchies.setter
    def hierarchies(self, hierarchies):
        """Sets the hierarchies of this SearchInstancesRequest.


        :param hierarchies: The hierarchies of this SearchInstancesRequest.
        :type hierarchies: SearchInstancesHierarchiesParameters
        """

        self._hierarchies = hierarchies

    @property
    def instances(self):
        """Gets the instances of this SearchInstancesRequest.


        :return: The instances of this SearchInstancesRequest.
        :rtype: SearchInstancesParameters
        """
        return self._instances

    @instances.setter
    def instances(self, instances):
        """Sets the instances of this SearchInstancesRequest.


        :param instances: The instances of this SearchInstancesRequest.
        :type instances: SearchInstancesParameters
        """

        self._instances = instances

    @property
    def path(self):
        """Gets the path of this SearchInstancesRequest.

        Filter on hierarchy path of time series instances. Path is represented as array of string path segments. First element should be hierarchy name. Example: [\"Location\", \"California\"]. Optional, case sensitive, never empty and can be null.

        :return: The path of this SearchInstancesRequest.
        :rtype: List[str]
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this SearchInstancesRequest.

        Filter on hierarchy path of time series instances. Path is represented as array of string path segments. First element should be hierarchy name. Example: [\"Location\", \"California\"]. Optional, case sensitive, never empty and can be null.

        :param path: The path of this SearchInstancesRequest.
        :type path: List[str]
        """

        self._path = path

    @property
    def search_string(self):
        """Gets the search_string of this SearchInstancesRequest.

        Query search string that will be matched to the attributes of time series instances. Example: \"floor 100\". Case-insensitive, must be present, but can be empty string.

        :return: The search_string of this SearchInstancesRequest.
        :rtype: str
        """
        return self._search_string

    @search_string.setter
    def search_string(self, search_string):
        """Sets the search_string of this SearchInstancesRequest.

        Query search string that will be matched to the attributes of time series instances. Example: \"floor 100\". Case-insensitive, must be present, but can be empty string.

        :param search_string: The search_string of this SearchInstancesRequest.
        :type search_string: str
        """
        if search_string is None:
            raise ValueError("Invalid value for `search_string`, must not be `None`")

        self._search_string = search_string
