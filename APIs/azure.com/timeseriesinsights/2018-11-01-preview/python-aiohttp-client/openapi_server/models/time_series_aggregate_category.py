# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeSeriesAggregateCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, label: str=None, values: List[object]=None):
        """TimeSeriesAggregateCategory - a model defined in OpenAPI

        :param label: The label of this TimeSeriesAggregateCategory.
        :param values: The values of this TimeSeriesAggregateCategory.
        """
        self.openapi_types = {
            'label': str,
            'values': List[object]
        }

        self.attribute_map = {
            'label': 'label',
            'values': 'values'
        }

        self._label = label
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeSeriesAggregateCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeSeriesAggregateCategory of this TimeSeriesAggregateCategory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self):
        """Gets the label of this TimeSeriesAggregateCategory.

        The name of the category which will be used in constructing the output variable names.

        :return: The label of this TimeSeriesAggregateCategory.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this TimeSeriesAggregateCategory.

        The name of the category which will be used in constructing the output variable names.

        :param label: The label of this TimeSeriesAggregateCategory.
        :type label: str
        """
        if label is None:
            raise ValueError("Invalid value for `label`, must not be `None`")

        self._label = label

    @property
    def values(self):
        """Gets the values of this TimeSeriesAggregateCategory.

        The list of values that a category maps to. Can be either a unique list of string or list of long.

        :return: The values of this TimeSeriesAggregateCategory.
        :rtype: List[object]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this TimeSeriesAggregateCategory.

        The list of values that a category maps to. Can be either a unique list of string or list of long.

        :param values: The values of this TimeSeriesAggregateCategory.
        :type values: List[object]
        """
        if values is None:
            raise ValueError("Invalid value for `values`, must not be `None`")

        self._values = values
