# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateModelSettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_type_id: str=None, name: str=None):
        """UpdateModelSettingsRequest - a model defined in OpenAPI

        :param default_type_id: The default_type_id of this UpdateModelSettingsRequest.
        :param name: The name of this UpdateModelSettingsRequest.
        """
        self.openapi_types = {
            'default_type_id': str,
            'name': str
        }

        self.attribute_map = {
            'default_type_id': 'defaultTypeId',
            'name': 'name'
        }

        self._default_type_id = default_type_id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateModelSettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateModelSettingsRequest of this UpdateModelSettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_type_id(self):
        """Gets the default_type_id of this UpdateModelSettingsRequest.

        Default type id of the model that new instances will automatically belong to.

        :return: The default_type_id of this UpdateModelSettingsRequest.
        :rtype: str
        """
        return self._default_type_id

    @default_type_id.setter
    def default_type_id(self, default_type_id):
        """Sets the default_type_id of this UpdateModelSettingsRequest.

        Default type id of the model that new instances will automatically belong to.

        :param default_type_id: The default_type_id of this UpdateModelSettingsRequest.
        :type default_type_id: str
        """

        self._default_type_id = default_type_id

    @property
    def name(self):
        """Gets the name of this UpdateModelSettingsRequest.

        Model display name which is shown in the UX and mutable by the user. Initial value is \"DefaultModel\".

        :return: The name of this UpdateModelSettingsRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateModelSettingsRequest.

        Model display name which is shown in the UX and mutable by the user. Initial value is \"DefaultModel\".

        :param name: The name of this UpdateModelSettingsRequest.
        :type name: str
        """

        self._name = name
