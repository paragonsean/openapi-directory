/*
 * TimeSeriesInsightsClient
 * Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.
 *
 * The version of the OpenAPI document: 2018-11-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ModelSettingsResponse;
import org.openapitools.client.model.TsiError;
import org.openapitools.client.model.UpdateModelSettingsRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ModelSettingsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ModelSettingsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ModelSettingsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for modelSettingsGet
     * @param apiVersion Version of the API to be used with the client request. Currently supported version is \&quot;2018-11-01-preview\&quot;. (required)
     * @param xMsClientRequestId Optional client request ID. Service records this value. Allows the service to trace operation across services, and allows the customer to contact support regarding a particular request. (optional)
     * @param xMsClientSessionId Optional client session ID. Service records this value. Allows the service to trace a group of related operations across services, and allows the customer to contact support regarding a particular group of requests. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
     </table>
     */
    public okhttp3.Call modelSettingsGetCall(String apiVersion, String xMsClientRequestId, String xMsClientSessionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/timeseries/modelSettings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (xMsClientRequestId != null) {
            localVarHeaderParams.put("x-ms-client-request-id", localVarApiClient.parameterToString(xMsClientRequestId));
        }

        if (xMsClientSessionId != null) {
            localVarHeaderParams.put("x-ms-client-session-id", localVarApiClient.parameterToString(xMsClientSessionId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modelSettingsGetValidateBeforeCall(String apiVersion, String xMsClientRequestId, String xMsClientSessionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling modelSettingsGet(Async)");
        }

        return modelSettingsGetCall(apiVersion, xMsClientRequestId, xMsClientSessionId, _callback);

    }

    /**
     * 
     * Returns the model settings which includes model display name, Time Series ID properties and default type ID. Every pay-as-you-go environment has a model that is automatically created.
     * @param apiVersion Version of the API to be used with the client request. Currently supported version is \&quot;2018-11-01-preview\&quot;. (required)
     * @param xMsClientRequestId Optional client request ID. Service records this value. Allows the service to trace operation across services, and allows the customer to contact support regarding a particular request. (optional)
     * @param xMsClientSessionId Optional client session ID. Service records this value. Allows the service to trace a group of related operations across services, and allows the customer to contact support regarding a particular group of requests. (optional)
     * @return ModelSettingsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
     </table>
     */
    public ModelSettingsResponse modelSettingsGet(String apiVersion, String xMsClientRequestId, String xMsClientSessionId) throws ApiException {
        ApiResponse<ModelSettingsResponse> localVarResp = modelSettingsGetWithHttpInfo(apiVersion, xMsClientRequestId, xMsClientSessionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns the model settings which includes model display name, Time Series ID properties and default type ID. Every pay-as-you-go environment has a model that is automatically created.
     * @param apiVersion Version of the API to be used with the client request. Currently supported version is \&quot;2018-11-01-preview\&quot;. (required)
     * @param xMsClientRequestId Optional client request ID. Service records this value. Allows the service to trace operation across services, and allows the customer to contact support regarding a particular request. (optional)
     * @param xMsClientSessionId Optional client session ID. Service records this value. Allows the service to trace a group of related operations across services, and allows the customer to contact support regarding a particular group of requests. (optional)
     * @return ApiResponse&lt;ModelSettingsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
     </table>
     */
    public ApiResponse<ModelSettingsResponse> modelSettingsGetWithHttpInfo(String apiVersion, String xMsClientRequestId, String xMsClientSessionId) throws ApiException {
        okhttp3.Call localVarCall = modelSettingsGetValidateBeforeCall(apiVersion, xMsClientRequestId, xMsClientSessionId, null);
        Type localVarReturnType = new TypeToken<ModelSettingsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns the model settings which includes model display name, Time Series ID properties and default type ID. Every pay-as-you-go environment has a model that is automatically created.
     * @param apiVersion Version of the API to be used with the client request. Currently supported version is \&quot;2018-11-01-preview\&quot;. (required)
     * @param xMsClientRequestId Optional client request ID. Service records this value. Allows the service to trace operation across services, and allows the customer to contact support regarding a particular request. (optional)
     * @param xMsClientSessionId Optional client session ID. Service records this value. Allows the service to trace a group of related operations across services, and allows the customer to contact support regarding a particular group of requests. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
     </table>
     */
    public okhttp3.Call modelSettingsGetAsync(String apiVersion, String xMsClientRequestId, String xMsClientSessionId, final ApiCallback<ModelSettingsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = modelSettingsGetValidateBeforeCall(apiVersion, xMsClientRequestId, xMsClientSessionId, _callback);
        Type localVarReturnType = new TypeToken<ModelSettingsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modelSettingsUpdate
     * @param apiVersion Version of the API to be used with the client request. Currently supported version is \&quot;2018-11-01-preview\&quot;. (required)
     * @param parameters Model settings update request body. (required)
     * @param xMsClientRequestId Optional client request ID. Service records this value. Allows the service to trace operation across services, and allows the customer to contact support regarding a particular request. (optional)
     * @param xMsClientSessionId Optional client session ID. Service records this value. Allows the service to trace a group of related operations across services, and allows the customer to contact support regarding a particular group of requests. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation returns new full model settings. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
     </table>
     */
    public okhttp3.Call modelSettingsUpdateCall(String apiVersion, UpdateModelSettingsRequest parameters, String xMsClientRequestId, String xMsClientSessionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = parameters;

        // create path and map variables
        String localVarPath = "/timeseries/modelSettings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (xMsClientRequestId != null) {
            localVarHeaderParams.put("x-ms-client-request-id", localVarApiClient.parameterToString(xMsClientRequestId));
        }

        if (xMsClientSessionId != null) {
            localVarHeaderParams.put("x-ms-client-session-id", localVarApiClient.parameterToString(xMsClientSessionId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modelSettingsUpdateValidateBeforeCall(String apiVersion, UpdateModelSettingsRequest parameters, String xMsClientRequestId, String xMsClientSessionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling modelSettingsUpdate(Async)");
        }

        // verify the required parameter 'parameters' is set
        if (parameters == null) {
            throw new ApiException("Missing the required parameter 'parameters' when calling modelSettingsUpdate(Async)");
        }

        return modelSettingsUpdateCall(apiVersion, parameters, xMsClientRequestId, xMsClientSessionId, _callback);

    }

    /**
     * 
     * Updates time series model settings - either the model name or default type ID.
     * @param apiVersion Version of the API to be used with the client request. Currently supported version is \&quot;2018-11-01-preview\&quot;. (required)
     * @param parameters Model settings update request body. (required)
     * @param xMsClientRequestId Optional client request ID. Service records this value. Allows the service to trace operation across services, and allows the customer to contact support regarding a particular request. (optional)
     * @param xMsClientSessionId Optional client session ID. Service records this value. Allows the service to trace a group of related operations across services, and allows the customer to contact support regarding a particular group of requests. (optional)
     * @return ModelSettingsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation returns new full model settings. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
     </table>
     */
    public ModelSettingsResponse modelSettingsUpdate(String apiVersion, UpdateModelSettingsRequest parameters, String xMsClientRequestId, String xMsClientSessionId) throws ApiException {
        ApiResponse<ModelSettingsResponse> localVarResp = modelSettingsUpdateWithHttpInfo(apiVersion, parameters, xMsClientRequestId, xMsClientSessionId);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates time series model settings - either the model name or default type ID.
     * @param apiVersion Version of the API to be used with the client request. Currently supported version is \&quot;2018-11-01-preview\&quot;. (required)
     * @param parameters Model settings update request body. (required)
     * @param xMsClientRequestId Optional client request ID. Service records this value. Allows the service to trace operation across services, and allows the customer to contact support regarding a particular request. (optional)
     * @param xMsClientSessionId Optional client session ID. Service records this value. Allows the service to trace a group of related operations across services, and allows the customer to contact support regarding a particular group of requests. (optional)
     * @return ApiResponse&lt;ModelSettingsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation returns new full model settings. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
     </table>
     */
    public ApiResponse<ModelSettingsResponse> modelSettingsUpdateWithHttpInfo(String apiVersion, UpdateModelSettingsRequest parameters, String xMsClientRequestId, String xMsClientSessionId) throws ApiException {
        okhttp3.Call localVarCall = modelSettingsUpdateValidateBeforeCall(apiVersion, parameters, xMsClientRequestId, xMsClientSessionId, null);
        Type localVarReturnType = new TypeToken<ModelSettingsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates time series model settings - either the model name or default type ID.
     * @param apiVersion Version of the API to be used with the client request. Currently supported version is \&quot;2018-11-01-preview\&quot;. (required)
     * @param parameters Model settings update request body. (required)
     * @param xMsClientRequestId Optional client request ID. Service records this value. Allows the service to trace operation across services, and allows the customer to contact support regarding a particular request. (optional)
     * @param xMsClientSessionId Optional client session ID. Service records this value. Allows the service to trace a group of related operations across services, and allows the customer to contact support regarding a particular group of requests. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful operation returns new full model settings. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error. </td><td>  * x-ms-request-id - Server-generated request ID. Can be used to contact support to investigate a request. <br>  </td></tr>
     </table>
     */
    public okhttp3.Call modelSettingsUpdateAsync(String apiVersion, UpdateModelSettingsRequest parameters, String xMsClientRequestId, String xMsClientSessionId, final ApiCallback<ModelSettingsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = modelSettingsUpdateValidateBeforeCall(apiVersion, parameters, xMsClientRequestId, xMsClientSessionId, _callback);
        Type localVarReturnType = new TypeToken<ModelSettingsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
