/**
 * ManagementLinkClient
 * Azure resources can be linked together to form logical relationships. You can establish links between resources belonging to different resource groups. However, all the linked resources must belong to the same subscription. Each resource can be linked to 50 other resources. If any of the linked resources are deleted or moved, the link owner must clean up the remaining link.
 *
 * The version of the OpenAPI document: 2016-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResourceLink from './ResourceLink';

/**
 * The ResourceLinkResult model module.
 * @module model/ResourceLinkResult
 * @version 2016-09-01
 */
class ResourceLinkResult {
    /**
     * Constructs a new <code>ResourceLinkResult</code>.
     * List of resource links.
     * @alias module:model/ResourceLinkResult
     * @param value {Array.<module:model/ResourceLink>} An array of resource links.
     */
    constructor(value) { 
        
        ResourceLinkResult.initialize(this, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, value) { 
        obj['value'] = value;
    }

    /**
     * Constructs a <code>ResourceLinkResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceLinkResult} obj Optional instance to populate.
     * @return {module:model/ResourceLinkResult} The populated <code>ResourceLinkResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceLinkResult();

            if (data.hasOwnProperty('nextLink')) {
                obj['nextLink'] = ApiClient.convertToType(data['nextLink'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], [ResourceLink]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceLinkResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceLinkResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResourceLinkResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['nextLink'] && !(typeof data['nextLink'] === 'string' || data['nextLink'] instanceof String)) {
            throw new Error("Expected the field `nextLink` to be a primitive type in the JSON string but got " + data['nextLink']);
        }
        if (data['value']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['value'])) {
                throw new Error("Expected the field `value` to be an array in the JSON data but got " + data['value']);
            }
            // validate the optional field `value` (array)
            for (const item of data['value']) {
                ResourceLink.validateJSON(item);
            };
        }

        return true;
    }


}

ResourceLinkResult.RequiredProperties = ["value"];

/**
 * The URL to use for getting the next set of results.
 * @member {String} nextLink
 */
ResourceLinkResult.prototype['nextLink'] = undefined;

/**
 * An array of resource links.
 * @member {Array.<module:model/ResourceLink>} value
 */
ResourceLinkResult.prototype['value'] = undefined;






export default ResourceLinkResult;

