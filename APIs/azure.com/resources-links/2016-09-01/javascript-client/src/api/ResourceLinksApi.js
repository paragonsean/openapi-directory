/**
 * ManagementLinkClient
 * Azure resources can be linked together to form logical relationships. You can establish links between resources belonging to different resource groups. However, all the linked resources must belong to the same subscription. Each resource can be linked to 50 other resources. If any of the linked resources are deleted or moved, the link owner must clean up the remaining link.
 *
 * The version of the OpenAPI document: 2016-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ResourceLink from '../model/ResourceLink';
import ResourceLinkResult from '../model/ResourceLinkResult';

/**
* ResourceLinks service.
* @module api/ResourceLinksApi
* @version 2016-09-01
*/
export default class ResourceLinksApi {

    /**
    * Constructs a new ResourceLinksApi. 
    * @alias module:api/ResourceLinksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the resourceLinksCreateOrUpdate operation.
     * @callback module:api/ResourceLinksApi~resourceLinksCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a resource link between the specified resources.
     * @param {String} linkId The fully qualified ID of the resource link. Use the format, /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}. For example, /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
     * @param {String} apiVersion The API version to use for the operation.
     * @param {module:model/ResourceLink} parameters Parameters for creating or updating a resource link.
     * @param {module:api/ResourceLinksApi~resourceLinksCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceLink}
     */
    resourceLinksCreateOrUpdate(linkId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'linkId' is set
      if (linkId === undefined || linkId === null) {
        throw new Error("Missing the required parameter 'linkId' when calling resourceLinksCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resourceLinksCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling resourceLinksCreateOrUpdate");
      }

      let pathParams = {
        'linkId': linkId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ResourceLink;
      return this.apiClient.callApi(
        '/{linkId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resourceLinksDelete operation.
     * @callback module:api/ResourceLinksApi~resourceLinksDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a resource link with the specified ID.
     * @param {String} linkId The fully qualified ID of the resource link. Use the format, /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}. For example, /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
     * @param {String} apiVersion The API version to use for the operation.
     * @param {module:api/ResourceLinksApi~resourceLinksDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    resourceLinksDelete(linkId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'linkId' is set
      if (linkId === undefined || linkId === null) {
        throw new Error("Missing the required parameter 'linkId' when calling resourceLinksDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resourceLinksDelete");
      }

      let pathParams = {
        'linkId': linkId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/{linkId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resourceLinksGet operation.
     * @callback module:api/ResourceLinksApi~resourceLinksGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceLink} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a resource link with the specified ID.
     * @param {String} linkId The fully qualified Id of the resource link. For example, /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
     * @param {String} apiVersion The API version to use for the operation.
     * @param {module:api/ResourceLinksApi~resourceLinksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceLink}
     */
    resourceLinksGet(linkId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'linkId' is set
      if (linkId === undefined || linkId === null) {
        throw new Error("Missing the required parameter 'linkId' when calling resourceLinksGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resourceLinksGet");
      }

      let pathParams = {
        'linkId': linkId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceLink;
      return this.apiClient.callApi(
        '/{linkId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resourceLinksListAtSourceScope operation.
     * @callback module:api/ResourceLinksApi~resourceLinksListAtSourceScopeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceLinkResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of resource links at and below the specified source scope.
     * @param {String} scope The fully qualified ID of the scope for getting the resource links. For example, to list resource links at and under a resource group, set the scope to /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup.
     * @param {String} apiVersion The API version to use for the operation.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [filter] The filter to apply when getting resource links. To get links only at the specified scope (not below the scope), use Filter.atScope().
     * @param {module:api/ResourceLinksApi~resourceLinksListAtSourceScopeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceLinkResult}
     */
    resourceLinksListAtSourceScope(scope, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling resourceLinksListAtSourceScope");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resourceLinksListAtSourceScope");
      }

      let pathParams = {
        'scope': scope
      };
      let queryParams = {
        '$filter': opts['filter'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceLinkResult;
      return this.apiClient.callApi(
        '/{scope}/providers/Microsoft.Resources/links', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resourceLinksListAtSubscription operation.
     * @callback module:api/ResourceLinksApi~resourceLinksListAtSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceLinkResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all the linked resources for the subscription.
     * @param {String} apiVersion The API version to use for the operation.
     * @param {String} subscriptionId The ID of the target subscription.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] The filter to apply on the list resource links operation. The supported filter for list resource links is targetId. For example, $filter=targetId eq {value}
     * @param {module:api/ResourceLinksApi~resourceLinksListAtSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceLinkResult}
     */
    resourceLinksListAtSubscription(apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling resourceLinksListAtSubscription");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling resourceLinksListAtSubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        '$filter': opts['filter'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResourceLinkResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Resources/links', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
