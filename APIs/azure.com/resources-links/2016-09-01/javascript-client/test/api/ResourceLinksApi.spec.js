/**
 * ManagementLinkClient
 * Azure resources can be linked together to form logical relationships. You can establish links between resources belonging to different resource groups. However, all the linked resources must belong to the same subscription. Each resource can be linked to 50 other resources. If any of the linked resources are deleted or moved, the link owner must clean up the remaining link.
 *
 * The version of the OpenAPI document: 2016-09-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ManagementLinkClient);
  }
}(this, function(expect, ManagementLinkClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ManagementLinkClient.ResourceLinksApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ResourceLinksApi', function() {
    describe('resourceLinksCreateOrUpdate', function() {
      it('should call resourceLinksCreateOrUpdate successfully', function(done) {
        //uncomment below and update the code to test resourceLinksCreateOrUpdate
        //instance.resourceLinksCreateOrUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourceLinksDelete', function() {
      it('should call resourceLinksDelete successfully', function(done) {
        //uncomment below and update the code to test resourceLinksDelete
        //instance.resourceLinksDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourceLinksGet', function() {
      it('should call resourceLinksGet successfully', function(done) {
        //uncomment below and update the code to test resourceLinksGet
        //instance.resourceLinksGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourceLinksListAtSourceScope', function() {
      it('should call resourceLinksListAtSourceScope successfully', function(done) {
        //uncomment below and update the code to test resourceLinksListAtSourceScope
        //instance.resourceLinksListAtSourceScope(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourceLinksListAtSubscription', function() {
      it('should call resourceLinksListAtSubscription successfully', function(done) {
        //uncomment below and update the code to test resourceLinksListAtSubscription
        //instance.resourceLinksListAtSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
