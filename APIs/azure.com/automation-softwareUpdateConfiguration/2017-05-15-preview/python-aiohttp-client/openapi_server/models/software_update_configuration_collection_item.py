# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.software_update_configuration_collection_item_properties import SoftwareUpdateConfigurationCollectionItemProperties
from openapi_server import util


class SoftwareUpdateConfigurationCollectionItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, properties: SoftwareUpdateConfigurationCollectionItemProperties=None):
        """SoftwareUpdateConfigurationCollectionItem - a model defined in OpenAPI

        :param id: The id of this SoftwareUpdateConfigurationCollectionItem.
        :param name: The name of this SoftwareUpdateConfigurationCollectionItem.
        :param properties: The properties of this SoftwareUpdateConfigurationCollectionItem.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'properties': SoftwareUpdateConfigurationCollectionItemProperties
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'properties': 'properties'
        }

        self._id = id
        self._name = name
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SoftwareUpdateConfigurationCollectionItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The softwareUpdateConfigurationCollectionItem of this SoftwareUpdateConfigurationCollectionItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this SoftwareUpdateConfigurationCollectionItem.

        Resource Id of the software update configuration

        :return: The id of this SoftwareUpdateConfigurationCollectionItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SoftwareUpdateConfigurationCollectionItem.

        Resource Id of the software update configuration

        :param id: The id of this SoftwareUpdateConfigurationCollectionItem.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this SoftwareUpdateConfigurationCollectionItem.

        Name of the software update configuration.

        :return: The name of this SoftwareUpdateConfigurationCollectionItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SoftwareUpdateConfigurationCollectionItem.

        Name of the software update configuration.

        :param name: The name of this SoftwareUpdateConfigurationCollectionItem.
        :type name: str
        """

        self._name = name

    @property
    def properties(self):
        """Gets the properties of this SoftwareUpdateConfigurationCollectionItem.


        :return: The properties of this SoftwareUpdateConfigurationCollectionItem.
        :rtype: SoftwareUpdateConfigurationCollectionItemProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this SoftwareUpdateConfigurationCollectionItem.


        :param properties: The properties of this SoftwareUpdateConfigurationCollectionItem.
        :type properties: SoftwareUpdateConfigurationCollectionItemProperties
        """
        if properties is None:
            raise ValueError("Invalid value for `properties`, must not be `None`")

        self._properties = properties
