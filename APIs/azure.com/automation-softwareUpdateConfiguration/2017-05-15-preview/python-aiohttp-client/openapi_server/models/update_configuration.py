# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.linux_properties import LinuxProperties
from openapi_server.models.operating_system_type import OperatingSystemType
from openapi_server.models.target_properties import TargetProperties
from openapi_server.models.windows_properties import WindowsProperties
from openapi_server import util


class UpdateConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, azure_virtual_machines: List[str]=None, duration: str=None, linux: LinuxProperties=None, non_azure_computer_names: List[str]=None, operating_system: OperatingSystemType=None, targets: TargetProperties=None, windows: WindowsProperties=None):
        """UpdateConfiguration - a model defined in OpenAPI

        :param azure_virtual_machines: The azure_virtual_machines of this UpdateConfiguration.
        :param duration: The duration of this UpdateConfiguration.
        :param linux: The linux of this UpdateConfiguration.
        :param non_azure_computer_names: The non_azure_computer_names of this UpdateConfiguration.
        :param operating_system: The operating_system of this UpdateConfiguration.
        :param targets: The targets of this UpdateConfiguration.
        :param windows: The windows of this UpdateConfiguration.
        """
        self.openapi_types = {
            'azure_virtual_machines': List[str],
            'duration': str,
            'linux': LinuxProperties,
            'non_azure_computer_names': List[str],
            'operating_system': OperatingSystemType,
            'targets': TargetProperties,
            'windows': WindowsProperties
        }

        self.attribute_map = {
            'azure_virtual_machines': 'azureVirtualMachines',
            'duration': 'duration',
            'linux': 'linux',
            'non_azure_computer_names': 'nonAzureComputerNames',
            'operating_system': 'operatingSystem',
            'targets': 'targets',
            'windows': 'windows'
        }

        self._azure_virtual_machines = azure_virtual_machines
        self._duration = duration
        self._linux = linux
        self._non_azure_computer_names = non_azure_computer_names
        self._operating_system = operating_system
        self._targets = targets
        self._windows = windows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateConfiguration of this UpdateConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def azure_virtual_machines(self):
        """Gets the azure_virtual_machines of this UpdateConfiguration.

        List of azure resource Ids for azure virtual machines targeted by the software update configuration.

        :return: The azure_virtual_machines of this UpdateConfiguration.
        :rtype: List[str]
        """
        return self._azure_virtual_machines

    @azure_virtual_machines.setter
    def azure_virtual_machines(self, azure_virtual_machines):
        """Sets the azure_virtual_machines of this UpdateConfiguration.

        List of azure resource Ids for azure virtual machines targeted by the software update configuration.

        :param azure_virtual_machines: The azure_virtual_machines of this UpdateConfiguration.
        :type azure_virtual_machines: List[str]
        """

        self._azure_virtual_machines = azure_virtual_machines

    @property
    def duration(self):
        """Gets the duration of this UpdateConfiguration.

        Maximum time allowed for the software update configuration run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601

        :return: The duration of this UpdateConfiguration.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this UpdateConfiguration.

        Maximum time allowed for the software update configuration run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601

        :param duration: The duration of this UpdateConfiguration.
        :type duration: str
        """

        self._duration = duration

    @property
    def linux(self):
        """Gets the linux of this UpdateConfiguration.


        :return: The linux of this UpdateConfiguration.
        :rtype: LinuxProperties
        """
        return self._linux

    @linux.setter
    def linux(self, linux):
        """Sets the linux of this UpdateConfiguration.


        :param linux: The linux of this UpdateConfiguration.
        :type linux: LinuxProperties
        """

        self._linux = linux

    @property
    def non_azure_computer_names(self):
        """Gets the non_azure_computer_names of this UpdateConfiguration.

        List of names of non-azure machines targeted by the software update configuration.

        :return: The non_azure_computer_names of this UpdateConfiguration.
        :rtype: List[str]
        """
        return self._non_azure_computer_names

    @non_azure_computer_names.setter
    def non_azure_computer_names(self, non_azure_computer_names):
        """Sets the non_azure_computer_names of this UpdateConfiguration.

        List of names of non-azure machines targeted by the software update configuration.

        :param non_azure_computer_names: The non_azure_computer_names of this UpdateConfiguration.
        :type non_azure_computer_names: List[str]
        """

        self._non_azure_computer_names = non_azure_computer_names

    @property
    def operating_system(self):
        """Gets the operating_system of this UpdateConfiguration.


        :return: The operating_system of this UpdateConfiguration.
        :rtype: OperatingSystemType
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this UpdateConfiguration.


        :param operating_system: The operating_system of this UpdateConfiguration.
        :type operating_system: OperatingSystemType
        """
        if operating_system is None:
            raise ValueError("Invalid value for `operating_system`, must not be `None`")

        self._operating_system = operating_system

    @property
    def targets(self):
        """Gets the targets of this UpdateConfiguration.


        :return: The targets of this UpdateConfiguration.
        :rtype: TargetProperties
        """
        return self._targets

    @targets.setter
    def targets(self, targets):
        """Sets the targets of this UpdateConfiguration.


        :param targets: The targets of this UpdateConfiguration.
        :type targets: TargetProperties
        """

        self._targets = targets

    @property
    def windows(self):
        """Gets the windows of this UpdateConfiguration.


        :return: The windows of this UpdateConfiguration.
        :rtype: WindowsProperties
        """
        return self._windows

    @windows.setter
    def windows(self, windows):
        """Sets the windows of this UpdateConfiguration.


        :param windows: The windows of this UpdateConfiguration.
        :type windows: WindowsProperties
        """

        self._windows = windows
