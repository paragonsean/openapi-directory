# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.collection_item_update_configuration import CollectionItemUpdateConfiguration
from openapi_server import util


class SoftwareUpdateConfigurationCollectionItemProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_time: datetime=None, frequency: str=None, last_modified_time: datetime=None, next_run: datetime=None, provisioning_state: str=None, start_time: datetime=None, update_configuration: CollectionItemUpdateConfiguration=None):
        """SoftwareUpdateConfigurationCollectionItemProperties - a model defined in OpenAPI

        :param creation_time: The creation_time of this SoftwareUpdateConfigurationCollectionItemProperties.
        :param frequency: The frequency of this SoftwareUpdateConfigurationCollectionItemProperties.
        :param last_modified_time: The last_modified_time of this SoftwareUpdateConfigurationCollectionItemProperties.
        :param next_run: The next_run of this SoftwareUpdateConfigurationCollectionItemProperties.
        :param provisioning_state: The provisioning_state of this SoftwareUpdateConfigurationCollectionItemProperties.
        :param start_time: The start_time of this SoftwareUpdateConfigurationCollectionItemProperties.
        :param update_configuration: The update_configuration of this SoftwareUpdateConfigurationCollectionItemProperties.
        """
        self.openapi_types = {
            'creation_time': datetime,
            'frequency': str,
            'last_modified_time': datetime,
            'next_run': datetime,
            'provisioning_state': str,
            'start_time': datetime,
            'update_configuration': CollectionItemUpdateConfiguration
        }

        self.attribute_map = {
            'creation_time': 'creationTime',
            'frequency': 'frequency',
            'last_modified_time': 'lastModifiedTime',
            'next_run': 'nextRun',
            'provisioning_state': 'provisioningState',
            'start_time': 'startTime',
            'update_configuration': 'updateConfiguration'
        }

        self._creation_time = creation_time
        self._frequency = frequency
        self._last_modified_time = last_modified_time
        self._next_run = next_run
        self._provisioning_state = provisioning_state
        self._start_time = start_time
        self._update_configuration = update_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SoftwareUpdateConfigurationCollectionItemProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The softwareUpdateConfigurationCollectionItemProperties of this SoftwareUpdateConfigurationCollectionItemProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_time(self):
        """Gets the creation_time of this SoftwareUpdateConfigurationCollectionItemProperties.

        Creation time of the software update configuration, which only appears in the response.

        :return: The creation_time of this SoftwareUpdateConfigurationCollectionItemProperties.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this SoftwareUpdateConfigurationCollectionItemProperties.

        Creation time of the software update configuration, which only appears in the response.

        :param creation_time: The creation_time of this SoftwareUpdateConfigurationCollectionItemProperties.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def frequency(self):
        """Gets the frequency of this SoftwareUpdateConfigurationCollectionItemProperties.

        Gets or sets the frequency of the schedule.

        :return: The frequency of this SoftwareUpdateConfigurationCollectionItemProperties.
        :rtype: str
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this SoftwareUpdateConfigurationCollectionItemProperties.

        Gets or sets the frequency of the schedule.

        :param frequency: The frequency of this SoftwareUpdateConfigurationCollectionItemProperties.
        :type frequency: str
        """
        allowed_values = ["OneTime", "Day", "Hour", "Week", "Month", "Minute"]  # noqa: E501
        if frequency not in allowed_values:
            raise ValueError(
                "Invalid value for `frequency` ({0}), must be one of {1}"
                .format(frequency, allowed_values)
            )

        self._frequency = frequency

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this SoftwareUpdateConfigurationCollectionItemProperties.

        Last time software update configuration was modified, which only appears in the response.

        :return: The last_modified_time of this SoftwareUpdateConfigurationCollectionItemProperties.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this SoftwareUpdateConfigurationCollectionItemProperties.

        Last time software update configuration was modified, which only appears in the response.

        :param last_modified_time: The last_modified_time of this SoftwareUpdateConfigurationCollectionItemProperties.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def next_run(self):
        """Gets the next_run of this SoftwareUpdateConfigurationCollectionItemProperties.

        ext run time of the update.

        :return: The next_run of this SoftwareUpdateConfigurationCollectionItemProperties.
        :rtype: datetime
        """
        return self._next_run

    @next_run.setter
    def next_run(self, next_run):
        """Sets the next_run of this SoftwareUpdateConfigurationCollectionItemProperties.

        ext run time of the update.

        :param next_run: The next_run of this SoftwareUpdateConfigurationCollectionItemProperties.
        :type next_run: datetime
        """

        self._next_run = next_run

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this SoftwareUpdateConfigurationCollectionItemProperties.

        Provisioning state for the software update configuration, which only appears in the response.

        :return: The provisioning_state of this SoftwareUpdateConfigurationCollectionItemProperties.
        :rtype: str
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this SoftwareUpdateConfigurationCollectionItemProperties.

        Provisioning state for the software update configuration, which only appears in the response.

        :param provisioning_state: The provisioning_state of this SoftwareUpdateConfigurationCollectionItemProperties.
        :type provisioning_state: str
        """

        self._provisioning_state = provisioning_state

    @property
    def start_time(self):
        """Gets the start_time of this SoftwareUpdateConfigurationCollectionItemProperties.

        the start time of the update.

        :return: The start_time of this SoftwareUpdateConfigurationCollectionItemProperties.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this SoftwareUpdateConfigurationCollectionItemProperties.

        the start time of the update.

        :param start_time: The start_time of this SoftwareUpdateConfigurationCollectionItemProperties.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def update_configuration(self):
        """Gets the update_configuration of this SoftwareUpdateConfigurationCollectionItemProperties.


        :return: The update_configuration of this SoftwareUpdateConfigurationCollectionItemProperties.
        :rtype: CollectionItemUpdateConfiguration
        """
        return self._update_configuration

    @update_configuration.setter
    def update_configuration(self, update_configuration):
        """Sets the update_configuration of this SoftwareUpdateConfigurationCollectionItemProperties.


        :param update_configuration: The update_configuration of this SoftwareUpdateConfigurationCollectionItemProperties.
        :type update_configuration: CollectionItemUpdateConfiguration
        """

        self._update_configuration = update_configuration
