# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag_settings_properties import TagSettingsProperties
from openapi_server import util


class AzureQueryProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, locations: List[str]=None, scope: List[str]=None, tag_settings: TagSettingsProperties=None):
        """AzureQueryProperties - a model defined in OpenAPI

        :param locations: The locations of this AzureQueryProperties.
        :param scope: The scope of this AzureQueryProperties.
        :param tag_settings: The tag_settings of this AzureQueryProperties.
        """
        self.openapi_types = {
            'locations': List[str],
            'scope': List[str],
            'tag_settings': TagSettingsProperties
        }

        self.attribute_map = {
            'locations': 'locations',
            'scope': 'scope',
            'tag_settings': 'tagSettings'
        }

        self._locations = locations
        self._scope = scope
        self._tag_settings = tag_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AzureQueryProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AzureQueryProperties of this AzureQueryProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def locations(self):
        """Gets the locations of this AzureQueryProperties.

        List of locations to scope the query to.

        :return: The locations of this AzureQueryProperties.
        :rtype: List[str]
        """
        return self._locations

    @locations.setter
    def locations(self, locations):
        """Sets the locations of this AzureQueryProperties.

        List of locations to scope the query to.

        :param locations: The locations of this AzureQueryProperties.
        :type locations: List[str]
        """

        self._locations = locations

    @property
    def scope(self):
        """Gets the scope of this AzureQueryProperties.

        List of Subscription or Resource Group ARM Ids.

        :return: The scope of this AzureQueryProperties.
        :rtype: List[str]
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this AzureQueryProperties.

        List of Subscription or Resource Group ARM Ids.

        :param scope: The scope of this AzureQueryProperties.
        :type scope: List[str]
        """

        self._scope = scope

    @property
    def tag_settings(self):
        """Gets the tag_settings of this AzureQueryProperties.


        :return: The tag_settings of this AzureQueryProperties.
        :rtype: TagSettingsProperties
        """
        return self._tag_settings

    @tag_settings.setter
    def tag_settings(self, tag_settings):
        """Sets the tag_settings of this AzureQueryProperties.


        :param tag_settings: The tag_settings of this AzureQueryProperties.
        :type tag_settings: TagSettingsProperties
        """

        self._tag_settings = tag_settings
