/*
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ScheduleProperties;
import org.openapitools.client.model.SoftwareUpdateConfigurationTasks;
import org.openapitools.client.model.SoftwareUpdateConfigurationsListDefaultResponse;
import org.openapitools.client.model.UpdateConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Software update configuration properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:04:23.882201-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SoftwareUpdateConfigurationProperties {
  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private SoftwareUpdateConfigurationsListDefaultResponse error;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "lastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private String lastModifiedBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "lastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_PROVISIONING_STATE = "provisioningState";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_STATE)
  private String provisioningState;

  public static final String SERIALIZED_NAME_SCHEDULE_INFO = "scheduleInfo";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_INFO)
  private ScheduleProperties scheduleInfo;

  public static final String SERIALIZED_NAME_TASKS = "tasks";
  @SerializedName(SERIALIZED_NAME_TASKS)
  private SoftwareUpdateConfigurationTasks tasks;

  public static final String SERIALIZED_NAME_UPDATE_CONFIGURATION = "updateConfiguration";
  @SerializedName(SERIALIZED_NAME_UPDATE_CONFIGURATION)
  private UpdateConfiguration updateConfiguration;

  public SoftwareUpdateConfigurationProperties() {
  }

  public SoftwareUpdateConfigurationProperties(
     String createdBy, 
     OffsetDateTime creationTime, 
     String lastModifiedBy, 
     OffsetDateTime lastModifiedTime, 
     String provisioningState
  ) {
    this();
    this.createdBy = createdBy;
    this.creationTime = creationTime;
    this.lastModifiedBy = lastModifiedBy;
    this.lastModifiedTime = lastModifiedTime;
    this.provisioningState = provisioningState;
  }

  /**
   * CreatedBy property, which only appears in the response.
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }



  /**
   * Creation time of the resource, which only appears in the response.
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }



  public SoftwareUpdateConfigurationProperties error(SoftwareUpdateConfigurationsListDefaultResponse error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public SoftwareUpdateConfigurationsListDefaultResponse getError() {
    return error;
  }

  public void setError(SoftwareUpdateConfigurationsListDefaultResponse error) {
    this.error = error;
  }


  /**
   * LastModifiedBy property, which only appears in the response.
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public String getLastModifiedBy() {
    return lastModifiedBy;
  }



  /**
   * Last time resource was modified, which only appears in the response.
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }



  /**
   * Provisioning state for the software update configuration, which only appears in the response.
   * @return provisioningState
   */
  @javax.annotation.Nullable
  public String getProvisioningState() {
    return provisioningState;
  }



  public SoftwareUpdateConfigurationProperties scheduleInfo(ScheduleProperties scheduleInfo) {
    this.scheduleInfo = scheduleInfo;
    return this;
  }

  /**
   * Get scheduleInfo
   * @return scheduleInfo
   */
  @javax.annotation.Nonnull
  public ScheduleProperties getScheduleInfo() {
    return scheduleInfo;
  }

  public void setScheduleInfo(ScheduleProperties scheduleInfo) {
    this.scheduleInfo = scheduleInfo;
  }


  public SoftwareUpdateConfigurationProperties tasks(SoftwareUpdateConfigurationTasks tasks) {
    this.tasks = tasks;
    return this;
  }

  /**
   * Get tasks
   * @return tasks
   */
  @javax.annotation.Nullable
  public SoftwareUpdateConfigurationTasks getTasks() {
    return tasks;
  }

  public void setTasks(SoftwareUpdateConfigurationTasks tasks) {
    this.tasks = tasks;
  }


  public SoftwareUpdateConfigurationProperties updateConfiguration(UpdateConfiguration updateConfiguration) {
    this.updateConfiguration = updateConfiguration;
    return this;
  }

  /**
   * Get updateConfiguration
   * @return updateConfiguration
   */
  @javax.annotation.Nonnull
  public UpdateConfiguration getUpdateConfiguration() {
    return updateConfiguration;
  }

  public void setUpdateConfiguration(UpdateConfiguration updateConfiguration) {
    this.updateConfiguration = updateConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SoftwareUpdateConfigurationProperties softwareUpdateConfigurationProperties = (SoftwareUpdateConfigurationProperties) o;
    return Objects.equals(this.createdBy, softwareUpdateConfigurationProperties.createdBy) &&
        Objects.equals(this.creationTime, softwareUpdateConfigurationProperties.creationTime) &&
        Objects.equals(this.error, softwareUpdateConfigurationProperties.error) &&
        Objects.equals(this.lastModifiedBy, softwareUpdateConfigurationProperties.lastModifiedBy) &&
        Objects.equals(this.lastModifiedTime, softwareUpdateConfigurationProperties.lastModifiedTime) &&
        Objects.equals(this.provisioningState, softwareUpdateConfigurationProperties.provisioningState) &&
        Objects.equals(this.scheduleInfo, softwareUpdateConfigurationProperties.scheduleInfo) &&
        Objects.equals(this.tasks, softwareUpdateConfigurationProperties.tasks) &&
        Objects.equals(this.updateConfiguration, softwareUpdateConfigurationProperties.updateConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdBy, creationTime, error, lastModifiedBy, lastModifiedTime, provisioningState, scheduleInfo, tasks, updateConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SoftwareUpdateConfigurationProperties {\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    provisioningState: ").append(toIndentedString(provisioningState)).append("\n");
    sb.append("    scheduleInfo: ").append(toIndentedString(scheduleInfo)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("    updateConfiguration: ").append(toIndentedString(updateConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createdBy");
    openapiFields.add("creationTime");
    openapiFields.add("error");
    openapiFields.add("lastModifiedBy");
    openapiFields.add("lastModifiedTime");
    openapiFields.add("provisioningState");
    openapiFields.add("scheduleInfo");
    openapiFields.add("tasks");
    openapiFields.add("updateConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("scheduleInfo");
    openapiRequiredFields.add("updateConfiguration");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SoftwareUpdateConfigurationProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SoftwareUpdateConfigurationProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SoftwareUpdateConfigurationProperties is not found in the empty JSON string", SoftwareUpdateConfigurationProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SoftwareUpdateConfigurationProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SoftwareUpdateConfigurationProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SoftwareUpdateConfigurationProperties.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) && !jsonObj.get("createdBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdBy").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        SoftwareUpdateConfigurationsListDefaultResponse.validateJsonElement(jsonObj.get("error"));
      }
      if ((jsonObj.get("lastModifiedBy") != null && !jsonObj.get("lastModifiedBy").isJsonNull()) && !jsonObj.get("lastModifiedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedBy").toString()));
      }
      if ((jsonObj.get("provisioningState") != null && !jsonObj.get("provisioningState").isJsonNull()) && !jsonObj.get("provisioningState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provisioningState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provisioningState").toString()));
      }
      // validate the required field `scheduleInfo`
      ScheduleProperties.validateJsonElement(jsonObj.get("scheduleInfo"));
      // validate the optional field `tasks`
      if (jsonObj.get("tasks") != null && !jsonObj.get("tasks").isJsonNull()) {
        SoftwareUpdateConfigurationTasks.validateJsonElement(jsonObj.get("tasks"));
      }
      // validate the required field `updateConfiguration`
      UpdateConfiguration.validateJsonElement(jsonObj.get("updateConfiguration"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SoftwareUpdateConfigurationProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SoftwareUpdateConfigurationProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SoftwareUpdateConfigurationProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SoftwareUpdateConfigurationProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<SoftwareUpdateConfigurationProperties>() {
           @Override
           public void write(JsonWriter out, SoftwareUpdateConfigurationProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SoftwareUpdateConfigurationProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SoftwareUpdateConfigurationProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SoftwareUpdateConfigurationProperties
   * @throws IOException if the JSON string is invalid with respect to SoftwareUpdateConfigurationProperties
   */
  public static SoftwareUpdateConfigurationProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SoftwareUpdateConfigurationProperties.class);
  }

  /**
   * Convert an instance of SoftwareUpdateConfigurationProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

