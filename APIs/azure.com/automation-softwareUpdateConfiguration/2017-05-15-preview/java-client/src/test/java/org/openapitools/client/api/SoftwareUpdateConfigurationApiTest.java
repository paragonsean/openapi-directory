/*
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SoftwareUpdateConfiguration;
import org.openapitools.client.model.SoftwareUpdateConfigurationListResult;
import org.openapitools.client.model.SoftwareUpdateConfigurationsListDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SoftwareUpdateConfigurationApi
 */
@Disabled
public class SoftwareUpdateConfigurationApiTest {

    private final SoftwareUpdateConfigurationApi api = new SoftwareUpdateConfigurationApi();

    /**
     * Create a new software update configuration with the name given in the URI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void softwareUpdateConfigurationsCreateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String automationAccountName = null;
        String softwareUpdateConfigurationName = null;
        String apiVersion = null;
        SoftwareUpdateConfiguration parameters = null;
        String clientRequestId = null;
        SoftwareUpdateConfiguration response = api.softwareUpdateConfigurationsCreate(subscriptionId, resourceGroupName, automationAccountName, softwareUpdateConfigurationName, apiVersion, parameters, clientRequestId);
        // TODO: test validations
    }

    /**
     * delete a specific software update configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void softwareUpdateConfigurationsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String automationAccountName = null;
        String softwareUpdateConfigurationName = null;
        String apiVersion = null;
        String clientRequestId = null;
        api.softwareUpdateConfigurationsDelete(subscriptionId, resourceGroupName, automationAccountName, softwareUpdateConfigurationName, apiVersion, clientRequestId);
        // TODO: test validations
    }

    /**
     * Get a single software update configuration by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void softwareUpdateConfigurationsGetByNameTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String automationAccountName = null;
        String softwareUpdateConfigurationName = null;
        String apiVersion = null;
        String clientRequestId = null;
        SoftwareUpdateConfiguration response = api.softwareUpdateConfigurationsGetByName(subscriptionId, resourceGroupName, automationAccountName, softwareUpdateConfigurationName, apiVersion, clientRequestId);
        // TODO: test validations
    }

    /**
     * Get all software update configurations for the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void softwareUpdateConfigurationsListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String automationAccountName = null;
        String apiVersion = null;
        String clientRequestId = null;
        String $filter = null;
        SoftwareUpdateConfigurationListResult response = api.softwareUpdateConfigurationsList(subscriptionId, resourceGroupName, automationAccountName, apiVersion, clientRequestId, $filter);
        // TODO: test validations
    }

}
