/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILinuxProperties.h
 *
 * Linux specific update configuration.
 */

#ifndef OAILinuxProperties_H
#define OAILinuxProperties_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILinuxProperties : public OAIObject {
public:
    OAILinuxProperties();
    OAILinuxProperties(QString json);
    ~OAILinuxProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getExcludedPackageNameMasks() const;
    void setExcludedPackageNameMasks(const QList<QString> &excluded_package_name_masks);
    bool is_excluded_package_name_masks_Set() const;
    bool is_excluded_package_name_masks_Valid() const;

    QString getIncludedPackageClassifications() const;
    void setIncludedPackageClassifications(const QString &included_package_classifications);
    bool is_included_package_classifications_Set() const;
    bool is_included_package_classifications_Valid() const;

    QList<QString> getIncludedPackageNameMasks() const;
    void setIncludedPackageNameMasks(const QList<QString> &included_package_name_masks);
    bool is_included_package_name_masks_Set() const;
    bool is_included_package_name_masks_Valid() const;

    QString getRebootSetting() const;
    void setRebootSetting(const QString &reboot_setting);
    bool is_reboot_setting_Set() const;
    bool is_reboot_setting_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_excluded_package_name_masks;
    bool m_excluded_package_name_masks_isSet;
    bool m_excluded_package_name_masks_isValid;

    QString m_included_package_classifications;
    bool m_included_package_classifications_isSet;
    bool m_included_package_classifications_isValid;

    QList<QString> m_included_package_name_masks;
    bool m_included_package_name_masks_isSet;
    bool m_included_package_name_masks_isValid;

    QString m_reboot_setting;
    bool m_reboot_setting_isSet;
    bool m_reboot_setting_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILinuxProperties)

#endif // OAILinuxProperties_H
