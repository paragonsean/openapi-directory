/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOperatingSystemType.h
 *
 * Target operating system for the software update configuration.
 */

#ifndef OAIOperatingSystemType_H
#define OAIOperatingSystemType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOperatingSystemType : public OAIEnum {
public:
    OAIOperatingSystemType();
    OAIOperatingSystemType(QString json);
    ~OAIOperatingSystemType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIOperatingSystemType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        WINDOWS, 
        LINUX
    };
    OAIOperatingSystemType::eOAIOperatingSystemType getValue() const;
    void setValue(const OAIOperatingSystemType::eOAIOperatingSystemType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIOperatingSystemType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOperatingSystemType)

#endif // OAIOperatingSystemType_H
