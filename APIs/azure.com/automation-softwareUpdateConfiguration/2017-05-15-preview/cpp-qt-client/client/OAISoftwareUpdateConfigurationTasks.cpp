/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISoftwareUpdateConfigurationTasks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISoftwareUpdateConfigurationTasks::OAISoftwareUpdateConfigurationTasks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISoftwareUpdateConfigurationTasks::OAISoftwareUpdateConfigurationTasks() {
    this->initializeModel();
}

OAISoftwareUpdateConfigurationTasks::~OAISoftwareUpdateConfigurationTasks() {}

void OAISoftwareUpdateConfigurationTasks::initializeModel() {

    m_post_task_isSet = false;
    m_post_task_isValid = false;

    m_pre_task_isSet = false;
    m_pre_task_isValid = false;
}

void OAISoftwareUpdateConfigurationTasks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISoftwareUpdateConfigurationTasks::fromJsonObject(QJsonObject json) {

    m_post_task_isValid = ::OpenAPI::fromJsonValue(m_post_task, json[QString("postTask")]);
    m_post_task_isSet = !json[QString("postTask")].isNull() && m_post_task_isValid;

    m_pre_task_isValid = ::OpenAPI::fromJsonValue(m_pre_task, json[QString("preTask")]);
    m_pre_task_isSet = !json[QString("preTask")].isNull() && m_pre_task_isValid;
}

QString OAISoftwareUpdateConfigurationTasks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISoftwareUpdateConfigurationTasks::asJsonObject() const {
    QJsonObject obj;
    if (m_post_task.isSet()) {
        obj.insert(QString("postTask"), ::OpenAPI::toJsonValue(m_post_task));
    }
    if (m_pre_task.isSet()) {
        obj.insert(QString("preTask"), ::OpenAPI::toJsonValue(m_pre_task));
    }
    return obj;
}

OAITaskProperties OAISoftwareUpdateConfigurationTasks::getPostTask() const {
    return m_post_task;
}
void OAISoftwareUpdateConfigurationTasks::setPostTask(const OAITaskProperties &post_task) {
    m_post_task = post_task;
    m_post_task_isSet = true;
}

bool OAISoftwareUpdateConfigurationTasks::is_post_task_Set() const{
    return m_post_task_isSet;
}

bool OAISoftwareUpdateConfigurationTasks::is_post_task_Valid() const{
    return m_post_task_isValid;
}

OAITaskProperties OAISoftwareUpdateConfigurationTasks::getPreTask() const {
    return m_pre_task;
}
void OAISoftwareUpdateConfigurationTasks::setPreTask(const OAITaskProperties &pre_task) {
    m_pre_task = pre_task;
    m_pre_task_isSet = true;
}

bool OAISoftwareUpdateConfigurationTasks::is_pre_task_Set() const{
    return m_pre_task_isSet;
}

bool OAISoftwareUpdateConfigurationTasks::is_pre_task_Valid() const{
    return m_pre_task_isValid;
}

bool OAISoftwareUpdateConfigurationTasks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_post_task.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pre_task.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISoftwareUpdateConfigurationTasks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
