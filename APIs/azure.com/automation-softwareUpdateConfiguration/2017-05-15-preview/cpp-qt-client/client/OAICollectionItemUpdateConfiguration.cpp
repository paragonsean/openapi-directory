/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICollectionItemUpdateConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICollectionItemUpdateConfiguration::OAICollectionItemUpdateConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICollectionItemUpdateConfiguration::OAICollectionItemUpdateConfiguration() {
    this->initializeModel();
}

OAICollectionItemUpdateConfiguration::~OAICollectionItemUpdateConfiguration() {}

void OAICollectionItemUpdateConfiguration::initializeModel() {

    m_azure_virtual_machines_isSet = false;
    m_azure_virtual_machines_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;
}

void OAICollectionItemUpdateConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICollectionItemUpdateConfiguration::fromJsonObject(QJsonObject json) {

    m_azure_virtual_machines_isValid = ::OpenAPI::fromJsonValue(m_azure_virtual_machines, json[QString("azureVirtualMachines")]);
    m_azure_virtual_machines_isSet = !json[QString("azureVirtualMachines")].isNull() && m_azure_virtual_machines_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;
}

QString OAICollectionItemUpdateConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICollectionItemUpdateConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_azure_virtual_machines.size() > 0) {
        obj.insert(QString("azureVirtualMachines"), ::OpenAPI::toJsonValue(m_azure_virtual_machines));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    return obj;
}

QList<QString> OAICollectionItemUpdateConfiguration::getAzureVirtualMachines() const {
    return m_azure_virtual_machines;
}
void OAICollectionItemUpdateConfiguration::setAzureVirtualMachines(const QList<QString> &azure_virtual_machines) {
    m_azure_virtual_machines = azure_virtual_machines;
    m_azure_virtual_machines_isSet = true;
}

bool OAICollectionItemUpdateConfiguration::is_azure_virtual_machines_Set() const{
    return m_azure_virtual_machines_isSet;
}

bool OAICollectionItemUpdateConfiguration::is_azure_virtual_machines_Valid() const{
    return m_azure_virtual_machines_isValid;
}

QString OAICollectionItemUpdateConfiguration::getDuration() const {
    return m_duration;
}
void OAICollectionItemUpdateConfiguration::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAICollectionItemUpdateConfiguration::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAICollectionItemUpdateConfiguration::is_duration_Valid() const{
    return m_duration_isValid;
}

bool OAICollectionItemUpdateConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_azure_virtual_machines.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICollectionItemUpdateConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
