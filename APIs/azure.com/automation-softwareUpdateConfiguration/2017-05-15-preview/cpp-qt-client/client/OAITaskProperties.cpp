/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITaskProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITaskProperties::OAITaskProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITaskProperties::OAITaskProperties() {
    this->initializeModel();
}

OAITaskProperties::~OAITaskProperties() {}

void OAITaskProperties::initializeModel() {

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;
}

void OAITaskProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITaskProperties::fromJsonObject(QJsonObject json) {

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;
}

QString OAITaskProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITaskProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    return obj;
}

QMap<QString, QString> OAITaskProperties::getParameters() const {
    return m_parameters;
}
void OAITaskProperties::setParameters(const QMap<QString, QString> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAITaskProperties::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAITaskProperties::is_parameters_Valid() const{
    return m_parameters_isValid;
}

QString OAITaskProperties::getSource() const {
    return m_source;
}
void OAITaskProperties::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAITaskProperties::is_source_Set() const{
    return m_source_isSet;
}

bool OAITaskProperties::is_source_Valid() const{
    return m_source_isValid;
}

bool OAITaskProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITaskProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
