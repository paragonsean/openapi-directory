/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SoftwareUpdateConfiguration from '../model/SoftwareUpdateConfiguration';
import SoftwareUpdateConfigurationListResult from '../model/SoftwareUpdateConfigurationListResult';
import SoftwareUpdateConfigurationsListDefaultResponse from '../model/SoftwareUpdateConfigurationsListDefaultResponse';

/**
* SoftwareUpdateConfiguration service.
* @module api/SoftwareUpdateConfigurationApi
* @version 2017-05-15-preview
*/
export default class SoftwareUpdateConfigurationApi {

    /**
    * Constructs a new SoftwareUpdateConfigurationApi. 
    * @alias module:api/SoftwareUpdateConfigurationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the softwareUpdateConfigurationsCreate operation.
     * @callback module:api/SoftwareUpdateConfigurationApi~softwareUpdateConfigurationsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SoftwareUpdateConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new software update configuration with the name given in the URI.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} softwareUpdateConfigurationName The name of the software update configuration to be created.
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/SoftwareUpdateConfiguration} parameters Request body.
     * @param {Object} opts Optional parameters
     * @param {String} [clientRequestId] Identifies this specific client request.
     * @param {module:api/SoftwareUpdateConfigurationApi~softwareUpdateConfigurationsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SoftwareUpdateConfiguration}
     */
    softwareUpdateConfigurationsCreate(subscriptionId, resourceGroupName, automationAccountName, softwareUpdateConfigurationName, apiVersion, parameters, opts, callback) {
      opts = opts || {};
      let postBody = parameters;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling softwareUpdateConfigurationsCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling softwareUpdateConfigurationsCreate");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling softwareUpdateConfigurationsCreate");
      }
      // verify the required parameter 'softwareUpdateConfigurationName' is set
      if (softwareUpdateConfigurationName === undefined || softwareUpdateConfigurationName === null) {
        throw new Error("Missing the required parameter 'softwareUpdateConfigurationName' when calling softwareUpdateConfigurationsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling softwareUpdateConfigurationsCreate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling softwareUpdateConfigurationsCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'softwareUpdateConfigurationName': softwareUpdateConfigurationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
        'clientRequestId': opts['clientRequestId']
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SoftwareUpdateConfiguration;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurations/{softwareUpdateConfigurationName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the softwareUpdateConfigurationsDelete operation.
     * @callback module:api/SoftwareUpdateConfigurationApi~softwareUpdateConfigurationsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete a specific software update configuration.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} softwareUpdateConfigurationName The name of the software update configuration to be created.
     * @param {String} apiVersion Client Api Version.
     * @param {Object} opts Optional parameters
     * @param {String} [clientRequestId] Identifies this specific client request.
     * @param {module:api/SoftwareUpdateConfigurationApi~softwareUpdateConfigurationsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    softwareUpdateConfigurationsDelete(subscriptionId, resourceGroupName, automationAccountName, softwareUpdateConfigurationName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling softwareUpdateConfigurationsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling softwareUpdateConfigurationsDelete");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling softwareUpdateConfigurationsDelete");
      }
      // verify the required parameter 'softwareUpdateConfigurationName' is set
      if (softwareUpdateConfigurationName === undefined || softwareUpdateConfigurationName === null) {
        throw new Error("Missing the required parameter 'softwareUpdateConfigurationName' when calling softwareUpdateConfigurationsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling softwareUpdateConfigurationsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'softwareUpdateConfigurationName': softwareUpdateConfigurationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
        'clientRequestId': opts['clientRequestId']
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurations/{softwareUpdateConfigurationName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the softwareUpdateConfigurationsGetByName operation.
     * @callback module:api/SoftwareUpdateConfigurationApi~softwareUpdateConfigurationsGetByNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SoftwareUpdateConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a single software update configuration by name.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} softwareUpdateConfigurationName The name of the software update configuration to be created.
     * @param {String} apiVersion Client Api Version.
     * @param {Object} opts Optional parameters
     * @param {String} [clientRequestId] Identifies this specific client request.
     * @param {module:api/SoftwareUpdateConfigurationApi~softwareUpdateConfigurationsGetByNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SoftwareUpdateConfiguration}
     */
    softwareUpdateConfigurationsGetByName(subscriptionId, resourceGroupName, automationAccountName, softwareUpdateConfigurationName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling softwareUpdateConfigurationsGetByName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling softwareUpdateConfigurationsGetByName");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling softwareUpdateConfigurationsGetByName");
      }
      // verify the required parameter 'softwareUpdateConfigurationName' is set
      if (softwareUpdateConfigurationName === undefined || softwareUpdateConfigurationName === null) {
        throw new Error("Missing the required parameter 'softwareUpdateConfigurationName' when calling softwareUpdateConfigurationsGetByName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling softwareUpdateConfigurationsGetByName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName,
        'softwareUpdateConfigurationName': softwareUpdateConfigurationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
        'clientRequestId': opts['clientRequestId']
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SoftwareUpdateConfiguration;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurations/{softwareUpdateConfigurationName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the softwareUpdateConfigurationsList operation.
     * @callback module:api/SoftwareUpdateConfigurationApi~softwareUpdateConfigurationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SoftwareUpdateConfigurationListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all software update configurations for the account.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Name of an Azure Resource group.
     * @param {String} automationAccountName The name of the automation account.
     * @param {String} apiVersion Client Api Version.
     * @param {Object} opts Optional parameters
     * @param {String} [clientRequestId] Identifies this specific client request.
     * @param {String} [filter] The filter to apply on the operation.
     * @param {module:api/SoftwareUpdateConfigurationApi~softwareUpdateConfigurationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SoftwareUpdateConfigurationListResult}
     */
    softwareUpdateConfigurationsList(subscriptionId, resourceGroupName, automationAccountName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling softwareUpdateConfigurationsList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling softwareUpdateConfigurationsList");
      }
      // verify the required parameter 'automationAccountName' is set
      if (automationAccountName === undefined || automationAccountName === null) {
        throw new Error("Missing the required parameter 'automationAccountName' when calling softwareUpdateConfigurationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling softwareUpdateConfigurationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'automationAccountName': automationAccountName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$filter': opts['filter']
      };
      let headerParams = {
        'clientRequestId': opts['clientRequestId']
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SoftwareUpdateConfigurationListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
