/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaskProperties from './TaskProperties';

/**
 * The SoftwareUpdateConfigurationTasks model module.
 * @module model/SoftwareUpdateConfigurationTasks
 * @version 2017-05-15-preview
 */
class SoftwareUpdateConfigurationTasks {
    /**
     * Constructs a new <code>SoftwareUpdateConfigurationTasks</code>.
     * Task properties of the software update configuration.
     * @alias module:model/SoftwareUpdateConfigurationTasks
     */
    constructor() { 
        
        SoftwareUpdateConfigurationTasks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SoftwareUpdateConfigurationTasks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SoftwareUpdateConfigurationTasks} obj Optional instance to populate.
     * @return {module:model/SoftwareUpdateConfigurationTasks} The populated <code>SoftwareUpdateConfigurationTasks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SoftwareUpdateConfigurationTasks();

            if (data.hasOwnProperty('postTask')) {
                obj['postTask'] = TaskProperties.constructFromObject(data['postTask']);
            }
            if (data.hasOwnProperty('preTask')) {
                obj['preTask'] = TaskProperties.constructFromObject(data['preTask']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SoftwareUpdateConfigurationTasks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SoftwareUpdateConfigurationTasks</code>.
     */
    static validateJSON(data) {
        // validate the optional field `postTask`
        if (data['postTask']) { // data not null
          TaskProperties.validateJSON(data['postTask']);
        }
        // validate the optional field `preTask`
        if (data['preTask']) { // data not null
          TaskProperties.validateJSON(data['preTask']);
        }

        return true;
    }


}



/**
 * @member {module:model/TaskProperties} postTask
 */
SoftwareUpdateConfigurationTasks.prototype['postTask'] = undefined;

/**
 * @member {module:model/TaskProperties} preTask
 */
SoftwareUpdateConfigurationTasks.prototype['preTask'] = undefined;






export default SoftwareUpdateConfigurationTasks;

