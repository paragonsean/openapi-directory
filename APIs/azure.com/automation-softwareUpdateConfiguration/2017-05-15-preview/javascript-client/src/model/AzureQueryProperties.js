/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TagSettingsProperties from './TagSettingsProperties';

/**
 * The AzureQueryProperties model module.
 * @module model/AzureQueryProperties
 * @version 2017-05-15-preview
 */
class AzureQueryProperties {
    /**
     * Constructs a new <code>AzureQueryProperties</code>.
     * Azure query for the update configuration.
     * @alias module:model/AzureQueryProperties
     */
    constructor() { 
        
        AzureQueryProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AzureQueryProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AzureQueryProperties} obj Optional instance to populate.
     * @return {module:model/AzureQueryProperties} The populated <code>AzureQueryProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AzureQueryProperties();

            if (data.hasOwnProperty('locations')) {
                obj['locations'] = ApiClient.convertToType(data['locations'], ['String']);
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], ['String']);
            }
            if (data.hasOwnProperty('tagSettings')) {
                obj['tagSettings'] = TagSettingsProperties.constructFromObject(data['tagSettings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AzureQueryProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AzureQueryProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['locations'])) {
            throw new Error("Expected the field `locations` to be an array in the JSON data but got " + data['locations']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['scope'])) {
            throw new Error("Expected the field `scope` to be an array in the JSON data but got " + data['scope']);
        }
        // validate the optional field `tagSettings`
        if (data['tagSettings']) { // data not null
          TagSettingsProperties.validateJSON(data['tagSettings']);
        }

        return true;
    }


}



/**
 * List of locations to scope the query to.
 * @member {Array.<String>} locations
 */
AzureQueryProperties.prototype['locations'] = undefined;

/**
 * List of Subscription or Resource Group ARM Ids.
 * @member {Array.<String>} scope
 */
AzureQueryProperties.prototype['scope'] = undefined;

/**
 * @member {module:model/TagSettingsProperties} tagSettings
 */
AzureQueryProperties.prototype['tagSettings'] = undefined;






export default AzureQueryProperties;

