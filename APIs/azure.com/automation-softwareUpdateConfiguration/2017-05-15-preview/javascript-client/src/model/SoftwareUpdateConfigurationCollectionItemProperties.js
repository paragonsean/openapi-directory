/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CollectionItemUpdateConfiguration from './CollectionItemUpdateConfiguration';

/**
 * The SoftwareUpdateConfigurationCollectionItemProperties model module.
 * @module model/SoftwareUpdateConfigurationCollectionItemProperties
 * @version 2017-05-15-preview
 */
class SoftwareUpdateConfigurationCollectionItemProperties {
    /**
     * Constructs a new <code>SoftwareUpdateConfigurationCollectionItemProperties</code>.
     * Software update configuration collection item properties.
     * @alias module:model/SoftwareUpdateConfigurationCollectionItemProperties
     */
    constructor() { 
        
        SoftwareUpdateConfigurationCollectionItemProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SoftwareUpdateConfigurationCollectionItemProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SoftwareUpdateConfigurationCollectionItemProperties} obj Optional instance to populate.
     * @return {module:model/SoftwareUpdateConfigurationCollectionItemProperties} The populated <code>SoftwareUpdateConfigurationCollectionItemProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SoftwareUpdateConfigurationCollectionItemProperties();

            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('frequency')) {
                obj['frequency'] = ApiClient.convertToType(data['frequency'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('nextRun')) {
                obj['nextRun'] = ApiClient.convertToType(data['nextRun'], 'Date');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('updateConfiguration')) {
                obj['updateConfiguration'] = CollectionItemUpdateConfiguration.constructFromObject(data['updateConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SoftwareUpdateConfigurationCollectionItemProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SoftwareUpdateConfigurationCollectionItemProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['frequency'] && !(typeof data['frequency'] === 'string' || data['frequency'] instanceof String)) {
            throw new Error("Expected the field `frequency` to be a primitive type in the JSON string but got " + data['frequency']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `updateConfiguration`
        if (data['updateConfiguration']) { // data not null
          CollectionItemUpdateConfiguration.validateJSON(data['updateConfiguration']);
        }

        return true;
    }


}



/**
 * Creation time of the software update configuration, which only appears in the response.
 * @member {Date} creationTime
 */
SoftwareUpdateConfigurationCollectionItemProperties.prototype['creationTime'] = undefined;

/**
 * Gets or sets the frequency of the schedule.
 * @member {module:model/SoftwareUpdateConfigurationCollectionItemProperties.FrequencyEnum} frequency
 */
SoftwareUpdateConfigurationCollectionItemProperties.prototype['frequency'] = undefined;

/**
 * Last time software update configuration was modified, which only appears in the response.
 * @member {Date} lastModifiedTime
 */
SoftwareUpdateConfigurationCollectionItemProperties.prototype['lastModifiedTime'] = undefined;

/**
 * ext run time of the update.
 * @member {Date} nextRun
 */
SoftwareUpdateConfigurationCollectionItemProperties.prototype['nextRun'] = undefined;

/**
 * Provisioning state for the software update configuration, which only appears in the response.
 * @member {String} provisioningState
 */
SoftwareUpdateConfigurationCollectionItemProperties.prototype['provisioningState'] = undefined;

/**
 * the start time of the update.
 * @member {Date} startTime
 */
SoftwareUpdateConfigurationCollectionItemProperties.prototype['startTime'] = undefined;

/**
 * @member {module:model/CollectionItemUpdateConfiguration} updateConfiguration
 */
SoftwareUpdateConfigurationCollectionItemProperties.prototype['updateConfiguration'] = undefined;





/**
 * Allowed values for the <code>frequency</code> property.
 * @enum {String}
 * @readonly
 */
SoftwareUpdateConfigurationCollectionItemProperties['FrequencyEnum'] = {

    /**
     * value: "OneTime"
     * @const
     */
    "OneTime": "OneTime",

    /**
     * value: "Day"
     * @const
     */
    "Day": "Day",

    /**
     * value: "Hour"
     * @const
     */
    "Hour": "Hour",

    /**
     * value: "Week"
     * @const
     */
    "Week": "Week",

    /**
     * value: "Month"
     * @const
     */
    "Month": "Month",

    /**
     * value: "Minute"
     * @const
     */
    "Minute": "Minute"
};



export default SoftwareUpdateConfigurationCollectionItemProperties;

