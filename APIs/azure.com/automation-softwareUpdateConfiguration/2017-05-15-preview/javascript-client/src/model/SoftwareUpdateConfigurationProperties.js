/**
 * Update Management
 * APIs for managing software update configurations.
 *
 * The version of the OpenAPI document: 2017-05-15-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScheduleProperties from './ScheduleProperties';
import SoftwareUpdateConfigurationTasks from './SoftwareUpdateConfigurationTasks';
import SoftwareUpdateConfigurationsListDefaultResponse from './SoftwareUpdateConfigurationsListDefaultResponse';
import UpdateConfiguration from './UpdateConfiguration';

/**
 * The SoftwareUpdateConfigurationProperties model module.
 * @module model/SoftwareUpdateConfigurationProperties
 * @version 2017-05-15-preview
 */
class SoftwareUpdateConfigurationProperties {
    /**
     * Constructs a new <code>SoftwareUpdateConfigurationProperties</code>.
     * Software update configuration properties.
     * @alias module:model/SoftwareUpdateConfigurationProperties
     * @param scheduleInfo {module:model/ScheduleProperties} 
     * @param updateConfiguration {module:model/UpdateConfiguration} 
     */
    constructor(scheduleInfo, updateConfiguration) { 
        
        SoftwareUpdateConfigurationProperties.initialize(this, scheduleInfo, updateConfiguration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, scheduleInfo, updateConfiguration) { 
        obj['scheduleInfo'] = scheduleInfo;
        obj['updateConfiguration'] = updateConfiguration;
    }

    /**
     * Constructs a <code>SoftwareUpdateConfigurationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SoftwareUpdateConfigurationProperties} obj Optional instance to populate.
     * @return {module:model/SoftwareUpdateConfigurationProperties} The populated <code>SoftwareUpdateConfigurationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SoftwareUpdateConfigurationProperties();

            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = SoftwareUpdateConfigurationsListDefaultResponse.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('lastModifiedBy')) {
                obj['lastModifiedBy'] = ApiClient.convertToType(data['lastModifiedBy'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('scheduleInfo')) {
                obj['scheduleInfo'] = ScheduleProperties.constructFromObject(data['scheduleInfo']);
            }
            if (data.hasOwnProperty('tasks')) {
                obj['tasks'] = SoftwareUpdateConfigurationTasks.constructFromObject(data['tasks']);
            }
            if (data.hasOwnProperty('updateConfiguration')) {
                obj['updateConfiguration'] = UpdateConfiguration.constructFromObject(data['updateConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SoftwareUpdateConfigurationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SoftwareUpdateConfigurationProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SoftwareUpdateConfigurationProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['createdBy'] && !(typeof data['createdBy'] === 'string' || data['createdBy'] instanceof String)) {
            throw new Error("Expected the field `createdBy` to be a primitive type in the JSON string but got " + data['createdBy']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          SoftwareUpdateConfigurationsListDefaultResponse.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['lastModifiedBy'] && !(typeof data['lastModifiedBy'] === 'string' || data['lastModifiedBy'] instanceof String)) {
            throw new Error("Expected the field `lastModifiedBy` to be a primitive type in the JSON string but got " + data['lastModifiedBy']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // validate the optional field `scheduleInfo`
        if (data['scheduleInfo']) { // data not null
          ScheduleProperties.validateJSON(data['scheduleInfo']);
        }
        // validate the optional field `tasks`
        if (data['tasks']) { // data not null
          SoftwareUpdateConfigurationTasks.validateJSON(data['tasks']);
        }
        // validate the optional field `updateConfiguration`
        if (data['updateConfiguration']) { // data not null
          UpdateConfiguration.validateJSON(data['updateConfiguration']);
        }

        return true;
    }


}

SoftwareUpdateConfigurationProperties.RequiredProperties = ["scheduleInfo", "updateConfiguration"];

/**
 * CreatedBy property, which only appears in the response.
 * @member {String} createdBy
 */
SoftwareUpdateConfigurationProperties.prototype['createdBy'] = undefined;

/**
 * Creation time of the resource, which only appears in the response.
 * @member {Date} creationTime
 */
SoftwareUpdateConfigurationProperties.prototype['creationTime'] = undefined;

/**
 * @member {module:model/SoftwareUpdateConfigurationsListDefaultResponse} error
 */
SoftwareUpdateConfigurationProperties.prototype['error'] = undefined;

/**
 * LastModifiedBy property, which only appears in the response.
 * @member {String} lastModifiedBy
 */
SoftwareUpdateConfigurationProperties.prototype['lastModifiedBy'] = undefined;

/**
 * Last time resource was modified, which only appears in the response.
 * @member {Date} lastModifiedTime
 */
SoftwareUpdateConfigurationProperties.prototype['lastModifiedTime'] = undefined;

/**
 * Provisioning state for the software update configuration, which only appears in the response.
 * @member {String} provisioningState
 */
SoftwareUpdateConfigurationProperties.prototype['provisioningState'] = undefined;

/**
 * @member {module:model/ScheduleProperties} scheduleInfo
 */
SoftwareUpdateConfigurationProperties.prototype['scheduleInfo'] = undefined;

/**
 * @member {module:model/SoftwareUpdateConfigurationTasks} tasks
 */
SoftwareUpdateConfigurationProperties.prototype['tasks'] = undefined;

/**
 * @member {module:model/UpdateConfiguration} updateConfiguration
 */
SoftwareUpdateConfigurationProperties.prototype['updateConfiguration'] = undefined;






export default SoftwareUpdateConfigurationProperties;

