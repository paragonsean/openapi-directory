/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecommendedActionStateInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecommendedActionStateInfo::OAIRecommendedActionStateInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecommendedActionStateInfo::OAIRecommendedActionStateInfo() {
    this->initializeModel();
}

OAIRecommendedActionStateInfo::~OAIRecommendedActionStateInfo() {}

void OAIRecommendedActionStateInfo::initializeModel() {

    m_action_initiated_by_isSet = false;
    m_action_initiated_by_isValid = false;

    m_current_value_isSet = false;
    m_current_value_isValid = false;

    m_last_modified_isSet = false;
    m_last_modified_isValid = false;
}

void OAIRecommendedActionStateInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecommendedActionStateInfo::fromJsonObject(QJsonObject json) {

    m_action_initiated_by_isValid = ::OpenAPI::fromJsonValue(m_action_initiated_by, json[QString("actionInitiatedBy")]);
    m_action_initiated_by_isSet = !json[QString("actionInitiatedBy")].isNull() && m_action_initiated_by_isValid;

    m_current_value_isValid = ::OpenAPI::fromJsonValue(m_current_value, json[QString("currentValue")]);
    m_current_value_isSet = !json[QString("currentValue")].isNull() && m_current_value_isValid;

    m_last_modified_isValid = ::OpenAPI::fromJsonValue(m_last_modified, json[QString("lastModified")]);
    m_last_modified_isSet = !json[QString("lastModified")].isNull() && m_last_modified_isValid;
}

QString OAIRecommendedActionStateInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecommendedActionStateInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_action_initiated_by_isSet) {
        obj.insert(QString("actionInitiatedBy"), ::OpenAPI::toJsonValue(m_action_initiated_by));
    }
    if (m_current_value_isSet) {
        obj.insert(QString("currentValue"), ::OpenAPI::toJsonValue(m_current_value));
    }
    if (m_last_modified_isSet) {
        obj.insert(QString("lastModified"), ::OpenAPI::toJsonValue(m_last_modified));
    }
    return obj;
}

QString OAIRecommendedActionStateInfo::getActionInitiatedBy() const {
    return m_action_initiated_by;
}
void OAIRecommendedActionStateInfo::setActionInitiatedBy(const QString &action_initiated_by) {
    m_action_initiated_by = action_initiated_by;
    m_action_initiated_by_isSet = true;
}

bool OAIRecommendedActionStateInfo::is_action_initiated_by_Set() const{
    return m_action_initiated_by_isSet;
}

bool OAIRecommendedActionStateInfo::is_action_initiated_by_Valid() const{
    return m_action_initiated_by_isValid;
}

QString OAIRecommendedActionStateInfo::getCurrentValue() const {
    return m_current_value;
}
void OAIRecommendedActionStateInfo::setCurrentValue(const QString &current_value) {
    m_current_value = current_value;
    m_current_value_isSet = true;
}

bool OAIRecommendedActionStateInfo::is_current_value_Set() const{
    return m_current_value_isSet;
}

bool OAIRecommendedActionStateInfo::is_current_value_Valid() const{
    return m_current_value_isValid;
}

QDateTime OAIRecommendedActionStateInfo::getLastModified() const {
    return m_last_modified;
}
void OAIRecommendedActionStateInfo::setLastModified(const QDateTime &last_modified) {
    m_last_modified = last_modified;
    m_last_modified_isSet = true;
}

bool OAIRecommendedActionStateInfo::is_last_modified_Set() const{
    return m_last_modified_isSet;
}

bool OAIRecommendedActionStateInfo::is_last_modified_Valid() const{
    return m_last_modified_isValid;
}

bool OAIRecommendedActionStateInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_initiated_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecommendedActionStateInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_current_value_isValid && true;
}

} // namespace OpenAPI
