# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecommendedActionMetricInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_name: str=None, start_time: datetime=None, time_grain: str=None, unit: str=None, value: float=None):
        """RecommendedActionMetricInfo - a model defined in OpenAPI

        :param metric_name: The metric_name of this RecommendedActionMetricInfo.
        :param start_time: The start_time of this RecommendedActionMetricInfo.
        :param time_grain: The time_grain of this RecommendedActionMetricInfo.
        :param unit: The unit of this RecommendedActionMetricInfo.
        :param value: The value of this RecommendedActionMetricInfo.
        """
        self.openapi_types = {
            'metric_name': str,
            'start_time': datetime,
            'time_grain': str,
            'unit': str,
            'value': float
        }

        self.attribute_map = {
            'metric_name': 'metricName',
            'start_time': 'startTime',
            'time_grain': 'timeGrain',
            'unit': 'unit',
            'value': 'value'
        }

        self._metric_name = metric_name
        self._start_time = start_time
        self._time_grain = time_grain
        self._unit = unit
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendedActionMetricInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendedActionMetricInfo of this RecommendedActionMetricInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_name(self):
        """Gets the metric_name of this RecommendedActionMetricInfo.

        Gets the name of the metric. e.g., CPU, Number of Queries.

        :return: The metric_name of this RecommendedActionMetricInfo.
        :rtype: str
        """
        return self._metric_name

    @metric_name.setter
    def metric_name(self, metric_name):
        """Sets the metric_name of this RecommendedActionMetricInfo.

        Gets the name of the metric. e.g., CPU, Number of Queries.

        :param metric_name: The metric_name of this RecommendedActionMetricInfo.
        :type metric_name: str
        """

        self._metric_name = metric_name

    @property
    def start_time(self):
        """Gets the start_time of this RecommendedActionMetricInfo.

        Gets the start time of time interval given by this MetricInfo.

        :return: The start_time of this RecommendedActionMetricInfo.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this RecommendedActionMetricInfo.

        Gets the start time of time interval given by this MetricInfo.

        :param start_time: The start_time of this RecommendedActionMetricInfo.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def time_grain(self):
        """Gets the time_grain of this RecommendedActionMetricInfo.

        Gets the duration of time interval for the value given by this MetricInfo. e.g., PT1H (1 hour)

        :return: The time_grain of this RecommendedActionMetricInfo.
        :rtype: str
        """
        return self._time_grain

    @time_grain.setter
    def time_grain(self, time_grain):
        """Sets the time_grain of this RecommendedActionMetricInfo.

        Gets the duration of time interval for the value given by this MetricInfo. e.g., PT1H (1 hour)

        :param time_grain: The time_grain of this RecommendedActionMetricInfo.
        :type time_grain: str
        """

        self._time_grain = time_grain

    @property
    def unit(self):
        """Gets the unit of this RecommendedActionMetricInfo.

        Gets the unit in which metric is measured. e.g., DTU, Frequency

        :return: The unit of this RecommendedActionMetricInfo.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this RecommendedActionMetricInfo.

        Gets the unit in which metric is measured. e.g., DTU, Frequency

        :param unit: The unit of this RecommendedActionMetricInfo.
        :type unit: str
        """

        self._unit = unit

    @property
    def value(self):
        """Gets the value of this RecommendedActionMetricInfo.

        Gets the value of the metric in the time interval given by this MetricInfo.

        :return: The value of this RecommendedActionMetricInfo.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this RecommendedActionMetricInfo.

        Gets the value of the metric in the time interval given by this MetricInfo.

        :param value: The value of this RecommendedActionMetricInfo.
        :type value: float
        """

        self._value = value
