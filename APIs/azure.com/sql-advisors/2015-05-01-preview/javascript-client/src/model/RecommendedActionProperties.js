/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RecommendedActionErrorInfo from './RecommendedActionErrorInfo';
import RecommendedActionImpactRecord from './RecommendedActionImpactRecord';
import RecommendedActionImplementationInfo from './RecommendedActionImplementationInfo';
import RecommendedActionMetricInfo from './RecommendedActionMetricInfo';
import RecommendedActionStateInfo from './RecommendedActionStateInfo';

/**
 * The RecommendedActionProperties model module.
 * @module model/RecommendedActionProperties
 * @version 2015-05-01-preview
 */
class RecommendedActionProperties {
    /**
     * Constructs a new <code>RecommendedActionProperties</code>.
     * Properties for a Database, Server or Elastic Pool Recommended Action.
     * @alias module:model/RecommendedActionProperties
     * @param state {module:model/RecommendedActionStateInfo} 
     */
    constructor(state) { 
        
        RecommendedActionProperties.initialize(this, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, state) { 
        obj['state'] = state;
    }

    /**
     * Constructs a <code>RecommendedActionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RecommendedActionProperties} obj Optional instance to populate.
     * @return {module:model/RecommendedActionProperties} The populated <code>RecommendedActionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecommendedActionProperties();

            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], {'String': Object});
            }
            if (data.hasOwnProperty('errorDetails')) {
                obj['errorDetails'] = RecommendedActionErrorInfo.constructFromObject(data['errorDetails']);
            }
            if (data.hasOwnProperty('estimatedImpact')) {
                obj['estimatedImpact'] = ApiClient.convertToType(data['estimatedImpact'], [RecommendedActionImpactRecord]);
            }
            if (data.hasOwnProperty('executeActionDuration')) {
                obj['executeActionDuration'] = ApiClient.convertToType(data['executeActionDuration'], 'String');
            }
            if (data.hasOwnProperty('executeActionInitiatedBy')) {
                obj['executeActionInitiatedBy'] = ApiClient.convertToType(data['executeActionInitiatedBy'], 'String');
            }
            if (data.hasOwnProperty('executeActionInitiatedTime')) {
                obj['executeActionInitiatedTime'] = ApiClient.convertToType(data['executeActionInitiatedTime'], 'Date');
            }
            if (data.hasOwnProperty('executeActionStartTime')) {
                obj['executeActionStartTime'] = ApiClient.convertToType(data['executeActionStartTime'], 'Date');
            }
            if (data.hasOwnProperty('implementationDetails')) {
                obj['implementationDetails'] = RecommendedActionImplementationInfo.constructFromObject(data['implementationDetails']);
            }
            if (data.hasOwnProperty('isArchivedAction')) {
                obj['isArchivedAction'] = ApiClient.convertToType(data['isArchivedAction'], 'Boolean');
            }
            if (data.hasOwnProperty('isExecutableAction')) {
                obj['isExecutableAction'] = ApiClient.convertToType(data['isExecutableAction'], 'Boolean');
            }
            if (data.hasOwnProperty('isRevertableAction')) {
                obj['isRevertableAction'] = ApiClient.convertToType(data['isRevertableAction'], 'Boolean');
            }
            if (data.hasOwnProperty('lastRefresh')) {
                obj['lastRefresh'] = ApiClient.convertToType(data['lastRefresh'], 'Date');
            }
            if (data.hasOwnProperty('linkedObjects')) {
                obj['linkedObjects'] = ApiClient.convertToType(data['linkedObjects'], ['String']);
            }
            if (data.hasOwnProperty('observedImpact')) {
                obj['observedImpact'] = ApiClient.convertToType(data['observedImpact'], [RecommendedActionImpactRecord]);
            }
            if (data.hasOwnProperty('recommendationReason')) {
                obj['recommendationReason'] = ApiClient.convertToType(data['recommendationReason'], 'String');
            }
            if (data.hasOwnProperty('revertActionDuration')) {
                obj['revertActionDuration'] = ApiClient.convertToType(data['revertActionDuration'], 'String');
            }
            if (data.hasOwnProperty('revertActionInitiatedBy')) {
                obj['revertActionInitiatedBy'] = ApiClient.convertToType(data['revertActionInitiatedBy'], 'String');
            }
            if (data.hasOwnProperty('revertActionInitiatedTime')) {
                obj['revertActionInitiatedTime'] = ApiClient.convertToType(data['revertActionInitiatedTime'], 'Date');
            }
            if (data.hasOwnProperty('revertActionStartTime')) {
                obj['revertActionStartTime'] = ApiClient.convertToType(data['revertActionStartTime'], 'Date');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = RecommendedActionStateInfo.constructFromObject(data['state']);
            }
            if (data.hasOwnProperty('timeSeries')) {
                obj['timeSeries'] = ApiClient.convertToType(data['timeSeries'], [RecommendedActionMetricInfo]);
            }
            if (data.hasOwnProperty('validSince')) {
                obj['validSince'] = ApiClient.convertToType(data['validSince'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RecommendedActionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RecommendedActionProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RecommendedActionProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `errorDetails`
        if (data['errorDetails']) { // data not null
          RecommendedActionErrorInfo.validateJSON(data['errorDetails']);
        }
        if (data['estimatedImpact']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['estimatedImpact'])) {
                throw new Error("Expected the field `estimatedImpact` to be an array in the JSON data but got " + data['estimatedImpact']);
            }
            // validate the optional field `estimatedImpact` (array)
            for (const item of data['estimatedImpact']) {
                RecommendedActionImpactRecord.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['executeActionDuration'] && !(typeof data['executeActionDuration'] === 'string' || data['executeActionDuration'] instanceof String)) {
            throw new Error("Expected the field `executeActionDuration` to be a primitive type in the JSON string but got " + data['executeActionDuration']);
        }
        // ensure the json data is a string
        if (data['executeActionInitiatedBy'] && !(typeof data['executeActionInitiatedBy'] === 'string' || data['executeActionInitiatedBy'] instanceof String)) {
            throw new Error("Expected the field `executeActionInitiatedBy` to be a primitive type in the JSON string but got " + data['executeActionInitiatedBy']);
        }
        // validate the optional field `implementationDetails`
        if (data['implementationDetails']) { // data not null
          RecommendedActionImplementationInfo.validateJSON(data['implementationDetails']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['linkedObjects'])) {
            throw new Error("Expected the field `linkedObjects` to be an array in the JSON data but got " + data['linkedObjects']);
        }
        if (data['observedImpact']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['observedImpact'])) {
                throw new Error("Expected the field `observedImpact` to be an array in the JSON data but got " + data['observedImpact']);
            }
            // validate the optional field `observedImpact` (array)
            for (const item of data['observedImpact']) {
                RecommendedActionImpactRecord.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['recommendationReason'] && !(typeof data['recommendationReason'] === 'string' || data['recommendationReason'] instanceof String)) {
            throw new Error("Expected the field `recommendationReason` to be a primitive type in the JSON string but got " + data['recommendationReason']);
        }
        // ensure the json data is a string
        if (data['revertActionDuration'] && !(typeof data['revertActionDuration'] === 'string' || data['revertActionDuration'] instanceof String)) {
            throw new Error("Expected the field `revertActionDuration` to be a primitive type in the JSON string but got " + data['revertActionDuration']);
        }
        // ensure the json data is a string
        if (data['revertActionInitiatedBy'] && !(typeof data['revertActionInitiatedBy'] === 'string' || data['revertActionInitiatedBy'] instanceof String)) {
            throw new Error("Expected the field `revertActionInitiatedBy` to be a primitive type in the JSON string but got " + data['revertActionInitiatedBy']);
        }
        // validate the optional field `state`
        if (data['state']) { // data not null
          RecommendedActionStateInfo.validateJSON(data['state']);
        }
        if (data['timeSeries']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['timeSeries'])) {
                throw new Error("Expected the field `timeSeries` to be an array in the JSON data but got " + data['timeSeries']);
            }
            // validate the optional field `timeSeries` (array)
            for (const item of data['timeSeries']) {
                RecommendedActionMetricInfo.validateJSON(item);
            };
        }

        return true;
    }


}

RecommendedActionProperties.RequiredProperties = ["state"];

/**
 * Gets additional details specific to this recommended action.
 * @member {Object.<String, Object>} details
 */
RecommendedActionProperties.prototype['details'] = undefined;

/**
 * @member {module:model/RecommendedActionErrorInfo} errorDetails
 */
RecommendedActionProperties.prototype['errorDetails'] = undefined;

/**
 * Gets the estimated impact info for this recommended action e.g., Estimated CPU gain, Estimated Disk Space change
 * @member {Array.<module:model/RecommendedActionImpactRecord>} estimatedImpact
 */
RecommendedActionProperties.prototype['estimatedImpact'] = undefined;

/**
 * Gets the time taken for applying this recommended action on user resource. e.g., time taken for index creation
 * @member {String} executeActionDuration
 */
RecommendedActionProperties.prototype['executeActionDuration'] = undefined;

/**
 * Gets if approval for applying this recommended action was given by user/system.
 * @member {module:model/RecommendedActionProperties.ExecuteActionInitiatedByEnum} executeActionInitiatedBy
 */
RecommendedActionProperties.prototype['executeActionInitiatedBy'] = undefined;

/**
 * Gets the time when this recommended action was approved for execution.
 * @member {Date} executeActionInitiatedTime
 */
RecommendedActionProperties.prototype['executeActionInitiatedTime'] = undefined;

/**
 * Gets the time when system started applying this recommended action on the user resource. e.g., index creation start time
 * @member {Date} executeActionStartTime
 */
RecommendedActionProperties.prototype['executeActionStartTime'] = undefined;

/**
 * @member {module:model/RecommendedActionImplementationInfo} implementationDetails
 */
RecommendedActionProperties.prototype['implementationDetails'] = undefined;

/**
 * Gets if this recommended action was suggested some time ago but user chose to ignore this and system added a new recommended action again.
 * @member {Boolean} isArchivedAction
 */
RecommendedActionProperties.prototype['isArchivedAction'] = undefined;

/**
 * Gets if this recommended action is actionable by user
 * @member {Boolean} isExecutableAction
 */
RecommendedActionProperties.prototype['isExecutableAction'] = undefined;

/**
 * Gets if changes applied by this recommended action can be reverted by user
 * @member {Boolean} isRevertableAction
 */
RecommendedActionProperties.prototype['isRevertableAction'] = undefined;

/**
 * Gets time when this recommended action was last refreshed.
 * @member {Date} lastRefresh
 */
RecommendedActionProperties.prototype['lastRefresh'] = undefined;

/**
 * Gets the linked objects, if any.
 * @member {Array.<String>} linkedObjects
 */
RecommendedActionProperties.prototype['linkedObjects'] = undefined;

/**
 * Gets the observed/actual impact info for this recommended action e.g., Actual CPU gain, Actual Disk Space change
 * @member {Array.<module:model/RecommendedActionImpactRecord>} observedImpact
 */
RecommendedActionProperties.prototype['observedImpact'] = undefined;

/**
 * Gets the reason for recommending this action. e.g., DuplicateIndex
 * @member {String} recommendationReason
 */
RecommendedActionProperties.prototype['recommendationReason'] = undefined;

/**
 * Gets the time taken for reverting changes of this recommended action on user resource. e.g., time taken for dropping the created index.
 * @member {String} revertActionDuration
 */
RecommendedActionProperties.prototype['revertActionDuration'] = undefined;

/**
 * Gets if approval for reverting this recommended action was given by user/system.
 * @member {module:model/RecommendedActionProperties.RevertActionInitiatedByEnum} revertActionInitiatedBy
 */
RecommendedActionProperties.prototype['revertActionInitiatedBy'] = undefined;

/**
 * Gets the time when this recommended action was approved for revert.
 * @member {Date} revertActionInitiatedTime
 */
RecommendedActionProperties.prototype['revertActionInitiatedTime'] = undefined;

/**
 * Gets the time when system started reverting changes of this recommended action on user resource. e.g., time when index drop is executed.
 * @member {Date} revertActionStartTime
 */
RecommendedActionProperties.prototype['revertActionStartTime'] = undefined;

/**
 * Gets the impact of this recommended action. Possible values are 1 - Low impact, 2 - Medium Impact and 3 - High Impact
 * @member {Number} score
 */
RecommendedActionProperties.prototype['score'] = undefined;

/**
 * @member {module:model/RecommendedActionStateInfo} state
 */
RecommendedActionProperties.prototype['state'] = undefined;

/**
 * Gets the time series info of metrics for this recommended action e.g., CPU consumption time series
 * @member {Array.<module:model/RecommendedActionMetricInfo>} timeSeries
 */
RecommendedActionProperties.prototype['timeSeries'] = undefined;

/**
 * Gets the time since when this recommended action is valid.
 * @member {Date} validSince
 */
RecommendedActionProperties.prototype['validSince'] = undefined;





/**
 * Allowed values for the <code>executeActionInitiatedBy</code> property.
 * @enum {String}
 * @readonly
 */
RecommendedActionProperties['ExecuteActionInitiatedByEnum'] = {

    /**
     * value: "User"
     * @const
     */
    "User": "User",

    /**
     * value: "System"
     * @const
     */
    "System": "System"
};


/**
 * Allowed values for the <code>revertActionInitiatedBy</code> property.
 * @enum {String}
 * @readonly
 */
RecommendedActionProperties['RevertActionInitiatedByEnum'] = {

    /**
     * value: "User"
     * @const
     */
    "User": "User",

    /**
     * value: "System"
     * @const
     */
    "System": "System"
};



export default RecommendedActionProperties;

