/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Advisor;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DatabaseAdvisorsApi
 */
@Disabled
public class DatabaseAdvisorsApiTest {

    private final DatabaseAdvisorsApi api = new DatabaseAdvisorsApi();

    /**
     * Gets a database advisor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseAdvisorsGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String advisorName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Advisor response = api.databaseAdvisorsGet(resourceGroupName, serverName, databaseName, advisorName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of database advisors.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseAdvisorsListByDatabaseTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String subscriptionId = null;
        String apiVersion = null;
        List<Advisor> response = api.databaseAdvisorsListByDatabase(resourceGroupName, serverName, databaseName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates a database advisor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void databaseAdvisorsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String advisorName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Advisor parameters = null;
        Advisor response = api.databaseAdvisorsUpdate(resourceGroupName, serverName, databaseName, advisorName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
