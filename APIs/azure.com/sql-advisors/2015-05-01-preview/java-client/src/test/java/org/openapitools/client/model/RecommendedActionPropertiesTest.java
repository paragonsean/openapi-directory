/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.RecommendedActionErrorInfo;
import org.openapitools.client.model.RecommendedActionImpactRecord;
import org.openapitools.client.model.RecommendedActionImplementationInfo;
import org.openapitools.client.model.RecommendedActionMetricInfo;
import org.openapitools.client.model.RecommendedActionStateInfo;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for RecommendedActionProperties
 */
public class RecommendedActionPropertiesTest {
    private final RecommendedActionProperties model = new RecommendedActionProperties();

    /**
     * Model tests for RecommendedActionProperties
     */
    @Test
    public void testRecommendedActionProperties() {
        // TODO: test RecommendedActionProperties
    }

    /**
     * Test the property 'details'
     */
    @Test
    public void detailsTest() {
        // TODO: test details
    }

    /**
     * Test the property 'errorDetails'
     */
    @Test
    public void errorDetailsTest() {
        // TODO: test errorDetails
    }

    /**
     * Test the property 'estimatedImpact'
     */
    @Test
    public void estimatedImpactTest() {
        // TODO: test estimatedImpact
    }

    /**
     * Test the property 'executeActionDuration'
     */
    @Test
    public void executeActionDurationTest() {
        // TODO: test executeActionDuration
    }

    /**
     * Test the property 'executeActionInitiatedBy'
     */
    @Test
    public void executeActionInitiatedByTest() {
        // TODO: test executeActionInitiatedBy
    }

    /**
     * Test the property 'executeActionInitiatedTime'
     */
    @Test
    public void executeActionInitiatedTimeTest() {
        // TODO: test executeActionInitiatedTime
    }

    /**
     * Test the property 'executeActionStartTime'
     */
    @Test
    public void executeActionStartTimeTest() {
        // TODO: test executeActionStartTime
    }

    /**
     * Test the property 'implementationDetails'
     */
    @Test
    public void implementationDetailsTest() {
        // TODO: test implementationDetails
    }

    /**
     * Test the property 'isArchivedAction'
     */
    @Test
    public void isArchivedActionTest() {
        // TODO: test isArchivedAction
    }

    /**
     * Test the property 'isExecutableAction'
     */
    @Test
    public void isExecutableActionTest() {
        // TODO: test isExecutableAction
    }

    /**
     * Test the property 'isRevertableAction'
     */
    @Test
    public void isRevertableActionTest() {
        // TODO: test isRevertableAction
    }

    /**
     * Test the property 'lastRefresh'
     */
    @Test
    public void lastRefreshTest() {
        // TODO: test lastRefresh
    }

    /**
     * Test the property 'linkedObjects'
     */
    @Test
    public void linkedObjectsTest() {
        // TODO: test linkedObjects
    }

    /**
     * Test the property 'observedImpact'
     */
    @Test
    public void observedImpactTest() {
        // TODO: test observedImpact
    }

    /**
     * Test the property 'recommendationReason'
     */
    @Test
    public void recommendationReasonTest() {
        // TODO: test recommendationReason
    }

    /**
     * Test the property 'revertActionDuration'
     */
    @Test
    public void revertActionDurationTest() {
        // TODO: test revertActionDuration
    }

    /**
     * Test the property 'revertActionInitiatedBy'
     */
    @Test
    public void revertActionInitiatedByTest() {
        // TODO: test revertActionInitiatedBy
    }

    /**
     * Test the property 'revertActionInitiatedTime'
     */
    @Test
    public void revertActionInitiatedTimeTest() {
        // TODO: test revertActionInitiatedTime
    }

    /**
     * Test the property 'revertActionStartTime'
     */
    @Test
    public void revertActionStartTimeTest() {
        // TODO: test revertActionStartTime
    }

    /**
     * Test the property 'score'
     */
    @Test
    public void scoreTest() {
        // TODO: test score
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'timeSeries'
     */
    @Test
    public void timeSeriesTest() {
        // TODO: test timeSeries
    }

    /**
     * Test the property 'validSince'
     */
    @Test
    public void validSinceTest() {
        // TODO: test validSince
    }

}
