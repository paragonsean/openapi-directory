/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2015-05-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Advisor;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerAdvisorsApi
 */
@Disabled
public class ServerAdvisorsApiTest {

    private final ServerAdvisorsApi api = new ServerAdvisorsApi();

    /**
     * Gets a server advisor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverAdvisorsGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String advisorName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Advisor response = api.serverAdvisorsGet(resourceGroupName, serverName, advisorName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of server advisors.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverAdvisorsListByServerTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String subscriptionId = null;
        String apiVersion = null;
        List<Advisor> response = api.serverAdvisorsListByServer(resourceGroupName, serverName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates a server advisor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serverAdvisorsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String advisorName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Advisor parameters = null;
        Advisor response = api.serverAdvisorsUpdate(resourceGroupName, serverName, advisorName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
