/*
 * Azure SQL Database Datamasking Policies and Rules
 * Provides create, read, update and delete functionality for Azure SQL Database datamasking policies and rules.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataMaskingPolicy;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataMaskingPoliciesApi
 */
@Disabled
public class DataMaskingPoliciesApiTest {

    private final DataMaskingPoliciesApi api = new DataMaskingPoliciesApi();

    /**
     * Creates or updates a database data masking policy
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataMaskingPoliciesCreateOrUpdateTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String dataMaskingPolicyName = null;
        DataMaskingPolicy parameters = null;
        DataMaskingPolicy response = api.dataMaskingPoliciesCreateOrUpdate(apiVersion, subscriptionId, resourceGroupName, serverName, databaseName, dataMaskingPolicyName, parameters);
        // TODO: test validations
    }

    /**
     * Gets a database data masking policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataMaskingPoliciesGetTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String serverName = null;
        String databaseName = null;
        String dataMaskingPolicyName = null;
        DataMaskingPolicy response = api.dataMaskingPoliciesGet(apiVersion, subscriptionId, resourceGroupName, serverName, databaseName, dataMaskingPolicyName);
        // TODO: test validations
    }

}
