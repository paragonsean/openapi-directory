/**
 * Azure SQL Database Datamasking Policies and Rules
 * Provides create, read, update and delete functionality for Azure SQL Database datamasking policies and rules.
 *
 * The version of the OpenAPI document: 2014-04-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataMaskingRuleProperties.h
 *
 * The properties of a database data masking rule.
 */

#ifndef OAIDataMaskingRuleProperties_H
#define OAIDataMaskingRuleProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataMaskingRuleProperties : public OAIObject {
public:
    OAIDataMaskingRuleProperties();
    OAIDataMaskingRuleProperties(QString json);
    ~OAIDataMaskingRuleProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAliasName() const;
    void setAliasName(const QString &alias_name);
    bool is_alias_name_Set() const;
    bool is_alias_name_Valid() const;

    QString getColumnName() const;
    void setColumnName(const QString &column_name);
    bool is_column_name_Set() const;
    bool is_column_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMaskingFunction() const;
    void setMaskingFunction(const QString &masking_function);
    bool is_masking_function_Set() const;
    bool is_masking_function_Valid() const;

    QString getNumberFrom() const;
    void setNumberFrom(const QString &number_from);
    bool is_number_from_Set() const;
    bool is_number_from_Valid() const;

    QString getNumberTo() const;
    void setNumberTo(const QString &number_to);
    bool is_number_to_Set() const;
    bool is_number_to_Valid() const;

    QString getPrefixSize() const;
    void setPrefixSize(const QString &prefix_size);
    bool is_prefix_size_Set() const;
    bool is_prefix_size_Valid() const;

    QString getReplacementString() const;
    void setReplacementString(const QString &replacement_string);
    bool is_replacement_string_Set() const;
    bool is_replacement_string_Valid() const;

    QString getRuleState() const;
    void setRuleState(const QString &rule_state);
    bool is_rule_state_Set() const;
    bool is_rule_state_Valid() const;

    QString getSchemaName() const;
    void setSchemaName(const QString &schema_name);
    bool is_schema_name_Set() const;
    bool is_schema_name_Valid() const;

    QString getSuffixSize() const;
    void setSuffixSize(const QString &suffix_size);
    bool is_suffix_size_Set() const;
    bool is_suffix_size_Valid() const;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alias_name;
    bool m_alias_name_isSet;
    bool m_alias_name_isValid;

    QString m_column_name;
    bool m_column_name_isSet;
    bool m_column_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_masking_function;
    bool m_masking_function_isSet;
    bool m_masking_function_isValid;

    QString m_number_from;
    bool m_number_from_isSet;
    bool m_number_from_isValid;

    QString m_number_to;
    bool m_number_to_isSet;
    bool m_number_to_isValid;

    QString m_prefix_size;
    bool m_prefix_size_isSet;
    bool m_prefix_size_isValid;

    QString m_replacement_string;
    bool m_replacement_string_isSet;
    bool m_replacement_string_isValid;

    QString m_rule_state;
    bool m_rule_state_isSet;
    bool m_rule_state_isValid;

    QString m_schema_name;
    bool m_schema_name_isSet;
    bool m_schema_name_isValid;

    QString m_suffix_size;
    bool m_suffix_size_isSet;
    bool m_suffix_size_isValid;

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataMaskingRuleProperties)

#endif // OAIDataMaskingRuleProperties_H
