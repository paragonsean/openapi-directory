/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobStepAction from './JobStepAction';
import JobStepExecutionOptions from './JobStepExecutionOptions';
import JobStepOutput from './JobStepOutput';

/**
 * The JobStepProperties model module.
 * @module model/JobStepProperties
 * @version 2017-03-01-preview
 */
class JobStepProperties {
    /**
     * Constructs a new <code>JobStepProperties</code>.
     * Properties of a job step.
     * @alias module:model/JobStepProperties
     * @param action {module:model/JobStepAction} 
     * @param credential {String} The resource ID of the job credential that will be used to connect to the targets.
     * @param targetGroup {String} The resource ID of the target group that the job step will be executed on.
     */
    constructor(action, credential, targetGroup) { 
        
        JobStepProperties.initialize(this, action, credential, targetGroup);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, credential, targetGroup) { 
        obj['action'] = action;
        obj['credential'] = credential;
        obj['targetGroup'] = targetGroup;
    }

    /**
     * Constructs a <code>JobStepProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobStepProperties} obj Optional instance to populate.
     * @return {module:model/JobStepProperties} The populated <code>JobStepProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobStepProperties();

            if (data.hasOwnProperty('action')) {
                obj['action'] = JobStepAction.constructFromObject(data['action']);
            }
            if (data.hasOwnProperty('credential')) {
                obj['credential'] = ApiClient.convertToType(data['credential'], 'String');
            }
            if (data.hasOwnProperty('executionOptions')) {
                obj['executionOptions'] = JobStepExecutionOptions.constructFromObject(data['executionOptions']);
            }
            if (data.hasOwnProperty('output')) {
                obj['output'] = JobStepOutput.constructFromObject(data['output']);
            }
            if (data.hasOwnProperty('stepId')) {
                obj['stepId'] = ApiClient.convertToType(data['stepId'], 'Number');
            }
            if (data.hasOwnProperty('targetGroup')) {
                obj['targetGroup'] = ApiClient.convertToType(data['targetGroup'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobStepProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobStepProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobStepProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `action`
        if (data['action']) { // data not null
          JobStepAction.validateJSON(data['action']);
        }
        // ensure the json data is a string
        if (data['credential'] && !(typeof data['credential'] === 'string' || data['credential'] instanceof String)) {
            throw new Error("Expected the field `credential` to be a primitive type in the JSON string but got " + data['credential']);
        }
        // validate the optional field `executionOptions`
        if (data['executionOptions']) { // data not null
          JobStepExecutionOptions.validateJSON(data['executionOptions']);
        }
        // validate the optional field `output`
        if (data['output']) { // data not null
          JobStepOutput.validateJSON(data['output']);
        }
        // ensure the json data is a string
        if (data['targetGroup'] && !(typeof data['targetGroup'] === 'string' || data['targetGroup'] instanceof String)) {
            throw new Error("Expected the field `targetGroup` to be a primitive type in the JSON string but got " + data['targetGroup']);
        }

        return true;
    }


}

JobStepProperties.RequiredProperties = ["action", "credential", "targetGroup"];

/**
 * @member {module:model/JobStepAction} action
 */
JobStepProperties.prototype['action'] = undefined;

/**
 * The resource ID of the job credential that will be used to connect to the targets.
 * @member {String} credential
 */
JobStepProperties.prototype['credential'] = undefined;

/**
 * @member {module:model/JobStepExecutionOptions} executionOptions
 */
JobStepProperties.prototype['executionOptions'] = undefined;

/**
 * @member {module:model/JobStepOutput} output
 */
JobStepProperties.prototype['output'] = undefined;

/**
 * The job step's index within the job. If not specified when creating the job step, it will be created as the last step. If not specified when updating the job step, the step id is not modified.
 * @member {Number} stepId
 */
JobStepProperties.prototype['stepId'] = undefined;

/**
 * The resource ID of the target group that the job step will be executed on.
 * @member {String} targetGroup
 */
JobStepProperties.prototype['targetGroup'] = undefined;






export default JobStepProperties;

