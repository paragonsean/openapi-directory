/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobExecutionTarget from './JobExecutionTarget';

/**
 * The JobExecutionProperties model module.
 * @module model/JobExecutionProperties
 * @version 2017-03-01-preview
 */
class JobExecutionProperties {
    /**
     * Constructs a new <code>JobExecutionProperties</code>.
     * Properties for an Azure SQL Database Elastic job execution.
     * @alias module:model/JobExecutionProperties
     */
    constructor() { 
        
        JobExecutionProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobExecutionProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobExecutionProperties} obj Optional instance to populate.
     * @return {module:model/JobExecutionProperties} The populated <code>JobExecutionProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobExecutionProperties();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'Date');
            }
            if (data.hasOwnProperty('currentAttemptStartTime')) {
                obj['currentAttemptStartTime'] = ApiClient.convertToType(data['currentAttemptStartTime'], 'Date');
            }
            if (data.hasOwnProperty('currentAttempts')) {
                obj['currentAttempts'] = ApiClient.convertToType(data['currentAttempts'], 'Number');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('jobExecutionId')) {
                obj['jobExecutionId'] = ApiClient.convertToType(data['jobExecutionId'], 'String');
            }
            if (data.hasOwnProperty('jobVersion')) {
                obj['jobVersion'] = ApiClient.convertToType(data['jobVersion'], 'Number');
            }
            if (data.hasOwnProperty('lastMessage')) {
                obj['lastMessage'] = ApiClient.convertToType(data['lastMessage'], 'String');
            }
            if (data.hasOwnProperty('lifecycle')) {
                obj['lifecycle'] = ApiClient.convertToType(data['lifecycle'], 'String');
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('stepId')) {
                obj['stepId'] = ApiClient.convertToType(data['stepId'], 'Number');
            }
            if (data.hasOwnProperty('stepName')) {
                obj['stepName'] = ApiClient.convertToType(data['stepName'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = JobExecutionTarget.constructFromObject(data['target']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobExecutionProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobExecutionProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['jobExecutionId'] && !(typeof data['jobExecutionId'] === 'string' || data['jobExecutionId'] instanceof String)) {
            throw new Error("Expected the field `jobExecutionId` to be a primitive type in the JSON string but got " + data['jobExecutionId']);
        }
        // ensure the json data is a string
        if (data['lastMessage'] && !(typeof data['lastMessage'] === 'string' || data['lastMessage'] instanceof String)) {
            throw new Error("Expected the field `lastMessage` to be a primitive type in the JSON string but got " + data['lastMessage']);
        }
        // ensure the json data is a string
        if (data['lifecycle'] && !(typeof data['lifecycle'] === 'string' || data['lifecycle'] instanceof String)) {
            throw new Error("Expected the field `lifecycle` to be a primitive type in the JSON string but got " + data['lifecycle']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }
        // ensure the json data is a string
        if (data['stepName'] && !(typeof data['stepName'] === 'string' || data['stepName'] instanceof String)) {
            throw new Error("Expected the field `stepName` to be a primitive type in the JSON string but got " + data['stepName']);
        }
        // validate the optional field `target`
        if (data['target']) { // data not null
          JobExecutionTarget.validateJSON(data['target']);
        }

        return true;
    }


}



/**
 * The time that the job execution was created.
 * @member {Date} createTime
 */
JobExecutionProperties.prototype['createTime'] = undefined;

/**
 * Start time of the current attempt.
 * @member {Date} currentAttemptStartTime
 */
JobExecutionProperties.prototype['currentAttemptStartTime'] = undefined;

/**
 * Number of times the job execution has been attempted.
 * @member {Number} currentAttempts
 */
JobExecutionProperties.prototype['currentAttempts'] = undefined;

/**
 * The time that the job execution completed.
 * @member {Date} endTime
 */
JobExecutionProperties.prototype['endTime'] = undefined;

/**
 * The unique identifier of the job execution.
 * @member {String} jobExecutionId
 */
JobExecutionProperties.prototype['jobExecutionId'] = undefined;

/**
 * The job version number.
 * @member {Number} jobVersion
 */
JobExecutionProperties.prototype['jobVersion'] = undefined;

/**
 * The last status or error message.
 * @member {String} lastMessage
 */
JobExecutionProperties.prototype['lastMessage'] = undefined;

/**
 * The detailed state of the job execution.
 * @member {module:model/JobExecutionProperties.LifecycleEnum} lifecycle
 */
JobExecutionProperties.prototype['lifecycle'] = undefined;

/**
 * The ARM provisioning state of the job execution.
 * @member {module:model/JobExecutionProperties.ProvisioningStateEnum} provisioningState
 */
JobExecutionProperties.prototype['provisioningState'] = undefined;

/**
 * The time that the job execution started.
 * @member {Date} startTime
 */
JobExecutionProperties.prototype['startTime'] = undefined;

/**
 * The job step id.
 * @member {Number} stepId
 */
JobExecutionProperties.prototype['stepId'] = undefined;

/**
 * The job step name.
 * @member {String} stepName
 */
JobExecutionProperties.prototype['stepName'] = undefined;

/**
 * @member {module:model/JobExecutionTarget} target
 */
JobExecutionProperties.prototype['target'] = undefined;





/**
 * Allowed values for the <code>lifecycle</code> property.
 * @enum {String}
 * @readonly
 */
JobExecutionProperties['LifecycleEnum'] = {

    /**
     * value: "Created"
     * @const
     */
    "Created": "Created",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "WaitingForChildJobExecutions"
     * @const
     */
    "WaitingForChildJobExecutions": "WaitingForChildJobExecutions",

    /**
     * value: "WaitingForRetry"
     * @const
     */
    "WaitingForRetry": "WaitingForRetry",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "SucceededWithSkipped"
     * @const
     */
    "SucceededWithSkipped": "SucceededWithSkipped",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "TimedOut"
     * @const
     */
    "TimedOut": "TimedOut",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled",

    /**
     * value: "Skipped"
     * @const
     */
    "Skipped": "Skipped"
};


/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
JobExecutionProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Created"
     * @const
     */
    "Created": "Created",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Canceled"
     * @const
     */
    "Canceled": "Canceled"
};



export default JobExecutionProperties;

