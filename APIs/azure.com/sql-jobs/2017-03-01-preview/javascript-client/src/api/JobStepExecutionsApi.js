/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import JobExecution from '../model/JobExecution';
import JobExecutionListResult from '../model/JobExecutionListResult';

/**
* JobStepExecutions service.
* @module api/JobStepExecutionsApi
* @version 2017-03-01-preview
*/
export default class JobStepExecutionsApi {

    /**
    * Constructs a new JobStepExecutionsApi. 
    * @alias module:api/JobStepExecutionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the jobStepExecutionsGet operation.
     * @callback module:api/JobStepExecutionsApi~jobStepExecutionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JobExecution} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a step execution of a job execution.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {String} jobAgentName The name of the job agent.
     * @param {String} jobName The name of the job to get.
     * @param {String} jobExecutionId The unique id of the job execution
     * @param {String} stepName The name of the step.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/JobStepExecutionsApi~jobStepExecutionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JobExecution}
     */
    jobStepExecutionsGet(resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, stepName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling jobStepExecutionsGet");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling jobStepExecutionsGet");
      }
      // verify the required parameter 'jobAgentName' is set
      if (jobAgentName === undefined || jobAgentName === null) {
        throw new Error("Missing the required parameter 'jobAgentName' when calling jobStepExecutionsGet");
      }
      // verify the required parameter 'jobName' is set
      if (jobName === undefined || jobName === null) {
        throw new Error("Missing the required parameter 'jobName' when calling jobStepExecutionsGet");
      }
      // verify the required parameter 'jobExecutionId' is set
      if (jobExecutionId === undefined || jobExecutionId === null) {
        throw new Error("Missing the required parameter 'jobExecutionId' when calling jobStepExecutionsGet");
      }
      // verify the required parameter 'stepName' is set
      if (stepName === undefined || stepName === null) {
        throw new Error("Missing the required parameter 'stepName' when calling jobStepExecutionsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling jobStepExecutionsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobStepExecutionsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'jobAgentName': jobAgentName,
        'jobName': jobName,
        'jobExecutionId': jobExecutionId,
        'stepName': stepName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = JobExecution;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobStepExecutionsListByJobExecution operation.
     * @callback module:api/JobStepExecutionsApi~jobStepExecutionsListByJobExecutionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JobExecutionListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the step executions of a job execution.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {String} jobAgentName The name of the job agent.
     * @param {String} jobName The name of the job to get.
     * @param {String} jobExecutionId The id of the job execution
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {Object} opts Optional parameters
     * @param {Date} [createTimeMin] If specified, only job executions created at or after the specified time are included.
     * @param {Date} [createTimeMax] If specified, only job executions created before the specified time are included.
     * @param {Date} [endTimeMin] If specified, only job executions completed at or after the specified time are included.
     * @param {Date} [endTimeMax] If specified, only job executions completed before the specified time are included.
     * @param {Boolean} [isActive] If specified, only active or only completed job executions are included.
     * @param {Number} [skip] The number of elements in the collection to skip.
     * @param {Number} [top] The number of elements to return from the collection.
     * @param {module:api/JobStepExecutionsApi~jobStepExecutionsListByJobExecutionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JobExecutionListResult}
     */
    jobStepExecutionsListByJobExecution(resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, subscriptionId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling jobStepExecutionsListByJobExecution");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling jobStepExecutionsListByJobExecution");
      }
      // verify the required parameter 'jobAgentName' is set
      if (jobAgentName === undefined || jobAgentName === null) {
        throw new Error("Missing the required parameter 'jobAgentName' when calling jobStepExecutionsListByJobExecution");
      }
      // verify the required parameter 'jobName' is set
      if (jobName === undefined || jobName === null) {
        throw new Error("Missing the required parameter 'jobName' when calling jobStepExecutionsListByJobExecution");
      }
      // verify the required parameter 'jobExecutionId' is set
      if (jobExecutionId === undefined || jobExecutionId === null) {
        throw new Error("Missing the required parameter 'jobExecutionId' when calling jobStepExecutionsListByJobExecution");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling jobStepExecutionsListByJobExecution");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobStepExecutionsListByJobExecution");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'jobAgentName': jobAgentName,
        'jobName': jobName,
        'jobExecutionId': jobExecutionId,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'createTimeMin': opts['createTimeMin'],
        'createTimeMax': opts['createTimeMax'],
        'endTimeMin': opts['endTimeMin'],
        'endTimeMax': opts['endTimeMax'],
        'isActive': opts['isActive'],
        '$skip': opts['skip'],
        '$top': opts['top'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = JobExecutionListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
