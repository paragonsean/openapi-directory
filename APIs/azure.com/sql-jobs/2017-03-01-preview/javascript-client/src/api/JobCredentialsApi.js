/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import JobCredential from '../model/JobCredential';
import JobCredentialListResult from '../model/JobCredentialListResult';

/**
* JobCredentials service.
* @module api/JobCredentialsApi
* @version 2017-03-01-preview
*/
export default class JobCredentialsApi {

    /**
    * Constructs a new JobCredentialsApi. 
    * @alias module:api/JobCredentialsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the jobCredentialsCreateOrUpdate operation.
     * @callback module:api/JobCredentialsApi~jobCredentialsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JobCredential} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates a job credential.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {String} jobAgentName The name of the job agent.
     * @param {String} credentialName The name of the credential.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:model/JobCredential} parameters The requested job credential state.
     * @param {module:api/JobCredentialsApi~jobCredentialsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JobCredential}
     */
    jobCredentialsCreateOrUpdate(resourceGroupName, serverName, jobAgentName, credentialName, subscriptionId, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling jobCredentialsCreateOrUpdate");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling jobCredentialsCreateOrUpdate");
      }
      // verify the required parameter 'jobAgentName' is set
      if (jobAgentName === undefined || jobAgentName === null) {
        throw new Error("Missing the required parameter 'jobAgentName' when calling jobCredentialsCreateOrUpdate");
      }
      // verify the required parameter 'credentialName' is set
      if (credentialName === undefined || credentialName === null) {
        throw new Error("Missing the required parameter 'credentialName' when calling jobCredentialsCreateOrUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling jobCredentialsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobCredentialsCreateOrUpdate");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling jobCredentialsCreateOrUpdate");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'jobAgentName': jobAgentName,
        'credentialName': credentialName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = JobCredential;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials/{credentialName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobCredentialsDelete operation.
     * @callback module:api/JobCredentialsApi~jobCredentialsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a job credential.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {String} jobAgentName The name of the job agent.
     * @param {String} credentialName The name of the credential.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/JobCredentialsApi~jobCredentialsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    jobCredentialsDelete(resourceGroupName, serverName, jobAgentName, credentialName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling jobCredentialsDelete");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling jobCredentialsDelete");
      }
      // verify the required parameter 'jobAgentName' is set
      if (jobAgentName === undefined || jobAgentName === null) {
        throw new Error("Missing the required parameter 'jobAgentName' when calling jobCredentialsDelete");
      }
      // verify the required parameter 'credentialName' is set
      if (credentialName === undefined || credentialName === null) {
        throw new Error("Missing the required parameter 'credentialName' when calling jobCredentialsDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling jobCredentialsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobCredentialsDelete");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'jobAgentName': jobAgentName,
        'credentialName': credentialName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials/{credentialName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobCredentialsGet operation.
     * @callback module:api/JobCredentialsApi~jobCredentialsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JobCredential} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a jobs credential.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {String} jobAgentName The name of the job agent.
     * @param {String} credentialName The name of the credential.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/JobCredentialsApi~jobCredentialsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JobCredential}
     */
    jobCredentialsGet(resourceGroupName, serverName, jobAgentName, credentialName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling jobCredentialsGet");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling jobCredentialsGet");
      }
      // verify the required parameter 'jobAgentName' is set
      if (jobAgentName === undefined || jobAgentName === null) {
        throw new Error("Missing the required parameter 'jobAgentName' when calling jobCredentialsGet");
      }
      // verify the required parameter 'credentialName' is set
      if (credentialName === undefined || credentialName === null) {
        throw new Error("Missing the required parameter 'credentialName' when calling jobCredentialsGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling jobCredentialsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobCredentialsGet");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'jobAgentName': jobAgentName,
        'credentialName': credentialName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = JobCredential;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials/{credentialName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobCredentialsListByAgent operation.
     * @callback module:api/JobCredentialsApi~jobCredentialsListByAgentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JobCredentialListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of jobs credentials.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {String} serverName The name of the server.
     * @param {String} jobAgentName The name of the job agent.
     * @param {String} subscriptionId The subscription ID that identifies an Azure subscription.
     * @param {String} apiVersion The API version to use for the request.
     * @param {module:api/JobCredentialsApi~jobCredentialsListByAgentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JobCredentialListResult}
     */
    jobCredentialsListByAgent(resourceGroupName, serverName, jobAgentName, subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling jobCredentialsListByAgent");
      }
      // verify the required parameter 'serverName' is set
      if (serverName === undefined || serverName === null) {
        throw new Error("Missing the required parameter 'serverName' when calling jobCredentialsListByAgent");
      }
      // verify the required parameter 'jobAgentName' is set
      if (jobAgentName === undefined || jobAgentName === null) {
        throw new Error("Missing the required parameter 'jobAgentName' when calling jobCredentialsListByAgent");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling jobCredentialsListByAgent");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobCredentialsListByAgent");
      }

      let pathParams = {
        'resourceGroupName': resourceGroupName,
        'serverName': serverName,
        'jobAgentName': jobAgentName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = JobCredentialListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
