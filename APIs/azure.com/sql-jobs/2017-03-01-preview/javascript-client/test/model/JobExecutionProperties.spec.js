/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SqlManagementClient);
  }
}(this, function(expect, SqlManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SqlManagementClient.JobExecutionProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('JobExecutionProperties', function() {
    it('should create an instance of JobExecutionProperties', function() {
      // uncomment below and update the code to test JobExecutionProperties
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be.a(SqlManagementClient.JobExecutionProperties);
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

    it('should have the property currentAttemptStartTime (base name: "currentAttemptStartTime")', function() {
      // uncomment below and update the code to test the property currentAttemptStartTime
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

    it('should have the property currentAttempts (base name: "currentAttempts")', function() {
      // uncomment below and update the code to test the property currentAttempts
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "endTime")', function() {
      // uncomment below and update the code to test the property endTime
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

    it('should have the property jobExecutionId (base name: "jobExecutionId")', function() {
      // uncomment below and update the code to test the property jobExecutionId
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

    it('should have the property jobVersion (base name: "jobVersion")', function() {
      // uncomment below and update the code to test the property jobVersion
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

    it('should have the property lastMessage (base name: "lastMessage")', function() {
      // uncomment below and update the code to test the property lastMessage
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

    it('should have the property lifecycle (base name: "lifecycle")', function() {
      // uncomment below and update the code to test the property lifecycle
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

    it('should have the property provisioningState (base name: "provisioningState")', function() {
      // uncomment below and update the code to test the property provisioningState
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

    it('should have the property stepId (base name: "stepId")', function() {
      // uncomment below and update the code to test the property stepId
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

    it('should have the property stepName (base name: "stepName")', function() {
      // uncomment below and update the code to test the property stepName
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

    it('should have the property target (base name: "target")', function() {
      // uncomment below and update the code to test the property target
      //var instance = new SqlManagementClient.JobExecutionProperties();
      //expect(instance).to.be();
    });

  });

}));
