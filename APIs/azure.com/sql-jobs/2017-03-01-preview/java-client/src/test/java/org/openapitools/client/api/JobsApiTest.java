/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Job;
import org.openapitools.client.model.JobListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobsApi
 */
@Disabled
public class JobsApiTest {

    private final JobsApi api = new JobsApi();

    /**
     * Creates or updates a job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Job parameters = null;
        Job response = api.jobsCreateOrUpdate(resourceGroupName, serverName, jobAgentName, jobName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.jobsDelete(resourceGroupName, serverName, jobAgentName, jobName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        String subscriptionId = null;
        String apiVersion = null;
        Job response = api.jobsGet(resourceGroupName, serverName, jobAgentName, jobName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of jobs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsListByAgentTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobListResult response = api.jobsListByAgent(resourceGroupName, serverName, jobAgentName, subscriptionId, apiVersion);
        // TODO: test validations
    }

}
