/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.JobAgent;
import org.openapitools.client.model.JobAgentListResult;
import org.openapitools.client.model.JobAgentUpdate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobAgentsApi
 */
@Disabled
public class JobAgentsApiTest {

    private final JobAgentsApi api = new JobAgentsApi();

    /**
     * Creates or updates a job agent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobAgentsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobAgent parameters = null;
        JobAgent response = api.jobAgentsCreateOrUpdate(resourceGroupName, serverName, jobAgentName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a job agent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobAgentsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.jobAgentsDelete(resourceGroupName, serverName, jobAgentName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a job agent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobAgentsGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobAgent response = api.jobAgentsGet(resourceGroupName, serverName, jobAgentName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of job agents in a server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobAgentsListByServerTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobAgentListResult response = api.jobAgentsListByServer(resourceGroupName, serverName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates a job agent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobAgentsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobAgentUpdate parameters = null;
        JobAgent response = api.jobAgentsUpdate(resourceGroupName, serverName, jobAgentName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

}
