/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.JobStep;
import org.openapitools.client.model.JobStepListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobStepsApi
 */
@Disabled
public class JobStepsApiTest {

    private final JobStepsApi api = new JobStepsApi();

    /**
     * Creates or updates a job step. This will implicitly create a new job version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobStepsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        String stepName = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobStep parameters = null;
        JobStep response = api.jobStepsCreateOrUpdate(resourceGroupName, serverName, jobAgentName, jobName, stepName, subscriptionId, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a job step. This will implicitly create a new job version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobStepsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        String stepName = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.jobStepsDelete(resourceGroupName, serverName, jobAgentName, jobName, stepName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a job step in a job&#39;s current version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobStepsGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        String stepName = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobStep response = api.jobStepsGet(resourceGroupName, serverName, jobAgentName, jobName, stepName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the specified version of a job step.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobStepsGetByVersionTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        Integer jobVersion = null;
        String stepName = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobStep response = api.jobStepsGetByVersion(resourceGroupName, serverName, jobAgentName, jobName, jobVersion, stepName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all job steps for a job&#39;s current version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobStepsListByJobTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobStepListResult response = api.jobStepsListByJob(resourceGroupName, serverName, jobAgentName, jobName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all job steps in the specified job version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobStepsListByVersionTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        Integer jobVersion = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobStepListResult response = api.jobStepsListByVersion(resourceGroupName, serverName, jobAgentName, jobName, jobVersion, subscriptionId, apiVersion);
        // TODO: test validations
    }

}
