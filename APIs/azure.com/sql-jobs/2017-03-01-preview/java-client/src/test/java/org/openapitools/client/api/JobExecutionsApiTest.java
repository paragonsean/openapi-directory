/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.JobExecution;
import org.openapitools.client.model.JobExecutionListResult;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobExecutionsApi
 */
@Disabled
public class JobExecutionsApiTest {

    private final JobExecutionsApi api = new JobExecutionsApi();

    /**
     * Requests cancellation of a job execution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobExecutionsCancelTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        UUID jobExecutionId = null;
        String subscriptionId = null;
        String apiVersion = null;
        api.jobExecutionsCancel(resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Starts an elastic job execution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobExecutionsCreateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobExecution response = api.jobExecutionsCreate(resourceGroupName, serverName, jobAgentName, jobName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Creates or updates a job execution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobExecutionsCreateOrUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        UUID jobExecutionId = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobExecution response = api.jobExecutionsCreateOrUpdate(resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a job execution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobExecutionsGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        UUID jobExecutionId = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobExecution response = api.jobExecutionsGet(resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists all executions in a job agent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobExecutionsListByAgentTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String subscriptionId = null;
        String apiVersion = null;
        OffsetDateTime createTimeMin = null;
        OffsetDateTime createTimeMax = null;
        OffsetDateTime endTimeMin = null;
        OffsetDateTime endTimeMax = null;
        Boolean isActive = null;
        Integer $skip = null;
        Integer $top = null;
        JobExecutionListResult response = api.jobExecutionsListByAgent(resourceGroupName, serverName, jobAgentName, subscriptionId, apiVersion, createTimeMin, createTimeMax, endTimeMin, endTimeMax, isActive, $skip, $top);
        // TODO: test validations
    }

    /**
     * Lists a job&#39;s executions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobExecutionsListByJobTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        String subscriptionId = null;
        String apiVersion = null;
        OffsetDateTime createTimeMin = null;
        OffsetDateTime createTimeMax = null;
        OffsetDateTime endTimeMin = null;
        OffsetDateTime endTimeMax = null;
        Boolean isActive = null;
        Integer $skip = null;
        Integer $top = null;
        JobExecutionListResult response = api.jobExecutionsListByJob(resourceGroupName, serverName, jobAgentName, jobName, subscriptionId, apiVersion, createTimeMin, createTimeMax, endTimeMin, endTimeMax, isActive, $skip, $top);
        // TODO: test validations
    }

}
