/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.JobExecution;
import org.openapitools.client.model.JobExecutionListResult;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobTargetExecutionsApi
 */
@Disabled
public class JobTargetExecutionsApiTest {

    private final JobTargetExecutionsApi api = new JobTargetExecutionsApi();

    /**
     * Gets a target execution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobTargetExecutionsGetTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        UUID jobExecutionId = null;
        String stepName = null;
        UUID targetId = null;
        String subscriptionId = null;
        String apiVersion = null;
        JobExecution response = api.jobTargetExecutionsGet(resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, stepName, targetId, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists target executions for all steps of a job execution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobTargetExecutionsListByJobExecutionTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        UUID jobExecutionId = null;
        String subscriptionId = null;
        String apiVersion = null;
        OffsetDateTime createTimeMin = null;
        OffsetDateTime createTimeMax = null;
        OffsetDateTime endTimeMin = null;
        OffsetDateTime endTimeMax = null;
        Boolean isActive = null;
        Integer $skip = null;
        Integer $top = null;
        JobExecutionListResult response = api.jobTargetExecutionsListByJobExecution(resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, subscriptionId, apiVersion, createTimeMin, createTimeMax, endTimeMin, endTimeMax, isActive, $skip, $top);
        // TODO: test validations
    }

    /**
     * Lists the target executions of a job step execution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobTargetExecutionsListByStepTest() throws ApiException {
        String resourceGroupName = null;
        String serverName = null;
        String jobAgentName = null;
        String jobName = null;
        UUID jobExecutionId = null;
        String stepName = null;
        String subscriptionId = null;
        String apiVersion = null;
        OffsetDateTime createTimeMin = null;
        OffsetDateTime createTimeMax = null;
        OffsetDateTime endTimeMin = null;
        OffsetDateTime endTimeMax = null;
        Boolean isActive = null;
        Integer $skip = null;
        Integer $top = null;
        JobExecutionListResult response = api.jobTargetExecutionsListByStep(resourceGroupName, serverName, jobAgentName, jobName, jobExecutionId, stepName, subscriptionId, apiVersion, createTimeMin, createTimeMax, endTimeMin, endTimeMax, isActive, $skip, $top);
        // TODO: test validations
    }

}
