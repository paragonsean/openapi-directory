# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobStepExecutionOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, initial_retry_interval_seconds: int=1, maximum_retry_interval_seconds: int=120, retry_attempts: int=10, retry_interval_backoff_multiplier: float=2.0, timeout_seconds: int=43200):
        """JobStepExecutionOptions - a model defined in OpenAPI

        :param initial_retry_interval_seconds: The initial_retry_interval_seconds of this JobStepExecutionOptions.
        :param maximum_retry_interval_seconds: The maximum_retry_interval_seconds of this JobStepExecutionOptions.
        :param retry_attempts: The retry_attempts of this JobStepExecutionOptions.
        :param retry_interval_backoff_multiplier: The retry_interval_backoff_multiplier of this JobStepExecutionOptions.
        :param timeout_seconds: The timeout_seconds of this JobStepExecutionOptions.
        """
        self.openapi_types = {
            'initial_retry_interval_seconds': int,
            'maximum_retry_interval_seconds': int,
            'retry_attempts': int,
            'retry_interval_backoff_multiplier': float,
            'timeout_seconds': int
        }

        self.attribute_map = {
            'initial_retry_interval_seconds': 'initialRetryIntervalSeconds',
            'maximum_retry_interval_seconds': 'maximumRetryIntervalSeconds',
            'retry_attempts': 'retryAttempts',
            'retry_interval_backoff_multiplier': 'retryIntervalBackoffMultiplier',
            'timeout_seconds': 'timeoutSeconds'
        }

        self._initial_retry_interval_seconds = initial_retry_interval_seconds
        self._maximum_retry_interval_seconds = maximum_retry_interval_seconds
        self._retry_attempts = retry_attempts
        self._retry_interval_backoff_multiplier = retry_interval_backoff_multiplier
        self._timeout_seconds = timeout_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobStepExecutionOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobStepExecutionOptions of this JobStepExecutionOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def initial_retry_interval_seconds(self):
        """Gets the initial_retry_interval_seconds of this JobStepExecutionOptions.

        Initial delay between retries for job step execution.

        :return: The initial_retry_interval_seconds of this JobStepExecutionOptions.
        :rtype: int
        """
        return self._initial_retry_interval_seconds

    @initial_retry_interval_seconds.setter
    def initial_retry_interval_seconds(self, initial_retry_interval_seconds):
        """Sets the initial_retry_interval_seconds of this JobStepExecutionOptions.

        Initial delay between retries for job step execution.

        :param initial_retry_interval_seconds: The initial_retry_interval_seconds of this JobStepExecutionOptions.
        :type initial_retry_interval_seconds: int
        """

        self._initial_retry_interval_seconds = initial_retry_interval_seconds

    @property
    def maximum_retry_interval_seconds(self):
        """Gets the maximum_retry_interval_seconds of this JobStepExecutionOptions.

        The maximum amount of time to wait between retries for job step execution.

        :return: The maximum_retry_interval_seconds of this JobStepExecutionOptions.
        :rtype: int
        """
        return self._maximum_retry_interval_seconds

    @maximum_retry_interval_seconds.setter
    def maximum_retry_interval_seconds(self, maximum_retry_interval_seconds):
        """Sets the maximum_retry_interval_seconds of this JobStepExecutionOptions.

        The maximum amount of time to wait between retries for job step execution.

        :param maximum_retry_interval_seconds: The maximum_retry_interval_seconds of this JobStepExecutionOptions.
        :type maximum_retry_interval_seconds: int
        """

        self._maximum_retry_interval_seconds = maximum_retry_interval_seconds

    @property
    def retry_attempts(self):
        """Gets the retry_attempts of this JobStepExecutionOptions.

        Maximum number of times the job step will be reattempted if the first attempt fails.

        :return: The retry_attempts of this JobStepExecutionOptions.
        :rtype: int
        """
        return self._retry_attempts

    @retry_attempts.setter
    def retry_attempts(self, retry_attempts):
        """Sets the retry_attempts of this JobStepExecutionOptions.

        Maximum number of times the job step will be reattempted if the first attempt fails.

        :param retry_attempts: The retry_attempts of this JobStepExecutionOptions.
        :type retry_attempts: int
        """

        self._retry_attempts = retry_attempts

    @property
    def retry_interval_backoff_multiplier(self):
        """Gets the retry_interval_backoff_multiplier of this JobStepExecutionOptions.

        The backoff multiplier for the time between retries.

        :return: The retry_interval_backoff_multiplier of this JobStepExecutionOptions.
        :rtype: float
        """
        return self._retry_interval_backoff_multiplier

    @retry_interval_backoff_multiplier.setter
    def retry_interval_backoff_multiplier(self, retry_interval_backoff_multiplier):
        """Sets the retry_interval_backoff_multiplier of this JobStepExecutionOptions.

        The backoff multiplier for the time between retries.

        :param retry_interval_backoff_multiplier: The retry_interval_backoff_multiplier of this JobStepExecutionOptions.
        :type retry_interval_backoff_multiplier: float
        """

        self._retry_interval_backoff_multiplier = retry_interval_backoff_multiplier

    @property
    def timeout_seconds(self):
        """Gets the timeout_seconds of this JobStepExecutionOptions.

        Execution timeout for the job step.

        :return: The timeout_seconds of this JobStepExecutionOptions.
        :rtype: int
        """
        return self._timeout_seconds

    @timeout_seconds.setter
    def timeout_seconds(self, timeout_seconds):
        """Sets the timeout_seconds of this JobStepExecutionOptions.

        Execution timeout for the job step.

        :param timeout_seconds: The timeout_seconds of this JobStepExecutionOptions.
        :type timeout_seconds: int
        """

        self._timeout_seconds = timeout_seconds
