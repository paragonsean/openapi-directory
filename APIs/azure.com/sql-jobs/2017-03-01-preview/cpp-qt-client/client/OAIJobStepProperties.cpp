/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobStepProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobStepProperties::OAIJobStepProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobStepProperties::OAIJobStepProperties() {
    this->initializeModel();
}

OAIJobStepProperties::~OAIJobStepProperties() {}

void OAIJobStepProperties::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_credential_isSet = false;
    m_credential_isValid = false;

    m_execution_options_isSet = false;
    m_execution_options_isValid = false;

    m_output_isSet = false;
    m_output_isValid = false;

    m_step_id_isSet = false;
    m_step_id_isValid = false;

    m_target_group_isSet = false;
    m_target_group_isValid = false;
}

void OAIJobStepProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobStepProperties::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_credential_isValid = ::OpenAPI::fromJsonValue(m_credential, json[QString("credential")]);
    m_credential_isSet = !json[QString("credential")].isNull() && m_credential_isValid;

    m_execution_options_isValid = ::OpenAPI::fromJsonValue(m_execution_options, json[QString("executionOptions")]);
    m_execution_options_isSet = !json[QString("executionOptions")].isNull() && m_execution_options_isValid;

    m_output_isValid = ::OpenAPI::fromJsonValue(m_output, json[QString("output")]);
    m_output_isSet = !json[QString("output")].isNull() && m_output_isValid;

    m_step_id_isValid = ::OpenAPI::fromJsonValue(m_step_id, json[QString("stepId")]);
    m_step_id_isSet = !json[QString("stepId")].isNull() && m_step_id_isValid;

    m_target_group_isValid = ::OpenAPI::fromJsonValue(m_target_group, json[QString("targetGroup")]);
    m_target_group_isSet = !json[QString("targetGroup")].isNull() && m_target_group_isValid;
}

QString OAIJobStepProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobStepProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_action.isSet()) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_credential_isSet) {
        obj.insert(QString("credential"), ::OpenAPI::toJsonValue(m_credential));
    }
    if (m_execution_options.isSet()) {
        obj.insert(QString("executionOptions"), ::OpenAPI::toJsonValue(m_execution_options));
    }
    if (m_output.isSet()) {
        obj.insert(QString("output"), ::OpenAPI::toJsonValue(m_output));
    }
    if (m_step_id_isSet) {
        obj.insert(QString("stepId"), ::OpenAPI::toJsonValue(m_step_id));
    }
    if (m_target_group_isSet) {
        obj.insert(QString("targetGroup"), ::OpenAPI::toJsonValue(m_target_group));
    }
    return obj;
}

OAIJobStepAction OAIJobStepProperties::getAction() const {
    return m_action;
}
void OAIJobStepProperties::setAction(const OAIJobStepAction &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIJobStepProperties::is_action_Set() const{
    return m_action_isSet;
}

bool OAIJobStepProperties::is_action_Valid() const{
    return m_action_isValid;
}

QString OAIJobStepProperties::getCredential() const {
    return m_credential;
}
void OAIJobStepProperties::setCredential(const QString &credential) {
    m_credential = credential;
    m_credential_isSet = true;
}

bool OAIJobStepProperties::is_credential_Set() const{
    return m_credential_isSet;
}

bool OAIJobStepProperties::is_credential_Valid() const{
    return m_credential_isValid;
}

OAIJobStepExecutionOptions OAIJobStepProperties::getExecutionOptions() const {
    return m_execution_options;
}
void OAIJobStepProperties::setExecutionOptions(const OAIJobStepExecutionOptions &execution_options) {
    m_execution_options = execution_options;
    m_execution_options_isSet = true;
}

bool OAIJobStepProperties::is_execution_options_Set() const{
    return m_execution_options_isSet;
}

bool OAIJobStepProperties::is_execution_options_Valid() const{
    return m_execution_options_isValid;
}

OAIJobStepOutput OAIJobStepProperties::getOutput() const {
    return m_output;
}
void OAIJobStepProperties::setOutput(const OAIJobStepOutput &output) {
    m_output = output;
    m_output_isSet = true;
}

bool OAIJobStepProperties::is_output_Set() const{
    return m_output_isSet;
}

bool OAIJobStepProperties::is_output_Valid() const{
    return m_output_isValid;
}

qint32 OAIJobStepProperties::getStepId() const {
    return m_step_id;
}
void OAIJobStepProperties::setStepId(const qint32 &step_id) {
    m_step_id = step_id;
    m_step_id_isSet = true;
}

bool OAIJobStepProperties::is_step_id_Set() const{
    return m_step_id_isSet;
}

bool OAIJobStepProperties::is_step_id_Valid() const{
    return m_step_id_isValid;
}

QString OAIJobStepProperties::getTargetGroup() const {
    return m_target_group;
}
void OAIJobStepProperties::setTargetGroup(const QString &target_group) {
    m_target_group = target_group;
    m_target_group_isSet = true;
}

bool OAIJobStepProperties::is_target_group_Set() const{
    return m_target_group_isSet;
}

bool OAIJobStepProperties::is_target_group_Valid() const{
    return m_target_group_isValid;
}

bool OAIJobStepProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_credential_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_step_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_group_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobStepProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_action_isValid && m_credential_isValid && m_target_group_isValid && true;
}

} // namespace OpenAPI
