/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobStepExecutionOptions.h
 *
 * The execution options of a job step.
 */

#ifndef OAIJobStepExecutionOptions_H
#define OAIJobStepExecutionOptions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIJobStepExecutionOptions : public OAIObject {
public:
    OAIJobStepExecutionOptions();
    OAIJobStepExecutionOptions(QString json);
    ~OAIJobStepExecutionOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getInitialRetryIntervalSeconds() const;
    void setInitialRetryIntervalSeconds(const qint32 &initial_retry_interval_seconds);
    bool is_initial_retry_interval_seconds_Set() const;
    bool is_initial_retry_interval_seconds_Valid() const;

    qint32 getMaximumRetryIntervalSeconds() const;
    void setMaximumRetryIntervalSeconds(const qint32 &maximum_retry_interval_seconds);
    bool is_maximum_retry_interval_seconds_Set() const;
    bool is_maximum_retry_interval_seconds_Valid() const;

    qint32 getRetryAttempts() const;
    void setRetryAttempts(const qint32 &retry_attempts);
    bool is_retry_attempts_Set() const;
    bool is_retry_attempts_Valid() const;

    float getRetryIntervalBackoffMultiplier() const;
    void setRetryIntervalBackoffMultiplier(const float &retry_interval_backoff_multiplier);
    bool is_retry_interval_backoff_multiplier_Set() const;
    bool is_retry_interval_backoff_multiplier_Valid() const;

    qint32 getTimeoutSeconds() const;
    void setTimeoutSeconds(const qint32 &timeout_seconds);
    bool is_timeout_seconds_Set() const;
    bool is_timeout_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_initial_retry_interval_seconds;
    bool m_initial_retry_interval_seconds_isSet;
    bool m_initial_retry_interval_seconds_isValid;

    qint32 m_maximum_retry_interval_seconds;
    bool m_maximum_retry_interval_seconds_isSet;
    bool m_maximum_retry_interval_seconds_isValid;

    qint32 m_retry_attempts;
    bool m_retry_attempts_isSet;
    bool m_retry_attempts_isValid;

    float m_retry_interval_backoff_multiplier;
    bool m_retry_interval_backoff_multiplier_isSet;
    bool m_retry_interval_backoff_multiplier_isValid;

    qint32 m_timeout_seconds;
    bool m_timeout_seconds_isSet;
    bool m_timeout_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobStepExecutionOptions)

#endif // OAIJobStepExecutionOptions_H
