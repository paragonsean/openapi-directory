/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobCredentialProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobCredentialProperties::OAIJobCredentialProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobCredentialProperties::OAIJobCredentialProperties() {
    this->initializeModel();
}

OAIJobCredentialProperties::~OAIJobCredentialProperties() {}

void OAIJobCredentialProperties::initializeModel() {

    m_password_isSet = false;
    m_password_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIJobCredentialProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobCredentialProperties::fromJsonObject(QJsonObject json) {

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAIJobCredentialProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobCredentialProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(m_password));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAIJobCredentialProperties::getPassword() const {
    return m_password;
}
void OAIJobCredentialProperties::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIJobCredentialProperties::is_password_Set() const{
    return m_password_isSet;
}

bool OAIJobCredentialProperties::is_password_Valid() const{
    return m_password_isValid;
}

QString OAIJobCredentialProperties::getUsername() const {
    return m_username;
}
void OAIJobCredentialProperties::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIJobCredentialProperties::is_username_Set() const{
    return m_username_isSet;
}

bool OAIJobCredentialProperties::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIJobCredentialProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobCredentialProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_password_isValid && m_username_isValid && true;
}

} // namespace OpenAPI
