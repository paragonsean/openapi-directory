/**
 * ApiManagementClient
 * Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).
 *
 * The version of the OpenAPI document: 2016-10-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AuthorizationServerCollection from './model/AuthorizationServerCollection';
import AuthorizationServersGetDefaultResponse from './model/AuthorizationServersGetDefaultResponse';
import AuthorizationServersGetDefaultResponseDetailsInner from './model/AuthorizationServersGetDefaultResponseDetailsInner';
import OAuth2AuthorizationServerContract from './model/OAuth2AuthorizationServerContract';
import OAuth2AuthorizationServerUpdateContract from './model/OAuth2AuthorizationServerUpdateContract';
import TokenBodyParameterContract from './model/TokenBodyParameterContract';
import AuthorizationServersApi from './api/AuthorizationServersApi';


/**
* Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiManagementClient = require('index'); // See note below*.
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2016-10-10
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuthorizationServerCollection model constructor.
     * @property {module:model/AuthorizationServerCollection}
     */
    AuthorizationServerCollection,

    /**
     * The AuthorizationServersGetDefaultResponse model constructor.
     * @property {module:model/AuthorizationServersGetDefaultResponse}
     */
    AuthorizationServersGetDefaultResponse,

    /**
     * The AuthorizationServersGetDefaultResponseDetailsInner model constructor.
     * @property {module:model/AuthorizationServersGetDefaultResponseDetailsInner}
     */
    AuthorizationServersGetDefaultResponseDetailsInner,

    /**
     * The OAuth2AuthorizationServerContract model constructor.
     * @property {module:model/OAuth2AuthorizationServerContract}
     */
    OAuth2AuthorizationServerContract,

    /**
     * The OAuth2AuthorizationServerUpdateContract model constructor.
     * @property {module:model/OAuth2AuthorizationServerUpdateContract}
     */
    OAuth2AuthorizationServerUpdateContract,

    /**
     * The TokenBodyParameterContract model constructor.
     * @property {module:model/TokenBodyParameterContract}
     */
    TokenBodyParameterContract,

    /**
    * The AuthorizationServersApi service constructor.
    * @property {module:api/AuthorizationServersApi}
    */
    AuthorizationServersApi
};
