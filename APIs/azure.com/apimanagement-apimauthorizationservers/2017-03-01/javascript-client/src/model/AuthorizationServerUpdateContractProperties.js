/**
 * ApiManagementClient
 * Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).
 *
 * The version of the OpenAPI document: 2017-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthorizationServerContractBaseProperties from './AuthorizationServerContractBaseProperties';
import TokenBodyParameterContract from './TokenBodyParameterContract';

/**
 * The AuthorizationServerUpdateContractProperties model module.
 * @module model/AuthorizationServerUpdateContractProperties
 * @version 2017-03-01
 */
class AuthorizationServerUpdateContractProperties {
    /**
     * Constructs a new <code>AuthorizationServerUpdateContractProperties</code>.
     * External OAuth authorization server Update settings contract.
     * @alias module:model/AuthorizationServerUpdateContractProperties
     * @implements module:model/AuthorizationServerContractBaseProperties
     */
    constructor() { 
        AuthorizationServerContractBaseProperties.initialize(this);
        AuthorizationServerUpdateContractProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthorizationServerUpdateContractProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthorizationServerUpdateContractProperties} obj Optional instance to populate.
     * @return {module:model/AuthorizationServerUpdateContractProperties} The populated <code>AuthorizationServerUpdateContractProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthorizationServerUpdateContractProperties();
            AuthorizationServerContractBaseProperties.constructFromObject(data, obj);

            if (data.hasOwnProperty('authorizationEndpoint')) {
                obj['authorizationEndpoint'] = ApiClient.convertToType(data['authorizationEndpoint'], 'String');
            }
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('clientRegistrationEndpoint')) {
                obj['clientRegistrationEndpoint'] = ApiClient.convertToType(data['clientRegistrationEndpoint'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('grantTypes')) {
                obj['grantTypes'] = ApiClient.convertToType(data['grantTypes'], ['String']);
            }
            if (data.hasOwnProperty('authorizationMethods')) {
                obj['authorizationMethods'] = ApiClient.convertToType(data['authorizationMethods'], ['String']);
            }
            if (data.hasOwnProperty('bearerTokenSendingMethods')) {
                obj['bearerTokenSendingMethods'] = ApiClient.convertToType(data['bearerTokenSendingMethods'], ['String']);
            }
            if (data.hasOwnProperty('clientAuthenticationMethod')) {
                obj['clientAuthenticationMethod'] = ApiClient.convertToType(data['clientAuthenticationMethod'], ['String']);
            }
            if (data.hasOwnProperty('clientSecret')) {
                obj['clientSecret'] = ApiClient.convertToType(data['clientSecret'], 'String');
            }
            if (data.hasOwnProperty('defaultScope')) {
                obj['defaultScope'] = ApiClient.convertToType(data['defaultScope'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('resourceOwnerPassword')) {
                obj['resourceOwnerPassword'] = ApiClient.convertToType(data['resourceOwnerPassword'], 'String');
            }
            if (data.hasOwnProperty('resourceOwnerUsername')) {
                obj['resourceOwnerUsername'] = ApiClient.convertToType(data['resourceOwnerUsername'], 'String');
            }
            if (data.hasOwnProperty('supportState')) {
                obj['supportState'] = ApiClient.convertToType(data['supportState'], 'Boolean');
            }
            if (data.hasOwnProperty('tokenBodyParameters')) {
                obj['tokenBodyParameters'] = ApiClient.convertToType(data['tokenBodyParameters'], [TokenBodyParameterContract]);
            }
            if (data.hasOwnProperty('tokenEndpoint')) {
                obj['tokenEndpoint'] = ApiClient.convertToType(data['tokenEndpoint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthorizationServerUpdateContractProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthorizationServerUpdateContractProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['authorizationEndpoint'] && !(typeof data['authorizationEndpoint'] === 'string' || data['authorizationEndpoint'] instanceof String)) {
            throw new Error("Expected the field `authorizationEndpoint` to be a primitive type in the JSON string but got " + data['authorizationEndpoint']);
        }
        // ensure the json data is a string
        if (data['clientId'] && !(typeof data['clientId'] === 'string' || data['clientId'] instanceof String)) {
            throw new Error("Expected the field `clientId` to be a primitive type in the JSON string but got " + data['clientId']);
        }
        // ensure the json data is a string
        if (data['clientRegistrationEndpoint'] && !(typeof data['clientRegistrationEndpoint'] === 'string' || data['clientRegistrationEndpoint'] instanceof String)) {
            throw new Error("Expected the field `clientRegistrationEndpoint` to be a primitive type in the JSON string but got " + data['clientRegistrationEndpoint']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['grantTypes'])) {
            throw new Error("Expected the field `grantTypes` to be an array in the JSON data but got " + data['grantTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['authorizationMethods'])) {
            throw new Error("Expected the field `authorizationMethods` to be an array in the JSON data but got " + data['authorizationMethods']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['bearerTokenSendingMethods'])) {
            throw new Error("Expected the field `bearerTokenSendingMethods` to be an array in the JSON data but got " + data['bearerTokenSendingMethods']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['clientAuthenticationMethod'])) {
            throw new Error("Expected the field `clientAuthenticationMethod` to be an array in the JSON data but got " + data['clientAuthenticationMethod']);
        }
        // ensure the json data is a string
        if (data['clientSecret'] && !(typeof data['clientSecret'] === 'string' || data['clientSecret'] instanceof String)) {
            throw new Error("Expected the field `clientSecret` to be a primitive type in the JSON string but got " + data['clientSecret']);
        }
        // ensure the json data is a string
        if (data['defaultScope'] && !(typeof data['defaultScope'] === 'string' || data['defaultScope'] instanceof String)) {
            throw new Error("Expected the field `defaultScope` to be a primitive type in the JSON string but got " + data['defaultScope']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['resourceOwnerPassword'] && !(typeof data['resourceOwnerPassword'] === 'string' || data['resourceOwnerPassword'] instanceof String)) {
            throw new Error("Expected the field `resourceOwnerPassword` to be a primitive type in the JSON string but got " + data['resourceOwnerPassword']);
        }
        // ensure the json data is a string
        if (data['resourceOwnerUsername'] && !(typeof data['resourceOwnerUsername'] === 'string' || data['resourceOwnerUsername'] instanceof String)) {
            throw new Error("Expected the field `resourceOwnerUsername` to be a primitive type in the JSON string but got " + data['resourceOwnerUsername']);
        }
        if (data['tokenBodyParameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tokenBodyParameters'])) {
                throw new Error("Expected the field `tokenBodyParameters` to be an array in the JSON data but got " + data['tokenBodyParameters']);
            }
            // validate the optional field `tokenBodyParameters` (array)
            for (const item of data['tokenBodyParameters']) {
                TokenBodyParameterContract.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['tokenEndpoint'] && !(typeof data['tokenEndpoint'] === 'string' || data['tokenEndpoint'] instanceof String)) {
            throw new Error("Expected the field `tokenEndpoint` to be a primitive type in the JSON string but got " + data['tokenEndpoint']);
        }

        return true;
    }


}



/**
 * OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
 * @member {String} authorizationEndpoint
 */
AuthorizationServerUpdateContractProperties.prototype['authorizationEndpoint'] = undefined;

/**
 * Client or app id registered with this authorization server.
 * @member {String} clientId
 */
AuthorizationServerUpdateContractProperties.prototype['clientId'] = undefined;

/**
 * Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.
 * @member {String} clientRegistrationEndpoint
 */
AuthorizationServerUpdateContractProperties.prototype['clientRegistrationEndpoint'] = undefined;

/**
 * User-friendly authorization server name.
 * @member {String} displayName
 */
AuthorizationServerUpdateContractProperties.prototype['displayName'] = undefined;

/**
 * Form of an authorization grant, which the client uses to request the access token.
 * @member {Array.<module:model/AuthorizationServerUpdateContractProperties.GrantTypesEnum>} grantTypes
 */
AuthorizationServerUpdateContractProperties.prototype['grantTypes'] = undefined;

/**
 * HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
 * @member {Array.<module:model/AuthorizationServerUpdateContractProperties.AuthorizationMethodsEnum>} authorizationMethods
 */
AuthorizationServerUpdateContractProperties.prototype['authorizationMethods'] = undefined;

/**
 * Specifies the mechanism by which access token is passed to the API. 
 * @member {Array.<module:model/AuthorizationServerUpdateContractProperties.BearerTokenSendingMethodsEnum>} bearerTokenSendingMethods
 */
AuthorizationServerUpdateContractProperties.prototype['bearerTokenSendingMethods'] = undefined;

/**
 * Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.
 * @member {Array.<module:model/AuthorizationServerUpdateContractProperties.ClientAuthenticationMethodEnum>} clientAuthenticationMethod
 */
AuthorizationServerUpdateContractProperties.prototype['clientAuthenticationMethod'] = undefined;

/**
 * Client or app secret registered with this authorization server.
 * @member {String} clientSecret
 */
AuthorizationServerUpdateContractProperties.prototype['clientSecret'] = undefined;

/**
 * Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.
 * @member {String} defaultScope
 */
AuthorizationServerUpdateContractProperties.prototype['defaultScope'] = undefined;

/**
 * Description of the authorization server. Can contain HTML formatting tags.
 * @member {String} description
 */
AuthorizationServerUpdateContractProperties.prototype['description'] = undefined;

/**
 * Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.
 * @member {String} resourceOwnerPassword
 */
AuthorizationServerUpdateContractProperties.prototype['resourceOwnerPassword'] = undefined;

/**
 * Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.
 * @member {String} resourceOwnerUsername
 */
AuthorizationServerUpdateContractProperties.prototype['resourceOwnerUsername'] = undefined;

/**
 * If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.
 * @member {Boolean} supportState
 */
AuthorizationServerUpdateContractProperties.prototype['supportState'] = undefined;

/**
 * Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}.
 * @member {Array.<module:model/TokenBodyParameterContract>} tokenBodyParameters
 */
AuthorizationServerUpdateContractProperties.prototype['tokenBodyParameters'] = undefined;

/**
 * OAuth token endpoint. Contains absolute URI to entity being referenced.
 * @member {String} tokenEndpoint
 */
AuthorizationServerUpdateContractProperties.prototype['tokenEndpoint'] = undefined;


// Implement AuthorizationServerContractBaseProperties interface:
/**
 * HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
 * @member {Array.<module:model/AuthorizationServerContractBaseProperties.AuthorizationMethodsEnum>} authorizationMethods
 */
AuthorizationServerContractBaseProperties.prototype['authorizationMethods'] = undefined;
/**
 * Specifies the mechanism by which access token is passed to the API. 
 * @member {Array.<module:model/AuthorizationServerContractBaseProperties.BearerTokenSendingMethodsEnum>} bearerTokenSendingMethods
 */
AuthorizationServerContractBaseProperties.prototype['bearerTokenSendingMethods'] = undefined;
/**
 * Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.
 * @member {Array.<module:model/AuthorizationServerContractBaseProperties.ClientAuthenticationMethodEnum>} clientAuthenticationMethod
 */
AuthorizationServerContractBaseProperties.prototype['clientAuthenticationMethod'] = undefined;
/**
 * Client or app secret registered with this authorization server.
 * @member {String} clientSecret
 */
AuthorizationServerContractBaseProperties.prototype['clientSecret'] = undefined;
/**
 * Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.
 * @member {String} defaultScope
 */
AuthorizationServerContractBaseProperties.prototype['defaultScope'] = undefined;
/**
 * Description of the authorization server. Can contain HTML formatting tags.
 * @member {String} description
 */
AuthorizationServerContractBaseProperties.prototype['description'] = undefined;
/**
 * Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.
 * @member {String} resourceOwnerPassword
 */
AuthorizationServerContractBaseProperties.prototype['resourceOwnerPassword'] = undefined;
/**
 * Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.
 * @member {String} resourceOwnerUsername
 */
AuthorizationServerContractBaseProperties.prototype['resourceOwnerUsername'] = undefined;
/**
 * If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.
 * @member {Boolean} supportState
 */
AuthorizationServerContractBaseProperties.prototype['supportState'] = undefined;
/**
 * Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}.
 * @member {Array.<module:model/TokenBodyParameterContract>} tokenBodyParameters
 */
AuthorizationServerContractBaseProperties.prototype['tokenBodyParameters'] = undefined;
/**
 * OAuth token endpoint. Contains absolute URI to entity being referenced.
 * @member {String} tokenEndpoint
 */
AuthorizationServerContractBaseProperties.prototype['tokenEndpoint'] = undefined;



/**
 * Allowed values for the <code>grantTypes</code> property.
 * @enum {String}
 * @readonly
 */
AuthorizationServerUpdateContractProperties['GrantTypesEnum'] = {

    /**
     * value: "authorizationCode"
     * @const
     */
    "authorizationCode": "authorizationCode",

    /**
     * value: "implicit"
     * @const
     */
    "implicit": "implicit",

    /**
     * value: "resourceOwnerPassword"
     * @const
     */
    "resourceOwnerPassword": "resourceOwnerPassword",

    /**
     * value: "clientCredentials"
     * @const
     */
    "clientCredentials": "clientCredentials"
};


/**
 * Allowed values for the <code>authorizationMethods</code> property.
 * @enum {String}
 * @readonly
 */
AuthorizationServerUpdateContractProperties['AuthorizationMethodsEnum'] = {

    /**
     * value: "HEAD"
     * @const
     */
    "HEAD": "HEAD",

    /**
     * value: "OPTIONS"
     * @const
     */
    "OPTIONS": "OPTIONS",

    /**
     * value: "TRACE"
     * @const
     */
    "TRACE": "TRACE",

    /**
     * value: "GET"
     * @const
     */
    "GET": "GET",

    /**
     * value: "POST"
     * @const
     */
    "POST": "POST",

    /**
     * value: "PUT"
     * @const
     */
    "PUT": "PUT",

    /**
     * value: "PATCH"
     * @const
     */
    "PATCH": "PATCH",

    /**
     * value: "DELETE"
     * @const
     */
    "DELETE": "DELETE"
};


/**
 * Allowed values for the <code>bearerTokenSendingMethods</code> property.
 * @enum {String}
 * @readonly
 */
AuthorizationServerUpdateContractProperties['BearerTokenSendingMethodsEnum'] = {

    /**
     * value: "authorizationHeader"
     * @const
     */
    "authorizationHeader": "authorizationHeader",

    /**
     * value: "query"
     * @const
     */
    "query": "query"
};


/**
 * Allowed values for the <code>clientAuthenticationMethod</code> property.
 * @enum {String}
 * @readonly
 */
AuthorizationServerUpdateContractProperties['ClientAuthenticationMethodEnum'] = {

    /**
     * value: "Basic"
     * @const
     */
    "Basic": "Basic",

    /**
     * value: "Body"
     * @const
     */
    "Body": "Body"
};



export default AuthorizationServerUpdateContractProperties;

