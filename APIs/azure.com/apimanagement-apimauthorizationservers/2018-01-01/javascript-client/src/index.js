/**
 * ApiManagementClient
 * Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AuthorizationServerCollection from './model/AuthorizationServerCollection';
import AuthorizationServerContract from './model/AuthorizationServerContract';
import AuthorizationServerContractBaseProperties from './model/AuthorizationServerContractBaseProperties';
import AuthorizationServerContractProperties from './model/AuthorizationServerContractProperties';
import AuthorizationServerGetDefaultResponse from './model/AuthorizationServerGetDefaultResponse';
import AuthorizationServerGetDefaultResponseError from './model/AuthorizationServerGetDefaultResponseError';
import AuthorizationServerGetDefaultResponseErrorDetailsInner from './model/AuthorizationServerGetDefaultResponseErrorDetailsInner';
import AuthorizationServerUpdateContract from './model/AuthorizationServerUpdateContract';
import AuthorizationServerUpdateContractProperties from './model/AuthorizationServerUpdateContractProperties';
import TokenBodyParameterContract from './model/TokenBodyParameterContract';
import AuthorizationServersApi from './api/AuthorizationServersApi';


/**
* Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiManagementClient = require('index'); // See note below*.
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-01-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuthorizationServerCollection model constructor.
     * @property {module:model/AuthorizationServerCollection}
     */
    AuthorizationServerCollection,

    /**
     * The AuthorizationServerContract model constructor.
     * @property {module:model/AuthorizationServerContract}
     */
    AuthorizationServerContract,

    /**
     * The AuthorizationServerContractBaseProperties model constructor.
     * @property {module:model/AuthorizationServerContractBaseProperties}
     */
    AuthorizationServerContractBaseProperties,

    /**
     * The AuthorizationServerContractProperties model constructor.
     * @property {module:model/AuthorizationServerContractProperties}
     */
    AuthorizationServerContractProperties,

    /**
     * The AuthorizationServerGetDefaultResponse model constructor.
     * @property {module:model/AuthorizationServerGetDefaultResponse}
     */
    AuthorizationServerGetDefaultResponse,

    /**
     * The AuthorizationServerGetDefaultResponseError model constructor.
     * @property {module:model/AuthorizationServerGetDefaultResponseError}
     */
    AuthorizationServerGetDefaultResponseError,

    /**
     * The AuthorizationServerGetDefaultResponseErrorDetailsInner model constructor.
     * @property {module:model/AuthorizationServerGetDefaultResponseErrorDetailsInner}
     */
    AuthorizationServerGetDefaultResponseErrorDetailsInner,

    /**
     * The AuthorizationServerUpdateContract model constructor.
     * @property {module:model/AuthorizationServerUpdateContract}
     */
    AuthorizationServerUpdateContract,

    /**
     * The AuthorizationServerUpdateContractProperties model constructor.
     * @property {module:model/AuthorizationServerUpdateContractProperties}
     */
    AuthorizationServerUpdateContractProperties,

    /**
     * The TokenBodyParameterContract model constructor.
     * @property {module:model/TokenBodyParameterContract}
     */
    TokenBodyParameterContract,

    /**
    * The AuthorizationServersApi service constructor.
    * @property {module:api/AuthorizationServersApi}
    */
    AuthorizationServersApi
};
