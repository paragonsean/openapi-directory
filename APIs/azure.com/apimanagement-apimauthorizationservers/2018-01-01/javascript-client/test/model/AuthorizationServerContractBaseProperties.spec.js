/**
 * ApiManagementClient
 * Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).
 *
 * The version of the OpenAPI document: 2018-01-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiManagementClient);
  }
}(this, function(expect, ApiManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AuthorizationServerContractBaseProperties', function() {
    it('should create an instance of AuthorizationServerContractBaseProperties', function() {
      // uncomment below and update the code to test AuthorizationServerContractBaseProperties
      //var instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
      //expect(instance).to.be.a(ApiManagementClient.AuthorizationServerContractBaseProperties);
    });

    it('should have the property authorizationMethods (base name: "authorizationMethods")', function() {
      // uncomment below and update the code to test the property authorizationMethods
      //var instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
      //expect(instance).to.be();
    });

    it('should have the property bearerTokenSendingMethods (base name: "bearerTokenSendingMethods")', function() {
      // uncomment below and update the code to test the property bearerTokenSendingMethods
      //var instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
      //expect(instance).to.be();
    });

    it('should have the property clientAuthenticationMethod (base name: "clientAuthenticationMethod")', function() {
      // uncomment below and update the code to test the property clientAuthenticationMethod
      //var instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
      //expect(instance).to.be();
    });

    it('should have the property clientSecret (base name: "clientSecret")', function() {
      // uncomment below and update the code to test the property clientSecret
      //var instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
      //expect(instance).to.be();
    });

    it('should have the property defaultScope (base name: "defaultScope")', function() {
      // uncomment below and update the code to test the property defaultScope
      //var instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
      //expect(instance).to.be();
    });

    it('should have the property resourceOwnerPassword (base name: "resourceOwnerPassword")', function() {
      // uncomment below and update the code to test the property resourceOwnerPassword
      //var instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
      //expect(instance).to.be();
    });

    it('should have the property resourceOwnerUsername (base name: "resourceOwnerUsername")', function() {
      // uncomment below and update the code to test the property resourceOwnerUsername
      //var instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
      //expect(instance).to.be();
    });

    it('should have the property supportState (base name: "supportState")', function() {
      // uncomment below and update the code to test the property supportState
      //var instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
      //expect(instance).to.be();
    });

    it('should have the property tokenBodyParameters (base name: "tokenBodyParameters")', function() {
      // uncomment below and update the code to test the property tokenBodyParameters
      //var instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
      //expect(instance).to.be();
    });

    it('should have the property tokenEndpoint (base name: "tokenEndpoint")', function() {
      // uncomment below and update the code to test the property tokenEndpoint
      //var instance = new ApiManagementClient.AuthorizationServerContractBaseProperties();
      //expect(instance).to.be();
    });

  });

}));
