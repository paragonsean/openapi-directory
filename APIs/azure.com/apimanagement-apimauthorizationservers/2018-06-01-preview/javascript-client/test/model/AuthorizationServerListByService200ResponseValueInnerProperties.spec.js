/**
 * ApiManagementClient
 * Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiManagementClient);
  }
}(this, function(expect, ApiManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiManagementClient.AuthorizationServerListByService200ResponseValueInnerProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AuthorizationServerListByService200ResponseValueInnerProperties', function() {
    it('should create an instance of AuthorizationServerListByService200ResponseValueInnerProperties', function() {
      // uncomment below and update the code to test AuthorizationServerListByService200ResponseValueInnerProperties
      //var instance = new ApiManagementClient.AuthorizationServerListByService200ResponseValueInnerProperties();
      //expect(instance).to.be.a(ApiManagementClient.AuthorizationServerListByService200ResponseValueInnerProperties);
    });

    it('should have the property authorizationEndpoint (base name: "authorizationEndpoint")', function() {
      // uncomment below and update the code to test the property authorizationEndpoint
      //var instance = new ApiManagementClient.AuthorizationServerListByService200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "clientId")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new ApiManagementClient.AuthorizationServerListByService200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property clientRegistrationEndpoint (base name: "clientRegistrationEndpoint")', function() {
      // uncomment below and update the code to test the property clientRegistrationEndpoint
      //var instance = new ApiManagementClient.AuthorizationServerListByService200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new ApiManagementClient.AuthorizationServerListByService200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property grantTypes (base name: "grantTypes")', function() {
      // uncomment below and update the code to test the property grantTypes
      //var instance = new ApiManagementClient.AuthorizationServerListByService200ResponseValueInnerProperties();
      //expect(instance).to.be();
    });

  });

}));
