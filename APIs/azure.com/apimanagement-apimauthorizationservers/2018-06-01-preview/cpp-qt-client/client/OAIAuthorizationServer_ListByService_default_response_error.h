/**
 * ApiManagementClient
 * Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthorizationServer_ListByService_default_response_error.h
 *
 * Error Body contract.
 */

#ifndef OAIAuthorizationServer_ListByService_default_response_error_H
#define OAIAuthorizationServer_ListByService_default_response_error_H

#include <QJsonObject>

#include "OAIAuthorizationServer_ListByService_default_response_error_details_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuthorizationServer_ListByService_default_response_error_details_inner;

class OAIAuthorizationServer_ListByService_default_response_error : public OAIObject {
public:
    OAIAuthorizationServer_ListByService_default_response_error();
    OAIAuthorizationServer_ListByService_default_response_error(QString json);
    ~OAIAuthorizationServer_ListByService_default_response_error() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QList<OAIAuthorizationServer_ListByService_default_response_error_details_inner> getDetails() const;
    void setDetails(const QList<OAIAuthorizationServer_ListByService_default_response_error_details_inner> &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QList<OAIAuthorizationServer_ListByService_default_response_error_details_inner> m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthorizationServer_ListByService_default_response_error)

#endif // OAIAuthorizationServer_ListByService_default_response_error_H
