/**
 * ApiManagementClient
 * Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthorizationServer_ListByService_200_response_value_inner_properties.h
 *
 * External OAuth authorization server settings Properties.
 */

#ifndef OAIAuthorizationServer_ListByService_200_response_value_inner_properties_H
#define OAIAuthorizationServer_ListByService_200_response_value_inner_properties_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuthorizationServer_ListByService_200_response_value_inner_properties : public OAIObject {
public:
    OAIAuthorizationServer_ListByService_200_response_value_inner_properties();
    OAIAuthorizationServer_ListByService_200_response_value_inner_properties(QString json);
    ~OAIAuthorizationServer_ListByService_200_response_value_inner_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthorizationEndpoint() const;
    void setAuthorizationEndpoint(const QString &authorization_endpoint);
    bool is_authorization_endpoint_Set() const;
    bool is_authorization_endpoint_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getClientRegistrationEndpoint() const;
    void setClientRegistrationEndpoint(const QString &client_registration_endpoint);
    bool is_client_registration_endpoint_Set() const;
    bool is_client_registration_endpoint_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<QString> getGrantTypes() const;
    void setGrantTypes(const QList<QString> &grant_types);
    bool is_grant_types_Set() const;
    bool is_grant_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authorization_endpoint;
    bool m_authorization_endpoint_isSet;
    bool m_authorization_endpoint_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_client_registration_endpoint;
    bool m_client_registration_endpoint_isSet;
    bool m_client_registration_endpoint_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<QString> m_grant_types;
    bool m_grant_types_isSet;
    bool m_grant_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthorizationServer_ListByService_200_response_value_inner_properties)

#endif // OAIAuthorizationServer_ListByService_200_response_value_inner_properties_H
