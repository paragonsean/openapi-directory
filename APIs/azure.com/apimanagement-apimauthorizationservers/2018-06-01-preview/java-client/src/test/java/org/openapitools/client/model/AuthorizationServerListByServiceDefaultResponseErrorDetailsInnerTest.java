/*
 * ApiManagementClient
 * Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AuthorizationServerListByServiceDefaultResponseErrorDetailsInner
 */
public class AuthorizationServerListByServiceDefaultResponseErrorDetailsInnerTest {
    private final AuthorizationServerListByServiceDefaultResponseErrorDetailsInner model = new AuthorizationServerListByServiceDefaultResponseErrorDetailsInner();

    /**
     * Model tests for AuthorizationServerListByServiceDefaultResponseErrorDetailsInner
     */
    @Test
    public void testAuthorizationServerListByServiceDefaultResponseErrorDetailsInner() {
        // TODO: test AuthorizationServerListByServiceDefaultResponseErrorDetailsInner
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

}
