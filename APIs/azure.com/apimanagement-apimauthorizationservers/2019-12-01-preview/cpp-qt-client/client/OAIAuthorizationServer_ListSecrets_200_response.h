/**
 * ApiManagementClient
 * Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthorizationServer_ListSecrets_200_response.h
 *
 * Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.
 */

#ifndef OAIAuthorizationServer_ListSecrets_200_response_H
#define OAIAuthorizationServer_ListSecrets_200_response_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuthorizationServer_ListSecrets_200_response : public OAIObject {
public:
    OAIAuthorizationServer_ListSecrets_200_response();
    OAIAuthorizationServer_ListSecrets_200_response(QString json);
    ~OAIAuthorizationServer_ListSecrets_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientSecret() const;
    void setClientSecret(const QString &client_secret);
    bool is_client_secret_Set() const;
    bool is_client_secret_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_secret;
    bool m_client_secret_isSet;
    bool m_client_secret_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthorizationServer_ListSecrets_200_response)

#endif // OAIAuthorizationServer_ListSecrets_200_response_H
