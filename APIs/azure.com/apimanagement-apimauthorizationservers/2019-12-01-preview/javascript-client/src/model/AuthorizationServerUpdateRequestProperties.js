/**
 * ApiManagementClient
 * Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).
 *
 * The version of the OpenAPI document: 2019-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthorizationServerUpdateRequestProperties model module.
 * @module model/AuthorizationServerUpdateRequestProperties
 * @version 2019-12-01-preview
 */
class AuthorizationServerUpdateRequestProperties {
    /**
     * Constructs a new <code>AuthorizationServerUpdateRequestProperties</code>.
     * External OAuth authorization server Update settings contract.
     * @alias module:model/AuthorizationServerUpdateRequestProperties
     */
    constructor() { 
        
        AuthorizationServerUpdateRequestProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthorizationServerUpdateRequestProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthorizationServerUpdateRequestProperties} obj Optional instance to populate.
     * @return {module:model/AuthorizationServerUpdateRequestProperties} The populated <code>AuthorizationServerUpdateRequestProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthorizationServerUpdateRequestProperties();

            if (data.hasOwnProperty('authorizationEndpoint')) {
                obj['authorizationEndpoint'] = ApiClient.convertToType(data['authorizationEndpoint'], 'String');
            }
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('clientRegistrationEndpoint')) {
                obj['clientRegistrationEndpoint'] = ApiClient.convertToType(data['clientRegistrationEndpoint'], 'String');
            }
            if (data.hasOwnProperty('clientSecret')) {
                obj['clientSecret'] = ApiClient.convertToType(data['clientSecret'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('grantTypes')) {
                obj['grantTypes'] = ApiClient.convertToType(data['grantTypes'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthorizationServerUpdateRequestProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthorizationServerUpdateRequestProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['authorizationEndpoint'] && !(typeof data['authorizationEndpoint'] === 'string' || data['authorizationEndpoint'] instanceof String)) {
            throw new Error("Expected the field `authorizationEndpoint` to be a primitive type in the JSON string but got " + data['authorizationEndpoint']);
        }
        // ensure the json data is a string
        if (data['clientId'] && !(typeof data['clientId'] === 'string' || data['clientId'] instanceof String)) {
            throw new Error("Expected the field `clientId` to be a primitive type in the JSON string but got " + data['clientId']);
        }
        // ensure the json data is a string
        if (data['clientRegistrationEndpoint'] && !(typeof data['clientRegistrationEndpoint'] === 'string' || data['clientRegistrationEndpoint'] instanceof String)) {
            throw new Error("Expected the field `clientRegistrationEndpoint` to be a primitive type in the JSON string but got " + data['clientRegistrationEndpoint']);
        }
        // ensure the json data is a string
        if (data['clientSecret'] && !(typeof data['clientSecret'] === 'string' || data['clientSecret'] instanceof String)) {
            throw new Error("Expected the field `clientSecret` to be a primitive type in the JSON string but got " + data['clientSecret']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['grantTypes'])) {
            throw new Error("Expected the field `grantTypes` to be an array in the JSON data but got " + data['grantTypes']);
        }

        return true;
    }


}



/**
 * OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
 * @member {String} authorizationEndpoint
 */
AuthorizationServerUpdateRequestProperties.prototype['authorizationEndpoint'] = undefined;

/**
 * Client or app id registered with this authorization server.
 * @member {String} clientId
 */
AuthorizationServerUpdateRequestProperties.prototype['clientId'] = undefined;

/**
 * Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.
 * @member {String} clientRegistrationEndpoint
 */
AuthorizationServerUpdateRequestProperties.prototype['clientRegistrationEndpoint'] = undefined;

/**
 * Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
 * @member {String} clientSecret
 */
AuthorizationServerUpdateRequestProperties.prototype['clientSecret'] = undefined;

/**
 * User-friendly authorization server name.
 * @member {String} displayName
 */
AuthorizationServerUpdateRequestProperties.prototype['displayName'] = undefined;

/**
 * Form of an authorization grant, which the client uses to request the access token.
 * @member {Array.<module:model/AuthorizationServerUpdateRequestProperties.GrantTypesEnum>} grantTypes
 */
AuthorizationServerUpdateRequestProperties.prototype['grantTypes'] = undefined;





/**
 * Allowed values for the <code>grantTypes</code> property.
 * @enum {String}
 * @readonly
 */
AuthorizationServerUpdateRequestProperties['GrantTypesEnum'] = {

    /**
     * value: "authorizationCode"
     * @const
     */
    "authorizationCode": "authorizationCode",

    /**
     * value: "implicit"
     * @const
     */
    "implicit": "implicit",

    /**
     * value: "resourceOwnerPassword"
     * @const
     */
    "resourceOwnerPassword": "resourceOwnerPassword",

    /**
     * value: "clientCredentials"
     * @const
     */
    "clientCredentials": "clientCredentials"
};



export default AuthorizationServerUpdateRequestProperties;

