/**
 * BlockchainManagementClient
 * REST API for Azure Blockchain Service
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConsortiumMember model module.
 * @module model/ConsortiumMember
 * @version 2018-06-01-preview
 */
class ConsortiumMember {
    /**
     * Constructs a new <code>ConsortiumMember</code>.
     * Consortium approval
     * @alias module:model/ConsortiumMember
     */
    constructor() { 
        
        ConsortiumMember.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConsortiumMember</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConsortiumMember} obj Optional instance to populate.
     * @return {module:model/ConsortiumMember} The populated <code>ConsortiumMember</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConsortiumMember();

            if (data.hasOwnProperty('dateModified')) {
                obj['dateModified'] = ApiClient.convertToType(data['dateModified'], 'Date');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('joinDate')) {
                obj['joinDate'] = ApiClient.convertToType(data['joinDate'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConsortiumMember</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConsortiumMember</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }

        return true;
    }


}



/**
 * Gets the consortium member modified date.
 * @member {Date} dateModified
 */
ConsortiumMember.prototype['dateModified'] = undefined;

/**
 * Gets the consortium member display name.
 * @member {String} displayName
 */
ConsortiumMember.prototype['displayName'] = undefined;

/**
 * Gets the consortium member join date.
 * @member {Date} joinDate
 */
ConsortiumMember.prototype['joinDate'] = undefined;

/**
 * Gets the consortium member name.
 * @member {String} name
 */
ConsortiumMember.prototype['name'] = undefined;

/**
 * Gets the consortium member role.
 * @member {String} role
 */
ConsortiumMember.prototype['role'] = undefined;

/**
 * Gets the consortium member status.
 * @member {String} status
 */
ConsortiumMember.prototype['status'] = undefined;

/**
 * Gets the consortium member subscription id.
 * @member {String} subscriptionId
 */
ConsortiumMember.prototype['subscriptionId'] = undefined;






export default ConsortiumMember;

