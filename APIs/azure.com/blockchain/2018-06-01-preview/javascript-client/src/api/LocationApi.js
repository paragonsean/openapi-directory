/**
 * BlockchainManagementClient
 * REST API for Azure Blockchain Service
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConsortiumCollection from '../model/ConsortiumCollection';
import NameAvailability from '../model/NameAvailability';
import NameAvailabilityRequest from '../model/NameAvailabilityRequest';

/**
* Location service.
* @module api/LocationApi
* @version 2018-06-01-preview
*/
export default class LocationApi {

    /**
    * Constructs a new LocationApi. 
    * @alias module:api/LocationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the locationsCheckNameAvailability operation.
     * @callback module:api/LocationApi~locationsCheckNameAvailabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NameAvailability} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To check whether a resource name is available.
     * @param {String} locationName Location Name.
     * @param {module:model/String} apiVersion Client API Version.
     * @param {String} subscriptionId Gets the subscription Id which uniquely identifies the Microsoft Azure subscription. The subscription ID is part of the URI for every service call.
     * @param {Object} opts Optional parameters
     * @param {module:model/NameAvailabilityRequest} [nameAvailabilityRequest] Name availability request payload.
     * @param {module:api/LocationApi~locationsCheckNameAvailabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NameAvailability}
     */
    locationsCheckNameAvailability(locationName, apiVersion, subscriptionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['nameAvailabilityRequest'];
      // verify the required parameter 'locationName' is set
      if (locationName === undefined || locationName === null) {
        throw new Error("Missing the required parameter 'locationName' when calling locationsCheckNameAvailability");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling locationsCheckNameAvailability");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling locationsCheckNameAvailability");
      }

      let pathParams = {
        'locationName': locationName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = NameAvailability;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Blockchain/locations/{locationName}/checkNameAvailability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the locationsListConsortiums operation.
     * @callback module:api/LocationApi~locationsListConsortiumsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConsortiumCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the available consortiums for a subscription.
     * @param {String} locationName Location Name.
     * @param {module:model/String} apiVersion Client API Version.
     * @param {String} subscriptionId Gets the subscription Id which uniquely identifies the Microsoft Azure subscription. The subscription ID is part of the URI for every service call.
     * @param {module:api/LocationApi~locationsListConsortiumsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConsortiumCollection}
     */
    locationsListConsortiums(locationName, apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'locationName' is set
      if (locationName === undefined || locationName === null) {
        throw new Error("Missing the required parameter 'locationName' when calling locationsListConsortiums");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling locationsListConsortiums");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling locationsListConsortiums");
      }

      let pathParams = {
        'locationName': locationName,
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConsortiumCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Blockchain/locations/{locationName}/listConsortiums', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
