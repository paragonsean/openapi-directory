/**
 * BlockchainManagementClient
 * REST API for Azure Blockchain Service
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiKey from '../model/ApiKey';
import ApiKeyCollection from '../model/ApiKeyCollection';
import BlockchainMember from '../model/BlockchainMember';
import BlockchainMemberCollection from '../model/BlockchainMemberCollection';
import BlockchainMemberUpdate from '../model/BlockchainMemberUpdate';
import ConsortiumMemberCollection from '../model/ConsortiumMemberCollection';

/**
* BlockchainMember service.
* @module api/BlockchainMemberApi
* @version 2018-06-01-preview
*/
export default class BlockchainMemberApi {

    /**
    * Constructs a new BlockchainMemberApi. 
    * @alias module:api/BlockchainMemberApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the blockchainMembersCreate operation.
     * @callback module:api/BlockchainMemberApi~blockchainMembersCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BlockchainMember} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a blockchain member.
     * @param {String} blockchainMemberName Blockchain member name.
     * @param {module:model/String} apiVersion Client API Version.
     * @param {String} subscriptionId Gets the subscription Id which uniquely identifies the Microsoft Azure subscription. The subscription ID is part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {Object} opts Optional parameters
     * @param {module:model/BlockchainMember} [blockchainMember] Payload to create a blockchain member.
     * @param {module:api/BlockchainMemberApi~blockchainMembersCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BlockchainMember}
     */
    blockchainMembersCreate(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName, opts, callback) {
      opts = opts || {};
      let postBody = opts['blockchainMember'];
      // verify the required parameter 'blockchainMemberName' is set
      if (blockchainMemberName === undefined || blockchainMemberName === null) {
        throw new Error("Missing the required parameter 'blockchainMemberName' when calling blockchainMembersCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blockchainMembersCreate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling blockchainMembersCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling blockchainMembersCreate");
      }

      let pathParams = {
        'blockchainMemberName': blockchainMemberName,
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BlockchainMember;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blockchainMembersDelete operation.
     * @callback module:api/BlockchainMemberApi~blockchainMembersDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a blockchain member.
     * @param {String} blockchainMemberName Blockchain member name
     * @param {module:model/String} apiVersion Client API Version.
     * @param {String} subscriptionId Gets the subscription Id which uniquely identifies the Microsoft Azure subscription. The subscription ID is part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {module:api/BlockchainMemberApi~blockchainMembersDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    blockchainMembersDelete(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'blockchainMemberName' is set
      if (blockchainMemberName === undefined || blockchainMemberName === null) {
        throw new Error("Missing the required parameter 'blockchainMemberName' when calling blockchainMembersDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blockchainMembersDelete");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling blockchainMembersDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling blockchainMembersDelete");
      }

      let pathParams = {
        'blockchainMemberName': blockchainMemberName,
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blockchainMembersGet operation.
     * @callback module:api/BlockchainMemberApi~blockchainMembersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BlockchainMember} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get details about a blockchain member.
     * @param {String} blockchainMemberName Blockchain member name.
     * @param {module:model/String} apiVersion Client API Version.
     * @param {String} subscriptionId Gets the subscription Id which uniquely identifies the Microsoft Azure subscription. The subscription ID is part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {module:api/BlockchainMemberApi~blockchainMembersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BlockchainMember}
     */
    blockchainMembersGet(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'blockchainMemberName' is set
      if (blockchainMemberName === undefined || blockchainMemberName === null) {
        throw new Error("Missing the required parameter 'blockchainMemberName' when calling blockchainMembersGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blockchainMembersGet");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling blockchainMembersGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling blockchainMembersGet");
      }

      let pathParams = {
        'blockchainMemberName': blockchainMemberName,
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BlockchainMember;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blockchainMembersList operation.
     * @callback module:api/BlockchainMemberApi~blockchainMembersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BlockchainMemberCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the blockchain members for a resource group.
     * @param {module:model/String} apiVersion Client API Version.
     * @param {String} subscriptionId Gets the subscription Id which uniquely identifies the Microsoft Azure subscription. The subscription ID is part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {module:api/BlockchainMemberApi~blockchainMembersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BlockchainMemberCollection}
     */
    blockchainMembersList(apiVersion, subscriptionId, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blockchainMembersList");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling blockchainMembersList");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling blockchainMembersList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BlockchainMemberCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blockchainMembersListAll operation.
     * @callback module:api/BlockchainMemberApi~blockchainMembersListAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BlockchainMemberCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the blockchain members for a subscription.
     * @param {module:model/String} apiVersion Client API Version.
     * @param {String} subscriptionId Gets the subscription Id which uniquely identifies the Microsoft Azure subscription. The subscription ID is part of the URI for every service call.
     * @param {module:api/BlockchainMemberApi~blockchainMembersListAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BlockchainMemberCollection}
     */
    blockchainMembersListAll(apiVersion, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blockchainMembersListAll");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling blockchainMembersListAll");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BlockchainMemberCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.Blockchain/blockchainMembers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blockchainMembersListApiKeys operation.
     * @callback module:api/BlockchainMemberApi~blockchainMembersListApiKeysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiKeyCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the API keys for a blockchain member.
     * @param {String} blockchainMemberName Blockchain member name.
     * @param {module:model/String} apiVersion Client API Version.
     * @param {String} subscriptionId Gets the subscription Id which uniquely identifies the Microsoft Azure subscription. The subscription ID is part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {module:api/BlockchainMemberApi~blockchainMembersListApiKeysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiKeyCollection}
     */
    blockchainMembersListApiKeys(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'blockchainMemberName' is set
      if (blockchainMemberName === undefined || blockchainMemberName === null) {
        throw new Error("Missing the required parameter 'blockchainMemberName' when calling blockchainMembersListApiKeys");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blockchainMembersListApiKeys");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling blockchainMembersListApiKeys");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling blockchainMembersListApiKeys");
      }

      let pathParams = {
        'blockchainMemberName': blockchainMemberName,
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiKeyCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/listApiKeys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blockchainMembersListConsortiumMembers operation.
     * @callback module:api/BlockchainMemberApi~blockchainMembersListConsortiumMembersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConsortiumMemberCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the consortium members for a blockchain member.
     * @param {String} blockchainMemberName Blockchain member name.
     * @param {module:model/String} apiVersion Client API Version.
     * @param {String} subscriptionId Gets the subscription Id which uniquely identifies the Microsoft Azure subscription. The subscription ID is part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {module:api/BlockchainMemberApi~blockchainMembersListConsortiumMembersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConsortiumMemberCollection}
     */
    blockchainMembersListConsortiumMembers(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName, callback) {
      let postBody = null;
      // verify the required parameter 'blockchainMemberName' is set
      if (blockchainMemberName === undefined || blockchainMemberName === null) {
        throw new Error("Missing the required parameter 'blockchainMemberName' when calling blockchainMembersListConsortiumMembers");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blockchainMembersListConsortiumMembers");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling blockchainMembersListConsortiumMembers");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling blockchainMembersListConsortiumMembers");
      }

      let pathParams = {
        'blockchainMemberName': blockchainMemberName,
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConsortiumMemberCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/consortiumMembers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blockchainMembersListRegenerateApiKeys operation.
     * @callback module:api/BlockchainMemberApi~blockchainMembersListRegenerateApiKeysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiKeyCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Regenerate the API keys for a blockchain member.
     * @param {String} blockchainMemberName Blockchain member name.
     * @param {module:model/String} apiVersion Client API Version.
     * @param {String} subscriptionId Gets the subscription Id which uniquely identifies the Microsoft Azure subscription. The subscription ID is part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApiKey} [apiKey] api key to be regenerate
     * @param {module:api/BlockchainMemberApi~blockchainMembersListRegenerateApiKeysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiKeyCollection}
     */
    blockchainMembersListRegenerateApiKeys(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName, opts, callback) {
      opts = opts || {};
      let postBody = opts['apiKey'];
      // verify the required parameter 'blockchainMemberName' is set
      if (blockchainMemberName === undefined || blockchainMemberName === null) {
        throw new Error("Missing the required parameter 'blockchainMemberName' when calling blockchainMembersListRegenerateApiKeys");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blockchainMembersListRegenerateApiKeys");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling blockchainMembersListRegenerateApiKeys");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling blockchainMembersListRegenerateApiKeys");
      }

      let pathParams = {
        'blockchainMemberName': blockchainMemberName,
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiKeyCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/regenerateApiKeys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blockchainMembersUpdate operation.
     * @callback module:api/BlockchainMemberApi~blockchainMembersUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BlockchainMember} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a blockchain member.
     * @param {String} blockchainMemberName Blockchain member name.
     * @param {module:model/String} apiVersion Client API Version.
     * @param {String} subscriptionId Gets the subscription Id which uniquely identifies the Microsoft Azure subscription. The subscription ID is part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param {Object} opts Optional parameters
     * @param {module:model/BlockchainMemberUpdate} [blockchainMember] Payload to update the blockchain member.
     * @param {module:api/BlockchainMemberApi~blockchainMembersUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BlockchainMember}
     */
    blockchainMembersUpdate(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName, opts, callback) {
      opts = opts || {};
      let postBody = opts['blockchainMember'];
      // verify the required parameter 'blockchainMemberName' is set
      if (blockchainMemberName === undefined || blockchainMemberName === null) {
        throw new Error("Missing the required parameter 'blockchainMemberName' when calling blockchainMembersUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling blockchainMembersUpdate");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling blockchainMembersUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling blockchainMembersUpdate");
      }

      let pathParams = {
        'blockchainMemberName': blockchainMemberName,
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BlockchainMember;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
