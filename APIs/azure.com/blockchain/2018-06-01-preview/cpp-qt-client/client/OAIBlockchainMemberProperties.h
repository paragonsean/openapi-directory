/**
 * BlockchainManagementClient
 * REST API for Azure Blockchain Service
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBlockchainMemberProperties.h
 *
 * Payload of the blockchain member properties for a blockchain member.
 */

#ifndef OAIBlockchainMemberProperties_H
#define OAIBlockchainMemberProperties_H

#include <QJsonObject>

#include "OAIBlockchainMemberNodesSku.h"
#include "OAIFirewallRule.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFirewallRule;
class OAIBlockchainMemberNodesSku;

class OAIBlockchainMemberProperties : public OAIObject {
public:
    OAIBlockchainMemberProperties();
    OAIBlockchainMemberProperties(QString json);
    ~OAIBlockchainMemberProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConsortium() const;
    void setConsortium(const QString &consortium);
    bool is_consortium_Set() const;
    bool is_consortium_Valid() const;

    QString getConsortiumManagementAccountAddress() const;
    void setConsortiumManagementAccountAddress(const QString &consortium_management_account_address);
    bool is_consortium_management_account_address_Set() const;
    bool is_consortium_management_account_address_Valid() const;

    QString getConsortiumManagementAccountPassword() const;
    void setConsortiumManagementAccountPassword(const QString &consortium_management_account_password);
    bool is_consortium_management_account_password_Set() const;
    bool is_consortium_management_account_password_Valid() const;

    QString getConsortiumMemberDisplayName() const;
    void setConsortiumMemberDisplayName(const QString &consortium_member_display_name);
    bool is_consortium_member_display_name_Set() const;
    bool is_consortium_member_display_name_Valid() const;

    QString getConsortiumRole() const;
    void setConsortiumRole(const QString &consortium_role);
    bool is_consortium_role_Set() const;
    bool is_consortium_role_Valid() const;

    QString getDns() const;
    void setDns(const QString &dns);
    bool is_dns_Set() const;
    bool is_dns_Valid() const;

    QList<OAIFirewallRule> getFirewallRules() const;
    void setFirewallRules(const QList<OAIFirewallRule> &firewall_rules);
    bool is_firewall_rules_Set() const;
    bool is_firewall_rules_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getPublicKey() const;
    void setPublicKey(const QString &public_key);
    bool is_public_key_Set() const;
    bool is_public_key_Valid() const;

    QString getRootContractAddress() const;
    void setRootContractAddress(const QString &root_contract_address);
    bool is_root_contract_address_Set() const;
    bool is_root_contract_address_Valid() const;

    QString getUserName() const;
    void setUserName(const QString &user_name);
    bool is_user_name_Set() const;
    bool is_user_name_Valid() const;

    OAIBlockchainMemberNodesSku getValidatorNodesSku() const;
    void setValidatorNodesSku(const OAIBlockchainMemberNodesSku &validator_nodes_sku);
    bool is_validator_nodes_sku_Set() const;
    bool is_validator_nodes_sku_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_consortium;
    bool m_consortium_isSet;
    bool m_consortium_isValid;

    QString m_consortium_management_account_address;
    bool m_consortium_management_account_address_isSet;
    bool m_consortium_management_account_address_isValid;

    QString m_consortium_management_account_password;
    bool m_consortium_management_account_password_isSet;
    bool m_consortium_management_account_password_isValid;

    QString m_consortium_member_display_name;
    bool m_consortium_member_display_name_isSet;
    bool m_consortium_member_display_name_isValid;

    QString m_consortium_role;
    bool m_consortium_role_isSet;
    bool m_consortium_role_isValid;

    QString m_dns;
    bool m_dns_isSet;
    bool m_dns_isValid;

    QList<OAIFirewallRule> m_firewall_rules;
    bool m_firewall_rules_isSet;
    bool m_firewall_rules_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_public_key;
    bool m_public_key_isSet;
    bool m_public_key_isValid;

    QString m_root_contract_address;
    bool m_root_contract_address_isSet;
    bool m_root_contract_address_isValid;

    QString m_user_name;
    bool m_user_name_isSet;
    bool m_user_name_isValid;

    OAIBlockchainMemberNodesSku m_validator_nodes_sku;
    bool m_validator_nodes_sku_isSet;
    bool m_validator_nodes_sku_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBlockchainMemberProperties)

#endif // OAIBlockchainMemberProperties_H
