/**
 * BlockchainManagementClient
 * REST API for Azure Blockchain Service
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransactionNodeUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransactionNodeUpdate::OAITransactionNodeUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransactionNodeUpdate::OAITransactionNodeUpdate() {
    this->initializeModel();
}

OAITransactionNodeUpdate::~OAITransactionNodeUpdate() {}

void OAITransactionNodeUpdate::initializeModel() {

    m_properties_isSet = false;
    m_properties_isValid = false;
}

void OAITransactionNodeUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransactionNodeUpdate::fromJsonObject(QJsonObject json) {

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;
}

QString OAITransactionNodeUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransactionNodeUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    return obj;
}

OAITransactionNodePropertiesUpdate OAITransactionNodeUpdate::getProperties() const {
    return m_properties;
}
void OAITransactionNodeUpdate::setProperties(const OAITransactionNodePropertiesUpdate &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAITransactionNodeUpdate::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAITransactionNodeUpdate::is_properties_Valid() const{
    return m_properties_isValid;
}

bool OAITransactionNodeUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransactionNodeUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
