/**
 * BlockchainManagementClient
 * REST API for Azure Blockchain Service
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConsortiumMember.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConsortiumMember::OAIConsortiumMember(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConsortiumMember::OAIConsortiumMember() {
    this->initializeModel();
}

OAIConsortiumMember::~OAIConsortiumMember() {}

void OAIConsortiumMember::initializeModel() {

    m_date_modified_isSet = false;
    m_date_modified_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_join_date_isSet = false;
    m_join_date_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_subscription_id_isSet = false;
    m_subscription_id_isValid = false;
}

void OAIConsortiumMember::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConsortiumMember::fromJsonObject(QJsonObject json) {

    m_date_modified_isValid = ::OpenAPI::fromJsonValue(m_date_modified, json[QString("dateModified")]);
    m_date_modified_isSet = !json[QString("dateModified")].isNull() && m_date_modified_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_join_date_isValid = ::OpenAPI::fromJsonValue(m_join_date, json[QString("joinDate")]);
    m_join_date_isSet = !json[QString("joinDate")].isNull() && m_join_date_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_subscription_id_isValid = ::OpenAPI::fromJsonValue(m_subscription_id, json[QString("subscriptionId")]);
    m_subscription_id_isSet = !json[QString("subscriptionId")].isNull() && m_subscription_id_isValid;
}

QString OAIConsortiumMember::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConsortiumMember::asJsonObject() const {
    QJsonObject obj;
    if (m_date_modified_isSet) {
        obj.insert(QString("dateModified"), ::OpenAPI::toJsonValue(m_date_modified));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_join_date_isSet) {
        obj.insert(QString("joinDate"), ::OpenAPI::toJsonValue(m_join_date));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_subscription_id_isSet) {
        obj.insert(QString("subscriptionId"), ::OpenAPI::toJsonValue(m_subscription_id));
    }
    return obj;
}

QDateTime OAIConsortiumMember::getDateModified() const {
    return m_date_modified;
}
void OAIConsortiumMember::setDateModified(const QDateTime &date_modified) {
    m_date_modified = date_modified;
    m_date_modified_isSet = true;
}

bool OAIConsortiumMember::is_date_modified_Set() const{
    return m_date_modified_isSet;
}

bool OAIConsortiumMember::is_date_modified_Valid() const{
    return m_date_modified_isValid;
}

QString OAIConsortiumMember::getDisplayName() const {
    return m_display_name;
}
void OAIConsortiumMember::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIConsortiumMember::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIConsortiumMember::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QDateTime OAIConsortiumMember::getJoinDate() const {
    return m_join_date;
}
void OAIConsortiumMember::setJoinDate(const QDateTime &join_date) {
    m_join_date = join_date;
    m_join_date_isSet = true;
}

bool OAIConsortiumMember::is_join_date_Set() const{
    return m_join_date_isSet;
}

bool OAIConsortiumMember::is_join_date_Valid() const{
    return m_join_date_isValid;
}

QString OAIConsortiumMember::getName() const {
    return m_name;
}
void OAIConsortiumMember::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIConsortiumMember::is_name_Set() const{
    return m_name_isSet;
}

bool OAIConsortiumMember::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIConsortiumMember::getRole() const {
    return m_role;
}
void OAIConsortiumMember::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIConsortiumMember::is_role_Set() const{
    return m_role_isSet;
}

bool OAIConsortiumMember::is_role_Valid() const{
    return m_role_isValid;
}

QString OAIConsortiumMember::getStatus() const {
    return m_status;
}
void OAIConsortiumMember::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIConsortiumMember::is_status_Set() const{
    return m_status_isSet;
}

bool OAIConsortiumMember::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIConsortiumMember::getSubscriptionId() const {
    return m_subscription_id;
}
void OAIConsortiumMember::setSubscriptionId(const QString &subscription_id) {
    m_subscription_id = subscription_id;
    m_subscription_id_isSet = true;
}

bool OAIConsortiumMember::is_subscription_id_Set() const{
    return m_subscription_id_isSet;
}

bool OAIConsortiumMember::is_subscription_id_Valid() const{
    return m_subscription_id_isValid;
}

bool OAIConsortiumMember::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_join_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConsortiumMember::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
