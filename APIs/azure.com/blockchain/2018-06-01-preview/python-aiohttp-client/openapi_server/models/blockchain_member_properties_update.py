# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.firewall_rule import FirewallRule
from openapi_server import util


class BlockchainMemberPropertiesUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consortium_management_account_password: str=None, firewall_rules: List[FirewallRule]=None, password: str=None):
        """BlockchainMemberPropertiesUpdate - a model defined in OpenAPI

        :param consortium_management_account_password: The consortium_management_account_password of this BlockchainMemberPropertiesUpdate.
        :param firewall_rules: The firewall_rules of this BlockchainMemberPropertiesUpdate.
        :param password: The password of this BlockchainMemberPropertiesUpdate.
        """
        self.openapi_types = {
            'consortium_management_account_password': str,
            'firewall_rules': List[FirewallRule],
            'password': str
        }

        self.attribute_map = {
            'consortium_management_account_password': 'consortiumManagementAccountPassword',
            'firewall_rules': 'firewallRules',
            'password': 'password'
        }

        self._consortium_management_account_password = consortium_management_account_password
        self._firewall_rules = firewall_rules
        self._password = password

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlockchainMemberPropertiesUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BlockchainMemberPropertiesUpdate of this BlockchainMemberPropertiesUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consortium_management_account_password(self):
        """Gets the consortium_management_account_password of this BlockchainMemberPropertiesUpdate.

        Sets the managed consortium management account password.

        :return: The consortium_management_account_password of this BlockchainMemberPropertiesUpdate.
        :rtype: str
        """
        return self._consortium_management_account_password

    @consortium_management_account_password.setter
    def consortium_management_account_password(self, consortium_management_account_password):
        """Sets the consortium_management_account_password of this BlockchainMemberPropertiesUpdate.

        Sets the managed consortium management account password.

        :param consortium_management_account_password: The consortium_management_account_password of this BlockchainMemberPropertiesUpdate.
        :type consortium_management_account_password: str
        """

        self._consortium_management_account_password = consortium_management_account_password

    @property
    def firewall_rules(self):
        """Gets the firewall_rules of this BlockchainMemberPropertiesUpdate.

        Gets or sets the firewall rules.

        :return: The firewall_rules of this BlockchainMemberPropertiesUpdate.
        :rtype: List[FirewallRule]
        """
        return self._firewall_rules

    @firewall_rules.setter
    def firewall_rules(self, firewall_rules):
        """Sets the firewall_rules of this BlockchainMemberPropertiesUpdate.

        Gets or sets the firewall rules.

        :param firewall_rules: The firewall_rules of this BlockchainMemberPropertiesUpdate.
        :type firewall_rules: List[FirewallRule]
        """

        self._firewall_rules = firewall_rules

    @property
    def password(self):
        """Gets the password of this BlockchainMemberPropertiesUpdate.

        Sets the transaction node dns endpoint basic auth password.

        :return: The password of this BlockchainMemberPropertiesUpdate.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this BlockchainMemberPropertiesUpdate.

        Sets the transaction node dns endpoint basic auth password.

        :param password: The password of this BlockchainMemberPropertiesUpdate.
        :type password: str
        """

        self._password = password
