# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_provider_operation_display import ResourceProviderOperationDisplay
from openapi_server import util


class ResourceProviderOperation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display: ResourceProviderOperationDisplay=None, is_data_action: bool=None, name: str=None, origin: str=None):
        """ResourceProviderOperation - a model defined in OpenAPI

        :param display: The display of this ResourceProviderOperation.
        :param is_data_action: The is_data_action of this ResourceProviderOperation.
        :param name: The name of this ResourceProviderOperation.
        :param origin: The origin of this ResourceProviderOperation.
        """
        self.openapi_types = {
            'display': ResourceProviderOperationDisplay,
            'is_data_action': bool,
            'name': str,
            'origin': str
        }

        self.attribute_map = {
            'display': 'display',
            'is_data_action': 'isDataAction',
            'name': 'name',
            'origin': 'origin'
        }

        self._display = display
        self._is_data_action = is_data_action
        self._name = name
        self._origin = origin

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceProviderOperation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceProviderOperation of this ResourceProviderOperation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display(self):
        """Gets the display of this ResourceProviderOperation.


        :return: The display of this ResourceProviderOperation.
        :rtype: ResourceProviderOperationDisplay
        """
        return self._display

    @display.setter
    def display(self, display):
        """Sets the display of this ResourceProviderOperation.


        :param display: The display of this ResourceProviderOperation.
        :type display: ResourceProviderOperationDisplay
        """

        self._display = display

    @property
    def is_data_action(self):
        """Gets the is_data_action of this ResourceProviderOperation.

        Gets or sets a value indicating whether the operation is a data action or not.

        :return: The is_data_action of this ResourceProviderOperation.
        :rtype: bool
        """
        return self._is_data_action

    @is_data_action.setter
    def is_data_action(self, is_data_action):
        """Sets the is_data_action of this ResourceProviderOperation.

        Gets or sets a value indicating whether the operation is a data action or not.

        :param is_data_action: The is_data_action of this ResourceProviderOperation.
        :type is_data_action: bool
        """

        self._is_data_action = is_data_action

    @property
    def name(self):
        """Gets the name of this ResourceProviderOperation.

        Gets or sets the operation name.

        :return: The name of this ResourceProviderOperation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ResourceProviderOperation.

        Gets or sets the operation name.

        :param name: The name of this ResourceProviderOperation.
        :type name: str
        """

        self._name = name

    @property
    def origin(self):
        """Gets the origin of this ResourceProviderOperation.

        Gets or sets the origin.

        :return: The origin of this ResourceProviderOperation.
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this ResourceProviderOperation.

        Gets or sets the origin.

        :param origin: The origin of this ResourceProviderOperation.
        :type origin: str
        """

        self._origin = origin
