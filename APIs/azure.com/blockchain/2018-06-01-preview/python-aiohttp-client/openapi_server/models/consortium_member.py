# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConsortiumMember(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_modified: datetime=None, display_name: str=None, join_date: datetime=None, name: str=None, role: str=None, status: str=None, subscription_id: str=None):
        """ConsortiumMember - a model defined in OpenAPI

        :param date_modified: The date_modified of this ConsortiumMember.
        :param display_name: The display_name of this ConsortiumMember.
        :param join_date: The join_date of this ConsortiumMember.
        :param name: The name of this ConsortiumMember.
        :param role: The role of this ConsortiumMember.
        :param status: The status of this ConsortiumMember.
        :param subscription_id: The subscription_id of this ConsortiumMember.
        """
        self.openapi_types = {
            'date_modified': datetime,
            'display_name': str,
            'join_date': datetime,
            'name': str,
            'role': str,
            'status': str,
            'subscription_id': str
        }

        self.attribute_map = {
            'date_modified': 'dateModified',
            'display_name': 'displayName',
            'join_date': 'joinDate',
            'name': 'name',
            'role': 'role',
            'status': 'status',
            'subscription_id': 'subscriptionId'
        }

        self._date_modified = date_modified
        self._display_name = display_name
        self._join_date = join_date
        self._name = name
        self._role = role
        self._status = status
        self._subscription_id = subscription_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConsortiumMember':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConsortiumMember of this ConsortiumMember.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_modified(self):
        """Gets the date_modified of this ConsortiumMember.

        Gets the consortium member modified date.

        :return: The date_modified of this ConsortiumMember.
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this ConsortiumMember.

        Gets the consortium member modified date.

        :param date_modified: The date_modified of this ConsortiumMember.
        :type date_modified: datetime
        """

        self._date_modified = date_modified

    @property
    def display_name(self):
        """Gets the display_name of this ConsortiumMember.

        Gets the consortium member display name.

        :return: The display_name of this ConsortiumMember.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ConsortiumMember.

        Gets the consortium member display name.

        :param display_name: The display_name of this ConsortiumMember.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def join_date(self):
        """Gets the join_date of this ConsortiumMember.

        Gets the consortium member join date.

        :return: The join_date of this ConsortiumMember.
        :rtype: datetime
        """
        return self._join_date

    @join_date.setter
    def join_date(self, join_date):
        """Sets the join_date of this ConsortiumMember.

        Gets the consortium member join date.

        :param join_date: The join_date of this ConsortiumMember.
        :type join_date: datetime
        """

        self._join_date = join_date

    @property
    def name(self):
        """Gets the name of this ConsortiumMember.

        Gets the consortium member name.

        :return: The name of this ConsortiumMember.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ConsortiumMember.

        Gets the consortium member name.

        :param name: The name of this ConsortiumMember.
        :type name: str
        """

        self._name = name

    @property
    def role(self):
        """Gets the role of this ConsortiumMember.

        Gets the consortium member role.

        :return: The role of this ConsortiumMember.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this ConsortiumMember.

        Gets the consortium member role.

        :param role: The role of this ConsortiumMember.
        :type role: str
        """

        self._role = role

    @property
    def status(self):
        """Gets the status of this ConsortiumMember.

        Gets the consortium member status.

        :return: The status of this ConsortiumMember.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ConsortiumMember.

        Gets the consortium member status.

        :param status: The status of this ConsortiumMember.
        :type status: str
        """

        self._status = status

    @property
    def subscription_id(self):
        """Gets the subscription_id of this ConsortiumMember.

        Gets the consortium member subscription id.

        :return: The subscription_id of this ConsortiumMember.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this ConsortiumMember.

        Gets the consortium member subscription id.

        :param subscription_id: The subscription_id of this ConsortiumMember.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id
