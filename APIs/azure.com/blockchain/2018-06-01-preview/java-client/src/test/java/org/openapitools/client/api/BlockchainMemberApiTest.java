/*
 * BlockchainManagementClient
 * REST API for Azure Blockchain Service
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiKey;
import org.openapitools.client.model.ApiKeyCollection;
import org.openapitools.client.model.BlockchainMember;
import org.openapitools.client.model.BlockchainMemberCollection;
import org.openapitools.client.model.BlockchainMemberUpdate;
import org.openapitools.client.model.ConsortiumMemberCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BlockchainMemberApi
 */
@Disabled
public class BlockchainMemberApiTest {

    private final BlockchainMemberApi api = new BlockchainMemberApi();

    /**
     * Create a blockchain member.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockchainMembersCreateTest() throws ApiException {
        String blockchainMemberName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        BlockchainMember blockchainMember = null;
        BlockchainMember response = api.blockchainMembersCreate(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName, blockchainMember);
        // TODO: test validations
    }

    /**
     * Delete a blockchain member.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockchainMembersDeleteTest() throws ApiException {
        String blockchainMemberName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        api.blockchainMembersDelete(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Get details about a blockchain member.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockchainMembersGetTest() throws ApiException {
        String blockchainMemberName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        BlockchainMember response = api.blockchainMembersGet(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Lists the blockchain members for a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockchainMembersListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        BlockchainMemberCollection response = api.blockchainMembersList(apiVersion, subscriptionId, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Lists the blockchain members for a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockchainMembersListAllTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        BlockchainMemberCollection response = api.blockchainMembersListAll(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Lists the API keys for a blockchain member.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockchainMembersListApiKeysTest() throws ApiException {
        String blockchainMemberName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        ApiKeyCollection response = api.blockchainMembersListApiKeys(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Lists the consortium members for a blockchain member.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockchainMembersListConsortiumMembersTest() throws ApiException {
        String blockchainMemberName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        ConsortiumMemberCollection response = api.blockchainMembersListConsortiumMembers(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName);
        // TODO: test validations
    }

    /**
     * Regenerate the API keys for a blockchain member.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockchainMembersListRegenerateApiKeysTest() throws ApiException {
        String blockchainMemberName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        ApiKey apiKey = null;
        ApiKeyCollection response = api.blockchainMembersListRegenerateApiKeys(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName, apiKey);
        // TODO: test validations
    }

    /**
     * Update a blockchain member.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void blockchainMembersUpdateTest() throws ApiException {
        String blockchainMemberName = null;
        String apiVersion = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        BlockchainMemberUpdate blockchainMember = null;
        BlockchainMember response = api.blockchainMembersUpdate(blockchainMemberName, apiVersion, subscriptionId, resourceGroupName, blockchainMember);
        // TODO: test validations
    }

}
