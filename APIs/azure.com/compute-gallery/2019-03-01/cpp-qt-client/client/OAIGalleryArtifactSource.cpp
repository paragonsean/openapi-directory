/**
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGalleryArtifactSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGalleryArtifactSource::OAIGalleryArtifactSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGalleryArtifactSource::OAIGalleryArtifactSource() {
    this->initializeModel();
}

OAIGalleryArtifactSource::~OAIGalleryArtifactSource() {}

void OAIGalleryArtifactSource::initializeModel() {

    m_managed_image_isSet = false;
    m_managed_image_isValid = false;
}

void OAIGalleryArtifactSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGalleryArtifactSource::fromJsonObject(QJsonObject json) {

    m_managed_image_isValid = ::OpenAPI::fromJsonValue(m_managed_image, json[QString("managedImage")]);
    m_managed_image_isSet = !json[QString("managedImage")].isNull() && m_managed_image_isValid;
}

QString OAIGalleryArtifactSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGalleryArtifactSource::asJsonObject() const {
    QJsonObject obj;
    if (m_managed_image.isSet()) {
        obj.insert(QString("managedImage"), ::OpenAPI::toJsonValue(m_managed_image));
    }
    return obj;
}

OAIManagedArtifact OAIGalleryArtifactSource::getManagedImage() const {
    return m_managed_image;
}
void OAIGalleryArtifactSource::setManagedImage(const OAIManagedArtifact &managed_image) {
    m_managed_image = managed_image;
    m_managed_image_isSet = true;
}

bool OAIGalleryArtifactSource::is_managed_image_Set() const{
    return m_managed_image_isSet;
}

bool OAIGalleryArtifactSource::is_managed_image_Valid() const{
    return m_managed_image_isValid;
}

bool OAIGalleryArtifactSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_managed_image.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGalleryArtifactSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_managed_image_isValid && true;
}

} // namespace OpenAPI
