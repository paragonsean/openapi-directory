/**
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGalleryDataDiskImage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGalleryDataDiskImage::OAIGalleryDataDiskImage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGalleryDataDiskImage::OAIGalleryDataDiskImage() {
    this->initializeModel();
}

OAIGalleryDataDiskImage::~OAIGalleryDataDiskImage() {}

void OAIGalleryDataDiskImage::initializeModel() {

    m_lun_isSet = false;
    m_lun_isValid = false;

    m_host_caching_isSet = false;
    m_host_caching_isValid = false;

    m_size_in_gb_isSet = false;
    m_size_in_gb_isValid = false;
}

void OAIGalleryDataDiskImage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGalleryDataDiskImage::fromJsonObject(QJsonObject json) {

    m_lun_isValid = ::OpenAPI::fromJsonValue(m_lun, json[QString("lun")]);
    m_lun_isSet = !json[QString("lun")].isNull() && m_lun_isValid;

    m_host_caching_isValid = ::OpenAPI::fromJsonValue(m_host_caching, json[QString("hostCaching")]);
    m_host_caching_isSet = !json[QString("hostCaching")].isNull() && m_host_caching_isValid;

    m_size_in_gb_isValid = ::OpenAPI::fromJsonValue(m_size_in_gb, json[QString("sizeInGB")]);
    m_size_in_gb_isSet = !json[QString("sizeInGB")].isNull() && m_size_in_gb_isValid;
}

QString OAIGalleryDataDiskImage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGalleryDataDiskImage::asJsonObject() const {
    QJsonObject obj;
    if (m_lun_isSet) {
        obj.insert(QString("lun"), ::OpenAPI::toJsonValue(m_lun));
    }
    if (m_host_caching_isSet) {
        obj.insert(QString("hostCaching"), ::OpenAPI::toJsonValue(m_host_caching));
    }
    if (m_size_in_gb_isSet) {
        obj.insert(QString("sizeInGB"), ::OpenAPI::toJsonValue(m_size_in_gb));
    }
    return obj;
}

qint32 OAIGalleryDataDiskImage::getLun() const {
    return m_lun;
}
void OAIGalleryDataDiskImage::setLun(const qint32 &lun) {
    m_lun = lun;
    m_lun_isSet = true;
}

bool OAIGalleryDataDiskImage::is_lun_Set() const{
    return m_lun_isSet;
}

bool OAIGalleryDataDiskImage::is_lun_Valid() const{
    return m_lun_isValid;
}

QString OAIGalleryDataDiskImage::getHostCaching() const {
    return m_host_caching;
}
void OAIGalleryDataDiskImage::setHostCaching(const QString &host_caching) {
    m_host_caching = host_caching;
    m_host_caching_isSet = true;
}

bool OAIGalleryDataDiskImage::is_host_caching_Set() const{
    return m_host_caching_isSet;
}

bool OAIGalleryDataDiskImage::is_host_caching_Valid() const{
    return m_host_caching_isValid;
}

qint32 OAIGalleryDataDiskImage::getSizeInGb() const {
    return m_size_in_gb;
}
void OAIGalleryDataDiskImage::setSizeInGb(const qint32 &size_in_gb) {
    m_size_in_gb = size_in_gb;
    m_size_in_gb_isSet = true;
}

bool OAIGalleryDataDiskImage::is_size_in_gb_Set() const{
    return m_size_in_gb_isSet;
}

bool OAIGalleryDataDiskImage::is_size_in_gb_Valid() const{
    return m_size_in_gb_isValid;
}

bool OAIGalleryDataDiskImage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lun_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_host_caching_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_in_gb_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGalleryDataDiskImage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
