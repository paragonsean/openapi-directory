/**
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserArtifactSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserArtifactSource::OAIUserArtifactSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserArtifactSource::OAIUserArtifactSource() {
    this->initializeModel();
}

OAIUserArtifactSource::~OAIUserArtifactSource() {}

void OAIUserArtifactSource::initializeModel() {

    m_file_name_isSet = false;
    m_file_name_isValid = false;

    m_media_link_isSet = false;
    m_media_link_isValid = false;
}

void OAIUserArtifactSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserArtifactSource::fromJsonObject(QJsonObject json) {

    m_file_name_isValid = ::OpenAPI::fromJsonValue(m_file_name, json[QString("fileName")]);
    m_file_name_isSet = !json[QString("fileName")].isNull() && m_file_name_isValid;

    m_media_link_isValid = ::OpenAPI::fromJsonValue(m_media_link, json[QString("mediaLink")]);
    m_media_link_isSet = !json[QString("mediaLink")].isNull() && m_media_link_isValid;
}

QString OAIUserArtifactSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserArtifactSource::asJsonObject() const {
    QJsonObject obj;
    if (m_file_name_isSet) {
        obj.insert(QString("fileName"), ::OpenAPI::toJsonValue(m_file_name));
    }
    if (m_media_link_isSet) {
        obj.insert(QString("mediaLink"), ::OpenAPI::toJsonValue(m_media_link));
    }
    return obj;
}

QString OAIUserArtifactSource::getFileName() const {
    return m_file_name;
}
void OAIUserArtifactSource::setFileName(const QString &file_name) {
    m_file_name = file_name;
    m_file_name_isSet = true;
}

bool OAIUserArtifactSource::is_file_name_Set() const{
    return m_file_name_isSet;
}

bool OAIUserArtifactSource::is_file_name_Valid() const{
    return m_file_name_isValid;
}

QString OAIUserArtifactSource::getMediaLink() const {
    return m_media_link;
}
void OAIUserArtifactSource::setMediaLink(const QString &media_link) {
    m_media_link = media_link;
    m_media_link_isSet = true;
}

bool OAIUserArtifactSource::is_media_link_Set() const{
    return m_media_link_isSet;
}

bool OAIUserArtifactSource::is_media_link_Valid() const{
    return m_media_link_isValid;
}

bool OAIUserArtifactSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_link_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserArtifactSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_file_name_isValid && m_media_link_isValid && true;
}

} // namespace OpenAPI
