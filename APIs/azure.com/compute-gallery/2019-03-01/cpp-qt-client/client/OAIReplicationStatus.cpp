/**
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReplicationStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReplicationStatus::OAIReplicationStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReplicationStatus::OAIReplicationStatus() {
    this->initializeModel();
}

OAIReplicationStatus::~OAIReplicationStatus() {}

void OAIReplicationStatus::initializeModel() {

    m_aggregated_state_isSet = false;
    m_aggregated_state_isValid = false;

    m_summary_isSet = false;
    m_summary_isValid = false;
}

void OAIReplicationStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReplicationStatus::fromJsonObject(QJsonObject json) {

    m_aggregated_state_isValid = ::OpenAPI::fromJsonValue(m_aggregated_state, json[QString("aggregatedState")]);
    m_aggregated_state_isSet = !json[QString("aggregatedState")].isNull() && m_aggregated_state_isValid;

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("summary")]);
    m_summary_isSet = !json[QString("summary")].isNull() && m_summary_isValid;
}

QString OAIReplicationStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReplicationStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregated_state_isSet) {
        obj.insert(QString("aggregatedState"), ::OpenAPI::toJsonValue(m_aggregated_state));
    }
    if (m_summary.size() > 0) {
        obj.insert(QString("summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    return obj;
}

QString OAIReplicationStatus::getAggregatedState() const {
    return m_aggregated_state;
}
void OAIReplicationStatus::setAggregatedState(const QString &aggregated_state) {
    m_aggregated_state = aggregated_state;
    m_aggregated_state_isSet = true;
}

bool OAIReplicationStatus::is_aggregated_state_Set() const{
    return m_aggregated_state_isSet;
}

bool OAIReplicationStatus::is_aggregated_state_Valid() const{
    return m_aggregated_state_isValid;
}

QList<OAIRegionalReplicationStatus> OAIReplicationStatus::getSummary() const {
    return m_summary;
}
void OAIReplicationStatus::setSummary(const QList<OAIRegionalReplicationStatus> &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAIReplicationStatus::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAIReplicationStatus::is_summary_Valid() const{
    return m_summary_isValid;
}

bool OAIReplicationStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregated_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReplicationStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
