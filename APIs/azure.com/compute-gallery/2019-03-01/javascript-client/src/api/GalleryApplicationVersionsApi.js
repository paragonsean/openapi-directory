/**
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import GalleryApplicationVersion from '../model/GalleryApplicationVersion';
import GalleryApplicationVersionList from '../model/GalleryApplicationVersionList';

/**
* GalleryApplicationVersions service.
* @module api/GalleryApplicationVersionsApi
* @version 2019-03-01
*/
export default class GalleryApplicationVersionsApi {

    /**
    * Constructs a new GalleryApplicationVersionsApi. 
    * @alias module:api/GalleryApplicationVersionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the galleryApplicationVersionsCreateOrUpdate operation.
     * @callback module:api/GalleryApplicationVersionsApi~galleryApplicationVersionsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GalleryApplicationVersion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update a gallery Application Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param {String} galleryApplicationName The name of the gallery Application Definition in which the Application Version is to be created.
     * @param {String} galleryApplicationVersionName The name of the gallery Application Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/GalleryApplicationVersion} galleryApplicationVersion Parameters supplied to the create or update gallery Application Version operation.
     * @param {module:api/GalleryApplicationVersionsApi~galleryApplicationVersionsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GalleryApplicationVersion}
     */
    galleryApplicationVersionsCreateOrUpdate(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, galleryApplicationVersion, callback) {
      let postBody = galleryApplicationVersion;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryApplicationVersionsCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryApplicationVersionsCreateOrUpdate");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryApplicationVersionsCreateOrUpdate");
      }
      // verify the required parameter 'galleryApplicationName' is set
      if (galleryApplicationName === undefined || galleryApplicationName === null) {
        throw new Error("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationVersionsCreateOrUpdate");
      }
      // verify the required parameter 'galleryApplicationVersionName' is set
      if (galleryApplicationVersionName === undefined || galleryApplicationVersionName === null) {
        throw new Error("Missing the required parameter 'galleryApplicationVersionName' when calling galleryApplicationVersionsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryApplicationVersionsCreateOrUpdate");
      }
      // verify the required parameter 'galleryApplicationVersion' is set
      if (galleryApplicationVersion === undefined || galleryApplicationVersion === null) {
        throw new Error("Missing the required parameter 'galleryApplicationVersion' when calling galleryApplicationVersionsCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryApplicationName': galleryApplicationName,
        'galleryApplicationVersionName': galleryApplicationVersionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GalleryApplicationVersion;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the galleryApplicationVersionsDelete operation.
     * @callback module:api/GalleryApplicationVersionsApi~galleryApplicationVersionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a gallery Application Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param {String} galleryApplicationName The name of the gallery Application Definition in which the Application Version resides.
     * @param {String} galleryApplicationVersionName The name of the gallery Application Version to be deleted.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/GalleryApplicationVersionsApi~galleryApplicationVersionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    galleryApplicationVersionsDelete(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryApplicationVersionsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryApplicationVersionsDelete");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryApplicationVersionsDelete");
      }
      // verify the required parameter 'galleryApplicationName' is set
      if (galleryApplicationName === undefined || galleryApplicationName === null) {
        throw new Error("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationVersionsDelete");
      }
      // verify the required parameter 'galleryApplicationVersionName' is set
      if (galleryApplicationVersionName === undefined || galleryApplicationVersionName === null) {
        throw new Error("Missing the required parameter 'galleryApplicationVersionName' when calling galleryApplicationVersionsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryApplicationVersionsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryApplicationName': galleryApplicationName,
        'galleryApplicationVersionName': galleryApplicationVersionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the galleryApplicationVersionsGet operation.
     * @callback module:api/GalleryApplicationVersionsApi~galleryApplicationVersionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GalleryApplicationVersion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about a gallery Application Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param {String} galleryApplicationName The name of the gallery Application Definition in which the Application Version resides.
     * @param {String} galleryApplicationVersionName The name of the gallery Application Version to be retrieved.
     * @param {String} apiVersion Client Api Version.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [expand] The expand expression to apply on the operation.
     * @param {module:api/GalleryApplicationVersionsApi~galleryApplicationVersionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GalleryApplicationVersion}
     */
    galleryApplicationVersionsGet(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryApplicationVersionsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryApplicationVersionsGet");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryApplicationVersionsGet");
      }
      // verify the required parameter 'galleryApplicationName' is set
      if (galleryApplicationName === undefined || galleryApplicationName === null) {
        throw new Error("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationVersionsGet");
      }
      // verify the required parameter 'galleryApplicationVersionName' is set
      if (galleryApplicationVersionName === undefined || galleryApplicationVersionName === null) {
        throw new Error("Missing the required parameter 'galleryApplicationVersionName' when calling galleryApplicationVersionsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryApplicationVersionsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryApplicationName': galleryApplicationName,
        'galleryApplicationVersionName': galleryApplicationVersionName
      };
      let queryParams = {
        '$expand': opts['expand'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GalleryApplicationVersion;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the galleryApplicationVersionsListByGalleryApplication operation.
     * @callback module:api/GalleryApplicationVersionsApi~galleryApplicationVersionsListByGalleryApplicationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GalleryApplicationVersionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List gallery Application Versions in a gallery Application Definition.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param {String} galleryApplicationName The name of the Shared Application Gallery Application Definition from which the Application Versions are to be listed.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/GalleryApplicationVersionsApi~galleryApplicationVersionsListByGalleryApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GalleryApplicationVersionList}
     */
    galleryApplicationVersionsListByGalleryApplication(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryApplicationVersionsListByGalleryApplication");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryApplicationVersionsListByGalleryApplication");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryApplicationVersionsListByGalleryApplication");
      }
      // verify the required parameter 'galleryApplicationName' is set
      if (galleryApplicationName === undefined || galleryApplicationName === null) {
        throw new Error("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationVersionsListByGalleryApplication");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryApplicationVersionsListByGalleryApplication");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryApplicationName': galleryApplicationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GalleryApplicationVersionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
