/**
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GalleryDiskImage from './GalleryDiskImage';

/**
 * The GalleryDataDiskImage model module.
 * @module model/GalleryDataDiskImage
 * @version 2019-03-01
 */
class GalleryDataDiskImage {
    /**
     * Constructs a new <code>GalleryDataDiskImage</code>.
     * This is the data disk image.
     * @alias module:model/GalleryDataDiskImage
     * @implements module:model/GalleryDiskImage
     */
    constructor() { 
        GalleryDiskImage.initialize(this);
        GalleryDataDiskImage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GalleryDataDiskImage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GalleryDataDiskImage} obj Optional instance to populate.
     * @return {module:model/GalleryDataDiskImage} The populated <code>GalleryDataDiskImage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GalleryDataDiskImage();
            GalleryDiskImage.constructFromObject(data, obj);

            if (data.hasOwnProperty('lun')) {
                obj['lun'] = ApiClient.convertToType(data['lun'], 'Number');
            }
            if (data.hasOwnProperty('hostCaching')) {
                obj['hostCaching'] = ApiClient.convertToType(data['hostCaching'], 'String');
            }
            if (data.hasOwnProperty('sizeInGB')) {
                obj['sizeInGB'] = ApiClient.convertToType(data['sizeInGB'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GalleryDataDiskImage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GalleryDataDiskImage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hostCaching'] && !(typeof data['hostCaching'] === 'string' || data['hostCaching'] instanceof String)) {
            throw new Error("Expected the field `hostCaching` to be a primitive type in the JSON string but got " + data['hostCaching']);
        }

        return true;
    }


}



/**
 * This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
 * @member {Number} lun
 */
GalleryDataDiskImage.prototype['lun'] = undefined;

/**
 * The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
 * @member {module:model/GalleryDataDiskImage.HostCachingEnum} hostCaching
 */
GalleryDataDiskImage.prototype['hostCaching'] = undefined;

/**
 * This property indicates the size of the VHD to be created.
 * @member {Number} sizeInGB
 */
GalleryDataDiskImage.prototype['sizeInGB'] = undefined;


// Implement GalleryDiskImage interface:
/**
 * The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
 * @member {module:model/GalleryDiskImage.HostCachingEnum} hostCaching
 */
GalleryDiskImage.prototype['hostCaching'] = undefined;
/**
 * This property indicates the size of the VHD to be created.
 * @member {Number} sizeInGB
 */
GalleryDiskImage.prototype['sizeInGB'] = undefined;



/**
 * Allowed values for the <code>hostCaching</code> property.
 * @enum {String}
 * @readonly
 */
GalleryDataDiskImage['HostCachingEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "ReadOnly"
     * @const
     */
    "ReadOnly": "ReadOnly",

    /**
     * value: "ReadWrite"
     * @const
     */
    "ReadWrite": "ReadWrite"
};



export default GalleryDataDiskImage;

