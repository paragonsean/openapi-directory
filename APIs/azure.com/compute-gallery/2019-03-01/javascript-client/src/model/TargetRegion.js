/**
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TargetRegion model module.
 * @module model/TargetRegion
 * @version 2019-03-01
 */
class TargetRegion {
    /**
     * Constructs a new <code>TargetRegion</code>.
     * Describes the target region information.
     * @alias module:model/TargetRegion
     * @param name {String} The name of the region.
     */
    constructor(name) { 
        
        TargetRegion.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>TargetRegion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TargetRegion} obj Optional instance to populate.
     * @return {module:model/TargetRegion} The populated <code>TargetRegion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TargetRegion();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('regionalReplicaCount')) {
                obj['regionalReplicaCount'] = ApiClient.convertToType(data['regionalReplicaCount'], 'Number');
            }
            if (data.hasOwnProperty('storageAccountType')) {
                obj['storageAccountType'] = ApiClient.convertToType(data['storageAccountType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TargetRegion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TargetRegion</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TargetRegion.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['storageAccountType'] && !(typeof data['storageAccountType'] === 'string' || data['storageAccountType'] instanceof String)) {
            throw new Error("Expected the field `storageAccountType` to be a primitive type in the JSON string but got " + data['storageAccountType']);
        }

        return true;
    }


}

TargetRegion.RequiredProperties = ["name"];

/**
 * The name of the region.
 * @member {String} name
 */
TargetRegion.prototype['name'] = undefined;

/**
 * The number of replicas of the Image Version to be created per region. This property is updatable.
 * @member {Number} regionalReplicaCount
 */
TargetRegion.prototype['regionalReplicaCount'] = undefined;

/**
 * Specifies the storage account type to be used to store the image. This property is not updatable.
 * @member {module:model/TargetRegion.StorageAccountTypeEnum} storageAccountType
 */
TargetRegion.prototype['storageAccountType'] = undefined;





/**
 * Allowed values for the <code>storageAccountType</code> property.
 * @enum {String}
 * @readonly
 */
TargetRegion['StorageAccountTypeEnum'] = {

    /**
     * value: "Standard_LRS"
     * @const
     */
    "LRS": "Standard_LRS",

    /**
     * value: "Standard_ZRS"
     * @const
     */
    "ZRS": "Standard_ZRS"
};



export default TargetRegion;

