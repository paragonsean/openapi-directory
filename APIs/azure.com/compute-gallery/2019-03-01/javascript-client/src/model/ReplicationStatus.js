/**
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2019-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RegionalReplicationStatus from './RegionalReplicationStatus';

/**
 * The ReplicationStatus model module.
 * @module model/ReplicationStatus
 * @version 2019-03-01
 */
class ReplicationStatus {
    /**
     * Constructs a new <code>ReplicationStatus</code>.
     * This is the replication status of the gallery Image Version.
     * @alias module:model/ReplicationStatus
     */
    constructor() { 
        
        ReplicationStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReplicationStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplicationStatus} obj Optional instance to populate.
     * @return {module:model/ReplicationStatus} The populated <code>ReplicationStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplicationStatus();

            if (data.hasOwnProperty('aggregatedState')) {
                obj['aggregatedState'] = ApiClient.convertToType(data['aggregatedState'], 'String');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], [RegionalReplicationStatus]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplicationStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplicationStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['aggregatedState'] && !(typeof data['aggregatedState'] === 'string' || data['aggregatedState'] instanceof String)) {
            throw new Error("Expected the field `aggregatedState` to be a primitive type in the JSON string but got " + data['aggregatedState']);
        }
        if (data['summary']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['summary'])) {
                throw new Error("Expected the field `summary` to be an array in the JSON data but got " + data['summary']);
            }
            // validate the optional field `summary` (array)
            for (const item of data['summary']) {
                RegionalReplicationStatus.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * This is the aggregated replication status based on all the regional replication status flags.
 * @member {module:model/ReplicationStatus.AggregatedStateEnum} aggregatedState
 */
ReplicationStatus.prototype['aggregatedState'] = undefined;

/**
 * This is a summary of replication status for each region.
 * @member {Array.<module:model/RegionalReplicationStatus>} summary
 */
ReplicationStatus.prototype['summary'] = undefined;





/**
 * Allowed values for the <code>aggregatedState</code> property.
 * @enum {String}
 * @readonly
 */
ReplicationStatus['AggregatedStateEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed"
};



export default ReplicationStatus;

