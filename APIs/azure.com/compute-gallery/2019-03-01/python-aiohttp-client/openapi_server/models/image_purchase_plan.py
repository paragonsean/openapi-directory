# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImagePurchasePlan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, product: str=None, publisher: str=None):
        """ImagePurchasePlan - a model defined in OpenAPI

        :param name: The name of this ImagePurchasePlan.
        :param product: The product of this ImagePurchasePlan.
        :param publisher: The publisher of this ImagePurchasePlan.
        """
        self.openapi_types = {
            'name': str,
            'product': str,
            'publisher': str
        }

        self.attribute_map = {
            'name': 'name',
            'product': 'product',
            'publisher': 'publisher'
        }

        self._name = name
        self._product = product
        self._publisher = publisher

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImagePurchasePlan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImagePurchasePlan of this ImagePurchasePlan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ImagePurchasePlan.

        The plan ID.

        :return: The name of this ImagePurchasePlan.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ImagePurchasePlan.

        The plan ID.

        :param name: The name of this ImagePurchasePlan.
        :type name: str
        """

        self._name = name

    @property
    def product(self):
        """Gets the product of this ImagePurchasePlan.

        The product ID.

        :return: The product of this ImagePurchasePlan.
        :rtype: str
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this ImagePurchasePlan.

        The product ID.

        :param product: The product of this ImagePurchasePlan.
        :type product: str
        """

        self._product = product

    @property
    def publisher(self):
        """Gets the publisher of this ImagePurchasePlan.

        The publisher ID.

        :return: The publisher of this ImagePurchasePlan.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher):
        """Sets the publisher of this ImagePurchasePlan.

        The publisher ID.

        :param publisher: The publisher of this ImagePurchasePlan.
        :type publisher: str
        """

        self._publisher = publisher
