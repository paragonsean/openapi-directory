/*
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.GalleryApplication;
import org.openapitools.client.model.GalleryApplicationList;
import org.openapitools.client.model.GalleryApplicationUpdate;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GalleryApplicationsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public GalleryApplicationsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public GalleryApplicationsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for galleryApplicationsCreateOrUpdate
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition is to be created. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters. (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplication Parameters supplied to the create or update gallery Application operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationsCreateOrUpdateCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, GalleryApplication galleryApplication, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = galleryApplication;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryApplicationName" + "}", localVarApiClient.escapeString(galleryApplicationName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryApplicationsCreateOrUpdateValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, GalleryApplication galleryApplication, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryApplicationsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryApplicationsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryApplicationsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryApplicationName' is set
        if (galleryApplicationName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryApplicationsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryApplication' is set
        if (galleryApplication == null) {
            throw new ApiException("Missing the required parameter 'galleryApplication' when calling galleryApplicationsCreateOrUpdate(Async)");
        }

        return galleryApplicationsCreateOrUpdateCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, galleryApplication, _callback);

    }

    /**
     * 
     * Create or update a gallery Application Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition is to be created. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters. (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplication Parameters supplied to the create or update gallery Application operation. (required)
     * @return GalleryApplication
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryApplication galleryApplicationsCreateOrUpdate(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, GalleryApplication galleryApplication) throws ApiException {
        ApiResponse<GalleryApplication> localVarResp = galleryApplicationsCreateOrUpdateWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, galleryApplication);
        return localVarResp.getData();
    }

    /**
     * 
     * Create or update a gallery Application Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition is to be created. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters. (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplication Parameters supplied to the create or update gallery Application operation. (required)
     * @return ApiResponse&lt;GalleryApplication&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryApplication> galleryApplicationsCreateOrUpdateWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, GalleryApplication galleryApplication) throws ApiException {
        okhttp3.Call localVarCall = galleryApplicationsCreateOrUpdateValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, galleryApplication, null);
        Type localVarReturnType = new TypeToken<GalleryApplication>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create or update a gallery Application Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition is to be created. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters. (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplication Parameters supplied to the create or update gallery Application operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationsCreateOrUpdateAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, GalleryApplication galleryApplication, final ApiCallback<GalleryApplication> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryApplicationsCreateOrUpdateValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, galleryApplication, _callback);
        Type localVarReturnType = new TypeToken<GalleryApplication>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryApplicationsDelete
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition is to be deleted. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationsDeleteCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryApplicationName" + "}", localVarApiClient.escapeString(galleryApplicationName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryApplicationsDeleteValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryApplicationsDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryApplicationsDelete(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryApplicationsDelete(Async)");
        }

        // verify the required parameter 'galleryApplicationName' is set
        if (galleryApplicationName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationsDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryApplicationsDelete(Async)");
        }

        return galleryApplicationsDeleteCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, _callback);

    }

    /**
     * 
     * Delete a gallery Application.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition is to be deleted. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void galleryApplicationsDelete(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion) throws ApiException {
        galleryApplicationsDeleteWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion);
    }

    /**
     * 
     * Delete a gallery Application.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition is to be deleted. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> galleryApplicationsDeleteWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryApplicationsDeleteValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Delete a gallery Application.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition is to be deleted. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationsDeleteAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryApplicationsDeleteValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryApplicationsGet
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery from which the Application Definitions are to be retrieved. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationsGetCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryApplicationName" + "}", localVarApiClient.escapeString(galleryApplicationName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryApplicationsGetValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryApplicationsGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryApplicationsGet(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryApplicationsGet(Async)");
        }

        // verify the required parameter 'galleryApplicationName' is set
        if (galleryApplicationName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryApplicationsGet(Async)");
        }

        return galleryApplicationsGetCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, _callback);

    }

    /**
     * 
     * Retrieves information about a gallery Application Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery from which the Application Definitions are to be retrieved. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @return GalleryApplication
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryApplication galleryApplicationsGet(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion) throws ApiException {
        ApiResponse<GalleryApplication> localVarResp = galleryApplicationsGetWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves information about a gallery Application Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery from which the Application Definitions are to be retrieved. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;GalleryApplication&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryApplication> galleryApplicationsGetWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryApplicationsGetValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, null);
        Type localVarReturnType = new TypeToken<GalleryApplication>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves information about a gallery Application Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery from which the Application Definitions are to be retrieved. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationsGetAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, final ApiCallback<GalleryApplication> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryApplicationsGetValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<GalleryApplication>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryApplicationsListByGallery
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery from which Application Definitions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationsListByGalleryCall(String subscriptionId, String resourceGroupName, String galleryName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryApplicationsListByGalleryValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryApplicationsListByGallery(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryApplicationsListByGallery(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryApplicationsListByGallery(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryApplicationsListByGallery(Async)");
        }

        return galleryApplicationsListByGalleryCall(subscriptionId, resourceGroupName, galleryName, apiVersion, _callback);

    }

    /**
     * 
     * List gallery Application Definitions in a gallery.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery from which Application Definitions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @return GalleryApplicationList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryApplicationList galleryApplicationsListByGallery(String subscriptionId, String resourceGroupName, String galleryName, String apiVersion) throws ApiException {
        ApiResponse<GalleryApplicationList> localVarResp = galleryApplicationsListByGalleryWithHttpInfo(subscriptionId, resourceGroupName, galleryName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * List gallery Application Definitions in a gallery.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery from which Application Definitions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;GalleryApplicationList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryApplicationList> galleryApplicationsListByGalleryWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryApplicationsListByGalleryValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, apiVersion, null);
        Type localVarReturnType = new TypeToken<GalleryApplicationList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * List gallery Application Definitions in a gallery.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery from which Application Definitions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationsListByGalleryAsync(String subscriptionId, String resourceGroupName, String galleryName, String apiVersion, final ApiCallback<GalleryApplicationList> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryApplicationsListByGalleryValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<GalleryApplicationList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryApplicationsUpdate
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition is to be updated. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters. (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplication Parameters supplied to the update gallery Application operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationsUpdateCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, GalleryApplicationUpdate galleryApplication, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = galleryApplication;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryApplicationName" + "}", localVarApiClient.escapeString(galleryApplicationName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryApplicationsUpdateValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, GalleryApplicationUpdate galleryApplication, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryApplicationsUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryApplicationsUpdate(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryApplicationsUpdate(Async)");
        }

        // verify the required parameter 'galleryApplicationName' is set
        if (galleryApplicationName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationsUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryApplicationsUpdate(Async)");
        }

        // verify the required parameter 'galleryApplication' is set
        if (galleryApplication == null) {
            throw new ApiException("Missing the required parameter 'galleryApplication' when calling galleryApplicationsUpdate(Async)");
        }

        return galleryApplicationsUpdateCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, galleryApplication, _callback);

    }

    /**
     * 
     * Update a gallery Application Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition is to be updated. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters. (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplication Parameters supplied to the update gallery Application operation. (required)
     * @return GalleryApplication
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryApplication galleryApplicationsUpdate(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, GalleryApplicationUpdate galleryApplication) throws ApiException {
        ApiResponse<GalleryApplication> localVarResp = galleryApplicationsUpdateWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, galleryApplication);
        return localVarResp.getData();
    }

    /**
     * 
     * Update a gallery Application Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition is to be updated. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters. (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplication Parameters supplied to the update gallery Application operation. (required)
     * @return ApiResponse&lt;GalleryApplication&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryApplication> galleryApplicationsUpdateWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, GalleryApplicationUpdate galleryApplication) throws ApiException {
        okhttp3.Call localVarCall = galleryApplicationsUpdateValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, galleryApplication, null);
        Type localVarReturnType = new TypeToken<GalleryApplication>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update a gallery Application Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition is to be updated. (required)
     * @param galleryApplicationName The name of the gallery Application Definition to be updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters. (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplication Parameters supplied to the update gallery Application operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationsUpdateAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, GalleryApplicationUpdate galleryApplication, final ApiCallback<GalleryApplication> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryApplicationsUpdateValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, galleryApplication, _callback);
        Type localVarReturnType = new TypeToken<GalleryApplication>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
