/*
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.GalleryApplicationVersion;
import org.openapitools.client.model.GalleryApplicationVersionList;
import org.openapitools.client.model.GalleryApplicationVersionUpdate;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GalleryApplicationVersionsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public GalleryApplicationVersionsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public GalleryApplicationVersionsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for galleryApplicationVersionsCreateOrUpdate
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is to be created. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt; (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplicationVersion Parameters supplied to the create or update gallery Application Version operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationVersionsCreateOrUpdateCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, GalleryApplicationVersion galleryApplicationVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = galleryApplicationVersion;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryApplicationName" + "}", localVarApiClient.escapeString(galleryApplicationName.toString()))
            .replace("{" + "galleryApplicationVersionName" + "}", localVarApiClient.escapeString(galleryApplicationVersionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryApplicationVersionsCreateOrUpdateValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, GalleryApplicationVersion galleryApplicationVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryApplicationVersionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryApplicationVersionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryApplicationVersionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryApplicationName' is set
        if (galleryApplicationName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationVersionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryApplicationVersionName' is set
        if (galleryApplicationVersionName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationVersionName' when calling galleryApplicationVersionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryApplicationVersionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryApplicationVersion' is set
        if (galleryApplicationVersion == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationVersion' when calling galleryApplicationVersionsCreateOrUpdate(Async)");
        }

        return galleryApplicationVersionsCreateOrUpdateCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, galleryApplicationVersion, _callback);

    }

    /**
     * 
     * Create or update a gallery Application Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is to be created. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt; (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplicationVersion Parameters supplied to the create or update gallery Application Version operation. (required)
     * @return GalleryApplicationVersion
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryApplicationVersion galleryApplicationVersionsCreateOrUpdate(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, GalleryApplicationVersion galleryApplicationVersion) throws ApiException {
        ApiResponse<GalleryApplicationVersion> localVarResp = galleryApplicationVersionsCreateOrUpdateWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, galleryApplicationVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Create or update a gallery Application Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is to be created. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt; (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplicationVersion Parameters supplied to the create or update gallery Application Version operation. (required)
     * @return ApiResponse&lt;GalleryApplicationVersion&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryApplicationVersion> galleryApplicationVersionsCreateOrUpdateWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, GalleryApplicationVersion galleryApplicationVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryApplicationVersionsCreateOrUpdateValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, galleryApplicationVersion, null);
        Type localVarReturnType = new TypeToken<GalleryApplicationVersion>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create or update a gallery Application Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is to be created. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt; (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplicationVersion Parameters supplied to the create or update gallery Application Version operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationVersionsCreateOrUpdateAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, GalleryApplicationVersion galleryApplicationVersion, final ApiCallback<GalleryApplicationVersion> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryApplicationVersionsCreateOrUpdateValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, galleryApplicationVersion, _callback);
        Type localVarReturnType = new TypeToken<GalleryApplicationVersion>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryApplicationVersionsDelete
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version resides. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationVersionsDeleteCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryApplicationName" + "}", localVarApiClient.escapeString(galleryApplicationName.toString()))
            .replace("{" + "galleryApplicationVersionName" + "}", localVarApiClient.escapeString(galleryApplicationVersionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryApplicationVersionsDeleteValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryApplicationVersionsDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryApplicationVersionsDelete(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryApplicationVersionsDelete(Async)");
        }

        // verify the required parameter 'galleryApplicationName' is set
        if (galleryApplicationName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationVersionsDelete(Async)");
        }

        // verify the required parameter 'galleryApplicationVersionName' is set
        if (galleryApplicationVersionName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationVersionName' when calling galleryApplicationVersionsDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryApplicationVersionsDelete(Async)");
        }

        return galleryApplicationVersionsDeleteCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, _callback);

    }

    /**
     * 
     * Delete a gallery Application Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version resides. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void galleryApplicationVersionsDelete(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion) throws ApiException {
        galleryApplicationVersionsDeleteWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion);
    }

    /**
     * 
     * Delete a gallery Application Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version resides. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> galleryApplicationVersionsDeleteWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryApplicationVersionsDeleteValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Delete a gallery Application Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version resides. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationVersionsDeleteAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryApplicationVersionsDeleteValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryApplicationVersionsGet
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version resides. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @param $expand The expand expression to apply on the operation. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationVersionsGetCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, String $expand, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryApplicationName" + "}", localVarApiClient.escapeString(galleryApplicationName.toString()))
            .replace("{" + "galleryApplicationVersionName" + "}", localVarApiClient.escapeString(galleryApplicationVersionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryApplicationVersionsGetValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, String $expand, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryApplicationVersionsGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryApplicationVersionsGet(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryApplicationVersionsGet(Async)");
        }

        // verify the required parameter 'galleryApplicationName' is set
        if (galleryApplicationName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationVersionsGet(Async)");
        }

        // verify the required parameter 'galleryApplicationVersionName' is set
        if (galleryApplicationVersionName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationVersionName' when calling galleryApplicationVersionsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryApplicationVersionsGet(Async)");
        }

        return galleryApplicationVersionsGetCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, $expand, _callback);

    }

    /**
     * 
     * Retrieves information about a gallery Application Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version resides. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @param $expand The expand expression to apply on the operation. (optional)
     * @return GalleryApplicationVersion
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryApplicationVersion galleryApplicationVersionsGet(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, String $expand) throws ApiException {
        ApiResponse<GalleryApplicationVersion> localVarResp = galleryApplicationVersionsGetWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, $expand);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves information about a gallery Application Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version resides. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @param $expand The expand expression to apply on the operation. (optional)
     * @return ApiResponse&lt;GalleryApplicationVersion&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryApplicationVersion> galleryApplicationVersionsGetWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, String $expand) throws ApiException {
        okhttp3.Call localVarCall = galleryApplicationVersionsGetValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, $expand, null);
        Type localVarReturnType = new TypeToken<GalleryApplicationVersion>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves information about a gallery Application Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version resides. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @param $expand The expand expression to apply on the operation. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationVersionsGetAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, String $expand, final ApiCallback<GalleryApplicationVersion> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryApplicationVersionsGetValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, $expand, _callback);
        Type localVarReturnType = new TypeToken<GalleryApplicationVersion>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryApplicationVersionsListByGalleryApplication
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the Shared Application Gallery Application Definition from which the Application Versions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationVersionsListByGalleryApplicationCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryApplicationName" + "}", localVarApiClient.escapeString(galleryApplicationName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryApplicationVersionsListByGalleryApplicationValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryApplicationVersionsListByGalleryApplication(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryApplicationVersionsListByGalleryApplication(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryApplicationVersionsListByGalleryApplication(Async)");
        }

        // verify the required parameter 'galleryApplicationName' is set
        if (galleryApplicationName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationVersionsListByGalleryApplication(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryApplicationVersionsListByGalleryApplication(Async)");
        }

        return galleryApplicationVersionsListByGalleryApplicationCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, _callback);

    }

    /**
     * 
     * List gallery Application Versions in a gallery Application Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the Shared Application Gallery Application Definition from which the Application Versions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @return GalleryApplicationVersionList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryApplicationVersionList galleryApplicationVersionsListByGalleryApplication(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion) throws ApiException {
        ApiResponse<GalleryApplicationVersionList> localVarResp = galleryApplicationVersionsListByGalleryApplicationWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * List gallery Application Versions in a gallery Application Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the Shared Application Gallery Application Definition from which the Application Versions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;GalleryApplicationVersionList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryApplicationVersionList> galleryApplicationVersionsListByGalleryApplicationWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryApplicationVersionsListByGalleryApplicationValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, null);
        Type localVarReturnType = new TypeToken<GalleryApplicationVersionList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * List gallery Application Versions in a gallery Application Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the Shared Application Gallery Application Definition from which the Application Versions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationVersionsListByGalleryApplicationAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String apiVersion, final ApiCallback<GalleryApplicationVersionList> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryApplicationVersionsListByGalleryApplicationValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<GalleryApplicationVersionList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryApplicationVersionsUpdate
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is to be updated. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be updated. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt; (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplicationVersion Parameters supplied to the update gallery Application Version operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationVersionsUpdateCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, GalleryApplicationVersionUpdate galleryApplicationVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = galleryApplicationVersion;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryApplicationName" + "}", localVarApiClient.escapeString(galleryApplicationName.toString()))
            .replace("{" + "galleryApplicationVersionName" + "}", localVarApiClient.escapeString(galleryApplicationVersionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryApplicationVersionsUpdateValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, GalleryApplicationVersionUpdate galleryApplicationVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryApplicationVersionsUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryApplicationVersionsUpdate(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryApplicationVersionsUpdate(Async)");
        }

        // verify the required parameter 'galleryApplicationName' is set
        if (galleryApplicationName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationName' when calling galleryApplicationVersionsUpdate(Async)");
        }

        // verify the required parameter 'galleryApplicationVersionName' is set
        if (galleryApplicationVersionName == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationVersionName' when calling galleryApplicationVersionsUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryApplicationVersionsUpdate(Async)");
        }

        // verify the required parameter 'galleryApplicationVersion' is set
        if (galleryApplicationVersion == null) {
            throw new ApiException("Missing the required parameter 'galleryApplicationVersion' when calling galleryApplicationVersionsUpdate(Async)");
        }

        return galleryApplicationVersionsUpdateCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, galleryApplicationVersion, _callback);

    }

    /**
     * 
     * Update a gallery Application Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is to be updated. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be updated. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt; (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplicationVersion Parameters supplied to the update gallery Application Version operation. (required)
     * @return GalleryApplicationVersion
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryApplicationVersion galleryApplicationVersionsUpdate(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, GalleryApplicationVersionUpdate galleryApplicationVersion) throws ApiException {
        ApiResponse<GalleryApplicationVersion> localVarResp = galleryApplicationVersionsUpdateWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, galleryApplicationVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Update a gallery Application Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is to be updated. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be updated. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt; (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplicationVersion Parameters supplied to the update gallery Application Version operation. (required)
     * @return ApiResponse&lt;GalleryApplicationVersion&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryApplicationVersion> galleryApplicationVersionsUpdateWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, GalleryApplicationVersionUpdate galleryApplicationVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryApplicationVersionsUpdateValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, galleryApplicationVersion, null);
        Type localVarReturnType = new TypeToken<GalleryApplicationVersion>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update a gallery Application Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides. (required)
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is to be updated. (required)
     * @param galleryApplicationVersionName The name of the gallery Application Version to be updated. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt; (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryApplicationVersion Parameters supplied to the update gallery Application Version operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryApplicationVersionsUpdateAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryApplicationName, String galleryApplicationVersionName, String apiVersion, GalleryApplicationVersionUpdate galleryApplicationVersion, final ApiCallback<GalleryApplicationVersion> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryApplicationVersionsUpdateValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, apiVersion, galleryApplicationVersion, _callback);
        Type localVarReturnType = new TypeToken<GalleryApplicationVersion>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
