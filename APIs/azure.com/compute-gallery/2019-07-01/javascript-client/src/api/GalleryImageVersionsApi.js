/**
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import GalleryImageVersion from '../model/GalleryImageVersion';
import GalleryImageVersionList from '../model/GalleryImageVersionList';
import GalleryImageVersionUpdate from '../model/GalleryImageVersionUpdate';

/**
* GalleryImageVersions service.
* @module api/GalleryImageVersionsApi
* @version 2019-07-01
*/
export default class GalleryImageVersionsApi {

    /**
    * Constructs a new GalleryImageVersionsApi. 
    * @alias module:api/GalleryImageVersionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the galleryImageVersionsCreateOrUpdate operation.
     * @callback module:api/GalleryImageVersionsApi~galleryImageVersionsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GalleryImageVersion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update a gallery Image Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param {String} galleryImageName The name of the gallery Image Definition in which the Image Version is to be created.
     * @param {String} galleryImageVersionName The name of the gallery Image Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/GalleryImageVersion} galleryImageVersion Parameters supplied to the create or update gallery Image Version operation.
     * @param {module:api/GalleryImageVersionsApi~galleryImageVersionsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GalleryImageVersion}
     */
    galleryImageVersionsCreateOrUpdate(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, galleryImageVersion, callback) {
      let postBody = galleryImageVersion;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryImageVersionsCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryImageVersionsCreateOrUpdate");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryImageVersionsCreateOrUpdate");
      }
      // verify the required parameter 'galleryImageName' is set
      if (galleryImageName === undefined || galleryImageName === null) {
        throw new Error("Missing the required parameter 'galleryImageName' when calling galleryImageVersionsCreateOrUpdate");
      }
      // verify the required parameter 'galleryImageVersionName' is set
      if (galleryImageVersionName === undefined || galleryImageVersionName === null) {
        throw new Error("Missing the required parameter 'galleryImageVersionName' when calling galleryImageVersionsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryImageVersionsCreateOrUpdate");
      }
      // verify the required parameter 'galleryImageVersion' is set
      if (galleryImageVersion === undefined || galleryImageVersion === null) {
        throw new Error("Missing the required parameter 'galleryImageVersion' when calling galleryImageVersionsCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryImageName': galleryImageName,
        'galleryImageVersionName': galleryImageVersionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GalleryImageVersion;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the galleryImageVersionsDelete operation.
     * @callback module:api/GalleryImageVersionsApi~galleryImageVersionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a gallery Image Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param {String} galleryImageName The name of the gallery Image Definition in which the Image Version resides.
     * @param {String} galleryImageVersionName The name of the gallery Image Version to be deleted.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/GalleryImageVersionsApi~galleryImageVersionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    galleryImageVersionsDelete(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryImageVersionsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryImageVersionsDelete");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryImageVersionsDelete");
      }
      // verify the required parameter 'galleryImageName' is set
      if (galleryImageName === undefined || galleryImageName === null) {
        throw new Error("Missing the required parameter 'galleryImageName' when calling galleryImageVersionsDelete");
      }
      // verify the required parameter 'galleryImageVersionName' is set
      if (galleryImageVersionName === undefined || galleryImageVersionName === null) {
        throw new Error("Missing the required parameter 'galleryImageVersionName' when calling galleryImageVersionsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryImageVersionsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryImageName': galleryImageName,
        'galleryImageVersionName': galleryImageVersionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the galleryImageVersionsGet operation.
     * @callback module:api/GalleryImageVersionsApi~galleryImageVersionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GalleryImageVersion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about a gallery Image Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param {String} galleryImageName The name of the gallery Image Definition in which the Image Version resides.
     * @param {String} galleryImageVersionName The name of the gallery Image Version to be retrieved.
     * @param {String} apiVersion Client Api Version.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [expand] The expand expression to apply on the operation.
     * @param {module:api/GalleryImageVersionsApi~galleryImageVersionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GalleryImageVersion}
     */
    galleryImageVersionsGet(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryImageVersionsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryImageVersionsGet");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryImageVersionsGet");
      }
      // verify the required parameter 'galleryImageName' is set
      if (galleryImageName === undefined || galleryImageName === null) {
        throw new Error("Missing the required parameter 'galleryImageName' when calling galleryImageVersionsGet");
      }
      // verify the required parameter 'galleryImageVersionName' is set
      if (galleryImageVersionName === undefined || galleryImageVersionName === null) {
        throw new Error("Missing the required parameter 'galleryImageVersionName' when calling galleryImageVersionsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryImageVersionsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryImageName': galleryImageName,
        'galleryImageVersionName': galleryImageVersionName
      };
      let queryParams = {
        '$expand': opts['expand'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GalleryImageVersion;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the galleryImageVersionsListByGalleryImage operation.
     * @callback module:api/GalleryImageVersionsApi~galleryImageVersionsListByGalleryImageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GalleryImageVersionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List gallery Image Versions in a gallery Image Definition.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param {String} galleryImageName The name of the Shared Image Gallery Image Definition from which the Image Versions are to be listed.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/GalleryImageVersionsApi~galleryImageVersionsListByGalleryImageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GalleryImageVersionList}
     */
    galleryImageVersionsListByGalleryImage(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryImageVersionsListByGalleryImage");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryImageVersionsListByGalleryImage");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryImageVersionsListByGalleryImage");
      }
      // verify the required parameter 'galleryImageName' is set
      if (galleryImageName === undefined || galleryImageName === null) {
        throw new Error("Missing the required parameter 'galleryImageName' when calling galleryImageVersionsListByGalleryImage");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryImageVersionsListByGalleryImage");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryImageName': galleryImageName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GalleryImageVersionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the galleryImageVersionsUpdate operation.
     * @callback module:api/GalleryImageVersionsApi~galleryImageVersionsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GalleryImageVersion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a gallery Image Version.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param {String} galleryImageName The name of the gallery Image Definition in which the Image Version is to be updated.
     * @param {String} galleryImageVersionName The name of the gallery Image Version to be updated. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/GalleryImageVersionUpdate} galleryImageVersion Parameters supplied to the update gallery Image Version operation.
     * @param {module:api/GalleryImageVersionsApi~galleryImageVersionsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GalleryImageVersion}
     */
    galleryImageVersionsUpdate(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, galleryImageVersion, callback) {
      let postBody = galleryImageVersion;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryImageVersionsUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryImageVersionsUpdate");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryImageVersionsUpdate");
      }
      // verify the required parameter 'galleryImageName' is set
      if (galleryImageName === undefined || galleryImageName === null) {
        throw new Error("Missing the required parameter 'galleryImageName' when calling galleryImageVersionsUpdate");
      }
      // verify the required parameter 'galleryImageVersionName' is set
      if (galleryImageVersionName === undefined || galleryImageVersionName === null) {
        throw new Error("Missing the required parameter 'galleryImageVersionName' when calling galleryImageVersionsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryImageVersionsUpdate");
      }
      // verify the required parameter 'galleryImageVersion' is set
      if (galleryImageVersion === undefined || galleryImageVersion === null) {
        throw new Error("Missing the required parameter 'galleryImageVersion' when calling galleryImageVersionsUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryImageName': galleryImageName,
        'galleryImageVersionName': galleryImageVersionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GalleryImageVersion;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
