/**
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2019-07-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CloudError from '../model/CloudError';
import GalleryImage from '../model/GalleryImage';
import GalleryImageList from '../model/GalleryImageList';
import GalleryImageUpdate from '../model/GalleryImageUpdate';

/**
* GalleryImages service.
* @module api/GalleryImagesApi
* @version 2019-07-01
*/
export default class GalleryImagesApi {

    /**
    * Constructs a new GalleryImagesApi. 
    * @alias module:api/GalleryImagesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the galleryImagesCreateOrUpdate operation.
     * @callback module:api/GalleryImagesApi~galleryImagesCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GalleryImage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update a gallery Image Definition.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Image Gallery in which the Image Definition is to be created.
     * @param {String} galleryImageName The name of the gallery Image Definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters.
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/GalleryImage} galleryImage Parameters supplied to the create or update gallery image operation.
     * @param {module:api/GalleryImagesApi~galleryImagesCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GalleryImage}
     */
    galleryImagesCreateOrUpdate(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, galleryImage, callback) {
      let postBody = galleryImage;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryImagesCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryImagesCreateOrUpdate");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryImagesCreateOrUpdate");
      }
      // verify the required parameter 'galleryImageName' is set
      if (galleryImageName === undefined || galleryImageName === null) {
        throw new Error("Missing the required parameter 'galleryImageName' when calling galleryImagesCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryImagesCreateOrUpdate");
      }
      // verify the required parameter 'galleryImage' is set
      if (galleryImage === undefined || galleryImage === null) {
        throw new Error("Missing the required parameter 'galleryImage' when calling galleryImagesCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryImageName': galleryImageName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GalleryImage;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the galleryImagesDelete operation.
     * @callback module:api/GalleryImagesApi~galleryImagesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a gallery image.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Image Gallery in which the Image Definition is to be deleted.
     * @param {String} galleryImageName The name of the gallery Image Definition to be deleted.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/GalleryImagesApi~galleryImagesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    galleryImagesDelete(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryImagesDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryImagesDelete");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryImagesDelete");
      }
      // verify the required parameter 'galleryImageName' is set
      if (galleryImageName === undefined || galleryImageName === null) {
        throw new Error("Missing the required parameter 'galleryImageName' when calling galleryImagesDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryImagesDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryImageName': galleryImageName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the galleryImagesGet operation.
     * @callback module:api/GalleryImagesApi~galleryImagesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GalleryImage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about a gallery Image Definition.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Image Gallery from which the Image Definitions are to be retrieved.
     * @param {String} galleryImageName The name of the gallery Image Definition to be retrieved.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/GalleryImagesApi~galleryImagesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GalleryImage}
     */
    galleryImagesGet(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryImagesGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryImagesGet");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryImagesGet");
      }
      // verify the required parameter 'galleryImageName' is set
      if (galleryImageName === undefined || galleryImageName === null) {
        throw new Error("Missing the required parameter 'galleryImageName' when calling galleryImagesGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryImagesGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryImageName': galleryImageName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GalleryImage;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the galleryImagesListByGallery operation.
     * @callback module:api/GalleryImagesApi~galleryImagesListByGalleryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GalleryImageList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List gallery Image Definitions in a gallery.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Image Gallery from which Image Definitions are to be listed.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/GalleryImagesApi~galleryImagesListByGalleryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GalleryImageList}
     */
    galleryImagesListByGallery(subscriptionId, resourceGroupName, galleryName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryImagesListByGallery");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryImagesListByGallery");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryImagesListByGallery");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryImagesListByGallery");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GalleryImageList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the galleryImagesUpdate operation.
     * @callback module:api/GalleryImagesApi~galleryImagesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GalleryImage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a gallery Image Definition.
     * @param {String} subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName The name of the resource group.
     * @param {String} galleryName The name of the Shared Image Gallery in which the Image Definition is to be updated.
     * @param {String} galleryImageName The name of the gallery Image Definition to be updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters.
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/GalleryImageUpdate} galleryImage Parameters supplied to the update gallery image operation.
     * @param {module:api/GalleryImagesApi~galleryImagesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GalleryImage}
     */
    galleryImagesUpdate(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, galleryImage, callback) {
      let postBody = galleryImage;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling galleryImagesUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling galleryImagesUpdate");
      }
      // verify the required parameter 'galleryName' is set
      if (galleryName === undefined || galleryName === null) {
        throw new Error("Missing the required parameter 'galleryName' when calling galleryImagesUpdate");
      }
      // verify the required parameter 'galleryImageName' is set
      if (galleryImageName === undefined || galleryImageName === null) {
        throw new Error("Missing the required parameter 'galleryImageName' when calling galleryImagesUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling galleryImagesUpdate");
      }
      // verify the required parameter 'galleryImage' is set
      if (galleryImage === undefined || galleryImage === null) {
        throw new Error("Missing the required parameter 'galleryImage' when calling galleryImagesUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'galleryName': galleryName,
        'galleryImageName': galleryImageName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GalleryImage;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
