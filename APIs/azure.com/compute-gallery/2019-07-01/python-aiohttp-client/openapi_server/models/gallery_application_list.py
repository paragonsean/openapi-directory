# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gallery_application import GalleryApplication
from openapi_server import util


class GalleryApplicationList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_link: str=None, value: List[GalleryApplication]=None):
        """GalleryApplicationList - a model defined in OpenAPI

        :param next_link: The next_link of this GalleryApplicationList.
        :param value: The value of this GalleryApplicationList.
        """
        self.openapi_types = {
            'next_link': str,
            'value': List[GalleryApplication]
        }

        self.attribute_map = {
            'next_link': 'nextLink',
            'value': 'value'
        }

        self._next_link = next_link
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GalleryApplicationList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GalleryApplicationList of this GalleryApplicationList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_link(self):
        """Gets the next_link of this GalleryApplicationList.

        The uri to fetch the next page of Application Definitions in the Application Gallery. Call ListNext() with this to fetch the next page of gallery Application Definitions.

        :return: The next_link of this GalleryApplicationList.
        :rtype: str
        """
        return self._next_link

    @next_link.setter
    def next_link(self, next_link):
        """Sets the next_link of this GalleryApplicationList.

        The uri to fetch the next page of Application Definitions in the Application Gallery. Call ListNext() with this to fetch the next page of gallery Application Definitions.

        :param next_link: The next_link of this GalleryApplicationList.
        :type next_link: str
        """

        self._next_link = next_link

    @property
    def value(self):
        """Gets the value of this GalleryApplicationList.

        A list of Gallery Applications.

        :return: The value of this GalleryApplicationList.
        :rtype: List[GalleryApplication]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this GalleryApplicationList.

        A list of Gallery Applications.

        :param value: The value of this GalleryApplicationList.
        :type value: List[GalleryApplication]
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")

        self._value = value
