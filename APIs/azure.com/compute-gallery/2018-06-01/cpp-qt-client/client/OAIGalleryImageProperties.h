/**
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGalleryImageProperties.h
 *
 * Describes the properties of a gallery Image Definition.
 */

#ifndef OAIGalleryImageProperties_H
#define OAIGalleryImageProperties_H

#include <QJsonObject>

#include "OAIDisallowed.h"
#include "OAIGalleryImageIdentifier.h"
#include "OAIImagePurchasePlan.h"
#include "OAIRecommendedMachineConfiguration.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDisallowed;
class OAIGalleryImageIdentifier;
class OAIImagePurchasePlan;
class OAIRecommendedMachineConfiguration;

class OAIGalleryImageProperties : public OAIObject {
public:
    OAIGalleryImageProperties();
    OAIGalleryImageProperties(QString json);
    ~OAIGalleryImageProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIDisallowed getDisallowed() const;
    void setDisallowed(const OAIDisallowed &disallowed);
    bool is_disallowed_Set() const;
    bool is_disallowed_Valid() const;

    QDateTime getEndOfLifeDate() const;
    void setEndOfLifeDate(const QDateTime &end_of_life_date);
    bool is_end_of_life_date_Set() const;
    bool is_end_of_life_date_Valid() const;

    QString getEula() const;
    void setEula(const QString &eula);
    bool is_eula_Set() const;
    bool is_eula_Valid() const;

    OAIGalleryImageIdentifier getIdentifier() const;
    void setIdentifier(const OAIGalleryImageIdentifier &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    QString getOsState() const;
    void setOsState(const QString &os_state);
    bool is_os_state_Set() const;
    bool is_os_state_Valid() const;

    QString getOsType() const;
    void setOsType(const QString &os_type);
    bool is_os_type_Set() const;
    bool is_os_type_Valid() const;

    QString getPrivacyStatementUri() const;
    void setPrivacyStatementUri(const QString &privacy_statement_uri);
    bool is_privacy_statement_uri_Set() const;
    bool is_privacy_statement_uri_Valid() const;

    QString getProvisioningState() const;
    void setProvisioningState(const QString &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    OAIImagePurchasePlan getPurchasePlan() const;
    void setPurchasePlan(const OAIImagePurchasePlan &purchase_plan);
    bool is_purchase_plan_Set() const;
    bool is_purchase_plan_Valid() const;

    OAIRecommendedMachineConfiguration getRecommended() const;
    void setRecommended(const OAIRecommendedMachineConfiguration &recommended);
    bool is_recommended_Set() const;
    bool is_recommended_Valid() const;

    QString getReleaseNoteUri() const;
    void setReleaseNoteUri(const QString &release_note_uri);
    bool is_release_note_uri_Set() const;
    bool is_release_note_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIDisallowed m_disallowed;
    bool m_disallowed_isSet;
    bool m_disallowed_isValid;

    QDateTime m_end_of_life_date;
    bool m_end_of_life_date_isSet;
    bool m_end_of_life_date_isValid;

    QString m_eula;
    bool m_eula_isSet;
    bool m_eula_isValid;

    OAIGalleryImageIdentifier m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    QString m_os_state;
    bool m_os_state_isSet;
    bool m_os_state_isValid;

    QString m_os_type;
    bool m_os_type_isSet;
    bool m_os_type_isValid;

    QString m_privacy_statement_uri;
    bool m_privacy_statement_uri_isSet;
    bool m_privacy_statement_uri_isValid;

    QString m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    OAIImagePurchasePlan m_purchase_plan;
    bool m_purchase_plan_isSet;
    bool m_purchase_plan_isValid;

    OAIRecommendedMachineConfiguration m_recommended;
    bool m_recommended_isSet;
    bool m_recommended_isValid;

    QString m_release_note_uri;
    bool m_release_note_uri_isSet;
    bool m_release_note_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGalleryImageProperties)

#endif // OAIGalleryImageProperties_H
