/**
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GalleryIdentifier from './GalleryIdentifier';

/**
 * The GalleryProperties model module.
 * @module model/GalleryProperties
 * @version 2018-06-01
 */
class GalleryProperties {
    /**
     * Constructs a new <code>GalleryProperties</code>.
     * Describes the properties of a Shared Image Gallery.
     * @alias module:model/GalleryProperties
     */
    constructor() { 
        
        GalleryProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GalleryProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GalleryProperties} obj Optional instance to populate.
     * @return {module:model/GalleryProperties} The populated <code>GalleryProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GalleryProperties();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = GalleryIdentifier.constructFromObject(data['identifier']);
            }
            if (data.hasOwnProperty('provisioningState')) {
                obj['provisioningState'] = ApiClient.convertToType(data['provisioningState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GalleryProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GalleryProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `identifier`
        if (data['identifier']) { // data not null
          GalleryIdentifier.validateJSON(data['identifier']);
        }
        // ensure the json data is a string
        if (data['provisioningState'] && !(typeof data['provisioningState'] === 'string' || data['provisioningState'] instanceof String)) {
            throw new Error("Expected the field `provisioningState` to be a primitive type in the JSON string but got " + data['provisioningState']);
        }

        return true;
    }


}



/**
 * The description of this Shared Image Gallery resource. This property is updatable.
 * @member {String} description
 */
GalleryProperties.prototype['description'] = undefined;

/**
 * @member {module:model/GalleryIdentifier} identifier
 */
GalleryProperties.prototype['identifier'] = undefined;

/**
 * The provisioning state, which only appears in the response.
 * @member {module:model/GalleryProperties.ProvisioningStateEnum} provisioningState
 */
GalleryProperties.prototype['provisioningState'] = undefined;





/**
 * Allowed values for the <code>provisioningState</code> property.
 * @enum {String}
 * @readonly
 */
GalleryProperties['ProvisioningStateEnum'] = {

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "Updating"
     * @const
     */
    "Updating": "Updating",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "Migrating"
     * @const
     */
    "Migrating": "Migrating"
};



export default GalleryProperties;

