# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gallery_artifact_source import GalleryArtifactSource
from openapi_server.models.target_region import TargetRegion
from openapi_server import util


class GalleryArtifactPublishingProfileBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source: GalleryArtifactSource=None, target_regions: List[TargetRegion]=None):
        """GalleryArtifactPublishingProfileBase - a model defined in OpenAPI

        :param source: The source of this GalleryArtifactPublishingProfileBase.
        :param target_regions: The target_regions of this GalleryArtifactPublishingProfileBase.
        """
        self.openapi_types = {
            'source': GalleryArtifactSource,
            'target_regions': List[TargetRegion]
        }

        self.attribute_map = {
            'source': 'source',
            'target_regions': 'targetRegions'
        }

        self._source = source
        self._target_regions = target_regions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GalleryArtifactPublishingProfileBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GalleryArtifactPublishingProfileBase of this GalleryArtifactPublishingProfileBase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source(self):
        """Gets the source of this GalleryArtifactPublishingProfileBase.


        :return: The source of this GalleryArtifactPublishingProfileBase.
        :rtype: GalleryArtifactSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this GalleryArtifactPublishingProfileBase.


        :param source: The source of this GalleryArtifactPublishingProfileBase.
        :type source: GalleryArtifactSource
        """
        if source is None:
            raise ValueError("Invalid value for `source`, must not be `None`")

        self._source = source

    @property
    def target_regions(self):
        """Gets the target_regions of this GalleryArtifactPublishingProfileBase.

        The target regions where the Image Version is going to be replicated to. This property is updatable.

        :return: The target_regions of this GalleryArtifactPublishingProfileBase.
        :rtype: List[TargetRegion]
        """
        return self._target_regions

    @target_regions.setter
    def target_regions(self, target_regions):
        """Sets the target_regions of this GalleryArtifactPublishingProfileBase.

        The target regions where the Image Version is going to be replicated to. This property is updatable.

        :param target_regions: The target_regions of this GalleryArtifactPublishingProfileBase.
        :type target_regions: List[TargetRegion]
        """

        self._target_regions = target_regions
