/*
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.GalleryImageVersion;
import org.openapitools.client.model.GalleryImageVersionList;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GalleryImageVersionsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public GalleryImageVersionsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public GalleryImageVersionsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for galleryImageVersionsCreateOrUpdate
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be created. (required)
     * @param galleryImageVersionName The name of the gallery Image Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt; (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryImageVersion Parameters supplied to the create or update gallery Image Version operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImageVersionsCreateOrUpdateCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, GalleryImageVersion galleryImageVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = galleryImageVersion;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryImageName" + "}", localVarApiClient.escapeString(galleryImageName.toString()))
            .replace("{" + "galleryImageVersionName" + "}", localVarApiClient.escapeString(galleryImageVersionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryImageVersionsCreateOrUpdateValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, GalleryImageVersion galleryImageVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryImageVersionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryImageVersionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryImageVersionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryImageName' is set
        if (galleryImageName == null) {
            throw new ApiException("Missing the required parameter 'galleryImageName' when calling galleryImageVersionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryImageVersionName' is set
        if (galleryImageVersionName == null) {
            throw new ApiException("Missing the required parameter 'galleryImageVersionName' when calling galleryImageVersionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryImageVersionsCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryImageVersion' is set
        if (galleryImageVersion == null) {
            throw new ApiException("Missing the required parameter 'galleryImageVersion' when calling galleryImageVersionsCreateOrUpdate(Async)");
        }

        return galleryImageVersionsCreateOrUpdateCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, galleryImageVersion, _callback);

    }

    /**
     * 
     * Create or update a gallery Image Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be created. (required)
     * @param galleryImageVersionName The name of the gallery Image Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt; (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryImageVersion Parameters supplied to the create or update gallery Image Version operation. (required)
     * @return GalleryImageVersion
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryImageVersion galleryImageVersionsCreateOrUpdate(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, GalleryImageVersion galleryImageVersion) throws ApiException {
        ApiResponse<GalleryImageVersion> localVarResp = galleryImageVersionsCreateOrUpdateWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, galleryImageVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Create or update a gallery Image Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be created. (required)
     * @param galleryImageVersionName The name of the gallery Image Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt; (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryImageVersion Parameters supplied to the create or update gallery Image Version operation. (required)
     * @return ApiResponse&lt;GalleryImageVersion&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryImageVersion> galleryImageVersionsCreateOrUpdateWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, GalleryImageVersion galleryImageVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryImageVersionsCreateOrUpdateValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, galleryImageVersion, null);
        Type localVarReturnType = new TypeToken<GalleryImageVersion>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create or update a gallery Image Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be created. (required)
     * @param galleryImageVersionName The name of the gallery Image Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt; (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryImageVersion Parameters supplied to the create or update gallery Image Version operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImageVersionsCreateOrUpdateAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, GalleryImageVersion galleryImageVersion, final ApiCallback<GalleryImageVersion> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryImageVersionsCreateOrUpdateValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, galleryImageVersion, _callback);
        Type localVarReturnType = new TypeToken<GalleryImageVersion>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryImageVersionsDelete
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides. (required)
     * @param galleryImageVersionName The name of the gallery Image Version to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImageVersionsDeleteCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryImageName" + "}", localVarApiClient.escapeString(galleryImageName.toString()))
            .replace("{" + "galleryImageVersionName" + "}", localVarApiClient.escapeString(galleryImageVersionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryImageVersionsDeleteValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryImageVersionsDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryImageVersionsDelete(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryImageVersionsDelete(Async)");
        }

        // verify the required parameter 'galleryImageName' is set
        if (galleryImageName == null) {
            throw new ApiException("Missing the required parameter 'galleryImageName' when calling galleryImageVersionsDelete(Async)");
        }

        // verify the required parameter 'galleryImageVersionName' is set
        if (galleryImageVersionName == null) {
            throw new ApiException("Missing the required parameter 'galleryImageVersionName' when calling galleryImageVersionsDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryImageVersionsDelete(Async)");
        }

        return galleryImageVersionsDeleteCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, _callback);

    }

    /**
     * 
     * Delete a gallery Image Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides. (required)
     * @param galleryImageVersionName The name of the gallery Image Version to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void galleryImageVersionsDelete(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion) throws ApiException {
        galleryImageVersionsDeleteWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion);
    }

    /**
     * 
     * Delete a gallery Image Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides. (required)
     * @param galleryImageVersionName The name of the gallery Image Version to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> galleryImageVersionsDeleteWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryImageVersionsDeleteValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Delete a gallery Image Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides. (required)
     * @param galleryImageVersionName The name of the gallery Image Version to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImageVersionsDeleteAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryImageVersionsDeleteValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryImageVersionsGet
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides. (required)
     * @param galleryImageVersionName The name of the gallery Image Version to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @param $expand The expand expression to apply on the operation. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImageVersionsGetCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, String $expand, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryImageName" + "}", localVarApiClient.escapeString(galleryImageName.toString()))
            .replace("{" + "galleryImageVersionName" + "}", localVarApiClient.escapeString(galleryImageVersionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryImageVersionsGetValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, String $expand, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryImageVersionsGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryImageVersionsGet(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryImageVersionsGet(Async)");
        }

        // verify the required parameter 'galleryImageName' is set
        if (galleryImageName == null) {
            throw new ApiException("Missing the required parameter 'galleryImageName' when calling galleryImageVersionsGet(Async)");
        }

        // verify the required parameter 'galleryImageVersionName' is set
        if (galleryImageVersionName == null) {
            throw new ApiException("Missing the required parameter 'galleryImageVersionName' when calling galleryImageVersionsGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryImageVersionsGet(Async)");
        }

        return galleryImageVersionsGetCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, $expand, _callback);

    }

    /**
     * 
     * Retrieves information about a gallery Image Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides. (required)
     * @param galleryImageVersionName The name of the gallery Image Version to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @param $expand The expand expression to apply on the operation. (optional)
     * @return GalleryImageVersion
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryImageVersion galleryImageVersionsGet(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, String $expand) throws ApiException {
        ApiResponse<GalleryImageVersion> localVarResp = galleryImageVersionsGetWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, $expand);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves information about a gallery Image Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides. (required)
     * @param galleryImageVersionName The name of the gallery Image Version to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @param $expand The expand expression to apply on the operation. (optional)
     * @return ApiResponse&lt;GalleryImageVersion&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryImageVersion> galleryImageVersionsGetWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, String $expand) throws ApiException {
        okhttp3.Call localVarCall = galleryImageVersionsGetValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, $expand, null);
        Type localVarReturnType = new TypeToken<GalleryImageVersion>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves information about a gallery Image Version.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides. (required)
     * @param galleryImageVersionName The name of the gallery Image Version to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @param $expand The expand expression to apply on the operation. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImageVersionsGetAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName, String apiVersion, String $expand, final ApiCallback<GalleryImageVersion> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryImageVersionsGetValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, apiVersion, $expand, _callback);
        Type localVarReturnType = new TypeToken<GalleryImageVersion>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryImageVersionsListByGalleryImage
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the Shared Image Gallery Image Definition from which the Image Versions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImageVersionsListByGalleryImageCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryImageName" + "}", localVarApiClient.escapeString(galleryImageName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryImageVersionsListByGalleryImageValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryImageVersionsListByGalleryImage(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryImageVersionsListByGalleryImage(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryImageVersionsListByGalleryImage(Async)");
        }

        // verify the required parameter 'galleryImageName' is set
        if (galleryImageName == null) {
            throw new ApiException("Missing the required parameter 'galleryImageName' when calling galleryImageVersionsListByGalleryImage(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryImageVersionsListByGalleryImage(Async)");
        }

        return galleryImageVersionsListByGalleryImageCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, _callback);

    }

    /**
     * 
     * List gallery Image Versions in a gallery Image Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the Shared Image Gallery Image Definition from which the Image Versions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @return GalleryImageVersionList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryImageVersionList galleryImageVersionsListByGalleryImage(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion) throws ApiException {
        ApiResponse<GalleryImageVersionList> localVarResp = galleryImageVersionsListByGalleryImageWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * List gallery Image Versions in a gallery Image Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the Shared Image Gallery Image Definition from which the Image Versions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;GalleryImageVersionList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryImageVersionList> galleryImageVersionsListByGalleryImageWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryImageVersionsListByGalleryImageValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, null);
        Type localVarReturnType = new TypeToken<GalleryImageVersionList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * List gallery Image Versions in a gallery Image Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides. (required)
     * @param galleryImageName The name of the Shared Image Gallery Image Definition from which the Image Versions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImageVersionsListByGalleryImageAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, final ApiCallback<GalleryImageVersionList> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryImageVersionsListByGalleryImageValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<GalleryImageVersionList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
