/*
 * SharedImageGalleryServiceClient
 * Shared Image Gallery Service Client.
 *
 * The version of the OpenAPI document: 2018-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CloudError;
import org.openapitools.client.model.GalleryImage;
import org.openapitools.client.model.GalleryImageList;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GalleryImagesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public GalleryImagesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public GalleryImagesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for galleryImagesCreateOrUpdate
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be created. (required)
     * @param galleryImageName The name of the gallery Image Definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters. (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryImage Parameters supplied to the create or update gallery image operation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImagesCreateOrUpdateCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, GalleryImage galleryImage, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = galleryImage;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryImageName" + "}", localVarApiClient.escapeString(galleryImageName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryImagesCreateOrUpdateValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, GalleryImage galleryImage, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryImagesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryImagesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryImagesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryImageName' is set
        if (galleryImageName == null) {
            throw new ApiException("Missing the required parameter 'galleryImageName' when calling galleryImagesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryImagesCreateOrUpdate(Async)");
        }

        // verify the required parameter 'galleryImage' is set
        if (galleryImage == null) {
            throw new ApiException("Missing the required parameter 'galleryImage' when calling galleryImagesCreateOrUpdate(Async)");
        }

        return galleryImagesCreateOrUpdateCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, galleryImage, _callback);

    }

    /**
     * 
     * Create or update a gallery Image Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be created. (required)
     * @param galleryImageName The name of the gallery Image Definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters. (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryImage Parameters supplied to the create or update gallery image operation. (required)
     * @return GalleryImage
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryImage galleryImagesCreateOrUpdate(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, GalleryImage galleryImage) throws ApiException {
        ApiResponse<GalleryImage> localVarResp = galleryImagesCreateOrUpdateWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, galleryImage);
        return localVarResp.getData();
    }

    /**
     * 
     * Create or update a gallery Image Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be created. (required)
     * @param galleryImageName The name of the gallery Image Definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters. (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryImage Parameters supplied to the create or update gallery image operation. (required)
     * @return ApiResponse&lt;GalleryImage&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryImage> galleryImagesCreateOrUpdateWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, GalleryImage galleryImage) throws ApiException {
        okhttp3.Call localVarCall = galleryImagesCreateOrUpdateValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, galleryImage, null);
        Type localVarReturnType = new TypeToken<GalleryImage>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create or update a gallery Image Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be created. (required)
     * @param galleryImageName The name of the gallery Image Definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters. (required)
     * @param apiVersion Client Api Version. (required)
     * @param galleryImage Parameters supplied to the create or update gallery image operation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImagesCreateOrUpdateAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, GalleryImage galleryImage, final ApiCallback<GalleryImage> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryImagesCreateOrUpdateValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, galleryImage, _callback);
        Type localVarReturnType = new TypeToken<GalleryImage>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryImagesDelete
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be deleted. (required)
     * @param galleryImageName The name of the gallery Image Definition to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImagesDeleteCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryImageName" + "}", localVarApiClient.escapeString(galleryImageName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryImagesDeleteValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryImagesDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryImagesDelete(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryImagesDelete(Async)");
        }

        // verify the required parameter 'galleryImageName' is set
        if (galleryImageName == null) {
            throw new ApiException("Missing the required parameter 'galleryImageName' when calling galleryImagesDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryImagesDelete(Async)");
        }

        return galleryImagesDeleteCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, _callback);

    }

    /**
     * 
     * Delete a gallery image.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be deleted. (required)
     * @param galleryImageName The name of the gallery Image Definition to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public void galleryImagesDelete(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion) throws ApiException {
        galleryImagesDeleteWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion);
    }

    /**
     * 
     * Delete a gallery image.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be deleted. (required)
     * @param galleryImageName The name of the gallery Image Definition to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> galleryImagesDeleteWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryImagesDeleteValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Delete a gallery image.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be deleted. (required)
     * @param galleryImageName The name of the gallery Image Definition to be deleted. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 202 </td><td> Accepted </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImagesDeleteAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryImagesDeleteValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryImagesGet
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery from which the Image Definitions are to be retrieved. (required)
     * @param galleryImageName The name of the gallery Image Definition to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImagesGetCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()))
            .replace("{" + "galleryImageName" + "}", localVarApiClient.escapeString(galleryImageName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryImagesGetValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryImagesGet(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryImagesGet(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryImagesGet(Async)");
        }

        // verify the required parameter 'galleryImageName' is set
        if (galleryImageName == null) {
            throw new ApiException("Missing the required parameter 'galleryImageName' when calling galleryImagesGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryImagesGet(Async)");
        }

        return galleryImagesGetCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, _callback);

    }

    /**
     * 
     * Retrieves information about a gallery Image Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery from which the Image Definitions are to be retrieved. (required)
     * @param galleryImageName The name of the gallery Image Definition to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @return GalleryImage
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryImage galleryImagesGet(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion) throws ApiException {
        ApiResponse<GalleryImage> localVarResp = galleryImagesGetWithHttpInfo(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves information about a gallery Image Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery from which the Image Definitions are to be retrieved. (required)
     * @param galleryImageName The name of the gallery Image Definition to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;GalleryImage&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryImage> galleryImagesGetWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryImagesGetValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, null);
        Type localVarReturnType = new TypeToken<GalleryImage>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves information about a gallery Image Definition.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery from which the Image Definitions are to be retrieved. (required)
     * @param galleryImageName The name of the gallery Image Definition to be retrieved. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImagesGetAsync(String subscriptionId, String resourceGroupName, String galleryName, String galleryImageName, String apiVersion, final ApiCallback<GalleryImage> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryImagesGetValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, galleryImageName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<GalleryImage>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for galleryImagesListByGallery
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery from which Image Definitions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImagesListByGalleryCall(String subscriptionId, String resourceGroupName, String galleryName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "galleryName" + "}", localVarApiClient.escapeString(galleryName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "azure_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call galleryImagesListByGalleryValidateBeforeCall(String subscriptionId, String resourceGroupName, String galleryName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling galleryImagesListByGallery(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling galleryImagesListByGallery(Async)");
        }

        // verify the required parameter 'galleryName' is set
        if (galleryName == null) {
            throw new ApiException("Missing the required parameter 'galleryName' when calling galleryImagesListByGallery(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling galleryImagesListByGallery(Async)");
        }

        return galleryImagesListByGalleryCall(subscriptionId, resourceGroupName, galleryName, apiVersion, _callback);

    }

    /**
     * 
     * List gallery Image Definitions in a gallery.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery from which Image Definitions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @return GalleryImageList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public GalleryImageList galleryImagesListByGallery(String subscriptionId, String resourceGroupName, String galleryName, String apiVersion) throws ApiException {
        ApiResponse<GalleryImageList> localVarResp = galleryImagesListByGalleryWithHttpInfo(subscriptionId, resourceGroupName, galleryName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * List gallery Image Definitions in a gallery.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery from which Image Definitions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;GalleryImageList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GalleryImageList> galleryImagesListByGalleryWithHttpInfo(String subscriptionId, String resourceGroupName, String galleryName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = galleryImagesListByGalleryValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, apiVersion, null);
        Type localVarReturnType = new TypeToken<GalleryImageList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * List gallery Image Definitions in a gallery.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName The name of the resource group. (required)
     * @param galleryName The name of the Shared Image Gallery from which Image Definitions are to be listed. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response describing why the operation failed. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call galleryImagesListByGalleryAsync(String subscriptionId, String resourceGroupName, String galleryName, String apiVersion, final ApiCallback<GalleryImageList> _callback) throws ApiException {

        okhttp3.Call localVarCall = galleryImagesListByGalleryValidateBeforeCall(subscriptionId, resourceGroupName, galleryName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<GalleryImageList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
