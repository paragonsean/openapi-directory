/**
 * HDInsightManagementClient
 * The HDInsight Management Client.
 *
 * The version of the OpenAPI document: 2018-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExtension.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExtension::OAIExtension(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExtension::OAIExtension() {
    this->initializeModel();
}

OAIExtension::~OAIExtension() {}

void OAIExtension::initializeModel() {

    m_primary_key_isSet = false;
    m_primary_key_isValid = false;

    m_workspace_id_isSet = false;
    m_workspace_id_isValid = false;
}

void OAIExtension::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExtension::fromJsonObject(QJsonObject json) {

    m_primary_key_isValid = ::OpenAPI::fromJsonValue(m_primary_key, json[QString("primaryKey")]);
    m_primary_key_isSet = !json[QString("primaryKey")].isNull() && m_primary_key_isValid;

    m_workspace_id_isValid = ::OpenAPI::fromJsonValue(m_workspace_id, json[QString("workspaceId")]);
    m_workspace_id_isSet = !json[QString("workspaceId")].isNull() && m_workspace_id_isValid;
}

QString OAIExtension::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExtension::asJsonObject() const {
    QJsonObject obj;
    if (m_primary_key_isSet) {
        obj.insert(QString("primaryKey"), ::OpenAPI::toJsonValue(m_primary_key));
    }
    if (m_workspace_id_isSet) {
        obj.insert(QString("workspaceId"), ::OpenAPI::toJsonValue(m_workspace_id));
    }
    return obj;
}

QString OAIExtension::getPrimaryKey() const {
    return m_primary_key;
}
void OAIExtension::setPrimaryKey(const QString &primary_key) {
    m_primary_key = primary_key;
    m_primary_key_isSet = true;
}

bool OAIExtension::is_primary_key_Set() const{
    return m_primary_key_isSet;
}

bool OAIExtension::is_primary_key_Valid() const{
    return m_primary_key_isValid;
}

QString OAIExtension::getWorkspaceId() const {
    return m_workspace_id;
}
void OAIExtension::setWorkspaceId(const QString &workspace_id) {
    m_workspace_id = workspace_id;
    m_workspace_id_isSet = true;
}

bool OAIExtension::is_workspace_id_Set() const{
    return m_workspace_id_isSet;
}

bool OAIExtension::is_workspace_id_Valid() const{
    return m_workspace_id_isValid;
}

bool OAIExtension::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_primary_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_workspace_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExtension::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
