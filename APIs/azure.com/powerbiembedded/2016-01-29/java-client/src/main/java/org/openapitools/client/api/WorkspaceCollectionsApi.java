/*
 * Power BI Embedded Management Client
 * Client to manage your Power BI Embedded workspace collections and retrieve workspaces.
 *
 * The version of the OpenAPI document: 2016-01-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CheckNameRequest;
import org.openapitools.client.model.CheckNameResponse;
import org.openapitools.client.model.CreateWorkspaceCollectionRequest;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.MigrateWorkspaceCollectionRequest;
import org.openapitools.client.model.UpdateWorkspaceCollectionRequest;
import org.openapitools.client.model.WorkspaceCollection;
import org.openapitools.client.model.WorkspaceCollectionAccessKey;
import org.openapitools.client.model.WorkspaceCollectionAccessKeys;
import org.openapitools.client.model.WorkspaceCollectionList;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class WorkspaceCollectionsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public WorkspaceCollectionsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public WorkspaceCollectionsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for workspaceCollectionsCheckNameAvailability
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param location Azure location (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Check name availability request (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsCheckNameAvailabilityCall(String subscriptionId, String location, String apiVersion, CheckNameRequest body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.PowerBI/locations/{location}/checkNameAvailability"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "location" + "}", localVarApiClient.escapeString(location.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspaceCollectionsCheckNameAvailabilityValidateBeforeCall(String subscriptionId, String location, String apiVersion, CheckNameRequest body, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsCheckNameAvailability(Async)");
        }

        // verify the required parameter 'location' is set
        if (location == null) {
            throw new ApiException("Missing the required parameter 'location' when calling workspaceCollectionsCheckNameAvailability(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspaceCollectionsCheckNameAvailability(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling workspaceCollectionsCheckNameAvailability(Async)");
        }

        return workspaceCollectionsCheckNameAvailabilityCall(subscriptionId, location, apiVersion, body, _callback);

    }

    /**
     * 
     * Verify the specified Power BI Workspace Collection name is valid and not already in use.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param location Azure location (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Check name availability request (required)
     * @return CheckNameResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public CheckNameResponse workspaceCollectionsCheckNameAvailability(String subscriptionId, String location, String apiVersion, CheckNameRequest body) throws ApiException {
        ApiResponse<CheckNameResponse> localVarResp = workspaceCollectionsCheckNameAvailabilityWithHttpInfo(subscriptionId, location, apiVersion, body);
        return localVarResp.getData();
    }

    /**
     * 
     * Verify the specified Power BI Workspace Collection name is valid and not already in use.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param location Azure location (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Check name availability request (required)
     * @return ApiResponse&lt;CheckNameResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CheckNameResponse> workspaceCollectionsCheckNameAvailabilityWithHttpInfo(String subscriptionId, String location, String apiVersion, CheckNameRequest body) throws ApiException {
        okhttp3.Call localVarCall = workspaceCollectionsCheckNameAvailabilityValidateBeforeCall(subscriptionId, location, apiVersion, body, null);
        Type localVarReturnType = new TypeToken<CheckNameResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Verify the specified Power BI Workspace Collection name is valid and not already in use.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param location Azure location (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Check name availability request (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Request completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsCheckNameAvailabilityAsync(String subscriptionId, String location, String apiVersion, CheckNameRequest body, final ApiCallback<CheckNameResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspaceCollectionsCheckNameAvailabilityValidateBeforeCall(subscriptionId, location, apiVersion, body, _callback);
        Type localVarReturnType = new TypeToken<CheckNameResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspaceCollectionsCreate
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Create workspace collection request (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Workspace collection created successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsCreateCall(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, CreateWorkspaceCollectionRequest body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceCollectionName" + "}", localVarApiClient.escapeString(workspaceCollectionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspaceCollectionsCreateValidateBeforeCall(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, CreateWorkspaceCollectionRequest body, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsCreate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsCreate(Async)");
        }

        // verify the required parameter 'workspaceCollectionName' is set
        if (workspaceCollectionName == null) {
            throw new ApiException("Missing the required parameter 'workspaceCollectionName' when calling workspaceCollectionsCreate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspaceCollectionsCreate(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling workspaceCollectionsCreate(Async)");
        }

        return workspaceCollectionsCreateCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body, _callback);

    }

    /**
     * 
     * Creates a new Power BI Workspace Collection with the specified properties. A Power BI Workspace Collection contains one or more workspaces, and can be used to provision keys that provide API access to those workspaces.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Create workspace collection request (required)
     * @return WorkspaceCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Workspace collection created successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public WorkspaceCollection workspaceCollectionsCreate(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, CreateWorkspaceCollectionRequest body) throws ApiException {
        ApiResponse<WorkspaceCollection> localVarResp = workspaceCollectionsCreateWithHttpInfo(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates a new Power BI Workspace Collection with the specified properties. A Power BI Workspace Collection contains one or more workspaces, and can be used to provision keys that provide API access to those workspaces.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Create workspace collection request (required)
     * @return ApiResponse&lt;WorkspaceCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Workspace collection created successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkspaceCollection> workspaceCollectionsCreateWithHttpInfo(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, CreateWorkspaceCollectionRequest body) throws ApiException {
        okhttp3.Call localVarCall = workspaceCollectionsCreateValidateBeforeCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body, null);
        Type localVarReturnType = new TypeToken<WorkspaceCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates a new Power BI Workspace Collection with the specified properties. A Power BI Workspace Collection contains one or more workspaces, and can be used to provision keys that provide API access to those workspaces.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Create workspace collection request (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Workspace collection created successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsCreateAsync(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, CreateWorkspaceCollectionRequest body, final ApiCallback<WorkspaceCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspaceCollectionsCreateValidateBeforeCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body, _callback);
        Type localVarReturnType = new TypeToken<WorkspaceCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspaceCollectionsDelete
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Workspace collection deleted successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsDeleteCall(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceCollectionName" + "}", localVarApiClient.escapeString(workspaceCollectionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspaceCollectionsDeleteValidateBeforeCall(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsDelete(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsDelete(Async)");
        }

        // verify the required parameter 'workspaceCollectionName' is set
        if (workspaceCollectionName == null) {
            throw new ApiException("Missing the required parameter 'workspaceCollectionName' when calling workspaceCollectionsDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspaceCollectionsDelete(Async)");
        }

        return workspaceCollectionsDeleteCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, _callback);

    }

    /**
     * 
     * Delete a Power BI Workspace Collection.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Workspace collection deleted successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public void workspaceCollectionsDelete(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion) throws ApiException {
        workspaceCollectionsDeleteWithHttpInfo(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion);
    }

    /**
     * 
     * Delete a Power BI Workspace Collection.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Workspace collection deleted successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> workspaceCollectionsDeleteWithHttpInfo(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = workspaceCollectionsDeleteValidateBeforeCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Delete a Power BI Workspace Collection.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Workspace collection deleted successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsDeleteAsync(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspaceCollectionsDeleteValidateBeforeCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspaceCollectionsGetAccessKeys
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get access keys completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsGetAccessKeysCall(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}/listKeys"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceCollectionName" + "}", localVarApiClient.escapeString(workspaceCollectionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspaceCollectionsGetAccessKeysValidateBeforeCall(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsGetAccessKeys(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsGetAccessKeys(Async)");
        }

        // verify the required parameter 'workspaceCollectionName' is set
        if (workspaceCollectionName == null) {
            throw new ApiException("Missing the required parameter 'workspaceCollectionName' when calling workspaceCollectionsGetAccessKeys(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspaceCollectionsGetAccessKeys(Async)");
        }

        return workspaceCollectionsGetAccessKeysCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, _callback);

    }

    /**
     * 
     * Retrieves the primary and secondary access keys for the specified Power BI Workspace Collection.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @return WorkspaceCollectionAccessKeys
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get access keys completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public WorkspaceCollectionAccessKeys workspaceCollectionsGetAccessKeys(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion) throws ApiException {
        ApiResponse<WorkspaceCollectionAccessKeys> localVarResp = workspaceCollectionsGetAccessKeysWithHttpInfo(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves the primary and secondary access keys for the specified Power BI Workspace Collection.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;WorkspaceCollectionAccessKeys&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get access keys completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkspaceCollectionAccessKeys> workspaceCollectionsGetAccessKeysWithHttpInfo(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = workspaceCollectionsGetAccessKeysValidateBeforeCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, null);
        Type localVarReturnType = new TypeToken<WorkspaceCollectionAccessKeys>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves the primary and secondary access keys for the specified Power BI Workspace Collection.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get access keys completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsGetAccessKeysAsync(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, final ApiCallback<WorkspaceCollectionAccessKeys> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspaceCollectionsGetAccessKeysValidateBeforeCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<WorkspaceCollectionAccessKeys>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspaceCollectionsGetByName
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Workspace collection created successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsGetByNameCall(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceCollectionName" + "}", localVarApiClient.escapeString(workspaceCollectionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspaceCollectionsGetByNameValidateBeforeCall(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsGetByName(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsGetByName(Async)");
        }

        // verify the required parameter 'workspaceCollectionName' is set
        if (workspaceCollectionName == null) {
            throw new ApiException("Missing the required parameter 'workspaceCollectionName' when calling workspaceCollectionsGetByName(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspaceCollectionsGetByName(Async)");
        }

        return workspaceCollectionsGetByNameCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, _callback);

    }

    /**
     * 
     * Retrieves an existing Power BI Workspace Collection.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @return WorkspaceCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Workspace collection created successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public WorkspaceCollection workspaceCollectionsGetByName(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion) throws ApiException {
        ApiResponse<WorkspaceCollection> localVarResp = workspaceCollectionsGetByNameWithHttpInfo(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves an existing Power BI Workspace Collection.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;WorkspaceCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Workspace collection created successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkspaceCollection> workspaceCollectionsGetByNameWithHttpInfo(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = workspaceCollectionsGetByNameValidateBeforeCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, null);
        Type localVarReturnType = new TypeToken<WorkspaceCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves an existing Power BI Workspace Collection.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Workspace collection created successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsGetByNameAsync(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, final ApiCallback<WorkspaceCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspaceCollectionsGetByNameValidateBeforeCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<WorkspaceCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspaceCollectionsListByResourceGroup
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get workspaces response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsListByResourceGroupCall(String subscriptionId, String resourceGroupName, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspaceCollectionsListByResourceGroupValidateBeforeCall(String subscriptionId, String resourceGroupName, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsListByResourceGroup(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsListByResourceGroup(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspaceCollectionsListByResourceGroup(Async)");
        }

        return workspaceCollectionsListByResourceGroupCall(subscriptionId, resourceGroupName, apiVersion, _callback);

    }

    /**
     * 
     * Retrieves all existing Power BI workspace collections in the specified resource group.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param apiVersion Client Api Version. (required)
     * @return WorkspaceCollectionList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get workspaces response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public WorkspaceCollectionList workspaceCollectionsListByResourceGroup(String subscriptionId, String resourceGroupName, String apiVersion) throws ApiException {
        ApiResponse<WorkspaceCollectionList> localVarResp = workspaceCollectionsListByResourceGroupWithHttpInfo(subscriptionId, resourceGroupName, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves all existing Power BI workspace collections in the specified resource group.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;WorkspaceCollectionList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get workspaces response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkspaceCollectionList> workspaceCollectionsListByResourceGroupWithHttpInfo(String subscriptionId, String resourceGroupName, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = workspaceCollectionsListByResourceGroupValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, null);
        Type localVarReturnType = new TypeToken<WorkspaceCollectionList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves all existing Power BI workspace collections in the specified resource group.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get workspaces response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsListByResourceGroupAsync(String subscriptionId, String resourceGroupName, String apiVersion, final ApiCallback<WorkspaceCollectionList> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspaceCollectionsListByResourceGroupValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<WorkspaceCollectionList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspaceCollectionsListBySubscription
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get workspaces response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsListBySubscriptionCall(String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/providers/Microsoft.PowerBI/workspaceCollections"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspaceCollectionsListBySubscriptionValidateBeforeCall(String subscriptionId, String apiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsListBySubscription(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspaceCollectionsListBySubscription(Async)");
        }

        return workspaceCollectionsListBySubscriptionCall(subscriptionId, apiVersion, _callback);

    }

    /**
     * 
     * Retrieves all existing Power BI workspace collections in the specified subscription.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @return WorkspaceCollectionList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get workspaces response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public WorkspaceCollectionList workspaceCollectionsListBySubscription(String subscriptionId, String apiVersion) throws ApiException {
        ApiResponse<WorkspaceCollectionList> localVarResp = workspaceCollectionsListBySubscriptionWithHttpInfo(subscriptionId, apiVersion);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves all existing Power BI workspace collections in the specified subscription.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @return ApiResponse&lt;WorkspaceCollectionList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get workspaces response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkspaceCollectionList> workspaceCollectionsListBySubscriptionWithHttpInfo(String subscriptionId, String apiVersion) throws ApiException {
        okhttp3.Call localVarCall = workspaceCollectionsListBySubscriptionValidateBeforeCall(subscriptionId, apiVersion, null);
        Type localVarReturnType = new TypeToken<WorkspaceCollectionList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves all existing Power BI workspace collections in the specified subscription.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param apiVersion Client Api Version. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get workspaces response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsListBySubscriptionAsync(String subscriptionId, String apiVersion, final ApiCallback<WorkspaceCollectionList> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspaceCollectionsListBySubscriptionValidateBeforeCall(subscriptionId, apiVersion, _callback);
        Type localVarReturnType = new TypeToken<WorkspaceCollectionList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspaceCollectionsMigrate
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Workspace migration request (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Migration completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsMigrateCall(String subscriptionId, String resourceGroupName, String apiVersion, MigrateWorkspaceCollectionRequest body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspaceCollectionsMigrateValidateBeforeCall(String subscriptionId, String resourceGroupName, String apiVersion, MigrateWorkspaceCollectionRequest body, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsMigrate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsMigrate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspaceCollectionsMigrate(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling workspaceCollectionsMigrate(Async)");
        }

        return workspaceCollectionsMigrateCall(subscriptionId, resourceGroupName, apiVersion, body, _callback);

    }

    /**
     * 
     * Migrates an existing Power BI Workspace Collection to a different resource group and/or subscription.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Workspace migration request (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Migration completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public void workspaceCollectionsMigrate(String subscriptionId, String resourceGroupName, String apiVersion, MigrateWorkspaceCollectionRequest body) throws ApiException {
        workspaceCollectionsMigrateWithHttpInfo(subscriptionId, resourceGroupName, apiVersion, body);
    }

    /**
     * 
     * Migrates an existing Power BI Workspace Collection to a different resource group and/or subscription.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Workspace migration request (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Migration completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> workspaceCollectionsMigrateWithHttpInfo(String subscriptionId, String resourceGroupName, String apiVersion, MigrateWorkspaceCollectionRequest body) throws ApiException {
        okhttp3.Call localVarCall = workspaceCollectionsMigrateValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, body, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Migrates an existing Power BI Workspace Collection to a different resource group and/or subscription.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Workspace migration request (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Migration completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsMigrateAsync(String subscriptionId, String resourceGroupName, String apiVersion, MigrateWorkspaceCollectionRequest body, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspaceCollectionsMigrateValidateBeforeCall(subscriptionId, resourceGroupName, apiVersion, body, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspaceCollectionsRegenerateKey
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Access key to regenerate (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get access keys completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsRegenerateKeyCall(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, WorkspaceCollectionAccessKey body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}/regenerateKey"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceCollectionName" + "}", localVarApiClient.escapeString(workspaceCollectionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspaceCollectionsRegenerateKeyValidateBeforeCall(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, WorkspaceCollectionAccessKey body, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsRegenerateKey(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsRegenerateKey(Async)");
        }

        // verify the required parameter 'workspaceCollectionName' is set
        if (workspaceCollectionName == null) {
            throw new ApiException("Missing the required parameter 'workspaceCollectionName' when calling workspaceCollectionsRegenerateKey(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspaceCollectionsRegenerateKey(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling workspaceCollectionsRegenerateKey(Async)");
        }

        return workspaceCollectionsRegenerateKeyCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body, _callback);

    }

    /**
     * 
     * Regenerates the primary or secondary access key for the specified Power BI Workspace Collection.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Access key to regenerate (required)
     * @return WorkspaceCollectionAccessKeys
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get access keys completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public WorkspaceCollectionAccessKeys workspaceCollectionsRegenerateKey(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, WorkspaceCollectionAccessKey body) throws ApiException {
        ApiResponse<WorkspaceCollectionAccessKeys> localVarResp = workspaceCollectionsRegenerateKeyWithHttpInfo(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body);
        return localVarResp.getData();
    }

    /**
     * 
     * Regenerates the primary or secondary access key for the specified Power BI Workspace Collection.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Access key to regenerate (required)
     * @return ApiResponse&lt;WorkspaceCollectionAccessKeys&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get access keys completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkspaceCollectionAccessKeys> workspaceCollectionsRegenerateKeyWithHttpInfo(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, WorkspaceCollectionAccessKey body) throws ApiException {
        okhttp3.Call localVarCall = workspaceCollectionsRegenerateKeyValidateBeforeCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body, null);
        Type localVarReturnType = new TypeToken<WorkspaceCollectionAccessKeys>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Regenerates the primary or secondary access key for the specified Power BI Workspace Collection.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Access key to regenerate (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Get access keys completed successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsRegenerateKeyAsync(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, WorkspaceCollectionAccessKey body, final ApiCallback<WorkspaceCollectionAccessKeys> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspaceCollectionsRegenerateKeyValidateBeforeCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body, _callback);
        Type localVarReturnType = new TypeToken<WorkspaceCollectionAccessKeys>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workspaceCollectionsUpdate
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Update workspace collection request (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Workspace collection updated successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsUpdateCall(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, UpdateWorkspaceCollectionRequest body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}"
            .replace("{" + "subscriptionId" + "}", localVarApiClient.escapeString(subscriptionId.toString()))
            .replace("{" + "resourceGroupName" + "}", localVarApiClient.escapeString(resourceGroupName.toString()))
            .replace("{" + "workspaceCollectionName" + "}", localVarApiClient.escapeString(workspaceCollectionName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workspaceCollectionsUpdateValidateBeforeCall(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, UpdateWorkspaceCollectionRequest body, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'subscriptionId' is set
        if (subscriptionId == null) {
            throw new ApiException("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsUpdate(Async)");
        }

        // verify the required parameter 'resourceGroupName' is set
        if (resourceGroupName == null) {
            throw new ApiException("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsUpdate(Async)");
        }

        // verify the required parameter 'workspaceCollectionName' is set
        if (workspaceCollectionName == null) {
            throw new ApiException("Missing the required parameter 'workspaceCollectionName' when calling workspaceCollectionsUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workspaceCollectionsUpdate(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling workspaceCollectionsUpdate(Async)");
        }

        return workspaceCollectionsUpdateCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body, _callback);

    }

    /**
     * 
     * Update an existing Power BI Workspace Collection with the specified properties.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Update workspace collection request (required)
     * @return WorkspaceCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Workspace collection updated successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public WorkspaceCollection workspaceCollectionsUpdate(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, UpdateWorkspaceCollectionRequest body) throws ApiException {
        ApiResponse<WorkspaceCollection> localVarResp = workspaceCollectionsUpdateWithHttpInfo(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body);
        return localVarResp.getData();
    }

    /**
     * 
     * Update an existing Power BI Workspace Collection with the specified properties.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Update workspace collection request (required)
     * @return ApiResponse&lt;WorkspaceCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Workspace collection updated successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkspaceCollection> workspaceCollectionsUpdateWithHttpInfo(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, UpdateWorkspaceCollectionRequest body) throws ApiException {
        okhttp3.Call localVarCall = workspaceCollectionsUpdateValidateBeforeCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body, null);
        Type localVarReturnType = new TypeToken<WorkspaceCollection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update an existing Power BI Workspace Collection with the specified properties.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
     * @param resourceGroupName Azure resource group (required)
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name (required)
     * @param apiVersion Client Api Version. (required)
     * @param body Update workspace collection request (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Workspace collection updated successfully </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workspaceCollectionsUpdateAsync(String subscriptionId, String resourceGroupName, String workspaceCollectionName, String apiVersion, UpdateWorkspaceCollectionRequest body, final ApiCallback<WorkspaceCollection> _callback) throws ApiException {

        okhttp3.Call localVarCall = workspaceCollectionsUpdateValidateBeforeCall(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body, _callback);
        Type localVarReturnType = new TypeToken<WorkspaceCollection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
