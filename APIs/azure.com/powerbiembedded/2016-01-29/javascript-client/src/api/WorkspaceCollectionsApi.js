/**
 * Power BI Embedded Management Client
 * Client to manage your Power BI Embedded workspace collections and retrieve workspaces.
 *
 * The version of the OpenAPI document: 2016-01-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CheckNameRequest from '../model/CheckNameRequest';
import CheckNameResponse from '../model/CheckNameResponse';
import CreateWorkspaceCollectionRequest from '../model/CreateWorkspaceCollectionRequest';
import Error from '../model/Error';
import MigrateWorkspaceCollectionRequest from '../model/MigrateWorkspaceCollectionRequest';
import UpdateWorkspaceCollectionRequest from '../model/UpdateWorkspaceCollectionRequest';
import WorkspaceCollection from '../model/WorkspaceCollection';
import WorkspaceCollectionAccessKey from '../model/WorkspaceCollectionAccessKey';
import WorkspaceCollectionAccessKeys from '../model/WorkspaceCollectionAccessKeys';
import WorkspaceCollectionList from '../model/WorkspaceCollectionList';

/**
* WorkspaceCollections service.
* @module api/WorkspaceCollectionsApi
* @version 2016-01-29
*/
export default class WorkspaceCollectionsApi {

    /**
    * Constructs a new WorkspaceCollectionsApi. 
    * @alias module:api/WorkspaceCollectionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the workspaceCollectionsCheckNameAvailability operation.
     * @callback module:api/WorkspaceCollectionsApi~workspaceCollectionsCheckNameAvailabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CheckNameResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verify the specified Power BI Workspace Collection name is valid and not already in use.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} location Azure location
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/CheckNameRequest} body Check name availability request
     * @param {module:api/WorkspaceCollectionsApi~workspaceCollectionsCheckNameAvailabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CheckNameResponse}
     */
    workspaceCollectionsCheckNameAvailability(subscriptionId, location, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsCheckNameAvailability");
      }
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling workspaceCollectionsCheckNameAvailability");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspaceCollectionsCheckNameAvailability");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling workspaceCollectionsCheckNameAvailability");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'location': location
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CheckNameResponse;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.PowerBI/locations/{location}/checkNameAvailability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspaceCollectionsCreate operation.
     * @callback module:api/WorkspaceCollectionsApi~workspaceCollectionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkspaceCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new Power BI Workspace Collection with the specified properties. A Power BI Workspace Collection contains one or more workspaces, and can be used to provision keys that provide API access to those workspaces.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Azure resource group
     * @param {String} workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/CreateWorkspaceCollectionRequest} body Create workspace collection request
     * @param {module:api/WorkspaceCollectionsApi~workspaceCollectionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkspaceCollection}
     */
    workspaceCollectionsCreate(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsCreate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsCreate");
      }
      // verify the required parameter 'workspaceCollectionName' is set
      if (workspaceCollectionName === undefined || workspaceCollectionName === null) {
        throw new Error("Missing the required parameter 'workspaceCollectionName' when calling workspaceCollectionsCreate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspaceCollectionsCreate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling workspaceCollectionsCreate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceCollectionName': workspaceCollectionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WorkspaceCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspaceCollectionsDelete operation.
     * @callback module:api/WorkspaceCollectionsApi~workspaceCollectionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a Power BI Workspace Collection.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Azure resource group
     * @param {String} workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/WorkspaceCollectionsApi~workspaceCollectionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    workspaceCollectionsDelete(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsDelete");
      }
      // verify the required parameter 'workspaceCollectionName' is set
      if (workspaceCollectionName === undefined || workspaceCollectionName === null) {
        throw new Error("Missing the required parameter 'workspaceCollectionName' when calling workspaceCollectionsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspaceCollectionsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceCollectionName': workspaceCollectionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspaceCollectionsGetAccessKeys operation.
     * @callback module:api/WorkspaceCollectionsApi~workspaceCollectionsGetAccessKeysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkspaceCollectionAccessKeys} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the primary and secondary access keys for the specified Power BI Workspace Collection.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Azure resource group
     * @param {String} workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/WorkspaceCollectionsApi~workspaceCollectionsGetAccessKeysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkspaceCollectionAccessKeys}
     */
    workspaceCollectionsGetAccessKeys(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsGetAccessKeys");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsGetAccessKeys");
      }
      // verify the required parameter 'workspaceCollectionName' is set
      if (workspaceCollectionName === undefined || workspaceCollectionName === null) {
        throw new Error("Missing the required parameter 'workspaceCollectionName' when calling workspaceCollectionsGetAccessKeys");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspaceCollectionsGetAccessKeys");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceCollectionName': workspaceCollectionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkspaceCollectionAccessKeys;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}/listKeys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspaceCollectionsGetByName operation.
     * @callback module:api/WorkspaceCollectionsApi~workspaceCollectionsGetByNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkspaceCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves an existing Power BI Workspace Collection.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Azure resource group
     * @param {String} workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/WorkspaceCollectionsApi~workspaceCollectionsGetByNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkspaceCollection}
     */
    workspaceCollectionsGetByName(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsGetByName");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsGetByName");
      }
      // verify the required parameter 'workspaceCollectionName' is set
      if (workspaceCollectionName === undefined || workspaceCollectionName === null) {
        throw new Error("Missing the required parameter 'workspaceCollectionName' when calling workspaceCollectionsGetByName");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspaceCollectionsGetByName");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceCollectionName': workspaceCollectionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkspaceCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspaceCollectionsListByResourceGroup operation.
     * @callback module:api/WorkspaceCollectionsApi~workspaceCollectionsListByResourceGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkspaceCollectionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves all existing Power BI workspace collections in the specified resource group.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Azure resource group
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/WorkspaceCollectionsApi~workspaceCollectionsListByResourceGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkspaceCollectionList}
     */
    workspaceCollectionsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsListByResourceGroup");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsListByResourceGroup");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspaceCollectionsListByResourceGroup");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkspaceCollectionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspaceCollectionsListBySubscription operation.
     * @callback module:api/WorkspaceCollectionsApi~workspaceCollectionsListBySubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkspaceCollectionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves all existing Power BI workspace collections in the specified subscription.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} apiVersion Client Api Version.
     * @param {module:api/WorkspaceCollectionsApi~workspaceCollectionsListBySubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkspaceCollectionList}
     */
    workspaceCollectionsListBySubscription(subscriptionId, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsListBySubscription");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspaceCollectionsListBySubscription");
      }

      let pathParams = {
        'subscriptionId': subscriptionId
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkspaceCollectionList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/providers/Microsoft.PowerBI/workspaceCollections', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspaceCollectionsMigrate operation.
     * @callback module:api/WorkspaceCollectionsApi~workspaceCollectionsMigrateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Migrates an existing Power BI Workspace Collection to a different resource group and/or subscription.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Azure resource group
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/MigrateWorkspaceCollectionRequest} body Workspace migration request
     * @param {module:api/WorkspaceCollectionsApi~workspaceCollectionsMigrateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    workspaceCollectionsMigrate(subscriptionId, resourceGroupName, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsMigrate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsMigrate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspaceCollectionsMigrate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling workspaceCollectionsMigrate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspaceCollectionsRegenerateKey operation.
     * @callback module:api/WorkspaceCollectionsApi~workspaceCollectionsRegenerateKeyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkspaceCollectionAccessKeys} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Regenerates the primary or secondary access key for the specified Power BI Workspace Collection.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Azure resource group
     * @param {String} workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/WorkspaceCollectionAccessKey} body Access key to regenerate
     * @param {module:api/WorkspaceCollectionsApi~workspaceCollectionsRegenerateKeyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkspaceCollectionAccessKeys}
     */
    workspaceCollectionsRegenerateKey(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsRegenerateKey");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsRegenerateKey");
      }
      // verify the required parameter 'workspaceCollectionName' is set
      if (workspaceCollectionName === undefined || workspaceCollectionName === null) {
        throw new Error("Missing the required parameter 'workspaceCollectionName' when calling workspaceCollectionsRegenerateKey");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspaceCollectionsRegenerateKey");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling workspaceCollectionsRegenerateKey");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceCollectionName': workspaceCollectionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WorkspaceCollectionAccessKeys;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}/regenerateKey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the workspaceCollectionsUpdate operation.
     * @callback module:api/WorkspaceCollectionsApi~workspaceCollectionsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkspaceCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an existing Power BI Workspace Collection with the specified properties.
     * @param {String} subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     * @param {String} resourceGroupName Azure resource group
     * @param {String} workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param {String} apiVersion Client Api Version.
     * @param {module:model/UpdateWorkspaceCollectionRequest} body Update workspace collection request
     * @param {module:api/WorkspaceCollectionsApi~workspaceCollectionsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkspaceCollection}
     */
    workspaceCollectionsUpdate(subscriptionId, resourceGroupName, workspaceCollectionName, apiVersion, body, callback) {
      let postBody = body;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling workspaceCollectionsUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling workspaceCollectionsUpdate");
      }
      // verify the required parameter 'workspaceCollectionName' is set
      if (workspaceCollectionName === undefined || workspaceCollectionName === null) {
        throw new Error("Missing the required parameter 'workspaceCollectionName' when calling workspaceCollectionsUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling workspaceCollectionsUpdate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling workspaceCollectionsUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'workspaceCollectionName': workspaceCollectionName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WorkspaceCollection;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
