/**
 * Power BI Embedded Management Client
 * Client to manage your Power BI Embedded workspace collections and retrieve workspaces.
 *
 * The version of the OpenAPI document: 2016-01-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CheckNameResponse model module.
 * @module model/CheckNameResponse
 * @version 2016-01-29
 */
class CheckNameResponse {
    /**
     * Constructs a new <code>CheckNameResponse</code>.
     * @alias module:model/CheckNameResponse
     */
    constructor() { 
        
        CheckNameResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CheckNameResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckNameResponse} obj Optional instance to populate.
     * @return {module:model/CheckNameResponse} The populated <code>CheckNameResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckNameResponse();

            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('nameAvailable')) {
                obj['nameAvailable'] = ApiClient.convertToType(data['nameAvailable'], 'Boolean');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckNameResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckNameResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }

        return true;
    }


}



/**
 * Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated.
 * @member {String} message
 */
CheckNameResponse.prototype['message'] = undefined;

/**
 * Specifies a Boolean value that indicates whether the specified Power BI Workspace Collection name is available to use.
 * @member {Boolean} nameAvailable
 */
CheckNameResponse.prototype['nameAvailable'] = undefined;

/**
 * Reason why the workspace collection name cannot be used.
 * @member {module:model/CheckNameResponse.ReasonEnum} reason
 */
CheckNameResponse.prototype['reason'] = undefined;





/**
 * Allowed values for the <code>reason</code> property.
 * @enum {String}
 * @readonly
 */
CheckNameResponse['ReasonEnum'] = {

    /**
     * value: "Unavailable"
     * @const
     */
    "Unavailable": "Unavailable",

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid"
};



export default CheckNameResponse;

