/**
 * Power BI Embedded Management Client
 * Client to manage your Power BI Embedded workspace collections and retrieve workspaces.
 *
 * The version of the OpenAPI document: 2016-01-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PowerBiEmbeddedManagementClient);
  }
}(this, function(expect, PowerBiEmbeddedManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PowerBiEmbeddedManagementClient.WorkspaceCollectionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WorkspaceCollectionsApi', function() {
    describe('workspaceCollectionsCheckNameAvailability', function() {
      it('should call workspaceCollectionsCheckNameAvailability successfully', function(done) {
        //uncomment below and update the code to test workspaceCollectionsCheckNameAvailability
        //instance.workspaceCollectionsCheckNameAvailability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workspaceCollectionsCreate', function() {
      it('should call workspaceCollectionsCreate successfully', function(done) {
        //uncomment below and update the code to test workspaceCollectionsCreate
        //instance.workspaceCollectionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workspaceCollectionsDelete', function() {
      it('should call workspaceCollectionsDelete successfully', function(done) {
        //uncomment below and update the code to test workspaceCollectionsDelete
        //instance.workspaceCollectionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workspaceCollectionsGetAccessKeys', function() {
      it('should call workspaceCollectionsGetAccessKeys successfully', function(done) {
        //uncomment below and update the code to test workspaceCollectionsGetAccessKeys
        //instance.workspaceCollectionsGetAccessKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workspaceCollectionsGetByName', function() {
      it('should call workspaceCollectionsGetByName successfully', function(done) {
        //uncomment below and update the code to test workspaceCollectionsGetByName
        //instance.workspaceCollectionsGetByName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workspaceCollectionsListByResourceGroup', function() {
      it('should call workspaceCollectionsListByResourceGroup successfully', function(done) {
        //uncomment below and update the code to test workspaceCollectionsListByResourceGroup
        //instance.workspaceCollectionsListByResourceGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workspaceCollectionsListBySubscription', function() {
      it('should call workspaceCollectionsListBySubscription successfully', function(done) {
        //uncomment below and update the code to test workspaceCollectionsListBySubscription
        //instance.workspaceCollectionsListBySubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workspaceCollectionsMigrate', function() {
      it('should call workspaceCollectionsMigrate successfully', function(done) {
        //uncomment below and update the code to test workspaceCollectionsMigrate
        //instance.workspaceCollectionsMigrate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workspaceCollectionsRegenerateKey', function() {
      it('should call workspaceCollectionsRegenerateKey successfully', function(done) {
        //uncomment below and update the code to test workspaceCollectionsRegenerateKey
        //instance.workspaceCollectionsRegenerateKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workspaceCollectionsUpdate', function() {
      it('should call workspaceCollectionsUpdate successfully', function(done) {
        //uncomment below and update the code to test workspaceCollectionsUpdate
        //instance.workspaceCollectionsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
