/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SqlManagementClient);
  }
}(this, function(expect, SqlManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SqlManagementClient.ImportExportOperationResultProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ImportExportOperationResultProperties', function() {
    it('should create an instance of ImportExportOperationResultProperties', function() {
      // uncomment below and update the code to test ImportExportOperationResultProperties
      //var instance = new SqlManagementClient.ImportExportOperationResultProperties();
      //expect(instance).to.be.a(SqlManagementClient.ImportExportOperationResultProperties);
    });

    it('should have the property blobUri (base name: "blobUri")', function() {
      // uncomment below and update the code to test the property blobUri
      //var instance = new SqlManagementClient.ImportExportOperationResultProperties();
      //expect(instance).to.be();
    });

    it('should have the property databaseName (base name: "databaseName")', function() {
      // uncomment below and update the code to test the property databaseName
      //var instance = new SqlManagementClient.ImportExportOperationResultProperties();
      //expect(instance).to.be();
    });

    it('should have the property errorMessage (base name: "errorMessage")', function() {
      // uncomment below and update the code to test the property errorMessage
      //var instance = new SqlManagementClient.ImportExportOperationResultProperties();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedTime (base name: "lastModifiedTime")', function() {
      // uncomment below and update the code to test the property lastModifiedTime
      //var instance = new SqlManagementClient.ImportExportOperationResultProperties();
      //expect(instance).to.be();
    });

    it('should have the property queuedTime (base name: "queuedTime")', function() {
      // uncomment below and update the code to test the property queuedTime
      //var instance = new SqlManagementClient.ImportExportOperationResultProperties();
      //expect(instance).to.be();
    });

    it('should have the property requestId (base name: "requestId")', function() {
      // uncomment below and update the code to test the property requestId
      //var instance = new SqlManagementClient.ImportExportOperationResultProperties();
      //expect(instance).to.be();
    });

    it('should have the property requestType (base name: "requestType")', function() {
      // uncomment below and update the code to test the property requestType
      //var instance = new SqlManagementClient.ImportExportOperationResultProperties();
      //expect(instance).to.be();
    });

    it('should have the property serverName (base name: "serverName")', function() {
      // uncomment below and update the code to test the property serverName
      //var instance = new SqlManagementClient.ImportExportOperationResultProperties();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SqlManagementClient.ImportExportOperationResultProperties();
      //expect(instance).to.be();
    });

  });

}));
