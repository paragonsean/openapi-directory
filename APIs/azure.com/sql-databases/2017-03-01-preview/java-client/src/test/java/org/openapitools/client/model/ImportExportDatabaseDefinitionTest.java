/*
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ImportExportDatabaseDefinition
 */
public class ImportExportDatabaseDefinitionTest {
    private final ImportExportDatabaseDefinition model = new ImportExportDatabaseDefinition();

    /**
     * Model tests for ImportExportDatabaseDefinition
     */
    @Test
    public void testImportExportDatabaseDefinition() {
        // TODO: test ImportExportDatabaseDefinition
    }

    /**
     * Test the property 'administratorLogin'
     */
    @Test
    public void administratorLoginTest() {
        // TODO: test administratorLogin
    }

    /**
     * Test the property 'administratorLoginPassword'
     */
    @Test
    public void administratorLoginPasswordTest() {
        // TODO: test administratorLoginPassword
    }

    /**
     * Test the property 'authenticationType'
     */
    @Test
    public void authenticationTypeTest() {
        // TODO: test authenticationType
    }

    /**
     * Test the property 'databaseName'
     */
    @Test
    public void databaseNameTest() {
        // TODO: test databaseName
    }

    /**
     * Test the property 'edition'
     */
    @Test
    public void editionTest() {
        // TODO: test edition
    }

    /**
     * Test the property 'maxSizeBytes'
     */
    @Test
    public void maxSizeBytesTest() {
        // TODO: test maxSizeBytes
    }

    /**
     * Test the property 'serviceObjectiveName'
     */
    @Test
    public void serviceObjectiveNameTest() {
        // TODO: test serviceObjectiveName
    }

    /**
     * Test the property 'storageKey'
     */
    @Test
    public void storageKeyTest() {
        // TODO: test storageKey
    }

    /**
     * Test the property 'storageKeyType'
     */
    @Test
    public void storageKeyTypeTest() {
        // TODO: test storageKeyType
    }

    /**
     * Test the property 'storageUri'
     */
    @Test
    public void storageUriTest() {
        // TODO: test storageUri
    }

}
