/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2017-03-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportExportOperationResultProperties.h
 *
 * Contains the operation result properties for import/export operation.
 */

#ifndef OAIImportExportOperationResultProperties_H
#define OAIImportExportOperationResultProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImportExportOperationResultProperties : public OAIObject {
public:
    OAIImportExportOperationResultProperties();
    OAIImportExportOperationResultProperties(QString json);
    ~OAIImportExportOperationResultProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBlobUri() const;
    void setBlobUri(const QString &blob_uri);
    bool is_blob_uri_Set() const;
    bool is_blob_uri_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QString getLastModifiedTime() const;
    void setLastModifiedTime(const QString &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    QString getQueuedTime() const;
    void setQueuedTime(const QString &queued_time);
    bool is_queued_time_Set() const;
    bool is_queued_time_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QString getRequestType() const;
    void setRequestType(const QString &request_type);
    bool is_request_type_Set() const;
    bool is_request_type_Valid() const;

    QString getServerName() const;
    void setServerName(const QString &server_name);
    bool is_server_name_Set() const;
    bool is_server_name_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_blob_uri;
    bool m_blob_uri_isSet;
    bool m_blob_uri_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QString m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    QString m_queued_time;
    bool m_queued_time_isSet;
    bool m_queued_time_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QString m_request_type;
    bool m_request_type_isSet;
    bool m_request_type_isValid;

    QString m_server_name;
    bool m_server_name_isSet;
    bool m_server_name_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportExportOperationResultProperties)

#endif // OAIImportExportOperationResultProperties_H
