/*
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Databases.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.DatabasePropertiesRecommendedIndexInner;
import org.openapitools.client.model.DatabasePropertiesServiceTierAdvisorsInner;
import org.openapitools.client.model.DatabasePropertiesTransparentDataEncryptionInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DatabaseProperties
 */
public class DatabasePropertiesTest {
    private final DatabaseProperties model = new DatabaseProperties();

    /**
     * Model tests for DatabaseProperties
     */
    @Test
    public void testDatabaseProperties() {
        // TODO: test DatabaseProperties
    }

    /**
     * Test the property 'collation'
     */
    @Test
    public void collationTest() {
        // TODO: test collation
    }

    /**
     * Test the property 'containmentState'
     */
    @Test
    public void containmentStateTest() {
        // TODO: test containmentState
    }

    /**
     * Test the property 'createMode'
     */
    @Test
    public void createModeTest() {
        // TODO: test createMode
    }

    /**
     * Test the property 'creationDate'
     */
    @Test
    public void creationDateTest() {
        // TODO: test creationDate
    }

    /**
     * Test the property 'currentServiceObjectiveId'
     */
    @Test
    public void currentServiceObjectiveIdTest() {
        // TODO: test currentServiceObjectiveId
    }

    /**
     * Test the property 'databaseId'
     */
    @Test
    public void databaseIdTest() {
        // TODO: test databaseId
    }

    /**
     * Test the property 'defaultSecondaryLocation'
     */
    @Test
    public void defaultSecondaryLocationTest() {
        // TODO: test defaultSecondaryLocation
    }

    /**
     * Test the property 'earliestRestoreDate'
     */
    @Test
    public void earliestRestoreDateTest() {
        // TODO: test earliestRestoreDate
    }

    /**
     * Test the property 'edition'
     */
    @Test
    public void editionTest() {
        // TODO: test edition
    }

    /**
     * Test the property 'elasticPoolName'
     */
    @Test
    public void elasticPoolNameTest() {
        // TODO: test elasticPoolName
    }

    /**
     * Test the property 'failoverGroupId'
     */
    @Test
    public void failoverGroupIdTest() {
        // TODO: test failoverGroupId
    }

    /**
     * Test the property 'maxSizeBytes'
     */
    @Test
    public void maxSizeBytesTest() {
        // TODO: test maxSizeBytes
    }

    /**
     * Test the property 'readScale'
     */
    @Test
    public void readScaleTest() {
        // TODO: test readScale
    }

    /**
     * Test the property 'recommendedIndex'
     */
    @Test
    public void recommendedIndexTest() {
        // TODO: test recommendedIndex
    }

    /**
     * Test the property 'recoveryServicesRecoveryPointResourceId'
     */
    @Test
    public void recoveryServicesRecoveryPointResourceIdTest() {
        // TODO: test recoveryServicesRecoveryPointResourceId
    }

    /**
     * Test the property 'requestedServiceObjectiveId'
     */
    @Test
    public void requestedServiceObjectiveIdTest() {
        // TODO: test requestedServiceObjectiveId
    }

    /**
     * Test the property 'requestedServiceObjectiveName'
     */
    @Test
    public void requestedServiceObjectiveNameTest() {
        // TODO: test requestedServiceObjectiveName
    }

    /**
     * Test the property 'restorePointInTime'
     */
    @Test
    public void restorePointInTimeTest() {
        // TODO: test restorePointInTime
    }

    /**
     * Test the property 'sampleName'
     */
    @Test
    public void sampleNameTest() {
        // TODO: test sampleName
    }

    /**
     * Test the property 'serviceLevelObjective'
     */
    @Test
    public void serviceLevelObjectiveTest() {
        // TODO: test serviceLevelObjective
    }

    /**
     * Test the property 'serviceTierAdvisors'
     */
    @Test
    public void serviceTierAdvisorsTest() {
        // TODO: test serviceTierAdvisors
    }

    /**
     * Test the property 'sourceDatabaseDeletionDate'
     */
    @Test
    public void sourceDatabaseDeletionDateTest() {
        // TODO: test sourceDatabaseDeletionDate
    }

    /**
     * Test the property 'sourceDatabaseId'
     */
    @Test
    public void sourceDatabaseIdTest() {
        // TODO: test sourceDatabaseId
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'transparentDataEncryption'
     */
    @Test
    public void transparentDataEncryptionTest() {
        // TODO: test transparentDataEncryption
    }

    /**
     * Test the property 'zoneRedundant'
     */
    @Test
    public void zoneRedundantTest() {
        // TODO: test zoneRedundant
    }

}
