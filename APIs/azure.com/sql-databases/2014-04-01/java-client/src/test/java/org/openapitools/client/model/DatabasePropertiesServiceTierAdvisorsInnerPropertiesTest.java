/*
 * Azure SQL Database
 * Provides create, read, update and delete functionality for Azure SQL Databases.
 *
 * The version of the OpenAPI document: 2014-04-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.DatabasePropertiesServiceTierAdvisorsInnerPropertiesServiceLevelObjectiveUsageMetricsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DatabasePropertiesServiceTierAdvisorsInnerProperties
 */
public class DatabasePropertiesServiceTierAdvisorsInnerPropertiesTest {
    private final DatabasePropertiesServiceTierAdvisorsInnerProperties model = new DatabasePropertiesServiceTierAdvisorsInnerProperties();

    /**
     * Model tests for DatabasePropertiesServiceTierAdvisorsInnerProperties
     */
    @Test
    public void testDatabasePropertiesServiceTierAdvisorsInnerProperties() {
        // TODO: test DatabasePropertiesServiceTierAdvisorsInnerProperties
    }

    /**
     * Test the property 'activeTimeRatio'
     */
    @Test
    public void activeTimeRatioTest() {
        // TODO: test activeTimeRatio
    }

    /**
     * Test the property 'avgDtu'
     */
    @Test
    public void avgDtuTest() {
        // TODO: test avgDtu
    }

    /**
     * Test the property 'confidence'
     */
    @Test
    public void confidenceTest() {
        // TODO: test confidence
    }

    /**
     * Test the property 'currentServiceLevelObjective'
     */
    @Test
    public void currentServiceLevelObjectiveTest() {
        // TODO: test currentServiceLevelObjective
    }

    /**
     * Test the property 'currentServiceLevelObjectiveId'
     */
    @Test
    public void currentServiceLevelObjectiveIdTest() {
        // TODO: test currentServiceLevelObjectiveId
    }

    /**
     * Test the property 'databaseSizeBasedRecommendationServiceLevelObjective'
     */
    @Test
    public void databaseSizeBasedRecommendationServiceLevelObjectiveTest() {
        // TODO: test databaseSizeBasedRecommendationServiceLevelObjective
    }

    /**
     * Test the property 'databaseSizeBasedRecommendationServiceLevelObjectiveId'
     */
    @Test
    public void databaseSizeBasedRecommendationServiceLevelObjectiveIdTest() {
        // TODO: test databaseSizeBasedRecommendationServiceLevelObjectiveId
    }

    /**
     * Test the property 'disasterPlanBasedRecommendationServiceLevelObjective'
     */
    @Test
    public void disasterPlanBasedRecommendationServiceLevelObjectiveTest() {
        // TODO: test disasterPlanBasedRecommendationServiceLevelObjective
    }

    /**
     * Test the property 'disasterPlanBasedRecommendationServiceLevelObjectiveId'
     */
    @Test
    public void disasterPlanBasedRecommendationServiceLevelObjectiveIdTest() {
        // TODO: test disasterPlanBasedRecommendationServiceLevelObjectiveId
    }

    /**
     * Test the property 'maxDtu'
     */
    @Test
    public void maxDtuTest() {
        // TODO: test maxDtu
    }

    /**
     * Test the property 'maxSizeInGB'
     */
    @Test
    public void maxSizeInGBTest() {
        // TODO: test maxSizeInGB
    }

    /**
     * Test the property 'minDtu'
     */
    @Test
    public void minDtuTest() {
        // TODO: test minDtu
    }

    /**
     * Test the property 'observationPeriodEnd'
     */
    @Test
    public void observationPeriodEndTest() {
        // TODO: test observationPeriodEnd
    }

    /**
     * Test the property 'observationPeriodStart'
     */
    @Test
    public void observationPeriodStartTest() {
        // TODO: test observationPeriodStart
    }

    /**
     * Test the property 'overallRecommendationServiceLevelObjective'
     */
    @Test
    public void overallRecommendationServiceLevelObjectiveTest() {
        // TODO: test overallRecommendationServiceLevelObjective
    }

    /**
     * Test the property 'overallRecommendationServiceLevelObjectiveId'
     */
    @Test
    public void overallRecommendationServiceLevelObjectiveIdTest() {
        // TODO: test overallRecommendationServiceLevelObjectiveId
    }

    /**
     * Test the property 'serviceLevelObjectiveUsageMetrics'
     */
    @Test
    public void serviceLevelObjectiveUsageMetricsTest() {
        // TODO: test serviceLevelObjectiveUsageMetrics
    }

    /**
     * Test the property 'usageBasedRecommendationServiceLevelObjective'
     */
    @Test
    public void usageBasedRecommendationServiceLevelObjectiveTest() {
        // TODO: test usageBasedRecommendationServiceLevelObjective
    }

    /**
     * Test the property 'usageBasedRecommendationServiceLevelObjectiveId'
     */
    @Test
    public void usageBasedRecommendationServiceLevelObjectiveIdTest() {
        // TODO: test usageBasedRecommendationServiceLevelObjectiveId
    }

}
