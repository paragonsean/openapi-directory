/**
 * SqlManagementClient
 * The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.
 *
 * The version of the OpenAPI document: 2019-06-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceMoveDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceMoveDefinition::OAIResourceMoveDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceMoveDefinition::OAIResourceMoveDefinition() {
    this->initializeModel();
}

OAIResourceMoveDefinition::~OAIResourceMoveDefinition() {}

void OAIResourceMoveDefinition::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAIResourceMoveDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResourceMoveDefinition::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAIResourceMoveDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResourceMoveDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    return obj;
}

QString OAIResourceMoveDefinition::getId() const {
    return m_id;
}
void OAIResourceMoveDefinition::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIResourceMoveDefinition::is_id_Set() const{
    return m_id_isSet;
}

bool OAIResourceMoveDefinition::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIResourceMoveDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResourceMoveDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && true;
}

} // namespace OpenAPI
