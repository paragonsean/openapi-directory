/*
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AcsConfiguration;
import org.openapitools.client.model.VmImage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The properties of cloud appliance configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:41:41.316643-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CloudApplianceConfigurationProperties {
  public static final String SERIALIZED_NAME_ACS_CONFIGURATION = "acsConfiguration";
  @SerializedName(SERIALIZED_NAME_ACS_CONFIGURATION)
  private AcsConfiguration acsConfiguration;

  public static final String SERIALIZED_NAME_CLOUD_PLATFORM = "cloudPlatform";
  @SerializedName(SERIALIZED_NAME_CLOUD_PLATFORM)
  private String cloudPlatform;

  public static final String SERIALIZED_NAME_MODEL_NUMBER = "modelNumber";
  @SerializedName(SERIALIZED_NAME_MODEL_NUMBER)
  private String modelNumber;

  public static final String SERIALIZED_NAME_SUPPORTED_REGIONS = "supportedRegions";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_REGIONS)
  private List<String> supportedRegions = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUPPORTED_STORAGE_ACCOUNT_TYPES = "supportedStorageAccountTypes";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_STORAGE_ACCOUNT_TYPES)
  private List<String> supportedStorageAccountTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUPPORTED_VM_IMAGES = "supportedVmImages";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_VM_IMAGES)
  private List<VmImage> supportedVmImages = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUPPORTED_VM_TYPES = "supportedVmTypes";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_VM_TYPES)
  private List<String> supportedVmTypes = new ArrayList<>();

  public CloudApplianceConfigurationProperties() {
  }

  public CloudApplianceConfigurationProperties acsConfiguration(AcsConfiguration acsConfiguration) {
    this.acsConfiguration = acsConfiguration;
    return this;
  }

  /**
   * Get acsConfiguration
   * @return acsConfiguration
   */
  @javax.annotation.Nonnull
  public AcsConfiguration getAcsConfiguration() {
    return acsConfiguration;
  }

  public void setAcsConfiguration(AcsConfiguration acsConfiguration) {
    this.acsConfiguration = acsConfiguration;
  }


  public CloudApplianceConfigurationProperties cloudPlatform(String cloudPlatform) {
    this.cloudPlatform = cloudPlatform;
    return this;
  }

  /**
   * The cloud platform.
   * @return cloudPlatform
   */
  @javax.annotation.Nonnull
  public String getCloudPlatform() {
    return cloudPlatform;
  }

  public void setCloudPlatform(String cloudPlatform) {
    this.cloudPlatform = cloudPlatform;
  }


  public CloudApplianceConfigurationProperties modelNumber(String modelNumber) {
    this.modelNumber = modelNumber;
    return this;
  }

  /**
   * The model number.
   * @return modelNumber
   */
  @javax.annotation.Nonnull
  public String getModelNumber() {
    return modelNumber;
  }

  public void setModelNumber(String modelNumber) {
    this.modelNumber = modelNumber;
  }


  public CloudApplianceConfigurationProperties supportedRegions(List<String> supportedRegions) {
    this.supportedRegions = supportedRegions;
    return this;
  }

  public CloudApplianceConfigurationProperties addSupportedRegionsItem(String supportedRegionsItem) {
    if (this.supportedRegions == null) {
      this.supportedRegions = new ArrayList<>();
    }
    this.supportedRegions.add(supportedRegionsItem);
    return this;
  }

  /**
   * The supported regions.
   * @return supportedRegions
   */
  @javax.annotation.Nonnull
  public List<String> getSupportedRegions() {
    return supportedRegions;
  }

  public void setSupportedRegions(List<String> supportedRegions) {
    this.supportedRegions = supportedRegions;
  }


  public CloudApplianceConfigurationProperties supportedStorageAccountTypes(List<String> supportedStorageAccountTypes) {
    this.supportedStorageAccountTypes = supportedStorageAccountTypes;
    return this;
  }

  public CloudApplianceConfigurationProperties addSupportedStorageAccountTypesItem(String supportedStorageAccountTypesItem) {
    if (this.supportedStorageAccountTypes == null) {
      this.supportedStorageAccountTypes = new ArrayList<>();
    }
    this.supportedStorageAccountTypes.add(supportedStorageAccountTypesItem);
    return this;
  }

  /**
   * The supported storage account types.
   * @return supportedStorageAccountTypes
   */
  @javax.annotation.Nonnull
  public List<String> getSupportedStorageAccountTypes() {
    return supportedStorageAccountTypes;
  }

  public void setSupportedStorageAccountTypes(List<String> supportedStorageAccountTypes) {
    this.supportedStorageAccountTypes = supportedStorageAccountTypes;
  }


  public CloudApplianceConfigurationProperties supportedVmImages(List<VmImage> supportedVmImages) {
    this.supportedVmImages = supportedVmImages;
    return this;
  }

  public CloudApplianceConfigurationProperties addSupportedVmImagesItem(VmImage supportedVmImagesItem) {
    if (this.supportedVmImages == null) {
      this.supportedVmImages = new ArrayList<>();
    }
    this.supportedVmImages.add(supportedVmImagesItem);
    return this;
  }

  /**
   * The supported virtual machine images.
   * @return supportedVmImages
   */
  @javax.annotation.Nonnull
  public List<VmImage> getSupportedVmImages() {
    return supportedVmImages;
  }

  public void setSupportedVmImages(List<VmImage> supportedVmImages) {
    this.supportedVmImages = supportedVmImages;
  }


  public CloudApplianceConfigurationProperties supportedVmTypes(List<String> supportedVmTypes) {
    this.supportedVmTypes = supportedVmTypes;
    return this;
  }

  public CloudApplianceConfigurationProperties addSupportedVmTypesItem(String supportedVmTypesItem) {
    if (this.supportedVmTypes == null) {
      this.supportedVmTypes = new ArrayList<>();
    }
    this.supportedVmTypes.add(supportedVmTypesItem);
    return this;
  }

  /**
   * The supported virtual machine types.
   * @return supportedVmTypes
   */
  @javax.annotation.Nonnull
  public List<String> getSupportedVmTypes() {
    return supportedVmTypes;
  }

  public void setSupportedVmTypes(List<String> supportedVmTypes) {
    this.supportedVmTypes = supportedVmTypes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudApplianceConfigurationProperties cloudApplianceConfigurationProperties = (CloudApplianceConfigurationProperties) o;
    return Objects.equals(this.acsConfiguration, cloudApplianceConfigurationProperties.acsConfiguration) &&
        Objects.equals(this.cloudPlatform, cloudApplianceConfigurationProperties.cloudPlatform) &&
        Objects.equals(this.modelNumber, cloudApplianceConfigurationProperties.modelNumber) &&
        Objects.equals(this.supportedRegions, cloudApplianceConfigurationProperties.supportedRegions) &&
        Objects.equals(this.supportedStorageAccountTypes, cloudApplianceConfigurationProperties.supportedStorageAccountTypes) &&
        Objects.equals(this.supportedVmImages, cloudApplianceConfigurationProperties.supportedVmImages) &&
        Objects.equals(this.supportedVmTypes, cloudApplianceConfigurationProperties.supportedVmTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acsConfiguration, cloudPlatform, modelNumber, supportedRegions, supportedStorageAccountTypes, supportedVmImages, supportedVmTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudApplianceConfigurationProperties {\n");
    sb.append("    acsConfiguration: ").append(toIndentedString(acsConfiguration)).append("\n");
    sb.append("    cloudPlatform: ").append(toIndentedString(cloudPlatform)).append("\n");
    sb.append("    modelNumber: ").append(toIndentedString(modelNumber)).append("\n");
    sb.append("    supportedRegions: ").append(toIndentedString(supportedRegions)).append("\n");
    sb.append("    supportedStorageAccountTypes: ").append(toIndentedString(supportedStorageAccountTypes)).append("\n");
    sb.append("    supportedVmImages: ").append(toIndentedString(supportedVmImages)).append("\n");
    sb.append("    supportedVmTypes: ").append(toIndentedString(supportedVmTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("acsConfiguration");
    openapiFields.add("cloudPlatform");
    openapiFields.add("modelNumber");
    openapiFields.add("supportedRegions");
    openapiFields.add("supportedStorageAccountTypes");
    openapiFields.add("supportedVmImages");
    openapiFields.add("supportedVmTypes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("acsConfiguration");
    openapiRequiredFields.add("cloudPlatform");
    openapiRequiredFields.add("modelNumber");
    openapiRequiredFields.add("supportedRegions");
    openapiRequiredFields.add("supportedStorageAccountTypes");
    openapiRequiredFields.add("supportedVmImages");
    openapiRequiredFields.add("supportedVmTypes");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CloudApplianceConfigurationProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CloudApplianceConfigurationProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CloudApplianceConfigurationProperties is not found in the empty JSON string", CloudApplianceConfigurationProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CloudApplianceConfigurationProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CloudApplianceConfigurationProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CloudApplianceConfigurationProperties.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `acsConfiguration`
      AcsConfiguration.validateJsonElement(jsonObj.get("acsConfiguration"));
      if (!jsonObj.get("cloudPlatform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloudPlatform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cloudPlatform").toString()));
      }
      if (!jsonObj.get("modelNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modelNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modelNumber").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("supportedRegions") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("supportedRegions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportedRegions` to be an array in the JSON string but got `%s`", jsonObj.get("supportedRegions").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("supportedStorageAccountTypes") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("supportedStorageAccountTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportedStorageAccountTypes` to be an array in the JSON string but got `%s`", jsonObj.get("supportedStorageAccountTypes").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("supportedVmImages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportedVmImages` to be an array in the JSON string but got `%s`", jsonObj.get("supportedVmImages").toString()));
      }

      JsonArray jsonArraysupportedVmImages = jsonObj.getAsJsonArray("supportedVmImages");
      // validate the required field `supportedVmImages` (array)
      for (int i = 0; i < jsonArraysupportedVmImages.size(); i++) {
        VmImage.validateJsonElement(jsonArraysupportedVmImages.get(i));
      };
      // ensure the required json array is present
      if (jsonObj.get("supportedVmTypes") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("supportedVmTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportedVmTypes` to be an array in the JSON string but got `%s`", jsonObj.get("supportedVmTypes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CloudApplianceConfigurationProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CloudApplianceConfigurationProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CloudApplianceConfigurationProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CloudApplianceConfigurationProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<CloudApplianceConfigurationProperties>() {
           @Override
           public void write(JsonWriter out, CloudApplianceConfigurationProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CloudApplianceConfigurationProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CloudApplianceConfigurationProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CloudApplianceConfigurationProperties
   * @throws IOException if the JSON string is invalid with respect to CloudApplianceConfigurationProperties
   */
  public static CloudApplianceConfigurationProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CloudApplianceConfigurationProperties.class);
  }

  /**
   * Convert an instance of CloudApplianceConfigurationProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

