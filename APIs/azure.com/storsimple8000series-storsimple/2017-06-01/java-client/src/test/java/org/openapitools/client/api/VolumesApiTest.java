/*
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MetricDefinitionList;
import org.openapitools.client.model.MetricList;
import org.openapitools.client.model.Volume;
import org.openapitools.client.model.VolumeList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VolumesApi
 */
@Disabled
public class VolumesApiTest {

    private final VolumesApi api = new VolumesApi();

    /**
     * Creates or updates the volume.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumesCreateOrUpdateTest() throws ApiException {
        String deviceName = null;
        String volumeContainerName = null;
        String volumeName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        Volume parameters = null;
        Volume response = api.volumesCreateOrUpdate(deviceName, volumeContainerName, volumeName, subscriptionId, resourceGroupName, managerName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the volume.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumesDeleteTest() throws ApiException {
        String deviceName = null;
        String volumeContainerName = null;
        String volumeName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        api.volumesDelete(deviceName, volumeContainerName, volumeName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the properties of the specified volume name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumesGetTest() throws ApiException {
        String deviceName = null;
        String volumeContainerName = null;
        String volumeName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        Volume response = api.volumesGet(deviceName, volumeContainerName, volumeName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves all the volumes in a device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumesListByDeviceTest() throws ApiException {
        String deviceName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        VolumeList response = api.volumesListByDevice(deviceName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves all the volumes in a volume container.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumesListByVolumeContainerTest() throws ApiException {
        String deviceName = null;
        String volumeContainerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        VolumeList response = api.volumesListByVolumeContainer(deviceName, volumeContainerName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the metric definitions for the specified volume.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumesListMetricDefinitionTest() throws ApiException {
        String deviceName = null;
        String volumeContainerName = null;
        String volumeName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        MetricDefinitionList response = api.volumesListMetricDefinition(deviceName, volumeContainerName, volumeName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the metrics for the specified volume.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumesListMetricsTest() throws ApiException {
        String deviceName = null;
        String volumeContainerName = null;
        String volumeName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        String $filter = null;
        MetricList response = api.volumesListMetrics(deviceName, volumeContainerName, volumeName, subscriptionId, resourceGroupName, managerName, apiVersion, $filter);
        // TODO: test validations
    }

}
