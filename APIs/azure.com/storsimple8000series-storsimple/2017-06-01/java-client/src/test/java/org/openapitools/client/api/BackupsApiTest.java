/*
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BackupList;
import org.openapitools.client.model.CloneRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BackupsApi
 */
@Disabled
public class BackupsApiTest {

    private final BackupsApi api = new BackupsApi();

    /**
     * Clones the backup element as a new volume.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupsCloneTest() throws ApiException {
        String deviceName = null;
        String backupName = null;
        String backupElementName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        CloneRequest parameters = null;
        api.backupsClone(deviceName, backupName, backupElementName, subscriptionId, resourceGroupName, managerName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the backup.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupsDeleteTest() throws ApiException {
        String deviceName = null;
        String backupName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        api.backupsDelete(deviceName, backupName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Retrieves all the backups in a device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupsListByDeviceTest() throws ApiException {
        String deviceName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        String $filter = null;
        BackupList response = api.backupsListByDevice(deviceName, subscriptionId, resourceGroupName, managerName, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Restores the backup on the device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupsRestoreTest() throws ApiException {
        String deviceName = null;
        String backupName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        api.backupsRestore(deviceName, backupName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

}
