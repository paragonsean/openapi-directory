/*
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BackupPolicy;
import org.openapitools.client.model.BackupPolicyList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BackupPoliciesApi
 */
@Disabled
public class BackupPoliciesApiTest {

    private final BackupPoliciesApi api = new BackupPoliciesApi();

    /**
     * Backup the backup policy now.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupPoliciesBackupNowTest() throws ApiException {
        String deviceName = null;
        String backupPolicyName = null;
        String backupType = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        api.backupPoliciesBackupNow(deviceName, backupPolicyName, backupType, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Creates or updates the backup policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupPoliciesCreateOrUpdateTest() throws ApiException {
        String deviceName = null;
        String backupPolicyName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        BackupPolicy parameters = null;
        BackupPolicy response = api.backupPoliciesCreateOrUpdate(deviceName, backupPolicyName, subscriptionId, resourceGroupName, managerName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the backup policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupPoliciesDeleteTest() throws ApiException {
        String deviceName = null;
        String backupPolicyName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        api.backupPoliciesDelete(deviceName, backupPolicyName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the properties of the specified backup policy name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupPoliciesGetTest() throws ApiException {
        String deviceName = null;
        String backupPolicyName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        BackupPolicy response = api.backupPoliciesGet(deviceName, backupPolicyName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all the backup policies in a device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void backupPoliciesListByDeviceTest() throws ApiException {
        String deviceName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        BackupPolicyList response = api.backupPoliciesListByDevice(deviceName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

}
