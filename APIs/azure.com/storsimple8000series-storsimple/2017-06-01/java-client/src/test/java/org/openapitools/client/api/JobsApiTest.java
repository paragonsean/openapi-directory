/*
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Job;
import org.openapitools.client.model.JobList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobsApi
 */
@Disabled
public class JobsApiTest {

    private final JobsApi api = new JobsApi();

    /**
     * Cancels a job on the device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsCancelTest() throws ApiException {
        String deviceName = null;
        String jobName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        api.jobsCancel(deviceName, jobName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the details of the specified job name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsGetTest() throws ApiException {
        String deviceName = null;
        String jobName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        Job response = api.jobsGet(deviceName, jobName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all the jobs for specified device. With optional OData query parameters, a filtered set of jobs is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsListByDeviceTest() throws ApiException {
        String deviceName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        String $filter = null;
        JobList response = api.jobsListByDevice(deviceName, subscriptionId, resourceGroupName, managerName, apiVersion, $filter);
        // TODO: test validations
    }

    /**
     * Gets all the jobs for the specified manager. With optional OData query parameters, a filtered set of jobs is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsListByManagerTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        String $filter = null;
        JobList response = api.jobsListByManager(subscriptionId, resourceGroupName, managerName, apiVersion, $filter);
        // TODO: test validations
    }

}
