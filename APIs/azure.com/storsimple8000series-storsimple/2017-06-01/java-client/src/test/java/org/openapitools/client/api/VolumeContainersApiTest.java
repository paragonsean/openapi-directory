/*
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MetricDefinitionList;
import org.openapitools.client.model.MetricList;
import org.openapitools.client.model.VolumeContainer;
import org.openapitools.client.model.VolumeContainerList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VolumeContainersApi
 */
@Disabled
public class VolumeContainersApiTest {

    private final VolumeContainersApi api = new VolumeContainersApi();

    /**
     * Creates or updates the volume container.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumeContainersCreateOrUpdateTest() throws ApiException {
        String deviceName = null;
        String volumeContainerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        VolumeContainer parameters = null;
        VolumeContainer response = api.volumeContainersCreateOrUpdate(deviceName, volumeContainerName, subscriptionId, resourceGroupName, managerName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Deletes the volume container.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumeContainersDeleteTest() throws ApiException {
        String deviceName = null;
        String volumeContainerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        api.volumeContainersDelete(deviceName, volumeContainerName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the properties of the specified volume container name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumeContainersGetTest() throws ApiException {
        String deviceName = null;
        String volumeContainerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        VolumeContainer response = api.volumeContainersGet(deviceName, volumeContainerName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets all the volume containers in a device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumeContainersListByDeviceTest() throws ApiException {
        String deviceName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        VolumeContainerList response = api.volumeContainersListByDevice(deviceName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the metric definitions for the specified volume container.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumeContainersListMetricDefinitionTest() throws ApiException {
        String deviceName = null;
        String volumeContainerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        MetricDefinitionList response = api.volumeContainersListMetricDefinition(deviceName, volumeContainerName, subscriptionId, resourceGroupName, managerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the metrics for the specified volume container.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void volumeContainersListMetricsTest() throws ApiException {
        String deviceName = null;
        String volumeContainerName = null;
        String subscriptionId = null;
        String resourceGroupName = null;
        String managerName = null;
        String apiVersion = null;
        String $filter = null;
        MetricList response = api.volumeContainersListMetrics(deviceName, volumeContainerName, subscriptionId, resourceGroupName, managerName, apiVersion, $filter);
        // TODO: test validations
    }

}
