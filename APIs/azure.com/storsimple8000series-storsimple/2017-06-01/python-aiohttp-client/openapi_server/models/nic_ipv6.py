# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NicIPv6(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, controller0_ipv6_address: str=None, controller1_ipv6_address: str=None, ipv6_address: str=None, ipv6_gateway: str=None, ipv6_prefix: str=None):
        """NicIPv6 - a model defined in OpenAPI

        :param controller0_ipv6_address: The controller0_ipv6_address of this NicIPv6.
        :param controller1_ipv6_address: The controller1_ipv6_address of this NicIPv6.
        :param ipv6_address: The ipv6_address of this NicIPv6.
        :param ipv6_gateway: The ipv6_gateway of this NicIPv6.
        :param ipv6_prefix: The ipv6_prefix of this NicIPv6.
        """
        self.openapi_types = {
            'controller0_ipv6_address': str,
            'controller1_ipv6_address': str,
            'ipv6_address': str,
            'ipv6_gateway': str,
            'ipv6_prefix': str
        }

        self.attribute_map = {
            'controller0_ipv6_address': 'controller0Ipv6Address',
            'controller1_ipv6_address': 'controller1Ipv6Address',
            'ipv6_address': 'ipv6Address',
            'ipv6_gateway': 'ipv6Gateway',
            'ipv6_prefix': 'ipv6Prefix'
        }

        self._controller0_ipv6_address = controller0_ipv6_address
        self._controller1_ipv6_address = controller1_ipv6_address
        self._ipv6_address = ipv6_address
        self._ipv6_gateway = ipv6_gateway
        self._ipv6_prefix = ipv6_prefix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NicIPv6':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NicIPv6 of this NicIPv6.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def controller0_ipv6_address(self):
        """Gets the controller0_ipv6_address of this NicIPv6.

        The IPv6 address of Controller0.

        :return: The controller0_ipv6_address of this NicIPv6.
        :rtype: str
        """
        return self._controller0_ipv6_address

    @controller0_ipv6_address.setter
    def controller0_ipv6_address(self, controller0_ipv6_address):
        """Sets the controller0_ipv6_address of this NicIPv6.

        The IPv6 address of Controller0.

        :param controller0_ipv6_address: The controller0_ipv6_address of this NicIPv6.
        :type controller0_ipv6_address: str
        """

        self._controller0_ipv6_address = controller0_ipv6_address

    @property
    def controller1_ipv6_address(self):
        """Gets the controller1_ipv6_address of this NicIPv6.

        The IPv6 address of Controller1.

        :return: The controller1_ipv6_address of this NicIPv6.
        :rtype: str
        """
        return self._controller1_ipv6_address

    @controller1_ipv6_address.setter
    def controller1_ipv6_address(self, controller1_ipv6_address):
        """Sets the controller1_ipv6_address of this NicIPv6.

        The IPv6 address of Controller1.

        :param controller1_ipv6_address: The controller1_ipv6_address of this NicIPv6.
        :type controller1_ipv6_address: str
        """

        self._controller1_ipv6_address = controller1_ipv6_address

    @property
    def ipv6_address(self):
        """Gets the ipv6_address of this NicIPv6.

        The IPv6 address of the network adapter.

        :return: The ipv6_address of this NicIPv6.
        :rtype: str
        """
        return self._ipv6_address

    @ipv6_address.setter
    def ipv6_address(self, ipv6_address):
        """Sets the ipv6_address of this NicIPv6.

        The IPv6 address of the network adapter.

        :param ipv6_address: The ipv6_address of this NicIPv6.
        :type ipv6_address: str
        """

        self._ipv6_address = ipv6_address

    @property
    def ipv6_gateway(self):
        """Gets the ipv6_gateway of this NicIPv6.

        The IPv6 gateway of the network adapter.

        :return: The ipv6_gateway of this NicIPv6.
        :rtype: str
        """
        return self._ipv6_gateway

    @ipv6_gateway.setter
    def ipv6_gateway(self, ipv6_gateway):
        """Sets the ipv6_gateway of this NicIPv6.

        The IPv6 gateway of the network adapter.

        :param ipv6_gateway: The ipv6_gateway of this NicIPv6.
        :type ipv6_gateway: str
        """

        self._ipv6_gateway = ipv6_gateway

    @property
    def ipv6_prefix(self):
        """Gets the ipv6_prefix of this NicIPv6.

        The IPv6 prefix of the network adapter.

        :return: The ipv6_prefix of this NicIPv6.
        :rtype: str
        """
        return self._ipv6_prefix

    @ipv6_prefix.setter
    def ipv6_prefix(self, ipv6_prefix):
        """Sets the ipv6_prefix of this NicIPv6.

        The IPv6 prefix of the network adapter.

        :param ipv6_prefix: The ipv6_prefix of this NicIPv6.
        :type ipv6_prefix: str
        """

        self._ipv6_prefix = ipv6_prefix
