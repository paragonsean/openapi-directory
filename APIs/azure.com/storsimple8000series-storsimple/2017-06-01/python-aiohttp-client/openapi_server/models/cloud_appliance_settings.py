# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asymmetric_encrypted_secret import AsymmetricEncryptedSecret
from openapi_server import util


class CloudApplianceSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_integrity_key: AsymmetricEncryptedSecret=None, service_data_encryption_key: AsymmetricEncryptedSecret=None):
        """CloudApplianceSettings - a model defined in OpenAPI

        :param channel_integrity_key: The channel_integrity_key of this CloudApplianceSettings.
        :param service_data_encryption_key: The service_data_encryption_key of this CloudApplianceSettings.
        """
        self.openapi_types = {
            'channel_integrity_key': AsymmetricEncryptedSecret,
            'service_data_encryption_key': AsymmetricEncryptedSecret
        }

        self.attribute_map = {
            'channel_integrity_key': 'channelIntegrityKey',
            'service_data_encryption_key': 'serviceDataEncryptionKey'
        }

        self._channel_integrity_key = channel_integrity_key
        self._service_data_encryption_key = service_data_encryption_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudApplianceSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudApplianceSettings of this CloudApplianceSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_integrity_key(self):
        """Gets the channel_integrity_key of this CloudApplianceSettings.


        :return: The channel_integrity_key of this CloudApplianceSettings.
        :rtype: AsymmetricEncryptedSecret
        """
        return self._channel_integrity_key

    @channel_integrity_key.setter
    def channel_integrity_key(self, channel_integrity_key):
        """Sets the channel_integrity_key of this CloudApplianceSettings.


        :param channel_integrity_key: The channel_integrity_key of this CloudApplianceSettings.
        :type channel_integrity_key: AsymmetricEncryptedSecret
        """

        self._channel_integrity_key = channel_integrity_key

    @property
    def service_data_encryption_key(self):
        """Gets the service_data_encryption_key of this CloudApplianceSettings.


        :return: The service_data_encryption_key of this CloudApplianceSettings.
        :rtype: AsymmetricEncryptedSecret
        """
        return self._service_data_encryption_key

    @service_data_encryption_key.setter
    def service_data_encryption_key(self, service_data_encryption_key):
        """Sets the service_data_encryption_key of this CloudApplianceSettings.


        :param service_data_encryption_key: The service_data_encryption_key of this CloudApplianceSettings.
        :type service_data_encryption_key: AsymmetricEncryptedSecret
        """

        self._service_data_encryption_key = service_data_encryption_key
