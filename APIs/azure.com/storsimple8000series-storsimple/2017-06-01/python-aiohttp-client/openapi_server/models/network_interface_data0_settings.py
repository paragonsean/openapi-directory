# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NetworkInterfaceData0Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, controller_one_ip: str=None, controller_zero_ip: str=None):
        """NetworkInterfaceData0Settings - a model defined in OpenAPI

        :param controller_one_ip: The controller_one_ip of this NetworkInterfaceData0Settings.
        :param controller_zero_ip: The controller_zero_ip of this NetworkInterfaceData0Settings.
        """
        self.openapi_types = {
            'controller_one_ip': str,
            'controller_zero_ip': str
        }

        self.attribute_map = {
            'controller_one_ip': 'controllerOneIp',
            'controller_zero_ip': 'controllerZeroIp'
        }

        self._controller_one_ip = controller_one_ip
        self._controller_zero_ip = controller_zero_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkInterfaceData0Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkInterfaceData0Settings of this NetworkInterfaceData0Settings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def controller_one_ip(self):
        """Gets the controller_one_ip of this NetworkInterfaceData0Settings.

        The controller 1's IPv4 address.

        :return: The controller_one_ip of this NetworkInterfaceData0Settings.
        :rtype: str
        """
        return self._controller_one_ip

    @controller_one_ip.setter
    def controller_one_ip(self, controller_one_ip):
        """Sets the controller_one_ip of this NetworkInterfaceData0Settings.

        The controller 1's IPv4 address.

        :param controller_one_ip: The controller_one_ip of this NetworkInterfaceData0Settings.
        :type controller_one_ip: str
        """

        self._controller_one_ip = controller_one_ip

    @property
    def controller_zero_ip(self):
        """Gets the controller_zero_ip of this NetworkInterfaceData0Settings.

        The controller 0's IPv4 address.

        :return: The controller_zero_ip of this NetworkInterfaceData0Settings.
        :rtype: str
        """
        return self._controller_zero_ip

    @controller_zero_ip.setter
    def controller_zero_ip(self, controller_zero_ip):
        """Sets the controller_zero_ip of this NetworkInterfaceData0Settings.

        The controller 0's IPv4 address.

        :param controller_zero_ip: The controller_zero_ip of this NetworkInterfaceData0Settings.
        :type controller_zero_ip: str
        """

        self._controller_zero_ip = controller_zero_ip
