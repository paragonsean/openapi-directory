# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetricNameFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value: str=None):
        """MetricNameFilter - a model defined in OpenAPI

        :param value: The value of this MetricNameFilter.
        """
        self.openapi_types = {
            'value': str
        }

        self.attribute_map = {
            'value': 'value'
        }

        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricNameFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricNameFilter of this MetricNameFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self):
        """Gets the value of this MetricNameFilter.

        Specifies the metric name to be filtered on. E.g., CloudStorageUsed. Valid values are the ones returned in the field \"name\" in the ListMetricDefinitions call. Only 'Equality' operator is supported for this property.

        :return: The value of this MetricNameFilter.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this MetricNameFilter.

        Specifies the metric name to be filtered on. E.g., CloudStorageUsed. Valid values are the ones returned in the field \"name\" in the ListMetricDefinitions call. Only 'Equality' operator is supported for this property.

        :param value: The value of this MetricNameFilter.
        :type value: str
        """

        self._value = value
