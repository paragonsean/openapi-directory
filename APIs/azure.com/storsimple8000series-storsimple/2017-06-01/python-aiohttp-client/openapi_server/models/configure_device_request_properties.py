# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_interface_data0_settings import NetworkInterfaceData0Settings
from openapi_server.models.secondary_dns_settings import SecondaryDNSSettings
from openapi_server import util


class ConfigureDeviceRequestProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_device_name: str=None, dns_settings: SecondaryDNSSettings=None, friendly_name: str=None, network_interface_data0_settings: NetworkInterfaceData0Settings=None, time_zone: str=None):
        """ConfigureDeviceRequestProperties - a model defined in OpenAPI

        :param current_device_name: The current_device_name of this ConfigureDeviceRequestProperties.
        :param dns_settings: The dns_settings of this ConfigureDeviceRequestProperties.
        :param friendly_name: The friendly_name of this ConfigureDeviceRequestProperties.
        :param network_interface_data0_settings: The network_interface_data0_settings of this ConfigureDeviceRequestProperties.
        :param time_zone: The time_zone of this ConfigureDeviceRequestProperties.
        """
        self.openapi_types = {
            'current_device_name': str,
            'dns_settings': SecondaryDNSSettings,
            'friendly_name': str,
            'network_interface_data0_settings': NetworkInterfaceData0Settings,
            'time_zone': str
        }

        self.attribute_map = {
            'current_device_name': 'currentDeviceName',
            'dns_settings': 'dnsSettings',
            'friendly_name': 'friendlyName',
            'network_interface_data0_settings': 'networkInterfaceData0Settings',
            'time_zone': 'timeZone'
        }

        self._current_device_name = current_device_name
        self._dns_settings = dns_settings
        self._friendly_name = friendly_name
        self._network_interface_data0_settings = network_interface_data0_settings
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigureDeviceRequestProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigureDeviceRequestProperties of this ConfigureDeviceRequestProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_device_name(self):
        """Gets the current_device_name of this ConfigureDeviceRequestProperties.

        The current name of the device.

        :return: The current_device_name of this ConfigureDeviceRequestProperties.
        :rtype: str
        """
        return self._current_device_name

    @current_device_name.setter
    def current_device_name(self, current_device_name):
        """Sets the current_device_name of this ConfigureDeviceRequestProperties.

        The current name of the device.

        :param current_device_name: The current_device_name of this ConfigureDeviceRequestProperties.
        :type current_device_name: str
        """
        if current_device_name is None:
            raise ValueError("Invalid value for `current_device_name`, must not be `None`")

        self._current_device_name = current_device_name

    @property
    def dns_settings(self):
        """Gets the dns_settings of this ConfigureDeviceRequestProperties.


        :return: The dns_settings of this ConfigureDeviceRequestProperties.
        :rtype: SecondaryDNSSettings
        """
        return self._dns_settings

    @dns_settings.setter
    def dns_settings(self, dns_settings):
        """Sets the dns_settings of this ConfigureDeviceRequestProperties.


        :param dns_settings: The dns_settings of this ConfigureDeviceRequestProperties.
        :type dns_settings: SecondaryDNSSettings
        """

        self._dns_settings = dns_settings

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ConfigureDeviceRequestProperties.

        The friendly name for the device.

        :return: The friendly_name of this ConfigureDeviceRequestProperties.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ConfigureDeviceRequestProperties.

        The friendly name for the device.

        :param friendly_name: The friendly_name of this ConfigureDeviceRequestProperties.
        :type friendly_name: str
        """
        if friendly_name is None:
            raise ValueError("Invalid value for `friendly_name`, must not be `None`")

        self._friendly_name = friendly_name

    @property
    def network_interface_data0_settings(self):
        """Gets the network_interface_data0_settings of this ConfigureDeviceRequestProperties.


        :return: The network_interface_data0_settings of this ConfigureDeviceRequestProperties.
        :rtype: NetworkInterfaceData0Settings
        """
        return self._network_interface_data0_settings

    @network_interface_data0_settings.setter
    def network_interface_data0_settings(self, network_interface_data0_settings):
        """Sets the network_interface_data0_settings of this ConfigureDeviceRequestProperties.


        :param network_interface_data0_settings: The network_interface_data0_settings of this ConfigureDeviceRequestProperties.
        :type network_interface_data0_settings: NetworkInterfaceData0Settings
        """

        self._network_interface_data0_settings = network_interface_data0_settings

    @property
    def time_zone(self):
        """Gets the time_zone of this ConfigureDeviceRequestProperties.

        The device time zone. For eg: \"Pacific Standard Time\"

        :return: The time_zone of this ConfigureDeviceRequestProperties.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this ConfigureDeviceRequestProperties.

        The device time zone. For eg: \"Pacific Standard Time\"

        :param time_zone: The time_zone of this ConfigureDeviceRequestProperties.
        :type time_zone: str
        """
        if time_zone is None:
            raise ValueError("Invalid value for `time_zone`, must not be `None`")

        self._time_zone = time_zone
