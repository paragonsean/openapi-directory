# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asymmetric_encrypted_secret import AsymmetricEncryptedSecret
from openapi_server import util


class ChapSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, initiator_secret: AsymmetricEncryptedSecret=None, initiator_user: str=None, target_secret: AsymmetricEncryptedSecret=None, target_user: str=None):
        """ChapSettings - a model defined in OpenAPI

        :param initiator_secret: The initiator_secret of this ChapSettings.
        :param initiator_user: The initiator_user of this ChapSettings.
        :param target_secret: The target_secret of this ChapSettings.
        :param target_user: The target_user of this ChapSettings.
        """
        self.openapi_types = {
            'initiator_secret': AsymmetricEncryptedSecret,
            'initiator_user': str,
            'target_secret': AsymmetricEncryptedSecret,
            'target_user': str
        }

        self.attribute_map = {
            'initiator_secret': 'initiatorSecret',
            'initiator_user': 'initiatorUser',
            'target_secret': 'targetSecret',
            'target_user': 'targetUser'
        }

        self._initiator_secret = initiator_secret
        self._initiator_user = initiator_user
        self._target_secret = target_secret
        self._target_user = target_user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChapSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChapSettings of this ChapSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def initiator_secret(self):
        """Gets the initiator_secret of this ChapSettings.


        :return: The initiator_secret of this ChapSettings.
        :rtype: AsymmetricEncryptedSecret
        """
        return self._initiator_secret

    @initiator_secret.setter
    def initiator_secret(self, initiator_secret):
        """Sets the initiator_secret of this ChapSettings.


        :param initiator_secret: The initiator_secret of this ChapSettings.
        :type initiator_secret: AsymmetricEncryptedSecret
        """

        self._initiator_secret = initiator_secret

    @property
    def initiator_user(self):
        """Gets the initiator_user of this ChapSettings.

        The CHAP initiator user.

        :return: The initiator_user of this ChapSettings.
        :rtype: str
        """
        return self._initiator_user

    @initiator_user.setter
    def initiator_user(self, initiator_user):
        """Sets the initiator_user of this ChapSettings.

        The CHAP initiator user.

        :param initiator_user: The initiator_user of this ChapSettings.
        :type initiator_user: str
        """

        self._initiator_user = initiator_user

    @property
    def target_secret(self):
        """Gets the target_secret of this ChapSettings.


        :return: The target_secret of this ChapSettings.
        :rtype: AsymmetricEncryptedSecret
        """
        return self._target_secret

    @target_secret.setter
    def target_secret(self, target_secret):
        """Sets the target_secret of this ChapSettings.


        :param target_secret: The target_secret of this ChapSettings.
        :type target_secret: AsymmetricEncryptedSecret
        """

        self._target_secret = target_secret

    @property
    def target_user(self):
        """Gets the target_user of this ChapSettings.

        The CHAP target user.

        :return: The target_user of this ChapSettings.
        :rtype: str
        """
        return self._target_user

    @target_user.setter
    def target_user(self, target_user):
        """Sets the target_user of this ChapSettings.

        The CHAP target user.

        :param target_user: The target_user of this ChapSettings.
        :type target_user: str
        """

        self._target_user = target_user
