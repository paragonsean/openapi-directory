# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hardware_component import HardwareComponent
from openapi_server import util


class HardwareComponentGroupProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, components: List[HardwareComponent]=None, display_name: str=None, last_updated_time: datetime=None):
        """HardwareComponentGroupProperties - a model defined in OpenAPI

        :param components: The components of this HardwareComponentGroupProperties.
        :param display_name: The display_name of this HardwareComponentGroupProperties.
        :param last_updated_time: The last_updated_time of this HardwareComponentGroupProperties.
        """
        self.openapi_types = {
            'components': List[HardwareComponent],
            'display_name': str,
            'last_updated_time': datetime
        }

        self.attribute_map = {
            'components': 'components',
            'display_name': 'displayName',
            'last_updated_time': 'lastUpdatedTime'
        }

        self._components = components
        self._display_name = display_name
        self._last_updated_time = last_updated_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HardwareComponentGroupProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HardwareComponentGroupProperties of this HardwareComponentGroupProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def components(self):
        """Gets the components of this HardwareComponentGroupProperties.

        The list of hardware components.

        :return: The components of this HardwareComponentGroupProperties.
        :rtype: List[HardwareComponent]
        """
        return self._components

    @components.setter
    def components(self, components):
        """Sets the components of this HardwareComponentGroupProperties.

        The list of hardware components.

        :param components: The components of this HardwareComponentGroupProperties.
        :type components: List[HardwareComponent]
        """
        if components is None:
            raise ValueError("Invalid value for `components`, must not be `None`")

        self._components = components

    @property
    def display_name(self):
        """Gets the display_name of this HardwareComponentGroupProperties.

        The display name the hardware component group.

        :return: The display_name of this HardwareComponentGroupProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this HardwareComponentGroupProperties.

        The display name the hardware component group.

        :param display_name: The display_name of this HardwareComponentGroupProperties.
        :type display_name: str
        """
        if display_name is None:
            raise ValueError("Invalid value for `display_name`, must not be `None`")

        self._display_name = display_name

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this HardwareComponentGroupProperties.

        The last updated time.

        :return: The last_updated_time of this HardwareComponentGroupProperties.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this HardwareComponentGroupProperties.

        The last updated time.

        :param last_updated_time: The last_updated_time of this HardwareComponentGroupProperties.
        :type last_updated_time: datetime
        """
        if last_updated_time is None:
            raise ValueError("Invalid value for `last_updated_time`, must not be `None`")

        self._last_updated_time = last_updated_time
