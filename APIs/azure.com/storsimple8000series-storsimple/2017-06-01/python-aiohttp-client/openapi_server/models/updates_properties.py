# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdatesProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_update_in_progress: bool=None, last_updated_time: datetime=None, maintenance_mode_updates_available: bool=None, regular_updates_available: bool=None):
        """UpdatesProperties - a model defined in OpenAPI

        :param is_update_in_progress: The is_update_in_progress of this UpdatesProperties.
        :param last_updated_time: The last_updated_time of this UpdatesProperties.
        :param maintenance_mode_updates_available: The maintenance_mode_updates_available of this UpdatesProperties.
        :param regular_updates_available: The regular_updates_available of this UpdatesProperties.
        """
        self.openapi_types = {
            'is_update_in_progress': bool,
            'last_updated_time': datetime,
            'maintenance_mode_updates_available': bool,
            'regular_updates_available': bool
        }

        self.attribute_map = {
            'is_update_in_progress': 'isUpdateInProgress',
            'last_updated_time': 'lastUpdatedTime',
            'maintenance_mode_updates_available': 'maintenanceModeUpdatesAvailable',
            'regular_updates_available': 'regularUpdatesAvailable'
        }

        self._is_update_in_progress = is_update_in_progress
        self._last_updated_time = last_updated_time
        self._maintenance_mode_updates_available = maintenance_mode_updates_available
        self._regular_updates_available = regular_updates_available

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatesProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatesProperties of this UpdatesProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_update_in_progress(self):
        """Gets the is_update_in_progress of this UpdatesProperties.

        Indicates whether an update is in progress or not.

        :return: The is_update_in_progress of this UpdatesProperties.
        :rtype: bool
        """
        return self._is_update_in_progress

    @is_update_in_progress.setter
    def is_update_in_progress(self, is_update_in_progress):
        """Sets the is_update_in_progress of this UpdatesProperties.

        Indicates whether an update is in progress or not.

        :param is_update_in_progress: The is_update_in_progress of this UpdatesProperties.
        :type is_update_in_progress: bool
        """

        self._is_update_in_progress = is_update_in_progress

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this UpdatesProperties.

        The time when the last update was completed.

        :return: The last_updated_time of this UpdatesProperties.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this UpdatesProperties.

        The time when the last update was completed.

        :param last_updated_time: The last_updated_time of this UpdatesProperties.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def maintenance_mode_updates_available(self):
        """Gets the maintenance_mode_updates_available of this UpdatesProperties.

        Set to 'true' if maintenance mode update available.

        :return: The maintenance_mode_updates_available of this UpdatesProperties.
        :rtype: bool
        """
        return self._maintenance_mode_updates_available

    @maintenance_mode_updates_available.setter
    def maintenance_mode_updates_available(self, maintenance_mode_updates_available):
        """Sets the maintenance_mode_updates_available of this UpdatesProperties.

        Set to 'true' if maintenance mode update available.

        :param maintenance_mode_updates_available: The maintenance_mode_updates_available of this UpdatesProperties.
        :type maintenance_mode_updates_available: bool
        """

        self._maintenance_mode_updates_available = maintenance_mode_updates_available

    @property
    def regular_updates_available(self):
        """Gets the regular_updates_available of this UpdatesProperties.

        Set to 'true' if regular updates are available for the device.

        :return: The regular_updates_available of this UpdatesProperties.
        :rtype: bool
        """
        return self._regular_updates_available

    @regular_updates_available.setter
    def regular_updates_available(self, regular_updates_available):
        """Sets the regular_updates_available of this UpdatesProperties.

        Set to 'true' if regular updates are available for the device.

        :param regular_updates_available: The regular_updates_available of this UpdatesProperties.
        :type regular_updates_available: bool
        """

        self._regular_updates_available = regular_updates_available
