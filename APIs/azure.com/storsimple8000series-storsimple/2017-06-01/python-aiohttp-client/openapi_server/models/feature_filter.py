# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FeatureFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_id: str=None):
        """FeatureFilter - a model defined in OpenAPI

        :param device_id: The device_id of this FeatureFilter.
        """
        self.openapi_types = {
            'device_id': str
        }

        self.attribute_map = {
            'device_id': 'deviceId'
        }

        self._device_id = device_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeatureFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FeatureFilter of this FeatureFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_id(self):
        """Gets the device_id of this FeatureFilter.

        Specifies the device ID for which the features are required. Only 'Equality' operator is supported for this property.

        :return: The device_id of this FeatureFilter.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this FeatureFilter.

        Specifies the device ID for which the features are required. Only 'Equality' operator is supported for this property.

        :param device_id: The device_id of this FeatureFilter.
        :type device_id: str
        """

        self._device_id = device_id
