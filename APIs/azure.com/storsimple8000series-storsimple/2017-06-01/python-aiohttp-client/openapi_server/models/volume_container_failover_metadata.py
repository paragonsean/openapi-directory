# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.volume_failover_metadata import VolumeFailoverMetadata
from openapi_server import util


class VolumeContainerFailoverMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, volume_container_id: str=None, volumes: List[VolumeFailoverMetadata]=None):
        """VolumeContainerFailoverMetadata - a model defined in OpenAPI

        :param volume_container_id: The volume_container_id of this VolumeContainerFailoverMetadata.
        :param volumes: The volumes of this VolumeContainerFailoverMetadata.
        """
        self.openapi_types = {
            'volume_container_id': str,
            'volumes': List[VolumeFailoverMetadata]
        }

        self.attribute_map = {
            'volume_container_id': 'volumeContainerId',
            'volumes': 'volumes'
        }

        self._volume_container_id = volume_container_id
        self._volumes = volumes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VolumeContainerFailoverMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VolumeContainerFailoverMetadata of this VolumeContainerFailoverMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def volume_container_id(self):
        """Gets the volume_container_id of this VolumeContainerFailoverMetadata.

        The path ID of the volume container.

        :return: The volume_container_id of this VolumeContainerFailoverMetadata.
        :rtype: str
        """
        return self._volume_container_id

    @volume_container_id.setter
    def volume_container_id(self, volume_container_id):
        """Sets the volume_container_id of this VolumeContainerFailoverMetadata.

        The path ID of the volume container.

        :param volume_container_id: The volume_container_id of this VolumeContainerFailoverMetadata.
        :type volume_container_id: str
        """

        self._volume_container_id = volume_container_id

    @property
    def volumes(self):
        """Gets the volumes of this VolumeContainerFailoverMetadata.

        The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.

        :return: The volumes of this VolumeContainerFailoverMetadata.
        :rtype: List[VolumeFailoverMetadata]
        """
        return self._volumes

    @volumes.setter
    def volumes(self, volumes):
        """Sets the volumes of this VolumeContainerFailoverMetadata.

        The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.

        :param volumes: The volumes of this VolumeContainerFailoverMetadata.
        :type volumes: List[VolumeFailoverMetadata]
        """

        self._volumes = volumes
