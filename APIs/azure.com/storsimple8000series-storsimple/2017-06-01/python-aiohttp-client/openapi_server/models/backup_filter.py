# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BackupFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_policy_id: str=None, created_time: datetime=None, volume_id: str=None):
        """BackupFilter - a model defined in OpenAPI

        :param backup_policy_id: The backup_policy_id of this BackupFilter.
        :param created_time: The created_time of this BackupFilter.
        :param volume_id: The volume_id of this BackupFilter.
        """
        self.openapi_types = {
            'backup_policy_id': str,
            'created_time': datetime,
            'volume_id': str
        }

        self.attribute_map = {
            'backup_policy_id': 'backupPolicyId',
            'created_time': 'createdTime',
            'volume_id': 'volumeId'
        }

        self._backup_policy_id = backup_policy_id
        self._created_time = created_time
        self._volume_id = volume_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackupFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackupFilter of this BackupFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_policy_id(self):
        """Gets the backup_policy_id of this BackupFilter.

        Specifies the backupPolicyId of the backups to be filtered. Only 'Equality' operator is supported for this property.

        :return: The backup_policy_id of this BackupFilter.
        :rtype: str
        """
        return self._backup_policy_id

    @backup_policy_id.setter
    def backup_policy_id(self, backup_policy_id):
        """Sets the backup_policy_id of this BackupFilter.

        Specifies the backupPolicyId of the backups to be filtered. Only 'Equality' operator is supported for this property.

        :param backup_policy_id: The backup_policy_id of this BackupFilter.
        :type backup_policy_id: str
        """

        self._backup_policy_id = backup_policy_id

    @property
    def created_time(self):
        """Gets the created_time of this BackupFilter.

        Specifies the creation time of the backups to be filtered. Only 'Greater Than or Equal To' and 'Lesser Than or Equal To' operators are supported for this property.

        :return: The created_time of this BackupFilter.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this BackupFilter.

        Specifies the creation time of the backups to be filtered. Only 'Greater Than or Equal To' and 'Lesser Than or Equal To' operators are supported for this property.

        :param created_time: The created_time of this BackupFilter.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def volume_id(self):
        """Gets the volume_id of this BackupFilter.

        Specifies the volumeId of the backups to be filtered. Only 'Equality' operator is supported for this property.

        :return: The volume_id of this BackupFilter.
        :rtype: str
        """
        return self._volume_id

    @volume_id.setter
    def volume_id(self, volume_id):
        """Sets the volume_id of this BackupFilter.

        Specifies the volumeId of the backups to be filtered. Only 'Equality' operator is supported for this property.

        :param volume_id: The volume_id of this BackupFilter.
        :type volume_id: str
        """

        self._volume_id = volume_id
