# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_type: str=None, start_time: datetime=None, status: str=None):
        """JobFilter - a model defined in OpenAPI

        :param job_type: The job_type of this JobFilter.
        :param start_time: The start_time of this JobFilter.
        :param status: The status of this JobFilter.
        """
        self.openapi_types = {
            'job_type': str,
            'start_time': datetime,
            'status': str
        }

        self.attribute_map = {
            'job_type': 'jobType',
            'start_time': 'startTime',
            'status': 'status'
        }

        self._job_type = job_type
        self._start_time = start_time
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobFilter of this JobFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_type(self):
        """Gets the job_type of this JobFilter.

        Specifies the type of the jobs to be filtered. For e.g., \"ScheduledBackup\", \"ManualBackup\", \"RestoreBackup\", \"CloneVolume\", \"FailoverVolumeContainers\", \"CreateLocallyPinnedVolume\", \"ModifyVolume\", \"InstallUpdates\", \"SupportPackageLogs\", or \"CreateCloudAppliance\". Only 'Equality' operator can be used for this property.

        :return: The job_type of this JobFilter.
        :rtype: str
        """
        return self._job_type

    @job_type.setter
    def job_type(self, job_type):
        """Sets the job_type of this JobFilter.

        Specifies the type of the jobs to be filtered. For e.g., \"ScheduledBackup\", \"ManualBackup\", \"RestoreBackup\", \"CloneVolume\", \"FailoverVolumeContainers\", \"CreateLocallyPinnedVolume\", \"ModifyVolume\", \"InstallUpdates\", \"SupportPackageLogs\", or \"CreateCloudAppliance\". Only 'Equality' operator can be used for this property.

        :param job_type: The job_type of this JobFilter.
        :type job_type: str
        """

        self._job_type = job_type

    @property
    def start_time(self):
        """Gets the start_time of this JobFilter.

        Specifies the start time of the jobs to be filtered.  Only 'Greater Than or Equal To' and 'Lesser Than or Equal To' operators are supported for this property.

        :return: The start_time of this JobFilter.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this JobFilter.

        Specifies the start time of the jobs to be filtered.  Only 'Greater Than or Equal To' and 'Lesser Than or Equal To' operators are supported for this property.

        :param start_time: The start_time of this JobFilter.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def status(self):
        """Gets the status of this JobFilter.

        Specifies the status of the jobs to be filtered. For e.g., \"Running\", \"Succeeded\", \"Failed\" or \"Canceled\". Only 'Equality' operator is supported for this property.

        :return: The status of this JobFilter.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this JobFilter.

        Specifies the status of the jobs to be filtered. For e.g., \"Running\", \"Succeeded\", \"Failed\" or \"Canceled\". Only 'Equality' operator is supported for this property.

        :param status: The status of this JobFilter.
        :type status: str
        """

        self._status = status
