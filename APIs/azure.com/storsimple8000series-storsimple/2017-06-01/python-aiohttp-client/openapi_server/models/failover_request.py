# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FailoverRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_device_id: str=None, volume_containers: List[str]=None):
        """FailoverRequest - a model defined in OpenAPI

        :param target_device_id: The target_device_id of this FailoverRequest.
        :param volume_containers: The volume_containers of this FailoverRequest.
        """
        self.openapi_types = {
            'target_device_id': str,
            'volume_containers': List[str]
        }

        self.attribute_map = {
            'target_device_id': 'targetDeviceId',
            'volume_containers': 'volumeContainers'
        }

        self._target_device_id = target_device_id
        self._volume_containers = volume_containers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailoverRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailoverRequest of this FailoverRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_device_id(self):
        """Gets the target_device_id of this FailoverRequest.

        The ARM path ID of the device which will act as the failover target.

        :return: The target_device_id of this FailoverRequest.
        :rtype: str
        """
        return self._target_device_id

    @target_device_id.setter
    def target_device_id(self, target_device_id):
        """Sets the target_device_id of this FailoverRequest.

        The ARM path ID of the device which will act as the failover target.

        :param target_device_id: The target_device_id of this FailoverRequest.
        :type target_device_id: str
        """

        self._target_device_id = target_device_id

    @property
    def volume_containers(self):
        """Gets the volume_containers of this FailoverRequest.

        The list of path IDs of the volume containers which needs to be failed-over to the target device.

        :return: The volume_containers of this FailoverRequest.
        :rtype: List[str]
        """
        return self._volume_containers

    @volume_containers.setter
    def volume_containers(self, volume_containers):
        """Sets the volume_containers of this FailoverRequest.

        The list of path IDs of the volume containers which needs to be failed-over to the target device.

        :param volume_containers: The volume_containers of this FailoverRequest.
        :type volume_containers: List[str]
        """

        self._volume_containers = volume_containers
