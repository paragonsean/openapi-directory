# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AlertNotificationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_recipient_email_list: List[str]=None, alert_notification_culture: str=None, email_notification: str=None, notification_to_service_owners: str=None):
        """AlertNotificationProperties - a model defined in OpenAPI

        :param additional_recipient_email_list: The additional_recipient_email_list of this AlertNotificationProperties.
        :param alert_notification_culture: The alert_notification_culture of this AlertNotificationProperties.
        :param email_notification: The email_notification of this AlertNotificationProperties.
        :param notification_to_service_owners: The notification_to_service_owners of this AlertNotificationProperties.
        """
        self.openapi_types = {
            'additional_recipient_email_list': List[str],
            'alert_notification_culture': str,
            'email_notification': str,
            'notification_to_service_owners': str
        }

        self.attribute_map = {
            'additional_recipient_email_list': 'additionalRecipientEmailList',
            'alert_notification_culture': 'alertNotificationCulture',
            'email_notification': 'emailNotification',
            'notification_to_service_owners': 'notificationToServiceOwners'
        }

        self._additional_recipient_email_list = additional_recipient_email_list
        self._alert_notification_culture = alert_notification_culture
        self._email_notification = email_notification
        self._notification_to_service_owners = notification_to_service_owners

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertNotificationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertNotificationProperties of this AlertNotificationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_recipient_email_list(self):
        """Gets the additional_recipient_email_list of this AlertNotificationProperties.

        The alert notification email list.

        :return: The additional_recipient_email_list of this AlertNotificationProperties.
        :rtype: List[str]
        """
        return self._additional_recipient_email_list

    @additional_recipient_email_list.setter
    def additional_recipient_email_list(self, additional_recipient_email_list):
        """Sets the additional_recipient_email_list of this AlertNotificationProperties.

        The alert notification email list.

        :param additional_recipient_email_list: The additional_recipient_email_list of this AlertNotificationProperties.
        :type additional_recipient_email_list: List[str]
        """

        self._additional_recipient_email_list = additional_recipient_email_list

    @property
    def alert_notification_culture(self):
        """Gets the alert_notification_culture of this AlertNotificationProperties.

        The alert notification culture.

        :return: The alert_notification_culture of this AlertNotificationProperties.
        :rtype: str
        """
        return self._alert_notification_culture

    @alert_notification_culture.setter
    def alert_notification_culture(self, alert_notification_culture):
        """Sets the alert_notification_culture of this AlertNotificationProperties.

        The alert notification culture.

        :param alert_notification_culture: The alert_notification_culture of this AlertNotificationProperties.
        :type alert_notification_culture: str
        """

        self._alert_notification_culture = alert_notification_culture

    @property
    def email_notification(self):
        """Gets the email_notification of this AlertNotificationProperties.

        Indicates whether email notification enabled or not.

        :return: The email_notification of this AlertNotificationProperties.
        :rtype: str
        """
        return self._email_notification

    @email_notification.setter
    def email_notification(self, email_notification):
        """Sets the email_notification of this AlertNotificationProperties.

        Indicates whether email notification enabled or not.

        :param email_notification: The email_notification of this AlertNotificationProperties.
        :type email_notification: str
        """
        allowed_values = ["Enabled", "Disabled"]  # noqa: E501
        if email_notification not in allowed_values:
            raise ValueError(
                "Invalid value for `email_notification` ({0}), must be one of {1}"
                .format(email_notification, allowed_values)
            )

        self._email_notification = email_notification

    @property
    def notification_to_service_owners(self):
        """Gets the notification_to_service_owners of this AlertNotificationProperties.

        The value indicating whether alert notification enabled for admin or not.

        :return: The notification_to_service_owners of this AlertNotificationProperties.
        :rtype: str
        """
        return self._notification_to_service_owners

    @notification_to_service_owners.setter
    def notification_to_service_owners(self, notification_to_service_owners):
        """Sets the notification_to_service_owners of this AlertNotificationProperties.

        The value indicating whether alert notification enabled for admin or not.

        :param notification_to_service_owners: The notification_to_service_owners of this AlertNotificationProperties.
        :type notification_to_service_owners: str
        """
        allowed_values = ["Enabled", "Disabled"]  # noqa: E501
        if notification_to_service_owners not in allowed_values:
            raise ValueError(
                "Invalid value for `notification_to_service_owners` ({0}), must be one of {1}"
                .format(notification_to_service_owners, allowed_values)
            )

        self._notification_to_service_owners = notification_to_service_owners
