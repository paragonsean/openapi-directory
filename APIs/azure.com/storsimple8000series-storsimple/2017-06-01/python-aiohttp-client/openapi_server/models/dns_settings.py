# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DNSSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, primary_dns_server: str=None, primary_ipv6_dns_server: str=None, secondary_dns_servers: List[str]=None, secondary_ipv6_dns_servers: List[str]=None):
        """DNSSettings - a model defined in OpenAPI

        :param primary_dns_server: The primary_dns_server of this DNSSettings.
        :param primary_ipv6_dns_server: The primary_ipv6_dns_server of this DNSSettings.
        :param secondary_dns_servers: The secondary_dns_servers of this DNSSettings.
        :param secondary_ipv6_dns_servers: The secondary_ipv6_dns_servers of this DNSSettings.
        """
        self.openapi_types = {
            'primary_dns_server': str,
            'primary_ipv6_dns_server': str,
            'secondary_dns_servers': List[str],
            'secondary_ipv6_dns_servers': List[str]
        }

        self.attribute_map = {
            'primary_dns_server': 'primaryDnsServer',
            'primary_ipv6_dns_server': 'primaryIpv6DnsServer',
            'secondary_dns_servers': 'secondaryDnsServers',
            'secondary_ipv6_dns_servers': 'secondaryIpv6DnsServers'
        }

        self._primary_dns_server = primary_dns_server
        self._primary_ipv6_dns_server = primary_ipv6_dns_server
        self._secondary_dns_servers = secondary_dns_servers
        self._secondary_ipv6_dns_servers = secondary_ipv6_dns_servers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DNSSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DNSSettings of this DNSSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def primary_dns_server(self):
        """Gets the primary_dns_server of this DNSSettings.

        The primary IPv4 DNS server for the device

        :return: The primary_dns_server of this DNSSettings.
        :rtype: str
        """
        return self._primary_dns_server

    @primary_dns_server.setter
    def primary_dns_server(self, primary_dns_server):
        """Sets the primary_dns_server of this DNSSettings.

        The primary IPv4 DNS server for the device

        :param primary_dns_server: The primary_dns_server of this DNSSettings.
        :type primary_dns_server: str
        """

        self._primary_dns_server = primary_dns_server

    @property
    def primary_ipv6_dns_server(self):
        """Gets the primary_ipv6_dns_server of this DNSSettings.

        The primary IPv6 DNS server for the device

        :return: The primary_ipv6_dns_server of this DNSSettings.
        :rtype: str
        """
        return self._primary_ipv6_dns_server

    @primary_ipv6_dns_server.setter
    def primary_ipv6_dns_server(self, primary_ipv6_dns_server):
        """Sets the primary_ipv6_dns_server of this DNSSettings.

        The primary IPv6 DNS server for the device

        :param primary_ipv6_dns_server: The primary_ipv6_dns_server of this DNSSettings.
        :type primary_ipv6_dns_server: str
        """

        self._primary_ipv6_dns_server = primary_ipv6_dns_server

    @property
    def secondary_dns_servers(self):
        """Gets the secondary_dns_servers of this DNSSettings.

        The secondary IPv4 DNS server for the device

        :return: The secondary_dns_servers of this DNSSettings.
        :rtype: List[str]
        """
        return self._secondary_dns_servers

    @secondary_dns_servers.setter
    def secondary_dns_servers(self, secondary_dns_servers):
        """Sets the secondary_dns_servers of this DNSSettings.

        The secondary IPv4 DNS server for the device

        :param secondary_dns_servers: The secondary_dns_servers of this DNSSettings.
        :type secondary_dns_servers: List[str]
        """

        self._secondary_dns_servers = secondary_dns_servers

    @property
    def secondary_ipv6_dns_servers(self):
        """Gets the secondary_ipv6_dns_servers of this DNSSettings.

        The secondary IPv6 DNS server for the device

        :return: The secondary_ipv6_dns_servers of this DNSSettings.
        :rtype: List[str]
        """
        return self._secondary_ipv6_dns_servers

    @secondary_ipv6_dns_servers.setter
    def secondary_ipv6_dns_servers(self, secondary_ipv6_dns_servers):
        """Sets the secondary_ipv6_dns_servers of this DNSSettings.

        The secondary IPv6 DNS server for the device

        :param secondary_ipv6_dns_servers: The secondary_ipv6_dns_servers of this DNSSettings.
        :type secondary_ipv6_dns_servers: List[str]
        """

        self._secondary_ipv6_dns_servers = secondary_ipv6_dns_servers
