/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloudAppliance.h
 *
 * The cloud appliance.
 */

#ifndef OAICloudAppliance_H
#define OAICloudAppliance_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICloudAppliance : public OAIObject {
public:
    OAICloudAppliance();
    OAICloudAppliance(QString json);
    ~OAICloudAppliance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsVnetDnsConfigured() const;
    void setIsVnetDnsConfigured(const bool &is_vnet_dns_configured);
    bool is_is_vnet_dns_configured_Set() const;
    bool is_is_vnet_dns_configured_Valid() const;

    bool isIsVnetExpressConfigured() const;
    void setIsVnetExpressConfigured(const bool &is_vnet_express_configured);
    bool is_is_vnet_express_configured_Set() const;
    bool is_is_vnet_express_configured_Valid() const;

    QString getModelNumber() const;
    void setModelNumber(const QString &model_number);
    bool is_model_number_Set() const;
    bool is_model_number_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getStorageAccountName() const;
    void setStorageAccountName(const QString &storage_account_name);
    bool is_storage_account_name_Set() const;
    bool is_storage_account_name_Valid() const;

    QString getStorageAccountType() const;
    void setStorageAccountType(const QString &storage_account_type);
    bool is_storage_account_type_Set() const;
    bool is_storage_account_type_Valid() const;

    QString getSubnetName() const;
    void setSubnetName(const QString &subnet_name);
    bool is_subnet_name_Set() const;
    bool is_subnet_name_Valid() const;

    QString getVmImageName() const;
    void setVmImageName(const QString &vm_image_name);
    bool is_vm_image_name_Set() const;
    bool is_vm_image_name_Valid() const;

    QString getVmType() const;
    void setVmType(const QString &vm_type);
    bool is_vm_type_Set() const;
    bool is_vm_type_Valid() const;

    QString getVnetName() const;
    void setVnetName(const QString &vnet_name);
    bool is_vnet_name_Set() const;
    bool is_vnet_name_Valid() const;

    QString getVnetRegion() const;
    void setVnetRegion(const QString &vnet_region);
    bool is_vnet_region_Set() const;
    bool is_vnet_region_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_vnet_dns_configured;
    bool m_is_vnet_dns_configured_isSet;
    bool m_is_vnet_dns_configured_isValid;

    bool m_is_vnet_express_configured;
    bool m_is_vnet_express_configured_isSet;
    bool m_is_vnet_express_configured_isValid;

    QString m_model_number;
    bool m_model_number_isSet;
    bool m_model_number_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_storage_account_name;
    bool m_storage_account_name_isSet;
    bool m_storage_account_name_isValid;

    QString m_storage_account_type;
    bool m_storage_account_type_isSet;
    bool m_storage_account_type_isValid;

    QString m_subnet_name;
    bool m_subnet_name_isSet;
    bool m_subnet_name_isValid;

    QString m_vm_image_name;
    bool m_vm_image_name_isSet;
    bool m_vm_image_name_isValid;

    QString m_vm_type;
    bool m_vm_type_isSet;
    bool m_vm_type_isValid;

    QString m_vnet_name;
    bool m_vnet_name_isSet;
    bool m_vnet_name_isValid;

    QString m_vnet_region;
    bool m_vnet_region_isSet;
    bool m_vnet_region_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloudAppliance)

#endif // OAICloudAppliance_H
