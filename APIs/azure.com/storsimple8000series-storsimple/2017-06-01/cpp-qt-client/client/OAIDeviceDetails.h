/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceDetails.h
 *
 * The additional device details regarding the end point count and volume container count.
 */

#ifndef OAIDeviceDetails_H
#define OAIDeviceDetails_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeviceDetails : public OAIObject {
public:
    OAIDeviceDetails();
    OAIDeviceDetails(QString json);
    ~OAIDeviceDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEndpointCount() const;
    void setEndpointCount(const qint32 &endpoint_count);
    bool is_endpoint_count_Set() const;
    bool is_endpoint_count_Valid() const;

    qint32 getVolumeContainerCount() const;
    void setVolumeContainerCount(const qint32 &volume_container_count);
    bool is_volume_container_count_Set() const;
    bool is_volume_container_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_endpoint_count;
    bool m_endpoint_count_isSet;
    bool m_endpoint_count_isValid;

    qint32 m_volume_container_count;
    bool m_volume_container_count_isSet;
    bool m_volume_container_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceDetails)

#endif // OAIDeviceDetails_H
