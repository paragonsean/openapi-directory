/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceRolloverDetails.h
 *
 * The additional device details for the service data encryption key rollover.
 */

#ifndef OAIDeviceRolloverDetails_H
#define OAIDeviceRolloverDetails_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeviceRolloverDetails : public OAIObject {
public:
    OAIDeviceRolloverDetails();
    OAIDeviceRolloverDetails(QString json);
    ~OAIDeviceRolloverDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthorizationEligibility() const;
    void setAuthorizationEligibility(const QString &authorization_eligibility);
    bool is_authorization_eligibility_Set() const;
    bool is_authorization_eligibility_Valid() const;

    QString getAuthorizationStatus() const;
    void setAuthorizationStatus(const QString &authorization_status);
    bool is_authorization_status_Set() const;
    bool is_authorization_status_Valid() const;

    QString getInEligibilityReason() const;
    void setInEligibilityReason(const QString &in_eligibility_reason);
    bool is_in_eligibility_reason_Set() const;
    bool is_in_eligibility_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authorization_eligibility;
    bool m_authorization_eligibility_isSet;
    bool m_authorization_eligibility_isValid;

    QString m_authorization_status;
    bool m_authorization_status_isSet;
    bool m_authorization_status_isValid;

    QString m_in_eligibility_reason;
    bool m_in_eligibility_reason_isSet;
    bool m_in_eligibility_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceRolloverDetails)

#endif // OAIDeviceRolloverDetails_H
