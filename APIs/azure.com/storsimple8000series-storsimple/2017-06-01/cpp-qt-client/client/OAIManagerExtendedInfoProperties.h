/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManagerExtendedInfoProperties.h
 *
 * The properties of the manager extended info.
 */

#ifndef OAIManagerExtendedInfoProperties_H
#define OAIManagerExtendedInfoProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIManagerExtendedInfoProperties : public OAIObject {
public:
    OAIManagerExtendedInfoProperties();
    OAIManagerExtendedInfoProperties(QString json);
    ~OAIManagerExtendedInfoProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlgorithm() const;
    void setAlgorithm(const QString &algorithm);
    bool is_algorithm_Set() const;
    bool is_algorithm_Valid() const;

    QString getEncryptionKey() const;
    void setEncryptionKey(const QString &encryption_key);
    bool is_encryption_key_Set() const;
    bool is_encryption_key_Valid() const;

    QString getEncryptionKeyThumbprint() const;
    void setEncryptionKeyThumbprint(const QString &encryption_key_thumbprint);
    bool is_encryption_key_thumbprint_Set() const;
    bool is_encryption_key_thumbprint_Valid() const;

    QString getIntegrityKey() const;
    void setIntegrityKey(const QString &integrity_key);
    bool is_integrity_key_Set() const;
    bool is_integrity_key_Valid() const;

    QString getPortalCertificateThumbprint() const;
    void setPortalCertificateThumbprint(const QString &portal_certificate_thumbprint);
    bool is_portal_certificate_thumbprint_Set() const;
    bool is_portal_certificate_thumbprint_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_algorithm;
    bool m_algorithm_isSet;
    bool m_algorithm_isValid;

    QString m_encryption_key;
    bool m_encryption_key_isSet;
    bool m_encryption_key_isValid;

    QString m_encryption_key_thumbprint;
    bool m_encryption_key_thumbprint_isSet;
    bool m_encryption_key_thumbprint_isValid;

    QString m_integrity_key;
    bool m_integrity_key_isSet;
    bool m_integrity_key_isValid;

    QString m_portal_certificate_thumbprint;
    bool m_portal_certificate_thumbprint_isSet;
    bool m_portal_certificate_thumbprint_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManagerExtendedInfoProperties)

#endif // OAIManagerExtendedInfoProperties_H
