/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBackupElement.h
 *
 * The backup element.
 */

#ifndef OAIBackupElement_H
#define OAIBackupElement_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBackupElement : public OAIObject {
public:
    OAIBackupElement();
    OAIBackupElement(QString json);
    ~OAIBackupElement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getElementId() const;
    void setElementId(const QString &element_id);
    bool is_element_id_Set() const;
    bool is_element_id_Valid() const;

    QString getElementName() const;
    void setElementName(const QString &element_name);
    bool is_element_name_Set() const;
    bool is_element_name_Valid() const;

    QString getElementType() const;
    void setElementType(const QString &element_type);
    bool is_element_type_Set() const;
    bool is_element_type_Valid() const;

    qint64 getSizeInBytes() const;
    void setSizeInBytes(const qint64 &size_in_bytes);
    bool is_size_in_bytes_Set() const;
    bool is_size_in_bytes_Valid() const;

    QString getVolumeContainerId() const;
    void setVolumeContainerId(const QString &volume_container_id);
    bool is_volume_container_id_Set() const;
    bool is_volume_container_id_Valid() const;

    QString getVolumeName() const;
    void setVolumeName(const QString &volume_name);
    bool is_volume_name_Set() const;
    bool is_volume_name_Valid() const;

    QString getVolumeType() const;
    void setVolumeType(const QString &volume_type);
    bool is_volume_type_Set() const;
    bool is_volume_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_element_id;
    bool m_element_id_isSet;
    bool m_element_id_isValid;

    QString m_element_name;
    bool m_element_name_isSet;
    bool m_element_name_isValid;

    QString m_element_type;
    bool m_element_type_isSet;
    bool m_element_type_isValid;

    qint64 m_size_in_bytes;
    bool m_size_in_bytes_isSet;
    bool m_size_in_bytes_isValid;

    QString m_volume_container_id;
    bool m_volume_container_id_isSet;
    bool m_volume_container_id_isValid;

    QString m_volume_name;
    bool m_volume_name_isSet;
    bool m_volume_name_isValid;

    QString m_volume_type;
    bool m_volume_type_isSet;
    bool m_volume_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBackupElement)

#endif // OAIBackupElement_H
