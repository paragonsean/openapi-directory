/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChapSettings.h
 *
 * The Challenge-Handshake Authentication Protocol (CHAP) settings.
 */

#ifndef OAIChapSettings_H
#define OAIChapSettings_H

#include <QJsonObject>

#include "OAIAsymmetricEncryptedSecret.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAsymmetricEncryptedSecret;

class OAIChapSettings : public OAIObject {
public:
    OAIChapSettings();
    OAIChapSettings(QString json);
    ~OAIChapSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAsymmetricEncryptedSecret getInitiatorSecret() const;
    void setInitiatorSecret(const OAIAsymmetricEncryptedSecret &initiator_secret);
    bool is_initiator_secret_Set() const;
    bool is_initiator_secret_Valid() const;

    QString getInitiatorUser() const;
    void setInitiatorUser(const QString &initiator_user);
    bool is_initiator_user_Set() const;
    bool is_initiator_user_Valid() const;

    OAIAsymmetricEncryptedSecret getTargetSecret() const;
    void setTargetSecret(const OAIAsymmetricEncryptedSecret &target_secret);
    bool is_target_secret_Set() const;
    bool is_target_secret_Valid() const;

    QString getTargetUser() const;
    void setTargetUser(const QString &target_user);
    bool is_target_user_Set() const;
    bool is_target_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAsymmetricEncryptedSecret m_initiator_secret;
    bool m_initiator_secret_isSet;
    bool m_initiator_secret_isValid;

    QString m_initiator_user;
    bool m_initiator_user_isSet;
    bool m_initiator_user_isValid;

    OAIAsymmetricEncryptedSecret m_target_secret;
    bool m_target_secret_isSet;
    bool m_target_secret_isValid;

    QString m_target_user;
    bool m_target_user_isSet;
    bool m_target_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChapSettings)

#endif // OAIChapSettings_H
