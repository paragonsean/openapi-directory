/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVolumeFailoverMetadata.h
 *
 * The metadata of a volume that has valid cloud snapshot.
 */

#ifndef OAIVolumeFailoverMetadata_H
#define OAIVolumeFailoverMetadata_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVolumeFailoverMetadata : public OAIObject {
public:
    OAIVolumeFailoverMetadata();
    OAIVolumeFailoverMetadata(QString json);
    ~OAIVolumeFailoverMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getBackupCreatedDate() const;
    void setBackupCreatedDate(const QDateTime &backup_created_date);
    bool is_backup_created_date_Set() const;
    bool is_backup_created_date_Valid() const;

    QString getBackupElementId() const;
    void setBackupElementId(const QString &backup_element_id);
    bool is_backup_element_id_Set() const;
    bool is_backup_element_id_Valid() const;

    QString getBackupId() const;
    void setBackupId(const QString &backup_id);
    bool is_backup_id_Set() const;
    bool is_backup_id_Valid() const;

    QString getBackupPolicyId() const;
    void setBackupPolicyId(const QString &backup_policy_id);
    bool is_backup_policy_id_Set() const;
    bool is_backup_policy_id_Valid() const;

    qint64 getSizeInBytes() const;
    void setSizeInBytes(const qint64 &size_in_bytes);
    bool is_size_in_bytes_Set() const;
    bool is_size_in_bytes_Valid() const;

    QString getVolumeId() const;
    void setVolumeId(const QString &volume_id);
    bool is_volume_id_Set() const;
    bool is_volume_id_Valid() const;

    QString getVolumeType() const;
    void setVolumeType(const QString &volume_type);
    bool is_volume_type_Set() const;
    bool is_volume_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_backup_created_date;
    bool m_backup_created_date_isSet;
    bool m_backup_created_date_isValid;

    QString m_backup_element_id;
    bool m_backup_element_id_isSet;
    bool m_backup_element_id_isValid;

    QString m_backup_id;
    bool m_backup_id_isSet;
    bool m_backup_id_isValid;

    QString m_backup_policy_id;
    bool m_backup_policy_id_isSet;
    bool m_backup_policy_id_isValid;

    qint64 m_size_in_bytes;
    bool m_size_in_bytes_isSet;
    bool m_size_in_bytes_isValid;

    QString m_volume_id;
    bool m_volume_id_isSet;
    bool m_volume_id_isValid;

    QString m_volume_type;
    bool m_volume_type_isSet;
    bool m_volume_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVolumeFailoverMetadata)

#endif // OAIVolumeFailoverMetadata_H
