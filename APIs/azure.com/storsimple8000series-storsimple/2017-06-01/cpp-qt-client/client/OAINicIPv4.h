/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINicIPv4.h
 *
 * Details related to the IPv4 address configuration.
 */

#ifndef OAINicIPv4_H
#define OAINicIPv4_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINicIPv4 : public OAIObject {
public:
    OAINicIPv4();
    OAINicIPv4(QString json);
    ~OAINicIPv4() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getController0Ipv4Address() const;
    void setController0Ipv4Address(const QString &controller0_ipv4_address);
    bool is_controller0_ipv4_address_Set() const;
    bool is_controller0_ipv4_address_Valid() const;

    QString getController1Ipv4Address() const;
    void setController1Ipv4Address(const QString &controller1_ipv4_address);
    bool is_controller1_ipv4_address_Set() const;
    bool is_controller1_ipv4_address_Valid() const;

    QString getIpv4Address() const;
    void setIpv4Address(const QString &ipv4_address);
    bool is_ipv4_address_Set() const;
    bool is_ipv4_address_Valid() const;

    QString getIpv4Gateway() const;
    void setIpv4Gateway(const QString &ipv4_gateway);
    bool is_ipv4_gateway_Set() const;
    bool is_ipv4_gateway_Valid() const;

    QString getIpv4Netmask() const;
    void setIpv4Netmask(const QString &ipv4_netmask);
    bool is_ipv4_netmask_Set() const;
    bool is_ipv4_netmask_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_controller0_ipv4_address;
    bool m_controller0_ipv4_address_isSet;
    bool m_controller0_ipv4_address_isValid;

    QString m_controller1_ipv4_address;
    bool m_controller1_ipv4_address_isSet;
    bool m_controller1_ipv4_address_isValid;

    QString m_ipv4_address;
    bool m_ipv4_address_isSet;
    bool m_ipv4_address_isValid;

    QString m_ipv4_gateway;
    bool m_ipv4_gateway_isSet;
    bool m_ipv4_gateway_isValid;

    QString m_ipv4_netmask;
    bool m_ipv4_netmask_isSet;
    bool m_ipv4_netmask_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINicIPv4)

#endif // OAINicIPv4_H
