/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVolumeContainerProperties.h
 *
 * The properties of volume container.
 */

#ifndef OAIVolumeContainerProperties_H
#define OAIVolumeContainerProperties_H

#include <QJsonObject>

#include "OAIAsymmetricEncryptedSecret.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAsymmetricEncryptedSecret;

class OAIVolumeContainerProperties : public OAIObject {
public:
    OAIVolumeContainerProperties();
    OAIVolumeContainerProperties(QString json);
    ~OAIVolumeContainerProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBandWidthRateInMbps() const;
    void setBandWidthRateInMbps(const qint32 &band_width_rate_in_mbps);
    bool is_band_width_rate_in_mbps_Set() const;
    bool is_band_width_rate_in_mbps_Valid() const;

    QString getBandwidthSettingId() const;
    void setBandwidthSettingId(const QString &bandwidth_setting_id);
    bool is_bandwidth_setting_id_Set() const;
    bool is_bandwidth_setting_id_Valid() const;

    OAIAsymmetricEncryptedSecret getEncryptionKey() const;
    void setEncryptionKey(const OAIAsymmetricEncryptedSecret &encryption_key);
    bool is_encryption_key_Set() const;
    bool is_encryption_key_Valid() const;

    QString getEncryptionStatus() const;
    void setEncryptionStatus(const QString &encryption_status);
    bool is_encryption_status_Set() const;
    bool is_encryption_status_Valid() const;

    QString getOwnerShipStatus() const;
    void setOwnerShipStatus(const QString &owner_ship_status);
    bool is_owner_ship_status_Set() const;
    bool is_owner_ship_status_Valid() const;

    QString getStorageAccountCredentialId() const;
    void setStorageAccountCredentialId(const QString &storage_account_credential_id);
    bool is_storage_account_credential_id_Set() const;
    bool is_storage_account_credential_id_Valid() const;

    qint64 getTotalCloudStorageUsageInBytes() const;
    void setTotalCloudStorageUsageInBytes(const qint64 &total_cloud_storage_usage_in_bytes);
    bool is_total_cloud_storage_usage_in_bytes_Set() const;
    bool is_total_cloud_storage_usage_in_bytes_Valid() const;

    qint32 getVolumeCount() const;
    void setVolumeCount(const qint32 &volume_count);
    bool is_volume_count_Set() const;
    bool is_volume_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_band_width_rate_in_mbps;
    bool m_band_width_rate_in_mbps_isSet;
    bool m_band_width_rate_in_mbps_isValid;

    QString m_bandwidth_setting_id;
    bool m_bandwidth_setting_id_isSet;
    bool m_bandwidth_setting_id_isValid;

    OAIAsymmetricEncryptedSecret m_encryption_key;
    bool m_encryption_key_isSet;
    bool m_encryption_key_isValid;

    QString m_encryption_status;
    bool m_encryption_status_isSet;
    bool m_encryption_status_isValid;

    QString m_owner_ship_status;
    bool m_owner_ship_status_isSet;
    bool m_owner_ship_status_isValid;

    QString m_storage_account_credential_id;
    bool m_storage_account_credential_id_isSet;
    bool m_storage_account_credential_id_isValid;

    qint64 m_total_cloud_storage_usage_in_bytes;
    bool m_total_cloud_storage_usage_in_bytes_isSet;
    bool m_total_cloud_storage_usage_in_bytes_isValid;

    qint32 m_volume_count;
    bool m_volume_count_isSet;
    bool m_volume_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVolumeContainerProperties)

#endif // OAIVolumeContainerProperties_H
