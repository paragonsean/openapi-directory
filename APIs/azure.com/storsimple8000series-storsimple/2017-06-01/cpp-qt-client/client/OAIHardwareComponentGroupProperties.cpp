/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHardwareComponentGroupProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHardwareComponentGroupProperties::OAIHardwareComponentGroupProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHardwareComponentGroupProperties::OAIHardwareComponentGroupProperties() {
    this->initializeModel();
}

OAIHardwareComponentGroupProperties::~OAIHardwareComponentGroupProperties() {}

void OAIHardwareComponentGroupProperties::initializeModel() {

    m_components_isSet = false;
    m_components_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_last_updated_time_isSet = false;
    m_last_updated_time_isValid = false;
}

void OAIHardwareComponentGroupProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHardwareComponentGroupProperties::fromJsonObject(QJsonObject json) {

    m_components_isValid = ::OpenAPI::fromJsonValue(m_components, json[QString("components")]);
    m_components_isSet = !json[QString("components")].isNull() && m_components_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_last_updated_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_time, json[QString("lastUpdatedTime")]);
    m_last_updated_time_isSet = !json[QString("lastUpdatedTime")].isNull() && m_last_updated_time_isValid;
}

QString OAIHardwareComponentGroupProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHardwareComponentGroupProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_components.size() > 0) {
        obj.insert(QString("components"), ::OpenAPI::toJsonValue(m_components));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_last_updated_time_isSet) {
        obj.insert(QString("lastUpdatedTime"), ::OpenAPI::toJsonValue(m_last_updated_time));
    }
    return obj;
}

QList<OAIHardwareComponent> OAIHardwareComponentGroupProperties::getComponents() const {
    return m_components;
}
void OAIHardwareComponentGroupProperties::setComponents(const QList<OAIHardwareComponent> &components) {
    m_components = components;
    m_components_isSet = true;
}

bool OAIHardwareComponentGroupProperties::is_components_Set() const{
    return m_components_isSet;
}

bool OAIHardwareComponentGroupProperties::is_components_Valid() const{
    return m_components_isValid;
}

QString OAIHardwareComponentGroupProperties::getDisplayName() const {
    return m_display_name;
}
void OAIHardwareComponentGroupProperties::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIHardwareComponentGroupProperties::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIHardwareComponentGroupProperties::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QDateTime OAIHardwareComponentGroupProperties::getLastUpdatedTime() const {
    return m_last_updated_time;
}
void OAIHardwareComponentGroupProperties::setLastUpdatedTime(const QDateTime &last_updated_time) {
    m_last_updated_time = last_updated_time;
    m_last_updated_time_isSet = true;
}

bool OAIHardwareComponentGroupProperties::is_last_updated_time_Set() const{
    return m_last_updated_time_isSet;
}

bool OAIHardwareComponentGroupProperties::is_last_updated_time_Valid() const{
    return m_last_updated_time_isValid;
}

bool OAIHardwareComponentGroupProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_components.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHardwareComponentGroupProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_components_isValid && m_display_name_isValid && m_last_updated_time_isValid && true;
}

} // namespace OpenAPI
