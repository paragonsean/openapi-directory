/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDNSSettings.h
 *
 * The DNS(Domain Name Server) settings of a device.
 */

#ifndef OAIDNSSettings_H
#define OAIDNSSettings_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDNSSettings : public OAIObject {
public:
    OAIDNSSettings();
    OAIDNSSettings(QString json);
    ~OAIDNSSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPrimaryDnsServer() const;
    void setPrimaryDnsServer(const QString &primary_dns_server);
    bool is_primary_dns_server_Set() const;
    bool is_primary_dns_server_Valid() const;

    QString getPrimaryIpv6DnsServer() const;
    void setPrimaryIpv6DnsServer(const QString &primary_ipv6_dns_server);
    bool is_primary_ipv6_dns_server_Set() const;
    bool is_primary_ipv6_dns_server_Valid() const;

    QList<QString> getSecondaryDnsServers() const;
    void setSecondaryDnsServers(const QList<QString> &secondary_dns_servers);
    bool is_secondary_dns_servers_Set() const;
    bool is_secondary_dns_servers_Valid() const;

    QList<QString> getSecondaryIpv6DnsServers() const;
    void setSecondaryIpv6DnsServers(const QList<QString> &secondary_ipv6_dns_servers);
    bool is_secondary_ipv6_dns_servers_Set() const;
    bool is_secondary_ipv6_dns_servers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_primary_dns_server;
    bool m_primary_dns_server_isSet;
    bool m_primary_dns_server_isValid;

    QString m_primary_ipv6_dns_server;
    bool m_primary_ipv6_dns_server_isSet;
    bool m_primary_ipv6_dns_server_isValid;

    QList<QString> m_secondary_dns_servers;
    bool m_secondary_dns_servers_isSet;
    bool m_secondary_dns_servers_isValid;

    QList<QString> m_secondary_ipv6_dns_servers;
    bool m_secondary_ipv6_dns_servers_isSet;
    bool m_secondary_ipv6_dns_servers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDNSSettings)

#endif // OAIDNSSettings_H
