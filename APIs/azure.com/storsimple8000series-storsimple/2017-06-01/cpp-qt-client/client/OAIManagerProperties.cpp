/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagerProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagerProperties::OAIManagerProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagerProperties::OAIManagerProperties() {
    this->initializeModel();
}

OAIManagerProperties::~OAIManagerProperties() {}

void OAIManagerProperties::initializeModel() {

    m_cis_intrinsic_settings_isSet = false;
    m_cis_intrinsic_settings_isValid = false;

    m_provisioning_state_isSet = false;
    m_provisioning_state_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;
}

void OAIManagerProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagerProperties::fromJsonObject(QJsonObject json) {

    m_cis_intrinsic_settings_isValid = ::OpenAPI::fromJsonValue(m_cis_intrinsic_settings, json[QString("cisIntrinsicSettings")]);
    m_cis_intrinsic_settings_isSet = !json[QString("cisIntrinsicSettings")].isNull() && m_cis_intrinsic_settings_isValid;

    m_provisioning_state_isValid = ::OpenAPI::fromJsonValue(m_provisioning_state, json[QString("provisioningState")]);
    m_provisioning_state_isSet = !json[QString("provisioningState")].isNull() && m_provisioning_state_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;
}

QString OAIManagerProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagerProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_cis_intrinsic_settings.isSet()) {
        obj.insert(QString("cisIntrinsicSettings"), ::OpenAPI::toJsonValue(m_cis_intrinsic_settings));
    }
    if (m_provisioning_state_isSet) {
        obj.insert(QString("provisioningState"), ::OpenAPI::toJsonValue(m_provisioning_state));
    }
    if (m_sku.isSet()) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    return obj;
}

OAIManagerIntrinsicSettings OAIManagerProperties::getCisIntrinsicSettings() const {
    return m_cis_intrinsic_settings;
}
void OAIManagerProperties::setCisIntrinsicSettings(const OAIManagerIntrinsicSettings &cis_intrinsic_settings) {
    m_cis_intrinsic_settings = cis_intrinsic_settings;
    m_cis_intrinsic_settings_isSet = true;
}

bool OAIManagerProperties::is_cis_intrinsic_settings_Set() const{
    return m_cis_intrinsic_settings_isSet;
}

bool OAIManagerProperties::is_cis_intrinsic_settings_Valid() const{
    return m_cis_intrinsic_settings_isValid;
}

QString OAIManagerProperties::getProvisioningState() const {
    return m_provisioning_state;
}
void OAIManagerProperties::setProvisioningState(const QString &provisioning_state) {
    m_provisioning_state = provisioning_state;
    m_provisioning_state_isSet = true;
}

bool OAIManagerProperties::is_provisioning_state_Set() const{
    return m_provisioning_state_isSet;
}

bool OAIManagerProperties::is_provisioning_state_Valid() const{
    return m_provisioning_state_isValid;
}

OAIManagerSku OAIManagerProperties::getSku() const {
    return m_sku;
}
void OAIManagerProperties::setSku(const OAIManagerSku &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIManagerProperties::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIManagerProperties::is_sku_Valid() const{
    return m_sku_isValid;
}

bool OAIManagerProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cis_intrinsic_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagerProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
