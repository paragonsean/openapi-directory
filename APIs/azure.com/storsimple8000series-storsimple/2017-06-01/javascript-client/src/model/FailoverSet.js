/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FailoverSetEligibilityResult from './FailoverSetEligibilityResult';
import VolumeContainerFailoverMetadata from './VolumeContainerFailoverMetadata';

/**
 * The FailoverSet model module.
 * @module model/FailoverSet
 * @version 2017-06-01
 */
class FailoverSet {
    /**
     * Constructs a new <code>FailoverSet</code>.
     * The failover set on a device.
     * @alias module:model/FailoverSet
     */
    constructor() { 
        
        FailoverSet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FailoverSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FailoverSet} obj Optional instance to populate.
     * @return {module:model/FailoverSet} The populated <code>FailoverSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FailoverSet();

            if (data.hasOwnProperty('eligibilityResult')) {
                obj['eligibilityResult'] = FailoverSetEligibilityResult.constructFromObject(data['eligibilityResult']);
            }
            if (data.hasOwnProperty('volumeContainers')) {
                obj['volumeContainers'] = ApiClient.convertToType(data['volumeContainers'], [VolumeContainerFailoverMetadata]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FailoverSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FailoverSet</code>.
     */
    static validateJSON(data) {
        // validate the optional field `eligibilityResult`
        if (data['eligibilityResult']) { // data not null
          FailoverSetEligibilityResult.validateJSON(data['eligibilityResult']);
        }
        if (data['volumeContainers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['volumeContainers'])) {
                throw new Error("Expected the field `volumeContainers` to be an array in the JSON data but got " + data['volumeContainers']);
            }
            // validate the optional field `volumeContainers` (array)
            for (const item of data['volumeContainers']) {
                VolumeContainerFailoverMetadata.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/FailoverSetEligibilityResult} eligibilityResult
 */
FailoverSet.prototype['eligibilityResult'] = undefined;

/**
 * The list of meta data of volume containers, which are part of the failover set.
 * @member {Array.<module:model/VolumeContainerFailoverMetadata>} volumeContainers
 */
FailoverSet.prototype['volumeContainers'] = undefined;






export default FailoverSet;

