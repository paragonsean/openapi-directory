/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SymmetricEncryptedSecret model module.
 * @module model/SymmetricEncryptedSecret
 * @version 2017-06-01
 */
class SymmetricEncryptedSecret {
    /**
     * Constructs a new <code>SymmetricEncryptedSecret</code>.
     * Represents the secrets encrypted using Symmetric Encryption Key.
     * @alias module:model/SymmetricEncryptedSecret
     * @param encryptionAlgorithm {module:model/SymmetricEncryptedSecret.EncryptionAlgorithmEnum} The algorithm used to encrypt the \"Value\".
     * @param value {String} The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none.
     */
    constructor(encryptionAlgorithm, value) { 
        
        SymmetricEncryptedSecret.initialize(this, encryptionAlgorithm, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, encryptionAlgorithm, value) { 
        obj['encryptionAlgorithm'] = encryptionAlgorithm;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>SymmetricEncryptedSecret</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SymmetricEncryptedSecret} obj Optional instance to populate.
     * @return {module:model/SymmetricEncryptedSecret} The populated <code>SymmetricEncryptedSecret</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SymmetricEncryptedSecret();

            if (data.hasOwnProperty('encryptionAlgorithm')) {
                obj['encryptionAlgorithm'] = ApiClient.convertToType(data['encryptionAlgorithm'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('valueCertificateThumbprint')) {
                obj['valueCertificateThumbprint'] = ApiClient.convertToType(data['valueCertificateThumbprint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SymmetricEncryptedSecret</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SymmetricEncryptedSecret</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SymmetricEncryptedSecret.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['encryptionAlgorithm'] && !(typeof data['encryptionAlgorithm'] === 'string' || data['encryptionAlgorithm'] instanceof String)) {
            throw new Error("Expected the field `encryptionAlgorithm` to be a primitive type in the JSON string but got " + data['encryptionAlgorithm']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // ensure the json data is a string
        if (data['valueCertificateThumbprint'] && !(typeof data['valueCertificateThumbprint'] === 'string' || data['valueCertificateThumbprint'] instanceof String)) {
            throw new Error("Expected the field `valueCertificateThumbprint` to be a primitive type in the JSON string but got " + data['valueCertificateThumbprint']);
        }

        return true;
    }


}

SymmetricEncryptedSecret.RequiredProperties = ["encryptionAlgorithm", "value"];

/**
 * The algorithm used to encrypt the \"Value\".
 * @member {module:model/SymmetricEncryptedSecret.EncryptionAlgorithmEnum} encryptionAlgorithm
 */
SymmetricEncryptedSecret.prototype['encryptionAlgorithm'] = undefined;

/**
 * The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none.
 * @member {String} value
 */
SymmetricEncryptedSecret.prototype['value'] = undefined;

/**
 * The thumbprint of the cert that was used to encrypt \"Value\".
 * @member {String} valueCertificateThumbprint
 */
SymmetricEncryptedSecret.prototype['valueCertificateThumbprint'] = undefined;





/**
 * Allowed values for the <code>encryptionAlgorithm</code> property.
 * @enum {String}
 * @readonly
 */
SymmetricEncryptedSecret['EncryptionAlgorithmEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "AES256"
     * @const
     */
    "AES256": "AES256",

    /**
     * value: "RSAES_PKCS1_v_1_5"
     * @const
     */
    "RSAES_PKCS1_v_1_5": "RSAES_PKCS1_v_1_5"
};



export default SymmetricEncryptedSecret;

