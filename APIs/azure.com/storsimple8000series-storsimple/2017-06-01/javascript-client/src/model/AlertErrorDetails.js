/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AlertErrorDetails model module.
 * @module model/AlertErrorDetails
 * @version 2017-06-01
 */
class AlertErrorDetails {
    /**
     * Constructs a new <code>AlertErrorDetails</code>.
     * The details of the error for which the alert was raised
     * @alias module:model/AlertErrorDetails
     */
    constructor() { 
        
        AlertErrorDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AlertErrorDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AlertErrorDetails} obj Optional instance to populate.
     * @return {module:model/AlertErrorDetails} The populated <code>AlertErrorDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AlertErrorDetails();

            if (data.hasOwnProperty('errorCode')) {
                obj['errorCode'] = ApiClient.convertToType(data['errorCode'], 'String');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('occurences')) {
                obj['occurences'] = ApiClient.convertToType(data['occurences'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AlertErrorDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AlertErrorDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['errorCode'] && !(typeof data['errorCode'] === 'string' || data['errorCode'] instanceof String)) {
            throw new Error("Expected the field `errorCode` to be a primitive type in the JSON string but got " + data['errorCode']);
        }
        // ensure the json data is a string
        if (data['errorMessage'] && !(typeof data['errorMessage'] === 'string' || data['errorMessage'] instanceof String)) {
            throw new Error("Expected the field `errorMessage` to be a primitive type in the JSON string but got " + data['errorMessage']);
        }

        return true;
    }


}



/**
 * The error code
 * @member {String} errorCode
 */
AlertErrorDetails.prototype['errorCode'] = undefined;

/**
 * The error message
 * @member {String} errorMessage
 */
AlertErrorDetails.prototype['errorMessage'] = undefined;

/**
 * The number of occurrences
 * @member {Number} occurences
 */
AlertErrorDetails.prototype['occurences'] = undefined;






export default AlertErrorDetails;

