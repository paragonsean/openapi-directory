/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AcsConfiguration from './AcsConfiguration';
import VmImage from './VmImage';

/**
 * The CloudApplianceConfigurationProperties model module.
 * @module model/CloudApplianceConfigurationProperties
 * @version 2017-06-01
 */
class CloudApplianceConfigurationProperties {
    /**
     * Constructs a new <code>CloudApplianceConfigurationProperties</code>.
     * The properties of cloud appliance configuration.
     * @alias module:model/CloudApplianceConfigurationProperties
     * @param acsConfiguration {module:model/AcsConfiguration} 
     * @param cloudPlatform {String} The cloud platform.
     * @param modelNumber {String} The model number.
     * @param supportedRegions {Array.<String>} The supported regions.
     * @param supportedStorageAccountTypes {Array.<String>} The supported storage account types.
     * @param supportedVmImages {Array.<module:model/VmImage>} The supported virtual machine images.
     * @param supportedVmTypes {Array.<String>} The supported virtual machine types.
     */
    constructor(acsConfiguration, cloudPlatform, modelNumber, supportedRegions, supportedStorageAccountTypes, supportedVmImages, supportedVmTypes) { 
        
        CloudApplianceConfigurationProperties.initialize(this, acsConfiguration, cloudPlatform, modelNumber, supportedRegions, supportedStorageAccountTypes, supportedVmImages, supportedVmTypes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, acsConfiguration, cloudPlatform, modelNumber, supportedRegions, supportedStorageAccountTypes, supportedVmImages, supportedVmTypes) { 
        obj['acsConfiguration'] = acsConfiguration;
        obj['cloudPlatform'] = cloudPlatform;
        obj['modelNumber'] = modelNumber;
        obj['supportedRegions'] = supportedRegions;
        obj['supportedStorageAccountTypes'] = supportedStorageAccountTypes;
        obj['supportedVmImages'] = supportedVmImages;
        obj['supportedVmTypes'] = supportedVmTypes;
    }

    /**
     * Constructs a <code>CloudApplianceConfigurationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudApplianceConfigurationProperties} obj Optional instance to populate.
     * @return {module:model/CloudApplianceConfigurationProperties} The populated <code>CloudApplianceConfigurationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudApplianceConfigurationProperties();

            if (data.hasOwnProperty('acsConfiguration')) {
                obj['acsConfiguration'] = AcsConfiguration.constructFromObject(data['acsConfiguration']);
            }
            if (data.hasOwnProperty('cloudPlatform')) {
                obj['cloudPlatform'] = ApiClient.convertToType(data['cloudPlatform'], 'String');
            }
            if (data.hasOwnProperty('modelNumber')) {
                obj['modelNumber'] = ApiClient.convertToType(data['modelNumber'], 'String');
            }
            if (data.hasOwnProperty('supportedRegions')) {
                obj['supportedRegions'] = ApiClient.convertToType(data['supportedRegions'], ['String']);
            }
            if (data.hasOwnProperty('supportedStorageAccountTypes')) {
                obj['supportedStorageAccountTypes'] = ApiClient.convertToType(data['supportedStorageAccountTypes'], ['String']);
            }
            if (data.hasOwnProperty('supportedVmImages')) {
                obj['supportedVmImages'] = ApiClient.convertToType(data['supportedVmImages'], [VmImage]);
            }
            if (data.hasOwnProperty('supportedVmTypes')) {
                obj['supportedVmTypes'] = ApiClient.convertToType(data['supportedVmTypes'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudApplianceConfigurationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudApplianceConfigurationProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CloudApplianceConfigurationProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `acsConfiguration`
        if (data['acsConfiguration']) { // data not null
          AcsConfiguration.validateJSON(data['acsConfiguration']);
        }
        // ensure the json data is a string
        if (data['cloudPlatform'] && !(typeof data['cloudPlatform'] === 'string' || data['cloudPlatform'] instanceof String)) {
            throw new Error("Expected the field `cloudPlatform` to be a primitive type in the JSON string but got " + data['cloudPlatform']);
        }
        // ensure the json data is a string
        if (data['modelNumber'] && !(typeof data['modelNumber'] === 'string' || data['modelNumber'] instanceof String)) {
            throw new Error("Expected the field `modelNumber` to be a primitive type in the JSON string but got " + data['modelNumber']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supportedRegions'])) {
            throw new Error("Expected the field `supportedRegions` to be an array in the JSON data but got " + data['supportedRegions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supportedStorageAccountTypes'])) {
            throw new Error("Expected the field `supportedStorageAccountTypes` to be an array in the JSON data but got " + data['supportedStorageAccountTypes']);
        }
        if (data['supportedVmImages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['supportedVmImages'])) {
                throw new Error("Expected the field `supportedVmImages` to be an array in the JSON data but got " + data['supportedVmImages']);
            }
            // validate the optional field `supportedVmImages` (array)
            for (const item of data['supportedVmImages']) {
                VmImage.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supportedVmTypes'])) {
            throw new Error("Expected the field `supportedVmTypes` to be an array in the JSON data but got " + data['supportedVmTypes']);
        }

        return true;
    }


}

CloudApplianceConfigurationProperties.RequiredProperties = ["acsConfiguration", "cloudPlatform", "modelNumber", "supportedRegions", "supportedStorageAccountTypes", "supportedVmImages", "supportedVmTypes"];

/**
 * @member {module:model/AcsConfiguration} acsConfiguration
 */
CloudApplianceConfigurationProperties.prototype['acsConfiguration'] = undefined;

/**
 * The cloud platform.
 * @member {String} cloudPlatform
 */
CloudApplianceConfigurationProperties.prototype['cloudPlatform'] = undefined;

/**
 * The model number.
 * @member {String} modelNumber
 */
CloudApplianceConfigurationProperties.prototype['modelNumber'] = undefined;

/**
 * The supported regions.
 * @member {Array.<String>} supportedRegions
 */
CloudApplianceConfigurationProperties.prototype['supportedRegions'] = undefined;

/**
 * The supported storage account types.
 * @member {Array.<String>} supportedStorageAccountTypes
 */
CloudApplianceConfigurationProperties.prototype['supportedStorageAccountTypes'] = undefined;

/**
 * The supported virtual machine images.
 * @member {Array.<module:model/VmImage>} supportedVmImages
 */
CloudApplianceConfigurationProperties.prototype['supportedVmImages'] = undefined;

/**
 * The supported virtual machine types.
 * @member {Array.<String>} supportedVmTypes
 */
CloudApplianceConfigurationProperties.prototype['supportedVmTypes'] = undefined;






export default CloudApplianceConfigurationProperties;

