/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobFilter model module.
 * @module model/JobFilter
 * @version 2017-06-01
 */
class JobFilter {
    /**
     * Constructs a new <code>JobFilter</code>.
     * The OData filter to be used for jobs.
     * @alias module:model/JobFilter
     */
    constructor() { 
        
        JobFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobFilter} obj Optional instance to populate.
     * @return {module:model/JobFilter} The populated <code>JobFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobFilter();

            if (data.hasOwnProperty('jobType')) {
                obj['jobType'] = ApiClient.convertToType(data['jobType'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['jobType'] && !(typeof data['jobType'] === 'string' || data['jobType'] instanceof String)) {
            throw new Error("Expected the field `jobType` to be a primitive type in the JSON string but got " + data['jobType']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Specifies the type of the jobs to be filtered. For e.g., \"ScheduledBackup\", \"ManualBackup\", \"RestoreBackup\", \"CloneVolume\", \"FailoverVolumeContainers\", \"CreateLocallyPinnedVolume\", \"ModifyVolume\", \"InstallUpdates\", \"SupportPackageLogs\", or \"CreateCloudAppliance\". Only 'Equality' operator can be used for this property.
 * @member {String} jobType
 */
JobFilter.prototype['jobType'] = undefined;

/**
 * Specifies the start time of the jobs to be filtered.  Only 'Greater Than or Equal To' and 'Lesser Than or Equal To' operators are supported for this property.
 * @member {Date} startTime
 */
JobFilter.prototype['startTime'] = undefined;

/**
 * Specifies the status of the jobs to be filtered. For e.g., \"Running\", \"Succeeded\", \"Failed\" or \"Canceled\". Only 'Equality' operator is supported for this property.
 * @member {String} status
 */
JobFilter.prototype['status'] = undefined;






export default JobFilter;

