/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BackupElement from './BackupElement';

/**
 * The BackupProperties model module.
 * @module model/BackupProperties
 * @version 2017-06-01
 */
class BackupProperties {
    /**
     * Constructs a new <code>BackupProperties</code>.
     * The properties of the backup.
     * @alias module:model/BackupProperties
     * @param createdOn {Date} The time when the backup was created.
     * @param elements {Array.<module:model/BackupElement>} The backup elements.
     * @param sizeInBytes {Number} The backup size in bytes.
     */
    constructor(createdOn, elements, sizeInBytes) { 
        
        BackupProperties.initialize(this, createdOn, elements, sizeInBytes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdOn, elements, sizeInBytes) { 
        obj['createdOn'] = createdOn;
        obj['elements'] = elements;
        obj['sizeInBytes'] = sizeInBytes;
    }

    /**
     * Constructs a <code>BackupProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupProperties} obj Optional instance to populate.
     * @return {module:model/BackupProperties} The populated <code>BackupProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupProperties();

            if (data.hasOwnProperty('backupJobCreationType')) {
                obj['backupJobCreationType'] = ApiClient.convertToType(data['backupJobCreationType'], 'String');
            }
            if (data.hasOwnProperty('backupPolicyId')) {
                obj['backupPolicyId'] = ApiClient.convertToType(data['backupPolicyId'], 'String');
            }
            if (data.hasOwnProperty('backupType')) {
                obj['backupType'] = ApiClient.convertToType(data['backupType'], 'String');
            }
            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'Date');
            }
            if (data.hasOwnProperty('elements')) {
                obj['elements'] = ApiClient.convertToType(data['elements'], [BackupElement]);
            }
            if (data.hasOwnProperty('sizeInBytes')) {
                obj['sizeInBytes'] = ApiClient.convertToType(data['sizeInBytes'], 'Number');
            }
            if (data.hasOwnProperty('ssmHostName')) {
                obj['ssmHostName'] = ApiClient.convertToType(data['ssmHostName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BackupProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['backupJobCreationType'] && !(typeof data['backupJobCreationType'] === 'string' || data['backupJobCreationType'] instanceof String)) {
            throw new Error("Expected the field `backupJobCreationType` to be a primitive type in the JSON string but got " + data['backupJobCreationType']);
        }
        // ensure the json data is a string
        if (data['backupPolicyId'] && !(typeof data['backupPolicyId'] === 'string' || data['backupPolicyId'] instanceof String)) {
            throw new Error("Expected the field `backupPolicyId` to be a primitive type in the JSON string but got " + data['backupPolicyId']);
        }
        // ensure the json data is a string
        if (data['backupType'] && !(typeof data['backupType'] === 'string' || data['backupType'] instanceof String)) {
            throw new Error("Expected the field `backupType` to be a primitive type in the JSON string but got " + data['backupType']);
        }
        if (data['elements']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['elements'])) {
                throw new Error("Expected the field `elements` to be an array in the JSON data but got " + data['elements']);
            }
            // validate the optional field `elements` (array)
            for (const item of data['elements']) {
                BackupElement.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['ssmHostName'] && !(typeof data['ssmHostName'] === 'string' || data['ssmHostName'] instanceof String)) {
            throw new Error("Expected the field `ssmHostName` to be a primitive type in the JSON string but got " + data['ssmHostName']);
        }

        return true;
    }


}

BackupProperties.RequiredProperties = ["createdOn", "elements", "sizeInBytes"];

/**
 * The backup job creation type.
 * @member {module:model/BackupProperties.BackupJobCreationTypeEnum} backupJobCreationType
 */
BackupProperties.prototype['backupJobCreationType'] = undefined;

/**
 * The path ID of the backup policy.
 * @member {String} backupPolicyId
 */
BackupProperties.prototype['backupPolicyId'] = undefined;

/**
 * The type of the backup.
 * @member {module:model/BackupProperties.BackupTypeEnum} backupType
 */
BackupProperties.prototype['backupType'] = undefined;

/**
 * The time when the backup was created.
 * @member {Date} createdOn
 */
BackupProperties.prototype['createdOn'] = undefined;

/**
 * The backup elements.
 * @member {Array.<module:model/BackupElement>} elements
 */
BackupProperties.prototype['elements'] = undefined;

/**
 * The backup size in bytes.
 * @member {Number} sizeInBytes
 */
BackupProperties.prototype['sizeInBytes'] = undefined;

/**
 * The StorSimple Snapshot Manager host name.
 * @member {String} ssmHostName
 */
BackupProperties.prototype['ssmHostName'] = undefined;





/**
 * Allowed values for the <code>backupJobCreationType</code> property.
 * @enum {String}
 * @readonly
 */
BackupProperties['BackupJobCreationTypeEnum'] = {

    /**
     * value: "Adhoc"
     * @const
     */
    "Adhoc": "Adhoc",

    /**
     * value: "BySchedule"
     * @const
     */
    "BySchedule": "BySchedule",

    /**
     * value: "BySSM"
     * @const
     */
    "BySSM": "BySSM"
};


/**
 * Allowed values for the <code>backupType</code> property.
 * @enum {String}
 * @readonly
 */
BackupProperties['BackupTypeEnum'] = {

    /**
     * value: "LocalSnapshot"
     * @const
     */
    "LocalSnapshot": "LocalSnapshot",

    /**
     * value: "CloudSnapshot"
     * @const
     */
    "CloudSnapshot": "CloudSnapshot"
};



export default BackupProperties;

