/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScheduleRecurrence from './ScheduleRecurrence';

/**
 * The BackupScheduleProperties model module.
 * @module model/BackupScheduleProperties
 * @version 2017-06-01
 */
class BackupScheduleProperties {
    /**
     * Constructs a new <code>BackupScheduleProperties</code>.
     * The properties of the backup schedule.
     * @alias module:model/BackupScheduleProperties
     * @param backupType {module:model/BackupScheduleProperties.BackupTypeEnum} The type of backup which needs to be taken.
     * @param retentionCount {Number} The number of backups to be retained.
     * @param scheduleRecurrence {module:model/ScheduleRecurrence} 
     * @param scheduleStatus {module:model/BackupScheduleProperties.ScheduleStatusEnum} The schedule status.
     * @param startTime {Date} The start time of the schedule.
     */
    constructor(backupType, retentionCount, scheduleRecurrence, scheduleStatus, startTime) { 
        
        BackupScheduleProperties.initialize(this, backupType, retentionCount, scheduleRecurrence, scheduleStatus, startTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, backupType, retentionCount, scheduleRecurrence, scheduleStatus, startTime) { 
        obj['backupType'] = backupType;
        obj['retentionCount'] = retentionCount;
        obj['scheduleRecurrence'] = scheduleRecurrence;
        obj['scheduleStatus'] = scheduleStatus;
        obj['startTime'] = startTime;
    }

    /**
     * Constructs a <code>BackupScheduleProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupScheduleProperties} obj Optional instance to populate.
     * @return {module:model/BackupScheduleProperties} The populated <code>BackupScheduleProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupScheduleProperties();

            if (data.hasOwnProperty('backupType')) {
                obj['backupType'] = ApiClient.convertToType(data['backupType'], 'String');
            }
            if (data.hasOwnProperty('lastSuccessfulRun')) {
                obj['lastSuccessfulRun'] = ApiClient.convertToType(data['lastSuccessfulRun'], 'Date');
            }
            if (data.hasOwnProperty('retentionCount')) {
                obj['retentionCount'] = ApiClient.convertToType(data['retentionCount'], 'Number');
            }
            if (data.hasOwnProperty('scheduleRecurrence')) {
                obj['scheduleRecurrence'] = ScheduleRecurrence.constructFromObject(data['scheduleRecurrence']);
            }
            if (data.hasOwnProperty('scheduleStatus')) {
                obj['scheduleStatus'] = ApiClient.convertToType(data['scheduleStatus'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupScheduleProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupScheduleProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BackupScheduleProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['backupType'] && !(typeof data['backupType'] === 'string' || data['backupType'] instanceof String)) {
            throw new Error("Expected the field `backupType` to be a primitive type in the JSON string but got " + data['backupType']);
        }
        // validate the optional field `scheduleRecurrence`
        if (data['scheduleRecurrence']) { // data not null
          ScheduleRecurrence.validateJSON(data['scheduleRecurrence']);
        }
        // ensure the json data is a string
        if (data['scheduleStatus'] && !(typeof data['scheduleStatus'] === 'string' || data['scheduleStatus'] instanceof String)) {
            throw new Error("Expected the field `scheduleStatus` to be a primitive type in the JSON string but got " + data['scheduleStatus']);
        }

        return true;
    }


}

BackupScheduleProperties.RequiredProperties = ["backupType", "retentionCount", "scheduleRecurrence", "scheduleStatus", "startTime"];

/**
 * The type of backup which needs to be taken.
 * @member {module:model/BackupScheduleProperties.BackupTypeEnum} backupType
 */
BackupScheduleProperties.prototype['backupType'] = undefined;

/**
 * The last successful backup run which was triggered for the schedule.
 * @member {Date} lastSuccessfulRun
 */
BackupScheduleProperties.prototype['lastSuccessfulRun'] = undefined;

/**
 * The number of backups to be retained.
 * @member {Number} retentionCount
 */
BackupScheduleProperties.prototype['retentionCount'] = undefined;

/**
 * @member {module:model/ScheduleRecurrence} scheduleRecurrence
 */
BackupScheduleProperties.prototype['scheduleRecurrence'] = undefined;

/**
 * The schedule status.
 * @member {module:model/BackupScheduleProperties.ScheduleStatusEnum} scheduleStatus
 */
BackupScheduleProperties.prototype['scheduleStatus'] = undefined;

/**
 * The start time of the schedule.
 * @member {Date} startTime
 */
BackupScheduleProperties.prototype['startTime'] = undefined;





/**
 * Allowed values for the <code>backupType</code> property.
 * @enum {String}
 * @readonly
 */
BackupScheduleProperties['BackupTypeEnum'] = {

    /**
     * value: "LocalSnapshot"
     * @const
     */
    "LocalSnapshot": "LocalSnapshot",

    /**
     * value: "CloudSnapshot"
     * @const
     */
    "CloudSnapshot": "CloudSnapshot"
};


/**
 * Allowed values for the <code>scheduleStatus</code> property.
 * @enum {String}
 * @readonly
 */
BackupScheduleProperties['ScheduleStatusEnum'] = {

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled"
};



export default BackupScheduleProperties;

