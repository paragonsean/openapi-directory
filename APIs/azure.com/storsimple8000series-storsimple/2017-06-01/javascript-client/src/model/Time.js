/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Time model module.
 * @module model/Time
 * @version 2017-06-01
 */
class Time {
    /**
     * Constructs a new <code>Time</code>.
     * The time.
     * @alias module:model/Time
     * @param hours {Number} The hour.
     * @param minutes {Number} The minute.
     * @param seconds {Number} The second.
     */
    constructor(hours, minutes, seconds) { 
        
        Time.initialize(this, hours, minutes, seconds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, hours, minutes, seconds) { 
        obj['hours'] = hours;
        obj['minutes'] = minutes;
        obj['seconds'] = seconds;
    }

    /**
     * Constructs a <code>Time</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Time} obj Optional instance to populate.
     * @return {module:model/Time} The populated <code>Time</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Time();

            if (data.hasOwnProperty('hours')) {
                obj['hours'] = ApiClient.convertToType(data['hours'], 'Number');
            }
            if (data.hasOwnProperty('minutes')) {
                obj['minutes'] = ApiClient.convertToType(data['minutes'], 'Number');
            }
            if (data.hasOwnProperty('seconds')) {
                obj['seconds'] = ApiClient.convertToType(data['seconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Time</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Time</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Time.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

Time.RequiredProperties = ["hours", "minutes", "seconds"];

/**
 * The hour.
 * @member {Number} hours
 */
Time.prototype['hours'] = undefined;

/**
 * The minute.
 * @member {Number} minutes
 */
Time.prototype['minutes'] = undefined;

/**
 * The second.
 * @member {Number} seconds
 */
Time.prototype['seconds'] = undefined;






export default Time;

