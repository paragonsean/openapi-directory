/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BackupPolicyProperties model module.
 * @module model/BackupPolicyProperties
 * @version 2017-06-01
 */
class BackupPolicyProperties {
    /**
     * Constructs a new <code>BackupPolicyProperties</code>.
     * The properties of the backup policy.
     * @alias module:model/BackupPolicyProperties
     * @param volumeIds {Array.<String>} The path IDs of the volumes which are part of the backup policy.
     */
    constructor(volumeIds) { 
        
        BackupPolicyProperties.initialize(this, volumeIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, volumeIds) { 
        obj['volumeIds'] = volumeIds;
    }

    /**
     * Constructs a <code>BackupPolicyProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupPolicyProperties} obj Optional instance to populate.
     * @return {module:model/BackupPolicyProperties} The populated <code>BackupPolicyProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupPolicyProperties();

            if (data.hasOwnProperty('backupPolicyCreationType')) {
                obj['backupPolicyCreationType'] = ApiClient.convertToType(data['backupPolicyCreationType'], 'String');
            }
            if (data.hasOwnProperty('lastBackupTime')) {
                obj['lastBackupTime'] = ApiClient.convertToType(data['lastBackupTime'], 'Date');
            }
            if (data.hasOwnProperty('nextBackupTime')) {
                obj['nextBackupTime'] = ApiClient.convertToType(data['nextBackupTime'], 'Date');
            }
            if (data.hasOwnProperty('scheduledBackupStatus')) {
                obj['scheduledBackupStatus'] = ApiClient.convertToType(data['scheduledBackupStatus'], 'String');
            }
            if (data.hasOwnProperty('schedulesCount')) {
                obj['schedulesCount'] = ApiClient.convertToType(data['schedulesCount'], 'Number');
            }
            if (data.hasOwnProperty('ssmHostName')) {
                obj['ssmHostName'] = ApiClient.convertToType(data['ssmHostName'], 'String');
            }
            if (data.hasOwnProperty('volumeIds')) {
                obj['volumeIds'] = ApiClient.convertToType(data['volumeIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupPolicyProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupPolicyProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BackupPolicyProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['backupPolicyCreationType'] && !(typeof data['backupPolicyCreationType'] === 'string' || data['backupPolicyCreationType'] instanceof String)) {
            throw new Error("Expected the field `backupPolicyCreationType` to be a primitive type in the JSON string but got " + data['backupPolicyCreationType']);
        }
        // ensure the json data is a string
        if (data['scheduledBackupStatus'] && !(typeof data['scheduledBackupStatus'] === 'string' || data['scheduledBackupStatus'] instanceof String)) {
            throw new Error("Expected the field `scheduledBackupStatus` to be a primitive type in the JSON string but got " + data['scheduledBackupStatus']);
        }
        // ensure the json data is a string
        if (data['ssmHostName'] && !(typeof data['ssmHostName'] === 'string' || data['ssmHostName'] instanceof String)) {
            throw new Error("Expected the field `ssmHostName` to be a primitive type in the JSON string but got " + data['ssmHostName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['volumeIds'])) {
            throw new Error("Expected the field `volumeIds` to be an array in the JSON data but got " + data['volumeIds']);
        }

        return true;
    }


}

BackupPolicyProperties.RequiredProperties = ["volumeIds"];

/**
 * The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.
 * @member {module:model/BackupPolicyProperties.BackupPolicyCreationTypeEnum} backupPolicyCreationType
 */
BackupPolicyProperties.prototype['backupPolicyCreationType'] = undefined;

/**
 * The time of the last backup for the backup policy.
 * @member {Date} lastBackupTime
 */
BackupPolicyProperties.prototype['lastBackupTime'] = undefined;

/**
 * The time of the next backup for the backup policy.
 * @member {Date} nextBackupTime
 */
BackupPolicyProperties.prototype['nextBackupTime'] = undefined;

/**
 * Indicates whether at least one of the schedules in the backup policy is active or not.
 * @member {module:model/BackupPolicyProperties.ScheduledBackupStatusEnum} scheduledBackupStatus
 */
BackupPolicyProperties.prototype['scheduledBackupStatus'] = undefined;

/**
 * The count of schedules the backup policy contains.
 * @member {Number} schedulesCount
 */
BackupPolicyProperties.prototype['schedulesCount'] = undefined;

/**
 * If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.
 * @member {String} ssmHostName
 */
BackupPolicyProperties.prototype['ssmHostName'] = undefined;

/**
 * The path IDs of the volumes which are part of the backup policy.
 * @member {Array.<String>} volumeIds
 */
BackupPolicyProperties.prototype['volumeIds'] = undefined;





/**
 * Allowed values for the <code>backupPolicyCreationType</code> property.
 * @enum {String}
 * @readonly
 */
BackupPolicyProperties['BackupPolicyCreationTypeEnum'] = {

    /**
     * value: "BySaaS"
     * @const
     */
    "BySaaS": "BySaaS",

    /**
     * value: "BySSM"
     * @const
     */
    "BySSM": "BySSM"
};


/**
 * Allowed values for the <code>scheduledBackupStatus</code> property.
 * @enum {String}
 * @readonly
 */
BackupPolicyProperties['ScheduledBackupStatusEnum'] = {

    /**
     * value: "Disabled"
     * @const
     */
    "Disabled": "Disabled",

    /**
     * value: "Enabled"
     * @const
     */
    "Enabled": "Enabled"
};



export default BackupPolicyProperties;

