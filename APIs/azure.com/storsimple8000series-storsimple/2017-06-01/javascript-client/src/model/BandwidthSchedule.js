/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Time from './Time';

/**
 * The BandwidthSchedule model module.
 * @module model/BandwidthSchedule
 * @version 2017-06-01
 */
class BandwidthSchedule {
    /**
     * Constructs a new <code>BandwidthSchedule</code>.
     * The schedule for bandwidth setting.
     * @alias module:model/BandwidthSchedule
     * @param days {Array.<module:model/BandwidthSchedule.DaysEnum>} The days of the week when this schedule is applicable.
     * @param rateInMbps {Number} The rate in Mbps.
     * @param start {module:model/Time} 
     * @param stop {module:model/Time} 
     */
    constructor(days, rateInMbps, start, stop) { 
        
        BandwidthSchedule.initialize(this, days, rateInMbps, start, stop);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, days, rateInMbps, start, stop) { 
        obj['days'] = days;
        obj['rateInMbps'] = rateInMbps;
        obj['start'] = start;
        obj['stop'] = stop;
    }

    /**
     * Constructs a <code>BandwidthSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BandwidthSchedule} obj Optional instance to populate.
     * @return {module:model/BandwidthSchedule} The populated <code>BandwidthSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BandwidthSchedule();

            if (data.hasOwnProperty('days')) {
                obj['days'] = ApiClient.convertToType(data['days'], ['String']);
            }
            if (data.hasOwnProperty('rateInMbps')) {
                obj['rateInMbps'] = ApiClient.convertToType(data['rateInMbps'], 'Number');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = Time.constructFromObject(data['start']);
            }
            if (data.hasOwnProperty('stop')) {
                obj['stop'] = Time.constructFromObject(data['stop']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BandwidthSchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BandwidthSchedule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BandwidthSchedule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['days'])) {
            throw new Error("Expected the field `days` to be an array in the JSON data but got " + data['days']);
        }
        // validate the optional field `start`
        if (data['start']) { // data not null
          Time.validateJSON(data['start']);
        }
        // validate the optional field `stop`
        if (data['stop']) { // data not null
          Time.validateJSON(data['stop']);
        }

        return true;
    }


}

BandwidthSchedule.RequiredProperties = ["days", "rateInMbps", "start", "stop"];

/**
 * The days of the week when this schedule is applicable.
 * @member {Array.<module:model/BandwidthSchedule.DaysEnum>} days
 */
BandwidthSchedule.prototype['days'] = undefined;

/**
 * The rate in Mbps.
 * @member {Number} rateInMbps
 */
BandwidthSchedule.prototype['rateInMbps'] = undefined;

/**
 * @member {module:model/Time} start
 */
BandwidthSchedule.prototype['start'] = undefined;

/**
 * @member {module:model/Time} stop
 */
BandwidthSchedule.prototype['stop'] = undefined;





/**
 * Allowed values for the <code>days</code> property.
 * @enum {String}
 * @readonly
 */
BandwidthSchedule['DaysEnum'] = {

    /**
     * value: "Sunday"
     * @const
     */
    "Sunday": "Sunday",

    /**
     * value: "Monday"
     * @const
     */
    "Monday": "Monday",

    /**
     * value: "Tuesday"
     * @const
     */
    "Tuesday": "Tuesday",

    /**
     * value: "Wednesday"
     * @const
     */
    "Wednesday": "Wednesday",

    /**
     * value: "Thursday"
     * @const
     */
    "Thursday": "Thursday",

    /**
     * value: "Friday"
     * @const
     */
    "Friday": "Friday",

    /**
     * value: "Saturday"
     * @const
     */
    "Saturday": "Saturday"
};



export default BandwidthSchedule;

