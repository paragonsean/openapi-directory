/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobErrorItem from './JobErrorItem';

/**
 * The JobErrorDetails model module.
 * @module model/JobErrorDetails
 * @version 2017-06-01
 */
class JobErrorDetails {
    /**
     * Constructs a new <code>JobErrorDetails</code>.
     * The job error details. Contains list of job error items.
     * @alias module:model/JobErrorDetails
     * @param code {String} The error code intended for programmatic access.
     * @param message {String} The error message intended to describe the error in detail.
     */
    constructor(code, message) { 
        
        JobErrorDetails.initialize(this, code, message);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, message) { 
        obj['code'] = code;
        obj['message'] = message;
    }

    /**
     * Constructs a <code>JobErrorDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobErrorDetails} obj Optional instance to populate.
     * @return {module:model/JobErrorDetails} The populated <code>JobErrorDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobErrorDetails();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('errorDetails')) {
                obj['errorDetails'] = ApiClient.convertToType(data['errorDetails'], [JobErrorItem]);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobErrorDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobErrorDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobErrorDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        if (data['errorDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errorDetails'])) {
                throw new Error("Expected the field `errorDetails` to be an array in the JSON data but got " + data['errorDetails']);
            }
            // validate the optional field `errorDetails` (array)
            for (const item of data['errorDetails']) {
                JobErrorItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }

        return true;
    }


}

JobErrorDetails.RequiredProperties = ["code", "message"];

/**
 * The error code intended for programmatic access.
 * @member {String} code
 */
JobErrorDetails.prototype['code'] = undefined;

/**
 * The error details.
 * @member {Array.<module:model/JobErrorItem>} errorDetails
 */
JobErrorDetails.prototype['errorDetails'] = undefined;

/**
 * The error message intended to describe the error in detail.
 * @member {String} message
 */
JobErrorDetails.prototype['message'] = undefined;






export default JobErrorDetails;

