/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NetworkInterfaceData0Settings model module.
 * @module model/NetworkInterfaceData0Settings
 * @version 2017-06-01
 */
class NetworkInterfaceData0Settings {
    /**
     * Constructs a new <code>NetworkInterfaceData0Settings</code>.
     * The &#39;Data 0&#39; network interface card settings.
     * @alias module:model/NetworkInterfaceData0Settings
     */
    constructor() { 
        
        NetworkInterfaceData0Settings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkInterfaceData0Settings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkInterfaceData0Settings} obj Optional instance to populate.
     * @return {module:model/NetworkInterfaceData0Settings} The populated <code>NetworkInterfaceData0Settings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkInterfaceData0Settings();

            if (data.hasOwnProperty('controllerOneIp')) {
                obj['controllerOneIp'] = ApiClient.convertToType(data['controllerOneIp'], 'String');
            }
            if (data.hasOwnProperty('controllerZeroIp')) {
                obj['controllerZeroIp'] = ApiClient.convertToType(data['controllerZeroIp'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkInterfaceData0Settings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkInterfaceData0Settings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['controllerOneIp'] && !(typeof data['controllerOneIp'] === 'string' || data['controllerOneIp'] instanceof String)) {
            throw new Error("Expected the field `controllerOneIp` to be a primitive type in the JSON string but got " + data['controllerOneIp']);
        }
        // ensure the json data is a string
        if (data['controllerZeroIp'] && !(typeof data['controllerZeroIp'] === 'string' || data['controllerZeroIp'] instanceof String)) {
            throw new Error("Expected the field `controllerZeroIp` to be a primitive type in the JSON string but got " + data['controllerZeroIp']);
        }

        return true;
    }


}



/**
 * The controller 1's IPv4 address.
 * @member {String} controllerOneIp
 */
NetworkInterfaceData0Settings.prototype['controllerOneIp'] = undefined;

/**
 * The controller 0's IPv4 address.
 * @member {String} controllerZeroIp
 */
NetworkInterfaceData0Settings.prototype['controllerZeroIp'] = undefined;






export default NetworkInterfaceData0Settings;

