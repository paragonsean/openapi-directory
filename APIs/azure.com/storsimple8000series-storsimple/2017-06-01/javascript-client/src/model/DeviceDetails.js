/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeviceDetails model module.
 * @module model/DeviceDetails
 * @version 2017-06-01
 */
class DeviceDetails {
    /**
     * Constructs a new <code>DeviceDetails</code>.
     * The additional device details regarding the end point count and volume container count.
     * @alias module:model/DeviceDetails
     */
    constructor() { 
        
        DeviceDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeviceDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceDetails} obj Optional instance to populate.
     * @return {module:model/DeviceDetails} The populated <code>DeviceDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceDetails();

            if (data.hasOwnProperty('endpointCount')) {
                obj['endpointCount'] = ApiClient.convertToType(data['endpointCount'], 'Number');
            }
            if (data.hasOwnProperty('volumeContainerCount')) {
                obj['volumeContainerCount'] = ApiClient.convertToType(data['volumeContainerCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceDetails</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The total number of endpoints that are currently on the device ( i.e. number of volumes).
 * @member {Number} endpointCount
 */
DeviceDetails.prototype['endpointCount'] = undefined;

/**
 * The total number of volume containers on the device.
 * @member {Number} volumeContainerCount
 */
DeviceDetails.prototype['volumeContainerCount'] = undefined;






export default DeviceDetails;

