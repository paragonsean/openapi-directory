/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HardwareComponent from './HardwareComponent';

/**
 * The HardwareComponentGroupProperties model module.
 * @module model/HardwareComponentGroupProperties
 * @version 2017-06-01
 */
class HardwareComponentGroupProperties {
    /**
     * Constructs a new <code>HardwareComponentGroupProperties</code>.
     * The properties of hardware component group.
     * @alias module:model/HardwareComponentGroupProperties
     * @param components {Array.<module:model/HardwareComponent>} The list of hardware components.
     * @param displayName {String} The display name the hardware component group.
     * @param lastUpdatedTime {Date} The last updated time.
     */
    constructor(components, displayName, lastUpdatedTime) { 
        
        HardwareComponentGroupProperties.initialize(this, components, displayName, lastUpdatedTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, components, displayName, lastUpdatedTime) { 
        obj['components'] = components;
        obj['displayName'] = displayName;
        obj['lastUpdatedTime'] = lastUpdatedTime;
    }

    /**
     * Constructs a <code>HardwareComponentGroupProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HardwareComponentGroupProperties} obj Optional instance to populate.
     * @return {module:model/HardwareComponentGroupProperties} The populated <code>HardwareComponentGroupProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HardwareComponentGroupProperties();

            if (data.hasOwnProperty('components')) {
                obj['components'] = ApiClient.convertToType(data['components'], [HardwareComponent]);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('lastUpdatedTime')) {
                obj['lastUpdatedTime'] = ApiClient.convertToType(data['lastUpdatedTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HardwareComponentGroupProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HardwareComponentGroupProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HardwareComponentGroupProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['components']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['components'])) {
                throw new Error("Expected the field `components` to be an array in the JSON data but got " + data['components']);
            }
            // validate the optional field `components` (array)
            for (const item of data['components']) {
                HardwareComponent.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }

        return true;
    }


}

HardwareComponentGroupProperties.RequiredProperties = ["components", "displayName", "lastUpdatedTime"];

/**
 * The list of hardware components.
 * @member {Array.<module:model/HardwareComponent>} components
 */
HardwareComponentGroupProperties.prototype['components'] = undefined;

/**
 * The display name the hardware component group.
 * @member {String} displayName
 */
HardwareComponentGroupProperties.prototype['displayName'] = undefined;

/**
 * The last updated time.
 * @member {Date} lastUpdatedTime
 */
HardwareComponentGroupProperties.prototype['lastUpdatedTime'] = undefined;






export default HardwareComponentGroupProperties;

