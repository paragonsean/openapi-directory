/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScheduleRecurrence model module.
 * @module model/ScheduleRecurrence
 * @version 2017-06-01
 */
class ScheduleRecurrence {
    /**
     * Constructs a new <code>ScheduleRecurrence</code>.
     * The schedule recurrence.
     * @alias module:model/ScheduleRecurrence
     * @param recurrenceType {module:model/ScheduleRecurrence.RecurrenceTypeEnum} The recurrence type.
     * @param recurrenceValue {Number} The recurrence value.
     */
    constructor(recurrenceType, recurrenceValue) { 
        
        ScheduleRecurrence.initialize(this, recurrenceType, recurrenceValue);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, recurrenceType, recurrenceValue) { 
        obj['recurrenceType'] = recurrenceType;
        obj['recurrenceValue'] = recurrenceValue;
    }

    /**
     * Constructs a <code>ScheduleRecurrence</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduleRecurrence} obj Optional instance to populate.
     * @return {module:model/ScheduleRecurrence} The populated <code>ScheduleRecurrence</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScheduleRecurrence();

            if (data.hasOwnProperty('recurrenceType')) {
                obj['recurrenceType'] = ApiClient.convertToType(data['recurrenceType'], 'String');
            }
            if (data.hasOwnProperty('recurrenceValue')) {
                obj['recurrenceValue'] = ApiClient.convertToType(data['recurrenceValue'], 'Number');
            }
            if (data.hasOwnProperty('weeklyDaysList')) {
                obj['weeklyDaysList'] = ApiClient.convertToType(data['weeklyDaysList'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScheduleRecurrence</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScheduleRecurrence</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ScheduleRecurrence.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['recurrenceType'] && !(typeof data['recurrenceType'] === 'string' || data['recurrenceType'] instanceof String)) {
            throw new Error("Expected the field `recurrenceType` to be a primitive type in the JSON string but got " + data['recurrenceType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['weeklyDaysList'])) {
            throw new Error("Expected the field `weeklyDaysList` to be an array in the JSON data but got " + data['weeklyDaysList']);
        }

        return true;
    }


}

ScheduleRecurrence.RequiredProperties = ["recurrenceType", "recurrenceValue"];

/**
 * The recurrence type.
 * @member {module:model/ScheduleRecurrence.RecurrenceTypeEnum} recurrenceType
 */
ScheduleRecurrence.prototype['recurrenceType'] = undefined;

/**
 * The recurrence value.
 * @member {Number} recurrenceValue
 */
ScheduleRecurrence.prototype['recurrenceValue'] = undefined;

/**
 * The week days list. Applicable only for schedules of recurrence type 'weekly'.
 * @member {Array.<module:model/ScheduleRecurrence.WeeklyDaysListEnum>} weeklyDaysList
 */
ScheduleRecurrence.prototype['weeklyDaysList'] = undefined;





/**
 * Allowed values for the <code>recurrenceType</code> property.
 * @enum {String}
 * @readonly
 */
ScheduleRecurrence['RecurrenceTypeEnum'] = {

    /**
     * value: "Minutes"
     * @const
     */
    "Minutes": "Minutes",

    /**
     * value: "Hourly"
     * @const
     */
    "Hourly": "Hourly",

    /**
     * value: "Daily"
     * @const
     */
    "Daily": "Daily",

    /**
     * value: "Weekly"
     * @const
     */
    "Weekly": "Weekly"
};


/**
 * Allowed values for the <code>weeklyDaysList</code> property.
 * @enum {String}
 * @readonly
 */
ScheduleRecurrence['WeeklyDaysListEnum'] = {

    /**
     * value: "Sunday"
     * @const
     */
    "Sunday": "Sunday",

    /**
     * value: "Monday"
     * @const
     */
    "Monday": "Monday",

    /**
     * value: "Tuesday"
     * @const
     */
    "Tuesday": "Tuesday",

    /**
     * value: "Wednesday"
     * @const
     */
    "Wednesday": "Wednesday",

    /**
     * value: "Thursday"
     * @const
     */
    "Thursday": "Thursday",

    /**
     * value: "Friday"
     * @const
     */
    "Friday": "Friday",

    /**
     * value: "Saturday"
     * @const
     */
    "Saturday": "Saturday"
};



export default ScheduleRecurrence;

