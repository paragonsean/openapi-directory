/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WebproxySettings model module.
 * @module model/WebproxySettings
 * @version 2017-06-01
 */
class WebproxySettings {
    /**
     * Constructs a new <code>WebproxySettings</code>.
     * The web proxy settings on the device.
     * @alias module:model/WebproxySettings
     * @param authentication {module:model/WebproxySettings.AuthenticationEnum} The authentication type.
     * @param username {String} The webproxy username.
     */
    constructor(authentication, username) { 
        
        WebproxySettings.initialize(this, authentication, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, authentication, username) { 
        obj['authentication'] = authentication;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>WebproxySettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebproxySettings} obj Optional instance to populate.
     * @return {module:model/WebproxySettings} The populated <code>WebproxySettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebproxySettings();

            if (data.hasOwnProperty('authentication')) {
                obj['authentication'] = ApiClient.convertToType(data['authentication'], 'String');
            }
            if (data.hasOwnProperty('connectionUri')) {
                obj['connectionUri'] = ApiClient.convertToType(data['connectionUri'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebproxySettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebproxySettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebproxySettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['authentication'] && !(typeof data['authentication'] === 'string' || data['authentication'] instanceof String)) {
            throw new Error("Expected the field `authentication` to be a primitive type in the JSON string but got " + data['authentication']);
        }
        // ensure the json data is a string
        if (data['connectionUri'] && !(typeof data['connectionUri'] === 'string' || data['connectionUri'] instanceof String)) {
            throw new Error("Expected the field `connectionUri` to be a primitive type in the JSON string but got " + data['connectionUri']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

WebproxySettings.RequiredProperties = ["authentication", "username"];

/**
 * The authentication type.
 * @member {module:model/WebproxySettings.AuthenticationEnum} authentication
 */
WebproxySettings.prototype['authentication'] = undefined;

/**
 * The connection URI.
 * @member {String} connectionUri
 */
WebproxySettings.prototype['connectionUri'] = undefined;

/**
 * The webproxy username.
 * @member {String} username
 */
WebproxySettings.prototype['username'] = undefined;





/**
 * Allowed values for the <code>authentication</code> property.
 * @enum {String}
 * @readonly
 */
WebproxySettings['AuthenticationEnum'] = {

    /**
     * value: "Invalid"
     * @const
     */
    "Invalid": "Invalid",

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Basic"
     * @const
     */
    "Basic": "Basic",

    /**
     * value: "NTLM"
     * @const
     */
    "NTLM": "NTLM"
};



export default WebproxySettings;

