/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessControlRecord from './model/AccessControlRecord';
import AccessControlRecordList from './model/AccessControlRecordList';
import AccessControlRecordProperties from './model/AccessControlRecordProperties';
import AcsConfiguration from './model/AcsConfiguration';
import Alert from './model/Alert';
import AlertErrorDetails from './model/AlertErrorDetails';
import AlertFilter from './model/AlertFilter';
import AlertList from './model/AlertList';
import AlertNotificationProperties from './model/AlertNotificationProperties';
import AlertProperties from './model/AlertProperties';
import AlertSettings from './model/AlertSettings';
import AlertSource from './model/AlertSource';
import AsymmetricEncryptedSecret from './model/AsymmetricEncryptedSecret';
import AvailableProviderOperation from './model/AvailableProviderOperation';
import AvailableProviderOperationDisplay from './model/AvailableProviderOperationDisplay';
import AvailableProviderOperationList from './model/AvailableProviderOperationList';
import Backup from './model/Backup';
import BackupElement from './model/BackupElement';
import BackupFilter from './model/BackupFilter';
import BackupList from './model/BackupList';
import BackupPolicy from './model/BackupPolicy';
import BackupPolicyList from './model/BackupPolicyList';
import BackupPolicyProperties from './model/BackupPolicyProperties';
import BackupProperties from './model/BackupProperties';
import BackupSchedule from './model/BackupSchedule';
import BackupScheduleList from './model/BackupScheduleList';
import BackupScheduleProperties from './model/BackupScheduleProperties';
import BandwidthRateSettingProperties from './model/BandwidthRateSettingProperties';
import BandwidthSchedule from './model/BandwidthSchedule';
import BandwidthSetting from './model/BandwidthSetting';
import BandwidthSettingList from './model/BandwidthSettingList';
import BaseModel from './model/BaseModel';
import ChapSettings from './model/ChapSettings';
import ClearAlertRequest from './model/ClearAlertRequest';
import CloneRequest from './model/CloneRequest';
import CloudAppliance from './model/CloudAppliance';
import CloudApplianceConfiguration from './model/CloudApplianceConfiguration';
import CloudApplianceConfigurationList from './model/CloudApplianceConfigurationList';
import CloudApplianceConfigurationProperties from './model/CloudApplianceConfigurationProperties';
import CloudApplianceSettings from './model/CloudApplianceSettings';
import ConfigureDeviceRequest from './model/ConfigureDeviceRequest';
import ConfigureDeviceRequestProperties from './model/ConfigureDeviceRequestProperties';
import ControllerPowerStateChangeRequest from './model/ControllerPowerStateChangeRequest';
import ControllerPowerStateChangeRequestProperties from './model/ControllerPowerStateChangeRequestProperties';
import DNSSettings from './model/DNSSettings';
import DataStatistics from './model/DataStatistics';
import Device from './model/Device';
import DeviceDetails from './model/DeviceDetails';
import DeviceList from './model/DeviceList';
import DevicePatch from './model/DevicePatch';
import DevicePatchProperties from './model/DevicePatchProperties';
import DeviceProperties from './model/DeviceProperties';
import DeviceRolloverDetails from './model/DeviceRolloverDetails';
import DimensionFilter from './model/DimensionFilter';
import EncryptionSettings from './model/EncryptionSettings';
import EncryptionSettingsProperties from './model/EncryptionSettingsProperties';
import FailoverRequest from './model/FailoverRequest';
import FailoverSet from './model/FailoverSet';
import FailoverSetEligibilityResult from './model/FailoverSetEligibilityResult';
import FailoverSetsList from './model/FailoverSetsList';
import FailoverTarget from './model/FailoverTarget';
import FailoverTargetsList from './model/FailoverTargetsList';
import Feature from './model/Feature';
import FeatureFilter from './model/FeatureFilter';
import FeatureList from './model/FeatureList';
import HardwareComponent from './model/HardwareComponent';
import HardwareComponentGroup from './model/HardwareComponentGroup';
import HardwareComponentGroupList from './model/HardwareComponentGroupList';
import HardwareComponentGroupProperties from './model/HardwareComponentGroupProperties';
import Job from './model/Job';
import JobErrorDetails from './model/JobErrorDetails';
import JobErrorItem from './model/JobErrorItem';
import JobFilter from './model/JobFilter';
import JobList from './model/JobList';
import JobProperties from './model/JobProperties';
import JobStage from './model/JobStage';
import Key from './model/Key';
import ListFailoverTargetsRequest from './model/ListFailoverTargetsRequest';
import Manager from './model/Manager';
import ManagerExtendedInfo from './model/ManagerExtendedInfo';
import ManagerExtendedInfoProperties from './model/ManagerExtendedInfoProperties';
import ManagerIntrinsicSettings from './model/ManagerIntrinsicSettings';
import ManagerList from './model/ManagerList';
import ManagerPatch from './model/ManagerPatch';
import ManagerProperties from './model/ManagerProperties';
import ManagerSku from './model/ManagerSku';
import MetricAvailablity from './model/MetricAvailablity';
import MetricData from './model/MetricData';
import MetricDefinition from './model/MetricDefinition';
import MetricDefinitionList from './model/MetricDefinitionList';
import MetricDimension from './model/MetricDimension';
import MetricFilter from './model/MetricFilter';
import MetricList from './model/MetricList';
import MetricName from './model/MetricName';
import MetricNameFilter from './model/MetricNameFilter';
import Metrics from './model/Metrics';
import NetworkAdapterList from './model/NetworkAdapterList';
import NetworkAdapters from './model/NetworkAdapters';
import NetworkInterfaceData0Settings from './model/NetworkInterfaceData0Settings';
import NetworkSettings from './model/NetworkSettings';
import NetworkSettingsPatch from './model/NetworkSettingsPatch';
import NetworkSettingsPatchProperties from './model/NetworkSettingsPatchProperties';
import NetworkSettingsProperties from './model/NetworkSettingsProperties';
import NicIPv4 from './model/NicIPv4';
import NicIPv6 from './model/NicIPv6';
import PublicKey from './model/PublicKey';
import RemoteManagementSettings from './model/RemoteManagementSettings';
import RemoteManagementSettingsPatch from './model/RemoteManagementSettingsPatch';
import Resource from './model/Resource';
import ScheduleRecurrence from './model/ScheduleRecurrence';
import SecondaryDNSSettings from './model/SecondaryDNSSettings';
import SecuritySettings from './model/SecuritySettings';
import SecuritySettingsPatch from './model/SecuritySettingsPatch';
import SecuritySettingsPatchProperties from './model/SecuritySettingsPatchProperties';
import SecuritySettingsProperties from './model/SecuritySettingsProperties';
import SendTestAlertEmailRequest from './model/SendTestAlertEmailRequest';
import StorageAccountCredential from './model/StorageAccountCredential';
import StorageAccountCredentialList from './model/StorageAccountCredentialList';
import StorageAccountCredentialProperties from './model/StorageAccountCredentialProperties';
import SymmetricEncryptedSecret from './model/SymmetricEncryptedSecret';
import TargetEligibilityErrorMessage from './model/TargetEligibilityErrorMessage';
import TargetEligibilityResult from './model/TargetEligibilityResult';
import Time from './model/Time';
import TimeSettings from './model/TimeSettings';
import TimeSettingsProperties from './model/TimeSettingsProperties';
import Updates from './model/Updates';
import UpdatesProperties from './model/UpdatesProperties';
import VmImage from './model/VmImage';
import Volume from './model/Volume';
import VolumeContainer from './model/VolumeContainer';
import VolumeContainerFailoverMetadata from './model/VolumeContainerFailoverMetadata';
import VolumeContainerList from './model/VolumeContainerList';
import VolumeContainerProperties from './model/VolumeContainerProperties';
import VolumeFailoverMetadata from './model/VolumeFailoverMetadata';
import VolumeList from './model/VolumeList';
import VolumeProperties from './model/VolumeProperties';
import WebproxySettings from './model/WebproxySettings';
import AccessControlRecordsApi from './api/AccessControlRecordsApi';
import AlertsApi from './api/AlertsApi';
import BackupPoliciesApi from './api/BackupPoliciesApi';
import BackupSchedulesApi from './api/BackupSchedulesApi';
import BackupsApi from './api/BackupsApi';
import BandwidthSettingsApi from './api/BandwidthSettingsApi';
import CloudAppliancesApi from './api/CloudAppliancesApi';
import DeviceSettingsApi from './api/DeviceSettingsApi';
import DevicesApi from './api/DevicesApi';
import HardwareComponentGroupsApi from './api/HardwareComponentGroupsApi';
import JobsApi from './api/JobsApi';
import ManagersApi from './api/ManagersApi';
import OperationsApi from './api/OperationsApi';
import StorageAccountCredentialsApi from './api/StorageAccountCredentialsApi';
import VolumeContainersApi from './api/VolumeContainersApi';
import VolumesApi from './api/VolumesApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var StorSimple8000SeriesManagementClient = require('index'); // See note below*.
* var xxxSvc = new StorSimple8000SeriesManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new StorSimple8000SeriesManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new StorSimple8000SeriesManagementClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new StorSimple8000SeriesManagementClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-06-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessControlRecord model constructor.
     * @property {module:model/AccessControlRecord}
     */
    AccessControlRecord,

    /**
     * The AccessControlRecordList model constructor.
     * @property {module:model/AccessControlRecordList}
     */
    AccessControlRecordList,

    /**
     * The AccessControlRecordProperties model constructor.
     * @property {module:model/AccessControlRecordProperties}
     */
    AccessControlRecordProperties,

    /**
     * The AcsConfiguration model constructor.
     * @property {module:model/AcsConfiguration}
     */
    AcsConfiguration,

    /**
     * The Alert model constructor.
     * @property {module:model/Alert}
     */
    Alert,

    /**
     * The AlertErrorDetails model constructor.
     * @property {module:model/AlertErrorDetails}
     */
    AlertErrorDetails,

    /**
     * The AlertFilter model constructor.
     * @property {module:model/AlertFilter}
     */
    AlertFilter,

    /**
     * The AlertList model constructor.
     * @property {module:model/AlertList}
     */
    AlertList,

    /**
     * The AlertNotificationProperties model constructor.
     * @property {module:model/AlertNotificationProperties}
     */
    AlertNotificationProperties,

    /**
     * The AlertProperties model constructor.
     * @property {module:model/AlertProperties}
     */
    AlertProperties,

    /**
     * The AlertSettings model constructor.
     * @property {module:model/AlertSettings}
     */
    AlertSettings,

    /**
     * The AlertSource model constructor.
     * @property {module:model/AlertSource}
     */
    AlertSource,

    /**
     * The AsymmetricEncryptedSecret model constructor.
     * @property {module:model/AsymmetricEncryptedSecret}
     */
    AsymmetricEncryptedSecret,

    /**
     * The AvailableProviderOperation model constructor.
     * @property {module:model/AvailableProviderOperation}
     */
    AvailableProviderOperation,

    /**
     * The AvailableProviderOperationDisplay model constructor.
     * @property {module:model/AvailableProviderOperationDisplay}
     */
    AvailableProviderOperationDisplay,

    /**
     * The AvailableProviderOperationList model constructor.
     * @property {module:model/AvailableProviderOperationList}
     */
    AvailableProviderOperationList,

    /**
     * The Backup model constructor.
     * @property {module:model/Backup}
     */
    Backup,

    /**
     * The BackupElement model constructor.
     * @property {module:model/BackupElement}
     */
    BackupElement,

    /**
     * The BackupFilter model constructor.
     * @property {module:model/BackupFilter}
     */
    BackupFilter,

    /**
     * The BackupList model constructor.
     * @property {module:model/BackupList}
     */
    BackupList,

    /**
     * The BackupPolicy model constructor.
     * @property {module:model/BackupPolicy}
     */
    BackupPolicy,

    /**
     * The BackupPolicyList model constructor.
     * @property {module:model/BackupPolicyList}
     */
    BackupPolicyList,

    /**
     * The BackupPolicyProperties model constructor.
     * @property {module:model/BackupPolicyProperties}
     */
    BackupPolicyProperties,

    /**
     * The BackupProperties model constructor.
     * @property {module:model/BackupProperties}
     */
    BackupProperties,

    /**
     * The BackupSchedule model constructor.
     * @property {module:model/BackupSchedule}
     */
    BackupSchedule,

    /**
     * The BackupScheduleList model constructor.
     * @property {module:model/BackupScheduleList}
     */
    BackupScheduleList,

    /**
     * The BackupScheduleProperties model constructor.
     * @property {module:model/BackupScheduleProperties}
     */
    BackupScheduleProperties,

    /**
     * The BandwidthRateSettingProperties model constructor.
     * @property {module:model/BandwidthRateSettingProperties}
     */
    BandwidthRateSettingProperties,

    /**
     * The BandwidthSchedule model constructor.
     * @property {module:model/BandwidthSchedule}
     */
    BandwidthSchedule,

    /**
     * The BandwidthSetting model constructor.
     * @property {module:model/BandwidthSetting}
     */
    BandwidthSetting,

    /**
     * The BandwidthSettingList model constructor.
     * @property {module:model/BandwidthSettingList}
     */
    BandwidthSettingList,

    /**
     * The BaseModel model constructor.
     * @property {module:model/BaseModel}
     */
    BaseModel,

    /**
     * The ChapSettings model constructor.
     * @property {module:model/ChapSettings}
     */
    ChapSettings,

    /**
     * The ClearAlertRequest model constructor.
     * @property {module:model/ClearAlertRequest}
     */
    ClearAlertRequest,

    /**
     * The CloneRequest model constructor.
     * @property {module:model/CloneRequest}
     */
    CloneRequest,

    /**
     * The CloudAppliance model constructor.
     * @property {module:model/CloudAppliance}
     */
    CloudAppliance,

    /**
     * The CloudApplianceConfiguration model constructor.
     * @property {module:model/CloudApplianceConfiguration}
     */
    CloudApplianceConfiguration,

    /**
     * The CloudApplianceConfigurationList model constructor.
     * @property {module:model/CloudApplianceConfigurationList}
     */
    CloudApplianceConfigurationList,

    /**
     * The CloudApplianceConfigurationProperties model constructor.
     * @property {module:model/CloudApplianceConfigurationProperties}
     */
    CloudApplianceConfigurationProperties,

    /**
     * The CloudApplianceSettings model constructor.
     * @property {module:model/CloudApplianceSettings}
     */
    CloudApplianceSettings,

    /**
     * The ConfigureDeviceRequest model constructor.
     * @property {module:model/ConfigureDeviceRequest}
     */
    ConfigureDeviceRequest,

    /**
     * The ConfigureDeviceRequestProperties model constructor.
     * @property {module:model/ConfigureDeviceRequestProperties}
     */
    ConfigureDeviceRequestProperties,

    /**
     * The ControllerPowerStateChangeRequest model constructor.
     * @property {module:model/ControllerPowerStateChangeRequest}
     */
    ControllerPowerStateChangeRequest,

    /**
     * The ControllerPowerStateChangeRequestProperties model constructor.
     * @property {module:model/ControllerPowerStateChangeRequestProperties}
     */
    ControllerPowerStateChangeRequestProperties,

    /**
     * The DNSSettings model constructor.
     * @property {module:model/DNSSettings}
     */
    DNSSettings,

    /**
     * The DataStatistics model constructor.
     * @property {module:model/DataStatistics}
     */
    DataStatistics,

    /**
     * The Device model constructor.
     * @property {module:model/Device}
     */
    Device,

    /**
     * The DeviceDetails model constructor.
     * @property {module:model/DeviceDetails}
     */
    DeviceDetails,

    /**
     * The DeviceList model constructor.
     * @property {module:model/DeviceList}
     */
    DeviceList,

    /**
     * The DevicePatch model constructor.
     * @property {module:model/DevicePatch}
     */
    DevicePatch,

    /**
     * The DevicePatchProperties model constructor.
     * @property {module:model/DevicePatchProperties}
     */
    DevicePatchProperties,

    /**
     * The DeviceProperties model constructor.
     * @property {module:model/DeviceProperties}
     */
    DeviceProperties,

    /**
     * The DeviceRolloverDetails model constructor.
     * @property {module:model/DeviceRolloverDetails}
     */
    DeviceRolloverDetails,

    /**
     * The DimensionFilter model constructor.
     * @property {module:model/DimensionFilter}
     */
    DimensionFilter,

    /**
     * The EncryptionSettings model constructor.
     * @property {module:model/EncryptionSettings}
     */
    EncryptionSettings,

    /**
     * The EncryptionSettingsProperties model constructor.
     * @property {module:model/EncryptionSettingsProperties}
     */
    EncryptionSettingsProperties,

    /**
     * The FailoverRequest model constructor.
     * @property {module:model/FailoverRequest}
     */
    FailoverRequest,

    /**
     * The FailoverSet model constructor.
     * @property {module:model/FailoverSet}
     */
    FailoverSet,

    /**
     * The FailoverSetEligibilityResult model constructor.
     * @property {module:model/FailoverSetEligibilityResult}
     */
    FailoverSetEligibilityResult,

    /**
     * The FailoverSetsList model constructor.
     * @property {module:model/FailoverSetsList}
     */
    FailoverSetsList,

    /**
     * The FailoverTarget model constructor.
     * @property {module:model/FailoverTarget}
     */
    FailoverTarget,

    /**
     * The FailoverTargetsList model constructor.
     * @property {module:model/FailoverTargetsList}
     */
    FailoverTargetsList,

    /**
     * The Feature model constructor.
     * @property {module:model/Feature}
     */
    Feature,

    /**
     * The FeatureFilter model constructor.
     * @property {module:model/FeatureFilter}
     */
    FeatureFilter,

    /**
     * The FeatureList model constructor.
     * @property {module:model/FeatureList}
     */
    FeatureList,

    /**
     * The HardwareComponent model constructor.
     * @property {module:model/HardwareComponent}
     */
    HardwareComponent,

    /**
     * The HardwareComponentGroup model constructor.
     * @property {module:model/HardwareComponentGroup}
     */
    HardwareComponentGroup,

    /**
     * The HardwareComponentGroupList model constructor.
     * @property {module:model/HardwareComponentGroupList}
     */
    HardwareComponentGroupList,

    /**
     * The HardwareComponentGroupProperties model constructor.
     * @property {module:model/HardwareComponentGroupProperties}
     */
    HardwareComponentGroupProperties,

    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job,

    /**
     * The JobErrorDetails model constructor.
     * @property {module:model/JobErrorDetails}
     */
    JobErrorDetails,

    /**
     * The JobErrorItem model constructor.
     * @property {module:model/JobErrorItem}
     */
    JobErrorItem,

    /**
     * The JobFilter model constructor.
     * @property {module:model/JobFilter}
     */
    JobFilter,

    /**
     * The JobList model constructor.
     * @property {module:model/JobList}
     */
    JobList,

    /**
     * The JobProperties model constructor.
     * @property {module:model/JobProperties}
     */
    JobProperties,

    /**
     * The JobStage model constructor.
     * @property {module:model/JobStage}
     */
    JobStage,

    /**
     * The Key model constructor.
     * @property {module:model/Key}
     */
    Key,

    /**
     * The ListFailoverTargetsRequest model constructor.
     * @property {module:model/ListFailoverTargetsRequest}
     */
    ListFailoverTargetsRequest,

    /**
     * The Manager model constructor.
     * @property {module:model/Manager}
     */
    Manager,

    /**
     * The ManagerExtendedInfo model constructor.
     * @property {module:model/ManagerExtendedInfo}
     */
    ManagerExtendedInfo,

    /**
     * The ManagerExtendedInfoProperties model constructor.
     * @property {module:model/ManagerExtendedInfoProperties}
     */
    ManagerExtendedInfoProperties,

    /**
     * The ManagerIntrinsicSettings model constructor.
     * @property {module:model/ManagerIntrinsicSettings}
     */
    ManagerIntrinsicSettings,

    /**
     * The ManagerList model constructor.
     * @property {module:model/ManagerList}
     */
    ManagerList,

    /**
     * The ManagerPatch model constructor.
     * @property {module:model/ManagerPatch}
     */
    ManagerPatch,

    /**
     * The ManagerProperties model constructor.
     * @property {module:model/ManagerProperties}
     */
    ManagerProperties,

    /**
     * The ManagerSku model constructor.
     * @property {module:model/ManagerSku}
     */
    ManagerSku,

    /**
     * The MetricAvailablity model constructor.
     * @property {module:model/MetricAvailablity}
     */
    MetricAvailablity,

    /**
     * The MetricData model constructor.
     * @property {module:model/MetricData}
     */
    MetricData,

    /**
     * The MetricDefinition model constructor.
     * @property {module:model/MetricDefinition}
     */
    MetricDefinition,

    /**
     * The MetricDefinitionList model constructor.
     * @property {module:model/MetricDefinitionList}
     */
    MetricDefinitionList,

    /**
     * The MetricDimension model constructor.
     * @property {module:model/MetricDimension}
     */
    MetricDimension,

    /**
     * The MetricFilter model constructor.
     * @property {module:model/MetricFilter}
     */
    MetricFilter,

    /**
     * The MetricList model constructor.
     * @property {module:model/MetricList}
     */
    MetricList,

    /**
     * The MetricName model constructor.
     * @property {module:model/MetricName}
     */
    MetricName,

    /**
     * The MetricNameFilter model constructor.
     * @property {module:model/MetricNameFilter}
     */
    MetricNameFilter,

    /**
     * The Metrics model constructor.
     * @property {module:model/Metrics}
     */
    Metrics,

    /**
     * The NetworkAdapterList model constructor.
     * @property {module:model/NetworkAdapterList}
     */
    NetworkAdapterList,

    /**
     * The NetworkAdapters model constructor.
     * @property {module:model/NetworkAdapters}
     */
    NetworkAdapters,

    /**
     * The NetworkInterfaceData0Settings model constructor.
     * @property {module:model/NetworkInterfaceData0Settings}
     */
    NetworkInterfaceData0Settings,

    /**
     * The NetworkSettings model constructor.
     * @property {module:model/NetworkSettings}
     */
    NetworkSettings,

    /**
     * The NetworkSettingsPatch model constructor.
     * @property {module:model/NetworkSettingsPatch}
     */
    NetworkSettingsPatch,

    /**
     * The NetworkSettingsPatchProperties model constructor.
     * @property {module:model/NetworkSettingsPatchProperties}
     */
    NetworkSettingsPatchProperties,

    /**
     * The NetworkSettingsProperties model constructor.
     * @property {module:model/NetworkSettingsProperties}
     */
    NetworkSettingsProperties,

    /**
     * The NicIPv4 model constructor.
     * @property {module:model/NicIPv4}
     */
    NicIPv4,

    /**
     * The NicIPv6 model constructor.
     * @property {module:model/NicIPv6}
     */
    NicIPv6,

    /**
     * The PublicKey model constructor.
     * @property {module:model/PublicKey}
     */
    PublicKey,

    /**
     * The RemoteManagementSettings model constructor.
     * @property {module:model/RemoteManagementSettings}
     */
    RemoteManagementSettings,

    /**
     * The RemoteManagementSettingsPatch model constructor.
     * @property {module:model/RemoteManagementSettingsPatch}
     */
    RemoteManagementSettingsPatch,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ScheduleRecurrence model constructor.
     * @property {module:model/ScheduleRecurrence}
     */
    ScheduleRecurrence,

    /**
     * The SecondaryDNSSettings model constructor.
     * @property {module:model/SecondaryDNSSettings}
     */
    SecondaryDNSSettings,

    /**
     * The SecuritySettings model constructor.
     * @property {module:model/SecuritySettings}
     */
    SecuritySettings,

    /**
     * The SecuritySettingsPatch model constructor.
     * @property {module:model/SecuritySettingsPatch}
     */
    SecuritySettingsPatch,

    /**
     * The SecuritySettingsPatchProperties model constructor.
     * @property {module:model/SecuritySettingsPatchProperties}
     */
    SecuritySettingsPatchProperties,

    /**
     * The SecuritySettingsProperties model constructor.
     * @property {module:model/SecuritySettingsProperties}
     */
    SecuritySettingsProperties,

    /**
     * The SendTestAlertEmailRequest model constructor.
     * @property {module:model/SendTestAlertEmailRequest}
     */
    SendTestAlertEmailRequest,

    /**
     * The StorageAccountCredential model constructor.
     * @property {module:model/StorageAccountCredential}
     */
    StorageAccountCredential,

    /**
     * The StorageAccountCredentialList model constructor.
     * @property {module:model/StorageAccountCredentialList}
     */
    StorageAccountCredentialList,

    /**
     * The StorageAccountCredentialProperties model constructor.
     * @property {module:model/StorageAccountCredentialProperties}
     */
    StorageAccountCredentialProperties,

    /**
     * The SymmetricEncryptedSecret model constructor.
     * @property {module:model/SymmetricEncryptedSecret}
     */
    SymmetricEncryptedSecret,

    /**
     * The TargetEligibilityErrorMessage model constructor.
     * @property {module:model/TargetEligibilityErrorMessage}
     */
    TargetEligibilityErrorMessage,

    /**
     * The TargetEligibilityResult model constructor.
     * @property {module:model/TargetEligibilityResult}
     */
    TargetEligibilityResult,

    /**
     * The Time model constructor.
     * @property {module:model/Time}
     */
    Time,

    /**
     * The TimeSettings model constructor.
     * @property {module:model/TimeSettings}
     */
    TimeSettings,

    /**
     * The TimeSettingsProperties model constructor.
     * @property {module:model/TimeSettingsProperties}
     */
    TimeSettingsProperties,

    /**
     * The Updates model constructor.
     * @property {module:model/Updates}
     */
    Updates,

    /**
     * The UpdatesProperties model constructor.
     * @property {module:model/UpdatesProperties}
     */
    UpdatesProperties,

    /**
     * The VmImage model constructor.
     * @property {module:model/VmImage}
     */
    VmImage,

    /**
     * The Volume model constructor.
     * @property {module:model/Volume}
     */
    Volume,

    /**
     * The VolumeContainer model constructor.
     * @property {module:model/VolumeContainer}
     */
    VolumeContainer,

    /**
     * The VolumeContainerFailoverMetadata model constructor.
     * @property {module:model/VolumeContainerFailoverMetadata}
     */
    VolumeContainerFailoverMetadata,

    /**
     * The VolumeContainerList model constructor.
     * @property {module:model/VolumeContainerList}
     */
    VolumeContainerList,

    /**
     * The VolumeContainerProperties model constructor.
     * @property {module:model/VolumeContainerProperties}
     */
    VolumeContainerProperties,

    /**
     * The VolumeFailoverMetadata model constructor.
     * @property {module:model/VolumeFailoverMetadata}
     */
    VolumeFailoverMetadata,

    /**
     * The VolumeList model constructor.
     * @property {module:model/VolumeList}
     */
    VolumeList,

    /**
     * The VolumeProperties model constructor.
     * @property {module:model/VolumeProperties}
     */
    VolumeProperties,

    /**
     * The WebproxySettings model constructor.
     * @property {module:model/WebproxySettings}
     */
    WebproxySettings,

    /**
    * The AccessControlRecordsApi service constructor.
    * @property {module:api/AccessControlRecordsApi}
    */
    AccessControlRecordsApi,

    /**
    * The AlertsApi service constructor.
    * @property {module:api/AlertsApi}
    */
    AlertsApi,

    /**
    * The BackupPoliciesApi service constructor.
    * @property {module:api/BackupPoliciesApi}
    */
    BackupPoliciesApi,

    /**
    * The BackupSchedulesApi service constructor.
    * @property {module:api/BackupSchedulesApi}
    */
    BackupSchedulesApi,

    /**
    * The BackupsApi service constructor.
    * @property {module:api/BackupsApi}
    */
    BackupsApi,

    /**
    * The BandwidthSettingsApi service constructor.
    * @property {module:api/BandwidthSettingsApi}
    */
    BandwidthSettingsApi,

    /**
    * The CloudAppliancesApi service constructor.
    * @property {module:api/CloudAppliancesApi}
    */
    CloudAppliancesApi,

    /**
    * The DeviceSettingsApi service constructor.
    * @property {module:api/DeviceSettingsApi}
    */
    DeviceSettingsApi,

    /**
    * The DevicesApi service constructor.
    * @property {module:api/DevicesApi}
    */
    DevicesApi,

    /**
    * The HardwareComponentGroupsApi service constructor.
    * @property {module:api/HardwareComponentGroupsApi}
    */
    HardwareComponentGroupsApi,

    /**
    * The JobsApi service constructor.
    * @property {module:api/JobsApi}
    */
    JobsApi,

    /**
    * The ManagersApi service constructor.
    * @property {module:api/ManagersApi}
    */
    ManagersApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi,

    /**
    * The StorageAccountCredentialsApi service constructor.
    * @property {module:api/StorageAccountCredentialsApi}
    */
    StorageAccountCredentialsApi,

    /**
    * The VolumeContainersApi service constructor.
    * @property {module:api/VolumeContainersApi}
    */
    VolumeContainersApi,

    /**
    * The VolumesApi service constructor.
    * @property {module:api/VolumesApi}
    */
    VolumesApi
};
