/**
 * StorSimple8000SeriesManagementClient
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2017-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ControllerPowerStateChangeRequest from '../model/ControllerPowerStateChangeRequest';
import HardwareComponentGroupList from '../model/HardwareComponentGroupList';

/**
* HardwareComponentGroups service.
* @module api/HardwareComponentGroupsApi
* @version 2017-06-01
*/
export default class HardwareComponentGroupsApi {

    /**
    * Constructs a new HardwareComponentGroupsApi. 
    * @alias module:api/HardwareComponentGroupsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the hardwareComponentGroupsChangeControllerPowerState operation.
     * @callback module:api/HardwareComponentGroupsApi~hardwareComponentGroupsChangeControllerPowerStateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Changes the power state of the controller.
     * @param {String} deviceName The device name
     * @param {String} hardwareComponentGroupName The hardware component group name.
     * @param {String} subscriptionId The subscription id
     * @param {String} resourceGroupName The resource group name
     * @param {String} managerName The manager name
     * @param {String} apiVersion The api version
     * @param {module:model/ControllerPowerStateChangeRequest} parameters The controller power state change request.
     * @param {module:api/HardwareComponentGroupsApi~hardwareComponentGroupsChangeControllerPowerStateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    hardwareComponentGroupsChangeControllerPowerState(deviceName, hardwareComponentGroupName, subscriptionId, resourceGroupName, managerName, apiVersion, parameters, callback) {
      let postBody = parameters;
      // verify the required parameter 'deviceName' is set
      if (deviceName === undefined || deviceName === null) {
        throw new Error("Missing the required parameter 'deviceName' when calling hardwareComponentGroupsChangeControllerPowerState");
      }
      // verify the required parameter 'hardwareComponentGroupName' is set
      if (hardwareComponentGroupName === undefined || hardwareComponentGroupName === null) {
        throw new Error("Missing the required parameter 'hardwareComponentGroupName' when calling hardwareComponentGroupsChangeControllerPowerState");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling hardwareComponentGroupsChangeControllerPowerState");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling hardwareComponentGroupsChangeControllerPowerState");
      }
      // verify the required parameter 'managerName' is set
      if (managerName === undefined || managerName === null) {
        throw new Error("Missing the required parameter 'managerName' when calling hardwareComponentGroupsChangeControllerPowerState");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling hardwareComponentGroupsChangeControllerPowerState");
      }
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling hardwareComponentGroupsChangeControllerPowerState");
      }

      let pathParams = {
        'deviceName': deviceName,
        'hardwareComponentGroupName': hardwareComponentGroupName,
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'managerName': managerName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/hardwareComponentGroups/{hardwareComponentGroupName}/changeControllerPowerState', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the hardwareComponentGroupsListByDevice operation.
     * @callback module:api/HardwareComponentGroupsApi~hardwareComponentGroupsListByDeviceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HardwareComponentGroupList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the hardware component groups at device-level.
     * @param {String} deviceName The device name
     * @param {String} subscriptionId The subscription id
     * @param {String} resourceGroupName The resource group name
     * @param {String} managerName The manager name
     * @param {String} apiVersion The api version
     * @param {module:api/HardwareComponentGroupsApi~hardwareComponentGroupsListByDeviceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HardwareComponentGroupList}
     */
    hardwareComponentGroupsListByDevice(deviceName, subscriptionId, resourceGroupName, managerName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'deviceName' is set
      if (deviceName === undefined || deviceName === null) {
        throw new Error("Missing the required parameter 'deviceName' when calling hardwareComponentGroupsListByDevice");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling hardwareComponentGroupsListByDevice");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling hardwareComponentGroupsListByDevice");
      }
      // verify the required parameter 'managerName' is set
      if (managerName === undefined || managerName === null) {
        throw new Error("Missing the required parameter 'managerName' when calling hardwareComponentGroupsListByDevice");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling hardwareComponentGroupsListByDevice");
      }

      let pathParams = {
        'deviceName': deviceName,
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'managerName': managerName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = HardwareComponentGroupList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/hardwareComponentGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
