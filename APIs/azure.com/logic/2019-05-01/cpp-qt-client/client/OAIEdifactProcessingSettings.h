/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEdifactProcessingSettings.h
 *
 * The Edifact agreement protocol settings.
 */

#ifndef OAIEdifactProcessingSettings_H
#define OAIEdifactProcessingSettings_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEdifactProcessingSettings : public OAIObject {
public:
    OAIEdifactProcessingSettings();
    OAIEdifactProcessingSettings(QString json);
    ~OAIEdifactProcessingSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCreateEmptyXmlTagsForTrailingSeparators() const;
    void setCreateEmptyXmlTagsForTrailingSeparators(const bool &create_empty_xml_tags_for_trailing_separators);
    bool is_create_empty_xml_tags_for_trailing_separators_Set() const;
    bool is_create_empty_xml_tags_for_trailing_separators_Valid() const;

    bool isMaskSecurityInfo() const;
    void setMaskSecurityInfo(const bool &mask_security_info);
    bool is_mask_security_info_Set() const;
    bool is_mask_security_info_Valid() const;

    bool isPreserveInterchange() const;
    void setPreserveInterchange(const bool &preserve_interchange);
    bool is_preserve_interchange_Set() const;
    bool is_preserve_interchange_Valid() const;

    bool isSuspendInterchangeOnError() const;
    void setSuspendInterchangeOnError(const bool &suspend_interchange_on_error);
    bool is_suspend_interchange_on_error_Set() const;
    bool is_suspend_interchange_on_error_Valid() const;

    bool isUseDotAsDecimalSeparator() const;
    void setUseDotAsDecimalSeparator(const bool &use_dot_as_decimal_separator);
    bool is_use_dot_as_decimal_separator_Set() const;
    bool is_use_dot_as_decimal_separator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_create_empty_xml_tags_for_trailing_separators;
    bool m_create_empty_xml_tags_for_trailing_separators_isSet;
    bool m_create_empty_xml_tags_for_trailing_separators_isValid;

    bool m_mask_security_info;
    bool m_mask_security_info_isSet;
    bool m_mask_security_info_isValid;

    bool m_preserve_interchange;
    bool m_preserve_interchange_isSet;
    bool m_preserve_interchange_isValid;

    bool m_suspend_interchange_on_error;
    bool m_suspend_interchange_on_error_isSet;
    bool m_suspend_interchange_on_error_isValid;

    bool m_use_dot_as_decimal_separator;
    bool m_use_dot_as_decimal_separator_isSet;
    bool m_use_dot_as_decimal_separator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEdifactProcessingSettings)

#endif // OAIEdifactProcessingSettings_H
