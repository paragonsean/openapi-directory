/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISigningAlgorithm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISigningAlgorithm::OAISigningAlgorithm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISigningAlgorithm::OAISigningAlgorithm() {
    this->initializeModel();
}

OAISigningAlgorithm::~OAISigningAlgorithm() {}

void OAISigningAlgorithm::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISigningAlgorithm::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISigningAlgorithm::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotSpecified", Qt::CaseInsensitive) == 0) {
        m_value = eOAISigningAlgorithm::NOTSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Default", Qt::CaseInsensitive) == 0) {
        m_value = eOAISigningAlgorithm::DEFAULT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHA1", Qt::CaseInsensitive) == 0) {
        m_value = eOAISigningAlgorithm::SHA1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHA2256", Qt::CaseInsensitive) == 0) {
        m_value = eOAISigningAlgorithm::SHA2256;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHA2384", Qt::CaseInsensitive) == 0) {
        m_value = eOAISigningAlgorithm::SHA2384;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHA2512", Qt::CaseInsensitive) == 0) {
        m_value = eOAISigningAlgorithm::SHA2512;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISigningAlgorithm::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISigningAlgorithm::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISigningAlgorithm::NOTSPECIFIED:
            val = "NotSpecified";
            break;
        case eOAISigningAlgorithm::DEFAULT:
            val = "Default";
            break;
        case eOAISigningAlgorithm::SHA1:
            val = "SHA1";
            break;
        case eOAISigningAlgorithm::SHA2256:
            val = "SHA2256";
            break;
        case eOAISigningAlgorithm::SHA2384:
            val = "SHA2384";
            break;
        case eOAISigningAlgorithm::SHA2512:
            val = "SHA2512";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISigningAlgorithm::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISigningAlgorithm::eOAISigningAlgorithm OAISigningAlgorithm::getValue() const {
    return m_value;
}

void OAISigningAlgorithm::setValue(const OAISigningAlgorithm::eOAISigningAlgorithm& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISigningAlgorithm::isSet() const {
    
    return m_value_isSet;
}

bool OAISigningAlgorithm::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
