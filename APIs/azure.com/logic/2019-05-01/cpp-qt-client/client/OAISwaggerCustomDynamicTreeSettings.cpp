/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISwaggerCustomDynamicTreeSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISwaggerCustomDynamicTreeSettings::OAISwaggerCustomDynamicTreeSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISwaggerCustomDynamicTreeSettings::OAISwaggerCustomDynamicTreeSettings() {
    this->initializeModel();
}

OAISwaggerCustomDynamicTreeSettings::~OAISwaggerCustomDynamicTreeSettings() {}

void OAISwaggerCustomDynamicTreeSettings::initializeModel() {

    m_can_select_leaf_nodes_isSet = false;
    m_can_select_leaf_nodes_isValid = false;

    m_can_select_parent_nodes_isSet = false;
    m_can_select_parent_nodes_isValid = false;
}

void OAISwaggerCustomDynamicTreeSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISwaggerCustomDynamicTreeSettings::fromJsonObject(QJsonObject json) {

    m_can_select_leaf_nodes_isValid = ::OpenAPI::fromJsonValue(m_can_select_leaf_nodes, json[QString("CanSelectLeafNodes")]);
    m_can_select_leaf_nodes_isSet = !json[QString("CanSelectLeafNodes")].isNull() && m_can_select_leaf_nodes_isValid;

    m_can_select_parent_nodes_isValid = ::OpenAPI::fromJsonValue(m_can_select_parent_nodes, json[QString("CanSelectParentNodes")]);
    m_can_select_parent_nodes_isSet = !json[QString("CanSelectParentNodes")].isNull() && m_can_select_parent_nodes_isValid;
}

QString OAISwaggerCustomDynamicTreeSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISwaggerCustomDynamicTreeSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_can_select_leaf_nodes_isSet) {
        obj.insert(QString("CanSelectLeafNodes"), ::OpenAPI::toJsonValue(m_can_select_leaf_nodes));
    }
    if (m_can_select_parent_nodes_isSet) {
        obj.insert(QString("CanSelectParentNodes"), ::OpenAPI::toJsonValue(m_can_select_parent_nodes));
    }
    return obj;
}

bool OAISwaggerCustomDynamicTreeSettings::isCanSelectLeafNodes() const {
    return m_can_select_leaf_nodes;
}
void OAISwaggerCustomDynamicTreeSettings::setCanSelectLeafNodes(const bool &can_select_leaf_nodes) {
    m_can_select_leaf_nodes = can_select_leaf_nodes;
    m_can_select_leaf_nodes_isSet = true;
}

bool OAISwaggerCustomDynamicTreeSettings::is_can_select_leaf_nodes_Set() const{
    return m_can_select_leaf_nodes_isSet;
}

bool OAISwaggerCustomDynamicTreeSettings::is_can_select_leaf_nodes_Valid() const{
    return m_can_select_leaf_nodes_isValid;
}

bool OAISwaggerCustomDynamicTreeSettings::isCanSelectParentNodes() const {
    return m_can_select_parent_nodes;
}
void OAISwaggerCustomDynamicTreeSettings::setCanSelectParentNodes(const bool &can_select_parent_nodes) {
    m_can_select_parent_nodes = can_select_parent_nodes;
    m_can_select_parent_nodes_isSet = true;
}

bool OAISwaggerCustomDynamicTreeSettings::is_can_select_parent_nodes_Set() const{
    return m_can_select_parent_nodes_isSet;
}

bool OAISwaggerCustomDynamicTreeSettings::is_can_select_parent_nodes_Valid() const{
    return m_can_select_parent_nodes_isValid;
}

bool OAISwaggerCustomDynamicTreeSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_can_select_leaf_nodes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_select_parent_nodes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISwaggerCustomDynamicTreeSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
