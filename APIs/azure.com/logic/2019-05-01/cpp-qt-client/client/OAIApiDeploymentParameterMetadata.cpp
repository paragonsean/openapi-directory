/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiDeploymentParameterMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiDeploymentParameterMetadata::OAIApiDeploymentParameterMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiDeploymentParameterMetadata::OAIApiDeploymentParameterMetadata() {
    this->initializeModel();
}

OAIApiDeploymentParameterMetadata::~OAIApiDeploymentParameterMetadata() {}

void OAIApiDeploymentParameterMetadata::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_is_required_isSet = false;
    m_is_required_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_visibility_isSet = false;
    m_visibility_isValid = false;
}

void OAIApiDeploymentParameterMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiDeploymentParameterMetadata::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_is_required_isValid = ::OpenAPI::fromJsonValue(m_is_required, json[QString("isRequired")]);
    m_is_required_isSet = !json[QString("isRequired")].isNull() && m_is_required_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_visibility_isValid = ::OpenAPI::fromJsonValue(m_visibility, json[QString("visibility")]);
    m_visibility_isSet = !json[QString("visibility")].isNull() && m_visibility_isValid;
}

QString OAIApiDeploymentParameterMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiDeploymentParameterMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_is_required_isSet) {
        obj.insert(QString("isRequired"), ::OpenAPI::toJsonValue(m_is_required));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_visibility.isSet()) {
        obj.insert(QString("visibility"), ::OpenAPI::toJsonValue(m_visibility));
    }
    return obj;
}

QString OAIApiDeploymentParameterMetadata::getDescription() const {
    return m_description;
}
void OAIApiDeploymentParameterMetadata::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIApiDeploymentParameterMetadata::is_description_Set() const{
    return m_description_isSet;
}

bool OAIApiDeploymentParameterMetadata::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIApiDeploymentParameterMetadata::getDisplayName() const {
    return m_display_name;
}
void OAIApiDeploymentParameterMetadata::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIApiDeploymentParameterMetadata::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIApiDeploymentParameterMetadata::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIApiDeploymentParameterMetadata::isIsRequired() const {
    return m_is_required;
}
void OAIApiDeploymentParameterMetadata::setIsRequired(const bool &is_required) {
    m_is_required = is_required;
    m_is_required_isSet = true;
}

bool OAIApiDeploymentParameterMetadata::is_is_required_Set() const{
    return m_is_required_isSet;
}

bool OAIApiDeploymentParameterMetadata::is_is_required_Valid() const{
    return m_is_required_isValid;
}

QString OAIApiDeploymentParameterMetadata::getType() const {
    return m_type;
}
void OAIApiDeploymentParameterMetadata::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIApiDeploymentParameterMetadata::is_type_Set() const{
    return m_type_isSet;
}

bool OAIApiDeploymentParameterMetadata::is_type_Valid() const{
    return m_type_isValid;
}

OAIApiDeploymentParameterVisibility OAIApiDeploymentParameterMetadata::getVisibility() const {
    return m_visibility;
}
void OAIApiDeploymentParameterMetadata::setVisibility(const OAIApiDeploymentParameterVisibility &visibility) {
    m_visibility = visibility;
    m_visibility_isSet = true;
}

bool OAIApiDeploymentParameterMetadata::is_visibility_Set() const{
    return m_visibility_isSet;
}

bool OAIApiDeploymentParameterMetadata::is_visibility_Valid() const{
    return m_visibility_isValid;
}

bool OAIApiDeploymentParameterMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visibility.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiDeploymentParameterMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
