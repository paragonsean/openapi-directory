/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIntegrationServiceEnvironmentNetworkEndpoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIntegrationServiceEnvironmentNetworkEndpoint::OAIIntegrationServiceEnvironmentNetworkEndpoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIntegrationServiceEnvironmentNetworkEndpoint::OAIIntegrationServiceEnvironmentNetworkEndpoint() {
    this->initializeModel();
}

OAIIntegrationServiceEnvironmentNetworkEndpoint::~OAIIntegrationServiceEnvironmentNetworkEndpoint() {}

void OAIIntegrationServiceEnvironmentNetworkEndpoint::initializeModel() {

    m_accessibility_isSet = false;
    m_accessibility_isValid = false;

    m_domain_name_isSet = false;
    m_domain_name_isValid = false;

    m_ports_isSet = false;
    m_ports_isValid = false;
}

void OAIIntegrationServiceEnvironmentNetworkEndpoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIntegrationServiceEnvironmentNetworkEndpoint::fromJsonObject(QJsonObject json) {

    m_accessibility_isValid = ::OpenAPI::fromJsonValue(m_accessibility, json[QString("accessibility")]);
    m_accessibility_isSet = !json[QString("accessibility")].isNull() && m_accessibility_isValid;

    m_domain_name_isValid = ::OpenAPI::fromJsonValue(m_domain_name, json[QString("domainName")]);
    m_domain_name_isSet = !json[QString("domainName")].isNull() && m_domain_name_isValid;

    m_ports_isValid = ::OpenAPI::fromJsonValue(m_ports, json[QString("ports")]);
    m_ports_isSet = !json[QString("ports")].isNull() && m_ports_isValid;
}

QString OAIIntegrationServiceEnvironmentNetworkEndpoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIntegrationServiceEnvironmentNetworkEndpoint::asJsonObject() const {
    QJsonObject obj;
    if (m_accessibility.isSet()) {
        obj.insert(QString("accessibility"), ::OpenAPI::toJsonValue(m_accessibility));
    }
    if (m_domain_name_isSet) {
        obj.insert(QString("domainName"), ::OpenAPI::toJsonValue(m_domain_name));
    }
    if (m_ports.size() > 0) {
        obj.insert(QString("ports"), ::OpenAPI::toJsonValue(m_ports));
    }
    return obj;
}

OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState OAIIntegrationServiceEnvironmentNetworkEndpoint::getAccessibility() const {
    return m_accessibility;
}
void OAIIntegrationServiceEnvironmentNetworkEndpoint::setAccessibility(const OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState &accessibility) {
    m_accessibility = accessibility;
    m_accessibility_isSet = true;
}

bool OAIIntegrationServiceEnvironmentNetworkEndpoint::is_accessibility_Set() const{
    return m_accessibility_isSet;
}

bool OAIIntegrationServiceEnvironmentNetworkEndpoint::is_accessibility_Valid() const{
    return m_accessibility_isValid;
}

QString OAIIntegrationServiceEnvironmentNetworkEndpoint::getDomainName() const {
    return m_domain_name;
}
void OAIIntegrationServiceEnvironmentNetworkEndpoint::setDomainName(const QString &domain_name) {
    m_domain_name = domain_name;
    m_domain_name_isSet = true;
}

bool OAIIntegrationServiceEnvironmentNetworkEndpoint::is_domain_name_Set() const{
    return m_domain_name_isSet;
}

bool OAIIntegrationServiceEnvironmentNetworkEndpoint::is_domain_name_Valid() const{
    return m_domain_name_isValid;
}

QList<QString> OAIIntegrationServiceEnvironmentNetworkEndpoint::getPorts() const {
    return m_ports;
}
void OAIIntegrationServiceEnvironmentNetworkEndpoint::setPorts(const QList<QString> &ports) {
    m_ports = ports;
    m_ports_isSet = true;
}

bool OAIIntegrationServiceEnvironmentNetworkEndpoint::is_ports_Set() const{
    return m_ports_isSet;
}

bool OAIIntegrationServiceEnvironmentNetworkEndpoint::is_ports_Valid() const{
    return m_ports_isValid;
}

bool OAIIntegrationServiceEnvironmentNetworkEndpoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accessibility.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ports.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIntegrationServiceEnvironmentNetworkEndpoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
