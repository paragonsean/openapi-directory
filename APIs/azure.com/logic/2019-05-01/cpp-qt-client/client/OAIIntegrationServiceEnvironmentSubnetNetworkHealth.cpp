/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIntegrationServiceEnvironmentSubnetNetworkHealth.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIntegrationServiceEnvironmentSubnetNetworkHealth::OAIIntegrationServiceEnvironmentSubnetNetworkHealth(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIntegrationServiceEnvironmentSubnetNetworkHealth::OAIIntegrationServiceEnvironmentSubnetNetworkHealth() {
    this->initializeModel();
}

OAIIntegrationServiceEnvironmentSubnetNetworkHealth::~OAIIntegrationServiceEnvironmentSubnetNetworkHealth() {}

void OAIIntegrationServiceEnvironmentSubnetNetworkHealth::initializeModel() {

    m_network_dependency_health_state_isSet = false;
    m_network_dependency_health_state_isValid = false;

    m_outbound_network_dependencies_isSet = false;
    m_outbound_network_dependencies_isValid = false;

    m_outbound_network_health_isSet = false;
    m_outbound_network_health_isValid = false;
}

void OAIIntegrationServiceEnvironmentSubnetNetworkHealth::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIntegrationServiceEnvironmentSubnetNetworkHealth::fromJsonObject(QJsonObject json) {

    m_network_dependency_health_state_isValid = ::OpenAPI::fromJsonValue(m_network_dependency_health_state, json[QString("networkDependencyHealthState")]);
    m_network_dependency_health_state_isSet = !json[QString("networkDependencyHealthState")].isNull() && m_network_dependency_health_state_isValid;

    m_outbound_network_dependencies_isValid = ::OpenAPI::fromJsonValue(m_outbound_network_dependencies, json[QString("outboundNetworkDependencies")]);
    m_outbound_network_dependencies_isSet = !json[QString("outboundNetworkDependencies")].isNull() && m_outbound_network_dependencies_isValid;

    m_outbound_network_health_isValid = ::OpenAPI::fromJsonValue(m_outbound_network_health, json[QString("outboundNetworkHealth")]);
    m_outbound_network_health_isSet = !json[QString("outboundNetworkHealth")].isNull() && m_outbound_network_health_isValid;
}

QString OAIIntegrationServiceEnvironmentSubnetNetworkHealth::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIntegrationServiceEnvironmentSubnetNetworkHealth::asJsonObject() const {
    QJsonObject obj;
    if (m_network_dependency_health_state.isSet()) {
        obj.insert(QString("networkDependencyHealthState"), ::OpenAPI::toJsonValue(m_network_dependency_health_state));
    }
    if (m_outbound_network_dependencies.size() > 0) {
        obj.insert(QString("outboundNetworkDependencies"), ::OpenAPI::toJsonValue(m_outbound_network_dependencies));
    }
    if (m_outbound_network_health.isSet()) {
        obj.insert(QString("outboundNetworkHealth"), ::OpenAPI::toJsonValue(m_outbound_network_health));
    }
    return obj;
}

OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState OAIIntegrationServiceEnvironmentSubnetNetworkHealth::getNetworkDependencyHealthState() const {
    return m_network_dependency_health_state;
}
void OAIIntegrationServiceEnvironmentSubnetNetworkHealth::setNetworkDependencyHealthState(const OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState &network_dependency_health_state) {
    m_network_dependency_health_state = network_dependency_health_state;
    m_network_dependency_health_state_isSet = true;
}

bool OAIIntegrationServiceEnvironmentSubnetNetworkHealth::is_network_dependency_health_state_Set() const{
    return m_network_dependency_health_state_isSet;
}

bool OAIIntegrationServiceEnvironmentSubnetNetworkHealth::is_network_dependency_health_state_Valid() const{
    return m_network_dependency_health_state_isValid;
}

QList<OAIIntegrationServiceEnvironmentNetworkDependency> OAIIntegrationServiceEnvironmentSubnetNetworkHealth::getOutboundNetworkDependencies() const {
    return m_outbound_network_dependencies;
}
void OAIIntegrationServiceEnvironmentSubnetNetworkHealth::setOutboundNetworkDependencies(const QList<OAIIntegrationServiceEnvironmentNetworkDependency> &outbound_network_dependencies) {
    m_outbound_network_dependencies = outbound_network_dependencies;
    m_outbound_network_dependencies_isSet = true;
}

bool OAIIntegrationServiceEnvironmentSubnetNetworkHealth::is_outbound_network_dependencies_Set() const{
    return m_outbound_network_dependencies_isSet;
}

bool OAIIntegrationServiceEnvironmentSubnetNetworkHealth::is_outbound_network_dependencies_Valid() const{
    return m_outbound_network_dependencies_isValid;
}

OAIIntegrationServiceEnvironmentNetworkDependencyHealth OAIIntegrationServiceEnvironmentSubnetNetworkHealth::getOutboundNetworkHealth() const {
    return m_outbound_network_health;
}
void OAIIntegrationServiceEnvironmentSubnetNetworkHealth::setOutboundNetworkHealth(const OAIIntegrationServiceEnvironmentNetworkDependencyHealth &outbound_network_health) {
    m_outbound_network_health = outbound_network_health;
    m_outbound_network_health_isSet = true;
}

bool OAIIntegrationServiceEnvironmentSubnetNetworkHealth::is_outbound_network_health_Set() const{
    return m_outbound_network_health_isSet;
}

bool OAIIntegrationServiceEnvironmentSubnetNetworkHealth::is_outbound_network_health_Valid() const{
    return m_outbound_network_health_isValid;
}

bool OAIIntegrationServiceEnvironmentSubnetNetworkHealth::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_dependency_health_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_outbound_network_dependencies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_outbound_network_health.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIntegrationServiceEnvironmentSubnetNetworkHealth::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_network_dependency_health_state_isValid && true;
}

} // namespace OpenAPI
