/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkConfiguration.h
 *
 * The network configuration.
 */

#ifndef OAINetworkConfiguration_H
#define OAINetworkConfiguration_H

#include <QJsonObject>

#include "OAIIntegrationServiceEnvironmentAccessEndpoint.h"
#include "OAIResourceReference.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIntegrationServiceEnvironmentAccessEndpoint;
class OAIResourceReference;

class OAINetworkConfiguration : public OAIObject {
public:
    OAINetworkConfiguration();
    OAINetworkConfiguration(QString json);
    ~OAINetworkConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIntegrationServiceEnvironmentAccessEndpoint getAccessEndpoint() const;
    void setAccessEndpoint(const OAIIntegrationServiceEnvironmentAccessEndpoint &access_endpoint);
    bool is_access_endpoint_Set() const;
    bool is_access_endpoint_Valid() const;

    QList<OAIResourceReference> getSubnets() const;
    void setSubnets(const QList<OAIResourceReference> &subnets);
    bool is_subnets_Set() const;
    bool is_subnets_Valid() const;

    QString getVirtualNetworkAddressSpace() const;
    void setVirtualNetworkAddressSpace(const QString &virtual_network_address_space);
    bool is_virtual_network_address_space_Set() const;
    bool is_virtual_network_address_space_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIntegrationServiceEnvironmentAccessEndpoint m_access_endpoint;
    bool m_access_endpoint_isSet;
    bool m_access_endpoint_isValid;

    QList<OAIResourceReference> m_subnets;
    bool m_subnets_isSet;
    bool m_subnets_isValid;

    QString m_virtual_network_address_space;
    bool m_virtual_network_address_space_isSet;
    bool m_virtual_network_address_space_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkConfiguration)

#endif // OAINetworkConfiguration_H
