/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExpression.h
 *
 * The expression.
 */

#ifndef OAIExpression_H
#define OAIExpression_H

#include <QJsonObject>

#include "OAIAzureResourceErrorInfo.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAzureResourceErrorInfo;

class OAIExpression : public OAIObject {
public:
    OAIExpression();
    OAIExpression(QString json);
    ~OAIExpression() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAzureResourceErrorInfo getError() const;
    void setError(const OAIAzureResourceErrorInfo &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QList<OAIExpression> getSubexpressions() const;
    void setSubexpressions(const QList<OAIExpression> &subexpressions);
    bool is_subexpressions_Set() const;
    bool is_subexpressions_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    OAIObject getValue() const;
    void setValue(const OAIObject &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAzureResourceErrorInfo m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QList<OAIExpression> m_subexpressions;
    bool m_subexpressions_isSet;
    bool m_subexpressions_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    OAIObject m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExpression)

#endif // OAIExpression_H
