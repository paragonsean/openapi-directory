/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApiResourceMetadata.h
 *
 * The api resource metadata.
 */

#ifndef OAIApiResourceMetadata_H
#define OAIApiResourceMetadata_H

#include <QJsonObject>

#include "OAIApiDeploymentParameterMetadataSet.h"
#include "OAIApiType.h"
#include "OAIWorkflowProvisioningState.h"
#include "OAIWsdlImportMethod.h"
#include "OAIWsdlService.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApiDeploymentParameterMetadataSet;
class OAIWsdlService;

class OAIApiResourceMetadata : public OAIObject {
public:
    OAIApiResourceMetadata();
    OAIApiResourceMetadata(QString json);
    ~OAIApiResourceMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApiType getApiType() const;
    void setApiType(const OAIApiType &api_type);
    bool is_api_type_Set() const;
    bool is_api_type_Valid() const;

    QString getBrandColor() const;
    void setBrandColor(const QString &brand_color);
    bool is_brand_color_Set() const;
    bool is_brand_color_Valid() const;

    QString getConnectionType() const;
    void setConnectionType(const QString &connection_type);
    bool is_connection_type_Set() const;
    bool is_connection_type_Valid() const;

    OAIApiDeploymentParameterMetadataSet getDeploymentParameters() const;
    void setDeploymentParameters(const OAIApiDeploymentParameterMetadataSet &deployment_parameters);
    bool is_deployment_parameters_Set() const;
    bool is_deployment_parameters_Valid() const;

    QString getHideKey() const;
    void setHideKey(const QString &hide_key);
    bool is_hide_key_Set() const;
    bool is_hide_key_Valid() const;

    OAIWorkflowProvisioningState getProvisioningState() const;
    void setProvisioningState(const OAIWorkflowProvisioningState &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIWsdlImportMethod getWsdlImportMethod() const;
    void setWsdlImportMethod(const OAIWsdlImportMethod &wsdl_import_method);
    bool is_wsdl_import_method_Set() const;
    bool is_wsdl_import_method_Valid() const;

    OAIWsdlService getWsdlService() const;
    void setWsdlService(const OAIWsdlService &wsdl_service);
    bool is_wsdl_service_Set() const;
    bool is_wsdl_service_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApiType m_api_type;
    bool m_api_type_isSet;
    bool m_api_type_isValid;

    QString m_brand_color;
    bool m_brand_color_isSet;
    bool m_brand_color_isValid;

    QString m_connection_type;
    bool m_connection_type_isSet;
    bool m_connection_type_isValid;

    OAIApiDeploymentParameterMetadataSet m_deployment_parameters;
    bool m_deployment_parameters_isSet;
    bool m_deployment_parameters_isValid;

    QString m_hide_key;
    bool m_hide_key_isSet;
    bool m_hide_key_isValid;

    OAIWorkflowProvisioningState m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIWsdlImportMethod m_wsdl_import_method;
    bool m_wsdl_import_method_isSet;
    bool m_wsdl_import_method_isValid;

    OAIWsdlService m_wsdl_service;
    bool m_wsdl_service_isSet;
    bool m_wsdl_service_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApiResourceMetadata)

#endif // OAIApiResourceMetadata_H
