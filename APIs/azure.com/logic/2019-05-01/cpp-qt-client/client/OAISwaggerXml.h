/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISwaggerXml.h
 *
 * The Swagger XML.
 */

#ifndef OAISwaggerXml_H
#define OAISwaggerXml_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISwaggerXml : public OAIObject {
public:
    OAISwaggerXml();
    OAISwaggerXml(QString json);
    ~OAISwaggerXml() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAttribute() const;
    void setAttribute(const bool &attribute);
    bool is_attribute_Set() const;
    bool is_attribute_Valid() const;

    QMap<QString, OAIObject> getExtensions() const;
    void setExtensions(const QMap<QString, OAIObject> &extensions);
    bool is_extensions_Set() const;
    bool is_extensions_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    QString getPrefix() const;
    void setPrefix(const QString &prefix);
    bool is_prefix_Set() const;
    bool is_prefix_Valid() const;

    bool isWrapped() const;
    void setWrapped(const bool &wrapped);
    bool is_wrapped_Set() const;
    bool is_wrapped_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_attribute;
    bool m_attribute_isSet;
    bool m_attribute_isValid;

    QMap<QString, OAIObject> m_extensions;
    bool m_extensions_isSet;
    bool m_extensions_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;

    QString m_prefix;
    bool m_prefix_isSet;
    bool m_prefix_isValid;

    bool m_wrapped;
    bool m_wrapped_isSet;
    bool m_wrapped_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISwaggerXml)

#endif // OAISwaggerXml_H
