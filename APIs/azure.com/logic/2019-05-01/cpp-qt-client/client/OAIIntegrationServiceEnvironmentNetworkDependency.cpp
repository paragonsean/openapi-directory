/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIntegrationServiceEnvironmentNetworkDependency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIntegrationServiceEnvironmentNetworkDependency::OAIIntegrationServiceEnvironmentNetworkDependency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIntegrationServiceEnvironmentNetworkDependency::OAIIntegrationServiceEnvironmentNetworkDependency() {
    this->initializeModel();
}

OAIIntegrationServiceEnvironmentNetworkDependency::~OAIIntegrationServiceEnvironmentNetworkDependency() {}

void OAIIntegrationServiceEnvironmentNetworkDependency::initializeModel() {

    m_category_isSet = false;
    m_category_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_endpoints_isSet = false;
    m_endpoints_isValid = false;
}

void OAIIntegrationServiceEnvironmentNetworkDependency::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIntegrationServiceEnvironmentNetworkDependency::fromJsonObject(QJsonObject json) {

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_endpoints_isValid = ::OpenAPI::fromJsonValue(m_endpoints, json[QString("endpoints")]);
    m_endpoints_isSet = !json[QString("endpoints")].isNull() && m_endpoints_isValid;
}

QString OAIIntegrationServiceEnvironmentNetworkDependency::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIntegrationServiceEnvironmentNetworkDependency::asJsonObject() const {
    QJsonObject obj;
    if (m_category.isSet()) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_endpoints.size() > 0) {
        obj.insert(QString("endpoints"), ::OpenAPI::toJsonValue(m_endpoints));
    }
    return obj;
}

OAIIntegrationServiceEnvironmentNetworkDependencyCategoryType OAIIntegrationServiceEnvironmentNetworkDependency::getCategory() const {
    return m_category;
}
void OAIIntegrationServiceEnvironmentNetworkDependency::setCategory(const OAIIntegrationServiceEnvironmentNetworkDependencyCategoryType &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIIntegrationServiceEnvironmentNetworkDependency::is_category_Set() const{
    return m_category_isSet;
}

bool OAIIntegrationServiceEnvironmentNetworkDependency::is_category_Valid() const{
    return m_category_isValid;
}

QString OAIIntegrationServiceEnvironmentNetworkDependency::getDisplayName() const {
    return m_display_name;
}
void OAIIntegrationServiceEnvironmentNetworkDependency::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIIntegrationServiceEnvironmentNetworkDependency::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIIntegrationServiceEnvironmentNetworkDependency::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIIntegrationServiceEnvironmentNetworkEndpoint> OAIIntegrationServiceEnvironmentNetworkDependency::getEndpoints() const {
    return m_endpoints;
}
void OAIIntegrationServiceEnvironmentNetworkDependency::setEndpoints(const QList<OAIIntegrationServiceEnvironmentNetworkEndpoint> &endpoints) {
    m_endpoints = endpoints;
    m_endpoints_isSet = true;
}

bool OAIIntegrationServiceEnvironmentNetworkDependency::is_endpoints_Set() const{
    return m_endpoints_isSet;
}

bool OAIIntegrationServiceEnvironmentNetworkDependency::is_endpoints_Valid() const{
    return m_endpoints_isValid;
}

bool OAIIntegrationServiceEnvironmentNetworkDependency::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoints.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIntegrationServiceEnvironmentNetworkDependency::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
