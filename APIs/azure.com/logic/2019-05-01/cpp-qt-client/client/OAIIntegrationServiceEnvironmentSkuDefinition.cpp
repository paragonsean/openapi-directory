/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIntegrationServiceEnvironmentSkuDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIntegrationServiceEnvironmentSkuDefinition::OAIIntegrationServiceEnvironmentSkuDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIntegrationServiceEnvironmentSkuDefinition::OAIIntegrationServiceEnvironmentSkuDefinition() {
    this->initializeModel();
}

OAIIntegrationServiceEnvironmentSkuDefinition::~OAIIntegrationServiceEnvironmentSkuDefinition() {}

void OAIIntegrationServiceEnvironmentSkuDefinition::initializeModel() {

    m_capacity_isSet = false;
    m_capacity_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;
}

void OAIIntegrationServiceEnvironmentSkuDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIntegrationServiceEnvironmentSkuDefinition::fromJsonObject(QJsonObject json) {

    m_capacity_isValid = ::OpenAPI::fromJsonValue(m_capacity, json[QString("capacity")]);
    m_capacity_isSet = !json[QString("capacity")].isNull() && m_capacity_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resourceType")]);
    m_resource_type_isSet = !json[QString("resourceType")].isNull() && m_resource_type_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;
}

QString OAIIntegrationServiceEnvironmentSkuDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIntegrationServiceEnvironmentSkuDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_capacity.isSet()) {
        obj.insert(QString("capacity"), ::OpenAPI::toJsonValue(m_capacity));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    if (m_sku.isSet()) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    return obj;
}

OAIIntegrationServiceEnvironmentSkuCapacity OAIIntegrationServiceEnvironmentSkuDefinition::getCapacity() const {
    return m_capacity;
}
void OAIIntegrationServiceEnvironmentSkuDefinition::setCapacity(const OAIIntegrationServiceEnvironmentSkuCapacity &capacity) {
    m_capacity = capacity;
    m_capacity_isSet = true;
}

bool OAIIntegrationServiceEnvironmentSkuDefinition::is_capacity_Set() const{
    return m_capacity_isSet;
}

bool OAIIntegrationServiceEnvironmentSkuDefinition::is_capacity_Valid() const{
    return m_capacity_isValid;
}

QString OAIIntegrationServiceEnvironmentSkuDefinition::getResourceType() const {
    return m_resource_type;
}
void OAIIntegrationServiceEnvironmentSkuDefinition::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIIntegrationServiceEnvironmentSkuDefinition::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIIntegrationServiceEnvironmentSkuDefinition::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

OAIIntegrationServiceEnvironmentSkuDefinition_sku OAIIntegrationServiceEnvironmentSkuDefinition::getSku() const {
    return m_sku;
}
void OAIIntegrationServiceEnvironmentSkuDefinition::setSku(const OAIIntegrationServiceEnvironmentSkuDefinition_sku &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIIntegrationServiceEnvironmentSkuDefinition::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIIntegrationServiceEnvironmentSkuDefinition::is_sku_Valid() const{
    return m_sku_isValid;
}

bool OAIIntegrationServiceEnvironmentSkuDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_capacity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIntegrationServiceEnvironmentSkuDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
