/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKeyVaultKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKeyVaultKey::OAIKeyVaultKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKeyVaultKey::OAIKeyVaultKey() {
    this->initializeModel();
}

OAIKeyVaultKey::~OAIKeyVaultKey() {}

void OAIKeyVaultKey::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_kid_isSet = false;
    m_kid_isValid = false;
}

void OAIKeyVaultKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKeyVaultKey::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_kid_isValid = ::OpenAPI::fromJsonValue(m_kid, json[QString("kid")]);
    m_kid_isSet = !json[QString("kid")].isNull() && m_kid_isValid;
}

QString OAIKeyVaultKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKeyVaultKey::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.isSet()) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_kid_isSet) {
        obj.insert(QString("kid"), ::OpenAPI::toJsonValue(m_kid));
    }
    return obj;
}

OAIKeyVaultKey_attributes OAIKeyVaultKey::getAttributes() const {
    return m_attributes;
}
void OAIKeyVaultKey::setAttributes(const OAIKeyVaultKey_attributes &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIKeyVaultKey::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIKeyVaultKey::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QString OAIKeyVaultKey::getKid() const {
    return m_kid;
}
void OAIKeyVaultKey::setKid(const QString &kid) {
    m_kid = kid;
    m_kid_isSet = true;
}

bool OAIKeyVaultKey::is_kid_Set() const{
    return m_kid_isSet;
}

bool OAIKeyVaultKey::is_kid_Valid() const{
    return m_kid_isValid;
}

bool OAIKeyVaultKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_kid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKeyVaultKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
