/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState() {
    this->initializeModel();
}

OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::~OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState() {}

void OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotSpecified", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::NOTSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Unknown", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Available", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::AVAILABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NotAvailable", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::NOTAVAILABLE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::NOTSPECIFIED:
            val = "NotSpecified";
            break;
        case eOAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::UNKNOWN:
            val = "Unknown";
            break;
        case eOAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::AVAILABLE:
            val = "Available";
            break;
        case eOAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::NOTAVAILABLE:
            val = "NotAvailable";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::eOAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::getValue() const {
    return m_value;
}

void OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::setValue(const OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::eOAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::isSet() const {
    
    return m_value_isSet;
}

bool OAIIntegrationServiceEnvironmentNetworkEndPointAccessibilityState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
