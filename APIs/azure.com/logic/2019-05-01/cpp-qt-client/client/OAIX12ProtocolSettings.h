/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIX12ProtocolSettings.h
 *
 * The X12 agreement protocol settings.
 */

#ifndef OAIX12ProtocolSettings_H
#define OAIX12ProtocolSettings_H

#include <QJsonObject>

#include "OAIX12AcknowledgementSettings.h"
#include "OAIX12DelimiterOverrides.h"
#include "OAIX12EnvelopeOverride.h"
#include "OAIX12EnvelopeSettings.h"
#include "OAIX12FramingSettings.h"
#include "OAIX12MessageFilter.h"
#include "OAIX12MessageIdentifier.h"
#include "OAIX12ProcessingSettings.h"
#include "OAIX12SchemaReference.h"
#include "OAIX12SecuritySettings.h"
#include "OAIX12ValidationOverride.h"
#include "OAIX12ValidationSettings.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIX12AcknowledgementSettings;
class OAIX12EnvelopeOverride;
class OAIX12EnvelopeSettings;
class OAIX12FramingSettings;
class OAIX12MessageFilter;
class OAIX12MessageIdentifier;
class OAIX12ProcessingSettings;
class OAIX12SchemaReference;
class OAIX12SecuritySettings;
class OAIX12ValidationOverride;
class OAIX12ValidationSettings;
class OAIX12DelimiterOverrides;

class OAIX12ProtocolSettings : public OAIObject {
public:
    OAIX12ProtocolSettings();
    OAIX12ProtocolSettings(QString json);
    ~OAIX12ProtocolSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIX12AcknowledgementSettings getAcknowledgementSettings() const;
    void setAcknowledgementSettings(const OAIX12AcknowledgementSettings &acknowledgement_settings);
    bool is_acknowledgement_settings_Set() const;
    bool is_acknowledgement_settings_Valid() const;

    QList<OAIX12EnvelopeOverride> getEnvelopeOverrides() const;
    void setEnvelopeOverrides(const QList<OAIX12EnvelopeOverride> &envelope_overrides);
    bool is_envelope_overrides_Set() const;
    bool is_envelope_overrides_Valid() const;

    OAIX12EnvelopeSettings getEnvelopeSettings() const;
    void setEnvelopeSettings(const OAIX12EnvelopeSettings &envelope_settings);
    bool is_envelope_settings_Set() const;
    bool is_envelope_settings_Valid() const;

    OAIX12FramingSettings getFramingSettings() const;
    void setFramingSettings(const OAIX12FramingSettings &framing_settings);
    bool is_framing_settings_Set() const;
    bool is_framing_settings_Valid() const;

    OAIX12MessageFilter getMessageFilter() const;
    void setMessageFilter(const OAIX12MessageFilter &message_filter);
    bool is_message_filter_Set() const;
    bool is_message_filter_Valid() const;

    QList<OAIX12MessageIdentifier> getMessageFilterList() const;
    void setMessageFilterList(const QList<OAIX12MessageIdentifier> &message_filter_list);
    bool is_message_filter_list_Set() const;
    bool is_message_filter_list_Valid() const;

    OAIX12ProcessingSettings getProcessingSettings() const;
    void setProcessingSettings(const OAIX12ProcessingSettings &processing_settings);
    bool is_processing_settings_Set() const;
    bool is_processing_settings_Valid() const;

    QList<OAIX12SchemaReference> getSchemaReferences() const;
    void setSchemaReferences(const QList<OAIX12SchemaReference> &schema_references);
    bool is_schema_references_Set() const;
    bool is_schema_references_Valid() const;

    OAIX12SecuritySettings getSecuritySettings() const;
    void setSecuritySettings(const OAIX12SecuritySettings &security_settings);
    bool is_security_settings_Set() const;
    bool is_security_settings_Valid() const;

    QList<OAIX12ValidationOverride> getValidationOverrides() const;
    void setValidationOverrides(const QList<OAIX12ValidationOverride> &validation_overrides);
    bool is_validation_overrides_Set() const;
    bool is_validation_overrides_Valid() const;

    OAIX12ValidationSettings getValidationSettings() const;
    void setValidationSettings(const OAIX12ValidationSettings &validation_settings);
    bool is_validation_settings_Set() const;
    bool is_validation_settings_Valid() const;

    QList<OAIX12DelimiterOverrides> getX12DelimiterOverrides() const;
    void setX12DelimiterOverrides(const QList<OAIX12DelimiterOverrides> &x12_delimiter_overrides);
    bool is_x12_delimiter_overrides_Set() const;
    bool is_x12_delimiter_overrides_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIX12AcknowledgementSettings m_acknowledgement_settings;
    bool m_acknowledgement_settings_isSet;
    bool m_acknowledgement_settings_isValid;

    QList<OAIX12EnvelopeOverride> m_envelope_overrides;
    bool m_envelope_overrides_isSet;
    bool m_envelope_overrides_isValid;

    OAIX12EnvelopeSettings m_envelope_settings;
    bool m_envelope_settings_isSet;
    bool m_envelope_settings_isValid;

    OAIX12FramingSettings m_framing_settings;
    bool m_framing_settings_isSet;
    bool m_framing_settings_isValid;

    OAIX12MessageFilter m_message_filter;
    bool m_message_filter_isSet;
    bool m_message_filter_isValid;

    QList<OAIX12MessageIdentifier> m_message_filter_list;
    bool m_message_filter_list_isSet;
    bool m_message_filter_list_isValid;

    OAIX12ProcessingSettings m_processing_settings;
    bool m_processing_settings_isSet;
    bool m_processing_settings_isValid;

    QList<OAIX12SchemaReference> m_schema_references;
    bool m_schema_references_isSet;
    bool m_schema_references_isValid;

    OAIX12SecuritySettings m_security_settings;
    bool m_security_settings_isSet;
    bool m_security_settings_isValid;

    QList<OAIX12ValidationOverride> m_validation_overrides;
    bool m_validation_overrides_isSet;
    bool m_validation_overrides_isValid;

    OAIX12ValidationSettings m_validation_settings;
    bool m_validation_settings_isSet;
    bool m_validation_settings_isValid;

    QList<OAIX12DelimiterOverrides> m_x12_delimiter_overrides;
    bool m_x12_delimiter_overrides_isSet;
    bool m_x12_delimiter_overrides_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIX12ProtocolSettings)

#endif // OAIX12ProtocolSettings_H
