/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPartnerContent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPartnerContent::OAIPartnerContent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPartnerContent::OAIPartnerContent() {
    this->initializeModel();
}

OAIPartnerContent::~OAIPartnerContent() {}

void OAIPartnerContent::initializeModel() {

    m_b2b_isSet = false;
    m_b2b_isValid = false;
}

void OAIPartnerContent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPartnerContent::fromJsonObject(QJsonObject json) {

    m_b2b_isValid = ::OpenAPI::fromJsonValue(m_b2b, json[QString("b2b")]);
    m_b2b_isSet = !json[QString("b2b")].isNull() && m_b2b_isValid;
}

QString OAIPartnerContent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPartnerContent::asJsonObject() const {
    QJsonObject obj;
    if (m_b2b.isSet()) {
        obj.insert(QString("b2b"), ::OpenAPI::toJsonValue(m_b2b));
    }
    return obj;
}

OAIB2BPartnerContent OAIPartnerContent::getB2b() const {
    return m_b2b;
}
void OAIPartnerContent::setB2b(const OAIB2BPartnerContent &b2b) {
    m_b2b = b2b;
    m_b2b_isSet = true;
}

bool OAIPartnerContent::is_b2b_Set() const{
    return m_b2b_isSet;
}

bool OAIPartnerContent::is_b2b_Valid() const{
    return m_b2b_isValid;
}

bool OAIPartnerContent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_b2b.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPartnerContent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
