/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrackingEventsDefinition.h
 *
 * The tracking events definition.
 */

#ifndef OAITrackingEventsDefinition_H
#define OAITrackingEventsDefinition_H

#include <QJsonObject>

#include "OAITrackEventsOperationOptions.h"
#include "OAITrackingEvent.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITrackingEvent;

class OAITrackingEventsDefinition : public OAIObject {
public:
    OAITrackingEventsDefinition();
    OAITrackingEventsDefinition(QString json);
    ~OAITrackingEventsDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAITrackingEvent> getEvents() const;
    void setEvents(const QList<OAITrackingEvent> &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    QString getSourceType() const;
    void setSourceType(const QString &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    OAITrackEventsOperationOptions getTrackEventsOptions() const;
    void setTrackEventsOptions(const OAITrackEventsOperationOptions &track_events_options);
    bool is_track_events_options_Set() const;
    bool is_track_events_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAITrackingEvent> m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    QString m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;

    OAITrackEventsOperationOptions m_track_events_options;
    bool m_track_events_options_isSet;
    bool m_track_events_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrackingEventsDefinition)

#endif // OAITrackingEventsDefinition_H
