/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIX12SecuritySettings.h
 *
 * The X12 agreement security settings.
 */

#ifndef OAIX12SecuritySettings_H
#define OAIX12SecuritySettings_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIX12SecuritySettings : public OAIObject {
public:
    OAIX12SecuritySettings();
    OAIX12SecuritySettings(QString json);
    ~OAIX12SecuritySettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthorizationQualifier() const;
    void setAuthorizationQualifier(const QString &authorization_qualifier);
    bool is_authorization_qualifier_Set() const;
    bool is_authorization_qualifier_Valid() const;

    QString getAuthorizationValue() const;
    void setAuthorizationValue(const QString &authorization_value);
    bool is_authorization_value_Set() const;
    bool is_authorization_value_Valid() const;

    QString getPasswordValue() const;
    void setPasswordValue(const QString &password_value);
    bool is_password_value_Set() const;
    bool is_password_value_Valid() const;

    QString getSecurityQualifier() const;
    void setSecurityQualifier(const QString &security_qualifier);
    bool is_security_qualifier_Set() const;
    bool is_security_qualifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authorization_qualifier;
    bool m_authorization_qualifier_isSet;
    bool m_authorization_qualifier_isValid;

    QString m_authorization_value;
    bool m_authorization_value_isSet;
    bool m_authorization_value_isValid;

    QString m_password_value;
    bool m_password_value_isSet;
    bool m_password_value_isValid;

    QString m_security_qualifier;
    bool m_security_qualifier_isSet;
    bool m_security_qualifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIX12SecuritySettings)

#endif // OAIX12SecuritySettings_H
