/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApiResourceProperties.h
 *
 * The API resource properties.
 */

#ifndef OAIApiResourceProperties_H
#define OAIApiResourceProperties_H

#include <QJsonObject>

#include "OAIApiResourceBackendService.h"
#include "OAIApiResourceDefinitions.h"
#include "OAIApiResourceGeneralInformation.h"
#include "OAIApiResourceMetadata.h"
#include "OAIApiResourcePolicies.h"
#include "OAIApiTier.h"
#include "OAIObject.h"
#include "OAIResourceReference.h"
#include "OAIWorkflowProvisioningState.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApiResourceDefinitions;
class OAIApiResourceBackendService;
class OAIApiResourceGeneralInformation;
class OAIResourceReference;
class OAIApiResourceMetadata;
class OAIApiResourcePolicies;

class OAIApiResourceProperties : public OAIObject {
public:
    OAIApiResourceProperties();
    OAIApiResourceProperties(QString json);
    ~OAIApiResourceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiDefinitionUrl() const;
    void setApiDefinitionUrl(const QString &api_definition_url);
    bool is_api_definition_url_Set() const;
    bool is_api_definition_url_Valid() const;

    OAIApiResourceDefinitions getApiDefinitions() const;
    void setApiDefinitions(const OAIApiResourceDefinitions &api_definitions);
    bool is_api_definitions_Set() const;
    bool is_api_definitions_Valid() const;

    OAIApiResourceBackendService getBackendService() const;
    void setBackendService(const OAIApiResourceBackendService &backend_service);
    bool is_backend_service_Set() const;
    bool is_backend_service_Valid() const;

    QList<QString> getCapabilities() const;
    void setCapabilities(const QList<QString> &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    OAIApiTier getCategory() const;
    void setCategory(const OAIApiTier &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QMap<QString, OAIObject> getConnectionParameters() const;
    void setConnectionParameters(const QMap<QString, OAIObject> &connection_parameters);
    bool is_connection_parameters_Set() const;
    bool is_connection_parameters_Valid() const;

    OAIApiResourceGeneralInformation getGeneralInformation() const;
    void setGeneralInformation(const OAIApiResourceGeneralInformation &general_information);
    bool is_general_information_Set() const;
    bool is_general_information_Valid() const;

    OAIResourceReference getIntegrationServiceEnvironment() const;
    void setIntegrationServiceEnvironment(const OAIResourceReference &integration_service_environment);
    bool is_integration_service_environment_Set() const;
    bool is_integration_service_environment_Valid() const;

    OAIApiResourceMetadata getMetadata() const;
    void setMetadata(const OAIApiResourceMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIApiResourcePolicies getPolicies() const;
    void setPolicies(const OAIApiResourcePolicies &policies);
    bool is_policies_Set() const;
    bool is_policies_Valid() const;

    OAIWorkflowProvisioningState getProvisioningState() const;
    void setProvisioningState(const OAIWorkflowProvisioningState &provisioning_state);
    bool is_provisioning_state_Set() const;
    bool is_provisioning_state_Valid() const;

    QList<QString> getRuntimeUrls() const;
    void setRuntimeUrls(const QList<QString> &runtime_urls);
    bool is_runtime_urls_Set() const;
    bool is_runtime_urls_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_definition_url;
    bool m_api_definition_url_isSet;
    bool m_api_definition_url_isValid;

    OAIApiResourceDefinitions m_api_definitions;
    bool m_api_definitions_isSet;
    bool m_api_definitions_isValid;

    OAIApiResourceBackendService m_backend_service;
    bool m_backend_service_isSet;
    bool m_backend_service_isValid;

    QList<QString> m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    OAIApiTier m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QMap<QString, OAIObject> m_connection_parameters;
    bool m_connection_parameters_isSet;
    bool m_connection_parameters_isValid;

    OAIApiResourceGeneralInformation m_general_information;
    bool m_general_information_isSet;
    bool m_general_information_isValid;

    OAIResourceReference m_integration_service_environment;
    bool m_integration_service_environment_isSet;
    bool m_integration_service_environment_isValid;

    OAIApiResourceMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIApiResourcePolicies m_policies;
    bool m_policies_isSet;
    bool m_policies_isValid;

    OAIWorkflowProvisioningState m_provisioning_state;
    bool m_provisioning_state_isSet;
    bool m_provisioning_state_isValid;

    QList<QString> m_runtime_urls;
    bool m_runtime_urls_isSet;
    bool m_runtime_urls_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApiResourceProperties)

#endif // OAIApiResourceProperties_H
