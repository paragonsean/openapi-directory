/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISku.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISku::OAISku(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISku::OAISku() {
    this->initializeModel();
}

OAISku::~OAISku() {}

void OAISku::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_plan_isSet = false;
    m_plan_isValid = false;
}

void OAISku::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISku::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_plan_isValid = ::OpenAPI::fromJsonValue(m_plan, json[QString("plan")]);
    m_plan_isSet = !json[QString("plan")].isNull() && m_plan_isValid;
}

QString OAISku::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISku::asJsonObject() const {
    QJsonObject obj;
    if (m_name.isSet()) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_plan.isSet()) {
        obj.insert(QString("plan"), ::OpenAPI::toJsonValue(m_plan));
    }
    return obj;
}

OAISkuName OAISku::getName() const {
    return m_name;
}
void OAISku::setName(const OAISkuName &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISku::is_name_Set() const{
    return m_name_isSet;
}

bool OAISku::is_name_Valid() const{
    return m_name_isValid;
}

OAIResourceReference OAISku::getPlan() const {
    return m_plan;
}
void OAISku::setPlan(const OAIResourceReference &plan) {
    m_plan = plan;
    m_plan_isSet = true;
}

bool OAISku::is_plan_Set() const{
    return m_plan_isSet;
}

bool OAISku::is_plan_Valid() const{
    return m_plan_isValid;
}

bool OAISku::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_plan.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISku::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
