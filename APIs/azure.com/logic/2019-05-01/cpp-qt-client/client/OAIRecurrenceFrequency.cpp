/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecurrenceFrequency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecurrenceFrequency::OAIRecurrenceFrequency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecurrenceFrequency::OAIRecurrenceFrequency() {
    this->initializeModel();
}

OAIRecurrenceFrequency::~OAIRecurrenceFrequency() {}

void OAIRecurrenceFrequency::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRecurrenceFrequency::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRecurrenceFrequency::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotSpecified", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecurrenceFrequency::NOTSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Second", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecurrenceFrequency::SECOND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Minute", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecurrenceFrequency::MINUTE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Hour", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecurrenceFrequency::HOUR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Day", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecurrenceFrequency::DAY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Week", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecurrenceFrequency::WEEK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Month", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecurrenceFrequency::MONTH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Year", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecurrenceFrequency::YEAR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRecurrenceFrequency::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRecurrenceFrequency::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRecurrenceFrequency::NOTSPECIFIED:
            val = "NotSpecified";
            break;
        case eOAIRecurrenceFrequency::SECOND:
            val = "Second";
            break;
        case eOAIRecurrenceFrequency::MINUTE:
            val = "Minute";
            break;
        case eOAIRecurrenceFrequency::HOUR:
            val = "Hour";
            break;
        case eOAIRecurrenceFrequency::DAY:
            val = "Day";
            break;
        case eOAIRecurrenceFrequency::WEEK:
            val = "Week";
            break;
        case eOAIRecurrenceFrequency::MONTH:
            val = "Month";
            break;
        case eOAIRecurrenceFrequency::YEAR:
            val = "Year";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRecurrenceFrequency::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRecurrenceFrequency::eOAIRecurrenceFrequency OAIRecurrenceFrequency::getValue() const {
    return m_value;
}

void OAIRecurrenceFrequency::setValue(const OAIRecurrenceFrequency::eOAIRecurrenceFrequency& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRecurrenceFrequency::isSet() const {
    
    return m_value_isSet;
}

bool OAIRecurrenceFrequency::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
