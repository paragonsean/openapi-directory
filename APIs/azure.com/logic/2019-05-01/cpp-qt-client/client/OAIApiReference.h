/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApiReference.h
 *
 * The Api reference.
 */

#ifndef OAIApiReference_H
#define OAIApiReference_H

#include <QJsonObject>

#include "OAIApiTier.h"
#include "OAIObject.h"
#include "OAIResourceReference.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceReference;

class OAIApiReference : public OAIObject {
public:
    OAIApiReference();
    OAIApiReference(QString json);
    ~OAIApiReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBrandColor() const;
    void setBrandColor(const QString &brand_color);
    bool is_brand_color_Set() const;
    bool is_brand_color_Valid() const;

    OAIApiTier getCategory() const;
    void setCategory(const OAIApiTier &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getIconUri() const;
    void setIconUri(const QString &icon_uri);
    bool is_icon_uri_Set() const;
    bool is_icon_uri_Valid() const;

    OAIResourceReference getIntegrationServiceEnvironment() const;
    void setIntegrationServiceEnvironment(const OAIResourceReference &integration_service_environment);
    bool is_integration_service_environment_Set() const;
    bool is_integration_service_environment_Valid() const;

    OAIObject getSwagger() const;
    void setSwagger(const OAIObject &swagger);
    bool is_swagger_Set() const;
    bool is_swagger_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_brand_color;
    bool m_brand_color_isSet;
    bool m_brand_color_isValid;

    OAIApiTier m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_icon_uri;
    bool m_icon_uri_isSet;
    bool m_icon_uri_isValid;

    OAIResourceReference m_integration_service_environment;
    bool m_integration_service_environment_isSet;
    bool m_integration_service_environment_isValid;

    OAIObject m_swagger;
    bool m_swagger_isSet;
    bool m_swagger_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApiReference)

#endif // OAIApiReference_H
