/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISwaggerSchema.h
 *
 * The swagger schema.
 */

#ifndef OAISwaggerSchema_H
#define OAISwaggerSchema_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAISwaggerCustomDynamicList.h"
#include "OAISwaggerCustomDynamicProperties.h"
#include "OAISwaggerCustomDynamicSchema.h"
#include "OAISwaggerCustomDynamicTree.h"
#include "OAISwaggerExternalDocumentation.h"
#include "OAISwaggerSchemaType.h"
#include "OAISwaggerXml.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISwaggerCustomDynamicList;
class OAISwaggerCustomDynamicProperties;
class OAISwaggerCustomDynamicSchema;
class OAISwaggerCustomDynamicTree;
class OAISwaggerExternalDocumentation;
class OAISwaggerXml;

class OAISwaggerSchema : public OAIObject {
public:
    OAISwaggerSchema();
    OAISwaggerSchema(QString json);
    ~OAISwaggerSchema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getAdditionalProperties() const;
    void setAdditionalProperties(const OAIObject &additional_properties);
    bool is_additional_properties_Set() const;
    bool is_additional_properties_Valid() const;

    QList<OAISwaggerSchema> getAllOf() const;
    void setAllOf(const QList<OAISwaggerSchema> &all_of);
    bool is_all_of_Set() const;
    bool is_all_of_Valid() const;

    QString getDiscriminator() const;
    void setDiscriminator(const QString &discriminator);
    bool is_discriminator_Set() const;
    bool is_discriminator_Valid() const;

    OAISwaggerCustomDynamicList getDynamicListNew() const;
    void setDynamicListNew(const OAISwaggerCustomDynamicList &dynamic_list_new);
    bool is_dynamic_list_new_Set() const;
    bool is_dynamic_list_new_Valid() const;

    OAISwaggerCustomDynamicProperties getDynamicSchemaNew() const;
    void setDynamicSchemaNew(const OAISwaggerCustomDynamicProperties &dynamic_schema_new);
    bool is_dynamic_schema_new_Set() const;
    bool is_dynamic_schema_new_Valid() const;

    OAISwaggerCustomDynamicSchema getDynamicSchemaOld() const;
    void setDynamicSchemaOld(const OAISwaggerCustomDynamicSchema &dynamic_schema_old);
    bool is_dynamic_schema_old_Set() const;
    bool is_dynamic_schema_old_Valid() const;

    OAISwaggerCustomDynamicTree getDynamicTree() const;
    void setDynamicTree(const OAISwaggerCustomDynamicTree &dynamic_tree);
    bool is_dynamic_tree_Set() const;
    bool is_dynamic_tree_Valid() const;

    OAIObject getExample() const;
    void setExample(const OAIObject &example);
    bool is_example_Set() const;
    bool is_example_Valid() const;

    OAISwaggerExternalDocumentation getExternalDocs() const;
    void setExternalDocs(const OAISwaggerExternalDocumentation &external_docs);
    bool is_external_docs_Set() const;
    bool is_external_docs_Valid() const;

    OAISwaggerSchema getItems() const;
    void setItems(const OAISwaggerSchema &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    qint32 getMaxProperties() const;
    void setMaxProperties(const qint32 &max_properties);
    bool is_max_properties_Set() const;
    bool is_max_properties_Valid() const;

    qint32 getMinProperties() const;
    void setMinProperties(const qint32 &min_properties);
    bool is_min_properties_Set() const;
    bool is_min_properties_Valid() const;

    bool isNotificationUrlExtension() const;
    void setNotificationUrlExtension(const bool &notification_url_extension);
    bool is_notification_url_extension_Set() const;
    bool is_notification_url_extension_Valid() const;

    QMap<QString, OAISwaggerSchema> getProperties() const;
    void setProperties(const QMap<QString, OAISwaggerSchema> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    bool isReadOnly() const;
    void setReadOnly(const bool &read_only);
    bool is_read_only_Set() const;
    bool is_read_only_Valid() const;

    QString getRef() const;
    void setRef(const QString &ref);
    bool is_ref_Set() const;
    bool is_ref_Valid() const;

    QList<QString> getRequired() const;
    void setRequired(const QList<QString> &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    OAISwaggerSchemaType getType() const;
    void setType(const OAISwaggerSchemaType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAISwaggerXml getXml() const;
    void setXml(const OAISwaggerXml &xml);
    bool is_xml_Set() const;
    bool is_xml_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_additional_properties;
    bool m_additional_properties_isSet;
    bool m_additional_properties_isValid;

    QList<OAISwaggerSchema> m_all_of;
    bool m_all_of_isSet;
    bool m_all_of_isValid;

    QString m_discriminator;
    bool m_discriminator_isSet;
    bool m_discriminator_isValid;

    OAISwaggerCustomDynamicList m_dynamic_list_new;
    bool m_dynamic_list_new_isSet;
    bool m_dynamic_list_new_isValid;

    OAISwaggerCustomDynamicProperties m_dynamic_schema_new;
    bool m_dynamic_schema_new_isSet;
    bool m_dynamic_schema_new_isValid;

    OAISwaggerCustomDynamicSchema m_dynamic_schema_old;
    bool m_dynamic_schema_old_isSet;
    bool m_dynamic_schema_old_isValid;

    OAISwaggerCustomDynamicTree m_dynamic_tree;
    bool m_dynamic_tree_isSet;
    bool m_dynamic_tree_isValid;

    OAIObject m_example;
    bool m_example_isSet;
    bool m_example_isValid;

    OAISwaggerExternalDocumentation m_external_docs;
    bool m_external_docs_isSet;
    bool m_external_docs_isValid;

    OAISwaggerSchema m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    qint32 m_max_properties;
    bool m_max_properties_isSet;
    bool m_max_properties_isValid;

    qint32 m_min_properties;
    bool m_min_properties_isSet;
    bool m_min_properties_isValid;

    bool m_notification_url_extension;
    bool m_notification_url_extension_isSet;
    bool m_notification_url_extension_isValid;

    QMap<QString, OAISwaggerSchema> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    bool m_read_only;
    bool m_read_only_isSet;
    bool m_read_only_isValid;

    QString m_ref;
    bool m_ref_isSet;
    bool m_ref_isValid;

    QList<QString> m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    OAISwaggerSchemaType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAISwaggerXml m_xml;
    bool m_xml_isSet;
    bool m_xml_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISwaggerSchema)

#endif // OAISwaggerSchema_H
