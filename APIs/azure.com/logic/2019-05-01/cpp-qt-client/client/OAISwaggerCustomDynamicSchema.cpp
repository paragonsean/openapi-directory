/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISwaggerCustomDynamicSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISwaggerCustomDynamicSchema::OAISwaggerCustomDynamicSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISwaggerCustomDynamicSchema::OAISwaggerCustomDynamicSchema() {
    this->initializeModel();
}

OAISwaggerCustomDynamicSchema::~OAISwaggerCustomDynamicSchema() {}

void OAISwaggerCustomDynamicSchema::initializeModel() {

    m_operation_id_isSet = false;
    m_operation_id_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_value_path_isSet = false;
    m_value_path_isValid = false;
}

void OAISwaggerCustomDynamicSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISwaggerCustomDynamicSchema::fromJsonObject(QJsonObject json) {

    m_operation_id_isValid = ::OpenAPI::fromJsonValue(m_operation_id, json[QString("operationId")]);
    m_operation_id_isSet = !json[QString("operationId")].isNull() && m_operation_id_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_value_path_isValid = ::OpenAPI::fromJsonValue(m_value_path, json[QString("valuePath")]);
    m_value_path_isSet = !json[QString("valuePath")].isNull() && m_value_path_isValid;
}

QString OAISwaggerCustomDynamicSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISwaggerCustomDynamicSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_operation_id_isSet) {
        obj.insert(QString("operationId"), ::OpenAPI::toJsonValue(m_operation_id));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_value_path_isSet) {
        obj.insert(QString("valuePath"), ::OpenAPI::toJsonValue(m_value_path));
    }
    return obj;
}

QString OAISwaggerCustomDynamicSchema::getOperationId() const {
    return m_operation_id;
}
void OAISwaggerCustomDynamicSchema::setOperationId(const QString &operation_id) {
    m_operation_id = operation_id;
    m_operation_id_isSet = true;
}

bool OAISwaggerCustomDynamicSchema::is_operation_id_Set() const{
    return m_operation_id_isSet;
}

bool OAISwaggerCustomDynamicSchema::is_operation_id_Valid() const{
    return m_operation_id_isValid;
}

QMap<QString, OAIObject> OAISwaggerCustomDynamicSchema::getParameters() const {
    return m_parameters;
}
void OAISwaggerCustomDynamicSchema::setParameters(const QMap<QString, OAIObject> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAISwaggerCustomDynamicSchema::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAISwaggerCustomDynamicSchema::is_parameters_Valid() const{
    return m_parameters_isValid;
}

QString OAISwaggerCustomDynamicSchema::getValuePath() const {
    return m_value_path;
}
void OAISwaggerCustomDynamicSchema::setValuePath(const QString &value_path) {
    m_value_path = value_path;
    m_value_path_isSet = true;
}

bool OAISwaggerCustomDynamicSchema::is_value_path_Set() const{
    return m_value_path_isSet;
}

bool OAISwaggerCustomDynamicSchema::is_value_path_Valid() const{
    return m_value_path_isValid;
}

bool OAISwaggerCustomDynamicSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISwaggerCustomDynamicSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
