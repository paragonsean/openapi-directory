/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIX12SchemaReference.h
 *
 * The X12 schema reference.
 */

#ifndef OAIX12SchemaReference_H
#define OAIX12SchemaReference_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIX12SchemaReference : public OAIObject {
public:
    OAIX12SchemaReference();
    OAIX12SchemaReference(QString json);
    ~OAIX12SchemaReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QString getSchemaName() const;
    void setSchemaName(const QString &schema_name);
    bool is_schema_name_Set() const;
    bool is_schema_name_Valid() const;

    QString getSchemaVersion() const;
    void setSchemaVersion(const QString &schema_version);
    bool is_schema_version_Set() const;
    bool is_schema_version_Valid() const;

    QString getSenderApplicationId() const;
    void setSenderApplicationId(const QString &sender_application_id);
    bool is_sender_application_id_Set() const;
    bool is_sender_application_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QString m_schema_name;
    bool m_schema_name_isSet;
    bool m_schema_name_isValid;

    QString m_schema_version;
    bool m_schema_version_isSet;
    bool m_schema_version_isValid;

    QString m_sender_application_id;
    bool m_sender_application_id_isSet;
    bool m_sender_application_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIX12SchemaReference)

#endif // OAIX12SchemaReference_H
