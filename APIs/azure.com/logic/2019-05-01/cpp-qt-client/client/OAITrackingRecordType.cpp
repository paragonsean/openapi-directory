/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrackingRecordType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrackingRecordType::OAITrackingRecordType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrackingRecordType::OAITrackingRecordType() {
    this->initializeModel();
}

OAITrackingRecordType::~OAITrackingRecordType() {}

void OAITrackingRecordType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITrackingRecordType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITrackingRecordType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotSpecified", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::NOTSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Custom", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::CUSTOM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AS2Message", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::AS2MESSAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AS2MDN", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::AS2MDN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("X12Interchange", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::X12INTERCHANGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("X12FunctionalGroup", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::X12FUNCTIONALGROUP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("X12TransactionSet", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::X12TRANSACTIONSET;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("X12InterchangeAcknowledgment", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::X12INTERCHANGEACKNOWLEDGMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("X12FunctionalGroupAcknowledgment", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::X12FUNCTIONALGROUPACKNOWLEDGMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("X12TransactionSetAcknowledgment", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::X12TRANSACTIONSETACKNOWLEDGMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EdifactInterchange", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::EDIFACTINTERCHANGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EdifactFunctionalGroup", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::EDIFACTFUNCTIONALGROUP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EdifactTransactionSet", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::EDIFACTTRANSACTIONSET;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EdifactInterchangeAcknowledgment", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::EDIFACTINTERCHANGEACKNOWLEDGMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EdifactFunctionalGroupAcknowledgment", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::EDIFACTFUNCTIONALGROUPACKNOWLEDGMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EdifactTransactionSetAcknowledgment", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrackingRecordType::EDIFACTTRANSACTIONSETACKNOWLEDGMENT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITrackingRecordType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITrackingRecordType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITrackingRecordType::NOTSPECIFIED:
            val = "NotSpecified";
            break;
        case eOAITrackingRecordType::CUSTOM:
            val = "Custom";
            break;
        case eOAITrackingRecordType::AS2MESSAGE:
            val = "AS2Message";
            break;
        case eOAITrackingRecordType::AS2MDN:
            val = "AS2MDN";
            break;
        case eOAITrackingRecordType::X12INTERCHANGE:
            val = "X12Interchange";
            break;
        case eOAITrackingRecordType::X12FUNCTIONALGROUP:
            val = "X12FunctionalGroup";
            break;
        case eOAITrackingRecordType::X12TRANSACTIONSET:
            val = "X12TransactionSet";
            break;
        case eOAITrackingRecordType::X12INTERCHANGEACKNOWLEDGMENT:
            val = "X12InterchangeAcknowledgment";
            break;
        case eOAITrackingRecordType::X12FUNCTIONALGROUPACKNOWLEDGMENT:
            val = "X12FunctionalGroupAcknowledgment";
            break;
        case eOAITrackingRecordType::X12TRANSACTIONSETACKNOWLEDGMENT:
            val = "X12TransactionSetAcknowledgment";
            break;
        case eOAITrackingRecordType::EDIFACTINTERCHANGE:
            val = "EdifactInterchange";
            break;
        case eOAITrackingRecordType::EDIFACTFUNCTIONALGROUP:
            val = "EdifactFunctionalGroup";
            break;
        case eOAITrackingRecordType::EDIFACTTRANSACTIONSET:
            val = "EdifactTransactionSet";
            break;
        case eOAITrackingRecordType::EDIFACTINTERCHANGEACKNOWLEDGMENT:
            val = "EdifactInterchangeAcknowledgment";
            break;
        case eOAITrackingRecordType::EDIFACTFUNCTIONALGROUPACKNOWLEDGMENT:
            val = "EdifactFunctionalGroupAcknowledgment";
            break;
        case eOAITrackingRecordType::EDIFACTTRANSACTIONSETACKNOWLEDGMENT:
            val = "EdifactTransactionSetAcknowledgment";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITrackingRecordType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITrackingRecordType::eOAITrackingRecordType OAITrackingRecordType::getValue() const {
    return m_value;
}

void OAITrackingRecordType::setValue(const OAITrackingRecordType::eOAITrackingRecordType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITrackingRecordType::isSet() const {
    
    return m_value_isSet;
}

bool OAITrackingRecordType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
