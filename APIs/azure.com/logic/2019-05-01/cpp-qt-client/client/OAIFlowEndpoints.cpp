/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFlowEndpoints.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFlowEndpoints::OAIFlowEndpoints(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFlowEndpoints::OAIFlowEndpoints() {
    this->initializeModel();
}

OAIFlowEndpoints::~OAIFlowEndpoints() {}

void OAIFlowEndpoints::initializeModel() {

    m_access_endpoint_ip_addresses_isSet = false;
    m_access_endpoint_ip_addresses_isValid = false;

    m_outgoing_ip_addresses_isSet = false;
    m_outgoing_ip_addresses_isValid = false;
}

void OAIFlowEndpoints::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFlowEndpoints::fromJsonObject(QJsonObject json) {

    m_access_endpoint_ip_addresses_isValid = ::OpenAPI::fromJsonValue(m_access_endpoint_ip_addresses, json[QString("accessEndpointIpAddresses")]);
    m_access_endpoint_ip_addresses_isSet = !json[QString("accessEndpointIpAddresses")].isNull() && m_access_endpoint_ip_addresses_isValid;

    m_outgoing_ip_addresses_isValid = ::OpenAPI::fromJsonValue(m_outgoing_ip_addresses, json[QString("outgoingIpAddresses")]);
    m_outgoing_ip_addresses_isSet = !json[QString("outgoingIpAddresses")].isNull() && m_outgoing_ip_addresses_isValid;
}

QString OAIFlowEndpoints::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFlowEndpoints::asJsonObject() const {
    QJsonObject obj;
    if (m_access_endpoint_ip_addresses.size() > 0) {
        obj.insert(QString("accessEndpointIpAddresses"), ::OpenAPI::toJsonValue(m_access_endpoint_ip_addresses));
    }
    if (m_outgoing_ip_addresses.size() > 0) {
        obj.insert(QString("outgoingIpAddresses"), ::OpenAPI::toJsonValue(m_outgoing_ip_addresses));
    }
    return obj;
}

QList<OAIIpAddress> OAIFlowEndpoints::getAccessEndpointIpAddresses() const {
    return m_access_endpoint_ip_addresses;
}
void OAIFlowEndpoints::setAccessEndpointIpAddresses(const QList<OAIIpAddress> &access_endpoint_ip_addresses) {
    m_access_endpoint_ip_addresses = access_endpoint_ip_addresses;
    m_access_endpoint_ip_addresses_isSet = true;
}

bool OAIFlowEndpoints::is_access_endpoint_ip_addresses_Set() const{
    return m_access_endpoint_ip_addresses_isSet;
}

bool OAIFlowEndpoints::is_access_endpoint_ip_addresses_Valid() const{
    return m_access_endpoint_ip_addresses_isValid;
}

QList<OAIIpAddress> OAIFlowEndpoints::getOutgoingIpAddresses() const {
    return m_outgoing_ip_addresses;
}
void OAIFlowEndpoints::setOutgoingIpAddresses(const QList<OAIIpAddress> &outgoing_ip_addresses) {
    m_outgoing_ip_addresses = outgoing_ip_addresses;
    m_outgoing_ip_addresses_isSet = true;
}

bool OAIFlowEndpoints::is_outgoing_ip_addresses_Set() const{
    return m_outgoing_ip_addresses_isSet;
}

bool OAIFlowEndpoints::is_outgoing_ip_addresses_Valid() const{
    return m_outgoing_ip_addresses_isValid;
}

bool OAIFlowEndpoints::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_endpoint_ip_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_outgoing_ip_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFlowEndpoints::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
