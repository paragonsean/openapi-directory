/*
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.SwaggerCustomDynamicTreeParameter;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The swagger tree command.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:07:11.880144-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SwaggerCustomDynamicTreeCommand {
  public static final String SERIALIZED_NAME_ITEM_FULL_TITLE_PATH = "itemFullTitlePath";
  @SerializedName(SERIALIZED_NAME_ITEM_FULL_TITLE_PATH)
  private String itemFullTitlePath;

  public static final String SERIALIZED_NAME_ITEM_IS_PARENT = "itemIsParent";
  @SerializedName(SERIALIZED_NAME_ITEM_IS_PARENT)
  private String itemIsParent;

  public static final String SERIALIZED_NAME_ITEM_TITLE_PATH = "itemTitlePath";
  @SerializedName(SERIALIZED_NAME_ITEM_TITLE_PATH)
  private String itemTitlePath;

  public static final String SERIALIZED_NAME_ITEM_VALUE_PATH = "itemValuePath";
  @SerializedName(SERIALIZED_NAME_ITEM_VALUE_PATH)
  private String itemValuePath;

  public static final String SERIALIZED_NAME_ITEMS_PATH = "itemsPath";
  @SerializedName(SERIALIZED_NAME_ITEMS_PATH)
  private String itemsPath;

  public static final String SERIALIZED_NAME_OPERATION_ID = "operationId";
  @SerializedName(SERIALIZED_NAME_OPERATION_ID)
  private String operationId;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Map<String, SwaggerCustomDynamicTreeParameter> parameters = new HashMap<>();

  public static final String SERIALIZED_NAME_SELECTABLE_FILTER = "selectableFilter";
  @SerializedName(SERIALIZED_NAME_SELECTABLE_FILTER)
  private String selectableFilter;

  public SwaggerCustomDynamicTreeCommand() {
  }

  public SwaggerCustomDynamicTreeCommand itemFullTitlePath(String itemFullTitlePath) {
    this.itemFullTitlePath = itemFullTitlePath;
    return this;
  }

  /**
   * The path to an item property which defines the display name of the item.
   * @return itemFullTitlePath
   */
  @javax.annotation.Nullable
  public String getItemFullTitlePath() {
    return itemFullTitlePath;
  }

  public void setItemFullTitlePath(String itemFullTitlePath) {
    this.itemFullTitlePath = itemFullTitlePath;
  }


  public SwaggerCustomDynamicTreeCommand itemIsParent(String itemIsParent) {
    this.itemIsParent = itemIsParent;
    return this;
  }

  /**
   * The path to an item property which defines the display name of the item.
   * @return itemIsParent
   */
  @javax.annotation.Nullable
  public String getItemIsParent() {
    return itemIsParent;
  }

  public void setItemIsParent(String itemIsParent) {
    this.itemIsParent = itemIsParent;
  }


  public SwaggerCustomDynamicTreeCommand itemTitlePath(String itemTitlePath) {
    this.itemTitlePath = itemTitlePath;
    return this;
  }

  /**
   * The path to an item property which defines the display name of the item.
   * @return itemTitlePath
   */
  @javax.annotation.Nullable
  public String getItemTitlePath() {
    return itemTitlePath;
  }

  public void setItemTitlePath(String itemTitlePath) {
    this.itemTitlePath = itemTitlePath;
  }


  public SwaggerCustomDynamicTreeCommand itemValuePath(String itemValuePath) {
    this.itemValuePath = itemValuePath;
    return this;
  }

  /**
   * The path to an item property which defines the display name of the item.
   * @return itemValuePath
   */
  @javax.annotation.Nullable
  public String getItemValuePath() {
    return itemValuePath;
  }

  public void setItemValuePath(String itemValuePath) {
    this.itemValuePath = itemValuePath;
  }


  public SwaggerCustomDynamicTreeCommand itemsPath(String itemsPath) {
    this.itemsPath = itemsPath;
    return this;
  }

  /**
   * The path to an item property which defines the display name of the item.
   * @return itemsPath
   */
  @javax.annotation.Nullable
  public String getItemsPath() {
    return itemsPath;
  }

  public void setItemsPath(String itemsPath) {
    this.itemsPath = itemsPath;
  }


  public SwaggerCustomDynamicTreeCommand operationId(String operationId) {
    this.operationId = operationId;
    return this;
  }

  /**
   * The path to an item property which defines the display name of the item.
   * @return operationId
   */
  @javax.annotation.Nullable
  public String getOperationId() {
    return operationId;
  }

  public void setOperationId(String operationId) {
    this.operationId = operationId;
  }


  public SwaggerCustomDynamicTreeCommand parameters(Map<String, SwaggerCustomDynamicTreeParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public SwaggerCustomDynamicTreeCommand putParametersItem(String key, SwaggerCustomDynamicTreeParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

  /**
   * Get parameters
   * @return parameters
   */
  @javax.annotation.Nullable
  public Map<String, SwaggerCustomDynamicTreeParameter> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, SwaggerCustomDynamicTreeParameter> parameters) {
    this.parameters = parameters;
  }


  public SwaggerCustomDynamicTreeCommand selectableFilter(String selectableFilter) {
    this.selectableFilter = selectableFilter;
    return this;
  }

  /**
   * The path to an item property which defines the display name of the item.
   * @return selectableFilter
   */
  @javax.annotation.Nullable
  public String getSelectableFilter() {
    return selectableFilter;
  }

  public void setSelectableFilter(String selectableFilter) {
    this.selectableFilter = selectableFilter;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SwaggerCustomDynamicTreeCommand swaggerCustomDynamicTreeCommand = (SwaggerCustomDynamicTreeCommand) o;
    return Objects.equals(this.itemFullTitlePath, swaggerCustomDynamicTreeCommand.itemFullTitlePath) &&
        Objects.equals(this.itemIsParent, swaggerCustomDynamicTreeCommand.itemIsParent) &&
        Objects.equals(this.itemTitlePath, swaggerCustomDynamicTreeCommand.itemTitlePath) &&
        Objects.equals(this.itemValuePath, swaggerCustomDynamicTreeCommand.itemValuePath) &&
        Objects.equals(this.itemsPath, swaggerCustomDynamicTreeCommand.itemsPath) &&
        Objects.equals(this.operationId, swaggerCustomDynamicTreeCommand.operationId) &&
        Objects.equals(this.parameters, swaggerCustomDynamicTreeCommand.parameters) &&
        Objects.equals(this.selectableFilter, swaggerCustomDynamicTreeCommand.selectableFilter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemFullTitlePath, itemIsParent, itemTitlePath, itemValuePath, itemsPath, operationId, parameters, selectableFilter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SwaggerCustomDynamicTreeCommand {\n");
    sb.append("    itemFullTitlePath: ").append(toIndentedString(itemFullTitlePath)).append("\n");
    sb.append("    itemIsParent: ").append(toIndentedString(itemIsParent)).append("\n");
    sb.append("    itemTitlePath: ").append(toIndentedString(itemTitlePath)).append("\n");
    sb.append("    itemValuePath: ").append(toIndentedString(itemValuePath)).append("\n");
    sb.append("    itemsPath: ").append(toIndentedString(itemsPath)).append("\n");
    sb.append("    operationId: ").append(toIndentedString(operationId)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    selectableFilter: ").append(toIndentedString(selectableFilter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("itemFullTitlePath");
    openapiFields.add("itemIsParent");
    openapiFields.add("itemTitlePath");
    openapiFields.add("itemValuePath");
    openapiFields.add("itemsPath");
    openapiFields.add("operationId");
    openapiFields.add("parameters");
    openapiFields.add("selectableFilter");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SwaggerCustomDynamicTreeCommand
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SwaggerCustomDynamicTreeCommand.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SwaggerCustomDynamicTreeCommand is not found in the empty JSON string", SwaggerCustomDynamicTreeCommand.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SwaggerCustomDynamicTreeCommand.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SwaggerCustomDynamicTreeCommand` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("itemFullTitlePath") != null && !jsonObj.get("itemFullTitlePath").isJsonNull()) && !jsonObj.get("itemFullTitlePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemFullTitlePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemFullTitlePath").toString()));
      }
      if ((jsonObj.get("itemIsParent") != null && !jsonObj.get("itemIsParent").isJsonNull()) && !jsonObj.get("itemIsParent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemIsParent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemIsParent").toString()));
      }
      if ((jsonObj.get("itemTitlePath") != null && !jsonObj.get("itemTitlePath").isJsonNull()) && !jsonObj.get("itemTitlePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemTitlePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemTitlePath").toString()));
      }
      if ((jsonObj.get("itemValuePath") != null && !jsonObj.get("itemValuePath").isJsonNull()) && !jsonObj.get("itemValuePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemValuePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemValuePath").toString()));
      }
      if ((jsonObj.get("itemsPath") != null && !jsonObj.get("itemsPath").isJsonNull()) && !jsonObj.get("itemsPath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemsPath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemsPath").toString()));
      }
      if ((jsonObj.get("operationId") != null && !jsonObj.get("operationId").isJsonNull()) && !jsonObj.get("operationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operationId").toString()));
      }
      if ((jsonObj.get("selectableFilter") != null && !jsonObj.get("selectableFilter").isJsonNull()) && !jsonObj.get("selectableFilter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `selectableFilter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("selectableFilter").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SwaggerCustomDynamicTreeCommand.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SwaggerCustomDynamicTreeCommand' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SwaggerCustomDynamicTreeCommand> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SwaggerCustomDynamicTreeCommand.class));

       return (TypeAdapter<T>) new TypeAdapter<SwaggerCustomDynamicTreeCommand>() {
           @Override
           public void write(JsonWriter out, SwaggerCustomDynamicTreeCommand value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SwaggerCustomDynamicTreeCommand read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SwaggerCustomDynamicTreeCommand given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SwaggerCustomDynamicTreeCommand
   * @throws IOException if the JSON string is invalid with respect to SwaggerCustomDynamicTreeCommand
   */
  public static SwaggerCustomDynamicTreeCommand fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SwaggerCustomDynamicTreeCommand.class);
  }

  /**
   * Convert an instance of SwaggerCustomDynamicTreeCommand to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

