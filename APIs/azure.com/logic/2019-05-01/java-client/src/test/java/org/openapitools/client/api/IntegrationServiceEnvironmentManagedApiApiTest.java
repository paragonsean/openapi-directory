/*
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ManagedApi;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IntegrationServiceEnvironmentManagedApiApi
 */
@Disabled
public class IntegrationServiceEnvironmentManagedApiApiTest {

    private final IntegrationServiceEnvironmentManagedApiApi api = new IntegrationServiceEnvironmentManagedApiApi();

    /**
     * Deletes the integration service environment managed Api.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationServiceEnvironmentManagedApisDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String integrationServiceEnvironmentName = null;
        String apiName = null;
        String apiVersion = null;
        api.integrationServiceEnvironmentManagedApisDelete(subscriptionId, resourceGroup, integrationServiceEnvironmentName, apiName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets the integration service environment managed Api.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationServiceEnvironmentManagedApisGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String integrationServiceEnvironmentName = null;
        String apiName = null;
        String apiVersion = null;
        ManagedApi response = api.integrationServiceEnvironmentManagedApisGet(subscriptionId, resourceGroup, integrationServiceEnvironmentName, apiName, apiVersion);
        // TODO: test validations
    }

    /**
     * Puts the integration service environment managed Api.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationServiceEnvironmentManagedApisPutTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String integrationServiceEnvironmentName = null;
        String apiName = null;
        String apiVersion = null;
        ManagedApi response = api.integrationServiceEnvironmentManagedApisPut(subscriptionId, resourceGroup, integrationServiceEnvironmentName, apiName, apiVersion);
        // TODO: test validations
    }

}
