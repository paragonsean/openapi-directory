/*
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.IntegrationServiceEnvironment;
import org.openapitools.client.model.IntegrationServiceEnvironmentListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IntegrationServiceEnvironmentsApi
 */
@Disabled
public class IntegrationServiceEnvironmentsApiTest {

    private final IntegrationServiceEnvironmentsApi api = new IntegrationServiceEnvironmentsApi();

    /**
     * Creates or updates an integration service environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationServiceEnvironmentsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String integrationServiceEnvironmentName = null;
        String apiVersion = null;
        IntegrationServiceEnvironment integrationServiceEnvironment = null;
        IntegrationServiceEnvironment response = api.integrationServiceEnvironmentsCreateOrUpdate(subscriptionId, resourceGroup, integrationServiceEnvironmentName, apiVersion, integrationServiceEnvironment);
        // TODO: test validations
    }

    /**
     * Deletes an integration service environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationServiceEnvironmentsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String integrationServiceEnvironmentName = null;
        String apiVersion = null;
        api.integrationServiceEnvironmentsDelete(subscriptionId, resourceGroup, integrationServiceEnvironmentName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets an integration service environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationServiceEnvironmentsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String integrationServiceEnvironmentName = null;
        String apiVersion = null;
        IntegrationServiceEnvironment response = api.integrationServiceEnvironmentsGet(subscriptionId, resourceGroup, integrationServiceEnvironmentName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of integration service environments by resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationServiceEnvironmentsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String apiVersion = null;
        Integer $top = null;
        IntegrationServiceEnvironmentListResult response = api.integrationServiceEnvironmentsListByResourceGroup(subscriptionId, resourceGroup, apiVersion, $top);
        // TODO: test validations
    }

    /**
     * Gets a list of integration service environments by subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationServiceEnvironmentsListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        Integer $top = null;
        IntegrationServiceEnvironmentListResult response = api.integrationServiceEnvironmentsListBySubscription(subscriptionId, apiVersion, $top);
        // TODO: test validations
    }

    /**
     * Updates an integration service environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationServiceEnvironmentsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroup = null;
        String integrationServiceEnvironmentName = null;
        String apiVersion = null;
        IntegrationServiceEnvironment integrationServiceEnvironment = null;
        IntegrationServiceEnvironment response = api.integrationServiceEnvironmentsUpdate(subscriptionId, resourceGroup, integrationServiceEnvironmentName, apiVersion, integrationServiceEnvironment);
        // TODO: test validations
    }

}
