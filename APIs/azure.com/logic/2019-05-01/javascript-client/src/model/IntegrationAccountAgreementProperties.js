/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AgreementContent from './AgreementContent';
import AgreementType from './AgreementType';
import BusinessIdentity from './BusinessIdentity';

/**
 * The IntegrationAccountAgreementProperties model module.
 * @module model/IntegrationAccountAgreementProperties
 * @version 2019-05-01
 */
class IntegrationAccountAgreementProperties {
    /**
     * Constructs a new <code>IntegrationAccountAgreementProperties</code>.
     * The integration account agreement properties.
     * @alias module:model/IntegrationAccountAgreementProperties
     * @param agreementType {module:model/AgreementType} 
     * @param content {module:model/AgreementContent} 
     * @param guestIdentity {module:model/BusinessIdentity} 
     * @param guestPartner {String} The integration account partner that is set as guest partner for this agreement.
     * @param hostIdentity {module:model/BusinessIdentity} 
     * @param hostPartner {String} The integration account partner that is set as host partner for this agreement.
     */
    constructor(agreementType, content, guestIdentity, guestPartner, hostIdentity, hostPartner) { 
        
        IntegrationAccountAgreementProperties.initialize(this, agreementType, content, guestIdentity, guestPartner, hostIdentity, hostPartner);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, agreementType, content, guestIdentity, guestPartner, hostIdentity, hostPartner) { 
        obj['agreementType'] = agreementType;
        obj['content'] = content;
        obj['guestIdentity'] = guestIdentity;
        obj['guestPartner'] = guestPartner;
        obj['hostIdentity'] = hostIdentity;
        obj['hostPartner'] = hostPartner;
    }

    /**
     * Constructs a <code>IntegrationAccountAgreementProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntegrationAccountAgreementProperties} obj Optional instance to populate.
     * @return {module:model/IntegrationAccountAgreementProperties} The populated <code>IntegrationAccountAgreementProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntegrationAccountAgreementProperties();

            if (data.hasOwnProperty('agreementType')) {
                obj['agreementType'] = AgreementType.constructFromObject(data['agreementType']);
            }
            if (data.hasOwnProperty('changedTime')) {
                obj['changedTime'] = ApiClient.convertToType(data['changedTime'], 'Date');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = AgreementContent.constructFromObject(data['content']);
            }
            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('guestIdentity')) {
                obj['guestIdentity'] = BusinessIdentity.constructFromObject(data['guestIdentity']);
            }
            if (data.hasOwnProperty('guestPartner')) {
                obj['guestPartner'] = ApiClient.convertToType(data['guestPartner'], 'String');
            }
            if (data.hasOwnProperty('hostIdentity')) {
                obj['hostIdentity'] = BusinessIdentity.constructFromObject(data['hostIdentity']);
            }
            if (data.hasOwnProperty('hostPartner')) {
                obj['hostPartner'] = ApiClient.convertToType(data['hostPartner'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntegrationAccountAgreementProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntegrationAccountAgreementProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IntegrationAccountAgreementProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `content`
        if (data['content']) { // data not null
          AgreementContent.validateJSON(data['content']);
        }
        // validate the optional field `guestIdentity`
        if (data['guestIdentity']) { // data not null
          BusinessIdentity.validateJSON(data['guestIdentity']);
        }
        // ensure the json data is a string
        if (data['guestPartner'] && !(typeof data['guestPartner'] === 'string' || data['guestPartner'] instanceof String)) {
            throw new Error("Expected the field `guestPartner` to be a primitive type in the JSON string but got " + data['guestPartner']);
        }
        // validate the optional field `hostIdentity`
        if (data['hostIdentity']) { // data not null
          BusinessIdentity.validateJSON(data['hostIdentity']);
        }
        // ensure the json data is a string
        if (data['hostPartner'] && !(typeof data['hostPartner'] === 'string' || data['hostPartner'] instanceof String)) {
            throw new Error("Expected the field `hostPartner` to be a primitive type in the JSON string but got " + data['hostPartner']);
        }

        return true;
    }


}

IntegrationAccountAgreementProperties.RequiredProperties = ["agreementType", "content", "guestIdentity", "guestPartner", "hostIdentity", "hostPartner"];

/**
 * @member {module:model/AgreementType} agreementType
 */
IntegrationAccountAgreementProperties.prototype['agreementType'] = undefined;

/**
 * The changed time.
 * @member {Date} changedTime
 */
IntegrationAccountAgreementProperties.prototype['changedTime'] = undefined;

/**
 * @member {module:model/AgreementContent} content
 */
IntegrationAccountAgreementProperties.prototype['content'] = undefined;

/**
 * The created time.
 * @member {Date} createdTime
 */
IntegrationAccountAgreementProperties.prototype['createdTime'] = undefined;

/**
 * @member {module:model/BusinessIdentity} guestIdentity
 */
IntegrationAccountAgreementProperties.prototype['guestIdentity'] = undefined;

/**
 * The integration account partner that is set as guest partner for this agreement.
 * @member {String} guestPartner
 */
IntegrationAccountAgreementProperties.prototype['guestPartner'] = undefined;

/**
 * @member {module:model/BusinessIdentity} hostIdentity
 */
IntegrationAccountAgreementProperties.prototype['hostIdentity'] = undefined;

/**
 * The integration account partner that is set as host partner for this agreement.
 * @member {String} hostPartner
 */
IntegrationAccountAgreementProperties.prototype['hostPartner'] = undefined;

/**
 * The metadata.
 * @member {Object} metadata
 */
IntegrationAccountAgreementProperties.prototype['metadata'] = undefined;






export default IntegrationAccountAgreementProperties;

