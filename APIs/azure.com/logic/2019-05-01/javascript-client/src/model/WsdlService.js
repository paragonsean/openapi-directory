/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WsdlService model module.
 * @module model/WsdlService
 * @version 2019-05-01
 */
class WsdlService {
    /**
     * Constructs a new <code>WsdlService</code>.
     * The WSDL service.
     * @alias module:model/WsdlService
     */
    constructor() { 
        
        WsdlService.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WsdlService</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WsdlService} obj Optional instance to populate.
     * @return {module:model/WsdlService} The populated <code>WsdlService</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WsdlService();

            if (data.hasOwnProperty('EndpointQualifiedNames')) {
                obj['EndpointQualifiedNames'] = ApiClient.convertToType(data['EndpointQualifiedNames'], ['String']);
            }
            if (data.hasOwnProperty('qualifiedName')) {
                obj['qualifiedName'] = ApiClient.convertToType(data['qualifiedName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WsdlService</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WsdlService</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['EndpointQualifiedNames'])) {
            throw new Error("Expected the field `EndpointQualifiedNames` to be an array in the JSON data but got " + data['EndpointQualifiedNames']);
        }
        // ensure the json data is a string
        if (data['qualifiedName'] && !(typeof data['qualifiedName'] === 'string' || data['qualifiedName'] instanceof String)) {
            throw new Error("Expected the field `qualifiedName` to be a primitive type in the JSON string but got " + data['qualifiedName']);
        }

        return true;
    }


}



/**
 * The list of endpoints' qualified names.
 * @member {Array.<String>} EndpointQualifiedNames
 */
WsdlService.prototype['EndpointQualifiedNames'] = undefined;

/**
 * The qualified name.
 * @member {String} qualifiedName
 */
WsdlService.prototype['qualifiedName'] = undefined;






export default WsdlService;

