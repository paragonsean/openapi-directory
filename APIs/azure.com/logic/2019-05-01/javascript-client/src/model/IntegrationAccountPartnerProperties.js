/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PartnerContent from './PartnerContent';
import PartnerType from './PartnerType';

/**
 * The IntegrationAccountPartnerProperties model module.
 * @module model/IntegrationAccountPartnerProperties
 * @version 2019-05-01
 */
class IntegrationAccountPartnerProperties {
    /**
     * Constructs a new <code>IntegrationAccountPartnerProperties</code>.
     * The integration account partner properties.
     * @alias module:model/IntegrationAccountPartnerProperties
     * @param content {module:model/PartnerContent} 
     * @param partnerType {module:model/PartnerType} 
     */
    constructor(content, partnerType) { 
        
        IntegrationAccountPartnerProperties.initialize(this, content, partnerType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, content, partnerType) { 
        obj['content'] = content;
        obj['partnerType'] = partnerType;
    }

    /**
     * Constructs a <code>IntegrationAccountPartnerProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntegrationAccountPartnerProperties} obj Optional instance to populate.
     * @return {module:model/IntegrationAccountPartnerProperties} The populated <code>IntegrationAccountPartnerProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntegrationAccountPartnerProperties();

            if (data.hasOwnProperty('changedTime')) {
                obj['changedTime'] = ApiClient.convertToType(data['changedTime'], 'Date');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = PartnerContent.constructFromObject(data['content']);
            }
            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('partnerType')) {
                obj['partnerType'] = PartnerType.constructFromObject(data['partnerType']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntegrationAccountPartnerProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntegrationAccountPartnerProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IntegrationAccountPartnerProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `content`
        if (data['content']) { // data not null
          PartnerContent.validateJSON(data['content']);
        }

        return true;
    }


}

IntegrationAccountPartnerProperties.RequiredProperties = ["content", "partnerType"];

/**
 * The changed time.
 * @member {Date} changedTime
 */
IntegrationAccountPartnerProperties.prototype['changedTime'] = undefined;

/**
 * @member {module:model/PartnerContent} content
 */
IntegrationAccountPartnerProperties.prototype['content'] = undefined;

/**
 * The created time.
 * @member {Date} createdTime
 */
IntegrationAccountPartnerProperties.prototype['createdTime'] = undefined;

/**
 * The metadata.
 * @member {Object} metadata
 */
IntegrationAccountPartnerProperties.prototype['metadata'] = undefined;

/**
 * @member {module:model/PartnerType} partnerType
 */
IntegrationAccountPartnerProperties.prototype['partnerType'] = undefined;






export default IntegrationAccountPartnerProperties;

