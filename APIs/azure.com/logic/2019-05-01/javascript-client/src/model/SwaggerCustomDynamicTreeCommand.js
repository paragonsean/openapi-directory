/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SwaggerCustomDynamicTreeParameter from './SwaggerCustomDynamicTreeParameter';

/**
 * The SwaggerCustomDynamicTreeCommand model module.
 * @module model/SwaggerCustomDynamicTreeCommand
 * @version 2019-05-01
 */
class SwaggerCustomDynamicTreeCommand {
    /**
     * Constructs a new <code>SwaggerCustomDynamicTreeCommand</code>.
     * The swagger tree command.
     * @alias module:model/SwaggerCustomDynamicTreeCommand
     */
    constructor() { 
        
        SwaggerCustomDynamicTreeCommand.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SwaggerCustomDynamicTreeCommand</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SwaggerCustomDynamicTreeCommand} obj Optional instance to populate.
     * @return {module:model/SwaggerCustomDynamicTreeCommand} The populated <code>SwaggerCustomDynamicTreeCommand</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SwaggerCustomDynamicTreeCommand();

            if (data.hasOwnProperty('itemFullTitlePath')) {
                obj['itemFullTitlePath'] = ApiClient.convertToType(data['itemFullTitlePath'], 'String');
            }
            if (data.hasOwnProperty('itemIsParent')) {
                obj['itemIsParent'] = ApiClient.convertToType(data['itemIsParent'], 'String');
            }
            if (data.hasOwnProperty('itemTitlePath')) {
                obj['itemTitlePath'] = ApiClient.convertToType(data['itemTitlePath'], 'String');
            }
            if (data.hasOwnProperty('itemValuePath')) {
                obj['itemValuePath'] = ApiClient.convertToType(data['itemValuePath'], 'String');
            }
            if (data.hasOwnProperty('itemsPath')) {
                obj['itemsPath'] = ApiClient.convertToType(data['itemsPath'], 'String');
            }
            if (data.hasOwnProperty('operationId')) {
                obj['operationId'] = ApiClient.convertToType(data['operationId'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': SwaggerCustomDynamicTreeParameter});
            }
            if (data.hasOwnProperty('selectableFilter')) {
                obj['selectableFilter'] = ApiClient.convertToType(data['selectableFilter'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SwaggerCustomDynamicTreeCommand</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SwaggerCustomDynamicTreeCommand</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['itemFullTitlePath'] && !(typeof data['itemFullTitlePath'] === 'string' || data['itemFullTitlePath'] instanceof String)) {
            throw new Error("Expected the field `itemFullTitlePath` to be a primitive type in the JSON string but got " + data['itemFullTitlePath']);
        }
        // ensure the json data is a string
        if (data['itemIsParent'] && !(typeof data['itemIsParent'] === 'string' || data['itemIsParent'] instanceof String)) {
            throw new Error("Expected the field `itemIsParent` to be a primitive type in the JSON string but got " + data['itemIsParent']);
        }
        // ensure the json data is a string
        if (data['itemTitlePath'] && !(typeof data['itemTitlePath'] === 'string' || data['itemTitlePath'] instanceof String)) {
            throw new Error("Expected the field `itemTitlePath` to be a primitive type in the JSON string but got " + data['itemTitlePath']);
        }
        // ensure the json data is a string
        if (data['itemValuePath'] && !(typeof data['itemValuePath'] === 'string' || data['itemValuePath'] instanceof String)) {
            throw new Error("Expected the field `itemValuePath` to be a primitive type in the JSON string but got " + data['itemValuePath']);
        }
        // ensure the json data is a string
        if (data['itemsPath'] && !(typeof data['itemsPath'] === 'string' || data['itemsPath'] instanceof String)) {
            throw new Error("Expected the field `itemsPath` to be a primitive type in the JSON string but got " + data['itemsPath']);
        }
        // ensure the json data is a string
        if (data['operationId'] && !(typeof data['operationId'] === 'string' || data['operationId'] instanceof String)) {
            throw new Error("Expected the field `operationId` to be a primitive type in the JSON string but got " + data['operationId']);
        }
        // ensure the json data is a string
        if (data['selectableFilter'] && !(typeof data['selectableFilter'] === 'string' || data['selectableFilter'] instanceof String)) {
            throw new Error("Expected the field `selectableFilter` to be a primitive type in the JSON string but got " + data['selectableFilter']);
        }

        return true;
    }


}



/**
 * The path to an item property which defines the display name of the item.
 * @member {String} itemFullTitlePath
 */
SwaggerCustomDynamicTreeCommand.prototype['itemFullTitlePath'] = undefined;

/**
 * The path to an item property which defines the display name of the item.
 * @member {String} itemIsParent
 */
SwaggerCustomDynamicTreeCommand.prototype['itemIsParent'] = undefined;

/**
 * The path to an item property which defines the display name of the item.
 * @member {String} itemTitlePath
 */
SwaggerCustomDynamicTreeCommand.prototype['itemTitlePath'] = undefined;

/**
 * The path to an item property which defines the display name of the item.
 * @member {String} itemValuePath
 */
SwaggerCustomDynamicTreeCommand.prototype['itemValuePath'] = undefined;

/**
 * The path to an item property which defines the display name of the item.
 * @member {String} itemsPath
 */
SwaggerCustomDynamicTreeCommand.prototype['itemsPath'] = undefined;

/**
 * The path to an item property which defines the display name of the item.
 * @member {String} operationId
 */
SwaggerCustomDynamicTreeCommand.prototype['operationId'] = undefined;

/**
 * @member {Object.<String, module:model/SwaggerCustomDynamicTreeParameter>} parameters
 */
SwaggerCustomDynamicTreeCommand.prototype['parameters'] = undefined;

/**
 * The path to an item property which defines the display name of the item.
 * @member {String} selectableFilter
 */
SwaggerCustomDynamicTreeCommand.prototype['selectableFilter'] = undefined;






export default SwaggerCustomDynamicTreeCommand;

