/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SwaggerCustomDynamicList from './SwaggerCustomDynamicList';
import SwaggerCustomDynamicProperties from './SwaggerCustomDynamicProperties';
import SwaggerCustomDynamicSchema from './SwaggerCustomDynamicSchema';
import SwaggerCustomDynamicTree from './SwaggerCustomDynamicTree';
import SwaggerExternalDocumentation from './SwaggerExternalDocumentation';
import SwaggerSchemaType from './SwaggerSchemaType';
import SwaggerXml from './SwaggerXml';

/**
 * The SwaggerSchema model module.
 * @module model/SwaggerSchema
 * @version 2019-05-01
 */
class SwaggerSchema {
    /**
     * Constructs a new <code>SwaggerSchema</code>.
     * The swagger schema.
     * @alias module:model/SwaggerSchema
     */
    constructor() { 
        
        SwaggerSchema.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SwaggerSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SwaggerSchema} obj Optional instance to populate.
     * @return {module:model/SwaggerSchema} The populated <code>SwaggerSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SwaggerSchema();

            if (data.hasOwnProperty('additionalProperties')) {
                obj['additionalProperties'] = ApiClient.convertToType(data['additionalProperties'], Object);
            }
            if (data.hasOwnProperty('allOf')) {
                obj['allOf'] = ApiClient.convertToType(data['allOf'], [SwaggerSchema]);
            }
            if (data.hasOwnProperty('discriminator')) {
                obj['discriminator'] = ApiClient.convertToType(data['discriminator'], 'String');
            }
            if (data.hasOwnProperty('dynamicListNew')) {
                obj['dynamicListNew'] = SwaggerCustomDynamicList.constructFromObject(data['dynamicListNew']);
            }
            if (data.hasOwnProperty('dynamicSchemaNew')) {
                obj['dynamicSchemaNew'] = SwaggerCustomDynamicProperties.constructFromObject(data['dynamicSchemaNew']);
            }
            if (data.hasOwnProperty('dynamicSchemaOld')) {
                obj['dynamicSchemaOld'] = SwaggerCustomDynamicSchema.constructFromObject(data['dynamicSchemaOld']);
            }
            if (data.hasOwnProperty('dynamicTree')) {
                obj['dynamicTree'] = SwaggerCustomDynamicTree.constructFromObject(data['dynamicTree']);
            }
            if (data.hasOwnProperty('example')) {
                obj['example'] = ApiClient.convertToType(data['example'], Object);
            }
            if (data.hasOwnProperty('externalDocs')) {
                obj['externalDocs'] = SwaggerExternalDocumentation.constructFromObject(data['externalDocs']);
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = SwaggerSchema.constructFromObject(data['items']);
            }
            if (data.hasOwnProperty('maxProperties')) {
                obj['maxProperties'] = ApiClient.convertToType(data['maxProperties'], 'Number');
            }
            if (data.hasOwnProperty('minProperties')) {
                obj['minProperties'] = ApiClient.convertToType(data['minProperties'], 'Number');
            }
            if (data.hasOwnProperty('notificationUrlExtension')) {
                obj['notificationUrlExtension'] = ApiClient.convertToType(data['notificationUrlExtension'], 'Boolean');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': SwaggerSchema});
            }
            if (data.hasOwnProperty('readOnly')) {
                obj['readOnly'] = ApiClient.convertToType(data['readOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('ref')) {
                obj['ref'] = ApiClient.convertToType(data['ref'], 'String');
            }
            if (data.hasOwnProperty('required')) {
                obj['required'] = ApiClient.convertToType(data['required'], ['String']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = SwaggerSchemaType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('xml')) {
                obj['xml'] = SwaggerXml.constructFromObject(data['xml']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SwaggerSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SwaggerSchema</code>.
     */
    static validateJSON(data) {
        if (data['allOf']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['allOf'])) {
                throw new Error("Expected the field `allOf` to be an array in the JSON data but got " + data['allOf']);
            }
            // validate the optional field `allOf` (array)
            for (const item of data['allOf']) {
                SwaggerSchema.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['discriminator'] && !(typeof data['discriminator'] === 'string' || data['discriminator'] instanceof String)) {
            throw new Error("Expected the field `discriminator` to be a primitive type in the JSON string but got " + data['discriminator']);
        }
        // validate the optional field `dynamicListNew`
        if (data['dynamicListNew']) { // data not null
          SwaggerCustomDynamicList.validateJSON(data['dynamicListNew']);
        }
        // validate the optional field `dynamicSchemaNew`
        if (data['dynamicSchemaNew']) { // data not null
          SwaggerCustomDynamicProperties.validateJSON(data['dynamicSchemaNew']);
        }
        // validate the optional field `dynamicSchemaOld`
        if (data['dynamicSchemaOld']) { // data not null
          SwaggerCustomDynamicSchema.validateJSON(data['dynamicSchemaOld']);
        }
        // validate the optional field `dynamicTree`
        if (data['dynamicTree']) { // data not null
          SwaggerCustomDynamicTree.validateJSON(data['dynamicTree']);
        }
        // validate the optional field `externalDocs`
        if (data['externalDocs']) { // data not null
          SwaggerExternalDocumentation.validateJSON(data['externalDocs']);
        }
        // validate the optional field `items`
        if (data['items']) { // data not null
          SwaggerSchema.validateJSON(data['items']);
        }
        // ensure the json data is a string
        if (data['ref'] && !(typeof data['ref'] === 'string' || data['ref'] instanceof String)) {
            throw new Error("Expected the field `ref` to be a primitive type in the JSON string but got " + data['ref']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['required'])) {
            throw new Error("Expected the field `required` to be an array in the JSON data but got " + data['required']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // validate the optional field `xml`
        if (data['xml']) { // data not null
          SwaggerXml.validateJSON(data['xml']);
        }

        return true;
    }


}



/**
 * @member {Object} additionalProperties
 */
SwaggerSchema.prototype['additionalProperties'] = undefined;

/**
 * The schemas which must pass validation when this schema is used.
 * @member {Array.<module:model/SwaggerSchema>} allOf
 */
SwaggerSchema.prototype['allOf'] = undefined;

/**
 * The discriminator.
 * @member {String} discriminator
 */
SwaggerSchema.prototype['discriminator'] = undefined;

/**
 * @member {module:model/SwaggerCustomDynamicList} dynamicListNew
 */
SwaggerSchema.prototype['dynamicListNew'] = undefined;

/**
 * @member {module:model/SwaggerCustomDynamicProperties} dynamicSchemaNew
 */
SwaggerSchema.prototype['dynamicSchemaNew'] = undefined;

/**
 * @member {module:model/SwaggerCustomDynamicSchema} dynamicSchemaOld
 */
SwaggerSchema.prototype['dynamicSchemaOld'] = undefined;

/**
 * @member {module:model/SwaggerCustomDynamicTree} dynamicTree
 */
SwaggerSchema.prototype['dynamicTree'] = undefined;

/**
 * @member {Object} example
 */
SwaggerSchema.prototype['example'] = undefined;

/**
 * @member {module:model/SwaggerExternalDocumentation} externalDocs
 */
SwaggerSchema.prototype['externalDocs'] = undefined;

/**
 * @member {module:model/SwaggerSchema} items
 */
SwaggerSchema.prototype['items'] = undefined;

/**
 * The maximum number of allowed properties.
 * @member {Number} maxProperties
 */
SwaggerSchema.prototype['maxProperties'] = undefined;

/**
 * The minimum number of allowed properties.
 * @member {Number} minProperties
 */
SwaggerSchema.prototype['minProperties'] = undefined;

/**
 * Indicates the notification url extension. If this is set, the property's value should be a callback url for a webhook.
 * @member {Boolean} notificationUrlExtension
 */
SwaggerSchema.prototype['notificationUrlExtension'] = undefined;

/**
 * The object properties
 * @member {Object.<String, module:model/SwaggerSchema>} properties
 */
SwaggerSchema.prototype['properties'] = undefined;

/**
 * Indicates whether this property must be present in the a request.
 * @member {Boolean} readOnly
 */
SwaggerSchema.prototype['readOnly'] = undefined;

/**
 * The reference.
 * @member {String} ref
 */
SwaggerSchema.prototype['ref'] = undefined;

/**
 * The object required properties.
 * @member {Array.<String>} required
 */
SwaggerSchema.prototype['required'] = undefined;

/**
 * The title.
 * @member {String} title
 */
SwaggerSchema.prototype['title'] = undefined;

/**
 * @member {module:model/SwaggerSchemaType} type
 */
SwaggerSchema.prototype['type'] = undefined;

/**
 * @member {module:model/SwaggerXml} xml
 */
SwaggerSchema.prototype['xml'] = undefined;






export default SwaggerSchema;

