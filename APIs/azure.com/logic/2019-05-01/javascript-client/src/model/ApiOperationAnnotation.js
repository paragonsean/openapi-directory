/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StatusAnnotation from './StatusAnnotation';

/**
 * The ApiOperationAnnotation model module.
 * @module model/ApiOperationAnnotation
 * @version 2019-05-01
 */
class ApiOperationAnnotation {
    /**
     * Constructs a new <code>ApiOperationAnnotation</code>.
     * The Api Operation Annotation.
     * @alias module:model/ApiOperationAnnotation
     */
    constructor() { 
        
        ApiOperationAnnotation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiOperationAnnotation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiOperationAnnotation} obj Optional instance to populate.
     * @return {module:model/ApiOperationAnnotation} The populated <code>ApiOperationAnnotation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiOperationAnnotation();

            if (data.hasOwnProperty('family')) {
                obj['family'] = ApiClient.convertToType(data['family'], 'String');
            }
            if (data.hasOwnProperty('revision')) {
                obj['revision'] = ApiClient.convertToType(data['revision'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = StatusAnnotation.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiOperationAnnotation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiOperationAnnotation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['family'] && !(typeof data['family'] === 'string' || data['family'] instanceof String)) {
            throw new Error("Expected the field `family` to be a primitive type in the JSON string but got " + data['family']);
        }

        return true;
    }


}



/**
 * The family.
 * @member {String} family
 */
ApiOperationAnnotation.prototype['family'] = undefined;

/**
 * The revision.
 * @member {Number} revision
 */
ApiOperationAnnotation.prototype['revision'] = undefined;

/**
 * @member {module:model/StatusAnnotation} status
 */
ApiOperationAnnotation.prototype['status'] = undefined;






export default ApiOperationAnnotation;

