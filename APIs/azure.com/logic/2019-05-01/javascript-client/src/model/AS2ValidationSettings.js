/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EncryptionAlgorithm from './EncryptionAlgorithm';
import SigningAlgorithm from './SigningAlgorithm';

/**
 * The AS2ValidationSettings model module.
 * @module model/AS2ValidationSettings
 * @version 2019-05-01
 */
class AS2ValidationSettings {
    /**
     * Constructs a new <code>AS2ValidationSettings</code>.
     * The AS2 agreement validation settings.
     * @alias module:model/AS2ValidationSettings
     * @param checkCertificateRevocationListOnReceive {Boolean} The value indicating whether to check for certificate revocation list on receive.
     * @param checkCertificateRevocationListOnSend {Boolean} The value indicating whether to check for certificate revocation list on send.
     * @param checkDuplicateMessage {Boolean} The value indicating whether to check for duplicate message.
     * @param compressMessage {Boolean} The value indicating whether the message has to be compressed.
     * @param encryptMessage {Boolean} The value indicating whether the message has to be encrypted.
     * @param encryptionAlgorithm {module:model/EncryptionAlgorithm} 
     * @param interchangeDuplicatesValidityDays {Number} The number of days to look back for duplicate interchange.
     * @param overrideMessageProperties {Boolean} The value indicating whether to override incoming message properties with those in agreement.
     * @param signMessage {Boolean} The value indicating whether the message has to be signed.
     */
    constructor(checkCertificateRevocationListOnReceive, checkCertificateRevocationListOnSend, checkDuplicateMessage, compressMessage, encryptMessage, encryptionAlgorithm, interchangeDuplicatesValidityDays, overrideMessageProperties, signMessage) { 
        
        AS2ValidationSettings.initialize(this, checkCertificateRevocationListOnReceive, checkCertificateRevocationListOnSend, checkDuplicateMessage, compressMessage, encryptMessage, encryptionAlgorithm, interchangeDuplicatesValidityDays, overrideMessageProperties, signMessage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, checkCertificateRevocationListOnReceive, checkCertificateRevocationListOnSend, checkDuplicateMessage, compressMessage, encryptMessage, encryptionAlgorithm, interchangeDuplicatesValidityDays, overrideMessageProperties, signMessage) { 
        obj['checkCertificateRevocationListOnReceive'] = checkCertificateRevocationListOnReceive;
        obj['checkCertificateRevocationListOnSend'] = checkCertificateRevocationListOnSend;
        obj['checkDuplicateMessage'] = checkDuplicateMessage;
        obj['compressMessage'] = compressMessage;
        obj['encryptMessage'] = encryptMessage;
        obj['encryptionAlgorithm'] = encryptionAlgorithm;
        obj['interchangeDuplicatesValidityDays'] = interchangeDuplicatesValidityDays;
        obj['overrideMessageProperties'] = overrideMessageProperties;
        obj['signMessage'] = signMessage;
    }

    /**
     * Constructs a <code>AS2ValidationSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AS2ValidationSettings} obj Optional instance to populate.
     * @return {module:model/AS2ValidationSettings} The populated <code>AS2ValidationSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AS2ValidationSettings();

            if (data.hasOwnProperty('checkCertificateRevocationListOnReceive')) {
                obj['checkCertificateRevocationListOnReceive'] = ApiClient.convertToType(data['checkCertificateRevocationListOnReceive'], 'Boolean');
            }
            if (data.hasOwnProperty('checkCertificateRevocationListOnSend')) {
                obj['checkCertificateRevocationListOnSend'] = ApiClient.convertToType(data['checkCertificateRevocationListOnSend'], 'Boolean');
            }
            if (data.hasOwnProperty('checkDuplicateMessage')) {
                obj['checkDuplicateMessage'] = ApiClient.convertToType(data['checkDuplicateMessage'], 'Boolean');
            }
            if (data.hasOwnProperty('compressMessage')) {
                obj['compressMessage'] = ApiClient.convertToType(data['compressMessage'], 'Boolean');
            }
            if (data.hasOwnProperty('encryptMessage')) {
                obj['encryptMessage'] = ApiClient.convertToType(data['encryptMessage'], 'Boolean');
            }
            if (data.hasOwnProperty('encryptionAlgorithm')) {
                obj['encryptionAlgorithm'] = EncryptionAlgorithm.constructFromObject(data['encryptionAlgorithm']);
            }
            if (data.hasOwnProperty('interchangeDuplicatesValidityDays')) {
                obj['interchangeDuplicatesValidityDays'] = ApiClient.convertToType(data['interchangeDuplicatesValidityDays'], 'Number');
            }
            if (data.hasOwnProperty('overrideMessageProperties')) {
                obj['overrideMessageProperties'] = ApiClient.convertToType(data['overrideMessageProperties'], 'Boolean');
            }
            if (data.hasOwnProperty('signMessage')) {
                obj['signMessage'] = ApiClient.convertToType(data['signMessage'], 'Boolean');
            }
            if (data.hasOwnProperty('signingAlgorithm')) {
                obj['signingAlgorithm'] = SigningAlgorithm.constructFromObject(data['signingAlgorithm']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AS2ValidationSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AS2ValidationSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AS2ValidationSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

AS2ValidationSettings.RequiredProperties = ["checkCertificateRevocationListOnReceive", "checkCertificateRevocationListOnSend", "checkDuplicateMessage", "compressMessage", "encryptMessage", "encryptionAlgorithm", "interchangeDuplicatesValidityDays", "overrideMessageProperties", "signMessage"];

/**
 * The value indicating whether to check for certificate revocation list on receive.
 * @member {Boolean} checkCertificateRevocationListOnReceive
 */
AS2ValidationSettings.prototype['checkCertificateRevocationListOnReceive'] = undefined;

/**
 * The value indicating whether to check for certificate revocation list on send.
 * @member {Boolean} checkCertificateRevocationListOnSend
 */
AS2ValidationSettings.prototype['checkCertificateRevocationListOnSend'] = undefined;

/**
 * The value indicating whether to check for duplicate message.
 * @member {Boolean} checkDuplicateMessage
 */
AS2ValidationSettings.prototype['checkDuplicateMessage'] = undefined;

/**
 * The value indicating whether the message has to be compressed.
 * @member {Boolean} compressMessage
 */
AS2ValidationSettings.prototype['compressMessage'] = undefined;

/**
 * The value indicating whether the message has to be encrypted.
 * @member {Boolean} encryptMessage
 */
AS2ValidationSettings.prototype['encryptMessage'] = undefined;

/**
 * @member {module:model/EncryptionAlgorithm} encryptionAlgorithm
 */
AS2ValidationSettings.prototype['encryptionAlgorithm'] = undefined;

/**
 * The number of days to look back for duplicate interchange.
 * @member {Number} interchangeDuplicatesValidityDays
 */
AS2ValidationSettings.prototype['interchangeDuplicatesValidityDays'] = undefined;

/**
 * The value indicating whether to override incoming message properties with those in agreement.
 * @member {Boolean} overrideMessageProperties
 */
AS2ValidationSettings.prototype['overrideMessageProperties'] = undefined;

/**
 * The value indicating whether the message has to be signed.
 * @member {Boolean} signMessage
 */
AS2ValidationSettings.prototype['signMessage'] = undefined;

/**
 * @member {module:model/SigningAlgorithm} signingAlgorithm
 */
AS2ValidationSettings.prototype['signingAlgorithm'] = undefined;






export default AS2ValidationSettings;

