/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WorkflowTriggerListCallbackUrlQueries model module.
 * @module model/WorkflowTriggerListCallbackUrlQueries
 * @version 2019-05-01
 */
class WorkflowTriggerListCallbackUrlQueries {
    /**
     * Constructs a new <code>WorkflowTriggerListCallbackUrlQueries</code>.
     * Gets the workflow trigger callback URL query parameters.
     * @alias module:model/WorkflowTriggerListCallbackUrlQueries
     */
    constructor() { 
        
        WorkflowTriggerListCallbackUrlQueries.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkflowTriggerListCallbackUrlQueries</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowTriggerListCallbackUrlQueries} obj Optional instance to populate.
     * @return {module:model/WorkflowTriggerListCallbackUrlQueries} The populated <code>WorkflowTriggerListCallbackUrlQueries</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowTriggerListCallbackUrlQueries();

            if (data.hasOwnProperty('api-version')) {
                obj['api-version'] = ApiClient.convertToType(data['api-version'], 'String');
            }
            if (data.hasOwnProperty('se')) {
                obj['se'] = ApiClient.convertToType(data['se'], 'String');
            }
            if (data.hasOwnProperty('sig')) {
                obj['sig'] = ApiClient.convertToType(data['sig'], 'String');
            }
            if (data.hasOwnProperty('sp')) {
                obj['sp'] = ApiClient.convertToType(data['sp'], 'String');
            }
            if (data.hasOwnProperty('sv')) {
                obj['sv'] = ApiClient.convertToType(data['sv'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowTriggerListCallbackUrlQueries</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowTriggerListCallbackUrlQueries</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['api-version'] && !(typeof data['api-version'] === 'string' || data['api-version'] instanceof String)) {
            throw new Error("Expected the field `api-version` to be a primitive type in the JSON string but got " + data['api-version']);
        }
        // ensure the json data is a string
        if (data['se'] && !(typeof data['se'] === 'string' || data['se'] instanceof String)) {
            throw new Error("Expected the field `se` to be a primitive type in the JSON string but got " + data['se']);
        }
        // ensure the json data is a string
        if (data['sig'] && !(typeof data['sig'] === 'string' || data['sig'] instanceof String)) {
            throw new Error("Expected the field `sig` to be a primitive type in the JSON string but got " + data['sig']);
        }
        // ensure the json data is a string
        if (data['sp'] && !(typeof data['sp'] === 'string' || data['sp'] instanceof String)) {
            throw new Error("Expected the field `sp` to be a primitive type in the JSON string but got " + data['sp']);
        }
        // ensure the json data is a string
        if (data['sv'] && !(typeof data['sv'] === 'string' || data['sv'] instanceof String)) {
            throw new Error("Expected the field `sv` to be a primitive type in the JSON string but got " + data['sv']);
        }

        return true;
    }


}



/**
 * The api version.
 * @member {String} api-version
 */
WorkflowTriggerListCallbackUrlQueries.prototype['api-version'] = undefined;

/**
 * The SAS timestamp.
 * @member {String} se
 */
WorkflowTriggerListCallbackUrlQueries.prototype['se'] = undefined;

/**
 * The SAS signature.
 * @member {String} sig
 */
WorkflowTriggerListCallbackUrlQueries.prototype['sig'] = undefined;

/**
 * The SAS permissions.
 * @member {String} sp
 */
WorkflowTriggerListCallbackUrlQueries.prototype['sp'] = undefined;

/**
 * The SAS version.
 * @member {String} sv
 */
WorkflowTriggerListCallbackUrlQueries.prototype['sv'] = undefined;






export default WorkflowTriggerListCallbackUrlQueries;

