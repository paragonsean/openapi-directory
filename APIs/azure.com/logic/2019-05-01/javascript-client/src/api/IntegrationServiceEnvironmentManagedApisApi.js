/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiOperationListResult from '../model/ApiOperationListResult';
import ErrorResponse from '../model/ErrorResponse';
import ManagedApiListResult from '../model/ManagedApiListResult';

/**
* IntegrationServiceEnvironmentManagedApis service.
* @module api/IntegrationServiceEnvironmentManagedApisApi
* @version 2019-05-01
*/
export default class IntegrationServiceEnvironmentManagedApisApi {

    /**
    * Constructs a new IntegrationServiceEnvironmentManagedApisApi. 
    * @alias module:api/IntegrationServiceEnvironmentManagedApisApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the integrationServiceEnvironmentManagedApiOperationsList operation.
     * @callback module:api/IntegrationServiceEnvironmentManagedApisApi~integrationServiceEnvironmentManagedApiOperationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiOperationListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the managed Api operations.
     * @param {String} subscriptionId The subscription id.
     * @param {String} resourceGroup The resource group.
     * @param {String} integrationServiceEnvironmentName The integration service environment name.
     * @param {String} apiName The api name.
     * @param {String} apiVersion The API version.
     * @param {module:api/IntegrationServiceEnvironmentManagedApisApi~integrationServiceEnvironmentManagedApiOperationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiOperationListResult}
     */
    integrationServiceEnvironmentManagedApiOperationsList(subscriptionId, resourceGroup, integrationServiceEnvironmentName, apiName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling integrationServiceEnvironmentManagedApiOperationsList");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling integrationServiceEnvironmentManagedApiOperationsList");
      }
      // verify the required parameter 'integrationServiceEnvironmentName' is set
      if (integrationServiceEnvironmentName === undefined || integrationServiceEnvironmentName === null) {
        throw new Error("Missing the required parameter 'integrationServiceEnvironmentName' when calling integrationServiceEnvironmentManagedApiOperationsList");
      }
      // verify the required parameter 'apiName' is set
      if (apiName === undefined || apiName === null) {
        throw new Error("Missing the required parameter 'apiName' when calling integrationServiceEnvironmentManagedApiOperationsList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling integrationServiceEnvironmentManagedApiOperationsList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'integrationServiceEnvironmentName': integrationServiceEnvironmentName,
        'apiName': apiName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiOperationListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis/{apiName}/apiOperations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the integrationServiceEnvironmentManagedApisList operation.
     * @callback module:api/IntegrationServiceEnvironmentManagedApisApi~integrationServiceEnvironmentManagedApisListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ManagedApiListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the integration service environment managed Apis.
     * @param {String} subscriptionId The subscription id.
     * @param {String} resourceGroup The resource group.
     * @param {String} integrationServiceEnvironmentName The integration service environment name.
     * @param {String} apiVersion The API version.
     * @param {module:api/IntegrationServiceEnvironmentManagedApisApi~integrationServiceEnvironmentManagedApisListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ManagedApiListResult}
     */
    integrationServiceEnvironmentManagedApisList(subscriptionId, resourceGroup, integrationServiceEnvironmentName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling integrationServiceEnvironmentManagedApisList");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling integrationServiceEnvironmentManagedApisList");
      }
      // verify the required parameter 'integrationServiceEnvironmentName' is set
      if (integrationServiceEnvironmentName === undefined || integrationServiceEnvironmentName === null) {
        throw new Error("Missing the required parameter 'integrationServiceEnvironmentName' when calling integrationServiceEnvironmentManagedApisList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling integrationServiceEnvironmentManagedApisList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'integrationServiceEnvironmentName': integrationServiceEnvironmentName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ManagedApiListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
