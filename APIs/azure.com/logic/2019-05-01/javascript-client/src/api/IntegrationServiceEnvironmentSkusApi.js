/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2019-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import IntegrationServiceEnvironmentSkuList from '../model/IntegrationServiceEnvironmentSkuList';

/**
* IntegrationServiceEnvironmentSkus service.
* @module api/IntegrationServiceEnvironmentSkusApi
* @version 2019-05-01
*/
export default class IntegrationServiceEnvironmentSkusApi {

    /**
    * Constructs a new IntegrationServiceEnvironmentSkusApi. 
    * @alias module:api/IntegrationServiceEnvironmentSkusApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the integrationServiceEnvironmentSkusList operation.
     * @callback module:api/IntegrationServiceEnvironmentSkusApi~integrationServiceEnvironmentSkusListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IntegrationServiceEnvironmentSkuList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of integration service environment Skus.
     * @param {String} subscriptionId The subscription id.
     * @param {String} resourceGroup The resource group.
     * @param {String} integrationServiceEnvironmentName The integration service environment name.
     * @param {String} apiVersion The API version.
     * @param {module:api/IntegrationServiceEnvironmentSkusApi~integrationServiceEnvironmentSkusListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IntegrationServiceEnvironmentSkuList}
     */
    integrationServiceEnvironmentSkusList(subscriptionId, resourceGroup, integrationServiceEnvironmentName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling integrationServiceEnvironmentSkusList");
      }
      // verify the required parameter 'resourceGroup' is set
      if (resourceGroup === undefined || resourceGroup === null) {
        throw new Error("Missing the required parameter 'resourceGroup' when calling integrationServiceEnvironmentSkusList");
      }
      // verify the required parameter 'integrationServiceEnvironmentName' is set
      if (integrationServiceEnvironmentName === undefined || integrationServiceEnvironmentName === null) {
        throw new Error("Missing the required parameter 'integrationServiceEnvironmentName' when calling integrationServiceEnvironmentSkusList");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling integrationServiceEnvironmentSkusList");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroup': resourceGroup,
        'integrationServiceEnvironmentName': integrationServiceEnvironmentName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IntegrationServiceEnvironmentSkuList;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/skus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
