# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.edifact_decimal_indicator import EdifactDecimalIndicator
from openapi_server.models.segment_terminator_suffix import SegmentTerminatorSuffix
from openapi_server import util


class EdifactDelimiterOverride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, component_separator: int=None, data_element_separator: int=None, decimal_point_indicator: EdifactDecimalIndicator=None, message_association_assigned_code: str=None, message_id: str=None, message_release: str=None, message_version: str=None, release_indicator: int=None, repetition_separator: int=None, segment_terminator: int=None, segment_terminator_suffix: SegmentTerminatorSuffix=None, target_namespace: str=None):
        """EdifactDelimiterOverride - a model defined in OpenAPI

        :param component_separator: The component_separator of this EdifactDelimiterOverride.
        :param data_element_separator: The data_element_separator of this EdifactDelimiterOverride.
        :param decimal_point_indicator: The decimal_point_indicator of this EdifactDelimiterOverride.
        :param message_association_assigned_code: The message_association_assigned_code of this EdifactDelimiterOverride.
        :param message_id: The message_id of this EdifactDelimiterOverride.
        :param message_release: The message_release of this EdifactDelimiterOverride.
        :param message_version: The message_version of this EdifactDelimiterOverride.
        :param release_indicator: The release_indicator of this EdifactDelimiterOverride.
        :param repetition_separator: The repetition_separator of this EdifactDelimiterOverride.
        :param segment_terminator: The segment_terminator of this EdifactDelimiterOverride.
        :param segment_terminator_suffix: The segment_terminator_suffix of this EdifactDelimiterOverride.
        :param target_namespace: The target_namespace of this EdifactDelimiterOverride.
        """
        self.openapi_types = {
            'component_separator': int,
            'data_element_separator': int,
            'decimal_point_indicator': EdifactDecimalIndicator,
            'message_association_assigned_code': str,
            'message_id': str,
            'message_release': str,
            'message_version': str,
            'release_indicator': int,
            'repetition_separator': int,
            'segment_terminator': int,
            'segment_terminator_suffix': SegmentTerminatorSuffix,
            'target_namespace': str
        }

        self.attribute_map = {
            'component_separator': 'componentSeparator',
            'data_element_separator': 'dataElementSeparator',
            'decimal_point_indicator': 'decimalPointIndicator',
            'message_association_assigned_code': 'messageAssociationAssignedCode',
            'message_id': 'messageId',
            'message_release': 'messageRelease',
            'message_version': 'messageVersion',
            'release_indicator': 'releaseIndicator',
            'repetition_separator': 'repetitionSeparator',
            'segment_terminator': 'segmentTerminator',
            'segment_terminator_suffix': 'segmentTerminatorSuffix',
            'target_namespace': 'targetNamespace'
        }

        self._component_separator = component_separator
        self._data_element_separator = data_element_separator
        self._decimal_point_indicator = decimal_point_indicator
        self._message_association_assigned_code = message_association_assigned_code
        self._message_id = message_id
        self._message_release = message_release
        self._message_version = message_version
        self._release_indicator = release_indicator
        self._repetition_separator = repetition_separator
        self._segment_terminator = segment_terminator
        self._segment_terminator_suffix = segment_terminator_suffix
        self._target_namespace = target_namespace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EdifactDelimiterOverride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EdifactDelimiterOverride of this EdifactDelimiterOverride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def component_separator(self):
        """Gets the component_separator of this EdifactDelimiterOverride.

        The component separator.

        :return: The component_separator of this EdifactDelimiterOverride.
        :rtype: int
        """
        return self._component_separator

    @component_separator.setter
    def component_separator(self, component_separator):
        """Sets the component_separator of this EdifactDelimiterOverride.

        The component separator.

        :param component_separator: The component_separator of this EdifactDelimiterOverride.
        :type component_separator: int
        """

        self._component_separator = component_separator

    @property
    def data_element_separator(self):
        """Gets the data_element_separator of this EdifactDelimiterOverride.

        The data element separator.

        :return: The data_element_separator of this EdifactDelimiterOverride.
        :rtype: int
        """
        return self._data_element_separator

    @data_element_separator.setter
    def data_element_separator(self, data_element_separator):
        """Sets the data_element_separator of this EdifactDelimiterOverride.

        The data element separator.

        :param data_element_separator: The data_element_separator of this EdifactDelimiterOverride.
        :type data_element_separator: int
        """

        self._data_element_separator = data_element_separator

    @property
    def decimal_point_indicator(self):
        """Gets the decimal_point_indicator of this EdifactDelimiterOverride.


        :return: The decimal_point_indicator of this EdifactDelimiterOverride.
        :rtype: EdifactDecimalIndicator
        """
        return self._decimal_point_indicator

    @decimal_point_indicator.setter
    def decimal_point_indicator(self, decimal_point_indicator):
        """Sets the decimal_point_indicator of this EdifactDelimiterOverride.


        :param decimal_point_indicator: The decimal_point_indicator of this EdifactDelimiterOverride.
        :type decimal_point_indicator: EdifactDecimalIndicator
        """

        self._decimal_point_indicator = decimal_point_indicator

    @property
    def message_association_assigned_code(self):
        """Gets the message_association_assigned_code of this EdifactDelimiterOverride.

        The message association assigned code.

        :return: The message_association_assigned_code of this EdifactDelimiterOverride.
        :rtype: str
        """
        return self._message_association_assigned_code

    @message_association_assigned_code.setter
    def message_association_assigned_code(self, message_association_assigned_code):
        """Sets the message_association_assigned_code of this EdifactDelimiterOverride.

        The message association assigned code.

        :param message_association_assigned_code: The message_association_assigned_code of this EdifactDelimiterOverride.
        :type message_association_assigned_code: str
        """

        self._message_association_assigned_code = message_association_assigned_code

    @property
    def message_id(self):
        """Gets the message_id of this EdifactDelimiterOverride.

        The message id.

        :return: The message_id of this EdifactDelimiterOverride.
        :rtype: str
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this EdifactDelimiterOverride.

        The message id.

        :param message_id: The message_id of this EdifactDelimiterOverride.
        :type message_id: str
        """

        self._message_id = message_id

    @property
    def message_release(self):
        """Gets the message_release of this EdifactDelimiterOverride.

        The message release version.

        :return: The message_release of this EdifactDelimiterOverride.
        :rtype: str
        """
        return self._message_release

    @message_release.setter
    def message_release(self, message_release):
        """Sets the message_release of this EdifactDelimiterOverride.

        The message release version.

        :param message_release: The message_release of this EdifactDelimiterOverride.
        :type message_release: str
        """

        self._message_release = message_release

    @property
    def message_version(self):
        """Gets the message_version of this EdifactDelimiterOverride.

        The message version.

        :return: The message_version of this EdifactDelimiterOverride.
        :rtype: str
        """
        return self._message_version

    @message_version.setter
    def message_version(self, message_version):
        """Sets the message_version of this EdifactDelimiterOverride.

        The message version.

        :param message_version: The message_version of this EdifactDelimiterOverride.
        :type message_version: str
        """

        self._message_version = message_version

    @property
    def release_indicator(self):
        """Gets the release_indicator of this EdifactDelimiterOverride.

        The release indicator.

        :return: The release_indicator of this EdifactDelimiterOverride.
        :rtype: int
        """
        return self._release_indicator

    @release_indicator.setter
    def release_indicator(self, release_indicator):
        """Sets the release_indicator of this EdifactDelimiterOverride.

        The release indicator.

        :param release_indicator: The release_indicator of this EdifactDelimiterOverride.
        :type release_indicator: int
        """

        self._release_indicator = release_indicator

    @property
    def repetition_separator(self):
        """Gets the repetition_separator of this EdifactDelimiterOverride.

        The repetition separator.

        :return: The repetition_separator of this EdifactDelimiterOverride.
        :rtype: int
        """
        return self._repetition_separator

    @repetition_separator.setter
    def repetition_separator(self, repetition_separator):
        """Sets the repetition_separator of this EdifactDelimiterOverride.

        The repetition separator.

        :param repetition_separator: The repetition_separator of this EdifactDelimiterOverride.
        :type repetition_separator: int
        """

        self._repetition_separator = repetition_separator

    @property
    def segment_terminator(self):
        """Gets the segment_terminator of this EdifactDelimiterOverride.

        The segment terminator.

        :return: The segment_terminator of this EdifactDelimiterOverride.
        :rtype: int
        """
        return self._segment_terminator

    @segment_terminator.setter
    def segment_terminator(self, segment_terminator):
        """Sets the segment_terminator of this EdifactDelimiterOverride.

        The segment terminator.

        :param segment_terminator: The segment_terminator of this EdifactDelimiterOverride.
        :type segment_terminator: int
        """

        self._segment_terminator = segment_terminator

    @property
    def segment_terminator_suffix(self):
        """Gets the segment_terminator_suffix of this EdifactDelimiterOverride.


        :return: The segment_terminator_suffix of this EdifactDelimiterOverride.
        :rtype: SegmentTerminatorSuffix
        """
        return self._segment_terminator_suffix

    @segment_terminator_suffix.setter
    def segment_terminator_suffix(self, segment_terminator_suffix):
        """Sets the segment_terminator_suffix of this EdifactDelimiterOverride.


        :param segment_terminator_suffix: The segment_terminator_suffix of this EdifactDelimiterOverride.
        :type segment_terminator_suffix: SegmentTerminatorSuffix
        """

        self._segment_terminator_suffix = segment_terminator_suffix

    @property
    def target_namespace(self):
        """Gets the target_namespace of this EdifactDelimiterOverride.

        The target namespace on which this delimiter settings has to be applied.

        :return: The target_namespace of this EdifactDelimiterOverride.
        :rtype: str
        """
        return self._target_namespace

    @target_namespace.setter
    def target_namespace(self, target_namespace):
        """Sets the target_namespace of this EdifactDelimiterOverride.

        The target namespace on which this delimiter settings has to be applied.

        :param target_namespace: The target_namespace of this EdifactDelimiterOverride.
        :type target_namespace: str
        """

        self._target_namespace = target_namespace
