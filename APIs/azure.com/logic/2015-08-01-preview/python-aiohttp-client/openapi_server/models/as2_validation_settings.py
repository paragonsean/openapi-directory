# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.encryption_algorithm import EncryptionAlgorithm
from openapi_server import util


class AS2ValidationSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_certificate_revocation_list_on_receive: bool=None, check_certificate_revocation_list_on_send: bool=None, check_duplicate_message: bool=None, compress_message: bool=None, encrypt_message: bool=None, encryption_algorithm: EncryptionAlgorithm=None, interchange_duplicates_validity_days: int=None, override_message_properties: bool=None, sign_message: bool=None):
        """AS2ValidationSettings - a model defined in OpenAPI

        :param check_certificate_revocation_list_on_receive: The check_certificate_revocation_list_on_receive of this AS2ValidationSettings.
        :param check_certificate_revocation_list_on_send: The check_certificate_revocation_list_on_send of this AS2ValidationSettings.
        :param check_duplicate_message: The check_duplicate_message of this AS2ValidationSettings.
        :param compress_message: The compress_message of this AS2ValidationSettings.
        :param encrypt_message: The encrypt_message of this AS2ValidationSettings.
        :param encryption_algorithm: The encryption_algorithm of this AS2ValidationSettings.
        :param interchange_duplicates_validity_days: The interchange_duplicates_validity_days of this AS2ValidationSettings.
        :param override_message_properties: The override_message_properties of this AS2ValidationSettings.
        :param sign_message: The sign_message of this AS2ValidationSettings.
        """
        self.openapi_types = {
            'check_certificate_revocation_list_on_receive': bool,
            'check_certificate_revocation_list_on_send': bool,
            'check_duplicate_message': bool,
            'compress_message': bool,
            'encrypt_message': bool,
            'encryption_algorithm': EncryptionAlgorithm,
            'interchange_duplicates_validity_days': int,
            'override_message_properties': bool,
            'sign_message': bool
        }

        self.attribute_map = {
            'check_certificate_revocation_list_on_receive': 'checkCertificateRevocationListOnReceive',
            'check_certificate_revocation_list_on_send': 'checkCertificateRevocationListOnSend',
            'check_duplicate_message': 'checkDuplicateMessage',
            'compress_message': 'compressMessage',
            'encrypt_message': 'encryptMessage',
            'encryption_algorithm': 'encryptionAlgorithm',
            'interchange_duplicates_validity_days': 'interchangeDuplicatesValidityDays',
            'override_message_properties': 'overrideMessageProperties',
            'sign_message': 'signMessage'
        }

        self._check_certificate_revocation_list_on_receive = check_certificate_revocation_list_on_receive
        self._check_certificate_revocation_list_on_send = check_certificate_revocation_list_on_send
        self._check_duplicate_message = check_duplicate_message
        self._compress_message = compress_message
        self._encrypt_message = encrypt_message
        self._encryption_algorithm = encryption_algorithm
        self._interchange_duplicates_validity_days = interchange_duplicates_validity_days
        self._override_message_properties = override_message_properties
        self._sign_message = sign_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AS2ValidationSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AS2ValidationSettings of this AS2ValidationSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_certificate_revocation_list_on_receive(self):
        """Gets the check_certificate_revocation_list_on_receive of this AS2ValidationSettings.

        The value indicating whether to check for certificate revocation list on receive.

        :return: The check_certificate_revocation_list_on_receive of this AS2ValidationSettings.
        :rtype: bool
        """
        return self._check_certificate_revocation_list_on_receive

    @check_certificate_revocation_list_on_receive.setter
    def check_certificate_revocation_list_on_receive(self, check_certificate_revocation_list_on_receive):
        """Sets the check_certificate_revocation_list_on_receive of this AS2ValidationSettings.

        The value indicating whether to check for certificate revocation list on receive.

        :param check_certificate_revocation_list_on_receive: The check_certificate_revocation_list_on_receive of this AS2ValidationSettings.
        :type check_certificate_revocation_list_on_receive: bool
        """

        self._check_certificate_revocation_list_on_receive = check_certificate_revocation_list_on_receive

    @property
    def check_certificate_revocation_list_on_send(self):
        """Gets the check_certificate_revocation_list_on_send of this AS2ValidationSettings.

        The value indicating whether to check for certificate revocation list on send.

        :return: The check_certificate_revocation_list_on_send of this AS2ValidationSettings.
        :rtype: bool
        """
        return self._check_certificate_revocation_list_on_send

    @check_certificate_revocation_list_on_send.setter
    def check_certificate_revocation_list_on_send(self, check_certificate_revocation_list_on_send):
        """Sets the check_certificate_revocation_list_on_send of this AS2ValidationSettings.

        The value indicating whether to check for certificate revocation list on send.

        :param check_certificate_revocation_list_on_send: The check_certificate_revocation_list_on_send of this AS2ValidationSettings.
        :type check_certificate_revocation_list_on_send: bool
        """

        self._check_certificate_revocation_list_on_send = check_certificate_revocation_list_on_send

    @property
    def check_duplicate_message(self):
        """Gets the check_duplicate_message of this AS2ValidationSettings.

        The value indicating whether to check for duplicate message.

        :return: The check_duplicate_message of this AS2ValidationSettings.
        :rtype: bool
        """
        return self._check_duplicate_message

    @check_duplicate_message.setter
    def check_duplicate_message(self, check_duplicate_message):
        """Sets the check_duplicate_message of this AS2ValidationSettings.

        The value indicating whether to check for duplicate message.

        :param check_duplicate_message: The check_duplicate_message of this AS2ValidationSettings.
        :type check_duplicate_message: bool
        """

        self._check_duplicate_message = check_duplicate_message

    @property
    def compress_message(self):
        """Gets the compress_message of this AS2ValidationSettings.

        The value indicating whether the message has to be compressed.

        :return: The compress_message of this AS2ValidationSettings.
        :rtype: bool
        """
        return self._compress_message

    @compress_message.setter
    def compress_message(self, compress_message):
        """Sets the compress_message of this AS2ValidationSettings.

        The value indicating whether the message has to be compressed.

        :param compress_message: The compress_message of this AS2ValidationSettings.
        :type compress_message: bool
        """

        self._compress_message = compress_message

    @property
    def encrypt_message(self):
        """Gets the encrypt_message of this AS2ValidationSettings.

        The value indicating whether the message has to be encrypted.

        :return: The encrypt_message of this AS2ValidationSettings.
        :rtype: bool
        """
        return self._encrypt_message

    @encrypt_message.setter
    def encrypt_message(self, encrypt_message):
        """Sets the encrypt_message of this AS2ValidationSettings.

        The value indicating whether the message has to be encrypted.

        :param encrypt_message: The encrypt_message of this AS2ValidationSettings.
        :type encrypt_message: bool
        """

        self._encrypt_message = encrypt_message

    @property
    def encryption_algorithm(self):
        """Gets the encryption_algorithm of this AS2ValidationSettings.


        :return: The encryption_algorithm of this AS2ValidationSettings.
        :rtype: EncryptionAlgorithm
        """
        return self._encryption_algorithm

    @encryption_algorithm.setter
    def encryption_algorithm(self, encryption_algorithm):
        """Sets the encryption_algorithm of this AS2ValidationSettings.


        :param encryption_algorithm: The encryption_algorithm of this AS2ValidationSettings.
        :type encryption_algorithm: EncryptionAlgorithm
        """

        self._encryption_algorithm = encryption_algorithm

    @property
    def interchange_duplicates_validity_days(self):
        """Gets the interchange_duplicates_validity_days of this AS2ValidationSettings.

        The number of days to look back for duplicate interchange.

        :return: The interchange_duplicates_validity_days of this AS2ValidationSettings.
        :rtype: int
        """
        return self._interchange_duplicates_validity_days

    @interchange_duplicates_validity_days.setter
    def interchange_duplicates_validity_days(self, interchange_duplicates_validity_days):
        """Sets the interchange_duplicates_validity_days of this AS2ValidationSettings.

        The number of days to look back for duplicate interchange.

        :param interchange_duplicates_validity_days: The interchange_duplicates_validity_days of this AS2ValidationSettings.
        :type interchange_duplicates_validity_days: int
        """

        self._interchange_duplicates_validity_days = interchange_duplicates_validity_days

    @property
    def override_message_properties(self):
        """Gets the override_message_properties of this AS2ValidationSettings.

        The value indicating whether to override incoming message properties with those in agreement.

        :return: The override_message_properties of this AS2ValidationSettings.
        :rtype: bool
        """
        return self._override_message_properties

    @override_message_properties.setter
    def override_message_properties(self, override_message_properties):
        """Sets the override_message_properties of this AS2ValidationSettings.

        The value indicating whether to override incoming message properties with those in agreement.

        :param override_message_properties: The override_message_properties of this AS2ValidationSettings.
        :type override_message_properties: bool
        """

        self._override_message_properties = override_message_properties

    @property
    def sign_message(self):
        """Gets the sign_message of this AS2ValidationSettings.

        The value indicating whether the message has to be signed.

        :return: The sign_message of this AS2ValidationSettings.
        :rtype: bool
        """
        return self._sign_message

    @sign_message.setter
    def sign_message(self, sign_message):
        """Sets the sign_message of this AS2ValidationSettings.

        The value indicating whether the message has to be signed.

        :param sign_message: The sign_message of this AS2ValidationSettings.
        :type sign_message: bool
        """

        self._sign_message = sign_message
