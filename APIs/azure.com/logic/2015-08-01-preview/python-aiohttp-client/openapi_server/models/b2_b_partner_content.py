# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.business_identity import BusinessIdentity
from openapi_server import util


class B2BPartnerContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_identities: List[BusinessIdentity]=None):
        """B2BPartnerContent - a model defined in OpenAPI

        :param business_identities: The business_identities of this B2BPartnerContent.
        """
        self.openapi_types = {
            'business_identities': List[BusinessIdentity]
        }

        self.attribute_map = {
            'business_identities': 'businessIdentities'
        }

        self._business_identities = business_identities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'B2BPartnerContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The B2BPartnerContent of this B2BPartnerContent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_identities(self):
        """Gets the business_identities of this B2BPartnerContent.

        The list of partner business identities.

        :return: The business_identities of this B2BPartnerContent.
        :rtype: List[BusinessIdentity]
        """
        return self._business_identities

    @business_identities.setter
    def business_identities(self, business_identities):
        """Sets the business_identities of this B2BPartnerContent.

        The list of partner business identities.

        :param business_identities: The business_identities of this B2BPartnerContent.
        :type business_identities: List[BusinessIdentity]
        """

        self._business_identities = business_identities
