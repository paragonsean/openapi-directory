# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message_filter_type import MessageFilterType
from openapi_server import util


class EdifactMessageFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message_filter_type: MessageFilterType=None):
        """EdifactMessageFilter - a model defined in OpenAPI

        :param message_filter_type: The message_filter_type of this EdifactMessageFilter.
        """
        self.openapi_types = {
            'message_filter_type': MessageFilterType
        }

        self.attribute_map = {
            'message_filter_type': 'messageFilterType'
        }

        self._message_filter_type = message_filter_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EdifactMessageFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EdifactMessageFilter of this EdifactMessageFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message_filter_type(self):
        """Gets the message_filter_type of this EdifactMessageFilter.


        :return: The message_filter_type of this EdifactMessageFilter.
        :rtype: MessageFilterType
        """
        return self._message_filter_type

    @message_filter_type.setter
    def message_filter_type(self, message_filter_type):
        """Sets the message_filter_type of this EdifactMessageFilter.


        :param message_filter_type: The message_filter_type of this EdifactMessageFilter.
        :type message_filter_type: MessageFilterType
        """

        self._message_filter_type = message_filter_type
