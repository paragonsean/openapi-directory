# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AS2ErrorSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resend_if_mdn_not_received: bool=None, suspend_duplicate_message: bool=None):
        """AS2ErrorSettings - a model defined in OpenAPI

        :param resend_if_mdn_not_received: The resend_if_mdn_not_received of this AS2ErrorSettings.
        :param suspend_duplicate_message: The suspend_duplicate_message of this AS2ErrorSettings.
        """
        self.openapi_types = {
            'resend_if_mdn_not_received': bool,
            'suspend_duplicate_message': bool
        }

        self.attribute_map = {
            'resend_if_mdn_not_received': 'ResendIfMdnNotReceived',
            'suspend_duplicate_message': 'SuspendDuplicateMessage'
        }

        self._resend_if_mdn_not_received = resend_if_mdn_not_received
        self._suspend_duplicate_message = suspend_duplicate_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AS2ErrorSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AS2ErrorSettings of this AS2ErrorSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resend_if_mdn_not_received(self):
        """Gets the resend_if_mdn_not_received of this AS2ErrorSettings.

        The value indicating whether to resend message If MDN is not received.

        :return: The resend_if_mdn_not_received of this AS2ErrorSettings.
        :rtype: bool
        """
        return self._resend_if_mdn_not_received

    @resend_if_mdn_not_received.setter
    def resend_if_mdn_not_received(self, resend_if_mdn_not_received):
        """Sets the resend_if_mdn_not_received of this AS2ErrorSettings.

        The value indicating whether to resend message If MDN is not received.

        :param resend_if_mdn_not_received: The resend_if_mdn_not_received of this AS2ErrorSettings.
        :type resend_if_mdn_not_received: bool
        """

        self._resend_if_mdn_not_received = resend_if_mdn_not_received

    @property
    def suspend_duplicate_message(self):
        """Gets the suspend_duplicate_message of this AS2ErrorSettings.

        The value indicating whether to suspend duplicate message.

        :return: The suspend_duplicate_message of this AS2ErrorSettings.
        :rtype: bool
        """
        return self._suspend_duplicate_message

    @suspend_duplicate_message.setter
    def suspend_duplicate_message(self, suspend_duplicate_message):
        """Sets the suspend_duplicate_message of this AS2ErrorSettings.

        The value indicating whether to suspend duplicate message.

        :param suspend_duplicate_message: The suspend_duplicate_message of this AS2ErrorSettings.
        :type suspend_duplicate_message: bool
        """

        self._suspend_duplicate_message = suspend_duplicate_message
