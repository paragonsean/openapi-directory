# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EdifactEnvelopeSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_reference_id: str=None, apply_delimiter_string_advice: bool=None, communication_agreement_id: str=None, create_grouping_segments: bool=None, enable_default_group_headers: bool=None, functional_group_id: str=None, group_application_password: str=None, group_application_receiver_id: str=None, group_application_receiver_qualifier: str=None, group_application_sender_id: str=None, group_application_sender_qualifier: str=None, group_association_assigned_code: str=None, group_control_number_lower_bound: int=None, group_control_number_prefix: str=None, group_control_number_suffix: str=None, group_control_number_upper_bound: int=None, group_controlling_agency_code: str=None, group_message_release: str=None, group_message_version: str=None, interchange_control_number_lower_bound: int=None, interchange_control_number_prefix: str=None, interchange_control_number_suffix: str=None, interchange_control_number_upper_bound: int=None, is_test_interchange: bool=None, overwrite_existing_transaction_set_control_number: bool=None, processing_priority_code: str=None, receiver_internal_identification: str=None, receiver_internal_sub_identification: str=None, receiver_reverse_routing_address: str=None, recipient_reference_password_qualifier: str=None, recipient_reference_password_value: str=None, rollover_group_control_number: bool=None, rollover_interchange_control_number: bool=None, rollover_transaction_set_control_number: bool=None, sender_internal_identification: str=None, sender_internal_sub_identification: str=None, sender_reverse_routing_address: str=None, transaction_set_control_number_lower_bound: int=None, transaction_set_control_number_prefix: str=None, transaction_set_control_number_suffix: str=None, transaction_set_control_number_upper_bound: int=None):
        """EdifactEnvelopeSettings - a model defined in OpenAPI

        :param application_reference_id: The application_reference_id of this EdifactEnvelopeSettings.
        :param apply_delimiter_string_advice: The apply_delimiter_string_advice of this EdifactEnvelopeSettings.
        :param communication_agreement_id: The communication_agreement_id of this EdifactEnvelopeSettings.
        :param create_grouping_segments: The create_grouping_segments of this EdifactEnvelopeSettings.
        :param enable_default_group_headers: The enable_default_group_headers of this EdifactEnvelopeSettings.
        :param functional_group_id: The functional_group_id of this EdifactEnvelopeSettings.
        :param group_application_password: The group_application_password of this EdifactEnvelopeSettings.
        :param group_application_receiver_id: The group_application_receiver_id of this EdifactEnvelopeSettings.
        :param group_application_receiver_qualifier: The group_application_receiver_qualifier of this EdifactEnvelopeSettings.
        :param group_application_sender_id: The group_application_sender_id of this EdifactEnvelopeSettings.
        :param group_application_sender_qualifier: The group_application_sender_qualifier of this EdifactEnvelopeSettings.
        :param group_association_assigned_code: The group_association_assigned_code of this EdifactEnvelopeSettings.
        :param group_control_number_lower_bound: The group_control_number_lower_bound of this EdifactEnvelopeSettings.
        :param group_control_number_prefix: The group_control_number_prefix of this EdifactEnvelopeSettings.
        :param group_control_number_suffix: The group_control_number_suffix of this EdifactEnvelopeSettings.
        :param group_control_number_upper_bound: The group_control_number_upper_bound of this EdifactEnvelopeSettings.
        :param group_controlling_agency_code: The group_controlling_agency_code of this EdifactEnvelopeSettings.
        :param group_message_release: The group_message_release of this EdifactEnvelopeSettings.
        :param group_message_version: The group_message_version of this EdifactEnvelopeSettings.
        :param interchange_control_number_lower_bound: The interchange_control_number_lower_bound of this EdifactEnvelopeSettings.
        :param interchange_control_number_prefix: The interchange_control_number_prefix of this EdifactEnvelopeSettings.
        :param interchange_control_number_suffix: The interchange_control_number_suffix of this EdifactEnvelopeSettings.
        :param interchange_control_number_upper_bound: The interchange_control_number_upper_bound of this EdifactEnvelopeSettings.
        :param is_test_interchange: The is_test_interchange of this EdifactEnvelopeSettings.
        :param overwrite_existing_transaction_set_control_number: The overwrite_existing_transaction_set_control_number of this EdifactEnvelopeSettings.
        :param processing_priority_code: The processing_priority_code of this EdifactEnvelopeSettings.
        :param receiver_internal_identification: The receiver_internal_identification of this EdifactEnvelopeSettings.
        :param receiver_internal_sub_identification: The receiver_internal_sub_identification of this EdifactEnvelopeSettings.
        :param receiver_reverse_routing_address: The receiver_reverse_routing_address of this EdifactEnvelopeSettings.
        :param recipient_reference_password_qualifier: The recipient_reference_password_qualifier of this EdifactEnvelopeSettings.
        :param recipient_reference_password_value: The recipient_reference_password_value of this EdifactEnvelopeSettings.
        :param rollover_group_control_number: The rollover_group_control_number of this EdifactEnvelopeSettings.
        :param rollover_interchange_control_number: The rollover_interchange_control_number of this EdifactEnvelopeSettings.
        :param rollover_transaction_set_control_number: The rollover_transaction_set_control_number of this EdifactEnvelopeSettings.
        :param sender_internal_identification: The sender_internal_identification of this EdifactEnvelopeSettings.
        :param sender_internal_sub_identification: The sender_internal_sub_identification of this EdifactEnvelopeSettings.
        :param sender_reverse_routing_address: The sender_reverse_routing_address of this EdifactEnvelopeSettings.
        :param transaction_set_control_number_lower_bound: The transaction_set_control_number_lower_bound of this EdifactEnvelopeSettings.
        :param transaction_set_control_number_prefix: The transaction_set_control_number_prefix of this EdifactEnvelopeSettings.
        :param transaction_set_control_number_suffix: The transaction_set_control_number_suffix of this EdifactEnvelopeSettings.
        :param transaction_set_control_number_upper_bound: The transaction_set_control_number_upper_bound of this EdifactEnvelopeSettings.
        """
        self.openapi_types = {
            'application_reference_id': str,
            'apply_delimiter_string_advice': bool,
            'communication_agreement_id': str,
            'create_grouping_segments': bool,
            'enable_default_group_headers': bool,
            'functional_group_id': str,
            'group_application_password': str,
            'group_application_receiver_id': str,
            'group_application_receiver_qualifier': str,
            'group_application_sender_id': str,
            'group_application_sender_qualifier': str,
            'group_association_assigned_code': str,
            'group_control_number_lower_bound': int,
            'group_control_number_prefix': str,
            'group_control_number_suffix': str,
            'group_control_number_upper_bound': int,
            'group_controlling_agency_code': str,
            'group_message_release': str,
            'group_message_version': str,
            'interchange_control_number_lower_bound': int,
            'interchange_control_number_prefix': str,
            'interchange_control_number_suffix': str,
            'interchange_control_number_upper_bound': int,
            'is_test_interchange': bool,
            'overwrite_existing_transaction_set_control_number': bool,
            'processing_priority_code': str,
            'receiver_internal_identification': str,
            'receiver_internal_sub_identification': str,
            'receiver_reverse_routing_address': str,
            'recipient_reference_password_qualifier': str,
            'recipient_reference_password_value': str,
            'rollover_group_control_number': bool,
            'rollover_interchange_control_number': bool,
            'rollover_transaction_set_control_number': bool,
            'sender_internal_identification': str,
            'sender_internal_sub_identification': str,
            'sender_reverse_routing_address': str,
            'transaction_set_control_number_lower_bound': int,
            'transaction_set_control_number_prefix': str,
            'transaction_set_control_number_suffix': str,
            'transaction_set_control_number_upper_bound': int
        }

        self.attribute_map = {
            'application_reference_id': 'applicationReferenceId',
            'apply_delimiter_string_advice': 'applyDelimiterStringAdvice',
            'communication_agreement_id': 'communicationAgreementId',
            'create_grouping_segments': 'createGroupingSegments',
            'enable_default_group_headers': 'enableDefaultGroupHeaders',
            'functional_group_id': 'functionalGroupId',
            'group_application_password': 'groupApplicationPassword',
            'group_application_receiver_id': 'groupApplicationReceiverId',
            'group_application_receiver_qualifier': 'groupApplicationReceiverQualifier',
            'group_application_sender_id': 'groupApplicationSenderId',
            'group_application_sender_qualifier': 'groupApplicationSenderQualifier',
            'group_association_assigned_code': 'groupAssociationAssignedCode',
            'group_control_number_lower_bound': 'groupControlNumberLowerBound',
            'group_control_number_prefix': 'groupControlNumberPrefix',
            'group_control_number_suffix': 'groupControlNumberSuffix',
            'group_control_number_upper_bound': 'groupControlNumberUpperBound',
            'group_controlling_agency_code': 'groupControllingAgencyCode',
            'group_message_release': 'groupMessageRelease',
            'group_message_version': 'groupMessageVersion',
            'interchange_control_number_lower_bound': 'interchangeControlNumberLowerBound',
            'interchange_control_number_prefix': 'interchangeControlNumberPrefix',
            'interchange_control_number_suffix': 'interchangeControlNumberSuffix',
            'interchange_control_number_upper_bound': 'interchangeControlNumberUpperBound',
            'is_test_interchange': 'isTestInterchange',
            'overwrite_existing_transaction_set_control_number': 'overwriteExistingTransactionSetControlNumber',
            'processing_priority_code': 'processingPriorityCode',
            'receiver_internal_identification': 'receiverInternalIdentification',
            'receiver_internal_sub_identification': 'receiverInternalSubIdentification',
            'receiver_reverse_routing_address': 'receiverReverseRoutingAddress',
            'recipient_reference_password_qualifier': 'recipientReferencePasswordQualifier',
            'recipient_reference_password_value': 'recipientReferencePasswordValue',
            'rollover_group_control_number': 'rolloverGroupControlNumber',
            'rollover_interchange_control_number': 'rolloverInterchangeControlNumber',
            'rollover_transaction_set_control_number': 'rolloverTransactionSetControlNumber',
            'sender_internal_identification': 'senderInternalIdentification',
            'sender_internal_sub_identification': 'senderInternalSubIdentification',
            'sender_reverse_routing_address': 'senderReverseRoutingAddress',
            'transaction_set_control_number_lower_bound': 'transactionSetControlNumberLowerBound',
            'transaction_set_control_number_prefix': 'transactionSetControlNumberPrefix',
            'transaction_set_control_number_suffix': 'transactionSetControlNumberSuffix',
            'transaction_set_control_number_upper_bound': 'transactionSetControlNumberUpperBound'
        }

        self._application_reference_id = application_reference_id
        self._apply_delimiter_string_advice = apply_delimiter_string_advice
        self._communication_agreement_id = communication_agreement_id
        self._create_grouping_segments = create_grouping_segments
        self._enable_default_group_headers = enable_default_group_headers
        self._functional_group_id = functional_group_id
        self._group_application_password = group_application_password
        self._group_application_receiver_id = group_application_receiver_id
        self._group_application_receiver_qualifier = group_application_receiver_qualifier
        self._group_application_sender_id = group_application_sender_id
        self._group_application_sender_qualifier = group_application_sender_qualifier
        self._group_association_assigned_code = group_association_assigned_code
        self._group_control_number_lower_bound = group_control_number_lower_bound
        self._group_control_number_prefix = group_control_number_prefix
        self._group_control_number_suffix = group_control_number_suffix
        self._group_control_number_upper_bound = group_control_number_upper_bound
        self._group_controlling_agency_code = group_controlling_agency_code
        self._group_message_release = group_message_release
        self._group_message_version = group_message_version
        self._interchange_control_number_lower_bound = interchange_control_number_lower_bound
        self._interchange_control_number_prefix = interchange_control_number_prefix
        self._interchange_control_number_suffix = interchange_control_number_suffix
        self._interchange_control_number_upper_bound = interchange_control_number_upper_bound
        self._is_test_interchange = is_test_interchange
        self._overwrite_existing_transaction_set_control_number = overwrite_existing_transaction_set_control_number
        self._processing_priority_code = processing_priority_code
        self._receiver_internal_identification = receiver_internal_identification
        self._receiver_internal_sub_identification = receiver_internal_sub_identification
        self._receiver_reverse_routing_address = receiver_reverse_routing_address
        self._recipient_reference_password_qualifier = recipient_reference_password_qualifier
        self._recipient_reference_password_value = recipient_reference_password_value
        self._rollover_group_control_number = rollover_group_control_number
        self._rollover_interchange_control_number = rollover_interchange_control_number
        self._rollover_transaction_set_control_number = rollover_transaction_set_control_number
        self._sender_internal_identification = sender_internal_identification
        self._sender_internal_sub_identification = sender_internal_sub_identification
        self._sender_reverse_routing_address = sender_reverse_routing_address
        self._transaction_set_control_number_lower_bound = transaction_set_control_number_lower_bound
        self._transaction_set_control_number_prefix = transaction_set_control_number_prefix
        self._transaction_set_control_number_suffix = transaction_set_control_number_suffix
        self._transaction_set_control_number_upper_bound = transaction_set_control_number_upper_bound

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EdifactEnvelopeSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EdifactEnvelopeSettings of this EdifactEnvelopeSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_reference_id(self):
        """Gets the application_reference_id of this EdifactEnvelopeSettings.

        The application reference id.

        :return: The application_reference_id of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._application_reference_id

    @application_reference_id.setter
    def application_reference_id(self, application_reference_id):
        """Sets the application_reference_id of this EdifactEnvelopeSettings.

        The application reference id.

        :param application_reference_id: The application_reference_id of this EdifactEnvelopeSettings.
        :type application_reference_id: str
        """

        self._application_reference_id = application_reference_id

    @property
    def apply_delimiter_string_advice(self):
        """Gets the apply_delimiter_string_advice of this EdifactEnvelopeSettings.

        The value indicating whether to apply delimiter string advice.

        :return: The apply_delimiter_string_advice of this EdifactEnvelopeSettings.
        :rtype: bool
        """
        return self._apply_delimiter_string_advice

    @apply_delimiter_string_advice.setter
    def apply_delimiter_string_advice(self, apply_delimiter_string_advice):
        """Sets the apply_delimiter_string_advice of this EdifactEnvelopeSettings.

        The value indicating whether to apply delimiter string advice.

        :param apply_delimiter_string_advice: The apply_delimiter_string_advice of this EdifactEnvelopeSettings.
        :type apply_delimiter_string_advice: bool
        """

        self._apply_delimiter_string_advice = apply_delimiter_string_advice

    @property
    def communication_agreement_id(self):
        """Gets the communication_agreement_id of this EdifactEnvelopeSettings.

        The communication agreement id.

        :return: The communication_agreement_id of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._communication_agreement_id

    @communication_agreement_id.setter
    def communication_agreement_id(self, communication_agreement_id):
        """Sets the communication_agreement_id of this EdifactEnvelopeSettings.

        The communication agreement id.

        :param communication_agreement_id: The communication_agreement_id of this EdifactEnvelopeSettings.
        :type communication_agreement_id: str
        """

        self._communication_agreement_id = communication_agreement_id

    @property
    def create_grouping_segments(self):
        """Gets the create_grouping_segments of this EdifactEnvelopeSettings.

        The value indicating whether to create grouping segments.

        :return: The create_grouping_segments of this EdifactEnvelopeSettings.
        :rtype: bool
        """
        return self._create_grouping_segments

    @create_grouping_segments.setter
    def create_grouping_segments(self, create_grouping_segments):
        """Sets the create_grouping_segments of this EdifactEnvelopeSettings.

        The value indicating whether to create grouping segments.

        :param create_grouping_segments: The create_grouping_segments of this EdifactEnvelopeSettings.
        :type create_grouping_segments: bool
        """

        self._create_grouping_segments = create_grouping_segments

    @property
    def enable_default_group_headers(self):
        """Gets the enable_default_group_headers of this EdifactEnvelopeSettings.

        The value indicating whether to enable default group headers.

        :return: The enable_default_group_headers of this EdifactEnvelopeSettings.
        :rtype: bool
        """
        return self._enable_default_group_headers

    @enable_default_group_headers.setter
    def enable_default_group_headers(self, enable_default_group_headers):
        """Sets the enable_default_group_headers of this EdifactEnvelopeSettings.

        The value indicating whether to enable default group headers.

        :param enable_default_group_headers: The enable_default_group_headers of this EdifactEnvelopeSettings.
        :type enable_default_group_headers: bool
        """

        self._enable_default_group_headers = enable_default_group_headers

    @property
    def functional_group_id(self):
        """Gets the functional_group_id of this EdifactEnvelopeSettings.

        The functional group id.

        :return: The functional_group_id of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._functional_group_id

    @functional_group_id.setter
    def functional_group_id(self, functional_group_id):
        """Sets the functional_group_id of this EdifactEnvelopeSettings.

        The functional group id.

        :param functional_group_id: The functional_group_id of this EdifactEnvelopeSettings.
        :type functional_group_id: str
        """

        self._functional_group_id = functional_group_id

    @property
    def group_application_password(self):
        """Gets the group_application_password of this EdifactEnvelopeSettings.

        The group application password.

        :return: The group_application_password of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._group_application_password

    @group_application_password.setter
    def group_application_password(self, group_application_password):
        """Sets the group_application_password of this EdifactEnvelopeSettings.

        The group application password.

        :param group_application_password: The group_application_password of this EdifactEnvelopeSettings.
        :type group_application_password: str
        """

        self._group_application_password = group_application_password

    @property
    def group_application_receiver_id(self):
        """Gets the group_application_receiver_id of this EdifactEnvelopeSettings.

        The group application receiver id.

        :return: The group_application_receiver_id of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._group_application_receiver_id

    @group_application_receiver_id.setter
    def group_application_receiver_id(self, group_application_receiver_id):
        """Sets the group_application_receiver_id of this EdifactEnvelopeSettings.

        The group application receiver id.

        :param group_application_receiver_id: The group_application_receiver_id of this EdifactEnvelopeSettings.
        :type group_application_receiver_id: str
        """

        self._group_application_receiver_id = group_application_receiver_id

    @property
    def group_application_receiver_qualifier(self):
        """Gets the group_application_receiver_qualifier of this EdifactEnvelopeSettings.

        The group application receiver qualifier.

        :return: The group_application_receiver_qualifier of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._group_application_receiver_qualifier

    @group_application_receiver_qualifier.setter
    def group_application_receiver_qualifier(self, group_application_receiver_qualifier):
        """Sets the group_application_receiver_qualifier of this EdifactEnvelopeSettings.

        The group application receiver qualifier.

        :param group_application_receiver_qualifier: The group_application_receiver_qualifier of this EdifactEnvelopeSettings.
        :type group_application_receiver_qualifier: str
        """

        self._group_application_receiver_qualifier = group_application_receiver_qualifier

    @property
    def group_application_sender_id(self):
        """Gets the group_application_sender_id of this EdifactEnvelopeSettings.

        The group application sender id.

        :return: The group_application_sender_id of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._group_application_sender_id

    @group_application_sender_id.setter
    def group_application_sender_id(self, group_application_sender_id):
        """Sets the group_application_sender_id of this EdifactEnvelopeSettings.

        The group application sender id.

        :param group_application_sender_id: The group_application_sender_id of this EdifactEnvelopeSettings.
        :type group_application_sender_id: str
        """

        self._group_application_sender_id = group_application_sender_id

    @property
    def group_application_sender_qualifier(self):
        """Gets the group_application_sender_qualifier of this EdifactEnvelopeSettings.

        The group application sender qualifier.

        :return: The group_application_sender_qualifier of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._group_application_sender_qualifier

    @group_application_sender_qualifier.setter
    def group_application_sender_qualifier(self, group_application_sender_qualifier):
        """Sets the group_application_sender_qualifier of this EdifactEnvelopeSettings.

        The group application sender qualifier.

        :param group_application_sender_qualifier: The group_application_sender_qualifier of this EdifactEnvelopeSettings.
        :type group_application_sender_qualifier: str
        """

        self._group_application_sender_qualifier = group_application_sender_qualifier

    @property
    def group_association_assigned_code(self):
        """Gets the group_association_assigned_code of this EdifactEnvelopeSettings.

        The group association assigned code.

        :return: The group_association_assigned_code of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._group_association_assigned_code

    @group_association_assigned_code.setter
    def group_association_assigned_code(self, group_association_assigned_code):
        """Sets the group_association_assigned_code of this EdifactEnvelopeSettings.

        The group association assigned code.

        :param group_association_assigned_code: The group_association_assigned_code of this EdifactEnvelopeSettings.
        :type group_association_assigned_code: str
        """

        self._group_association_assigned_code = group_association_assigned_code

    @property
    def group_control_number_lower_bound(self):
        """Gets the group_control_number_lower_bound of this EdifactEnvelopeSettings.

        The group control number lower bound.

        :return: The group_control_number_lower_bound of this EdifactEnvelopeSettings.
        :rtype: int
        """
        return self._group_control_number_lower_bound

    @group_control_number_lower_bound.setter
    def group_control_number_lower_bound(self, group_control_number_lower_bound):
        """Sets the group_control_number_lower_bound of this EdifactEnvelopeSettings.

        The group control number lower bound.

        :param group_control_number_lower_bound: The group_control_number_lower_bound of this EdifactEnvelopeSettings.
        :type group_control_number_lower_bound: int
        """

        self._group_control_number_lower_bound = group_control_number_lower_bound

    @property
    def group_control_number_prefix(self):
        """Gets the group_control_number_prefix of this EdifactEnvelopeSettings.

        The group control number prefix.

        :return: The group_control_number_prefix of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._group_control_number_prefix

    @group_control_number_prefix.setter
    def group_control_number_prefix(self, group_control_number_prefix):
        """Sets the group_control_number_prefix of this EdifactEnvelopeSettings.

        The group control number prefix.

        :param group_control_number_prefix: The group_control_number_prefix of this EdifactEnvelopeSettings.
        :type group_control_number_prefix: str
        """

        self._group_control_number_prefix = group_control_number_prefix

    @property
    def group_control_number_suffix(self):
        """Gets the group_control_number_suffix of this EdifactEnvelopeSettings.

        The group control number suffix.

        :return: The group_control_number_suffix of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._group_control_number_suffix

    @group_control_number_suffix.setter
    def group_control_number_suffix(self, group_control_number_suffix):
        """Sets the group_control_number_suffix of this EdifactEnvelopeSettings.

        The group control number suffix.

        :param group_control_number_suffix: The group_control_number_suffix of this EdifactEnvelopeSettings.
        :type group_control_number_suffix: str
        """

        self._group_control_number_suffix = group_control_number_suffix

    @property
    def group_control_number_upper_bound(self):
        """Gets the group_control_number_upper_bound of this EdifactEnvelopeSettings.

        The group control number upper bound.

        :return: The group_control_number_upper_bound of this EdifactEnvelopeSettings.
        :rtype: int
        """
        return self._group_control_number_upper_bound

    @group_control_number_upper_bound.setter
    def group_control_number_upper_bound(self, group_control_number_upper_bound):
        """Sets the group_control_number_upper_bound of this EdifactEnvelopeSettings.

        The group control number upper bound.

        :param group_control_number_upper_bound: The group_control_number_upper_bound of this EdifactEnvelopeSettings.
        :type group_control_number_upper_bound: int
        """

        self._group_control_number_upper_bound = group_control_number_upper_bound

    @property
    def group_controlling_agency_code(self):
        """Gets the group_controlling_agency_code of this EdifactEnvelopeSettings.

        The group controlling agency code.

        :return: The group_controlling_agency_code of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._group_controlling_agency_code

    @group_controlling_agency_code.setter
    def group_controlling_agency_code(self, group_controlling_agency_code):
        """Sets the group_controlling_agency_code of this EdifactEnvelopeSettings.

        The group controlling agency code.

        :param group_controlling_agency_code: The group_controlling_agency_code of this EdifactEnvelopeSettings.
        :type group_controlling_agency_code: str
        """

        self._group_controlling_agency_code = group_controlling_agency_code

    @property
    def group_message_release(self):
        """Gets the group_message_release of this EdifactEnvelopeSettings.

        The group message release.

        :return: The group_message_release of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._group_message_release

    @group_message_release.setter
    def group_message_release(self, group_message_release):
        """Sets the group_message_release of this EdifactEnvelopeSettings.

        The group message release.

        :param group_message_release: The group_message_release of this EdifactEnvelopeSettings.
        :type group_message_release: str
        """

        self._group_message_release = group_message_release

    @property
    def group_message_version(self):
        """Gets the group_message_version of this EdifactEnvelopeSettings.

        The group message version.

        :return: The group_message_version of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._group_message_version

    @group_message_version.setter
    def group_message_version(self, group_message_version):
        """Sets the group_message_version of this EdifactEnvelopeSettings.

        The group message version.

        :param group_message_version: The group_message_version of this EdifactEnvelopeSettings.
        :type group_message_version: str
        """

        self._group_message_version = group_message_version

    @property
    def interchange_control_number_lower_bound(self):
        """Gets the interchange_control_number_lower_bound of this EdifactEnvelopeSettings.

        The interchange control number lower bound.

        :return: The interchange_control_number_lower_bound of this EdifactEnvelopeSettings.
        :rtype: int
        """
        return self._interchange_control_number_lower_bound

    @interchange_control_number_lower_bound.setter
    def interchange_control_number_lower_bound(self, interchange_control_number_lower_bound):
        """Sets the interchange_control_number_lower_bound of this EdifactEnvelopeSettings.

        The interchange control number lower bound.

        :param interchange_control_number_lower_bound: The interchange_control_number_lower_bound of this EdifactEnvelopeSettings.
        :type interchange_control_number_lower_bound: int
        """

        self._interchange_control_number_lower_bound = interchange_control_number_lower_bound

    @property
    def interchange_control_number_prefix(self):
        """Gets the interchange_control_number_prefix of this EdifactEnvelopeSettings.

        The interchange control number prefix.

        :return: The interchange_control_number_prefix of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._interchange_control_number_prefix

    @interchange_control_number_prefix.setter
    def interchange_control_number_prefix(self, interchange_control_number_prefix):
        """Sets the interchange_control_number_prefix of this EdifactEnvelopeSettings.

        The interchange control number prefix.

        :param interchange_control_number_prefix: The interchange_control_number_prefix of this EdifactEnvelopeSettings.
        :type interchange_control_number_prefix: str
        """

        self._interchange_control_number_prefix = interchange_control_number_prefix

    @property
    def interchange_control_number_suffix(self):
        """Gets the interchange_control_number_suffix of this EdifactEnvelopeSettings.

        The interchange control number suffix.

        :return: The interchange_control_number_suffix of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._interchange_control_number_suffix

    @interchange_control_number_suffix.setter
    def interchange_control_number_suffix(self, interchange_control_number_suffix):
        """Sets the interchange_control_number_suffix of this EdifactEnvelopeSettings.

        The interchange control number suffix.

        :param interchange_control_number_suffix: The interchange_control_number_suffix of this EdifactEnvelopeSettings.
        :type interchange_control_number_suffix: str
        """

        self._interchange_control_number_suffix = interchange_control_number_suffix

    @property
    def interchange_control_number_upper_bound(self):
        """Gets the interchange_control_number_upper_bound of this EdifactEnvelopeSettings.

        The interchange control number upper bound.

        :return: The interchange_control_number_upper_bound of this EdifactEnvelopeSettings.
        :rtype: int
        """
        return self._interchange_control_number_upper_bound

    @interchange_control_number_upper_bound.setter
    def interchange_control_number_upper_bound(self, interchange_control_number_upper_bound):
        """Sets the interchange_control_number_upper_bound of this EdifactEnvelopeSettings.

        The interchange control number upper bound.

        :param interchange_control_number_upper_bound: The interchange_control_number_upper_bound of this EdifactEnvelopeSettings.
        :type interchange_control_number_upper_bound: int
        """

        self._interchange_control_number_upper_bound = interchange_control_number_upper_bound

    @property
    def is_test_interchange(self):
        """Gets the is_test_interchange of this EdifactEnvelopeSettings.

        The value indicating whether the message is a test interchange.

        :return: The is_test_interchange of this EdifactEnvelopeSettings.
        :rtype: bool
        """
        return self._is_test_interchange

    @is_test_interchange.setter
    def is_test_interchange(self, is_test_interchange):
        """Sets the is_test_interchange of this EdifactEnvelopeSettings.

        The value indicating whether the message is a test interchange.

        :param is_test_interchange: The is_test_interchange of this EdifactEnvelopeSettings.
        :type is_test_interchange: bool
        """

        self._is_test_interchange = is_test_interchange

    @property
    def overwrite_existing_transaction_set_control_number(self):
        """Gets the overwrite_existing_transaction_set_control_number of this EdifactEnvelopeSettings.

        The value indicating whether to overwrite existing transaction set control number.

        :return: The overwrite_existing_transaction_set_control_number of this EdifactEnvelopeSettings.
        :rtype: bool
        """
        return self._overwrite_existing_transaction_set_control_number

    @overwrite_existing_transaction_set_control_number.setter
    def overwrite_existing_transaction_set_control_number(self, overwrite_existing_transaction_set_control_number):
        """Sets the overwrite_existing_transaction_set_control_number of this EdifactEnvelopeSettings.

        The value indicating whether to overwrite existing transaction set control number.

        :param overwrite_existing_transaction_set_control_number: The overwrite_existing_transaction_set_control_number of this EdifactEnvelopeSettings.
        :type overwrite_existing_transaction_set_control_number: bool
        """

        self._overwrite_existing_transaction_set_control_number = overwrite_existing_transaction_set_control_number

    @property
    def processing_priority_code(self):
        """Gets the processing_priority_code of this EdifactEnvelopeSettings.

        The processing priority code.

        :return: The processing_priority_code of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._processing_priority_code

    @processing_priority_code.setter
    def processing_priority_code(self, processing_priority_code):
        """Sets the processing_priority_code of this EdifactEnvelopeSettings.

        The processing priority code.

        :param processing_priority_code: The processing_priority_code of this EdifactEnvelopeSettings.
        :type processing_priority_code: str
        """

        self._processing_priority_code = processing_priority_code

    @property
    def receiver_internal_identification(self):
        """Gets the receiver_internal_identification of this EdifactEnvelopeSettings.

        The receiver internal identification.

        :return: The receiver_internal_identification of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._receiver_internal_identification

    @receiver_internal_identification.setter
    def receiver_internal_identification(self, receiver_internal_identification):
        """Sets the receiver_internal_identification of this EdifactEnvelopeSettings.

        The receiver internal identification.

        :param receiver_internal_identification: The receiver_internal_identification of this EdifactEnvelopeSettings.
        :type receiver_internal_identification: str
        """

        self._receiver_internal_identification = receiver_internal_identification

    @property
    def receiver_internal_sub_identification(self):
        """Gets the receiver_internal_sub_identification of this EdifactEnvelopeSettings.

        The receiver internal sub identification.

        :return: The receiver_internal_sub_identification of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._receiver_internal_sub_identification

    @receiver_internal_sub_identification.setter
    def receiver_internal_sub_identification(self, receiver_internal_sub_identification):
        """Sets the receiver_internal_sub_identification of this EdifactEnvelopeSettings.

        The receiver internal sub identification.

        :param receiver_internal_sub_identification: The receiver_internal_sub_identification of this EdifactEnvelopeSettings.
        :type receiver_internal_sub_identification: str
        """

        self._receiver_internal_sub_identification = receiver_internal_sub_identification

    @property
    def receiver_reverse_routing_address(self):
        """Gets the receiver_reverse_routing_address of this EdifactEnvelopeSettings.

        The receiver reverse routing address.

        :return: The receiver_reverse_routing_address of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._receiver_reverse_routing_address

    @receiver_reverse_routing_address.setter
    def receiver_reverse_routing_address(self, receiver_reverse_routing_address):
        """Sets the receiver_reverse_routing_address of this EdifactEnvelopeSettings.

        The receiver reverse routing address.

        :param receiver_reverse_routing_address: The receiver_reverse_routing_address of this EdifactEnvelopeSettings.
        :type receiver_reverse_routing_address: str
        """

        self._receiver_reverse_routing_address = receiver_reverse_routing_address

    @property
    def recipient_reference_password_qualifier(self):
        """Gets the recipient_reference_password_qualifier of this EdifactEnvelopeSettings.

        The recipient reference password qualifier.

        :return: The recipient_reference_password_qualifier of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._recipient_reference_password_qualifier

    @recipient_reference_password_qualifier.setter
    def recipient_reference_password_qualifier(self, recipient_reference_password_qualifier):
        """Sets the recipient_reference_password_qualifier of this EdifactEnvelopeSettings.

        The recipient reference password qualifier.

        :param recipient_reference_password_qualifier: The recipient_reference_password_qualifier of this EdifactEnvelopeSettings.
        :type recipient_reference_password_qualifier: str
        """

        self._recipient_reference_password_qualifier = recipient_reference_password_qualifier

    @property
    def recipient_reference_password_value(self):
        """Gets the recipient_reference_password_value of this EdifactEnvelopeSettings.

        The recipient reference password value.

        :return: The recipient_reference_password_value of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._recipient_reference_password_value

    @recipient_reference_password_value.setter
    def recipient_reference_password_value(self, recipient_reference_password_value):
        """Sets the recipient_reference_password_value of this EdifactEnvelopeSettings.

        The recipient reference password value.

        :param recipient_reference_password_value: The recipient_reference_password_value of this EdifactEnvelopeSettings.
        :type recipient_reference_password_value: str
        """

        self._recipient_reference_password_value = recipient_reference_password_value

    @property
    def rollover_group_control_number(self):
        """Gets the rollover_group_control_number of this EdifactEnvelopeSettings.

        The value indicating whether to rollover group control number.

        :return: The rollover_group_control_number of this EdifactEnvelopeSettings.
        :rtype: bool
        """
        return self._rollover_group_control_number

    @rollover_group_control_number.setter
    def rollover_group_control_number(self, rollover_group_control_number):
        """Sets the rollover_group_control_number of this EdifactEnvelopeSettings.

        The value indicating whether to rollover group control number.

        :param rollover_group_control_number: The rollover_group_control_number of this EdifactEnvelopeSettings.
        :type rollover_group_control_number: bool
        """

        self._rollover_group_control_number = rollover_group_control_number

    @property
    def rollover_interchange_control_number(self):
        """Gets the rollover_interchange_control_number of this EdifactEnvelopeSettings.

        The value indicating whether to rollover interchange control number.

        :return: The rollover_interchange_control_number of this EdifactEnvelopeSettings.
        :rtype: bool
        """
        return self._rollover_interchange_control_number

    @rollover_interchange_control_number.setter
    def rollover_interchange_control_number(self, rollover_interchange_control_number):
        """Sets the rollover_interchange_control_number of this EdifactEnvelopeSettings.

        The value indicating whether to rollover interchange control number.

        :param rollover_interchange_control_number: The rollover_interchange_control_number of this EdifactEnvelopeSettings.
        :type rollover_interchange_control_number: bool
        """

        self._rollover_interchange_control_number = rollover_interchange_control_number

    @property
    def rollover_transaction_set_control_number(self):
        """Gets the rollover_transaction_set_control_number of this EdifactEnvelopeSettings.

        The value indicating whether to rollover transaction set control number.

        :return: The rollover_transaction_set_control_number of this EdifactEnvelopeSettings.
        :rtype: bool
        """
        return self._rollover_transaction_set_control_number

    @rollover_transaction_set_control_number.setter
    def rollover_transaction_set_control_number(self, rollover_transaction_set_control_number):
        """Sets the rollover_transaction_set_control_number of this EdifactEnvelopeSettings.

        The value indicating whether to rollover transaction set control number.

        :param rollover_transaction_set_control_number: The rollover_transaction_set_control_number of this EdifactEnvelopeSettings.
        :type rollover_transaction_set_control_number: bool
        """

        self._rollover_transaction_set_control_number = rollover_transaction_set_control_number

    @property
    def sender_internal_identification(self):
        """Gets the sender_internal_identification of this EdifactEnvelopeSettings.

        The sender internal identification.

        :return: The sender_internal_identification of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._sender_internal_identification

    @sender_internal_identification.setter
    def sender_internal_identification(self, sender_internal_identification):
        """Sets the sender_internal_identification of this EdifactEnvelopeSettings.

        The sender internal identification.

        :param sender_internal_identification: The sender_internal_identification of this EdifactEnvelopeSettings.
        :type sender_internal_identification: str
        """

        self._sender_internal_identification = sender_internal_identification

    @property
    def sender_internal_sub_identification(self):
        """Gets the sender_internal_sub_identification of this EdifactEnvelopeSettings.

        The sender internal sub identification.

        :return: The sender_internal_sub_identification of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._sender_internal_sub_identification

    @sender_internal_sub_identification.setter
    def sender_internal_sub_identification(self, sender_internal_sub_identification):
        """Sets the sender_internal_sub_identification of this EdifactEnvelopeSettings.

        The sender internal sub identification.

        :param sender_internal_sub_identification: The sender_internal_sub_identification of this EdifactEnvelopeSettings.
        :type sender_internal_sub_identification: str
        """

        self._sender_internal_sub_identification = sender_internal_sub_identification

    @property
    def sender_reverse_routing_address(self):
        """Gets the sender_reverse_routing_address of this EdifactEnvelopeSettings.

        The sender reverse routing address.

        :return: The sender_reverse_routing_address of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._sender_reverse_routing_address

    @sender_reverse_routing_address.setter
    def sender_reverse_routing_address(self, sender_reverse_routing_address):
        """Sets the sender_reverse_routing_address of this EdifactEnvelopeSettings.

        The sender reverse routing address.

        :param sender_reverse_routing_address: The sender_reverse_routing_address of this EdifactEnvelopeSettings.
        :type sender_reverse_routing_address: str
        """

        self._sender_reverse_routing_address = sender_reverse_routing_address

    @property
    def transaction_set_control_number_lower_bound(self):
        """Gets the transaction_set_control_number_lower_bound of this EdifactEnvelopeSettings.

        The transaction set control number lower bound.

        :return: The transaction_set_control_number_lower_bound of this EdifactEnvelopeSettings.
        :rtype: int
        """
        return self._transaction_set_control_number_lower_bound

    @transaction_set_control_number_lower_bound.setter
    def transaction_set_control_number_lower_bound(self, transaction_set_control_number_lower_bound):
        """Sets the transaction_set_control_number_lower_bound of this EdifactEnvelopeSettings.

        The transaction set control number lower bound.

        :param transaction_set_control_number_lower_bound: The transaction_set_control_number_lower_bound of this EdifactEnvelopeSettings.
        :type transaction_set_control_number_lower_bound: int
        """

        self._transaction_set_control_number_lower_bound = transaction_set_control_number_lower_bound

    @property
    def transaction_set_control_number_prefix(self):
        """Gets the transaction_set_control_number_prefix of this EdifactEnvelopeSettings.

        The transaction set control number prefix.

        :return: The transaction_set_control_number_prefix of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._transaction_set_control_number_prefix

    @transaction_set_control_number_prefix.setter
    def transaction_set_control_number_prefix(self, transaction_set_control_number_prefix):
        """Sets the transaction_set_control_number_prefix of this EdifactEnvelopeSettings.

        The transaction set control number prefix.

        :param transaction_set_control_number_prefix: The transaction_set_control_number_prefix of this EdifactEnvelopeSettings.
        :type transaction_set_control_number_prefix: str
        """

        self._transaction_set_control_number_prefix = transaction_set_control_number_prefix

    @property
    def transaction_set_control_number_suffix(self):
        """Gets the transaction_set_control_number_suffix of this EdifactEnvelopeSettings.

        The transaction set control number suffix.

        :return: The transaction_set_control_number_suffix of this EdifactEnvelopeSettings.
        :rtype: str
        """
        return self._transaction_set_control_number_suffix

    @transaction_set_control_number_suffix.setter
    def transaction_set_control_number_suffix(self, transaction_set_control_number_suffix):
        """Sets the transaction_set_control_number_suffix of this EdifactEnvelopeSettings.

        The transaction set control number suffix.

        :param transaction_set_control_number_suffix: The transaction_set_control_number_suffix of this EdifactEnvelopeSettings.
        :type transaction_set_control_number_suffix: str
        """

        self._transaction_set_control_number_suffix = transaction_set_control_number_suffix

    @property
    def transaction_set_control_number_upper_bound(self):
        """Gets the transaction_set_control_number_upper_bound of this EdifactEnvelopeSettings.

        The transaction set control number upper bound.

        :return: The transaction_set_control_number_upper_bound of this EdifactEnvelopeSettings.
        :rtype: int
        """
        return self._transaction_set_control_number_upper_bound

    @transaction_set_control_number_upper_bound.setter
    def transaction_set_control_number_upper_bound(self, transaction_set_control_number_upper_bound):
        """Sets the transaction_set_control_number_upper_bound of this EdifactEnvelopeSettings.

        The transaction set control number upper bound.

        :param transaction_set_control_number_upper_bound: The transaction_set_control_number_upper_bound of this EdifactEnvelopeSettings.
        :type transaction_set_control_number_upper_bound: int
        """

        self._transaction_set_control_number_upper_bound = transaction_set_control_number_upper_bound
