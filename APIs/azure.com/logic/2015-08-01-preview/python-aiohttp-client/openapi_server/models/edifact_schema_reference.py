# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EdifactSchemaReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, association_assigned_code: str=None, message_id: str=None, message_release: str=None, message_version: str=None, schema_name: str=None, sender_application_id: str=None, sender_application_qualifier: str=None):
        """EdifactSchemaReference - a model defined in OpenAPI

        :param association_assigned_code: The association_assigned_code of this EdifactSchemaReference.
        :param message_id: The message_id of this EdifactSchemaReference.
        :param message_release: The message_release of this EdifactSchemaReference.
        :param message_version: The message_version of this EdifactSchemaReference.
        :param schema_name: The schema_name of this EdifactSchemaReference.
        :param sender_application_id: The sender_application_id of this EdifactSchemaReference.
        :param sender_application_qualifier: The sender_application_qualifier of this EdifactSchemaReference.
        """
        self.openapi_types = {
            'association_assigned_code': str,
            'message_id': str,
            'message_release': str,
            'message_version': str,
            'schema_name': str,
            'sender_application_id': str,
            'sender_application_qualifier': str
        }

        self.attribute_map = {
            'association_assigned_code': 'associationAssignedCode',
            'message_id': 'messageId',
            'message_release': 'messageRelease',
            'message_version': 'messageVersion',
            'schema_name': 'schemaName',
            'sender_application_id': 'senderApplicationId',
            'sender_application_qualifier': 'senderApplicationQualifier'
        }

        self._association_assigned_code = association_assigned_code
        self._message_id = message_id
        self._message_release = message_release
        self._message_version = message_version
        self._schema_name = schema_name
        self._sender_application_id = sender_application_id
        self._sender_application_qualifier = sender_application_qualifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EdifactSchemaReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EdifactSchemaReference of this EdifactSchemaReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def association_assigned_code(self):
        """Gets the association_assigned_code of this EdifactSchemaReference.

        The association assigned code.

        :return: The association_assigned_code of this EdifactSchemaReference.
        :rtype: str
        """
        return self._association_assigned_code

    @association_assigned_code.setter
    def association_assigned_code(self, association_assigned_code):
        """Sets the association_assigned_code of this EdifactSchemaReference.

        The association assigned code.

        :param association_assigned_code: The association_assigned_code of this EdifactSchemaReference.
        :type association_assigned_code: str
        """

        self._association_assigned_code = association_assigned_code

    @property
    def message_id(self):
        """Gets the message_id of this EdifactSchemaReference.

        The message id.

        :return: The message_id of this EdifactSchemaReference.
        :rtype: str
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this EdifactSchemaReference.

        The message id.

        :param message_id: The message_id of this EdifactSchemaReference.
        :type message_id: str
        """

        self._message_id = message_id

    @property
    def message_release(self):
        """Gets the message_release of this EdifactSchemaReference.

        The message release version.

        :return: The message_release of this EdifactSchemaReference.
        :rtype: str
        """
        return self._message_release

    @message_release.setter
    def message_release(self, message_release):
        """Sets the message_release of this EdifactSchemaReference.

        The message release version.

        :param message_release: The message_release of this EdifactSchemaReference.
        :type message_release: str
        """

        self._message_release = message_release

    @property
    def message_version(self):
        """Gets the message_version of this EdifactSchemaReference.

        The message version.

        :return: The message_version of this EdifactSchemaReference.
        :rtype: str
        """
        return self._message_version

    @message_version.setter
    def message_version(self, message_version):
        """Sets the message_version of this EdifactSchemaReference.

        The message version.

        :param message_version: The message_version of this EdifactSchemaReference.
        :type message_version: str
        """

        self._message_version = message_version

    @property
    def schema_name(self):
        """Gets the schema_name of this EdifactSchemaReference.

        The schema name.

        :return: The schema_name of this EdifactSchemaReference.
        :rtype: str
        """
        return self._schema_name

    @schema_name.setter
    def schema_name(self, schema_name):
        """Sets the schema_name of this EdifactSchemaReference.

        The schema name.

        :param schema_name: The schema_name of this EdifactSchemaReference.
        :type schema_name: str
        """

        self._schema_name = schema_name

    @property
    def sender_application_id(self):
        """Gets the sender_application_id of this EdifactSchemaReference.

        The sender application id.

        :return: The sender_application_id of this EdifactSchemaReference.
        :rtype: str
        """
        return self._sender_application_id

    @sender_application_id.setter
    def sender_application_id(self, sender_application_id):
        """Sets the sender_application_id of this EdifactSchemaReference.

        The sender application id.

        :param sender_application_id: The sender_application_id of this EdifactSchemaReference.
        :type sender_application_id: str
        """

        self._sender_application_id = sender_application_id

    @property
    def sender_application_qualifier(self):
        """Gets the sender_application_qualifier of this EdifactSchemaReference.

        The sender application qualifier.

        :return: The sender_application_qualifier of this EdifactSchemaReference.
        :rtype: str
        """
        return self._sender_application_qualifier

    @sender_application_qualifier.setter
    def sender_application_qualifier(self, sender_application_qualifier):
        """Sets the sender_application_qualifier of this EdifactSchemaReference.

        The sender application qualifier.

        :param sender_application_qualifier: The sender_application_qualifier of this EdifactSchemaReference.
        :type sender_application_qualifier: str
        """

        self._sender_application_qualifier = sender_application_qualifier
