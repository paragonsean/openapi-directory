# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.map_type import MapType
from openapi_server import util


class IntegrationAccountMapFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schema_type: MapType=None):
        """IntegrationAccountMapFilter - a model defined in OpenAPI

        :param schema_type: The schema_type of this IntegrationAccountMapFilter.
        """
        self.openapi_types = {
            'schema_type': MapType
        }

        self.attribute_map = {
            'schema_type': 'schemaType'
        }

        self._schema_type = schema_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationAccountMapFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationAccountMapFilter of this IntegrationAccountMapFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schema_type(self):
        """Gets the schema_type of this IntegrationAccountMapFilter.


        :return: The schema_type of this IntegrationAccountMapFilter.
        :rtype: MapType
        """
        return self._schema_type

    @schema_type.setter
    def schema_type(self, schema_type):
        """Sets the schema_type of this IntegrationAccountMapFilter.


        :param schema_type: The schema_type of this IntegrationAccountMapFilter.
        :type schema_type: MapType
        """

        self._schema_type = schema_type
