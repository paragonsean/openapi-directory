# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.partner_content import PartnerContent
from openapi_server.models.partner_type import PartnerType
from openapi_server import util


class IntegrationAccountPartnerProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changed_time: datetime=None, content: PartnerContent=None, created_time: datetime=None, metadata: object=None, partner_type: PartnerType=None):
        """IntegrationAccountPartnerProperties - a model defined in OpenAPI

        :param changed_time: The changed_time of this IntegrationAccountPartnerProperties.
        :param content: The content of this IntegrationAccountPartnerProperties.
        :param created_time: The created_time of this IntegrationAccountPartnerProperties.
        :param metadata: The metadata of this IntegrationAccountPartnerProperties.
        :param partner_type: The partner_type of this IntegrationAccountPartnerProperties.
        """
        self.openapi_types = {
            'changed_time': datetime,
            'content': PartnerContent,
            'created_time': datetime,
            'metadata': object,
            'partner_type': PartnerType
        }

        self.attribute_map = {
            'changed_time': 'changedTime',
            'content': 'content',
            'created_time': 'createdTime',
            'metadata': 'metadata',
            'partner_type': 'partnerType'
        }

        self._changed_time = changed_time
        self._content = content
        self._created_time = created_time
        self._metadata = metadata
        self._partner_type = partner_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationAccountPartnerProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationAccountPartnerProperties of this IntegrationAccountPartnerProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changed_time(self):
        """Gets the changed_time of this IntegrationAccountPartnerProperties.

        The changed time.

        :return: The changed_time of this IntegrationAccountPartnerProperties.
        :rtype: datetime
        """
        return self._changed_time

    @changed_time.setter
    def changed_time(self, changed_time):
        """Sets the changed_time of this IntegrationAccountPartnerProperties.

        The changed time.

        :param changed_time: The changed_time of this IntegrationAccountPartnerProperties.
        :type changed_time: datetime
        """

        self._changed_time = changed_time

    @property
    def content(self):
        """Gets the content of this IntegrationAccountPartnerProperties.


        :return: The content of this IntegrationAccountPartnerProperties.
        :rtype: PartnerContent
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this IntegrationAccountPartnerProperties.


        :param content: The content of this IntegrationAccountPartnerProperties.
        :type content: PartnerContent
        """

        self._content = content

    @property
    def created_time(self):
        """Gets the created_time of this IntegrationAccountPartnerProperties.

        The created time.

        :return: The created_time of this IntegrationAccountPartnerProperties.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this IntegrationAccountPartnerProperties.

        The created time.

        :param created_time: The created_time of this IntegrationAccountPartnerProperties.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def metadata(self):
        """Gets the metadata of this IntegrationAccountPartnerProperties.

        The metadata.

        :return: The metadata of this IntegrationAccountPartnerProperties.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this IntegrationAccountPartnerProperties.

        The metadata.

        :param metadata: The metadata of this IntegrationAccountPartnerProperties.
        :type metadata: object
        """

        self._metadata = metadata

    @property
    def partner_type(self):
        """Gets the partner_type of this IntegrationAccountPartnerProperties.


        :return: The partner_type of this IntegrationAccountPartnerProperties.
        :rtype: PartnerType
        """
        return self._partner_type

    @partner_type.setter
    def partner_type(self, partner_type):
        """Sets the partner_type of this IntegrationAccountPartnerProperties.


        :param partner_type: The partner_type of this IntegrationAccountPartnerProperties.
        :type partner_type: PartnerType
        """

        self._partner_type = partner_type
