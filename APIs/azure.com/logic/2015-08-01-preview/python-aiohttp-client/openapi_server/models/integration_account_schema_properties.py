# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.integration_account_content_link import IntegrationAccountContentLink
from openapi_server.models.schema_type import SchemaType
from openapi_server import util


class IntegrationAccountSchemaProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changed_time: datetime=None, content: object=None, content_link: IntegrationAccountContentLink=None, content_type: str=None, created_time: datetime=None, metadata: object=None, schema_type: SchemaType=None, target_namespace: str=None):
        """IntegrationAccountSchemaProperties - a model defined in OpenAPI

        :param changed_time: The changed_time of this IntegrationAccountSchemaProperties.
        :param content: The content of this IntegrationAccountSchemaProperties.
        :param content_link: The content_link of this IntegrationAccountSchemaProperties.
        :param content_type: The content_type of this IntegrationAccountSchemaProperties.
        :param created_time: The created_time of this IntegrationAccountSchemaProperties.
        :param metadata: The metadata of this IntegrationAccountSchemaProperties.
        :param schema_type: The schema_type of this IntegrationAccountSchemaProperties.
        :param target_namespace: The target_namespace of this IntegrationAccountSchemaProperties.
        """
        self.openapi_types = {
            'changed_time': datetime,
            'content': object,
            'content_link': IntegrationAccountContentLink,
            'content_type': str,
            'created_time': datetime,
            'metadata': object,
            'schema_type': SchemaType,
            'target_namespace': str
        }

        self.attribute_map = {
            'changed_time': 'changedTime',
            'content': 'content',
            'content_link': 'contentLink',
            'content_type': 'contentType',
            'created_time': 'createdTime',
            'metadata': 'metadata',
            'schema_type': 'schemaType',
            'target_namespace': 'targetNamespace'
        }

        self._changed_time = changed_time
        self._content = content
        self._content_link = content_link
        self._content_type = content_type
        self._created_time = created_time
        self._metadata = metadata
        self._schema_type = schema_type
        self._target_namespace = target_namespace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationAccountSchemaProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationAccountSchemaProperties of this IntegrationAccountSchemaProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changed_time(self):
        """Gets the changed_time of this IntegrationAccountSchemaProperties.

        The changed time.

        :return: The changed_time of this IntegrationAccountSchemaProperties.
        :rtype: datetime
        """
        return self._changed_time

    @changed_time.setter
    def changed_time(self, changed_time):
        """Sets the changed_time of this IntegrationAccountSchemaProperties.

        The changed time.

        :param changed_time: The changed_time of this IntegrationAccountSchemaProperties.
        :type changed_time: datetime
        """

        self._changed_time = changed_time

    @property
    def content(self):
        """Gets the content of this IntegrationAccountSchemaProperties.

        The content.

        :return: The content of this IntegrationAccountSchemaProperties.
        :rtype: object
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this IntegrationAccountSchemaProperties.

        The content.

        :param content: The content of this IntegrationAccountSchemaProperties.
        :type content: object
        """

        self._content = content

    @property
    def content_link(self):
        """Gets the content_link of this IntegrationAccountSchemaProperties.


        :return: The content_link of this IntegrationAccountSchemaProperties.
        :rtype: IntegrationAccountContentLink
        """
        return self._content_link

    @content_link.setter
    def content_link(self, content_link):
        """Sets the content_link of this IntegrationAccountSchemaProperties.


        :param content_link: The content_link of this IntegrationAccountSchemaProperties.
        :type content_link: IntegrationAccountContentLink
        """

        self._content_link = content_link

    @property
    def content_type(self):
        """Gets the content_type of this IntegrationAccountSchemaProperties.

        The content type.

        :return: The content_type of this IntegrationAccountSchemaProperties.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this IntegrationAccountSchemaProperties.

        The content type.

        :param content_type: The content_type of this IntegrationAccountSchemaProperties.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def created_time(self):
        """Gets the created_time of this IntegrationAccountSchemaProperties.

        The created time.

        :return: The created_time of this IntegrationAccountSchemaProperties.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this IntegrationAccountSchemaProperties.

        The created time.

        :param created_time: The created_time of this IntegrationAccountSchemaProperties.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def metadata(self):
        """Gets the metadata of this IntegrationAccountSchemaProperties.

        The metadata.

        :return: The metadata of this IntegrationAccountSchemaProperties.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this IntegrationAccountSchemaProperties.

        The metadata.

        :param metadata: The metadata of this IntegrationAccountSchemaProperties.
        :type metadata: object
        """

        self._metadata = metadata

    @property
    def schema_type(self):
        """Gets the schema_type of this IntegrationAccountSchemaProperties.


        :return: The schema_type of this IntegrationAccountSchemaProperties.
        :rtype: SchemaType
        """
        return self._schema_type

    @schema_type.setter
    def schema_type(self, schema_type):
        """Sets the schema_type of this IntegrationAccountSchemaProperties.


        :param schema_type: The schema_type of this IntegrationAccountSchemaProperties.
        :type schema_type: SchemaType
        """

        self._schema_type = schema_type

    @property
    def target_namespace(self):
        """Gets the target_namespace of this IntegrationAccountSchemaProperties.

        The target namespace.

        :return: The target_namespace of this IntegrationAccountSchemaProperties.
        :rtype: str
        """
        return self._target_namespace

    @target_namespace.setter
    def target_namespace(self, target_namespace):
        """Sets the target_namespace of this IntegrationAccountSchemaProperties.

        The target namespace.

        :param target_namespace: The target_namespace of this IntegrationAccountSchemaProperties.
        :type target_namespace: str
        """

        self._target_namespace = target_namespace
