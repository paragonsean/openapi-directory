# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.agreement_content import AgreementContent
from openapi_server.models.agreement_type import AgreementType
from openapi_server.models.business_identity import BusinessIdentity
from openapi_server import util


class IntegrationAccountAgreementProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agreement_type: AgreementType=None, changed_time: datetime=None, content: AgreementContent=None, created_time: datetime=None, guest_identity: BusinessIdentity=None, guest_partner: str=None, host_identity: BusinessIdentity=None, host_partner: str=None, metadata: object=None):
        """IntegrationAccountAgreementProperties - a model defined in OpenAPI

        :param agreement_type: The agreement_type of this IntegrationAccountAgreementProperties.
        :param changed_time: The changed_time of this IntegrationAccountAgreementProperties.
        :param content: The content of this IntegrationAccountAgreementProperties.
        :param created_time: The created_time of this IntegrationAccountAgreementProperties.
        :param guest_identity: The guest_identity of this IntegrationAccountAgreementProperties.
        :param guest_partner: The guest_partner of this IntegrationAccountAgreementProperties.
        :param host_identity: The host_identity of this IntegrationAccountAgreementProperties.
        :param host_partner: The host_partner of this IntegrationAccountAgreementProperties.
        :param metadata: The metadata of this IntegrationAccountAgreementProperties.
        """
        self.openapi_types = {
            'agreement_type': AgreementType,
            'changed_time': datetime,
            'content': AgreementContent,
            'created_time': datetime,
            'guest_identity': BusinessIdentity,
            'guest_partner': str,
            'host_identity': BusinessIdentity,
            'host_partner': str,
            'metadata': object
        }

        self.attribute_map = {
            'agreement_type': 'agreementType',
            'changed_time': 'changedTime',
            'content': 'content',
            'created_time': 'createdTime',
            'guest_identity': 'guestIdentity',
            'guest_partner': 'guestPartner',
            'host_identity': 'hostIdentity',
            'host_partner': 'hostPartner',
            'metadata': 'metadata'
        }

        self._agreement_type = agreement_type
        self._changed_time = changed_time
        self._content = content
        self._created_time = created_time
        self._guest_identity = guest_identity
        self._guest_partner = guest_partner
        self._host_identity = host_identity
        self._host_partner = host_partner
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationAccountAgreementProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationAccountAgreementProperties of this IntegrationAccountAgreementProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agreement_type(self):
        """Gets the agreement_type of this IntegrationAccountAgreementProperties.


        :return: The agreement_type of this IntegrationAccountAgreementProperties.
        :rtype: AgreementType
        """
        return self._agreement_type

    @agreement_type.setter
    def agreement_type(self, agreement_type):
        """Sets the agreement_type of this IntegrationAccountAgreementProperties.


        :param agreement_type: The agreement_type of this IntegrationAccountAgreementProperties.
        :type agreement_type: AgreementType
        """

        self._agreement_type = agreement_type

    @property
    def changed_time(self):
        """Gets the changed_time of this IntegrationAccountAgreementProperties.

        The changed time.

        :return: The changed_time of this IntegrationAccountAgreementProperties.
        :rtype: datetime
        """
        return self._changed_time

    @changed_time.setter
    def changed_time(self, changed_time):
        """Sets the changed_time of this IntegrationAccountAgreementProperties.

        The changed time.

        :param changed_time: The changed_time of this IntegrationAccountAgreementProperties.
        :type changed_time: datetime
        """

        self._changed_time = changed_time

    @property
    def content(self):
        """Gets the content of this IntegrationAccountAgreementProperties.


        :return: The content of this IntegrationAccountAgreementProperties.
        :rtype: AgreementContent
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this IntegrationAccountAgreementProperties.


        :param content: The content of this IntegrationAccountAgreementProperties.
        :type content: AgreementContent
        """

        self._content = content

    @property
    def created_time(self):
        """Gets the created_time of this IntegrationAccountAgreementProperties.

        The created time.

        :return: The created_time of this IntegrationAccountAgreementProperties.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this IntegrationAccountAgreementProperties.

        The created time.

        :param created_time: The created_time of this IntegrationAccountAgreementProperties.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def guest_identity(self):
        """Gets the guest_identity of this IntegrationAccountAgreementProperties.


        :return: The guest_identity of this IntegrationAccountAgreementProperties.
        :rtype: BusinessIdentity
        """
        return self._guest_identity

    @guest_identity.setter
    def guest_identity(self, guest_identity):
        """Sets the guest_identity of this IntegrationAccountAgreementProperties.


        :param guest_identity: The guest_identity of this IntegrationAccountAgreementProperties.
        :type guest_identity: BusinessIdentity
        """

        self._guest_identity = guest_identity

    @property
    def guest_partner(self):
        """Gets the guest_partner of this IntegrationAccountAgreementProperties.

        The guest partner.

        :return: The guest_partner of this IntegrationAccountAgreementProperties.
        :rtype: str
        """
        return self._guest_partner

    @guest_partner.setter
    def guest_partner(self, guest_partner):
        """Sets the guest_partner of this IntegrationAccountAgreementProperties.

        The guest partner.

        :param guest_partner: The guest_partner of this IntegrationAccountAgreementProperties.
        :type guest_partner: str
        """

        self._guest_partner = guest_partner

    @property
    def host_identity(self):
        """Gets the host_identity of this IntegrationAccountAgreementProperties.


        :return: The host_identity of this IntegrationAccountAgreementProperties.
        :rtype: BusinessIdentity
        """
        return self._host_identity

    @host_identity.setter
    def host_identity(self, host_identity):
        """Sets the host_identity of this IntegrationAccountAgreementProperties.


        :param host_identity: The host_identity of this IntegrationAccountAgreementProperties.
        :type host_identity: BusinessIdentity
        """

        self._host_identity = host_identity

    @property
    def host_partner(self):
        """Gets the host_partner of this IntegrationAccountAgreementProperties.

        The host partner.

        :return: The host_partner of this IntegrationAccountAgreementProperties.
        :rtype: str
        """
        return self._host_partner

    @host_partner.setter
    def host_partner(self, host_partner):
        """Sets the host_partner of this IntegrationAccountAgreementProperties.

        The host partner.

        :param host_partner: The host_partner of this IntegrationAccountAgreementProperties.
        :type host_partner: str
        """

        self._host_partner = host_partner

    @property
    def metadata(self):
        """Gets the metadata of this IntegrationAccountAgreementProperties.

        The metadata.

        :return: The metadata of this IntegrationAccountAgreementProperties.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this IntegrationAccountAgreementProperties.

        The metadata.

        :param metadata: The metadata of this IntegrationAccountAgreementProperties.
        :type metadata: object
        """

        self._metadata = metadata
