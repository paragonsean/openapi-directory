# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key_vault_key_reference import KeyVaultKeyReference
from openapi_server import util


class IntegrationAccountCertificateProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changed_time: datetime=None, created_time: datetime=None, key: KeyVaultKeyReference=None, metadata: object=None, public_certificate: str=None):
        """IntegrationAccountCertificateProperties - a model defined in OpenAPI

        :param changed_time: The changed_time of this IntegrationAccountCertificateProperties.
        :param created_time: The created_time of this IntegrationAccountCertificateProperties.
        :param key: The key of this IntegrationAccountCertificateProperties.
        :param metadata: The metadata of this IntegrationAccountCertificateProperties.
        :param public_certificate: The public_certificate of this IntegrationAccountCertificateProperties.
        """
        self.openapi_types = {
            'changed_time': datetime,
            'created_time': datetime,
            'key': KeyVaultKeyReference,
            'metadata': object,
            'public_certificate': str
        }

        self.attribute_map = {
            'changed_time': 'changedTime',
            'created_time': 'createdTime',
            'key': 'key',
            'metadata': 'metadata',
            'public_certificate': 'publicCertificate'
        }

        self._changed_time = changed_time
        self._created_time = created_time
        self._key = key
        self._metadata = metadata
        self._public_certificate = public_certificate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationAccountCertificateProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationAccountCertificateProperties of this IntegrationAccountCertificateProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changed_time(self):
        """Gets the changed_time of this IntegrationAccountCertificateProperties.

        The changed time.

        :return: The changed_time of this IntegrationAccountCertificateProperties.
        :rtype: datetime
        """
        return self._changed_time

    @changed_time.setter
    def changed_time(self, changed_time):
        """Sets the changed_time of this IntegrationAccountCertificateProperties.

        The changed time.

        :param changed_time: The changed_time of this IntegrationAccountCertificateProperties.
        :type changed_time: datetime
        """

        self._changed_time = changed_time

    @property
    def created_time(self):
        """Gets the created_time of this IntegrationAccountCertificateProperties.

        The created time.

        :return: The created_time of this IntegrationAccountCertificateProperties.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this IntegrationAccountCertificateProperties.

        The created time.

        :param created_time: The created_time of this IntegrationAccountCertificateProperties.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def key(self):
        """Gets the key of this IntegrationAccountCertificateProperties.


        :return: The key of this IntegrationAccountCertificateProperties.
        :rtype: KeyVaultKeyReference
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this IntegrationAccountCertificateProperties.


        :param key: The key of this IntegrationAccountCertificateProperties.
        :type key: KeyVaultKeyReference
        """

        self._key = key

    @property
    def metadata(self):
        """Gets the metadata of this IntegrationAccountCertificateProperties.

        The metadata.

        :return: The metadata of this IntegrationAccountCertificateProperties.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this IntegrationAccountCertificateProperties.

        The metadata.

        :param metadata: The metadata of this IntegrationAccountCertificateProperties.
        :type metadata: object
        """

        self._metadata = metadata

    @property
    def public_certificate(self):
        """Gets the public_certificate of this IntegrationAccountCertificateProperties.

        The public certificate.

        :return: The public_certificate of this IntegrationAccountCertificateProperties.
        :rtype: str
        """
        return self._public_certificate

    @public_certificate.setter
    def public_certificate(self, public_certificate):
        """Sets the public_certificate of this IntegrationAccountCertificateProperties.

        The public certificate.

        :param public_certificate: The public_certificate of this IntegrationAccountCertificateProperties.
        :type public_certificate: str
        """

        self._public_certificate = public_certificate
