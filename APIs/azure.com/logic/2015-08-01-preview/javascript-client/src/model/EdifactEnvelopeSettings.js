/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EdifactEnvelopeSettings model module.
 * @module model/EdifactEnvelopeSettings
 * @version 2015-08-01-preview
 */
class EdifactEnvelopeSettings {
    /**
     * Constructs a new <code>EdifactEnvelopeSettings</code>.
     * @alias module:model/EdifactEnvelopeSettings
     */
    constructor() { 
        
        EdifactEnvelopeSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EdifactEnvelopeSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EdifactEnvelopeSettings} obj Optional instance to populate.
     * @return {module:model/EdifactEnvelopeSettings} The populated <code>EdifactEnvelopeSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EdifactEnvelopeSettings();

            if (data.hasOwnProperty('applicationReferenceId')) {
                obj['applicationReferenceId'] = ApiClient.convertToType(data['applicationReferenceId'], 'String');
            }
            if (data.hasOwnProperty('applyDelimiterStringAdvice')) {
                obj['applyDelimiterStringAdvice'] = ApiClient.convertToType(data['applyDelimiterStringAdvice'], 'Boolean');
            }
            if (data.hasOwnProperty('communicationAgreementId')) {
                obj['communicationAgreementId'] = ApiClient.convertToType(data['communicationAgreementId'], 'String');
            }
            if (data.hasOwnProperty('createGroupingSegments')) {
                obj['createGroupingSegments'] = ApiClient.convertToType(data['createGroupingSegments'], 'Boolean');
            }
            if (data.hasOwnProperty('enableDefaultGroupHeaders')) {
                obj['enableDefaultGroupHeaders'] = ApiClient.convertToType(data['enableDefaultGroupHeaders'], 'Boolean');
            }
            if (data.hasOwnProperty('functionalGroupId')) {
                obj['functionalGroupId'] = ApiClient.convertToType(data['functionalGroupId'], 'String');
            }
            if (data.hasOwnProperty('groupApplicationPassword')) {
                obj['groupApplicationPassword'] = ApiClient.convertToType(data['groupApplicationPassword'], 'String');
            }
            if (data.hasOwnProperty('groupApplicationReceiverId')) {
                obj['groupApplicationReceiverId'] = ApiClient.convertToType(data['groupApplicationReceiverId'], 'String');
            }
            if (data.hasOwnProperty('groupApplicationReceiverQualifier')) {
                obj['groupApplicationReceiverQualifier'] = ApiClient.convertToType(data['groupApplicationReceiverQualifier'], 'String');
            }
            if (data.hasOwnProperty('groupApplicationSenderId')) {
                obj['groupApplicationSenderId'] = ApiClient.convertToType(data['groupApplicationSenderId'], 'String');
            }
            if (data.hasOwnProperty('groupApplicationSenderQualifier')) {
                obj['groupApplicationSenderQualifier'] = ApiClient.convertToType(data['groupApplicationSenderQualifier'], 'String');
            }
            if (data.hasOwnProperty('groupAssociationAssignedCode')) {
                obj['groupAssociationAssignedCode'] = ApiClient.convertToType(data['groupAssociationAssignedCode'], 'String');
            }
            if (data.hasOwnProperty('groupControlNumberLowerBound')) {
                obj['groupControlNumberLowerBound'] = ApiClient.convertToType(data['groupControlNumberLowerBound'], 'Number');
            }
            if (data.hasOwnProperty('groupControlNumberPrefix')) {
                obj['groupControlNumberPrefix'] = ApiClient.convertToType(data['groupControlNumberPrefix'], 'String');
            }
            if (data.hasOwnProperty('groupControlNumberSuffix')) {
                obj['groupControlNumberSuffix'] = ApiClient.convertToType(data['groupControlNumberSuffix'], 'String');
            }
            if (data.hasOwnProperty('groupControlNumberUpperBound')) {
                obj['groupControlNumberUpperBound'] = ApiClient.convertToType(data['groupControlNumberUpperBound'], 'Number');
            }
            if (data.hasOwnProperty('groupControllingAgencyCode')) {
                obj['groupControllingAgencyCode'] = ApiClient.convertToType(data['groupControllingAgencyCode'], 'String');
            }
            if (data.hasOwnProperty('groupMessageRelease')) {
                obj['groupMessageRelease'] = ApiClient.convertToType(data['groupMessageRelease'], 'String');
            }
            if (data.hasOwnProperty('groupMessageVersion')) {
                obj['groupMessageVersion'] = ApiClient.convertToType(data['groupMessageVersion'], 'String');
            }
            if (data.hasOwnProperty('interchangeControlNumberLowerBound')) {
                obj['interchangeControlNumberLowerBound'] = ApiClient.convertToType(data['interchangeControlNumberLowerBound'], 'Number');
            }
            if (data.hasOwnProperty('interchangeControlNumberPrefix')) {
                obj['interchangeControlNumberPrefix'] = ApiClient.convertToType(data['interchangeControlNumberPrefix'], 'String');
            }
            if (data.hasOwnProperty('interchangeControlNumberSuffix')) {
                obj['interchangeControlNumberSuffix'] = ApiClient.convertToType(data['interchangeControlNumberSuffix'], 'String');
            }
            if (data.hasOwnProperty('interchangeControlNumberUpperBound')) {
                obj['interchangeControlNumberUpperBound'] = ApiClient.convertToType(data['interchangeControlNumberUpperBound'], 'Number');
            }
            if (data.hasOwnProperty('isTestInterchange')) {
                obj['isTestInterchange'] = ApiClient.convertToType(data['isTestInterchange'], 'Boolean');
            }
            if (data.hasOwnProperty('overwriteExistingTransactionSetControlNumber')) {
                obj['overwriteExistingTransactionSetControlNumber'] = ApiClient.convertToType(data['overwriteExistingTransactionSetControlNumber'], 'Boolean');
            }
            if (data.hasOwnProperty('processingPriorityCode')) {
                obj['processingPriorityCode'] = ApiClient.convertToType(data['processingPriorityCode'], 'String');
            }
            if (data.hasOwnProperty('receiverInternalIdentification')) {
                obj['receiverInternalIdentification'] = ApiClient.convertToType(data['receiverInternalIdentification'], 'String');
            }
            if (data.hasOwnProperty('receiverInternalSubIdentification')) {
                obj['receiverInternalSubIdentification'] = ApiClient.convertToType(data['receiverInternalSubIdentification'], 'String');
            }
            if (data.hasOwnProperty('receiverReverseRoutingAddress')) {
                obj['receiverReverseRoutingAddress'] = ApiClient.convertToType(data['receiverReverseRoutingAddress'], 'String');
            }
            if (data.hasOwnProperty('recipientReferencePasswordQualifier')) {
                obj['recipientReferencePasswordQualifier'] = ApiClient.convertToType(data['recipientReferencePasswordQualifier'], 'String');
            }
            if (data.hasOwnProperty('recipientReferencePasswordValue')) {
                obj['recipientReferencePasswordValue'] = ApiClient.convertToType(data['recipientReferencePasswordValue'], 'String');
            }
            if (data.hasOwnProperty('rolloverGroupControlNumber')) {
                obj['rolloverGroupControlNumber'] = ApiClient.convertToType(data['rolloverGroupControlNumber'], 'Boolean');
            }
            if (data.hasOwnProperty('rolloverInterchangeControlNumber')) {
                obj['rolloverInterchangeControlNumber'] = ApiClient.convertToType(data['rolloverInterchangeControlNumber'], 'Boolean');
            }
            if (data.hasOwnProperty('rolloverTransactionSetControlNumber')) {
                obj['rolloverTransactionSetControlNumber'] = ApiClient.convertToType(data['rolloverTransactionSetControlNumber'], 'Boolean');
            }
            if (data.hasOwnProperty('senderInternalIdentification')) {
                obj['senderInternalIdentification'] = ApiClient.convertToType(data['senderInternalIdentification'], 'String');
            }
            if (data.hasOwnProperty('senderInternalSubIdentification')) {
                obj['senderInternalSubIdentification'] = ApiClient.convertToType(data['senderInternalSubIdentification'], 'String');
            }
            if (data.hasOwnProperty('senderReverseRoutingAddress')) {
                obj['senderReverseRoutingAddress'] = ApiClient.convertToType(data['senderReverseRoutingAddress'], 'String');
            }
            if (data.hasOwnProperty('transactionSetControlNumberLowerBound')) {
                obj['transactionSetControlNumberLowerBound'] = ApiClient.convertToType(data['transactionSetControlNumberLowerBound'], 'Number');
            }
            if (data.hasOwnProperty('transactionSetControlNumberPrefix')) {
                obj['transactionSetControlNumberPrefix'] = ApiClient.convertToType(data['transactionSetControlNumberPrefix'], 'String');
            }
            if (data.hasOwnProperty('transactionSetControlNumberSuffix')) {
                obj['transactionSetControlNumberSuffix'] = ApiClient.convertToType(data['transactionSetControlNumberSuffix'], 'String');
            }
            if (data.hasOwnProperty('transactionSetControlNumberUpperBound')) {
                obj['transactionSetControlNumberUpperBound'] = ApiClient.convertToType(data['transactionSetControlNumberUpperBound'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EdifactEnvelopeSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EdifactEnvelopeSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['applicationReferenceId'] && !(typeof data['applicationReferenceId'] === 'string' || data['applicationReferenceId'] instanceof String)) {
            throw new Error("Expected the field `applicationReferenceId` to be a primitive type in the JSON string but got " + data['applicationReferenceId']);
        }
        // ensure the json data is a string
        if (data['communicationAgreementId'] && !(typeof data['communicationAgreementId'] === 'string' || data['communicationAgreementId'] instanceof String)) {
            throw new Error("Expected the field `communicationAgreementId` to be a primitive type in the JSON string but got " + data['communicationAgreementId']);
        }
        // ensure the json data is a string
        if (data['functionalGroupId'] && !(typeof data['functionalGroupId'] === 'string' || data['functionalGroupId'] instanceof String)) {
            throw new Error("Expected the field `functionalGroupId` to be a primitive type in the JSON string but got " + data['functionalGroupId']);
        }
        // ensure the json data is a string
        if (data['groupApplicationPassword'] && !(typeof data['groupApplicationPassword'] === 'string' || data['groupApplicationPassword'] instanceof String)) {
            throw new Error("Expected the field `groupApplicationPassword` to be a primitive type in the JSON string but got " + data['groupApplicationPassword']);
        }
        // ensure the json data is a string
        if (data['groupApplicationReceiverId'] && !(typeof data['groupApplicationReceiverId'] === 'string' || data['groupApplicationReceiverId'] instanceof String)) {
            throw new Error("Expected the field `groupApplicationReceiverId` to be a primitive type in the JSON string but got " + data['groupApplicationReceiverId']);
        }
        // ensure the json data is a string
        if (data['groupApplicationReceiverQualifier'] && !(typeof data['groupApplicationReceiverQualifier'] === 'string' || data['groupApplicationReceiverQualifier'] instanceof String)) {
            throw new Error("Expected the field `groupApplicationReceiverQualifier` to be a primitive type in the JSON string but got " + data['groupApplicationReceiverQualifier']);
        }
        // ensure the json data is a string
        if (data['groupApplicationSenderId'] && !(typeof data['groupApplicationSenderId'] === 'string' || data['groupApplicationSenderId'] instanceof String)) {
            throw new Error("Expected the field `groupApplicationSenderId` to be a primitive type in the JSON string but got " + data['groupApplicationSenderId']);
        }
        // ensure the json data is a string
        if (data['groupApplicationSenderQualifier'] && !(typeof data['groupApplicationSenderQualifier'] === 'string' || data['groupApplicationSenderQualifier'] instanceof String)) {
            throw new Error("Expected the field `groupApplicationSenderQualifier` to be a primitive type in the JSON string but got " + data['groupApplicationSenderQualifier']);
        }
        // ensure the json data is a string
        if (data['groupAssociationAssignedCode'] && !(typeof data['groupAssociationAssignedCode'] === 'string' || data['groupAssociationAssignedCode'] instanceof String)) {
            throw new Error("Expected the field `groupAssociationAssignedCode` to be a primitive type in the JSON string but got " + data['groupAssociationAssignedCode']);
        }
        // ensure the json data is a string
        if (data['groupControlNumberPrefix'] && !(typeof data['groupControlNumberPrefix'] === 'string' || data['groupControlNumberPrefix'] instanceof String)) {
            throw new Error("Expected the field `groupControlNumberPrefix` to be a primitive type in the JSON string but got " + data['groupControlNumberPrefix']);
        }
        // ensure the json data is a string
        if (data['groupControlNumberSuffix'] && !(typeof data['groupControlNumberSuffix'] === 'string' || data['groupControlNumberSuffix'] instanceof String)) {
            throw new Error("Expected the field `groupControlNumberSuffix` to be a primitive type in the JSON string but got " + data['groupControlNumberSuffix']);
        }
        // ensure the json data is a string
        if (data['groupControllingAgencyCode'] && !(typeof data['groupControllingAgencyCode'] === 'string' || data['groupControllingAgencyCode'] instanceof String)) {
            throw new Error("Expected the field `groupControllingAgencyCode` to be a primitive type in the JSON string but got " + data['groupControllingAgencyCode']);
        }
        // ensure the json data is a string
        if (data['groupMessageRelease'] && !(typeof data['groupMessageRelease'] === 'string' || data['groupMessageRelease'] instanceof String)) {
            throw new Error("Expected the field `groupMessageRelease` to be a primitive type in the JSON string but got " + data['groupMessageRelease']);
        }
        // ensure the json data is a string
        if (data['groupMessageVersion'] && !(typeof data['groupMessageVersion'] === 'string' || data['groupMessageVersion'] instanceof String)) {
            throw new Error("Expected the field `groupMessageVersion` to be a primitive type in the JSON string but got " + data['groupMessageVersion']);
        }
        // ensure the json data is a string
        if (data['interchangeControlNumberPrefix'] && !(typeof data['interchangeControlNumberPrefix'] === 'string' || data['interchangeControlNumberPrefix'] instanceof String)) {
            throw new Error("Expected the field `interchangeControlNumberPrefix` to be a primitive type in the JSON string but got " + data['interchangeControlNumberPrefix']);
        }
        // ensure the json data is a string
        if (data['interchangeControlNumberSuffix'] && !(typeof data['interchangeControlNumberSuffix'] === 'string' || data['interchangeControlNumberSuffix'] instanceof String)) {
            throw new Error("Expected the field `interchangeControlNumberSuffix` to be a primitive type in the JSON string but got " + data['interchangeControlNumberSuffix']);
        }
        // ensure the json data is a string
        if (data['processingPriorityCode'] && !(typeof data['processingPriorityCode'] === 'string' || data['processingPriorityCode'] instanceof String)) {
            throw new Error("Expected the field `processingPriorityCode` to be a primitive type in the JSON string but got " + data['processingPriorityCode']);
        }
        // ensure the json data is a string
        if (data['receiverInternalIdentification'] && !(typeof data['receiverInternalIdentification'] === 'string' || data['receiverInternalIdentification'] instanceof String)) {
            throw new Error("Expected the field `receiverInternalIdentification` to be a primitive type in the JSON string but got " + data['receiverInternalIdentification']);
        }
        // ensure the json data is a string
        if (data['receiverInternalSubIdentification'] && !(typeof data['receiverInternalSubIdentification'] === 'string' || data['receiverInternalSubIdentification'] instanceof String)) {
            throw new Error("Expected the field `receiverInternalSubIdentification` to be a primitive type in the JSON string but got " + data['receiverInternalSubIdentification']);
        }
        // ensure the json data is a string
        if (data['receiverReverseRoutingAddress'] && !(typeof data['receiverReverseRoutingAddress'] === 'string' || data['receiverReverseRoutingAddress'] instanceof String)) {
            throw new Error("Expected the field `receiverReverseRoutingAddress` to be a primitive type in the JSON string but got " + data['receiverReverseRoutingAddress']);
        }
        // ensure the json data is a string
        if (data['recipientReferencePasswordQualifier'] && !(typeof data['recipientReferencePasswordQualifier'] === 'string' || data['recipientReferencePasswordQualifier'] instanceof String)) {
            throw new Error("Expected the field `recipientReferencePasswordQualifier` to be a primitive type in the JSON string but got " + data['recipientReferencePasswordQualifier']);
        }
        // ensure the json data is a string
        if (data['recipientReferencePasswordValue'] && !(typeof data['recipientReferencePasswordValue'] === 'string' || data['recipientReferencePasswordValue'] instanceof String)) {
            throw new Error("Expected the field `recipientReferencePasswordValue` to be a primitive type in the JSON string but got " + data['recipientReferencePasswordValue']);
        }
        // ensure the json data is a string
        if (data['senderInternalIdentification'] && !(typeof data['senderInternalIdentification'] === 'string' || data['senderInternalIdentification'] instanceof String)) {
            throw new Error("Expected the field `senderInternalIdentification` to be a primitive type in the JSON string but got " + data['senderInternalIdentification']);
        }
        // ensure the json data is a string
        if (data['senderInternalSubIdentification'] && !(typeof data['senderInternalSubIdentification'] === 'string' || data['senderInternalSubIdentification'] instanceof String)) {
            throw new Error("Expected the field `senderInternalSubIdentification` to be a primitive type in the JSON string but got " + data['senderInternalSubIdentification']);
        }
        // ensure the json data is a string
        if (data['senderReverseRoutingAddress'] && !(typeof data['senderReverseRoutingAddress'] === 'string' || data['senderReverseRoutingAddress'] instanceof String)) {
            throw new Error("Expected the field `senderReverseRoutingAddress` to be a primitive type in the JSON string but got " + data['senderReverseRoutingAddress']);
        }
        // ensure the json data is a string
        if (data['transactionSetControlNumberPrefix'] && !(typeof data['transactionSetControlNumberPrefix'] === 'string' || data['transactionSetControlNumberPrefix'] instanceof String)) {
            throw new Error("Expected the field `transactionSetControlNumberPrefix` to be a primitive type in the JSON string but got " + data['transactionSetControlNumberPrefix']);
        }
        // ensure the json data is a string
        if (data['transactionSetControlNumberSuffix'] && !(typeof data['transactionSetControlNumberSuffix'] === 'string' || data['transactionSetControlNumberSuffix'] instanceof String)) {
            throw new Error("Expected the field `transactionSetControlNumberSuffix` to be a primitive type in the JSON string but got " + data['transactionSetControlNumberSuffix']);
        }

        return true;
    }


}



/**
 * The application reference id.
 * @member {String} applicationReferenceId
 */
EdifactEnvelopeSettings.prototype['applicationReferenceId'] = undefined;

/**
 * The value indicating whether to apply delimiter string advice.
 * @member {Boolean} applyDelimiterStringAdvice
 */
EdifactEnvelopeSettings.prototype['applyDelimiterStringAdvice'] = undefined;

/**
 * The communication agreement id.
 * @member {String} communicationAgreementId
 */
EdifactEnvelopeSettings.prototype['communicationAgreementId'] = undefined;

/**
 * The value indicating whether to create grouping segments.
 * @member {Boolean} createGroupingSegments
 */
EdifactEnvelopeSettings.prototype['createGroupingSegments'] = undefined;

/**
 * The value indicating whether to enable default group headers.
 * @member {Boolean} enableDefaultGroupHeaders
 */
EdifactEnvelopeSettings.prototype['enableDefaultGroupHeaders'] = undefined;

/**
 * The functional group id.
 * @member {String} functionalGroupId
 */
EdifactEnvelopeSettings.prototype['functionalGroupId'] = undefined;

/**
 * The group application password.
 * @member {String} groupApplicationPassword
 */
EdifactEnvelopeSettings.prototype['groupApplicationPassword'] = undefined;

/**
 * The group application receiver id.
 * @member {String} groupApplicationReceiverId
 */
EdifactEnvelopeSettings.prototype['groupApplicationReceiverId'] = undefined;

/**
 * The group application receiver qualifier.
 * @member {String} groupApplicationReceiverQualifier
 */
EdifactEnvelopeSettings.prototype['groupApplicationReceiverQualifier'] = undefined;

/**
 * The group application sender id.
 * @member {String} groupApplicationSenderId
 */
EdifactEnvelopeSettings.prototype['groupApplicationSenderId'] = undefined;

/**
 * The group application sender qualifier.
 * @member {String} groupApplicationSenderQualifier
 */
EdifactEnvelopeSettings.prototype['groupApplicationSenderQualifier'] = undefined;

/**
 * The group association assigned code.
 * @member {String} groupAssociationAssignedCode
 */
EdifactEnvelopeSettings.prototype['groupAssociationAssignedCode'] = undefined;

/**
 * The group control number lower bound.
 * @member {Number} groupControlNumberLowerBound
 */
EdifactEnvelopeSettings.prototype['groupControlNumberLowerBound'] = undefined;

/**
 * The group control number prefix.
 * @member {String} groupControlNumberPrefix
 */
EdifactEnvelopeSettings.prototype['groupControlNumberPrefix'] = undefined;

/**
 * The group control number suffix.
 * @member {String} groupControlNumberSuffix
 */
EdifactEnvelopeSettings.prototype['groupControlNumberSuffix'] = undefined;

/**
 * The group control number upper bound.
 * @member {Number} groupControlNumberUpperBound
 */
EdifactEnvelopeSettings.prototype['groupControlNumberUpperBound'] = undefined;

/**
 * The group controlling agency code.
 * @member {String} groupControllingAgencyCode
 */
EdifactEnvelopeSettings.prototype['groupControllingAgencyCode'] = undefined;

/**
 * The group message release.
 * @member {String} groupMessageRelease
 */
EdifactEnvelopeSettings.prototype['groupMessageRelease'] = undefined;

/**
 * The group message version.
 * @member {String} groupMessageVersion
 */
EdifactEnvelopeSettings.prototype['groupMessageVersion'] = undefined;

/**
 * The interchange control number lower bound.
 * @member {Number} interchangeControlNumberLowerBound
 */
EdifactEnvelopeSettings.prototype['interchangeControlNumberLowerBound'] = undefined;

/**
 * The interchange control number prefix.
 * @member {String} interchangeControlNumberPrefix
 */
EdifactEnvelopeSettings.prototype['interchangeControlNumberPrefix'] = undefined;

/**
 * The interchange control number suffix.
 * @member {String} interchangeControlNumberSuffix
 */
EdifactEnvelopeSettings.prototype['interchangeControlNumberSuffix'] = undefined;

/**
 * The interchange control number upper bound.
 * @member {Number} interchangeControlNumberUpperBound
 */
EdifactEnvelopeSettings.prototype['interchangeControlNumberUpperBound'] = undefined;

/**
 * The value indicating whether the message is a test interchange.
 * @member {Boolean} isTestInterchange
 */
EdifactEnvelopeSettings.prototype['isTestInterchange'] = undefined;

/**
 * The value indicating whether to overwrite existing transaction set control number.
 * @member {Boolean} overwriteExistingTransactionSetControlNumber
 */
EdifactEnvelopeSettings.prototype['overwriteExistingTransactionSetControlNumber'] = undefined;

/**
 * The processing priority code.
 * @member {String} processingPriorityCode
 */
EdifactEnvelopeSettings.prototype['processingPriorityCode'] = undefined;

/**
 * The receiver internal identification.
 * @member {String} receiverInternalIdentification
 */
EdifactEnvelopeSettings.prototype['receiverInternalIdentification'] = undefined;

/**
 * The receiver internal sub identification.
 * @member {String} receiverInternalSubIdentification
 */
EdifactEnvelopeSettings.prototype['receiverInternalSubIdentification'] = undefined;

/**
 * The receiver reverse routing address.
 * @member {String} receiverReverseRoutingAddress
 */
EdifactEnvelopeSettings.prototype['receiverReverseRoutingAddress'] = undefined;

/**
 * The recipient reference password qualifier.
 * @member {String} recipientReferencePasswordQualifier
 */
EdifactEnvelopeSettings.prototype['recipientReferencePasswordQualifier'] = undefined;

/**
 * The recipient reference password value.
 * @member {String} recipientReferencePasswordValue
 */
EdifactEnvelopeSettings.prototype['recipientReferencePasswordValue'] = undefined;

/**
 * The value indicating whether to rollover group control number.
 * @member {Boolean} rolloverGroupControlNumber
 */
EdifactEnvelopeSettings.prototype['rolloverGroupControlNumber'] = undefined;

/**
 * The value indicating whether to rollover interchange control number.
 * @member {Boolean} rolloverInterchangeControlNumber
 */
EdifactEnvelopeSettings.prototype['rolloverInterchangeControlNumber'] = undefined;

/**
 * The value indicating whether to rollover transaction set control number.
 * @member {Boolean} rolloverTransactionSetControlNumber
 */
EdifactEnvelopeSettings.prototype['rolloverTransactionSetControlNumber'] = undefined;

/**
 * The sender internal identification.
 * @member {String} senderInternalIdentification
 */
EdifactEnvelopeSettings.prototype['senderInternalIdentification'] = undefined;

/**
 * The sender internal sub identification.
 * @member {String} senderInternalSubIdentification
 */
EdifactEnvelopeSettings.prototype['senderInternalSubIdentification'] = undefined;

/**
 * The sender reverse routing address.
 * @member {String} senderReverseRoutingAddress
 */
EdifactEnvelopeSettings.prototype['senderReverseRoutingAddress'] = undefined;

/**
 * The transaction set control number lower bound.
 * @member {Number} transactionSetControlNumberLowerBound
 */
EdifactEnvelopeSettings.prototype['transactionSetControlNumberLowerBound'] = undefined;

/**
 * The transaction set control number prefix.
 * @member {String} transactionSetControlNumberPrefix
 */
EdifactEnvelopeSettings.prototype['transactionSetControlNumberPrefix'] = undefined;

/**
 * The transaction set control number suffix.
 * @member {String} transactionSetControlNumberSuffix
 */
EdifactEnvelopeSettings.prototype['transactionSetControlNumberSuffix'] = undefined;

/**
 * The transaction set control number upper bound.
 * @member {Number} transactionSetControlNumberUpperBound
 */
EdifactEnvelopeSettings.prototype['transactionSetControlNumberUpperBound'] = undefined;






export default EdifactEnvelopeSettings;

