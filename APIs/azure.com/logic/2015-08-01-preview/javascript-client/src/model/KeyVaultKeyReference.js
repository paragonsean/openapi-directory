/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KeyVaultKeyReferenceKeyVault from './KeyVaultKeyReferenceKeyVault';

/**
 * The KeyVaultKeyReference model module.
 * @module model/KeyVaultKeyReference
 * @version 2015-08-01-preview
 */
class KeyVaultKeyReference {
    /**
     * Constructs a new <code>KeyVaultKeyReference</code>.
     * @alias module:model/KeyVaultKeyReference
     */
    constructor() { 
        
        KeyVaultKeyReference.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KeyVaultKeyReference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeyVaultKeyReference} obj Optional instance to populate.
     * @return {module:model/KeyVaultKeyReference} The populated <code>KeyVaultKeyReference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeyVaultKeyReference();

            if (data.hasOwnProperty('keyName')) {
                obj['keyName'] = ApiClient.convertToType(data['keyName'], 'String');
            }
            if (data.hasOwnProperty('keyVault')) {
                obj['keyVault'] = KeyVaultKeyReferenceKeyVault.constructFromObject(data['keyVault']);
            }
            if (data.hasOwnProperty('keyVersion')) {
                obj['keyVersion'] = ApiClient.convertToType(data['keyVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeyVaultKeyReference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeyVaultKeyReference</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['keyName'] && !(typeof data['keyName'] === 'string' || data['keyName'] instanceof String)) {
            throw new Error("Expected the field `keyName` to be a primitive type in the JSON string but got " + data['keyName']);
        }
        // validate the optional field `keyVault`
        if (data['keyVault']) { // data not null
          KeyVaultKeyReferenceKeyVault.validateJSON(data['keyVault']);
        }
        // ensure the json data is a string
        if (data['keyVersion'] && !(typeof data['keyVersion'] === 'string' || data['keyVersion'] instanceof String)) {
            throw new Error("Expected the field `keyVersion` to be a primitive type in the JSON string but got " + data['keyVersion']);
        }

        return true;
    }


}



/**
 * The private key name in key vault.
 * @member {String} keyName
 */
KeyVaultKeyReference.prototype['keyName'] = undefined;

/**
 * @member {module:model/KeyVaultKeyReferenceKeyVault} keyVault
 */
KeyVaultKeyReference.prototype['keyVault'] = undefined;

/**
 * The private key version in key vault.
 * @member {String} keyVersion
 */
KeyVaultKeyReference.prototype['keyVersion'] = undefined;






export default KeyVaultKeyReference;

