/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AS2AgreementContent from './AS2AgreementContent';
import EdifactAgreementContent from './EdifactAgreementContent';
import X12AgreementContent from './X12AgreementContent';

/**
 * The AgreementContent model module.
 * @module model/AgreementContent
 * @version 2015-08-01-preview
 */
class AgreementContent {
    /**
     * Constructs a new <code>AgreementContent</code>.
     * @alias module:model/AgreementContent
     */
    constructor() { 
        
        AgreementContent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AgreementContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AgreementContent} obj Optional instance to populate.
     * @return {module:model/AgreementContent} The populated <code>AgreementContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AgreementContent();

            if (data.hasOwnProperty('AS2')) {
                obj['AS2'] = AS2AgreementContent.constructFromObject(data['AS2']);
            }
            if (data.hasOwnProperty('Edifact')) {
                obj['Edifact'] = EdifactAgreementContent.constructFromObject(data['Edifact']);
            }
            if (data.hasOwnProperty('X12')) {
                obj['X12'] = X12AgreementContent.constructFromObject(data['X12']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AgreementContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AgreementContent</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AS2`
        if (data['AS2']) { // data not null
          AS2AgreementContent.validateJSON(data['AS2']);
        }
        // validate the optional field `Edifact`
        if (data['Edifact']) { // data not null
          EdifactAgreementContent.validateJSON(data['Edifact']);
        }
        // validate the optional field `X12`
        if (data['X12']) { // data not null
          X12AgreementContent.validateJSON(data['X12']);
        }

        return true;
    }


}



/**
 * @member {module:model/AS2AgreementContent} AS2
 */
AgreementContent.prototype['AS2'] = undefined;

/**
 * @member {module:model/EdifactAgreementContent} Edifact
 */
AgreementContent.prototype['Edifact'] = undefined;

/**
 * @member {module:model/X12AgreementContent} X12
 */
AgreementContent.prototype['X12'] = undefined;






export default AgreementContent;

