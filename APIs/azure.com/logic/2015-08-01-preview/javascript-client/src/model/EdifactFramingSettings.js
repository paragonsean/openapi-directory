/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EdifactCharacterSet from './EdifactCharacterSet';
import EdifactDecimalIndicator from './EdifactDecimalIndicator';
import SegmentTerminatorSuffix from './SegmentTerminatorSuffix';

/**
 * The EdifactFramingSettings model module.
 * @module model/EdifactFramingSettings
 * @version 2015-08-01-preview
 */
class EdifactFramingSettings {
    /**
     * Constructs a new <code>EdifactFramingSettings</code>.
     * @alias module:model/EdifactFramingSettings
     */
    constructor() { 
        
        EdifactFramingSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EdifactFramingSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EdifactFramingSettings} obj Optional instance to populate.
     * @return {module:model/EdifactFramingSettings} The populated <code>EdifactFramingSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EdifactFramingSettings();

            if (data.hasOwnProperty('characterEncoding')) {
                obj['characterEncoding'] = ApiClient.convertToType(data['characterEncoding'], 'String');
            }
            if (data.hasOwnProperty('characterSet')) {
                obj['characterSet'] = EdifactCharacterSet.constructFromObject(data['characterSet']);
            }
            if (data.hasOwnProperty('componentSeparator')) {
                obj['componentSeparator'] = ApiClient.convertToType(data['componentSeparator'], 'Number');
            }
            if (data.hasOwnProperty('dataElementSeparator')) {
                obj['dataElementSeparator'] = ApiClient.convertToType(data['dataElementSeparator'], 'Number');
            }
            if (data.hasOwnProperty('decimalPointIndicator')) {
                obj['decimalPointIndicator'] = EdifactDecimalIndicator.constructFromObject(data['decimalPointIndicator']);
            }
            if (data.hasOwnProperty('protocolVersion')) {
                obj['protocolVersion'] = ApiClient.convertToType(data['protocolVersion'], 'Number');
            }
            if (data.hasOwnProperty('releaseIndicator')) {
                obj['releaseIndicator'] = ApiClient.convertToType(data['releaseIndicator'], 'Number');
            }
            if (data.hasOwnProperty('repetitionSeparator')) {
                obj['repetitionSeparator'] = ApiClient.convertToType(data['repetitionSeparator'], 'Number');
            }
            if (data.hasOwnProperty('segmentTerminator')) {
                obj['segmentTerminator'] = ApiClient.convertToType(data['segmentTerminator'], 'Number');
            }
            if (data.hasOwnProperty('segmentTerminatorSuffix')) {
                obj['segmentTerminatorSuffix'] = SegmentTerminatorSuffix.constructFromObject(data['segmentTerminatorSuffix']);
            }
            if (data.hasOwnProperty('serviceCodeListDirectoryVersion')) {
                obj['serviceCodeListDirectoryVersion'] = ApiClient.convertToType(data['serviceCodeListDirectoryVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EdifactFramingSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EdifactFramingSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['characterEncoding'] && !(typeof data['characterEncoding'] === 'string' || data['characterEncoding'] instanceof String)) {
            throw new Error("Expected the field `characterEncoding` to be a primitive type in the JSON string but got " + data['characterEncoding']);
        }
        // ensure the json data is a string
        if (data['serviceCodeListDirectoryVersion'] && !(typeof data['serviceCodeListDirectoryVersion'] === 'string' || data['serviceCodeListDirectoryVersion'] instanceof String)) {
            throw new Error("Expected the field `serviceCodeListDirectoryVersion` to be a primitive type in the JSON string but got " + data['serviceCodeListDirectoryVersion']);
        }

        return true;
    }


}



/**
 * The character encoding.
 * @member {String} characterEncoding
 */
EdifactFramingSettings.prototype['characterEncoding'] = undefined;

/**
 * @member {module:model/EdifactCharacterSet} characterSet
 */
EdifactFramingSettings.prototype['characterSet'] = undefined;

/**
 * The component separator.
 * @member {Number} componentSeparator
 */
EdifactFramingSettings.prototype['componentSeparator'] = undefined;

/**
 * The data element separator.
 * @member {Number} dataElementSeparator
 */
EdifactFramingSettings.prototype['dataElementSeparator'] = undefined;

/**
 * @member {module:model/EdifactDecimalIndicator} decimalPointIndicator
 */
EdifactFramingSettings.prototype['decimalPointIndicator'] = undefined;

/**
 * The protocol version.
 * @member {Number} protocolVersion
 */
EdifactFramingSettings.prototype['protocolVersion'] = undefined;

/**
 * The release indicator.
 * @member {Number} releaseIndicator
 */
EdifactFramingSettings.prototype['releaseIndicator'] = undefined;

/**
 * The repetition separator.
 * @member {Number} repetitionSeparator
 */
EdifactFramingSettings.prototype['repetitionSeparator'] = undefined;

/**
 * The segment terminator.
 * @member {Number} segmentTerminator
 */
EdifactFramingSettings.prototype['segmentTerminator'] = undefined;

/**
 * @member {module:model/SegmentTerminatorSuffix} segmentTerminatorSuffix
 */
EdifactFramingSettings.prototype['segmentTerminatorSuffix'] = undefined;

/**
 * The service code list directory version.
 * @member {String} serviceCodeListDirectoryVersion
 */
EdifactFramingSettings.prototype['serviceCodeListDirectoryVersion'] = undefined;






export default EdifactFramingSettings;

