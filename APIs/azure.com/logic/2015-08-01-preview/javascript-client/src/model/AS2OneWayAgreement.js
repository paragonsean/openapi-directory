/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AS2ProtocolSettings from './AS2ProtocolSettings';
import BusinessIdentity from './BusinessIdentity';

/**
 * The AS2OneWayAgreement model module.
 * @module model/AS2OneWayAgreement
 * @version 2015-08-01-preview
 */
class AS2OneWayAgreement {
    /**
     * Constructs a new <code>AS2OneWayAgreement</code>.
     * @alias module:model/AS2OneWayAgreement
     */
    constructor() { 
        
        AS2OneWayAgreement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AS2OneWayAgreement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AS2OneWayAgreement} obj Optional instance to populate.
     * @return {module:model/AS2OneWayAgreement} The populated <code>AS2OneWayAgreement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AS2OneWayAgreement();

            if (data.hasOwnProperty('protocolSettings')) {
                obj['protocolSettings'] = AS2ProtocolSettings.constructFromObject(data['protocolSettings']);
            }
            if (data.hasOwnProperty('receiverBusinessIdentity')) {
                obj['receiverBusinessIdentity'] = BusinessIdentity.constructFromObject(data['receiverBusinessIdentity']);
            }
            if (data.hasOwnProperty('senderBusinessIdentity')) {
                obj['senderBusinessIdentity'] = BusinessIdentity.constructFromObject(data['senderBusinessIdentity']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AS2OneWayAgreement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AS2OneWayAgreement</code>.
     */
    static validateJSON(data) {
        // validate the optional field `protocolSettings`
        if (data['protocolSettings']) { // data not null
          AS2ProtocolSettings.validateJSON(data['protocolSettings']);
        }
        // validate the optional field `receiverBusinessIdentity`
        if (data['receiverBusinessIdentity']) { // data not null
          BusinessIdentity.validateJSON(data['receiverBusinessIdentity']);
        }
        // validate the optional field `senderBusinessIdentity`
        if (data['senderBusinessIdentity']) { // data not null
          BusinessIdentity.validateJSON(data['senderBusinessIdentity']);
        }

        return true;
    }


}



/**
 * @member {module:model/AS2ProtocolSettings} protocolSettings
 */
AS2OneWayAgreement.prototype['protocolSettings'] = undefined;

/**
 * @member {module:model/BusinessIdentity} receiverBusinessIdentity
 */
AS2OneWayAgreement.prototype['receiverBusinessIdentity'] = undefined;

/**
 * @member {module:model/BusinessIdentity} senderBusinessIdentity
 */
AS2OneWayAgreement.prototype['senderBusinessIdentity'] = undefined;






export default AS2OneWayAgreement;

