/*
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CallbackUrl;
import org.openapitools.client.model.IntegrationAccount;
import org.openapitools.client.model.IntegrationAccountListResult;
import org.openapitools.client.model.ListCallbackUrlParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IntegrationAccountsApi
 */
@Disabled
public class IntegrationAccountsApiTest {

    private final IntegrationAccountsApi api = new IntegrationAccountsApi();

    /**
     * Creates or updates an integration account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationAccountsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String integrationAccountName = null;
        String apiVersion = null;
        IntegrationAccount integrationAccount = null;
        IntegrationAccount response = api.integrationAccountsCreateOrUpdate(subscriptionId, resourceGroupName, integrationAccountName, apiVersion, integrationAccount);
        // TODO: test validations
    }

    /**
     * Deletes an integration account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationAccountsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String integrationAccountName = null;
        String apiVersion = null;
        api.integrationAccountsDelete(subscriptionId, resourceGroupName, integrationAccountName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets an integration account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationAccountsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String integrationAccountName = null;
        String apiVersion = null;
        IntegrationAccount response = api.integrationAccountsGet(subscriptionId, resourceGroupName, integrationAccountName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of integration accounts by resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationAccountsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        Integer $top = null;
        IntegrationAccountListResult response = api.integrationAccountsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, $top);
        // TODO: test validations
    }

    /**
     * Gets a list of integration accounts by subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationAccountsListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        Integer $top = null;
        IntegrationAccountListResult response = api.integrationAccountsListBySubscription(subscriptionId, apiVersion, $top);
        // TODO: test validations
    }

    /**
     * Lists the integration account callback URL.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationAccountsListCallbackUrlTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String integrationAccountName = null;
        String apiVersion = null;
        ListCallbackUrlParameters parameters = null;
        CallbackUrl response = api.integrationAccountsListCallbackUrl(subscriptionId, resourceGroupName, integrationAccountName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Updates an integration account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void integrationAccountsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String integrationAccountName = null;
        String apiVersion = null;
        IntegrationAccount integrationAccount = null;
        IntegrationAccount response = api.integrationAccountsUpdate(subscriptionId, resourceGroupName, integrationAccountName, apiVersion, integrationAccount);
        // TODO: test validations
    }

}
