/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISegmentTerminatorSuffix.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISegmentTerminatorSuffix::OAISegmentTerminatorSuffix(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISegmentTerminatorSuffix::OAISegmentTerminatorSuffix() {
    this->initializeModel();
}

OAISegmentTerminatorSuffix::~OAISegmentTerminatorSuffix() {}

void OAISegmentTerminatorSuffix::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISegmentTerminatorSuffix::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISegmentTerminatorSuffix::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotSpecified", Qt::CaseInsensitive) == 0) {
        m_value = eOAISegmentTerminatorSuffix::NOTSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAISegmentTerminatorSuffix::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CR", Qt::CaseInsensitive) == 0) {
        m_value = eOAISegmentTerminatorSuffix::CR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LF", Qt::CaseInsensitive) == 0) {
        m_value = eOAISegmentTerminatorSuffix::LF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CRLF", Qt::CaseInsensitive) == 0) {
        m_value = eOAISegmentTerminatorSuffix::CRLF;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISegmentTerminatorSuffix::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISegmentTerminatorSuffix::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISegmentTerminatorSuffix::NOTSPECIFIED:
            val = "NotSpecified";
            break;
        case eOAISegmentTerminatorSuffix::NONE:
            val = "None";
            break;
        case eOAISegmentTerminatorSuffix::CR:
            val = "CR";
            break;
        case eOAISegmentTerminatorSuffix::LF:
            val = "LF";
            break;
        case eOAISegmentTerminatorSuffix::CRLF:
            val = "CRLF";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISegmentTerminatorSuffix::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISegmentTerminatorSuffix::eOAISegmentTerminatorSuffix OAISegmentTerminatorSuffix::getValue() const {
    return m_value;
}

void OAISegmentTerminatorSuffix::setValue(const OAISegmentTerminatorSuffix::eOAISegmentTerminatorSuffix& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISegmentTerminatorSuffix::isSet() const {
    
    return m_value_isSet;
}

bool OAISegmentTerminatorSuffix::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
