/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2015-08-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEdifactSchemaReference.h
 *
 * 
 */

#ifndef OAIEdifactSchemaReference_H
#define OAIEdifactSchemaReference_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEdifactSchemaReference : public OAIObject {
public:
    OAIEdifactSchemaReference();
    OAIEdifactSchemaReference(QString json);
    ~OAIEdifactSchemaReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssociationAssignedCode() const;
    void setAssociationAssignedCode(const QString &association_assigned_code);
    bool is_association_assigned_code_Set() const;
    bool is_association_assigned_code_Valid() const;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QString getMessageRelease() const;
    void setMessageRelease(const QString &message_release);
    bool is_message_release_Set() const;
    bool is_message_release_Valid() const;

    QString getMessageVersion() const;
    void setMessageVersion(const QString &message_version);
    bool is_message_version_Set() const;
    bool is_message_version_Valid() const;

    QString getSchemaName() const;
    void setSchemaName(const QString &schema_name);
    bool is_schema_name_Set() const;
    bool is_schema_name_Valid() const;

    QString getSenderApplicationId() const;
    void setSenderApplicationId(const QString &sender_application_id);
    bool is_sender_application_id_Set() const;
    bool is_sender_application_id_Valid() const;

    QString getSenderApplicationQualifier() const;
    void setSenderApplicationQualifier(const QString &sender_application_qualifier);
    bool is_sender_application_qualifier_Set() const;
    bool is_sender_application_qualifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_association_assigned_code;
    bool m_association_assigned_code_isSet;
    bool m_association_assigned_code_isValid;

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QString m_message_release;
    bool m_message_release_isSet;
    bool m_message_release_isValid;

    QString m_message_version;
    bool m_message_version_isSet;
    bool m_message_version_isValid;

    QString m_schema_name;
    bool m_schema_name_isSet;
    bool m_schema_name_isValid;

    QString m_sender_application_id;
    bool m_sender_application_id_isSet;
    bool m_sender_application_id_isValid;

    QString m_sender_application_qualifier;
    bool m_sender_application_qualifier_isSet;
    bool m_sender_application_qualifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEdifactSchemaReference)

#endif // OAIEdifactSchemaReference_H
