/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIX12ValidationSettings.h
 *
 * The X12 agreement validation settings.
 */

#ifndef OAIX12ValidationSettings_H
#define OAIX12ValidationSettings_H

#include <QJsonObject>

#include "OAITrailingSeparatorPolicy.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIX12ValidationSettings : public OAIObject {
public:
    OAIX12ValidationSettings();
    OAIX12ValidationSettings(QString json);
    ~OAIX12ValidationSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowLeadingAndTrailingSpacesAndZeroes() const;
    void setAllowLeadingAndTrailingSpacesAndZeroes(const bool &allow_leading_and_trailing_spaces_and_zeroes);
    bool is_allow_leading_and_trailing_spaces_and_zeroes_Set() const;
    bool is_allow_leading_and_trailing_spaces_and_zeroes_Valid() const;

    bool isCheckDuplicateGroupControlNumber() const;
    void setCheckDuplicateGroupControlNumber(const bool &check_duplicate_group_control_number);
    bool is_check_duplicate_group_control_number_Set() const;
    bool is_check_duplicate_group_control_number_Valid() const;

    bool isCheckDuplicateInterchangeControlNumber() const;
    void setCheckDuplicateInterchangeControlNumber(const bool &check_duplicate_interchange_control_number);
    bool is_check_duplicate_interchange_control_number_Set() const;
    bool is_check_duplicate_interchange_control_number_Valid() const;

    bool isCheckDuplicateTransactionSetControlNumber() const;
    void setCheckDuplicateTransactionSetControlNumber(const bool &check_duplicate_transaction_set_control_number);
    bool is_check_duplicate_transaction_set_control_number_Set() const;
    bool is_check_duplicate_transaction_set_control_number_Valid() const;

    qint32 getInterchangeControlNumberValidityDays() const;
    void setInterchangeControlNumberValidityDays(const qint32 &interchange_control_number_validity_days);
    bool is_interchange_control_number_validity_days_Set() const;
    bool is_interchange_control_number_validity_days_Valid() const;

    OAITrailingSeparatorPolicy getTrailingSeparatorPolicy() const;
    void setTrailingSeparatorPolicy(const OAITrailingSeparatorPolicy &trailing_separator_policy);
    bool is_trailing_separator_policy_Set() const;
    bool is_trailing_separator_policy_Valid() const;

    bool isTrimLeadingAndTrailingSpacesAndZeroes() const;
    void setTrimLeadingAndTrailingSpacesAndZeroes(const bool &trim_leading_and_trailing_spaces_and_zeroes);
    bool is_trim_leading_and_trailing_spaces_and_zeroes_Set() const;
    bool is_trim_leading_and_trailing_spaces_and_zeroes_Valid() const;

    bool isValidateCharacterSet() const;
    void setValidateCharacterSet(const bool &validate_character_set);
    bool is_validate_character_set_Set() const;
    bool is_validate_character_set_Valid() const;

    bool isValidateEdiTypes() const;
    void setValidateEdiTypes(const bool &validate_edi_types);
    bool is_validate_edi_types_Set() const;
    bool is_validate_edi_types_Valid() const;

    bool isValidateXsdTypes() const;
    void setValidateXsdTypes(const bool &validate_xsd_types);
    bool is_validate_xsd_types_Set() const;
    bool is_validate_xsd_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_leading_and_trailing_spaces_and_zeroes;
    bool m_allow_leading_and_trailing_spaces_and_zeroes_isSet;
    bool m_allow_leading_and_trailing_spaces_and_zeroes_isValid;

    bool m_check_duplicate_group_control_number;
    bool m_check_duplicate_group_control_number_isSet;
    bool m_check_duplicate_group_control_number_isValid;

    bool m_check_duplicate_interchange_control_number;
    bool m_check_duplicate_interchange_control_number_isSet;
    bool m_check_duplicate_interchange_control_number_isValid;

    bool m_check_duplicate_transaction_set_control_number;
    bool m_check_duplicate_transaction_set_control_number_isSet;
    bool m_check_duplicate_transaction_set_control_number_isValid;

    qint32 m_interchange_control_number_validity_days;
    bool m_interchange_control_number_validity_days_isSet;
    bool m_interchange_control_number_validity_days_isValid;

    OAITrailingSeparatorPolicy m_trailing_separator_policy;
    bool m_trailing_separator_policy_isSet;
    bool m_trailing_separator_policy_isValid;

    bool m_trim_leading_and_trailing_spaces_and_zeroes;
    bool m_trim_leading_and_trailing_spaces_and_zeroes_isSet;
    bool m_trim_leading_and_trailing_spaces_and_zeroes_isValid;

    bool m_validate_character_set;
    bool m_validate_character_set_isSet;
    bool m_validate_character_set_isValid;

    bool m_validate_edi_types;
    bool m_validate_edi_types_isSet;
    bool m_validate_edi_types_isValid;

    bool m_validate_xsd_types;
    bool m_validate_xsd_types_isSet;
    bool m_validate_xsd_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIX12ValidationSettings)

#endif // OAIX12ValidationSettings_H
