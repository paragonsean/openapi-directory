/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISkuName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISkuName::OAISkuName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISkuName::OAISkuName() {
    this->initializeModel();
}

OAISkuName::~OAISkuName() {}

void OAISkuName::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISkuName::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISkuName::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotSpecified", Qt::CaseInsensitive) == 0) {
        m_value = eOAISkuName::NOTSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Free", Qt::CaseInsensitive) == 0) {
        m_value = eOAISkuName::FREE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Shared", Qt::CaseInsensitive) == 0) {
        m_value = eOAISkuName::SHARED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Basic", Qt::CaseInsensitive) == 0) {
        m_value = eOAISkuName::BASIC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Standard", Qt::CaseInsensitive) == 0) {
        m_value = eOAISkuName::STANDARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Premium", Qt::CaseInsensitive) == 0) {
        m_value = eOAISkuName::PREMIUM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISkuName::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISkuName::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISkuName::NOTSPECIFIED:
            val = "NotSpecified";
            break;
        case eOAISkuName::FREE:
            val = "Free";
            break;
        case eOAISkuName::SHARED:
            val = "Shared";
            break;
        case eOAISkuName::BASIC:
            val = "Basic";
            break;
        case eOAISkuName::STANDARD:
            val = "Standard";
            break;
        case eOAISkuName::PREMIUM:
            val = "Premium";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISkuName::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISkuName::eOAISkuName OAISkuName::getValue() const {
    return m_value;
}

void OAISkuName::setValue(const OAISkuName::eOAISkuName& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISkuName::isSet() const {
    
    return m_value_isSet;
}

bool OAISkuName::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
