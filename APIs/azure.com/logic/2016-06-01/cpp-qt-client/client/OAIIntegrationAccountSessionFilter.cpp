/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIntegrationAccountSessionFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIntegrationAccountSessionFilter::OAIIntegrationAccountSessionFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIntegrationAccountSessionFilter::OAIIntegrationAccountSessionFilter() {
    this->initializeModel();
}

OAIIntegrationAccountSessionFilter::~OAIIntegrationAccountSessionFilter() {}

void OAIIntegrationAccountSessionFilter::initializeModel() {

    m_changed_time_isSet = false;
    m_changed_time_isValid = false;
}

void OAIIntegrationAccountSessionFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIntegrationAccountSessionFilter::fromJsonObject(QJsonObject json) {

    m_changed_time_isValid = ::OpenAPI::fromJsonValue(m_changed_time, json[QString("changedTime")]);
    m_changed_time_isSet = !json[QString("changedTime")].isNull() && m_changed_time_isValid;
}

QString OAIIntegrationAccountSessionFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIntegrationAccountSessionFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_changed_time_isSet) {
        obj.insert(QString("changedTime"), ::OpenAPI::toJsonValue(m_changed_time));
    }
    return obj;
}

QDateTime OAIIntegrationAccountSessionFilter::getChangedTime() const {
    return m_changed_time;
}
void OAIIntegrationAccountSessionFilter::setChangedTime(const QDateTime &changed_time) {
    m_changed_time = changed_time;
    m_changed_time_isSet = true;
}

bool OAIIntegrationAccountSessionFilter::is_changed_time_Set() const{
    return m_changed_time_isSet;
}

bool OAIIntegrationAccountSessionFilter::is_changed_time_Valid() const{
    return m_changed_time_isValid;
}

bool OAIIntegrationAccountSessionFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_changed_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIntegrationAccountSessionFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_changed_time_isValid && true;
}

} // namespace OpenAPI
