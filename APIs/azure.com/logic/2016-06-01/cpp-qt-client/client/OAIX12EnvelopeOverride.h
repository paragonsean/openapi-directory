/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIX12EnvelopeOverride.h
 *
 * The X12 envelope override settings.
 */

#ifndef OAIX12EnvelopeOverride_H
#define OAIX12EnvelopeOverride_H

#include <QJsonObject>

#include "OAIX12DateFormat.h"
#include "OAIX12TimeFormat.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIX12EnvelopeOverride : public OAIObject {
public:
    OAIX12EnvelopeOverride();
    OAIX12EnvelopeOverride(QString json);
    ~OAIX12EnvelopeOverride() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIX12DateFormat getDateFormat() const;
    void setDateFormat(const OAIX12DateFormat &date_format);
    bool is_date_format_Set() const;
    bool is_date_format_Valid() const;

    QString getFunctionalIdentifierCode() const;
    void setFunctionalIdentifierCode(const QString &functional_identifier_code);
    bool is_functional_identifier_code_Set() const;
    bool is_functional_identifier_code_Valid() const;

    QString getHeaderVersion() const;
    void setHeaderVersion(const QString &header_version);
    bool is_header_version_Set() const;
    bool is_header_version_Valid() const;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QString getProtocolVersion() const;
    void setProtocolVersion(const QString &protocol_version);
    bool is_protocol_version_Set() const;
    bool is_protocol_version_Valid() const;

    QString getReceiverApplicationId() const;
    void setReceiverApplicationId(const QString &receiver_application_id);
    bool is_receiver_application_id_Set() const;
    bool is_receiver_application_id_Valid() const;

    QString getResponsibleAgencyCode() const;
    void setResponsibleAgencyCode(const QString &responsible_agency_code);
    bool is_responsible_agency_code_Set() const;
    bool is_responsible_agency_code_Valid() const;

    QString getSenderApplicationId() const;
    void setSenderApplicationId(const QString &sender_application_id);
    bool is_sender_application_id_Set() const;
    bool is_sender_application_id_Valid() const;

    QString getTargetNamespace() const;
    void setTargetNamespace(const QString &target_namespace);
    bool is_target_namespace_Set() const;
    bool is_target_namespace_Valid() const;

    OAIX12TimeFormat getTimeFormat() const;
    void setTimeFormat(const OAIX12TimeFormat &time_format);
    bool is_time_format_Set() const;
    bool is_time_format_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIX12DateFormat m_date_format;
    bool m_date_format_isSet;
    bool m_date_format_isValid;

    QString m_functional_identifier_code;
    bool m_functional_identifier_code_isSet;
    bool m_functional_identifier_code_isValid;

    QString m_header_version;
    bool m_header_version_isSet;
    bool m_header_version_isValid;

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QString m_protocol_version;
    bool m_protocol_version_isSet;
    bool m_protocol_version_isValid;

    QString m_receiver_application_id;
    bool m_receiver_application_id_isSet;
    bool m_receiver_application_id_isValid;

    QString m_responsible_agency_code;
    bool m_responsible_agency_code_isSet;
    bool m_responsible_agency_code_isValid;

    QString m_sender_application_id;
    bool m_sender_application_id_isSet;
    bool m_sender_application_id_isValid;

    QString m_target_namespace;
    bool m_target_namespace_isSet;
    bool m_target_namespace_isValid;

    OAIX12TimeFormat m_time_format;
    bool m_time_format_isSet;
    bool m_time_format_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIX12EnvelopeOverride)

#endif // OAIX12EnvelopeOverride_H
