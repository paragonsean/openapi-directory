/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRosettaNetPipActivityType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRosettaNetPipActivityType::OAIRosettaNetPipActivityType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRosettaNetPipActivityType::OAIRosettaNetPipActivityType() {
    this->initializeModel();
}

OAIRosettaNetPipActivityType::~OAIRosettaNetPipActivityType() {}

void OAIRosettaNetPipActivityType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRosettaNetPipActivityType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRosettaNetPipActivityType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotSpecified", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRosettaNetPipActivityType::NOTSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("InformationDistribution", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRosettaNetPipActivityType::INFORMATIONDISTRIBUTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BusinessTransaction", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRosettaNetPipActivityType::BUSINESSTRANSACTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Notification", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRosettaNetPipActivityType::NOTIFICATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("QueryResponse", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRosettaNetPipActivityType::QUERYRESPONSE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RequestConfirm", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRosettaNetPipActivityType::REQUESTCONFIRM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RequestResponse", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRosettaNetPipActivityType::REQUESTRESPONSE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRosettaNetPipActivityType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRosettaNetPipActivityType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRosettaNetPipActivityType::NOTSPECIFIED:
            val = "NotSpecified";
            break;
        case eOAIRosettaNetPipActivityType::INFORMATIONDISTRIBUTION:
            val = "InformationDistribution";
            break;
        case eOAIRosettaNetPipActivityType::BUSINESSTRANSACTION:
            val = "BusinessTransaction";
            break;
        case eOAIRosettaNetPipActivityType::NOTIFICATION:
            val = "Notification";
            break;
        case eOAIRosettaNetPipActivityType::QUERYRESPONSE:
            val = "QueryResponse";
            break;
        case eOAIRosettaNetPipActivityType::REQUESTCONFIRM:
            val = "RequestConfirm";
            break;
        case eOAIRosettaNetPipActivityType::REQUESTRESPONSE:
            val = "RequestResponse";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRosettaNetPipActivityType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRosettaNetPipActivityType::eOAIRosettaNetPipActivityType OAIRosettaNetPipActivityType::getValue() const {
    return m_value;
}

void OAIRosettaNetPipActivityType::setValue(const OAIRosettaNetPipActivityType::eOAIRosettaNetPipActivityType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRosettaNetPipActivityType::isSet() const {
    
    return m_value_isSet;
}

bool OAIRosettaNetPipActivityType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
