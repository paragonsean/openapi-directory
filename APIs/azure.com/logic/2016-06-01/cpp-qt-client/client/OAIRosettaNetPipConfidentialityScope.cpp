/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRosettaNetPipConfidentialityScope.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRosettaNetPipConfidentialityScope::OAIRosettaNetPipConfidentialityScope(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRosettaNetPipConfidentialityScope::OAIRosettaNetPipConfidentialityScope() {
    this->initializeModel();
}

OAIRosettaNetPipConfidentialityScope::~OAIRosettaNetPipConfidentialityScope() {}

void OAIRosettaNetPipConfidentialityScope::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRosettaNetPipConfidentialityScope::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRosettaNetPipConfidentialityScope::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotSpecified", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRosettaNetPipConfidentialityScope::NOTSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRosettaNetPipConfidentialityScope::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Payload", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRosettaNetPipConfidentialityScope::PAYLOAD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PayloadContainer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRosettaNetPipConfidentialityScope::PAYLOADCONTAINER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRosettaNetPipConfidentialityScope::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRosettaNetPipConfidentialityScope::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRosettaNetPipConfidentialityScope::NOTSPECIFIED:
            val = "NotSpecified";
            break;
        case eOAIRosettaNetPipConfidentialityScope::NONE:
            val = "None";
            break;
        case eOAIRosettaNetPipConfidentialityScope::PAYLOAD:
            val = "Payload";
            break;
        case eOAIRosettaNetPipConfidentialityScope::PAYLOADCONTAINER:
            val = "PayloadContainer";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRosettaNetPipConfidentialityScope::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRosettaNetPipConfidentialityScope::eOAIRosettaNetPipConfidentialityScope OAIRosettaNetPipConfidentialityScope::getValue() const {
    return m_value;
}

void OAIRosettaNetPipConfidentialityScope::setValue(const OAIRosettaNetPipConfidentialityScope::eOAIRosettaNetPipConfidentialityScope& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRosettaNetPipConfidentialityScope::isSet() const {
    
    return m_value_isSet;
}

bool OAIRosettaNetPipConfidentialityScope::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
