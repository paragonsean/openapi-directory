/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIntegrationAccountRosettaNetProcessConfigurationProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIntegrationAccountRosettaNetProcessConfigurationProperties::OAIIntegrationAccountRosettaNetProcessConfigurationProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIntegrationAccountRosettaNetProcessConfigurationProperties::OAIIntegrationAccountRosettaNetProcessConfigurationProperties() {
    this->initializeModel();
}

OAIIntegrationAccountRosettaNetProcessConfigurationProperties::~OAIIntegrationAccountRosettaNetProcessConfigurationProperties() {}

void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::initializeModel() {

    m_activity_settings_isSet = false;
    m_activity_settings_isValid = false;

    m_changed_time_isSet = false;
    m_changed_time_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_initiator_role_settings_isSet = false;
    m_initiator_role_settings_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_process_code_isSet = false;
    m_process_code_isValid = false;

    m_process_name_isSet = false;
    m_process_name_isValid = false;

    m_process_version_isSet = false;
    m_process_version_isValid = false;

    m_responder_role_settings_isSet = false;
    m_responder_role_settings_isValid = false;
}

void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::fromJsonObject(QJsonObject json) {

    m_activity_settings_isValid = ::OpenAPI::fromJsonValue(m_activity_settings, json[QString("activitySettings")]);
    m_activity_settings_isSet = !json[QString("activitySettings")].isNull() && m_activity_settings_isValid;

    m_changed_time_isValid = ::OpenAPI::fromJsonValue(m_changed_time, json[QString("changedTime")]);
    m_changed_time_isSet = !json[QString("changedTime")].isNull() && m_changed_time_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("createdTime")]);
    m_created_time_isSet = !json[QString("createdTime")].isNull() && m_created_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_initiator_role_settings_isValid = ::OpenAPI::fromJsonValue(m_initiator_role_settings, json[QString("initiatorRoleSettings")]);
    m_initiator_role_settings_isSet = !json[QString("initiatorRoleSettings")].isNull() && m_initiator_role_settings_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_process_code_isValid = ::OpenAPI::fromJsonValue(m_process_code, json[QString("processCode")]);
    m_process_code_isSet = !json[QString("processCode")].isNull() && m_process_code_isValid;

    m_process_name_isValid = ::OpenAPI::fromJsonValue(m_process_name, json[QString("processName")]);
    m_process_name_isSet = !json[QString("processName")].isNull() && m_process_name_isValid;

    m_process_version_isValid = ::OpenAPI::fromJsonValue(m_process_version, json[QString("processVersion")]);
    m_process_version_isSet = !json[QString("processVersion")].isNull() && m_process_version_isValid;

    m_responder_role_settings_isValid = ::OpenAPI::fromJsonValue(m_responder_role_settings, json[QString("responderRoleSettings")]);
    m_responder_role_settings_isSet = !json[QString("responderRoleSettings")].isNull() && m_responder_role_settings_isValid;
}

QString OAIIntegrationAccountRosettaNetProcessConfigurationProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIntegrationAccountRosettaNetProcessConfigurationProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_settings.isSet()) {
        obj.insert(QString("activitySettings"), ::OpenAPI::toJsonValue(m_activity_settings));
    }
    if (m_changed_time_isSet) {
        obj.insert(QString("changedTime"), ::OpenAPI::toJsonValue(m_changed_time));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("createdTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_initiator_role_settings.isSet()) {
        obj.insert(QString("initiatorRoleSettings"), ::OpenAPI::toJsonValue(m_initiator_role_settings));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_process_code_isSet) {
        obj.insert(QString("processCode"), ::OpenAPI::toJsonValue(m_process_code));
    }
    if (m_process_name_isSet) {
        obj.insert(QString("processName"), ::OpenAPI::toJsonValue(m_process_name));
    }
    if (m_process_version_isSet) {
        obj.insert(QString("processVersion"), ::OpenAPI::toJsonValue(m_process_version));
    }
    if (m_responder_role_settings.isSet()) {
        obj.insert(QString("responderRoleSettings"), ::OpenAPI::toJsonValue(m_responder_role_settings));
    }
    return obj;
}

OAIRosettaNetPipActivitySettings OAIIntegrationAccountRosettaNetProcessConfigurationProperties::getActivitySettings() const {
    return m_activity_settings;
}
void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::setActivitySettings(const OAIRosettaNetPipActivitySettings &activity_settings) {
    m_activity_settings = activity_settings;
    m_activity_settings_isSet = true;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_activity_settings_Set() const{
    return m_activity_settings_isSet;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_activity_settings_Valid() const{
    return m_activity_settings_isValid;
}

QDateTime OAIIntegrationAccountRosettaNetProcessConfigurationProperties::getChangedTime() const {
    return m_changed_time;
}
void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::setChangedTime(const QDateTime &changed_time) {
    m_changed_time = changed_time;
    m_changed_time_isSet = true;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_changed_time_Set() const{
    return m_changed_time_isSet;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_changed_time_Valid() const{
    return m_changed_time_isValid;
}

QDateTime OAIIntegrationAccountRosettaNetProcessConfigurationProperties::getCreatedTime() const {
    return m_created_time;
}
void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAIIntegrationAccountRosettaNetProcessConfigurationProperties::getDescription() const {
    return m_description;
}
void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_description_Set() const{
    return m_description_isSet;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_description_Valid() const{
    return m_description_isValid;
}

OAIRosettaNetPipRoleSettings OAIIntegrationAccountRosettaNetProcessConfigurationProperties::getInitiatorRoleSettings() const {
    return m_initiator_role_settings;
}
void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::setInitiatorRoleSettings(const OAIRosettaNetPipRoleSettings &initiator_role_settings) {
    m_initiator_role_settings = initiator_role_settings;
    m_initiator_role_settings_isSet = true;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_initiator_role_settings_Set() const{
    return m_initiator_role_settings_isSet;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_initiator_role_settings_Valid() const{
    return m_initiator_role_settings_isValid;
}

QMap<QString, QString> OAIIntegrationAccountRosettaNetProcessConfigurationProperties::getMetadata() const {
    return m_metadata;
}
void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::setMetadata(const QMap<QString, QString> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIIntegrationAccountRosettaNetProcessConfigurationProperties::getProcessCode() const {
    return m_process_code;
}
void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::setProcessCode(const QString &process_code) {
    m_process_code = process_code;
    m_process_code_isSet = true;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_process_code_Set() const{
    return m_process_code_isSet;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_process_code_Valid() const{
    return m_process_code_isValid;
}

QString OAIIntegrationAccountRosettaNetProcessConfigurationProperties::getProcessName() const {
    return m_process_name;
}
void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::setProcessName(const QString &process_name) {
    m_process_name = process_name;
    m_process_name_isSet = true;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_process_name_Set() const{
    return m_process_name_isSet;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_process_name_Valid() const{
    return m_process_name_isValid;
}

QString OAIIntegrationAccountRosettaNetProcessConfigurationProperties::getProcessVersion() const {
    return m_process_version;
}
void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::setProcessVersion(const QString &process_version) {
    m_process_version = process_version;
    m_process_version_isSet = true;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_process_version_Set() const{
    return m_process_version_isSet;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_process_version_Valid() const{
    return m_process_version_isValid;
}

OAIRosettaNetPipRoleSettings OAIIntegrationAccountRosettaNetProcessConfigurationProperties::getResponderRoleSettings() const {
    return m_responder_role_settings;
}
void OAIIntegrationAccountRosettaNetProcessConfigurationProperties::setResponderRoleSettings(const OAIRosettaNetPipRoleSettings &responder_role_settings) {
    m_responder_role_settings = responder_role_settings;
    m_responder_role_settings_isSet = true;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_responder_role_settings_Set() const{
    return m_responder_role_settings_isSet;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::is_responder_role_settings_Valid() const{
    return m_responder_role_settings_isValid;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_initiator_role_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_process_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_process_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_process_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_responder_role_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIntegrationAccountRosettaNetProcessConfigurationProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_activity_settings_isValid && m_initiator_role_settings_isValid && m_process_code_isValid && m_process_name_isValid && m_process_version_isValid && m_responder_role_settings_isValid && true;
}

} // namespace OpenAPI
