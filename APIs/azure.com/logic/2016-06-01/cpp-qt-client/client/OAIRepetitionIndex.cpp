/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepetitionIndex.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepetitionIndex::OAIRepetitionIndex(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepetitionIndex::OAIRepetitionIndex() {
    this->initializeModel();
}

OAIRepetitionIndex::~OAIRepetitionIndex() {}

void OAIRepetitionIndex::initializeModel() {

    m_item_index_isSet = false;
    m_item_index_isValid = false;

    m_scope_name_isSet = false;
    m_scope_name_isValid = false;
}

void OAIRepetitionIndex::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepetitionIndex::fromJsonObject(QJsonObject json) {

    m_item_index_isValid = ::OpenAPI::fromJsonValue(m_item_index, json[QString("itemIndex")]);
    m_item_index_isSet = !json[QString("itemIndex")].isNull() && m_item_index_isValid;

    m_scope_name_isValid = ::OpenAPI::fromJsonValue(m_scope_name, json[QString("scopeName")]);
    m_scope_name_isSet = !json[QString("scopeName")].isNull() && m_scope_name_isValid;
}

QString OAIRepetitionIndex::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepetitionIndex::asJsonObject() const {
    QJsonObject obj;
    if (m_item_index_isSet) {
        obj.insert(QString("itemIndex"), ::OpenAPI::toJsonValue(m_item_index));
    }
    if (m_scope_name_isSet) {
        obj.insert(QString("scopeName"), ::OpenAPI::toJsonValue(m_scope_name));
    }
    return obj;
}

qint32 OAIRepetitionIndex::getItemIndex() const {
    return m_item_index;
}
void OAIRepetitionIndex::setItemIndex(const qint32 &item_index) {
    m_item_index = item_index;
    m_item_index_isSet = true;
}

bool OAIRepetitionIndex::is_item_index_Set() const{
    return m_item_index_isSet;
}

bool OAIRepetitionIndex::is_item_index_Valid() const{
    return m_item_index_isValid;
}

QString OAIRepetitionIndex::getScopeName() const {
    return m_scope_name;
}
void OAIRepetitionIndex::setScopeName(const QString &scope_name) {
    m_scope_name = scope_name;
    m_scope_name_isSet = true;
}

bool OAIRepetitionIndex::is_scope_name_Set() const{
    return m_scope_name_isSet;
}

bool OAIRepetitionIndex::is_scope_name_Valid() const{
    return m_scope_name_isValid;
}

bool OAIRepetitionIndex::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_item_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepetitionIndex::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_item_index_isValid && true;
}

} // namespace OpenAPI
