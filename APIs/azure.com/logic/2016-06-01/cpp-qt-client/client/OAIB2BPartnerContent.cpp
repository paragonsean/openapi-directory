/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIB2BPartnerContent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIB2BPartnerContent::OAIB2BPartnerContent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIB2BPartnerContent::OAIB2BPartnerContent() {
    this->initializeModel();
}

OAIB2BPartnerContent::~OAIB2BPartnerContent() {}

void OAIB2BPartnerContent::initializeModel() {

    m_business_identities_isSet = false;
    m_business_identities_isValid = false;
}

void OAIB2BPartnerContent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIB2BPartnerContent::fromJsonObject(QJsonObject json) {

    m_business_identities_isValid = ::OpenAPI::fromJsonValue(m_business_identities, json[QString("businessIdentities")]);
    m_business_identities_isSet = !json[QString("businessIdentities")].isNull() && m_business_identities_isValid;
}

QString OAIB2BPartnerContent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIB2BPartnerContent::asJsonObject() const {
    QJsonObject obj;
    if (m_business_identities.size() > 0) {
        obj.insert(QString("businessIdentities"), ::OpenAPI::toJsonValue(m_business_identities));
    }
    return obj;
}

QList<OAIBusinessIdentity> OAIB2BPartnerContent::getBusinessIdentities() const {
    return m_business_identities;
}
void OAIB2BPartnerContent::setBusinessIdentities(const QList<OAIBusinessIdentity> &business_identities) {
    m_business_identities = business_identities;
    m_business_identities_isSet = true;
}

bool OAIB2BPartnerContent::is_business_identities_Set() const{
    return m_business_identities_isSet;
}

bool OAIB2BPartnerContent::is_business_identities_Valid() const{
    return m_business_identities_isValid;
}

bool OAIB2BPartnerContent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_business_identities.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIB2BPartnerContent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
