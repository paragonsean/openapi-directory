/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAS2ProtocolSettings.h
 *
 * The AS2 agreement protocol settings.
 */

#ifndef OAIAS2ProtocolSettings_H
#define OAIAS2ProtocolSettings_H

#include <QJsonObject>

#include "OAIAS2AcknowledgementConnectionSettings.h"
#include "OAIAS2EnvelopeSettings.h"
#include "OAIAS2ErrorSettings.h"
#include "OAIAS2MdnSettings.h"
#include "OAIAS2MessageConnectionSettings.h"
#include "OAIAS2SecuritySettings.h"
#include "OAIAS2ValidationSettings.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAS2AcknowledgementConnectionSettings;
class OAIAS2EnvelopeSettings;
class OAIAS2ErrorSettings;
class OAIAS2MdnSettings;
class OAIAS2MessageConnectionSettings;
class OAIAS2SecuritySettings;
class OAIAS2ValidationSettings;

class OAIAS2ProtocolSettings : public OAIObject {
public:
    OAIAS2ProtocolSettings();
    OAIAS2ProtocolSettings(QString json);
    ~OAIAS2ProtocolSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAS2AcknowledgementConnectionSettings getAcknowledgementConnectionSettings() const;
    void setAcknowledgementConnectionSettings(const OAIAS2AcknowledgementConnectionSettings &acknowledgement_connection_settings);
    bool is_acknowledgement_connection_settings_Set() const;
    bool is_acknowledgement_connection_settings_Valid() const;

    OAIAS2EnvelopeSettings getEnvelopeSettings() const;
    void setEnvelopeSettings(const OAIAS2EnvelopeSettings &envelope_settings);
    bool is_envelope_settings_Set() const;
    bool is_envelope_settings_Valid() const;

    OAIAS2ErrorSettings getErrorSettings() const;
    void setErrorSettings(const OAIAS2ErrorSettings &error_settings);
    bool is_error_settings_Set() const;
    bool is_error_settings_Valid() const;

    OAIAS2MdnSettings getMdnSettings() const;
    void setMdnSettings(const OAIAS2MdnSettings &mdn_settings);
    bool is_mdn_settings_Set() const;
    bool is_mdn_settings_Valid() const;

    OAIAS2MessageConnectionSettings getMessageConnectionSettings() const;
    void setMessageConnectionSettings(const OAIAS2MessageConnectionSettings &message_connection_settings);
    bool is_message_connection_settings_Set() const;
    bool is_message_connection_settings_Valid() const;

    OAIAS2SecuritySettings getSecuritySettings() const;
    void setSecuritySettings(const OAIAS2SecuritySettings &security_settings);
    bool is_security_settings_Set() const;
    bool is_security_settings_Valid() const;

    OAIAS2ValidationSettings getValidationSettings() const;
    void setValidationSettings(const OAIAS2ValidationSettings &validation_settings);
    bool is_validation_settings_Set() const;
    bool is_validation_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAS2AcknowledgementConnectionSettings m_acknowledgement_connection_settings;
    bool m_acknowledgement_connection_settings_isSet;
    bool m_acknowledgement_connection_settings_isValid;

    OAIAS2EnvelopeSettings m_envelope_settings;
    bool m_envelope_settings_isSet;
    bool m_envelope_settings_isValid;

    OAIAS2ErrorSettings m_error_settings;
    bool m_error_settings_isSet;
    bool m_error_settings_isValid;

    OAIAS2MdnSettings m_mdn_settings;
    bool m_mdn_settings_isSet;
    bool m_mdn_settings_isValid;

    OAIAS2MessageConnectionSettings m_message_connection_settings;
    bool m_message_connection_settings_isSet;
    bool m_message_connection_settings_isValid;

    OAIAS2SecuritySettings m_security_settings;
    bool m_security_settings_isSet;
    bool m_security_settings_isValid;

    OAIAS2ValidationSettings m_validation_settings;
    bool m_validation_settings_isSet;
    bool m_validation_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAS2ProtocolSettings)

#endif // OAIAS2ProtocolSettings_H
