/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAS2EnvelopeSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAS2EnvelopeSettings::OAIAS2EnvelopeSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAS2EnvelopeSettings::OAIAS2EnvelopeSettings() {
    this->initializeModel();
}

OAIAS2EnvelopeSettings::~OAIAS2EnvelopeSettings() {}

void OAIAS2EnvelopeSettings::initializeModel() {

    m_autogenerate_file_name_isSet = false;
    m_autogenerate_file_name_isValid = false;

    m_file_name_template_isSet = false;
    m_file_name_template_isValid = false;

    m_message_content_type_isSet = false;
    m_message_content_type_isValid = false;

    m_suspend_message_on_file_name_generation_error_isSet = false;
    m_suspend_message_on_file_name_generation_error_isValid = false;

    m_transmit_file_name_in_mime_header_isSet = false;
    m_transmit_file_name_in_mime_header_isValid = false;
}

void OAIAS2EnvelopeSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAS2EnvelopeSettings::fromJsonObject(QJsonObject json) {

    m_autogenerate_file_name_isValid = ::OpenAPI::fromJsonValue(m_autogenerate_file_name, json[QString("autogenerateFileName")]);
    m_autogenerate_file_name_isSet = !json[QString("autogenerateFileName")].isNull() && m_autogenerate_file_name_isValid;

    m_file_name_template_isValid = ::OpenAPI::fromJsonValue(m_file_name_template, json[QString("fileNameTemplate")]);
    m_file_name_template_isSet = !json[QString("fileNameTemplate")].isNull() && m_file_name_template_isValid;

    m_message_content_type_isValid = ::OpenAPI::fromJsonValue(m_message_content_type, json[QString("messageContentType")]);
    m_message_content_type_isSet = !json[QString("messageContentType")].isNull() && m_message_content_type_isValid;

    m_suspend_message_on_file_name_generation_error_isValid = ::OpenAPI::fromJsonValue(m_suspend_message_on_file_name_generation_error, json[QString("suspendMessageOnFileNameGenerationError")]);
    m_suspend_message_on_file_name_generation_error_isSet = !json[QString("suspendMessageOnFileNameGenerationError")].isNull() && m_suspend_message_on_file_name_generation_error_isValid;

    m_transmit_file_name_in_mime_header_isValid = ::OpenAPI::fromJsonValue(m_transmit_file_name_in_mime_header, json[QString("transmitFileNameInMimeHeader")]);
    m_transmit_file_name_in_mime_header_isSet = !json[QString("transmitFileNameInMimeHeader")].isNull() && m_transmit_file_name_in_mime_header_isValid;
}

QString OAIAS2EnvelopeSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAS2EnvelopeSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_autogenerate_file_name_isSet) {
        obj.insert(QString("autogenerateFileName"), ::OpenAPI::toJsonValue(m_autogenerate_file_name));
    }
    if (m_file_name_template_isSet) {
        obj.insert(QString("fileNameTemplate"), ::OpenAPI::toJsonValue(m_file_name_template));
    }
    if (m_message_content_type_isSet) {
        obj.insert(QString("messageContentType"), ::OpenAPI::toJsonValue(m_message_content_type));
    }
    if (m_suspend_message_on_file_name_generation_error_isSet) {
        obj.insert(QString("suspendMessageOnFileNameGenerationError"), ::OpenAPI::toJsonValue(m_suspend_message_on_file_name_generation_error));
    }
    if (m_transmit_file_name_in_mime_header_isSet) {
        obj.insert(QString("transmitFileNameInMimeHeader"), ::OpenAPI::toJsonValue(m_transmit_file_name_in_mime_header));
    }
    return obj;
}

bool OAIAS2EnvelopeSettings::isAutogenerateFileName() const {
    return m_autogenerate_file_name;
}
void OAIAS2EnvelopeSettings::setAutogenerateFileName(const bool &autogenerate_file_name) {
    m_autogenerate_file_name = autogenerate_file_name;
    m_autogenerate_file_name_isSet = true;
}

bool OAIAS2EnvelopeSettings::is_autogenerate_file_name_Set() const{
    return m_autogenerate_file_name_isSet;
}

bool OAIAS2EnvelopeSettings::is_autogenerate_file_name_Valid() const{
    return m_autogenerate_file_name_isValid;
}

QString OAIAS2EnvelopeSettings::getFileNameTemplate() const {
    return m_file_name_template;
}
void OAIAS2EnvelopeSettings::setFileNameTemplate(const QString &file_name_template) {
    m_file_name_template = file_name_template;
    m_file_name_template_isSet = true;
}

bool OAIAS2EnvelopeSettings::is_file_name_template_Set() const{
    return m_file_name_template_isSet;
}

bool OAIAS2EnvelopeSettings::is_file_name_template_Valid() const{
    return m_file_name_template_isValid;
}

QString OAIAS2EnvelopeSettings::getMessageContentType() const {
    return m_message_content_type;
}
void OAIAS2EnvelopeSettings::setMessageContentType(const QString &message_content_type) {
    m_message_content_type = message_content_type;
    m_message_content_type_isSet = true;
}

bool OAIAS2EnvelopeSettings::is_message_content_type_Set() const{
    return m_message_content_type_isSet;
}

bool OAIAS2EnvelopeSettings::is_message_content_type_Valid() const{
    return m_message_content_type_isValid;
}

bool OAIAS2EnvelopeSettings::isSuspendMessageOnFileNameGenerationError() const {
    return m_suspend_message_on_file_name_generation_error;
}
void OAIAS2EnvelopeSettings::setSuspendMessageOnFileNameGenerationError(const bool &suspend_message_on_file_name_generation_error) {
    m_suspend_message_on_file_name_generation_error = suspend_message_on_file_name_generation_error;
    m_suspend_message_on_file_name_generation_error_isSet = true;
}

bool OAIAS2EnvelopeSettings::is_suspend_message_on_file_name_generation_error_Set() const{
    return m_suspend_message_on_file_name_generation_error_isSet;
}

bool OAIAS2EnvelopeSettings::is_suspend_message_on_file_name_generation_error_Valid() const{
    return m_suspend_message_on_file_name_generation_error_isValid;
}

bool OAIAS2EnvelopeSettings::isTransmitFileNameInMimeHeader() const {
    return m_transmit_file_name_in_mime_header;
}
void OAIAS2EnvelopeSettings::setTransmitFileNameInMimeHeader(const bool &transmit_file_name_in_mime_header) {
    m_transmit_file_name_in_mime_header = transmit_file_name_in_mime_header;
    m_transmit_file_name_in_mime_header_isSet = true;
}

bool OAIAS2EnvelopeSettings::is_transmit_file_name_in_mime_header_Set() const{
    return m_transmit_file_name_in_mime_header_isSet;
}

bool OAIAS2EnvelopeSettings::is_transmit_file_name_in_mime_header_Valid() const{
    return m_transmit_file_name_in_mime_header_isValid;
}

bool OAIAS2EnvelopeSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_autogenerate_file_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_name_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_content_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suspend_message_on_file_name_generation_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transmit_file_name_in_mime_header_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAS2EnvelopeSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_autogenerate_file_name_isValid && m_file_name_template_isValid && m_message_content_type_isValid && m_suspend_message_on_file_name_generation_error_isValid && m_transmit_file_name_in_mime_header_isValid && true;
}

} // namespace OpenAPI
