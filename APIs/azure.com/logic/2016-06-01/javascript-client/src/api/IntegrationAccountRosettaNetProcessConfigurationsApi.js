/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import IntegrationAccountRosettaNetProcessConfiguration from '../model/IntegrationAccountRosettaNetProcessConfiguration';
import IntegrationAccountRosettaNetProcessConfigurationListResult from '../model/IntegrationAccountRosettaNetProcessConfigurationListResult';

/**
* IntegrationAccountRosettaNetProcessConfigurations service.
* @module api/IntegrationAccountRosettaNetProcessConfigurationsApi
* @version 2016-06-01
*/
export default class IntegrationAccountRosettaNetProcessConfigurationsApi {

    /**
    * Constructs a new IntegrationAccountRosettaNetProcessConfigurationsApi. 
    * @alias module:api/IntegrationAccountRosettaNetProcessConfigurationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the rosettaNetProcessConfigurationsCreateOrUpdate operation.
     * @callback module:api/IntegrationAccountRosettaNetProcessConfigurationsApi~rosettaNetProcessConfigurationsCreateOrUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IntegrationAccountRosettaNetProcessConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates an integration account RosettaNetProcessConfiguration.
     * @param {String} subscriptionId The subscription id.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} integrationAccountName The integration account name.
     * @param {String} rosettaNetProcessConfigurationName The integration account RosettaNet ProcessConfiguration name.
     * @param {String} apiVersion The API version.
     * @param {module:model/IntegrationAccountRosettaNetProcessConfiguration} rosettaNetProcessConfiguration The integration account RosettaNet ProcessConfiguration.
     * @param {module:api/IntegrationAccountRosettaNetProcessConfigurationsApi~rosettaNetProcessConfigurationsCreateOrUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IntegrationAccountRosettaNetProcessConfiguration}
     */
    rosettaNetProcessConfigurationsCreateOrUpdate(subscriptionId, resourceGroupName, integrationAccountName, rosettaNetProcessConfigurationName, apiVersion, rosettaNetProcessConfiguration, callback) {
      let postBody = rosettaNetProcessConfiguration;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling rosettaNetProcessConfigurationsCreateOrUpdate");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling rosettaNetProcessConfigurationsCreateOrUpdate");
      }
      // verify the required parameter 'integrationAccountName' is set
      if (integrationAccountName === undefined || integrationAccountName === null) {
        throw new Error("Missing the required parameter 'integrationAccountName' when calling rosettaNetProcessConfigurationsCreateOrUpdate");
      }
      // verify the required parameter 'rosettaNetProcessConfigurationName' is set
      if (rosettaNetProcessConfigurationName === undefined || rosettaNetProcessConfigurationName === null) {
        throw new Error("Missing the required parameter 'rosettaNetProcessConfigurationName' when calling rosettaNetProcessConfigurationsCreateOrUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling rosettaNetProcessConfigurationsCreateOrUpdate");
      }
      // verify the required parameter 'rosettaNetProcessConfiguration' is set
      if (rosettaNetProcessConfiguration === undefined || rosettaNetProcessConfiguration === null) {
        throw new Error("Missing the required parameter 'rosettaNetProcessConfiguration' when calling rosettaNetProcessConfigurationsCreateOrUpdate");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'integrationAccountName': integrationAccountName,
        'rosettaNetProcessConfigurationName': rosettaNetProcessConfigurationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = IntegrationAccountRosettaNetProcessConfiguration;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/rosettanetprocessconfigurations/{rosettaNetProcessConfigurationName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rosettaNetProcessConfigurationsDelete operation.
     * @callback module:api/IntegrationAccountRosettaNetProcessConfigurationsApi~rosettaNetProcessConfigurationsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an integration account RosettaNet ProcessConfiguration.
     * @param {String} subscriptionId The subscription id.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} integrationAccountName The integration account name.
     * @param {String} rosettaNetProcessConfigurationName The integration account RosettaNetProcessConfiguration name.
     * @param {String} apiVersion The API version.
     * @param {module:api/IntegrationAccountRosettaNetProcessConfigurationsApi~rosettaNetProcessConfigurationsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    rosettaNetProcessConfigurationsDelete(subscriptionId, resourceGroupName, integrationAccountName, rosettaNetProcessConfigurationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling rosettaNetProcessConfigurationsDelete");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling rosettaNetProcessConfigurationsDelete");
      }
      // verify the required parameter 'integrationAccountName' is set
      if (integrationAccountName === undefined || integrationAccountName === null) {
        throw new Error("Missing the required parameter 'integrationAccountName' when calling rosettaNetProcessConfigurationsDelete");
      }
      // verify the required parameter 'rosettaNetProcessConfigurationName' is set
      if (rosettaNetProcessConfigurationName === undefined || rosettaNetProcessConfigurationName === null) {
        throw new Error("Missing the required parameter 'rosettaNetProcessConfigurationName' when calling rosettaNetProcessConfigurationsDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling rosettaNetProcessConfigurationsDelete");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'integrationAccountName': integrationAccountName,
        'rosettaNetProcessConfigurationName': rosettaNetProcessConfigurationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/rosettanetprocessconfigurations/{rosettaNetProcessConfigurationName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rosettaNetProcessConfigurationsGet operation.
     * @callback module:api/IntegrationAccountRosettaNetProcessConfigurationsApi~rosettaNetProcessConfigurationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IntegrationAccountRosettaNetProcessConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an integration account RosettaNetProcessConfiguration.
     * @param {String} subscriptionId The subscription id.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} integrationAccountName The integration account name.
     * @param {String} rosettaNetProcessConfigurationName The integration account RosettaNetProcessConfiguration name.
     * @param {String} apiVersion The API version.
     * @param {module:api/IntegrationAccountRosettaNetProcessConfigurationsApi~rosettaNetProcessConfigurationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IntegrationAccountRosettaNetProcessConfiguration}
     */
    rosettaNetProcessConfigurationsGet(subscriptionId, resourceGroupName, integrationAccountName, rosettaNetProcessConfigurationName, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling rosettaNetProcessConfigurationsGet");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling rosettaNetProcessConfigurationsGet");
      }
      // verify the required parameter 'integrationAccountName' is set
      if (integrationAccountName === undefined || integrationAccountName === null) {
        throw new Error("Missing the required parameter 'integrationAccountName' when calling rosettaNetProcessConfigurationsGet");
      }
      // verify the required parameter 'rosettaNetProcessConfigurationName' is set
      if (rosettaNetProcessConfigurationName === undefined || rosettaNetProcessConfigurationName === null) {
        throw new Error("Missing the required parameter 'rosettaNetProcessConfigurationName' when calling rosettaNetProcessConfigurationsGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling rosettaNetProcessConfigurationsGet");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'integrationAccountName': integrationAccountName,
        'rosettaNetProcessConfigurationName': rosettaNetProcessConfigurationName
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IntegrationAccountRosettaNetProcessConfiguration;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/rosettanetprocessconfigurations/{rosettaNetProcessConfigurationName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rosettaNetProcessConfigurationsListByIntegrationAccounts operation.
     * @callback module:api/IntegrationAccountRosettaNetProcessConfigurationsApi~rosettaNetProcessConfigurationsListByIntegrationAccountsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IntegrationAccountRosettaNetProcessConfigurationListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of integration account RosettaNet process configurations.
     * @param {String} subscriptionId The subscription id.
     * @param {String} resourceGroupName The resource group name.
     * @param {String} integrationAccountName The integration account name.
     * @param {String} apiVersion The API version.
     * @param {Object} opts Optional parameters
     * @param {Number} [top] The number of items to be included in the result.
     * @param {String} [filter] The filter to apply on the operation.
     * @param {module:api/IntegrationAccountRosettaNetProcessConfigurationsApi~rosettaNetProcessConfigurationsListByIntegrationAccountsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IntegrationAccountRosettaNetProcessConfigurationListResult}
     */
    rosettaNetProcessConfigurationsListByIntegrationAccounts(subscriptionId, resourceGroupName, integrationAccountName, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling rosettaNetProcessConfigurationsListByIntegrationAccounts");
      }
      // verify the required parameter 'resourceGroupName' is set
      if (resourceGroupName === undefined || resourceGroupName === null) {
        throw new Error("Missing the required parameter 'resourceGroupName' when calling rosettaNetProcessConfigurationsListByIntegrationAccounts");
      }
      // verify the required parameter 'integrationAccountName' is set
      if (integrationAccountName === undefined || integrationAccountName === null) {
        throw new Error("Missing the required parameter 'integrationAccountName' when calling rosettaNetProcessConfigurationsListByIntegrationAccounts");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling rosettaNetProcessConfigurationsListByIntegrationAccounts");
      }

      let pathParams = {
        'subscriptionId': subscriptionId,
        'resourceGroupName': resourceGroupName,
        'integrationAccountName': integrationAccountName
      };
      let queryParams = {
        'api-version': apiVersion,
        '$top': opts['top'],
        '$filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IntegrationAccountRosettaNetProcessConfigurationListResult;
      return this.apiClient.callApi(
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/rosettanetprocessconfigurations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
