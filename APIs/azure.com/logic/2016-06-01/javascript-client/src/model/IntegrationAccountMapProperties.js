/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentLink from './ContentLink';
import IntegrationAccountMapPropertiesParametersSchema from './IntegrationAccountMapPropertiesParametersSchema';
import MapType from './MapType';

/**
 * The IntegrationAccountMapProperties model module.
 * @module model/IntegrationAccountMapProperties
 * @version 2016-06-01
 */
class IntegrationAccountMapProperties {
    /**
     * Constructs a new <code>IntegrationAccountMapProperties</code>.
     * The integration account map.
     * @alias module:model/IntegrationAccountMapProperties
     * @param mapType {module:model/MapType} 
     */
    constructor(mapType) { 
        
        IntegrationAccountMapProperties.initialize(this, mapType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, mapType) { 
        obj['mapType'] = mapType;
    }

    /**
     * Constructs a <code>IntegrationAccountMapProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntegrationAccountMapProperties} obj Optional instance to populate.
     * @return {module:model/IntegrationAccountMapProperties} The populated <code>IntegrationAccountMapProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntegrationAccountMapProperties();

            if (data.hasOwnProperty('changedTime')) {
                obj['changedTime'] = ApiClient.convertToType(data['changedTime'], 'Date');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], Object);
            }
            if (data.hasOwnProperty('contentLink')) {
                obj['contentLink'] = ContentLink.constructFromObject(data['contentLink']);
            }
            if (data.hasOwnProperty('contentType')) {
                obj['contentType'] = ApiClient.convertToType(data['contentType'], 'String');
            }
            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('mapType')) {
                obj['mapType'] = MapType.constructFromObject(data['mapType']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('parametersSchema')) {
                obj['parametersSchema'] = IntegrationAccountMapPropertiesParametersSchema.constructFromObject(data['parametersSchema']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntegrationAccountMapProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntegrationAccountMapProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IntegrationAccountMapProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `contentLink`
        if (data['contentLink']) { // data not null
          ContentLink.validateJSON(data['contentLink']);
        }
        // ensure the json data is a string
        if (data['contentType'] && !(typeof data['contentType'] === 'string' || data['contentType'] instanceof String)) {
            throw new Error("Expected the field `contentType` to be a primitive type in the JSON string but got " + data['contentType']);
        }
        // validate the optional field `parametersSchema`
        if (data['parametersSchema']) { // data not null
          IntegrationAccountMapPropertiesParametersSchema.validateJSON(data['parametersSchema']);
        }

        return true;
    }


}

IntegrationAccountMapProperties.RequiredProperties = ["mapType"];

/**
 * The changed time.
 * @member {Date} changedTime
 */
IntegrationAccountMapProperties.prototype['changedTime'] = undefined;

/**
 * The content.
 * @member {Object} content
 */
IntegrationAccountMapProperties.prototype['content'] = undefined;

/**
 * @member {module:model/ContentLink} contentLink
 */
IntegrationAccountMapProperties.prototype['contentLink'] = undefined;

/**
 * The content type.
 * @member {String} contentType
 */
IntegrationAccountMapProperties.prototype['contentType'] = undefined;

/**
 * The created time.
 * @member {Date} createdTime
 */
IntegrationAccountMapProperties.prototype['createdTime'] = undefined;

/**
 * @member {module:model/MapType} mapType
 */
IntegrationAccountMapProperties.prototype['mapType'] = undefined;

/**
 * The metadata.
 * @member {Object} metadata
 */
IntegrationAccountMapProperties.prototype['metadata'] = undefined;

/**
 * @member {module:model/IntegrationAccountMapPropertiesParametersSchema} parametersSchema
 */
IntegrationAccountMapProperties.prototype['parametersSchema'] = undefined;






export default IntegrationAccountMapProperties;

