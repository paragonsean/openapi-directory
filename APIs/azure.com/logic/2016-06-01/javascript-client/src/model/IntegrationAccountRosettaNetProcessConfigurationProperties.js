/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RosettaNetPipActivitySettings from './RosettaNetPipActivitySettings';
import RosettaNetPipRoleSettings from './RosettaNetPipRoleSettings';

/**
 * The IntegrationAccountRosettaNetProcessConfigurationProperties model module.
 * @module model/IntegrationAccountRosettaNetProcessConfigurationProperties
 * @version 2016-06-01
 */
class IntegrationAccountRosettaNetProcessConfigurationProperties {
    /**
     * Constructs a new <code>IntegrationAccountRosettaNetProcessConfigurationProperties</code>.
     * The integration account RosettaNet process configuration properties.
     * @alias module:model/IntegrationAccountRosettaNetProcessConfigurationProperties
     * @param activitySettings {module:model/RosettaNetPipActivitySettings} 
     * @param initiatorRoleSettings {module:model/RosettaNetPipRoleSettings} 
     * @param processCode {String} The integration account RosettaNet process code.
     * @param processName {String} The integration account RosettaNet process name.
     * @param processVersion {String} The integration account RosettaNet process version.
     * @param responderRoleSettings {module:model/RosettaNetPipRoleSettings} 
     */
    constructor(activitySettings, initiatorRoleSettings, processCode, processName, processVersion, responderRoleSettings) { 
        
        IntegrationAccountRosettaNetProcessConfigurationProperties.initialize(this, activitySettings, initiatorRoleSettings, processCode, processName, processVersion, responderRoleSettings);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, activitySettings, initiatorRoleSettings, processCode, processName, processVersion, responderRoleSettings) { 
        obj['activitySettings'] = activitySettings;
        obj['initiatorRoleSettings'] = initiatorRoleSettings;
        obj['processCode'] = processCode;
        obj['processName'] = processName;
        obj['processVersion'] = processVersion;
        obj['responderRoleSettings'] = responderRoleSettings;
    }

    /**
     * Constructs a <code>IntegrationAccountRosettaNetProcessConfigurationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntegrationAccountRosettaNetProcessConfigurationProperties} obj Optional instance to populate.
     * @return {module:model/IntegrationAccountRosettaNetProcessConfigurationProperties} The populated <code>IntegrationAccountRosettaNetProcessConfigurationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntegrationAccountRosettaNetProcessConfigurationProperties();

            if (data.hasOwnProperty('activitySettings')) {
                obj['activitySettings'] = RosettaNetPipActivitySettings.constructFromObject(data['activitySettings']);
            }
            if (data.hasOwnProperty('changedTime')) {
                obj['changedTime'] = ApiClient.convertToType(data['changedTime'], 'Date');
            }
            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('initiatorRoleSettings')) {
                obj['initiatorRoleSettings'] = RosettaNetPipRoleSettings.constructFromObject(data['initiatorRoleSettings']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('processCode')) {
                obj['processCode'] = ApiClient.convertToType(data['processCode'], 'String');
            }
            if (data.hasOwnProperty('processName')) {
                obj['processName'] = ApiClient.convertToType(data['processName'], 'String');
            }
            if (data.hasOwnProperty('processVersion')) {
                obj['processVersion'] = ApiClient.convertToType(data['processVersion'], 'String');
            }
            if (data.hasOwnProperty('responderRoleSettings')) {
                obj['responderRoleSettings'] = RosettaNetPipRoleSettings.constructFromObject(data['responderRoleSettings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntegrationAccountRosettaNetProcessConfigurationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntegrationAccountRosettaNetProcessConfigurationProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IntegrationAccountRosettaNetProcessConfigurationProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `activitySettings`
        if (data['activitySettings']) { // data not null
          RosettaNetPipActivitySettings.validateJSON(data['activitySettings']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `initiatorRoleSettings`
        if (data['initiatorRoleSettings']) { // data not null
          RosettaNetPipRoleSettings.validateJSON(data['initiatorRoleSettings']);
        }
        // ensure the json data is a string
        if (data['processCode'] && !(typeof data['processCode'] === 'string' || data['processCode'] instanceof String)) {
            throw new Error("Expected the field `processCode` to be a primitive type in the JSON string but got " + data['processCode']);
        }
        // ensure the json data is a string
        if (data['processName'] && !(typeof data['processName'] === 'string' || data['processName'] instanceof String)) {
            throw new Error("Expected the field `processName` to be a primitive type in the JSON string but got " + data['processName']);
        }
        // ensure the json data is a string
        if (data['processVersion'] && !(typeof data['processVersion'] === 'string' || data['processVersion'] instanceof String)) {
            throw new Error("Expected the field `processVersion` to be a primitive type in the JSON string but got " + data['processVersion']);
        }
        // validate the optional field `responderRoleSettings`
        if (data['responderRoleSettings']) { // data not null
          RosettaNetPipRoleSettings.validateJSON(data['responderRoleSettings']);
        }

        return true;
    }


}

IntegrationAccountRosettaNetProcessConfigurationProperties.RequiredProperties = ["activitySettings", "initiatorRoleSettings", "processCode", "processName", "processVersion", "responderRoleSettings"];

/**
 * @member {module:model/RosettaNetPipActivitySettings} activitySettings
 */
IntegrationAccountRosettaNetProcessConfigurationProperties.prototype['activitySettings'] = undefined;

/**
 * The changed time.
 * @member {Date} changedTime
 */
IntegrationAccountRosettaNetProcessConfigurationProperties.prototype['changedTime'] = undefined;

/**
 * The created time.
 * @member {Date} createdTime
 */
IntegrationAccountRosettaNetProcessConfigurationProperties.prototype['createdTime'] = undefined;

/**
 * The integration account RosettaNet ProcessConfiguration properties.
 * @member {String} description
 */
IntegrationAccountRosettaNetProcessConfigurationProperties.prototype['description'] = undefined;

/**
 * @member {module:model/RosettaNetPipRoleSettings} initiatorRoleSettings
 */
IntegrationAccountRosettaNetProcessConfigurationProperties.prototype['initiatorRoleSettings'] = undefined;

/**
 * The metadata.
 * @member {Object.<String, String>} metadata
 */
IntegrationAccountRosettaNetProcessConfigurationProperties.prototype['metadata'] = undefined;

/**
 * The integration account RosettaNet process code.
 * @member {String} processCode
 */
IntegrationAccountRosettaNetProcessConfigurationProperties.prototype['processCode'] = undefined;

/**
 * The integration account RosettaNet process name.
 * @member {String} processName
 */
IntegrationAccountRosettaNetProcessConfigurationProperties.prototype['processName'] = undefined;

/**
 * The integration account RosettaNet process version.
 * @member {String} processVersion
 */
IntegrationAccountRosettaNetProcessConfigurationProperties.prototype['processVersion'] = undefined;

/**
 * @member {module:model/RosettaNetPipRoleSettings} responderRoleSettings
 */
IntegrationAccountRosettaNetProcessConfigurationProperties.prototype['responderRoleSettings'] = undefined;






export default IntegrationAccountRosettaNetProcessConfigurationProperties;

