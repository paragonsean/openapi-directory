/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AS2OneWayAgreement from './AS2OneWayAgreement';

/**
 * The AS2AgreementContent model module.
 * @module model/AS2AgreementContent
 * @version 2016-06-01
 */
class AS2AgreementContent {
    /**
     * Constructs a new <code>AS2AgreementContent</code>.
     * The integration account AS2 agreement content.
     * @alias module:model/AS2AgreementContent
     * @param receiveAgreement {module:model/AS2OneWayAgreement} 
     * @param sendAgreement {module:model/AS2OneWayAgreement} 
     */
    constructor(receiveAgreement, sendAgreement) { 
        
        AS2AgreementContent.initialize(this, receiveAgreement, sendAgreement);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, receiveAgreement, sendAgreement) { 
        obj['receiveAgreement'] = receiveAgreement;
        obj['sendAgreement'] = sendAgreement;
    }

    /**
     * Constructs a <code>AS2AgreementContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AS2AgreementContent} obj Optional instance to populate.
     * @return {module:model/AS2AgreementContent} The populated <code>AS2AgreementContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AS2AgreementContent();

            if (data.hasOwnProperty('receiveAgreement')) {
                obj['receiveAgreement'] = AS2OneWayAgreement.constructFromObject(data['receiveAgreement']);
            }
            if (data.hasOwnProperty('sendAgreement')) {
                obj['sendAgreement'] = AS2OneWayAgreement.constructFromObject(data['sendAgreement']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AS2AgreementContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AS2AgreementContent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AS2AgreementContent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `receiveAgreement`
        if (data['receiveAgreement']) { // data not null
          AS2OneWayAgreement.validateJSON(data['receiveAgreement']);
        }
        // validate the optional field `sendAgreement`
        if (data['sendAgreement']) { // data not null
          AS2OneWayAgreement.validateJSON(data['sendAgreement']);
        }

        return true;
    }


}

AS2AgreementContent.RequiredProperties = ["receiveAgreement", "sendAgreement"];

/**
 * @member {module:model/AS2OneWayAgreement} receiveAgreement
 */
AS2AgreementContent.prototype['receiveAgreement'] = undefined;

/**
 * @member {module:model/AS2OneWayAgreement} sendAgreement
 */
AS2AgreementContent.prototype['sendAgreement'] = undefined;






export default AS2AgreementContent;

