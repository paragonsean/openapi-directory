# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.correlation import Correlation
from openapi_server.models.resource_reference import ResourceReference
from openapi_server.models.workflow_output_parameter import WorkflowOutputParameter
from openapi_server.models.workflow_run_trigger import WorkflowRunTrigger
from openapi_server.models.workflow_status import WorkflowStatus
from openapi_server import util


class WorkflowRunProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, correlation: Correlation=None, correlation_id: str=None, end_time: datetime=None, error: object=None, outputs: Dict[str, WorkflowOutputParameter]=None, response: WorkflowRunTrigger=None, start_time: datetime=None, status: WorkflowStatus=None, trigger: WorkflowRunTrigger=None, wait_end_time: datetime=None, workflow: ResourceReference=None):
        """WorkflowRunProperties - a model defined in OpenAPI

        :param code: The code of this WorkflowRunProperties.
        :param correlation: The correlation of this WorkflowRunProperties.
        :param correlation_id: The correlation_id of this WorkflowRunProperties.
        :param end_time: The end_time of this WorkflowRunProperties.
        :param error: The error of this WorkflowRunProperties.
        :param outputs: The outputs of this WorkflowRunProperties.
        :param response: The response of this WorkflowRunProperties.
        :param start_time: The start_time of this WorkflowRunProperties.
        :param status: The status of this WorkflowRunProperties.
        :param trigger: The trigger of this WorkflowRunProperties.
        :param wait_end_time: The wait_end_time of this WorkflowRunProperties.
        :param workflow: The workflow of this WorkflowRunProperties.
        """
        self.openapi_types = {
            'code': str,
            'correlation': Correlation,
            'correlation_id': str,
            'end_time': datetime,
            'error': object,
            'outputs': Dict[str, WorkflowOutputParameter],
            'response': WorkflowRunTrigger,
            'start_time': datetime,
            'status': WorkflowStatus,
            'trigger': WorkflowRunTrigger,
            'wait_end_time': datetime,
            'workflow': ResourceReference
        }

        self.attribute_map = {
            'code': 'code',
            'correlation': 'correlation',
            'correlation_id': 'correlationId',
            'end_time': 'endTime',
            'error': 'error',
            'outputs': 'outputs',
            'response': 'response',
            'start_time': 'startTime',
            'status': 'status',
            'trigger': 'trigger',
            'wait_end_time': 'waitEndTime',
            'workflow': 'workflow'
        }

        self._code = code
        self._correlation = correlation
        self._correlation_id = correlation_id
        self._end_time = end_time
        self._error = error
        self._outputs = outputs
        self._response = response
        self._start_time = start_time
        self._status = status
        self._trigger = trigger
        self._wait_end_time = wait_end_time
        self._workflow = workflow

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkflowRunProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkflowRunProperties of this WorkflowRunProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this WorkflowRunProperties.

        Gets the code.

        :return: The code of this WorkflowRunProperties.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this WorkflowRunProperties.

        Gets the code.

        :param code: The code of this WorkflowRunProperties.
        :type code: str
        """

        self._code = code

    @property
    def correlation(self):
        """Gets the correlation of this WorkflowRunProperties.


        :return: The correlation of this WorkflowRunProperties.
        :rtype: Correlation
        """
        return self._correlation

    @correlation.setter
    def correlation(self, correlation):
        """Sets the correlation of this WorkflowRunProperties.


        :param correlation: The correlation of this WorkflowRunProperties.
        :type correlation: Correlation
        """

        self._correlation = correlation

    @property
    def correlation_id(self):
        """Gets the correlation_id of this WorkflowRunProperties.

        Gets the correlation id.

        :return: The correlation_id of this WorkflowRunProperties.
        :rtype: str
        """
        return self._correlation_id

    @correlation_id.setter
    def correlation_id(self, correlation_id):
        """Sets the correlation_id of this WorkflowRunProperties.

        Gets the correlation id.

        :param correlation_id: The correlation_id of this WorkflowRunProperties.
        :type correlation_id: str
        """

        self._correlation_id = correlation_id

    @property
    def end_time(self):
        """Gets the end_time of this WorkflowRunProperties.

        Gets the end time.

        :return: The end_time of this WorkflowRunProperties.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this WorkflowRunProperties.

        Gets the end time.

        :param end_time: The end_time of this WorkflowRunProperties.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def error(self):
        """Gets the error of this WorkflowRunProperties.


        :return: The error of this WorkflowRunProperties.
        :rtype: object
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this WorkflowRunProperties.


        :param error: The error of this WorkflowRunProperties.
        :type error: object
        """

        self._error = error

    @property
    def outputs(self):
        """Gets the outputs of this WorkflowRunProperties.

        Gets the outputs.

        :return: The outputs of this WorkflowRunProperties.
        :rtype: Dict[str, WorkflowOutputParameter]
        """
        return self._outputs

    @outputs.setter
    def outputs(self, outputs):
        """Sets the outputs of this WorkflowRunProperties.

        Gets the outputs.

        :param outputs: The outputs of this WorkflowRunProperties.
        :type outputs: Dict[str, WorkflowOutputParameter]
        """

        self._outputs = outputs

    @property
    def response(self):
        """Gets the response of this WorkflowRunProperties.


        :return: The response of this WorkflowRunProperties.
        :rtype: WorkflowRunTrigger
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this WorkflowRunProperties.


        :param response: The response of this WorkflowRunProperties.
        :type response: WorkflowRunTrigger
        """

        self._response = response

    @property
    def start_time(self):
        """Gets the start_time of this WorkflowRunProperties.

        Gets the start time.

        :return: The start_time of this WorkflowRunProperties.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this WorkflowRunProperties.

        Gets the start time.

        :param start_time: The start_time of this WorkflowRunProperties.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def status(self):
        """Gets the status of this WorkflowRunProperties.


        :return: The status of this WorkflowRunProperties.
        :rtype: WorkflowStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this WorkflowRunProperties.


        :param status: The status of this WorkflowRunProperties.
        :type status: WorkflowStatus
        """

        self._status = status

    @property
    def trigger(self):
        """Gets the trigger of this WorkflowRunProperties.


        :return: The trigger of this WorkflowRunProperties.
        :rtype: WorkflowRunTrigger
        """
        return self._trigger

    @trigger.setter
    def trigger(self, trigger):
        """Sets the trigger of this WorkflowRunProperties.


        :param trigger: The trigger of this WorkflowRunProperties.
        :type trigger: WorkflowRunTrigger
        """

        self._trigger = trigger

    @property
    def wait_end_time(self):
        """Gets the wait_end_time of this WorkflowRunProperties.

        Gets the wait end time.

        :return: The wait_end_time of this WorkflowRunProperties.
        :rtype: datetime
        """
        return self._wait_end_time

    @wait_end_time.setter
    def wait_end_time(self, wait_end_time):
        """Sets the wait_end_time of this WorkflowRunProperties.

        Gets the wait end time.

        :param wait_end_time: The wait_end_time of this WorkflowRunProperties.
        :type wait_end_time: datetime
        """

        self._wait_end_time = wait_end_time

    @property
    def workflow(self):
        """Gets the workflow of this WorkflowRunProperties.


        :return: The workflow of this WorkflowRunProperties.
        :rtype: ResourceReference
        """
        return self._workflow

    @workflow.setter
    def workflow(self, workflow):
        """Sets the workflow of this WorkflowRunProperties.


        :param workflow: The workflow of this WorkflowRunProperties.
        :type workflow: ResourceReference
        """

        self._workflow = workflow
