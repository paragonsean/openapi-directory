# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_hash import ContentHash
from openapi_server import util


class ContentLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_hash: ContentHash=None, content_size: int=None, content_version: str=None, metadata: object=None, uri: str=None):
        """ContentLink - a model defined in OpenAPI

        :param content_hash: The content_hash of this ContentLink.
        :param content_size: The content_size of this ContentLink.
        :param content_version: The content_version of this ContentLink.
        :param metadata: The metadata of this ContentLink.
        :param uri: The uri of this ContentLink.
        """
        self.openapi_types = {
            'content_hash': ContentHash,
            'content_size': int,
            'content_version': str,
            'metadata': object,
            'uri': str
        }

        self.attribute_map = {
            'content_hash': 'contentHash',
            'content_size': 'contentSize',
            'content_version': 'contentVersion',
            'metadata': 'metadata',
            'uri': 'uri'
        }

        self._content_hash = content_hash
        self._content_size = content_size
        self._content_version = content_version
        self._metadata = metadata
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentLink of this ContentLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_hash(self):
        """Gets the content_hash of this ContentLink.


        :return: The content_hash of this ContentLink.
        :rtype: ContentHash
        """
        return self._content_hash

    @content_hash.setter
    def content_hash(self, content_hash):
        """Sets the content_hash of this ContentLink.


        :param content_hash: The content_hash of this ContentLink.
        :type content_hash: ContentHash
        """

        self._content_hash = content_hash

    @property
    def content_size(self):
        """Gets the content_size of this ContentLink.

        The content size.

        :return: The content_size of this ContentLink.
        :rtype: int
        """
        return self._content_size

    @content_size.setter
    def content_size(self, content_size):
        """Sets the content_size of this ContentLink.

        The content size.

        :param content_size: The content_size of this ContentLink.
        :type content_size: int
        """

        self._content_size = content_size

    @property
    def content_version(self):
        """Gets the content_version of this ContentLink.

        The content version.

        :return: The content_version of this ContentLink.
        :rtype: str
        """
        return self._content_version

    @content_version.setter
    def content_version(self, content_version):
        """Sets the content_version of this ContentLink.

        The content version.

        :param content_version: The content_version of this ContentLink.
        :type content_version: str
        """

        self._content_version = content_version

    @property
    def metadata(self):
        """Gets the metadata of this ContentLink.


        :return: The metadata of this ContentLink.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ContentLink.


        :param metadata: The metadata of this ContentLink.
        :type metadata: object
        """

        self._metadata = metadata

    @property
    def uri(self):
        """Gets the uri of this ContentLink.

        The content link URI.

        :return: The uri of this ContentLink.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ContentLink.

        The content link URI.

        :param uri: The uri of this ContentLink.
        :type uri: str
        """

        self._uri = uri
