# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.b2_b_partner_content import B2BPartnerContent
from openapi_server import util


class PartnerContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, b2b: B2BPartnerContent=None):
        """PartnerContent - a model defined in OpenAPI

        :param b2b: The b2b of this PartnerContent.
        """
        self.openapi_types = {
            'b2b': B2BPartnerContent
        }

        self.attribute_map = {
            'b2b': 'b2b'
        }

        self._b2b = b2b

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PartnerContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PartnerContent of this PartnerContent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def b2b(self):
        """Gets the b2b of this PartnerContent.


        :return: The b2b of this PartnerContent.
        :rtype: B2BPartnerContent
        """
        return self._b2b

    @b2b.setter
    def b2b(self, b2b):
        """Sets the b2b of this PartnerContent.


        :param b2b: The b2b of this PartnerContent.
        :type b2b: B2BPartnerContent
        """

        self._b2b = b2b
