# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RosettaNetPipAcknowledgmentOfReceiptSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_non_repudiation_required: bool=None, time_to_acknowledge_in_seconds: int=None):
        """RosettaNetPipAcknowledgmentOfReceiptSettings - a model defined in OpenAPI

        :param is_non_repudiation_required: The is_non_repudiation_required of this RosettaNetPipAcknowledgmentOfReceiptSettings.
        :param time_to_acknowledge_in_seconds: The time_to_acknowledge_in_seconds of this RosettaNetPipAcknowledgmentOfReceiptSettings.
        """
        self.openapi_types = {
            'is_non_repudiation_required': bool,
            'time_to_acknowledge_in_seconds': int
        }

        self.attribute_map = {
            'is_non_repudiation_required': 'isNonRepudiationRequired',
            'time_to_acknowledge_in_seconds': 'timeToAcknowledgeInSeconds'
        }

        self._is_non_repudiation_required = is_non_repudiation_required
        self._time_to_acknowledge_in_seconds = time_to_acknowledge_in_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RosettaNetPipAcknowledgmentOfReceiptSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RosettaNetPipAcknowledgmentOfReceiptSettings of this RosettaNetPipAcknowledgmentOfReceiptSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_non_repudiation_required(self):
        """Gets the is_non_repudiation_required of this RosettaNetPipAcknowledgmentOfReceiptSettings.

        The non-repudiation is required or not.

        :return: The is_non_repudiation_required of this RosettaNetPipAcknowledgmentOfReceiptSettings.
        :rtype: bool
        """
        return self._is_non_repudiation_required

    @is_non_repudiation_required.setter
    def is_non_repudiation_required(self, is_non_repudiation_required):
        """Sets the is_non_repudiation_required of this RosettaNetPipAcknowledgmentOfReceiptSettings.

        The non-repudiation is required or not.

        :param is_non_repudiation_required: The is_non_repudiation_required of this RosettaNetPipAcknowledgmentOfReceiptSettings.
        :type is_non_repudiation_required: bool
        """
        if is_non_repudiation_required is None:
            raise ValueError("Invalid value for `is_non_repudiation_required`, must not be `None`")

        self._is_non_repudiation_required = is_non_repudiation_required

    @property
    def time_to_acknowledge_in_seconds(self):
        """Gets the time_to_acknowledge_in_seconds of this RosettaNetPipAcknowledgmentOfReceiptSettings.

        The time to acknowledge in seconds.

        :return: The time_to_acknowledge_in_seconds of this RosettaNetPipAcknowledgmentOfReceiptSettings.
        :rtype: int
        """
        return self._time_to_acknowledge_in_seconds

    @time_to_acknowledge_in_seconds.setter
    def time_to_acknowledge_in_seconds(self, time_to_acknowledge_in_seconds):
        """Sets the time_to_acknowledge_in_seconds of this RosettaNetPipAcknowledgmentOfReceiptSettings.

        The time to acknowledge in seconds.

        :param time_to_acknowledge_in_seconds: The time_to_acknowledge_in_seconds of this RosettaNetPipAcknowledgmentOfReceiptSettings.
        :type time_to_acknowledge_in_seconds: int
        """
        if time_to_acknowledge_in_seconds is None:
            raise ValueError("Invalid value for `time_to_acknowledge_in_seconds`, must not be `None`")

        self._time_to_acknowledge_in_seconds = time_to_acknowledge_in_seconds
