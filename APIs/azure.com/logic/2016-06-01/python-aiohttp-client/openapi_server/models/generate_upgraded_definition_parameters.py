# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GenerateUpgradedDefinitionParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_schema_version: str=None):
        """GenerateUpgradedDefinitionParameters - a model defined in OpenAPI

        :param target_schema_version: The target_schema_version of this GenerateUpgradedDefinitionParameters.
        """
        self.openapi_types = {
            'target_schema_version': str
        }

        self.attribute_map = {
            'target_schema_version': 'targetSchemaVersion'
        }

        self._target_schema_version = target_schema_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateUpgradedDefinitionParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateUpgradedDefinitionParameters of this GenerateUpgradedDefinitionParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_schema_version(self):
        """Gets the target_schema_version of this GenerateUpgradedDefinitionParameters.

        The target schema version.

        :return: The target_schema_version of this GenerateUpgradedDefinitionParameters.
        :rtype: str
        """
        return self._target_schema_version

    @target_schema_version.setter
    def target_schema_version(self, target_schema_version):
        """Sets the target_schema_version of this GenerateUpgradedDefinitionParameters.

        The target schema version.

        :param target_schema_version: The target_schema_version of this GenerateUpgradedDefinitionParameters.
        :type target_schema_version: str
        """

        self._target_schema_version = target_schema_version
