# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TrackingRecordType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NOTSPECIFIED = 'NotSpecified'
    CUSTOM = 'Custom'
    AS2MESSAGE = 'AS2Message'
    AS2MDN = 'AS2MDN'
    X12INTERCHANGE = 'X12Interchange'
    X12FUNCTIONALGROUP = 'X12FunctionalGroup'
    X12TRANSACTIONSET = 'X12TransactionSet'
    X12INTERCHANGEACKNOWLEDGMENT = 'X12InterchangeAcknowledgment'
    X12FUNCTIONALGROUPACKNOWLEDGMENT = 'X12FunctionalGroupAcknowledgment'
    X12TRANSACTIONSETACKNOWLEDGMENT = 'X12TransactionSetAcknowledgment'
    EDIFACTINTERCHANGE = 'EdifactInterchange'
    EDIFACTFUNCTIONALGROUP = 'EdifactFunctionalGroup'
    EDIFACTTRANSACTIONSET = 'EdifactTransactionSet'
    EDIFACTINTERCHANGEACKNOWLEDGMENT = 'EdifactInterchangeAcknowledgment'
    EDIFACTFUNCTIONALGROUPACKNOWLEDGMENT = 'EdifactFunctionalGroupAcknowledgment'
    EDIFACTTRANSACTIONSETACKNOWLEDGMENT = 'EdifactTransactionSetAcknowledgment'

    def __init__(self):
        """TrackingRecordType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrackingRecordType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrackingRecordType of this TrackingRecordType.
        """
        return util.deserialize_model(dikt, cls)
