# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_release_criteria import BatchReleaseCriteria
from openapi_server import util


class BatchConfigurationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_group_name: str=None, changed_time: datetime=None, created_time: datetime=None, release_criteria: BatchReleaseCriteria=None, metadata: object=None):
        """BatchConfigurationProperties - a model defined in OpenAPI

        :param batch_group_name: The batch_group_name of this BatchConfigurationProperties.
        :param changed_time: The changed_time of this BatchConfigurationProperties.
        :param created_time: The created_time of this BatchConfigurationProperties.
        :param release_criteria: The release_criteria of this BatchConfigurationProperties.
        :param metadata: The metadata of this BatchConfigurationProperties.
        """
        self.openapi_types = {
            'batch_group_name': str,
            'changed_time': datetime,
            'created_time': datetime,
            'release_criteria': BatchReleaseCriteria,
            'metadata': object
        }

        self.attribute_map = {
            'batch_group_name': 'batchGroupName',
            'changed_time': 'changedTime',
            'created_time': 'createdTime',
            'release_criteria': 'releaseCriteria',
            'metadata': 'metadata'
        }

        self._batch_group_name = batch_group_name
        self._changed_time = changed_time
        self._created_time = created_time
        self._release_criteria = release_criteria
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchConfigurationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchConfigurationProperties of this BatchConfigurationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_group_name(self):
        """Gets the batch_group_name of this BatchConfigurationProperties.

        The name of the batch group.

        :return: The batch_group_name of this BatchConfigurationProperties.
        :rtype: str
        """
        return self._batch_group_name

    @batch_group_name.setter
    def batch_group_name(self, batch_group_name):
        """Sets the batch_group_name of this BatchConfigurationProperties.

        The name of the batch group.

        :param batch_group_name: The batch_group_name of this BatchConfigurationProperties.
        :type batch_group_name: str
        """
        if batch_group_name is None:
            raise ValueError("Invalid value for `batch_group_name`, must not be `None`")

        self._batch_group_name = batch_group_name

    @property
    def changed_time(self):
        """Gets the changed_time of this BatchConfigurationProperties.

        The changed time.

        :return: The changed_time of this BatchConfigurationProperties.
        :rtype: datetime
        """
        return self._changed_time

    @changed_time.setter
    def changed_time(self, changed_time):
        """Sets the changed_time of this BatchConfigurationProperties.

        The changed time.

        :param changed_time: The changed_time of this BatchConfigurationProperties.
        :type changed_time: datetime
        """

        self._changed_time = changed_time

    @property
    def created_time(self):
        """Gets the created_time of this BatchConfigurationProperties.

        The created time.

        :return: The created_time of this BatchConfigurationProperties.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this BatchConfigurationProperties.

        The created time.

        :param created_time: The created_time of this BatchConfigurationProperties.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def release_criteria(self):
        """Gets the release_criteria of this BatchConfigurationProperties.


        :return: The release_criteria of this BatchConfigurationProperties.
        :rtype: BatchReleaseCriteria
        """
        return self._release_criteria

    @release_criteria.setter
    def release_criteria(self, release_criteria):
        """Sets the release_criteria of this BatchConfigurationProperties.


        :param release_criteria: The release_criteria of this BatchConfigurationProperties.
        :type release_criteria: BatchReleaseCriteria
        """
        if release_criteria is None:
            raise ValueError("Invalid value for `release_criteria`, must not be `None`")

        self._release_criteria = release_criteria

    @property
    def metadata(self):
        """Gets the metadata of this BatchConfigurationProperties.


        :return: The metadata of this BatchConfigurationProperties.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this BatchConfigurationProperties.


        :param metadata: The metadata of this BatchConfigurationProperties.
        :type metadata: object
        """

        self._metadata = metadata
