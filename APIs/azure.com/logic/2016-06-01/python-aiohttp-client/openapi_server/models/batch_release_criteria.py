# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.workflow_trigger_recurrence import WorkflowTriggerRecurrence
from openapi_server import util


class BatchReleaseCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_size: int=None, message_count: int=None, recurrence: WorkflowTriggerRecurrence=None):
        """BatchReleaseCriteria - a model defined in OpenAPI

        :param batch_size: The batch_size of this BatchReleaseCriteria.
        :param message_count: The message_count of this BatchReleaseCriteria.
        :param recurrence: The recurrence of this BatchReleaseCriteria.
        """
        self.openapi_types = {
            'batch_size': int,
            'message_count': int,
            'recurrence': WorkflowTriggerRecurrence
        }

        self.attribute_map = {
            'batch_size': 'batchSize',
            'message_count': 'messageCount',
            'recurrence': 'recurrence'
        }

        self._batch_size = batch_size
        self._message_count = message_count
        self._recurrence = recurrence

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchReleaseCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchReleaseCriteria of this BatchReleaseCriteria.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_size(self):
        """Gets the batch_size of this BatchReleaseCriteria.

        The batch size in bytes.

        :return: The batch_size of this BatchReleaseCriteria.
        :rtype: int
        """
        return self._batch_size

    @batch_size.setter
    def batch_size(self, batch_size):
        """Sets the batch_size of this BatchReleaseCriteria.

        The batch size in bytes.

        :param batch_size: The batch_size of this BatchReleaseCriteria.
        :type batch_size: int
        """

        self._batch_size = batch_size

    @property
    def message_count(self):
        """Gets the message_count of this BatchReleaseCriteria.

        The message count.

        :return: The message_count of this BatchReleaseCriteria.
        :rtype: int
        """
        return self._message_count

    @message_count.setter
    def message_count(self, message_count):
        """Sets the message_count of this BatchReleaseCriteria.

        The message count.

        :param message_count: The message_count of this BatchReleaseCriteria.
        :type message_count: int
        """

        self._message_count = message_count

    @property
    def recurrence(self):
        """Gets the recurrence of this BatchReleaseCriteria.


        :return: The recurrence of this BatchReleaseCriteria.
        :rtype: WorkflowTriggerRecurrence
        """
        return self._recurrence

    @recurrence.setter
    def recurrence(self, recurrence):
        """Sets the recurrence of this BatchReleaseCriteria.


        :param recurrence: The recurrence of this BatchReleaseCriteria.
        :type recurrence: WorkflowTriggerRecurrence
        """

        self._recurrence = recurrence
