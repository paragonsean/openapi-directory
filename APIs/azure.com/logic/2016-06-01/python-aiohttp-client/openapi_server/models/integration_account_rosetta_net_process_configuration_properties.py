# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rosetta_net_pip_activity_settings import RosettaNetPipActivitySettings
from openapi_server.models.rosetta_net_pip_role_settings import RosettaNetPipRoleSettings
from openapi_server import util


class IntegrationAccountRosettaNetProcessConfigurationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_settings: RosettaNetPipActivitySettings=None, changed_time: datetime=None, created_time: datetime=None, description: str=None, initiator_role_settings: RosettaNetPipRoleSettings=None, metadata: Dict[str, str]=None, process_code: str=None, process_name: str=None, process_version: str=None, responder_role_settings: RosettaNetPipRoleSettings=None):
        """IntegrationAccountRosettaNetProcessConfigurationProperties - a model defined in OpenAPI

        :param activity_settings: The activity_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :param changed_time: The changed_time of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :param created_time: The created_time of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :param description: The description of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :param initiator_role_settings: The initiator_role_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :param metadata: The metadata of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :param process_code: The process_code of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :param process_name: The process_name of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :param process_version: The process_version of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :param responder_role_settings: The responder_role_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        """
        self.openapi_types = {
            'activity_settings': RosettaNetPipActivitySettings,
            'changed_time': datetime,
            'created_time': datetime,
            'description': str,
            'initiator_role_settings': RosettaNetPipRoleSettings,
            'metadata': Dict[str, str],
            'process_code': str,
            'process_name': str,
            'process_version': str,
            'responder_role_settings': RosettaNetPipRoleSettings
        }

        self.attribute_map = {
            'activity_settings': 'activitySettings',
            'changed_time': 'changedTime',
            'created_time': 'createdTime',
            'description': 'description',
            'initiator_role_settings': 'initiatorRoleSettings',
            'metadata': 'metadata',
            'process_code': 'processCode',
            'process_name': 'processName',
            'process_version': 'processVersion',
            'responder_role_settings': 'responderRoleSettings'
        }

        self._activity_settings = activity_settings
        self._changed_time = changed_time
        self._created_time = created_time
        self._description = description
        self._initiator_role_settings = initiator_role_settings
        self._metadata = metadata
        self._process_code = process_code
        self._process_name = process_name
        self._process_version = process_version
        self._responder_role_settings = responder_role_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationAccountRosettaNetProcessConfigurationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationAccountRosettaNetProcessConfigurationProperties of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_settings(self):
        """Gets the activity_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.


        :return: The activity_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :rtype: RosettaNetPipActivitySettings
        """
        return self._activity_settings

    @activity_settings.setter
    def activity_settings(self, activity_settings):
        """Sets the activity_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.


        :param activity_settings: The activity_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :type activity_settings: RosettaNetPipActivitySettings
        """
        if activity_settings is None:
            raise ValueError("Invalid value for `activity_settings`, must not be `None`")

        self._activity_settings = activity_settings

    @property
    def changed_time(self):
        """Gets the changed_time of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The changed time.

        :return: The changed_time of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :rtype: datetime
        """
        return self._changed_time

    @changed_time.setter
    def changed_time(self, changed_time):
        """Sets the changed_time of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The changed time.

        :param changed_time: The changed_time of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :type changed_time: datetime
        """

        self._changed_time = changed_time

    @property
    def created_time(self):
        """Gets the created_time of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The created time.

        :return: The created_time of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The created time.

        :param created_time: The created_time of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def description(self):
        """Gets the description of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The integration account RosettaNet ProcessConfiguration properties.

        :return: The description of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The integration account RosettaNet ProcessConfiguration properties.

        :param description: The description of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :type description: str
        """

        self._description = description

    @property
    def initiator_role_settings(self):
        """Gets the initiator_role_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.


        :return: The initiator_role_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :rtype: RosettaNetPipRoleSettings
        """
        return self._initiator_role_settings

    @initiator_role_settings.setter
    def initiator_role_settings(self, initiator_role_settings):
        """Sets the initiator_role_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.


        :param initiator_role_settings: The initiator_role_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :type initiator_role_settings: RosettaNetPipRoleSettings
        """
        if initiator_role_settings is None:
            raise ValueError("Invalid value for `initiator_role_settings`, must not be `None`")

        self._initiator_role_settings = initiator_role_settings

    @property
    def metadata(self):
        """Gets the metadata of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The metadata.

        :return: The metadata of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The metadata.

        :param metadata: The metadata of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def process_code(self):
        """Gets the process_code of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The integration account RosettaNet process code.

        :return: The process_code of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :rtype: str
        """
        return self._process_code

    @process_code.setter
    def process_code(self, process_code):
        """Sets the process_code of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The integration account RosettaNet process code.

        :param process_code: The process_code of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :type process_code: str
        """
        if process_code is None:
            raise ValueError("Invalid value for `process_code`, must not be `None`")

        self._process_code = process_code

    @property
    def process_name(self):
        """Gets the process_name of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The integration account RosettaNet process name.

        :return: The process_name of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :rtype: str
        """
        return self._process_name

    @process_name.setter
    def process_name(self, process_name):
        """Sets the process_name of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The integration account RosettaNet process name.

        :param process_name: The process_name of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :type process_name: str
        """
        if process_name is None:
            raise ValueError("Invalid value for `process_name`, must not be `None`")

        self._process_name = process_name

    @property
    def process_version(self):
        """Gets the process_version of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The integration account RosettaNet process version.

        :return: The process_version of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :rtype: str
        """
        return self._process_version

    @process_version.setter
    def process_version(self, process_version):
        """Sets the process_version of this IntegrationAccountRosettaNetProcessConfigurationProperties.

        The integration account RosettaNet process version.

        :param process_version: The process_version of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :type process_version: str
        """
        if process_version is None:
            raise ValueError("Invalid value for `process_version`, must not be `None`")

        self._process_version = process_version

    @property
    def responder_role_settings(self):
        """Gets the responder_role_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.


        :return: The responder_role_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :rtype: RosettaNetPipRoleSettings
        """
        return self._responder_role_settings

    @responder_role_settings.setter
    def responder_role_settings(self, responder_role_settings):
        """Sets the responder_role_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.


        :param responder_role_settings: The responder_role_settings of this IntegrationAccountRosettaNetProcessConfigurationProperties.
        :type responder_role_settings: RosettaNetPipRoleSettings
        """
        if responder_role_settings is None:
            raise ValueError("Invalid value for `responder_role_settings`, must not be `None`")

        self._responder_role_settings = responder_role_settings
