# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_reference import ResourceReference
from openapi_server.models.sku import Sku
from openapi_server.models.workflow_parameter import WorkflowParameter
from openapi_server.models.workflow_provisioning_state import WorkflowProvisioningState
from openapi_server.models.workflow_state import WorkflowState
from openapi_server import util


class WorkflowProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_endpoint: str=None, changed_time: datetime=None, created_time: datetime=None, definition: object=None, integration_account: ResourceReference=None, parameters: Dict[str, WorkflowParameter]=None, provisioning_state: WorkflowProvisioningState=None, sku: Sku=None, state: WorkflowState=None, version: str=None):
        """WorkflowProperties - a model defined in OpenAPI

        :param access_endpoint: The access_endpoint of this WorkflowProperties.
        :param changed_time: The changed_time of this WorkflowProperties.
        :param created_time: The created_time of this WorkflowProperties.
        :param definition: The definition of this WorkflowProperties.
        :param integration_account: The integration_account of this WorkflowProperties.
        :param parameters: The parameters of this WorkflowProperties.
        :param provisioning_state: The provisioning_state of this WorkflowProperties.
        :param sku: The sku of this WorkflowProperties.
        :param state: The state of this WorkflowProperties.
        :param version: The version of this WorkflowProperties.
        """
        self.openapi_types = {
            'access_endpoint': str,
            'changed_time': datetime,
            'created_time': datetime,
            'definition': object,
            'integration_account': ResourceReference,
            'parameters': Dict[str, WorkflowParameter],
            'provisioning_state': WorkflowProvisioningState,
            'sku': Sku,
            'state': WorkflowState,
            'version': str
        }

        self.attribute_map = {
            'access_endpoint': 'accessEndpoint',
            'changed_time': 'changedTime',
            'created_time': 'createdTime',
            'definition': 'definition',
            'integration_account': 'integrationAccount',
            'parameters': 'parameters',
            'provisioning_state': 'provisioningState',
            'sku': 'sku',
            'state': 'state',
            'version': 'version'
        }

        self._access_endpoint = access_endpoint
        self._changed_time = changed_time
        self._created_time = created_time
        self._definition = definition
        self._integration_account = integration_account
        self._parameters = parameters
        self._provisioning_state = provisioning_state
        self._sku = sku
        self._state = state
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkflowProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkflowProperties of this WorkflowProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_endpoint(self):
        """Gets the access_endpoint of this WorkflowProperties.

        Gets the access endpoint.

        :return: The access_endpoint of this WorkflowProperties.
        :rtype: str
        """
        return self._access_endpoint

    @access_endpoint.setter
    def access_endpoint(self, access_endpoint):
        """Sets the access_endpoint of this WorkflowProperties.

        Gets the access endpoint.

        :param access_endpoint: The access_endpoint of this WorkflowProperties.
        :type access_endpoint: str
        """

        self._access_endpoint = access_endpoint

    @property
    def changed_time(self):
        """Gets the changed_time of this WorkflowProperties.

        Gets the changed time.

        :return: The changed_time of this WorkflowProperties.
        :rtype: datetime
        """
        return self._changed_time

    @changed_time.setter
    def changed_time(self, changed_time):
        """Sets the changed_time of this WorkflowProperties.

        Gets the changed time.

        :param changed_time: The changed_time of this WorkflowProperties.
        :type changed_time: datetime
        """

        self._changed_time = changed_time

    @property
    def created_time(self):
        """Gets the created_time of this WorkflowProperties.

        Gets the created time.

        :return: The created_time of this WorkflowProperties.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this WorkflowProperties.

        Gets the created time.

        :param created_time: The created_time of this WorkflowProperties.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def definition(self):
        """Gets the definition of this WorkflowProperties.


        :return: The definition of this WorkflowProperties.
        :rtype: object
        """
        return self._definition

    @definition.setter
    def definition(self, definition):
        """Sets the definition of this WorkflowProperties.


        :param definition: The definition of this WorkflowProperties.
        :type definition: object
        """

        self._definition = definition

    @property
    def integration_account(self):
        """Gets the integration_account of this WorkflowProperties.


        :return: The integration_account of this WorkflowProperties.
        :rtype: ResourceReference
        """
        return self._integration_account

    @integration_account.setter
    def integration_account(self, integration_account):
        """Sets the integration_account of this WorkflowProperties.


        :param integration_account: The integration_account of this WorkflowProperties.
        :type integration_account: ResourceReference
        """

        self._integration_account = integration_account

    @property
    def parameters(self):
        """Gets the parameters of this WorkflowProperties.

        The parameters.

        :return: The parameters of this WorkflowProperties.
        :rtype: Dict[str, WorkflowParameter]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this WorkflowProperties.

        The parameters.

        :param parameters: The parameters of this WorkflowProperties.
        :type parameters: Dict[str, WorkflowParameter]
        """

        self._parameters = parameters

    @property
    def provisioning_state(self):
        """Gets the provisioning_state of this WorkflowProperties.


        :return: The provisioning_state of this WorkflowProperties.
        :rtype: WorkflowProvisioningState
        """
        return self._provisioning_state

    @provisioning_state.setter
    def provisioning_state(self, provisioning_state):
        """Sets the provisioning_state of this WorkflowProperties.


        :param provisioning_state: The provisioning_state of this WorkflowProperties.
        :type provisioning_state: WorkflowProvisioningState
        """

        self._provisioning_state = provisioning_state

    @property
    def sku(self):
        """Gets the sku of this WorkflowProperties.


        :return: The sku of this WorkflowProperties.
        :rtype: Sku
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this WorkflowProperties.


        :param sku: The sku of this WorkflowProperties.
        :type sku: Sku
        """

        self._sku = sku

    @property
    def state(self):
        """Gets the state of this WorkflowProperties.


        :return: The state of this WorkflowProperties.
        :rtype: WorkflowState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this WorkflowProperties.


        :param state: The state of this WorkflowProperties.
        :type state: WorkflowState
        """

        self._state = state

    @property
    def version(self):
        """Gets the version of this WorkflowProperties.

        Gets the version.

        :return: The version of this WorkflowProperties.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this WorkflowProperties.

        Gets the version.

        :param version: The version of this WorkflowProperties.
        :type version: str
        """

        self._version = version
