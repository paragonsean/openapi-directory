# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IntegrationAccountSessionFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changed_time: datetime=None):
        """IntegrationAccountSessionFilter - a model defined in OpenAPI

        :param changed_time: The changed_time of this IntegrationAccountSessionFilter.
        """
        self.openapi_types = {
            'changed_time': datetime
        }

        self.attribute_map = {
            'changed_time': 'changedTime'
        }

        self._changed_time = changed_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationAccountSessionFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationAccountSessionFilter of this IntegrationAccountSessionFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changed_time(self):
        """Gets the changed_time of this IntegrationAccountSessionFilter.

        The changed time of integration account sessions.

        :return: The changed_time of this IntegrationAccountSessionFilter.
        :rtype: datetime
        """
        return self._changed_time

    @changed_time.setter
    def changed_time(self, changed_time):
        """Sets the changed_time of this IntegrationAccountSessionFilter.

        The changed time of integration account sessions.

        :param changed_time: The changed_time of this IntegrationAccountSessionFilter.
        :type changed_time: datetime
        """
        if changed_time is None:
            raise ValueError("Invalid value for `changed_time`, must not be `None`")

        self._changed_time = changed_time
