# coding: utf-8

import pytest
import json
from aiohttp import web

from openapi_server.models.get_callback_url_parameters import GetCallbackUrlParameters
from openapi_server.models.integration_account_agreement import IntegrationAccountAgreement
from openapi_server.models.integration_account_agreement_list_result import IntegrationAccountAgreementListResult
from openapi_server.models.workflow_trigger_callback_url import WorkflowTriggerCallbackUrl


pytestmark = pytest.mark.asyncio

async def test_agreements_create_or_update(client):
    """Test case for agreements_create_or_update

    
    """
    agreement = {"properties":{"agreementType":"NotSpecified","hostIdentity":{"qualifier":"qualifier","value":"value"},"metadata":"{}","guestIdentity":{"qualifier":"qualifier","value":"value"},"guestPartner":"guestPartner","createdTime":"2000-01-23T04:56:07.000+00:00","changedTime":"2000-01-23T04:56:07.000+00:00","hostPartner":"hostPartner","content":{"aS2":{"sendAgreement":{"protocolSettings":{"acknowledgementConnectionSettings":{"ignoreCertificateNameMismatch":True,"unfoldHttpHeaders":True,"keepHttpConnectionAlive":True,"supportHttpStatusCodeContinue":True},"securitySettings":{"enableNrrForOutboundDecodedMessages":True,"enableNrrForOutboundEncodedMessages":True,"enableNrrForInboundMdn":True,"enableNrrForOutboundMdn":True,"encryptionCertificateName":"encryptionCertificateName","enableNrrForInboundDecodedMessages":True,"overrideGroupSigningCertificate":True,"enableNrrForInboundEncodedMessages":True,"signingCertificateName":"signingCertificateName","sha2AlgorithmFormat":"sha2AlgorithmFormat"},"errorSettings":{"suspendDuplicateMessage":True,"resendIfMdnNotReceived":True},"validationSettings":{"signMessage":True,"interchangeDuplicatesValidityDays":0,"compressMessage":True,"signingAlgorithm":"NotSpecified","checkDuplicateMessage":True,"encryptMessage":True,"checkCertificateRevocationListOnReceive":True,"overrideMessageProperties":True,"encryptionAlgorithm":"NotSpecified","checkCertificateRevocationListOnSend":True},"envelopeSettings":{"fileNameTemplate":"fileNameTemplate","messageContentType":"messageContentType","suspendMessageOnFileNameGenerationError":True,"autogenerateFileName":True,"transmitFileNameInMimeHeader":True},"messageConnectionSettings":{"ignoreCertificateNameMismatch":True,"unfoldHttpHeaders":True,"keepHttpConnectionAlive":True,"supportHttpStatusCodeContinue":True},"mdnSettings":{"signMdn":True,"mdnText":"mdnText","needMdn":True,"signOutboundMdnIfOptional":True,"receiptDeliveryUrl":"receiptDeliveryUrl","micHashingAlgorithm":"NotSpecified","dispositionNotificationTo":"dispositionNotificationTo","sendInboundMdnToMessageBox":True,"sendMdnAsynchronously":True}},"senderBusinessIdentity":{"qualifier":"qualifier","value":"value"},"receiverBusinessIdentity":{"qualifier":"qualifier","value":"value"}},"receiveAgreement":{"protocolSettings":{"acknowledgementConnectionSettings":{"ignoreCertificateNameMismatch":True,"unfoldHttpHeaders":True,"keepHttpConnectionAlive":True,"supportHttpStatusCodeContinue":True},"securitySettings":{"enableNrrForOutboundDecodedMessages":True,"enableNrrForOutboundEncodedMessages":True,"enableNrrForInboundMdn":True,"enableNrrForOutboundMdn":True,"encryptionCertificateName":"encryptionCertificateName","enableNrrForInboundDecodedMessages":True,"overrideGroupSigningCertificate":True,"enableNrrForInboundEncodedMessages":True,"signingCertificateName":"signingCertificateName","sha2AlgorithmFormat":"sha2AlgorithmFormat"},"errorSettings":{"suspendDuplicateMessage":True,"resendIfMdnNotReceived":True},"validationSettings":{"signMessage":True,"interchangeDuplicatesValidityDays":0,"compressMessage":True,"signingAlgorithm":"NotSpecified","checkDuplicateMessage":True,"encryptMessage":True,"checkCertificateRevocationListOnReceive":True,"overrideMessageProperties":True,"encryptionAlgorithm":"NotSpecified","checkCertificateRevocationListOnSend":True},"envelopeSettings":{"fileNameTemplate":"fileNameTemplate","messageContentType":"messageContentType","suspendMessageOnFileNameGenerationError":True,"autogenerateFileName":True,"transmitFileNameInMimeHeader":True},"messageConnectionSettings":{"ignoreCertificateNameMismatch":True,"unfoldHttpHeaders":True,"keepHttpConnectionAlive":True,"supportHttpStatusCodeContinue":True},"mdnSettings":{"signMdn":True,"mdnText":"mdnText","needMdn":True,"signOutboundMdnIfOptional":True,"receiptDeliveryUrl":"receiptDeliveryUrl","micHashingAlgorithm":"NotSpecified","dispositionNotificationTo":"dispositionNotificationTo","sendInboundMdnToMessageBox":True,"sendMdnAsynchronously":True}},"senderBusinessIdentity":{"qualifier":"qualifier","value":"value"},"receiverBusinessIdentity":{"qualifier":"qualifier","value":"value"}}},"edifact":{"sendAgreement":{"protocolSettings":{"validationOverrides":[{"validateEdiTypes":True,"validateXsdTypes":True,"messageId":"messageId","trailingSeparatorPolicy":"NotSpecified","enforceCharacterSet":True,"allowLeadingAndTrailingSpacesAndZeroes":True,"trimLeadingAndTrailingSpacesAndZeroes":True},{"validateEdiTypes":True,"validateXsdTypes":True,"messageId":"messageId","trailingSeparatorPolicy":"NotSpecified","enforceCharacterSet":True,"allowLeadingAndTrailingSpacesAndZeroes":True,"trimLeadingAndTrailingSpacesAndZeroes":True}],"messageFilterList":[{"messageId":"messageId"},{"messageId":"messageId"}],"framingSettings":{"serviceCodeListDirectoryVersion":"serviceCodeListDirectoryVersion","segmentTerminator":5,"characterSet":"NotSpecified","dataElementSeparator":6,"releaseIndicator":1,"componentSeparator":1,"protocolVersion":7,"repetitionSeparator":4,"characterEncoding":"characterEncoding"},"validationSettings":{"validateEdiTypes":True,"checkDuplicateTransactionSetControlNumber":True,"validateXsdTypes":True,"interchangeControlNumberValidityDays":9,"checkDuplicateInterchangeControlNumber":True,"checkDuplicateGroupControlNumber":True,"validateCharacterSet":True,"allowLeadingAndTrailingSpacesAndZeroes":True,"trimLeadingAndTrailingSpacesAndZeroes":True},"edifactDelimiterOverrides":[{"segmentTerminator":9,"dataElementSeparator":5,"targetNamespace":"targetNamespace","decimalPointIndicator":"NotSpecified","messageRelease":"messageRelease","releaseIndicator":2,"segmentTerminatorSuffix":"NotSpecified","componentSeparator":5,"messageId":"messageId","repetitionSeparator":7,"messageVersion":"messageVersion","messageAssociationAssignedCode":"messageAssociationAssignedCode"},{"segmentTerminator":9,"dataElementSeparator":5,"targetNamespace":"targetNamespace","decimalPointIndicator":"NotSpecified","messageRelease":"messageRelease","releaseIndicator":2,"segmentTerminatorSuffix":"NotSpecified","componentSeparator":5,"messageId":"messageId","repetitionSeparator":7,"messageVersion":"messageVersion","messageAssociationAssignedCode":"messageAssociationAssignedCode"}],"envelopeSettings":{"senderInternalSubIdentification":"senderInternalSubIdentification","groupControlNumberSuffix":"groupControlNumberSuffix","rolloverInterchangeControlNumber":True,"groupApplicationSenderQualifier":"groupApplicationSenderQualifier","transactionSetControlNumberSuffix":"transactionSetControlNumberSuffix","interchangeControlNumberLowerBound":4,"groupApplicationReceiverId":"groupApplicationReceiverId","functionalGroupId":"functionalGroupId","groupControlNumberPrefix":"groupControlNumberPrefix","processingPriorityCode":"processingPriorityCode","interchangeControlNumberPrefix":"interchangeControlNumberPrefix","enableDefaultGroupHeaders":True,"transactionSetControlNumberLowerBound":1,"groupMessageVersion":"groupMessageVersion","receiverInternalIdentification":"receiverInternalIdentification","interchangeControlNumberUpperBound":7,"rolloverTransactionSetControlNumber":True,"overwriteExistingTransactionSetControlNumber":True,"isTestInterchange":True,"transactionSetControlNumberPrefix":"transactionSetControlNumberPrefix","applicationReferenceId":"applicationReferenceId","groupControllingAgencyCode":"groupControllingAgencyCode","interchangeControlNumberSuffix":"interchangeControlNumberSuffix","transactionSetControlNumberUpperBound":1,"recipientReferencePasswordValue":"recipientReferencePasswordValue","createGroupingSegments":True,"groupControlNumberUpperBound":2,"groupApplicationReceiverQualifier":"groupApplicationReceiverQualifier","groupApplicationSenderId":"groupApplicationSenderId","senderInternalIdentification":"senderInternalIdentification","applyDelimiterStringAdvice":True,"groupMessageRelease":"groupMessageRelease","recipientReferencePasswordQualifier":"recipientReferencePasswordQualifier","receiverReverseRoutingAddress":"receiverReverseRoutingAddress","receiverInternalSubIdentification":"receiverInternalSubIdentification","groupAssociationAssignedCode":"groupAssociationAssignedCode","senderReverseRoutingAddress":"senderReverseRoutingAddress","communicationAgreementId":"communicationAgreementId","groupControlNumberLowerBound":3,"rolloverGroupControlNumber":True,"groupApplicationPassword":"groupApplicationPassword"},"processingSettings":{"createEmptyXmlTagsForTrailingSeparators":True,"useDotAsDecimalSeparator":True,"preserveInterchange":True,"maskSecurityInfo":True,"suspendInterchangeOnError":True},"messageFilter":{"messageFilterType":"NotSpecified"},"schemaReferences":[{"associationAssignedCode":"associationAssignedCode","messageRelease":"messageRelease","messageId":"messageId","senderApplicationId":"senderApplicationId","messageVersion":"messageVersion","senderApplicationQualifier":"senderApplicationQualifier","schemaName":"schemaName"},{"associationAssignedCode":"associationAssignedCode","messageRelease":"messageRelease","messageId":"messageId","senderApplicationId":"senderApplicationId","messageVersion":"messageVersion","senderApplicationQualifier":"senderApplicationQualifier","schemaName":"schemaName"}],"acknowledgementSettings":{"rolloverAcknowledgementControlNumber":True,"acknowledgementControlNumberPrefix":"acknowledgementControlNumberPrefix","needTechnicalAcknowledgement":True,"sendSynchronousAcknowledgement":True,"needLoopForValidMessages":True,"acknowledgementControlNumberLowerBound":6,"acknowledgementControlNumberSuffix":"acknowledgementControlNumberSuffix","batchTechnicalAcknowledgements":True,"acknowledgementControlNumberUpperBound":1,"batchFunctionalAcknowledgements":True,"needFunctionalAcknowledgement":True},"envelopeOverrides":[{"groupHeaderMessageVersion":"groupHeaderMessageVersion","receiverApplicationId":"receiverApplicationId","groupHeaderMessageRelease":"groupHeaderMessageRelease","messageId":"messageId","senderApplicationId":"senderApplicationId","functionalGroupId":"functionalGroupId","messageAssociationAssignedCode":"messageAssociationAssignedCode","receiverApplicationQualifier":"receiverApplicationQualifier","controllingAgencyCode":"controllingAgencyCode","associationAssignedCode":"associationAssignedCode","targetNamespace":"targetNamespace","messageRelease":"messageRelease","messageVersion":"messageVersion","senderApplicationQualifier":"senderApplicationQualifier","applicationPassword":"applicationPassword"},{"groupHeaderMessageVersion":"groupHeaderMessageVersion","receiverApplicationId":"receiverApplicationId","groupHeaderMessageRelease":"groupHeaderMessageRelease","messageId":"messageId","senderApplicationId":"senderApplicationId","functionalGroupId":"functionalGroupId","messageAssociationAssignedCode":"messageAssociationAssignedCode","receiverApplicationQualifier":"receiverApplicationQualifier","controllingAgencyCode":"controllingAgencyCode","associationAssignedCode":"associationAssignedCode","targetNamespace":"targetNamespace","messageRelease":"messageRelease","messageVersion":"messageVersion","senderApplicationQualifier":"senderApplicationQualifier","applicationPassword":"applicationPassword"}]},"senderBusinessIdentity":{"qualifier":"qualifier","value":"value"},"receiverBusinessIdentity":{"qualifier":"qualifier","value":"value"}},"receiveAgreement":{"protocolSettings":{"validationOverrides":[{"validateEdiTypes":True,"validateXsdTypes":True,"messageId":"messageId","trailingSeparatorPolicy":"NotSpecified","enforceCharacterSet":True,"allowLeadingAndTrailingSpacesAndZeroes":True,"trimLeadingAndTrailingSpacesAndZeroes":True},{"validateEdiTypes":True,"validateXsdTypes":True,"messageId":"messageId","trailingSeparatorPolicy":"NotSpecified","enforceCharacterSet":True,"allowLeadingAndTrailingSpacesAndZeroes":True,"trimLeadingAndTrailingSpacesAndZeroes":True}],"messageFilterList":[{"messageId":"messageId"},{"messageId":"messageId"}],"framingSettings":{"serviceCodeListDirectoryVersion":"serviceCodeListDirectoryVersion","segmentTerminator":5,"characterSet":"NotSpecified","dataElementSeparator":6,"releaseIndicator":1,"componentSeparator":1,"protocolVersion":7,"repetitionSeparator":4,"characterEncoding":"characterEncoding"},"validationSettings":{"validateEdiTypes":True,"checkDuplicateTransactionSetControlNumber":True,"validateXsdTypes":True,"interchangeControlNumberValidityDays":9,"checkDuplicateInterchangeControlNumber":True,"checkDuplicateGroupControlNumber":True,"validateCharacterSet":True,"allowLeadingAndTrailingSpacesAndZeroes":True,"trimLeadingAndTrailingSpacesAndZeroes":True},"edifactDelimiterOverrides":[{"segmentTerminator":9,"dataElementSeparator":5,"targetNamespace":"targetNamespace","decimalPointIndicator":"NotSpecified","messageRelease":"messageRelease","releaseIndicator":2,"segmentTerminatorSuffix":"NotSpecified","componentSeparator":5,"messageId":"messageId","repetitionSeparator":7,"messageVersion":"messageVersion","messageAssociationAssignedCode":"messageAssociationAssignedCode"},{"segmentTerminator":9,"dataElementSeparator":5,"targetNamespace":"targetNamespace","decimalPointIndicator":"NotSpecified","messageRelease":"messageRelease","releaseIndicator":2,"segmentTerminatorSuffix":"NotSpecified","componentSeparator":5,"messageId":"messageId","repetitionSeparator":7,"messageVersion":"messageVersion","messageAssociationAssignedCode":"messageAssociationAssignedCode"}],"envelopeSettings":{"senderInternalSubIdentification":"senderInternalSubIdentification","groupControlNumberSuffix":"groupControlNumberSuffix","rolloverInterchangeControlNumber":True,"groupApplicationSenderQualifier":"groupApplicationSenderQualifier","transactionSetControlNumberSuffix":"transactionSetControlNumberSuffix","interchangeControlNumberLowerBound":4,"groupApplicationReceiverId":"groupApplicationReceiverId","functionalGroupId":"functionalGroupId","groupControlNumberPrefix":"groupControlNumberPrefix","processingPriorityCode":"processingPriorityCode","interchangeControlNumberPrefix":"interchangeControlNumberPrefix","enableDefaultGroupHeaders":True,"transactionSetControlNumberLowerBound":1,"groupMessageVersion":"groupMessageVersion","receiverInternalIdentification":"receiverInternalIdentification","interchangeControlNumberUpperBound":7,"rolloverTransactionSetControlNumber":True,"overwriteExistingTransactionSetControlNumber":True,"isTestInterchange":True,"transactionSetControlNumberPrefix":"transactionSetControlNumberPrefix","applicationReferenceId":"applicationReferenceId","groupControllingAgencyCode":"groupControllingAgencyCode","interchangeControlNumberSuffix":"interchangeControlNumberSuffix","transactionSetControlNumberUpperBound":1,"recipientReferencePasswordValue":"recipientReferencePasswordValue","createGroupingSegments":True,"groupControlNumberUpperBound":2,"groupApplicationReceiverQualifier":"groupApplicationReceiverQualifier","groupApplicationSenderId":"groupApplicationSenderId","senderInternalIdentification":"senderInternalIdentification","applyDelimiterStringAdvice":True,"groupMessageRelease":"groupMessageRelease","recipientReferencePasswordQualifier":"recipientReferencePasswordQualifier","receiverReverseRoutingAddress":"receiverReverseRoutingAddress","receiverInternalSubIdentification":"receiverInternalSubIdentification","groupAssociationAssignedCode":"groupAssociationAssignedCode","senderReverseRoutingAddress":"senderReverseRoutingAddress","communicationAgreementId":"communicationAgreementId","groupControlNumberLowerBound":3,"rolloverGroupControlNumber":True,"groupApplicationPassword":"groupApplicationPassword"},"processingSettings":{"createEmptyXmlTagsForTrailingSeparators":True,"useDotAsDecimalSeparator":True,"preserveInterchange":True,"maskSecurityInfo":True,"suspendInterchangeOnError":True},"messageFilter":{"messageFilterType":"NotSpecified"},"schemaReferences":[{"associationAssignedCode":"associationAssignedCode","messageRelease":"messageRelease","messageId":"messageId","senderApplicationId":"senderApplicationId","messageVersion":"messageVersion","senderApplicationQualifier":"senderApplicationQualifier","schemaName":"schemaName"},{"associationAssignedCode":"associationAssignedCode","messageRelease":"messageRelease","messageId":"messageId","senderApplicationId":"senderApplicationId","messageVersion":"messageVersion","senderApplicationQualifier":"senderApplicationQualifier","schemaName":"schemaName"}],"acknowledgementSettings":{"rolloverAcknowledgementControlNumber":True,"acknowledgementControlNumberPrefix":"acknowledgementControlNumberPrefix","needTechnicalAcknowledgement":True,"sendSynchronousAcknowledgement":True,"needLoopForValidMessages":True,"acknowledgementControlNumberLowerBound":6,"acknowledgementControlNumberSuffix":"acknowledgementControlNumberSuffix","batchTechnicalAcknowledgements":True,"acknowledgementControlNumberUpperBound":1,"batchFunctionalAcknowledgements":True,"needFunctionalAcknowledgement":True},"envelopeOverrides":[{"groupHeaderMessageVersion":"groupHeaderMessageVersion","receiverApplicationId":"receiverApplicationId","groupHeaderMessageRelease":"groupHeaderMessageRelease","messageId":"messageId","senderApplicationId":"senderApplicationId","functionalGroupId":"functionalGroupId","messageAssociationAssignedCode":"messageAssociationAssignedCode","receiverApplicationQualifier":"receiverApplicationQualifier","controllingAgencyCode":"controllingAgencyCode","associationAssignedCode":"associationAssignedCode","targetNamespace":"targetNamespace","messageRelease":"messageRelease","messageVersion":"messageVersion","senderApplicationQualifier":"senderApplicationQualifier","applicationPassword":"applicationPassword"},{"groupHeaderMessageVersion":"groupHeaderMessageVersion","receiverApplicationId":"receiverApplicationId","groupHeaderMessageRelease":"groupHeaderMessageRelease","messageId":"messageId","senderApplicationId":"senderApplicationId","functionalGroupId":"functionalGroupId","messageAssociationAssignedCode":"messageAssociationAssignedCode","receiverApplicationQualifier":"receiverApplicationQualifier","controllingAgencyCode":"controllingAgencyCode","associationAssignedCode":"associationAssignedCode","targetNamespace":"targetNamespace","messageRelease":"messageRelease","messageVersion":"messageVersion","senderApplicationQualifier":"senderApplicationQualifier","applicationPassword":"applicationPassword"}]},"senderBusinessIdentity":{"qualifier":"qualifier","value":"value"},"receiverBusinessIdentity":{"qualifier":"qualifier","value":"value"}}},"x12":{"sendAgreement":{"protocolSettings":{"validationOverrides":[{"validateEdiTypes":True,"validateXsdTypes":True,"messageId":"messageId","validateCharacterSet":True,"allowLeadingAndTrailingSpacesAndZeroes":True,"trimLeadingAndTrailingSpacesAndZeroes":True},{"validateEdiTypes":True,"validateXsdTypes":True,"messageId":"messageId","validateCharacterSet":True,"allowLeadingAndTrailingSpacesAndZeroes":True,"trimLeadingAndTrailingSpacesAndZeroes":True}],"x12DelimiterOverrides":[{"segmentTerminator":7,"dataElementSeparator":7,"replaceSeparatorsInPayload":True,"targetNamespace":"targetNamespace","componentSeparator":3,"messageId":"messageId","replaceCharacter":0,"protocolVersion":"protocolVersion"},{"segmentTerminator":7,"dataElementSeparator":7,"replaceSeparatorsInPayload":True,"targetNamespace":"targetNamespace","componentSeparator":3,"messageId":"messageId","replaceCharacter":0,"protocolVersion":"protocolVersion"}],"messageFilterList":[{"messageId":"messageId"},{"messageId":"messageId"}],"framingSettings":{"segmentTerminator":6,"characterSet":"NotSpecified","dataElementSeparator":6,"replaceSeparatorsInPayload":True,"componentSeparator":6,"replaceCharacter":5},"securitySettings":{"passwordValue":"passwordValue","securityQualifier":"securityQualifier","authorizationQualifier":"authorizationQualifier","authorizationValue":"authorizationValue"},"validationSettings":{"validateEdiTypes":True,"checkDuplicateTransactionSetControlNumber":True,"validateXsdTypes":True,"interchangeControlNumberValidityDays":3,"checkDuplicateInterchangeControlNumber":True,"checkDuplicateGroupControlNumber":True,"validateCharacterSet":True,"allowLeadingAndTrailingSpacesAndZeroes":True,"trimLeadingAndTrailingSpacesAndZeroes":True},"envelopeSettings":{"receiverApplicationId":"receiverApplicationId","controlStandardsId":8,"transactionSetControlNumberUpperBound":2,"rolloverInterchangeControlNumber":True,"useControlStandardsIdAsRepetitionCharacter":True,"transactionSetControlNumberSuffix":"transactionSetControlNumberSuffix","usageIndicator":"NotSpecified","interchangeControlNumberLowerBound":3,"groupControlNumberUpperBound":6,"senderApplicationId":"senderApplicationId","functionalGroupId":"functionalGroupId","groupHeaderVersion":"groupHeaderVersion","controlVersionNumber":"controlVersionNumber","enableDefaultGroupHeaders":True,"transactionSetControlNumberLowerBound":1,"interchangeControlNumberUpperBound":6,"rolloverTransactionSetControlNumber":True,"overwriteExistingTransactionSetControlNumber":True,"transactionSetControlNumberPrefix":"transactionSetControlNumberPrefix","groupControlNumberLowerBound":9,"groupHeaderAgencyCode":"groupHeaderAgencyCode","rolloverGroupControlNumber":True},"processingSettings":{"createEmptyXmlTagsForTrailingSeparators":True,"useDotAsDecimalSeparator":True,"preserveInterchange":True,"maskSecurityInfo":True,"suspendInterchangeOnError":True,"convertImpliedDecimal":True},"messageFilter":{},"schemaReferences":[{"schemaVersion":"schemaVersion","messageId":"messageId","senderApplicationId":"senderApplicationId","schemaName":"schemaName"},{"schemaVersion":"schemaVersion","messageId":"messageId","senderApplicationId":"senderApplicationId","schemaName":"schemaName"}],"acknowledgementSettings":{"acknowledgementControlNumberPrefix":"acknowledgementControlNumberPrefix","sendSynchronousAcknowledgement":True,"batchTechnicalAcknowledgements":True,"acknowledgementControlNumberUpperBound":6,"needImplementationAcknowledgement":True,"batchFunctionalAcknowledgements":True,"needFunctionalAcknowledgement":True,"implementationAcknowledgementVersion":"implementationAcknowledgementVersion","rolloverAcknowledgementControlNumber":True,"needTechnicalAcknowledgement":True,"needLoopForValidMessages":True,"acknowledgementControlNumberLowerBound":9,"acknowledgementControlNumberSuffix":"acknowledgementControlNumberSuffix","functionalAcknowledgementVersion":"functionalAcknowledgementVersion","batchImplementationAcknowledgements":True},"envelopeOverrides":[{"functionalIdentifierCode":"functionalIdentifierCode","receiverApplicationId":"receiverApplicationId","dateFormat":"NotSpecified","targetNamespace":"targetNamespace","headerVersion":"headerVersion","timeFormat":"NotSpecified","messageId":"messageId","responsibleAgencyCode":"responsibleAgencyCode","protocolVersion":"protocolVersion","senderApplicationId":"senderApplicationId"},{"functionalIdentifierCode":"functionalIdentifierCode","receiverApplicationId":"receiverApplicationId","dateFormat":"NotSpecified","targetNamespace":"targetNamespace","headerVersion":"headerVersion","timeFormat":"NotSpecified","messageId":"messageId","responsibleAgencyCode":"responsibleAgencyCode","protocolVersion":"protocolVersion","senderApplicationId":"senderApplicationId"}]},"senderBusinessIdentity":{"qualifier":"qualifier","value":"value"},"receiverBusinessIdentity":{"qualifier":"qualifier","value":"value"}},"receiveAgreement":{"protocolSettings":{"validationOverrides":[{"validateEdiTypes":True,"validateXsdTypes":True,"messageId":"messageId","validateCharacterSet":True,"allowLeadingAndTrailingSpacesAndZeroes":True,"trimLeadingAndTrailingSpacesAndZeroes":True},{"validateEdiTypes":True,"validateXsdTypes":True,"messageId":"messageId","validateCharacterSet":True,"allowLeadingAndTrailingSpacesAndZeroes":True,"trimLeadingAndTrailingSpacesAndZeroes":True}],"x12DelimiterOverrides":[{"segmentTerminator":7,"dataElementSeparator":7,"replaceSeparatorsInPayload":True,"targetNamespace":"targetNamespace","componentSeparator":3,"messageId":"messageId","replaceCharacter":0,"protocolVersion":"protocolVersion"},{"segmentTerminator":7,"dataElementSeparator":7,"replaceSeparatorsInPayload":True,"targetNamespace":"targetNamespace","componentSeparator":3,"messageId":"messageId","replaceCharacter":0,"protocolVersion":"protocolVersion"}],"messageFilterList":[{"messageId":"messageId"},{"messageId":"messageId"}],"framingSettings":{"segmentTerminator":6,"characterSet":"NotSpecified","dataElementSeparator":6,"replaceSeparatorsInPayload":True,"componentSeparator":6,"replaceCharacter":5},"securitySettings":{"passwordValue":"passwordValue","securityQualifier":"securityQualifier","authorizationQualifier":"authorizationQualifier","authorizationValue":"authorizationValue"},"validationSettings":{"validateEdiTypes":True,"checkDuplicateTransactionSetControlNumber":True,"validateXsdTypes":True,"interchangeControlNumberValidityDays":3,"checkDuplicateInterchangeControlNumber":True,"checkDuplicateGroupControlNumber":True,"validateCharacterSet":True,"allowLeadingAndTrailingSpacesAndZeroes":True,"trimLeadingAndTrailingSpacesAndZeroes":True},"envelopeSettings":{"receiverApplicationId":"receiverApplicationId","controlStandardsId":8,"transactionSetControlNumberUpperBound":2,"rolloverInterchangeControlNumber":True,"useControlStandardsIdAsRepetitionCharacter":True,"transactionSetControlNumberSuffix":"transactionSetControlNumberSuffix","usageIndicator":"NotSpecified","interchangeControlNumberLowerBound":3,"groupControlNumberUpperBound":6,"senderApplicationId":"senderApplicationId","functionalGroupId":"functionalGroupId","groupHeaderVersion":"groupHeaderVersion","controlVersionNumber":"controlVersionNumber","enableDefaultGroupHeaders":True,"transactionSetControlNumberLowerBound":1,"interchangeControlNumberUpperBound":6,"rolloverTransactionSetControlNumber":True,"overwriteExistingTransactionSetControlNumber":True,"transactionSetControlNumberPrefix":"transactionSetControlNumberPrefix","groupControlNumberLowerBound":9,"groupHeaderAgencyCode":"groupHeaderAgencyCode","rolloverGroupControlNumber":True},"processingSettings":{"createEmptyXmlTagsForTrailingSeparators":True,"useDotAsDecimalSeparator":True,"preserveInterchange":True,"maskSecurityInfo":True,"suspendInterchangeOnError":True,"convertImpliedDecimal":True},"messageFilter":{},"schemaReferences":[{"schemaVersion":"schemaVersion","messageId":"messageId","senderApplicationId":"senderApplicationId","schemaName":"schemaName"},{"schemaVersion":"schemaVersion","messageId":"messageId","senderApplicationId":"senderApplicationId","schemaName":"schemaName"}],"acknowledgementSettings":{"acknowledgementControlNumberPrefix":"acknowledgementControlNumberPrefix","sendSynchronousAcknowledgement":True,"batchTechnicalAcknowledgements":True,"acknowledgementControlNumberUpperBound":6,"needImplementationAcknowledgement":True,"batchFunctionalAcknowledgements":True,"needFunctionalAcknowledgement":True,"implementationAcknowledgementVersion":"implementationAcknowledgementVersion","rolloverAcknowledgementControlNumber":True,"needTechnicalAcknowledgement":True,"needLoopForValidMessages":True,"acknowledgementControlNumberLowerBound":9,"acknowledgementControlNumberSuffix":"acknowledgementControlNumberSuffix","functionalAcknowledgementVersion":"functionalAcknowledgementVersion","batchImplementationAcknowledgements":True},"envelopeOverrides":[{"functionalIdentifierCode":"functionalIdentifierCode","receiverApplicationId":"receiverApplicationId","dateFormat":"NotSpecified","targetNamespace":"targetNamespace","headerVersion":"headerVersion","timeFormat":"NotSpecified","messageId":"messageId","responsibleAgencyCode":"responsibleAgencyCode","protocolVersion":"protocolVersion","senderApplicationId":"senderApplicationId"},{"functionalIdentifierCode":"functionalIdentifierCode","receiverApplicationId":"receiverApplicationId","dateFormat":"NotSpecified","targetNamespace":"targetNamespace","headerVersion":"headerVersion","timeFormat":"NotSpecified","messageId":"messageId","responsibleAgencyCode":"responsibleAgencyCode","protocolVersion":"protocolVersion","senderApplicationId":"senderApplicationId"}]},"senderBusinessIdentity":{"qualifier":"qualifier","value":"value"},"receiverBusinessIdentity":{"qualifier":"qualifier","value":"value"}}}}}}
    params = [('api-version', 'api_version_example')]
    headers = { 
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'Authorization': 'Bearer special-key',
    }
    response = await client.request(
        method='PUT',
        path='/subscriptions/{subscription_id}/resourceGroups/{resource_group_name}/providers/Microsoft.Logic/integrationAccounts/{integration_account_name}/agreements/{agreement_name}'.format(subscription_id='subscription_id_example', resource_group_name='resource_group_name_example', integration_account_name='integration_account_name_example', agreement_name='agreement_name_example'),
        headers=headers,
        json=agreement,
        params=params,
        )
    assert response.status == 200, 'Response body is : ' + (await response.read()).decode('utf-8')


pytestmark = pytest.mark.asyncio

async def test_agreements_delete(client):
    """Test case for agreements_delete

    
    """
    params = [('api-version', 'api_version_example')]
    headers = { 
        'Authorization': 'Bearer special-key',
    }
    response = await client.request(
        method='DELETE',
        path='/subscriptions/{subscription_id}/resourceGroups/{resource_group_name}/providers/Microsoft.Logic/integrationAccounts/{integration_account_name}/agreements/{agreement_name}'.format(subscription_id='subscription_id_example', resource_group_name='resource_group_name_example', integration_account_name='integration_account_name_example', agreement_name='agreement_name_example'),
        headers=headers,
        params=params,
        )
    assert response.status == 200, 'Response body is : ' + (await response.read()).decode('utf-8')


pytestmark = pytest.mark.asyncio

async def test_agreements_get(client):
    """Test case for agreements_get

    
    """
    params = [('api-version', 'api_version_example')]
    headers = { 
        'Accept': 'application/json',
        'Authorization': 'Bearer special-key',
    }
    response = await client.request(
        method='GET',
        path='/subscriptions/{subscription_id}/resourceGroups/{resource_group_name}/providers/Microsoft.Logic/integrationAccounts/{integration_account_name}/agreements/{agreement_name}'.format(subscription_id='subscription_id_example', resource_group_name='resource_group_name_example', integration_account_name='integration_account_name_example', agreement_name='agreement_name_example'),
        headers=headers,
        params=params,
        )
    assert response.status == 200, 'Response body is : ' + (await response.read()).decode('utf-8')


pytestmark = pytest.mark.asyncio

async def test_agreements_list_by_integration_accounts(client):
    """Test case for agreements_list_by_integration_accounts

    
    """
    params = [('api-version', 'api_version_example'),
                    ('$top', 56),
                    ('$filter', 'filter_example')]
    headers = { 
        'Accept': 'application/json',
        'Authorization': 'Bearer special-key',
    }
    response = await client.request(
        method='GET',
        path='/subscriptions/{subscription_id}/resourceGroups/{resource_group_name}/providers/Microsoft.Logic/integrationAccounts/{integration_account_name}/agreements'.format(subscription_id='subscription_id_example', resource_group_name='resource_group_name_example', integration_account_name='integration_account_name_example'),
        headers=headers,
        params=params,
        )
    assert response.status == 200, 'Response body is : ' + (await response.read()).decode('utf-8')


pytestmark = pytest.mark.asyncio

async def test_agreements_list_content_callback_url(client):
    """Test case for agreements_list_content_callback_url

    
    """
    list_content_callback_url = {"notAfter":"2000-01-23T04:56:07.000+00:00","keyType":"NotSpecified"}
    params = [('api-version', 'api_version_example')]
    headers = { 
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'Authorization': 'Bearer special-key',
    }
    response = await client.request(
        method='POST',
        path='/subscriptions/{subscription_id}/resourceGroups/{resource_group_name}/providers/Microsoft.Logic/integrationAccounts/{integration_account_name}/agreements/{agreement_name}/listContentCallbackUrl'.format(subscription_id='subscription_id_example', resource_group_name='resource_group_name_example', integration_account_name='integration_account_name_example', agreement_name='agreement_name_example'),
        headers=headers,
        json=list_content_callback_url,
        params=params,
        )
    assert response.status == 200, 'Response body is : ' + (await response.read()).decode('utf-8')

