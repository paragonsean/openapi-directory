/*
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.WorkflowTriggerHistory;
import org.openapitools.client.model.WorkflowTriggerHistoryListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkflowTriggerHistoriesApi
 */
@Disabled
public class WorkflowTriggerHistoriesApiTest {

    private final WorkflowTriggerHistoriesApi api = new WorkflowTriggerHistoriesApi();

    /**
     * Gets a workflow trigger history.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowTriggerHistoriesGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String triggerName = null;
        String historyName = null;
        String apiVersion = null;
        WorkflowTriggerHistory response = api.workflowTriggerHistoriesGet(subscriptionId, resourceGroupName, workflowName, triggerName, historyName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of workflow trigger histories.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowTriggerHistoriesListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String triggerName = null;
        String apiVersion = null;
        Integer $top = null;
        String $filter = null;
        WorkflowTriggerHistoryListResult response = api.workflowTriggerHistoriesList(subscriptionId, resourceGroupName, workflowName, triggerName, apiVersion, $top, $filter);
        // TODO: test validations
    }

    /**
     * Resubmits a workflow run based on the trigger history.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowTriggerHistoriesResubmitTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String triggerName = null;
        String historyName = null;
        String apiVersion = null;
        api.workflowTriggerHistoriesResubmit(subscriptionId, resourceGroupName, workflowName, triggerName, historyName, apiVersion);
        // TODO: test validations
    }

}
