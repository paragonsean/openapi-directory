/*
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for EdifactEnvelopeSettings
 */
public class EdifactEnvelopeSettingsTest {
    private final EdifactEnvelopeSettings model = new EdifactEnvelopeSettings();

    /**
     * Model tests for EdifactEnvelopeSettings
     */
    @Test
    public void testEdifactEnvelopeSettings() {
        // TODO: test EdifactEnvelopeSettings
    }

    /**
     * Test the property 'applicationReferenceId'
     */
    @Test
    public void applicationReferenceIdTest() {
        // TODO: test applicationReferenceId
    }

    /**
     * Test the property 'applyDelimiterStringAdvice'
     */
    @Test
    public void applyDelimiterStringAdviceTest() {
        // TODO: test applyDelimiterStringAdvice
    }

    /**
     * Test the property 'communicationAgreementId'
     */
    @Test
    public void communicationAgreementIdTest() {
        // TODO: test communicationAgreementId
    }

    /**
     * Test the property 'createGroupingSegments'
     */
    @Test
    public void createGroupingSegmentsTest() {
        // TODO: test createGroupingSegments
    }

    /**
     * Test the property 'enableDefaultGroupHeaders'
     */
    @Test
    public void enableDefaultGroupHeadersTest() {
        // TODO: test enableDefaultGroupHeaders
    }

    /**
     * Test the property 'functionalGroupId'
     */
    @Test
    public void functionalGroupIdTest() {
        // TODO: test functionalGroupId
    }

    /**
     * Test the property 'groupApplicationPassword'
     */
    @Test
    public void groupApplicationPasswordTest() {
        // TODO: test groupApplicationPassword
    }

    /**
     * Test the property 'groupApplicationReceiverId'
     */
    @Test
    public void groupApplicationReceiverIdTest() {
        // TODO: test groupApplicationReceiverId
    }

    /**
     * Test the property 'groupApplicationReceiverQualifier'
     */
    @Test
    public void groupApplicationReceiverQualifierTest() {
        // TODO: test groupApplicationReceiverQualifier
    }

    /**
     * Test the property 'groupApplicationSenderId'
     */
    @Test
    public void groupApplicationSenderIdTest() {
        // TODO: test groupApplicationSenderId
    }

    /**
     * Test the property 'groupApplicationSenderQualifier'
     */
    @Test
    public void groupApplicationSenderQualifierTest() {
        // TODO: test groupApplicationSenderQualifier
    }

    /**
     * Test the property 'groupAssociationAssignedCode'
     */
    @Test
    public void groupAssociationAssignedCodeTest() {
        // TODO: test groupAssociationAssignedCode
    }

    /**
     * Test the property 'groupControlNumberLowerBound'
     */
    @Test
    public void groupControlNumberLowerBoundTest() {
        // TODO: test groupControlNumberLowerBound
    }

    /**
     * Test the property 'groupControlNumberPrefix'
     */
    @Test
    public void groupControlNumberPrefixTest() {
        // TODO: test groupControlNumberPrefix
    }

    /**
     * Test the property 'groupControlNumberSuffix'
     */
    @Test
    public void groupControlNumberSuffixTest() {
        // TODO: test groupControlNumberSuffix
    }

    /**
     * Test the property 'groupControlNumberUpperBound'
     */
    @Test
    public void groupControlNumberUpperBoundTest() {
        // TODO: test groupControlNumberUpperBound
    }

    /**
     * Test the property 'groupControllingAgencyCode'
     */
    @Test
    public void groupControllingAgencyCodeTest() {
        // TODO: test groupControllingAgencyCode
    }

    /**
     * Test the property 'groupMessageRelease'
     */
    @Test
    public void groupMessageReleaseTest() {
        // TODO: test groupMessageRelease
    }

    /**
     * Test the property 'groupMessageVersion'
     */
    @Test
    public void groupMessageVersionTest() {
        // TODO: test groupMessageVersion
    }

    /**
     * Test the property 'interchangeControlNumberLowerBound'
     */
    @Test
    public void interchangeControlNumberLowerBoundTest() {
        // TODO: test interchangeControlNumberLowerBound
    }

    /**
     * Test the property 'interchangeControlNumberPrefix'
     */
    @Test
    public void interchangeControlNumberPrefixTest() {
        // TODO: test interchangeControlNumberPrefix
    }

    /**
     * Test the property 'interchangeControlNumberSuffix'
     */
    @Test
    public void interchangeControlNumberSuffixTest() {
        // TODO: test interchangeControlNumberSuffix
    }

    /**
     * Test the property 'interchangeControlNumberUpperBound'
     */
    @Test
    public void interchangeControlNumberUpperBoundTest() {
        // TODO: test interchangeControlNumberUpperBound
    }

    /**
     * Test the property 'isTestInterchange'
     */
    @Test
    public void isTestInterchangeTest() {
        // TODO: test isTestInterchange
    }

    /**
     * Test the property 'overwriteExistingTransactionSetControlNumber'
     */
    @Test
    public void overwriteExistingTransactionSetControlNumberTest() {
        // TODO: test overwriteExistingTransactionSetControlNumber
    }

    /**
     * Test the property 'processingPriorityCode'
     */
    @Test
    public void processingPriorityCodeTest() {
        // TODO: test processingPriorityCode
    }

    /**
     * Test the property 'receiverInternalIdentification'
     */
    @Test
    public void receiverInternalIdentificationTest() {
        // TODO: test receiverInternalIdentification
    }

    /**
     * Test the property 'receiverInternalSubIdentification'
     */
    @Test
    public void receiverInternalSubIdentificationTest() {
        // TODO: test receiverInternalSubIdentification
    }

    /**
     * Test the property 'receiverReverseRoutingAddress'
     */
    @Test
    public void receiverReverseRoutingAddressTest() {
        // TODO: test receiverReverseRoutingAddress
    }

    /**
     * Test the property 'recipientReferencePasswordQualifier'
     */
    @Test
    public void recipientReferencePasswordQualifierTest() {
        // TODO: test recipientReferencePasswordQualifier
    }

    /**
     * Test the property 'recipientReferencePasswordValue'
     */
    @Test
    public void recipientReferencePasswordValueTest() {
        // TODO: test recipientReferencePasswordValue
    }

    /**
     * Test the property 'rolloverGroupControlNumber'
     */
    @Test
    public void rolloverGroupControlNumberTest() {
        // TODO: test rolloverGroupControlNumber
    }

    /**
     * Test the property 'rolloverInterchangeControlNumber'
     */
    @Test
    public void rolloverInterchangeControlNumberTest() {
        // TODO: test rolloverInterchangeControlNumber
    }

    /**
     * Test the property 'rolloverTransactionSetControlNumber'
     */
    @Test
    public void rolloverTransactionSetControlNumberTest() {
        // TODO: test rolloverTransactionSetControlNumber
    }

    /**
     * Test the property 'senderInternalIdentification'
     */
    @Test
    public void senderInternalIdentificationTest() {
        // TODO: test senderInternalIdentification
    }

    /**
     * Test the property 'senderInternalSubIdentification'
     */
    @Test
    public void senderInternalSubIdentificationTest() {
        // TODO: test senderInternalSubIdentification
    }

    /**
     * Test the property 'senderReverseRoutingAddress'
     */
    @Test
    public void senderReverseRoutingAddressTest() {
        // TODO: test senderReverseRoutingAddress
    }

    /**
     * Test the property 'transactionSetControlNumberLowerBound'
     */
    @Test
    public void transactionSetControlNumberLowerBoundTest() {
        // TODO: test transactionSetControlNumberLowerBound
    }

    /**
     * Test the property 'transactionSetControlNumberPrefix'
     */
    @Test
    public void transactionSetControlNumberPrefixTest() {
        // TODO: test transactionSetControlNumberPrefix
    }

    /**
     * Test the property 'transactionSetControlNumberSuffix'
     */
    @Test
    public void transactionSetControlNumberSuffixTest() {
        // TODO: test transactionSetControlNumberSuffix
    }

    /**
     * Test the property 'transactionSetControlNumberUpperBound'
     */
    @Test
    public void transactionSetControlNumberUpperBoundTest() {
        // TODO: test transactionSetControlNumberUpperBound
    }

}
