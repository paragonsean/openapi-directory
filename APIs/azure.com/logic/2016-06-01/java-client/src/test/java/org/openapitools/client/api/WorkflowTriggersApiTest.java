/*
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2016-06-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetCallbackUrlParameters;
import org.openapitools.client.model.JsonSchema;
import org.openapitools.client.model.SetTriggerStateActionDefinition;
import org.openapitools.client.model.WorkflowTrigger;
import org.openapitools.client.model.WorkflowTriggerCallbackUrl;
import org.openapitools.client.model.WorkflowTriggerListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkflowTriggersApi
 */
@Disabled
public class WorkflowTriggersApiTest {

    private final WorkflowTriggersApi api = new WorkflowTriggersApi();

    /**
     * Gets a workflow trigger.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowTriggersGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String triggerName = null;
        String apiVersion = null;
        WorkflowTrigger response = api.workflowTriggersGet(subscriptionId, resourceGroupName, workflowName, triggerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Get the trigger schema as JSON.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowTriggersGetSchemaJsonTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String triggerName = null;
        String apiVersion = null;
        JsonSchema response = api.workflowTriggersGetSchemaJson(subscriptionId, resourceGroupName, workflowName, triggerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of workflow triggers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowTriggersListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String apiVersion = null;
        Integer $top = null;
        String $filter = null;
        WorkflowTriggerListResult response = api.workflowTriggersList(subscriptionId, resourceGroupName, workflowName, apiVersion, $top, $filter);
        // TODO: test validations
    }

    /**
     * Get the callback URL for a workflow trigger.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowTriggersListCallbackUrlTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String triggerName = null;
        String apiVersion = null;
        WorkflowTriggerCallbackUrl response = api.workflowTriggersListCallbackUrl(subscriptionId, resourceGroupName, workflowName, triggerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Resets a workflow trigger.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowTriggersResetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String triggerName = null;
        String apiVersion = null;
        api.workflowTriggersReset(subscriptionId, resourceGroupName, workflowName, triggerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Runs a workflow trigger.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowTriggersRunTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String triggerName = null;
        String apiVersion = null;
        Object response = api.workflowTriggersRun(subscriptionId, resourceGroupName, workflowName, triggerName, apiVersion);
        // TODO: test validations
    }

    /**
     * Sets the state of a workflow trigger.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowTriggersSetStateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String triggerName = null;
        String apiVersion = null;
        SetTriggerStateActionDefinition setState = null;
        api.workflowTriggersSetState(subscriptionId, resourceGroupName, workflowName, triggerName, apiVersion, setState);
        // TODO: test validations
    }

    /**
     * Get the callback url for a trigger of a workflow version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowVersionsListCallbackUrlTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String versionId = null;
        String triggerName = null;
        String apiVersion = null;
        GetCallbackUrlParameters parameters = null;
        WorkflowTriggerCallbackUrl response = api.workflowVersionsListCallbackUrl(subscriptionId, resourceGroupName, workflowName, versionId, triggerName, apiVersion, parameters);
        // TODO: test validations
    }

}
