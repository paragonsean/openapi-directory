/**
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2015-02-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorkflowTriggerProvisioningState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorkflowTriggerProvisioningState::OAIWorkflowTriggerProvisioningState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorkflowTriggerProvisioningState::OAIWorkflowTriggerProvisioningState() {
    this->initializeModel();
}

OAIWorkflowTriggerProvisioningState::~OAIWorkflowTriggerProvisioningState() {}

void OAIWorkflowTriggerProvisioningState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIWorkflowTriggerProvisioningState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIWorkflowTriggerProvisioningState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotSpecified", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorkflowTriggerProvisioningState::NOTSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Creating", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorkflowTriggerProvisioningState::CREATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Succeeded", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorkflowTriggerProvisioningState::SUCCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Updating", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorkflowTriggerProvisioningState::UPDATING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIWorkflowTriggerProvisioningState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIWorkflowTriggerProvisioningState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIWorkflowTriggerProvisioningState::NOTSPECIFIED:
            val = "NotSpecified";
            break;
        case eOAIWorkflowTriggerProvisioningState::CREATING:
            val = "Creating";
            break;
        case eOAIWorkflowTriggerProvisioningState::SUCCEEDED:
            val = "Succeeded";
            break;
        case eOAIWorkflowTriggerProvisioningState::UPDATING:
            val = "Updating";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIWorkflowTriggerProvisioningState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIWorkflowTriggerProvisioningState::eOAIWorkflowTriggerProvisioningState OAIWorkflowTriggerProvisioningState::getValue() const {
    return m_value;
}

void OAIWorkflowTriggerProvisioningState::setValue(const OAIWorkflowTriggerProvisioningState::eOAIWorkflowTriggerProvisioningState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIWorkflowTriggerProvisioningState::isSet() const {
    
    return m_value_isSet;
}

bool OAIWorkflowTriggerProvisioningState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
