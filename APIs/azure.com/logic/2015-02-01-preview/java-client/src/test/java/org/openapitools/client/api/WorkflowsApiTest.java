/*
 * LogicManagementClient
 * REST API for Azure Logic Apps.
 *
 * The version of the OpenAPI document: 2015-02-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RunWorkflowParameters;
import org.openapitools.client.model.Workflow;
import org.openapitools.client.model.WorkflowListResult;
import org.openapitools.client.model.WorkflowRun;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkflowsApi
 */
@Disabled
public class WorkflowsApiTest {

    private final WorkflowsApi api = new WorkflowsApi();

    /**
     * Creates or updates a workflow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowsCreateOrUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String apiVersion = null;
        Workflow workflow = null;
        Workflow response = api.workflowsCreateOrUpdate(subscriptionId, resourceGroupName, workflowName, apiVersion, workflow);
        // TODO: test validations
    }

    /**
     * Deletes a workflow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowsDeleteTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String apiVersion = null;
        api.workflowsDelete(subscriptionId, resourceGroupName, workflowName, apiVersion);
        // TODO: test validations
    }

    /**
     * Disables a workflow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowsDisableTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String apiVersion = null;
        api.workflowsDisable(subscriptionId, resourceGroupName, workflowName, apiVersion);
        // TODO: test validations
    }

    /**
     * Enables a workflow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowsEnableTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String apiVersion = null;
        api.workflowsEnable(subscriptionId, resourceGroupName, workflowName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a workflow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowsGetTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String apiVersion = null;
        Workflow response = api.workflowsGet(subscriptionId, resourceGroupName, workflowName, apiVersion);
        // TODO: test validations
    }

    /**
     * Gets a list of workflows by resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowsListByResourceGroupTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String apiVersion = null;
        Integer $top = null;
        String $filter = null;
        WorkflowListResult response = api.workflowsListByResourceGroup(subscriptionId, resourceGroupName, apiVersion, $top, $filter);
        // TODO: test validations
    }

    /**
     * Gets a list of workflows by subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowsListBySubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String apiVersion = null;
        Integer $top = null;
        String $filter = null;
        WorkflowListResult response = api.workflowsListBySubscription(subscriptionId, apiVersion, $top, $filter);
        // TODO: test validations
    }

    /**
     * Runs a workflow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowsRunTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String apiVersion = null;
        RunWorkflowParameters parameters = null;
        WorkflowRun response = api.workflowsRun(subscriptionId, resourceGroupName, workflowName, apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Updates a workflow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowsUpdateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String apiVersion = null;
        Workflow workflow = null;
        Workflow response = api.workflowsUpdate(subscriptionId, resourceGroupName, workflowName, apiVersion, workflow);
        // TODO: test validations
    }

    /**
     * Validates a workflow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowsValidateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String workflowName = null;
        String apiVersion = null;
        Workflow workflow = null;
        api.workflowsValidate(subscriptionId, resourceGroupName, workflowName, apiVersion, workflow);
        // TODO: test validations
    }

}
