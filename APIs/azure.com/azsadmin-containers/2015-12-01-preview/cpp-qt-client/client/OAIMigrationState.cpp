/**
 * StorageManagementClient
 * The Admin Storage Management Client.
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMigrationState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMigrationState::OAIMigrationState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMigrationState::OAIMigrationState() {
    this->initializeModel();
}

OAIMigrationState::~OAIMigrationState() {}

void OAIMigrationState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMigrationState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMigrationState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Active", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMigrationState::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Paused", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMigrationState::PAUSED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Deleted", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMigrationState::DELETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Rollback", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMigrationState::ROLLBACK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Complete", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMigrationState::COMPLETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Canceled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMigrationState::CANCELED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMigrationState::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("All", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMigrationState::ALL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMigrationState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMigrationState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMigrationState::ACTIVE:
            val = "Active";
            break;
        case eOAIMigrationState::PAUSED:
            val = "Paused";
            break;
        case eOAIMigrationState::DELETED:
            val = "Deleted";
            break;
        case eOAIMigrationState::ROLLBACK:
            val = "Rollback";
            break;
        case eOAIMigrationState::COMPLETE:
            val = "Complete";
            break;
        case eOAIMigrationState::CANCELED:
            val = "Canceled";
            break;
        case eOAIMigrationState::FAILED:
            val = "Failed";
            break;
        case eOAIMigrationState::ALL:
            val = "All";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMigrationState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMigrationState::eOAIMigrationState OAIMigrationState::getValue() const {
    return m_value;
}

void OAIMigrationState::setValue(const OAIMigrationState::eOAIMigrationState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMigrationState::isSet() const {
    
    return m_value_isSet;
}

bool OAIMigrationState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
