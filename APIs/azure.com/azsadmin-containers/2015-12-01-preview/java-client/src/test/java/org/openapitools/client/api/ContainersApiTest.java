/*
 * StorageManagementClient
 * The Admin Storage Management Client.
 *
 * The version of the OpenAPI document: 2015-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Container;
import org.openapitools.client.model.ContainersListDestinationShares200ResponseInner;
import org.openapitools.client.model.MigrationParameters;
import org.openapitools.client.model.MigrationResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContainersApi
 */
@Disabled
public class ContainersApiTest {

    private final ContainersApi api = new ContainersApi();

    /**
     * Cancel a container migration job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containersCancelMigrationTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String farmId = null;
        String operationId = null;
        String apiVersion = null;
        MigrationResult response = api.containersCancelMigration(subscriptionId, resourceGroupName, farmId, operationId, apiVersion);
        // TODO: test validations
    }

    /**
     * Returns the list of containers which can be migrated in the specified share.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containersListTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String farmId = null;
        String shareName = null;
        String apiVersion = null;
        String intent = null;
        Integer maxCount = null;
        Integer startIndex = null;
        List<Container> response = api.containersList(subscriptionId, resourceGroupName, farmId, shareName, apiVersion, intent, maxCount, startIndex);
        // TODO: test validations
    }

    /**
     * Returns a list of destination shares that the system considers as best candidates for migration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containersListDestinationSharesTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String farmId = null;
        String shareName = null;
        String apiVersion = null;
        List<ContainersListDestinationShares200ResponseInner> response = api.containersListDestinationShares(subscriptionId, resourceGroupName, farmId, shareName, apiVersion);
        // TODO: test validations
    }

    /**
     * Starts a container migration job to migrate containers to the specified destination share.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containersMigrateTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String farmId = null;
        String shareName = null;
        String apiVersion = null;
        MigrationParameters migrationParameters = null;
        MigrationResult response = api.containersMigrate(subscriptionId, resourceGroupName, farmId, shareName, apiVersion, migrationParameters);
        // TODO: test validations
    }

    /**
     * Returns the status of a container migration job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void containersMigrationStatusTest() throws ApiException {
        String subscriptionId = null;
        String resourceGroupName = null;
        String farmId = null;
        String operationId = null;
        String apiVersion = null;
        MigrationResult response = api.containersMigrationStatus(subscriptionId, resourceGroupName, farmId, operationId, apiVersion);
        // TODO: test validations
    }

}
