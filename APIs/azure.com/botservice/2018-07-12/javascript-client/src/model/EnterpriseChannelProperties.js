/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2018-07-12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnterpriseChannelNode from './EnterpriseChannelNode';

/**
 * The EnterpriseChannelProperties model module.
 * @module model/EnterpriseChannelProperties
 * @version 2018-07-12
 */
class EnterpriseChannelProperties {
    /**
     * Constructs a new <code>EnterpriseChannelProperties</code>.
     * The parameters to provide for the Enterprise Channel.
     * @alias module:model/EnterpriseChannelProperties
     * @param nodes {Array.<module:model/EnterpriseChannelNode>} The nodes associated with the Enterprise Channel.
     */
    constructor(nodes) { 
        
        EnterpriseChannelProperties.initialize(this, nodes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nodes) { 
        obj['nodes'] = nodes;
    }

    /**
     * Constructs a <code>EnterpriseChannelProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnterpriseChannelProperties} obj Optional instance to populate.
     * @return {module:model/EnterpriseChannelProperties} The populated <code>EnterpriseChannelProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnterpriseChannelProperties();

            if (data.hasOwnProperty('nodes')) {
                obj['nodes'] = ApiClient.convertToType(data['nodes'], [EnterpriseChannelNode]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnterpriseChannelProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnterpriseChannelProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EnterpriseChannelProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['nodes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nodes'])) {
                throw new Error("Expected the field `nodes` to be an array in the JSON data but got " + data['nodes']);
            }
            // validate the optional field `nodes` (array)
            for (const item of data['nodes']) {
                EnterpriseChannelNode.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}

EnterpriseChannelProperties.RequiredProperties = ["nodes"];

/**
 * The nodes associated with the Enterprise Channel.
 * @member {Array.<module:model/EnterpriseChannelNode>} nodes
 */
EnterpriseChannelProperties.prototype['nodes'] = undefined;

/**
 * The current state of the Enterprise Channel.
 * @member {module:model/EnterpriseChannelProperties.StateEnum} state
 */
EnterpriseChannelProperties.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
EnterpriseChannelProperties['StateEnum'] = {

    /**
     * value: "Creating"
     * @const
     */
    "Creating": "Creating",

    /**
     * value: "CreateFailed"
     * @const
     */
    "CreateFailed": "CreateFailed",

    /**
     * value: "Started"
     * @const
     */
    "Started": "Started",

    /**
     * value: "Starting"
     * @const
     */
    "Starting": "Starting",

    /**
     * value: "StartFailed"
     * @const
     */
    "StartFailed": "StartFailed",

    /**
     * value: "Stopped"
     * @const
     */
    "Stopped": "Stopped",

    /**
     * value: "Stopping"
     * @const
     */
    "Stopping": "Stopping",

    /**
     * value: "StopFailed"
     * @const
     */
    "StopFailed": "StopFailed",

    /**
     * value: "Deleting"
     * @const
     */
    "Deleting": "Deleting",

    /**
     * value: "DeleteFailed"
     * @const
     */
    "DeleteFailed": "DeleteFailed"
};



export default EnterpriseChannelProperties;

