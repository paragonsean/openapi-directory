/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2018-07-12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISkypeChannelProperties.h
 *
 * The parameters to provide for the Microsoft Teams channel.
 */

#ifndef OAISkypeChannelProperties_H
#define OAISkypeChannelProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISkypeChannelProperties : public OAIObject {
public:
    OAISkypeChannelProperties();
    OAISkypeChannelProperties(QString json);
    ~OAISkypeChannelProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCallingWebHook() const;
    void setCallingWebHook(const QString &calling_web_hook);
    bool is_calling_web_hook_Set() const;
    bool is_calling_web_hook_Valid() const;

    bool isEnableCalling() const;
    void setEnableCalling(const bool &enable_calling);
    bool is_enable_calling_Set() const;
    bool is_enable_calling_Valid() const;

    bool isEnableGroups() const;
    void setEnableGroups(const bool &enable_groups);
    bool is_enable_groups_Set() const;
    bool is_enable_groups_Valid() const;

    bool isEnableMediaCards() const;
    void setEnableMediaCards(const bool &enable_media_cards);
    bool is_enable_media_cards_Set() const;
    bool is_enable_media_cards_Valid() const;

    bool isEnableMessaging() const;
    void setEnableMessaging(const bool &enable_messaging);
    bool is_enable_messaging_Set() const;
    bool is_enable_messaging_Valid() const;

    bool isEnableScreenSharing() const;
    void setEnableScreenSharing(const bool &enable_screen_sharing);
    bool is_enable_screen_sharing_Set() const;
    bool is_enable_screen_sharing_Valid() const;

    bool isEnableVideo() const;
    void setEnableVideo(const bool &enable_video);
    bool is_enable_video_Set() const;
    bool is_enable_video_Valid() const;

    QString getGroupsMode() const;
    void setGroupsMode(const QString &groups_mode);
    bool is_groups_mode_Set() const;
    bool is_groups_mode_Valid() const;

    bool isIsEnabled() const;
    void setIsEnabled(const bool &is_enabled);
    bool is_is_enabled_Set() const;
    bool is_is_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_calling_web_hook;
    bool m_calling_web_hook_isSet;
    bool m_calling_web_hook_isValid;

    bool m_enable_calling;
    bool m_enable_calling_isSet;
    bool m_enable_calling_isValid;

    bool m_enable_groups;
    bool m_enable_groups_isSet;
    bool m_enable_groups_isValid;

    bool m_enable_media_cards;
    bool m_enable_media_cards_isSet;
    bool m_enable_media_cards_isValid;

    bool m_enable_messaging;
    bool m_enable_messaging_isSet;
    bool m_enable_messaging_isValid;

    bool m_enable_screen_sharing;
    bool m_enable_screen_sharing_isSet;
    bool m_enable_screen_sharing_isValid;

    bool m_enable_video;
    bool m_enable_video_isSet;
    bool m_enable_video_isValid;

    QString m_groups_mode;
    bool m_groups_mode_isSet;
    bool m_groups_mode_isValid;

    bool m_is_enabled;
    bool m_is_enabled_isSet;
    bool m_is_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISkypeChannelProperties)

#endif // OAISkypeChannelProperties_H
