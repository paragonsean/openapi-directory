/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2018-07-12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMsTeamsChannelProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMsTeamsChannelProperties::OAIMsTeamsChannelProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMsTeamsChannelProperties::OAIMsTeamsChannelProperties() {
    this->initializeModel();
}

OAIMsTeamsChannelProperties::~OAIMsTeamsChannelProperties() {}

void OAIMsTeamsChannelProperties::initializeModel() {

    m_calling_web_hook_isSet = false;
    m_calling_web_hook_isValid = false;

    m_enable_calling_isSet = false;
    m_enable_calling_isValid = false;

    m_is_enabled_isSet = false;
    m_is_enabled_isValid = false;
}

void OAIMsTeamsChannelProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMsTeamsChannelProperties::fromJsonObject(QJsonObject json) {

    m_calling_web_hook_isValid = ::OpenAPI::fromJsonValue(m_calling_web_hook, json[QString("callingWebHook")]);
    m_calling_web_hook_isSet = !json[QString("callingWebHook")].isNull() && m_calling_web_hook_isValid;

    m_enable_calling_isValid = ::OpenAPI::fromJsonValue(m_enable_calling, json[QString("enableCalling")]);
    m_enable_calling_isSet = !json[QString("enableCalling")].isNull() && m_enable_calling_isValid;

    m_is_enabled_isValid = ::OpenAPI::fromJsonValue(m_is_enabled, json[QString("isEnabled")]);
    m_is_enabled_isSet = !json[QString("isEnabled")].isNull() && m_is_enabled_isValid;
}

QString OAIMsTeamsChannelProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMsTeamsChannelProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_calling_web_hook_isSet) {
        obj.insert(QString("callingWebHook"), ::OpenAPI::toJsonValue(m_calling_web_hook));
    }
    if (m_enable_calling_isSet) {
        obj.insert(QString("enableCalling"), ::OpenAPI::toJsonValue(m_enable_calling));
    }
    if (m_is_enabled_isSet) {
        obj.insert(QString("isEnabled"), ::OpenAPI::toJsonValue(m_is_enabled));
    }
    return obj;
}

QString OAIMsTeamsChannelProperties::getCallingWebHook() const {
    return m_calling_web_hook;
}
void OAIMsTeamsChannelProperties::setCallingWebHook(const QString &calling_web_hook) {
    m_calling_web_hook = calling_web_hook;
    m_calling_web_hook_isSet = true;
}

bool OAIMsTeamsChannelProperties::is_calling_web_hook_Set() const{
    return m_calling_web_hook_isSet;
}

bool OAIMsTeamsChannelProperties::is_calling_web_hook_Valid() const{
    return m_calling_web_hook_isValid;
}

bool OAIMsTeamsChannelProperties::isEnableCalling() const {
    return m_enable_calling;
}
void OAIMsTeamsChannelProperties::setEnableCalling(const bool &enable_calling) {
    m_enable_calling = enable_calling;
    m_enable_calling_isSet = true;
}

bool OAIMsTeamsChannelProperties::is_enable_calling_Set() const{
    return m_enable_calling_isSet;
}

bool OAIMsTeamsChannelProperties::is_enable_calling_Valid() const{
    return m_enable_calling_isValid;
}

bool OAIMsTeamsChannelProperties::isIsEnabled() const {
    return m_is_enabled;
}
void OAIMsTeamsChannelProperties::setIsEnabled(const bool &is_enabled) {
    m_is_enabled = is_enabled;
    m_is_enabled_isSet = true;
}

bool OAIMsTeamsChannelProperties::is_is_enabled_Set() const{
    return m_is_enabled_isSet;
}

bool OAIMsTeamsChannelProperties::is_is_enabled_Valid() const{
    return m_is_enabled_isValid;
}

bool OAIMsTeamsChannelProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_calling_web_hook_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_calling_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMsTeamsChannelProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_is_enabled_isValid && true;
}

} // namespace OpenAPI
