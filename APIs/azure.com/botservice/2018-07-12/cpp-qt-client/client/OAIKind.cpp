/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2018-07-12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKind.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKind::OAIKind(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKind::OAIKind() {
    this->initializeModel();
}

OAIKind::~OAIKind() {}

void OAIKind::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIKind::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIKind::fromJson(QString jsonString) {
    
    if ( jsonString.compare("sdk", Qt::CaseInsensitive) == 0) {
        m_value = eOAIKind::SDK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("designer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIKind::DESIGNER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("bot", Qt::CaseInsensitive) == 0) {
        m_value = eOAIKind::BOT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("function", Qt::CaseInsensitive) == 0) {
        m_value = eOAIKind::FUNCTION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIKind::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIKind::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIKind::SDK:
            val = "sdk";
            break;
        case eOAIKind::DESIGNER:
            val = "designer";
            break;
        case eOAIKind::BOT:
            val = "bot";
            break;
        case eOAIKind::FUNCTION:
            val = "function";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIKind::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIKind::eOAIKind OAIKind::getValue() const {
    return m_value;
}

void OAIKind::setValue(const OAIKind::eOAIKind& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIKind::isSet() const {
    
    return m_value_isSet;
}

bool OAIKind::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
