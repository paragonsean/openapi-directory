# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MsTeamsChannelProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calling_web_hook: str=None, enable_calling: bool=None, is_enabled: bool=None):
        """MsTeamsChannelProperties - a model defined in OpenAPI

        :param calling_web_hook: The calling_web_hook of this MsTeamsChannelProperties.
        :param enable_calling: The enable_calling of this MsTeamsChannelProperties.
        :param is_enabled: The is_enabled of this MsTeamsChannelProperties.
        """
        self.openapi_types = {
            'calling_web_hook': str,
            'enable_calling': bool,
            'is_enabled': bool
        }

        self.attribute_map = {
            'calling_web_hook': 'callingWebHook',
            'enable_calling': 'enableCalling',
            'is_enabled': 'isEnabled'
        }

        self._calling_web_hook = calling_web_hook
        self._enable_calling = enable_calling
        self._is_enabled = is_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MsTeamsChannelProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MsTeamsChannelProperties of this MsTeamsChannelProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calling_web_hook(self):
        """Gets the calling_web_hook of this MsTeamsChannelProperties.

        Webhook for Microsoft Teams channel calls

        :return: The calling_web_hook of this MsTeamsChannelProperties.
        :rtype: str
        """
        return self._calling_web_hook

    @calling_web_hook.setter
    def calling_web_hook(self, calling_web_hook):
        """Sets the calling_web_hook of this MsTeamsChannelProperties.

        Webhook for Microsoft Teams channel calls

        :param calling_web_hook: The calling_web_hook of this MsTeamsChannelProperties.
        :type calling_web_hook: str
        """

        self._calling_web_hook = calling_web_hook

    @property
    def enable_calling(self):
        """Gets the enable_calling of this MsTeamsChannelProperties.

        Enable calling for Microsoft Teams channel

        :return: The enable_calling of this MsTeamsChannelProperties.
        :rtype: bool
        """
        return self._enable_calling

    @enable_calling.setter
    def enable_calling(self, enable_calling):
        """Sets the enable_calling of this MsTeamsChannelProperties.

        Enable calling for Microsoft Teams channel

        :param enable_calling: The enable_calling of this MsTeamsChannelProperties.
        :type enable_calling: bool
        """

        self._enable_calling = enable_calling

    @property
    def is_enabled(self):
        """Gets the is_enabled of this MsTeamsChannelProperties.

        Whether this channel is enabled for the bot

        :return: The is_enabled of this MsTeamsChannelProperties.
        :rtype: bool
        """
        return self._is_enabled

    @is_enabled.setter
    def is_enabled(self, is_enabled):
        """Sets the is_enabled of this MsTeamsChannelProperties.

        Whether this channel is enabled for the bot

        :param is_enabled: The is_enabled of this MsTeamsChannelProperties.
        :type is_enabled: bool
        """
        if is_enabled is None:
            raise ValueError("Invalid value for `is_enabled`, must not be `None`")

        self._is_enabled = is_enabled
