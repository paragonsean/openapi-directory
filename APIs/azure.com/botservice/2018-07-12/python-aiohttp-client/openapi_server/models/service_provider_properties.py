# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_provider_parameter import ServiceProviderParameter
from openapi_server import util


class ServiceProviderProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dev_portal_url: str=None, display_name: str=None, icon_url: str=None, id: str=None, parameters: List[ServiceProviderParameter]=None, service_provider_name: str=None):
        """ServiceProviderProperties - a model defined in OpenAPI

        :param dev_portal_url: The dev_portal_url of this ServiceProviderProperties.
        :param display_name: The display_name of this ServiceProviderProperties.
        :param icon_url: The icon_url of this ServiceProviderProperties.
        :param id: The id of this ServiceProviderProperties.
        :param parameters: The parameters of this ServiceProviderProperties.
        :param service_provider_name: The service_provider_name of this ServiceProviderProperties.
        """
        self.openapi_types = {
            'dev_portal_url': str,
            'display_name': str,
            'icon_url': str,
            'id': str,
            'parameters': List[ServiceProviderParameter],
            'service_provider_name': str
        }

        self.attribute_map = {
            'dev_portal_url': 'devPortalUrl',
            'display_name': 'displayName',
            'icon_url': 'iconUrl',
            'id': 'id',
            'parameters': 'parameters',
            'service_provider_name': 'serviceProviderName'
        }

        self._dev_portal_url = dev_portal_url
        self._display_name = display_name
        self._icon_url = icon_url
        self._id = id
        self._parameters = parameters
        self._service_provider_name = service_provider_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceProviderProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceProviderProperties of this ServiceProviderProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dev_portal_url(self):
        """Gets the dev_portal_url of this ServiceProviderProperties.

        Display Name of the Service Provider

        :return: The dev_portal_url of this ServiceProviderProperties.
        :rtype: str
        """
        return self._dev_portal_url

    @dev_portal_url.setter
    def dev_portal_url(self, dev_portal_url):
        """Sets the dev_portal_url of this ServiceProviderProperties.

        Display Name of the Service Provider

        :param dev_portal_url: The dev_portal_url of this ServiceProviderProperties.
        :type dev_portal_url: str
        """

        self._dev_portal_url = dev_portal_url

    @property
    def display_name(self):
        """Gets the display_name of this ServiceProviderProperties.

        Display Name of the Service Provider

        :return: The display_name of this ServiceProviderProperties.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ServiceProviderProperties.

        Display Name of the Service Provider

        :param display_name: The display_name of this ServiceProviderProperties.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def icon_url(self):
        """Gets the icon_url of this ServiceProviderProperties.

        Display Name of the Service Provider

        :return: The icon_url of this ServiceProviderProperties.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this ServiceProviderProperties.

        Display Name of the Service Provider

        :param icon_url: The icon_url of this ServiceProviderProperties.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def id(self):
        """Gets the id of this ServiceProviderProperties.

        Id for Service Provider

        :return: The id of this ServiceProviderProperties.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ServiceProviderProperties.

        Id for Service Provider

        :param id: The id of this ServiceProviderProperties.
        :type id: str
        """

        self._id = id

    @property
    def parameters(self):
        """Gets the parameters of this ServiceProviderProperties.

        The list of parameters for the Service Provider

        :return: The parameters of this ServiceProviderProperties.
        :rtype: List[ServiceProviderParameter]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this ServiceProviderProperties.

        The list of parameters for the Service Provider

        :param parameters: The parameters of this ServiceProviderProperties.
        :type parameters: List[ServiceProviderParameter]
        """

        self._parameters = parameters

    @property
    def service_provider_name(self):
        """Gets the service_provider_name of this ServiceProviderProperties.

        Display Name of the Service Provider

        :return: The service_provider_name of this ServiceProviderProperties.
        :rtype: str
        """
        return self._service_provider_name

    @service_provider_name.setter
    def service_provider_name(self, service_provider_name):
        """Sets the service_provider_name of this ServiceProviderProperties.

        Display Name of the Service Provider

        :param service_provider_name: The service_provider_name of this ServiceProviderProperties.
        :type service_provider_name: str
        """

        self._service_provider_name = service_provider_name
