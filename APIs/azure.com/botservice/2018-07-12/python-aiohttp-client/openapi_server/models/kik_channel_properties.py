# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KikChannelProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_key: str=None, is_enabled: bool=None, is_validated: bool=None, user_name: str=None):
        """KikChannelProperties - a model defined in OpenAPI

        :param api_key: The api_key of this KikChannelProperties.
        :param is_enabled: The is_enabled of this KikChannelProperties.
        :param is_validated: The is_validated of this KikChannelProperties.
        :param user_name: The user_name of this KikChannelProperties.
        """
        self.openapi_types = {
            'api_key': str,
            'is_enabled': bool,
            'is_validated': bool,
            'user_name': str
        }

        self.attribute_map = {
            'api_key': 'apiKey',
            'is_enabled': 'isEnabled',
            'is_validated': 'isValidated',
            'user_name': 'userName'
        }

        self._api_key = api_key
        self._is_enabled = is_enabled
        self._is_validated = is_validated
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KikChannelProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KikChannelProperties of this KikChannelProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_key(self):
        """Gets the api_key of this KikChannelProperties.

        Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.

        :return: The api_key of this KikChannelProperties.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this KikChannelProperties.

        Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.

        :param api_key: The api_key of this KikChannelProperties.
        :type api_key: str
        """
        if api_key is None:
            raise ValueError("Invalid value for `api_key`, must not be `None`")

        self._api_key = api_key

    @property
    def is_enabled(self):
        """Gets the is_enabled of this KikChannelProperties.

        Whether this channel is enabled for the bot

        :return: The is_enabled of this KikChannelProperties.
        :rtype: bool
        """
        return self._is_enabled

    @is_enabled.setter
    def is_enabled(self, is_enabled):
        """Sets the is_enabled of this KikChannelProperties.

        Whether this channel is enabled for the bot

        :param is_enabled: The is_enabled of this KikChannelProperties.
        :type is_enabled: bool
        """
        if is_enabled is None:
            raise ValueError("Invalid value for `is_enabled`, must not be `None`")

        self._is_enabled = is_enabled

    @property
    def is_validated(self):
        """Gets the is_validated of this KikChannelProperties.

        Whether this channel is validated for the bot

        :return: The is_validated of this KikChannelProperties.
        :rtype: bool
        """
        return self._is_validated

    @is_validated.setter
    def is_validated(self, is_validated):
        """Sets the is_validated of this KikChannelProperties.

        Whether this channel is validated for the bot

        :param is_validated: The is_validated of this KikChannelProperties.
        :type is_validated: bool
        """

        self._is_validated = is_validated

    @property
    def user_name(self):
        """Gets the user_name of this KikChannelProperties.

        The Kik user name

        :return: The user_name of this KikChannelProperties.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this KikChannelProperties.

        The Kik user name

        :param user_name: The user_name of this KikChannelProperties.
        :type user_name: str
        """
        if user_name is None:
            raise ValueError("Invalid value for `user_name`, must not be `None`")

        self._user_name = user_name
