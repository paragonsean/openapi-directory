# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SkypeChannelProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calling_web_hook: str=None, enable_calling: bool=None, enable_groups: bool=None, enable_media_cards: bool=None, enable_messaging: bool=None, enable_screen_sharing: bool=None, enable_video: bool=None, groups_mode: str=None, is_enabled: bool=None):
        """SkypeChannelProperties - a model defined in OpenAPI

        :param calling_web_hook: The calling_web_hook of this SkypeChannelProperties.
        :param enable_calling: The enable_calling of this SkypeChannelProperties.
        :param enable_groups: The enable_groups of this SkypeChannelProperties.
        :param enable_media_cards: The enable_media_cards of this SkypeChannelProperties.
        :param enable_messaging: The enable_messaging of this SkypeChannelProperties.
        :param enable_screen_sharing: The enable_screen_sharing of this SkypeChannelProperties.
        :param enable_video: The enable_video of this SkypeChannelProperties.
        :param groups_mode: The groups_mode of this SkypeChannelProperties.
        :param is_enabled: The is_enabled of this SkypeChannelProperties.
        """
        self.openapi_types = {
            'calling_web_hook': str,
            'enable_calling': bool,
            'enable_groups': bool,
            'enable_media_cards': bool,
            'enable_messaging': bool,
            'enable_screen_sharing': bool,
            'enable_video': bool,
            'groups_mode': str,
            'is_enabled': bool
        }

        self.attribute_map = {
            'calling_web_hook': 'callingWebHook',
            'enable_calling': 'enableCalling',
            'enable_groups': 'enableGroups',
            'enable_media_cards': 'enableMediaCards',
            'enable_messaging': 'enableMessaging',
            'enable_screen_sharing': 'enableScreenSharing',
            'enable_video': 'enableVideo',
            'groups_mode': 'groupsMode',
            'is_enabled': 'isEnabled'
        }

        self._calling_web_hook = calling_web_hook
        self._enable_calling = enable_calling
        self._enable_groups = enable_groups
        self._enable_media_cards = enable_media_cards
        self._enable_messaging = enable_messaging
        self._enable_screen_sharing = enable_screen_sharing
        self._enable_video = enable_video
        self._groups_mode = groups_mode
        self._is_enabled = is_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SkypeChannelProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SkypeChannelProperties of this SkypeChannelProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calling_web_hook(self):
        """Gets the calling_web_hook of this SkypeChannelProperties.

        Calling web hook for Skype channel

        :return: The calling_web_hook of this SkypeChannelProperties.
        :rtype: str
        """
        return self._calling_web_hook

    @calling_web_hook.setter
    def calling_web_hook(self, calling_web_hook):
        """Sets the calling_web_hook of this SkypeChannelProperties.

        Calling web hook for Skype channel

        :param calling_web_hook: The calling_web_hook of this SkypeChannelProperties.
        :type calling_web_hook: str
        """

        self._calling_web_hook = calling_web_hook

    @property
    def enable_calling(self):
        """Gets the enable_calling of this SkypeChannelProperties.

        Enable calling for Skype channel

        :return: The enable_calling of this SkypeChannelProperties.
        :rtype: bool
        """
        return self._enable_calling

    @enable_calling.setter
    def enable_calling(self, enable_calling):
        """Sets the enable_calling of this SkypeChannelProperties.

        Enable calling for Skype channel

        :param enable_calling: The enable_calling of this SkypeChannelProperties.
        :type enable_calling: bool
        """

        self._enable_calling = enable_calling

    @property
    def enable_groups(self):
        """Gets the enable_groups of this SkypeChannelProperties.

        Enable groups for Skype channel

        :return: The enable_groups of this SkypeChannelProperties.
        :rtype: bool
        """
        return self._enable_groups

    @enable_groups.setter
    def enable_groups(self, enable_groups):
        """Sets the enable_groups of this SkypeChannelProperties.

        Enable groups for Skype channel

        :param enable_groups: The enable_groups of this SkypeChannelProperties.
        :type enable_groups: bool
        """

        self._enable_groups = enable_groups

    @property
    def enable_media_cards(self):
        """Gets the enable_media_cards of this SkypeChannelProperties.

        Enable media cards for Skype channel

        :return: The enable_media_cards of this SkypeChannelProperties.
        :rtype: bool
        """
        return self._enable_media_cards

    @enable_media_cards.setter
    def enable_media_cards(self, enable_media_cards):
        """Sets the enable_media_cards of this SkypeChannelProperties.

        Enable media cards for Skype channel

        :param enable_media_cards: The enable_media_cards of this SkypeChannelProperties.
        :type enable_media_cards: bool
        """

        self._enable_media_cards = enable_media_cards

    @property
    def enable_messaging(self):
        """Gets the enable_messaging of this SkypeChannelProperties.

        Enable messaging for Skype channel

        :return: The enable_messaging of this SkypeChannelProperties.
        :rtype: bool
        """
        return self._enable_messaging

    @enable_messaging.setter
    def enable_messaging(self, enable_messaging):
        """Sets the enable_messaging of this SkypeChannelProperties.

        Enable messaging for Skype channel

        :param enable_messaging: The enable_messaging of this SkypeChannelProperties.
        :type enable_messaging: bool
        """

        self._enable_messaging = enable_messaging

    @property
    def enable_screen_sharing(self):
        """Gets the enable_screen_sharing of this SkypeChannelProperties.

        Enable screen sharing for Skype channel

        :return: The enable_screen_sharing of this SkypeChannelProperties.
        :rtype: bool
        """
        return self._enable_screen_sharing

    @enable_screen_sharing.setter
    def enable_screen_sharing(self, enable_screen_sharing):
        """Sets the enable_screen_sharing of this SkypeChannelProperties.

        Enable screen sharing for Skype channel

        :param enable_screen_sharing: The enable_screen_sharing of this SkypeChannelProperties.
        :type enable_screen_sharing: bool
        """

        self._enable_screen_sharing = enable_screen_sharing

    @property
    def enable_video(self):
        """Gets the enable_video of this SkypeChannelProperties.

        Enable video for Skype channel

        :return: The enable_video of this SkypeChannelProperties.
        :rtype: bool
        """
        return self._enable_video

    @enable_video.setter
    def enable_video(self, enable_video):
        """Sets the enable_video of this SkypeChannelProperties.

        Enable video for Skype channel

        :param enable_video: The enable_video of this SkypeChannelProperties.
        :type enable_video: bool
        """

        self._enable_video = enable_video

    @property
    def groups_mode(self):
        """Gets the groups_mode of this SkypeChannelProperties.

        Group mode for Skype channel

        :return: The groups_mode of this SkypeChannelProperties.
        :rtype: str
        """
        return self._groups_mode

    @groups_mode.setter
    def groups_mode(self, groups_mode):
        """Sets the groups_mode of this SkypeChannelProperties.

        Group mode for Skype channel

        :param groups_mode: The groups_mode of this SkypeChannelProperties.
        :type groups_mode: str
        """

        self._groups_mode = groups_mode

    @property
    def is_enabled(self):
        """Gets the is_enabled of this SkypeChannelProperties.

        Whether this channel is enabled for the bot

        :return: The is_enabled of this SkypeChannelProperties.
        :rtype: bool
        """
        return self._is_enabled

    @is_enabled.setter
    def is_enabled(self, is_enabled):
        """Sets the is_enabled of this SkypeChannelProperties.

        Whether this channel is enabled for the bot

        :param is_enabled: The is_enabled of this SkypeChannelProperties.
        :type is_enabled: bool
        """
        if is_enabled is None:
            raise ValueError("Invalid value for `is_enabled`, must not be `None`")

        self._is_enabled = is_enabled
