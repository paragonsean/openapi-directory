/*
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2018-07-12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BotChannel;
import org.openapitools.client.model.ChannelResponseList;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChannelApi
 */
@Disabled
public class ChannelApiTest {

    private final ChannelApi api = new ChannelApi();

    /**
     * Creates a Channel registration for a Bot Service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void channelsCreateTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String channelName = null;
        String apiVersion = null;
        String subscriptionId = null;
        BotChannel parameters = null;
        BotChannel response = api.channelsCreate(resourceGroupName, resourceName, channelName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a Channel registration from a Bot Service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void channelsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String channelName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.channelsDelete(resourceGroupName, resourceName, channelName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Returns a BotService Channel registration specified by the parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void channelsGetTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String channelName = null;
        String apiVersion = null;
        String subscriptionId = null;
        BotChannel response = api.channelsGet(resourceGroupName, resourceName, channelName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Returns all the Channel registrations of a particular BotService resource
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void channelsListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String subscriptionId = null;
        String apiVersion = null;
        ChannelResponseList response = api.channelsListByResourceGroup(resourceGroupName, resourceName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Lists a Channel registration for a Bot Service including secrets
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void channelsListWithKeysTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String channelName = null;
        String apiVersion = null;
        String subscriptionId = null;
        BotChannel response = api.channelsListWithKeys(resourceGroupName, resourceName, channelName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Updates a Channel registration for a Bot Service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void channelsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String channelName = null;
        String apiVersion = null;
        String subscriptionId = null;
        BotChannel parameters = null;
        BotChannel response = api.channelsUpdate(resourceGroupName, resourceName, channelName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
