/*
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2018-07-12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EnterpriseChannel;
import org.openapitools.client.model.EnterpriseChannelCheckNameAvailabilityRequest;
import org.openapitools.client.model.EnterpriseChannelCheckNameAvailabilityResponse;
import org.openapitools.client.model.EnterpriseChannelResponseList;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EnterpriseChannelApi
 */
@Disabled
public class EnterpriseChannelApiTest {

    private final EnterpriseChannelApi api = new EnterpriseChannelApi();

    /**
     * Check whether an Enterprise Channel name is available.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enterpriseChannelsCheckNameAvailabilityTest() throws ApiException {
        String apiVersion = null;
        EnterpriseChannelCheckNameAvailabilityRequest parameters = null;
        EnterpriseChannelCheckNameAvailabilityResponse response = api.enterpriseChannelsCheckNameAvailability(apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Creates an Enterprise Channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enterpriseChannelsCreateTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        EnterpriseChannel parameters = null;
        EnterpriseChannel response = api.enterpriseChannelsCreate(resourceGroupName, resourceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes an Enterprise Channel from the resource group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enterpriseChannelsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.enterpriseChannelsDelete(resourceGroupName, resourceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Returns an Enterprise Channel specified by the parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enterpriseChannelsGetTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        EnterpriseChannel response = api.enterpriseChannelsGet(resourceGroupName, resourceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Returns all the resources of a particular type belonging to a resource group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enterpriseChannelsListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        EnterpriseChannelResponseList response = api.enterpriseChannelsListByResourceGroup(resourceGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates an Enterprise Channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enterpriseChannelsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        EnterpriseChannel parameters = null;
        EnterpriseChannel response = api.enterpriseChannelsUpdate(resourceGroupName, resourceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
