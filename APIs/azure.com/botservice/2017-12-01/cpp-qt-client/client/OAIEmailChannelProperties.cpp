/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2017-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmailChannelProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmailChannelProperties::OAIEmailChannelProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmailChannelProperties::OAIEmailChannelProperties() {
    this->initializeModel();
}

OAIEmailChannelProperties::~OAIEmailChannelProperties() {}

void OAIEmailChannelProperties::initializeModel() {

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_is_enabled_isSet = false;
    m_is_enabled_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;
}

void OAIEmailChannelProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmailChannelProperties::fromJsonObject(QJsonObject json) {

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("emailAddress")]);
    m_email_address_isSet = !json[QString("emailAddress")].isNull() && m_email_address_isValid;

    m_is_enabled_isValid = ::OpenAPI::fromJsonValue(m_is_enabled, json[QString("isEnabled")]);
    m_is_enabled_isSet = !json[QString("isEnabled")].isNull() && m_is_enabled_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;
}

QString OAIEmailChannelProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmailChannelProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_email_address_isSet) {
        obj.insert(QString("emailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_is_enabled_isSet) {
        obj.insert(QString("isEnabled"), ::OpenAPI::toJsonValue(m_is_enabled));
    }
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(m_password));
    }
    return obj;
}

QString OAIEmailChannelProperties::getEmailAddress() const {
    return m_email_address;
}
void OAIEmailChannelProperties::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIEmailChannelProperties::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIEmailChannelProperties::is_email_address_Valid() const{
    return m_email_address_isValid;
}

bool OAIEmailChannelProperties::isIsEnabled() const {
    return m_is_enabled;
}
void OAIEmailChannelProperties::setIsEnabled(const bool &is_enabled) {
    m_is_enabled = is_enabled;
    m_is_enabled_isSet = true;
}

bool OAIEmailChannelProperties::is_is_enabled_Set() const{
    return m_is_enabled_isSet;
}

bool OAIEmailChannelProperties::is_is_enabled_Valid() const{
    return m_is_enabled_isValid;
}

QString OAIEmailChannelProperties::getPassword() const {
    return m_password;
}
void OAIEmailChannelProperties::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIEmailChannelProperties::is_password_Set() const{
    return m_password_isSet;
}

bool OAIEmailChannelProperties::is_password_Valid() const{
    return m_password_isValid;
}

bool OAIEmailChannelProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmailChannelProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_address_isValid && m_is_enabled_isValid && m_password_isValid && true;
}

} // namespace OpenAPI
