/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2017-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISlackChannelProperties.h
 *
 * The parameters to provide for the Slack channel.
 */

#ifndef OAISlackChannelProperties_H
#define OAISlackChannelProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISlackChannelProperties : public OAIObject {
public:
    OAISlackChannelProperties();
    OAISlackChannelProperties(QString json);
    ~OAISlackChannelProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getClientSecret() const;
    void setClientSecret(const QString &client_secret);
    bool is_client_secret_Set() const;
    bool is_client_secret_Valid() const;

    bool isIsEnabled() const;
    void setIsEnabled(const bool &is_enabled);
    bool is_is_enabled_Set() const;
    bool is_is_enabled_Valid() const;

    bool isIsValidated() const;
    void setIsValidated(const bool &is_validated);
    bool is_is_validated_Set() const;
    bool is_is_validated_Valid() const;

    QString getLandingPageUrl() const;
    void setLandingPageUrl(const QString &landing_page_url);
    bool is_landing_page_url_Set() const;
    bool is_landing_page_url_Valid() const;

    QString getLastSubmissionId() const;
    void setLastSubmissionId(const QString &last_submission_id);
    bool is_last_submission_id_Set() const;
    bool is_last_submission_id_Valid() const;

    QString getRedirectAction() const;
    void setRedirectAction(const QString &redirect_action);
    bool is_redirect_action_Set() const;
    bool is_redirect_action_Valid() const;

    bool isRegisterBeforeOAuthFlow() const;
    void setRegisterBeforeOAuthFlow(const bool &register_before_o_auth_flow);
    bool is_register_before_o_auth_flow_Set() const;
    bool is_register_before_o_auth_flow_Valid() const;

    QString getVerificationToken() const;
    void setVerificationToken(const QString &verification_token);
    bool is_verification_token_Set() const;
    bool is_verification_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_client_secret;
    bool m_client_secret_isSet;
    bool m_client_secret_isValid;

    bool m_is_enabled;
    bool m_is_enabled_isSet;
    bool m_is_enabled_isValid;

    bool m_is_validated;
    bool m_is_validated_isSet;
    bool m_is_validated_isValid;

    QString m_landing_page_url;
    bool m_landing_page_url_isSet;
    bool m_landing_page_url_isValid;

    QString m_last_submission_id;
    bool m_last_submission_id_isSet;
    bool m_last_submission_id_isValid;

    QString m_redirect_action;
    bool m_redirect_action_isSet;
    bool m_redirect_action_isValid;

    bool m_register_before_o_auth_flow;
    bool m_register_before_o_auth_flow_isSet;
    bool m_register_before_o_auth_flow_isValid;

    QString m_verification_token;
    bool m_verification_token_isSet;
    bool m_verification_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISlackChannelProperties)

#endif // OAISlackChannelProperties_H
