/**
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2017-12-01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBotProperties.h
 *
 * The parameters to provide for the Bot.
 */

#ifndef OAIBotProperties_H
#define OAIBotProperties_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBotProperties : public OAIObject {
public:
    OAIBotProperties();
    OAIBotProperties(QString json);
    ~OAIBotProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getConfiguredChannels() const;
    void setConfiguredChannels(const QList<QString> &configured_channels);
    bool is_configured_channels_Set() const;
    bool is_configured_channels_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDeveloperAppInsightKey() const;
    void setDeveloperAppInsightKey(const QString &developer_app_insight_key);
    bool is_developer_app_insight_key_Set() const;
    bool is_developer_app_insight_key_Valid() const;

    QString getDeveloperAppInsightsApiKey() const;
    void setDeveloperAppInsightsApiKey(const QString &developer_app_insights_api_key);
    bool is_developer_app_insights_api_key_Set() const;
    bool is_developer_app_insights_api_key_Valid() const;

    QString getDeveloperAppInsightsApplicationId() const;
    void setDeveloperAppInsightsApplicationId(const QString &developer_app_insights_application_id);
    bool is_developer_app_insights_application_id_Set() const;
    bool is_developer_app_insights_application_id_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<QString> getEnabledChannels() const;
    void setEnabledChannels(const QList<QString> &enabled_channels);
    bool is_enabled_channels_Set() const;
    bool is_enabled_channels_Valid() const;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    QString getEndpointVersion() const;
    void setEndpointVersion(const QString &endpoint_version);
    bool is_endpoint_version_Set() const;
    bool is_endpoint_version_Valid() const;

    QString getIconUrl() const;
    void setIconUrl(const QString &icon_url);
    bool is_icon_url_Set() const;
    bool is_icon_url_Valid() const;

    QList<QString> getLuisAppIds() const;
    void setLuisAppIds(const QList<QString> &luis_app_ids);
    bool is_luis_app_ids_Set() const;
    bool is_luis_app_ids_Valid() const;

    QString getLuisKey() const;
    void setLuisKey(const QString &luis_key);
    bool is_luis_key_Set() const;
    bool is_luis_key_Valid() const;

    QString getMsaAppId() const;
    void setMsaAppId(const QString &msa_app_id);
    bool is_msa_app_id_Set() const;
    bool is_msa_app_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_configured_channels;
    bool m_configured_channels_isSet;
    bool m_configured_channels_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_developer_app_insight_key;
    bool m_developer_app_insight_key_isSet;
    bool m_developer_app_insight_key_isValid;

    QString m_developer_app_insights_api_key;
    bool m_developer_app_insights_api_key_isSet;
    bool m_developer_app_insights_api_key_isValid;

    QString m_developer_app_insights_application_id;
    bool m_developer_app_insights_application_id_isSet;
    bool m_developer_app_insights_application_id_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<QString> m_enabled_channels;
    bool m_enabled_channels_isSet;
    bool m_enabled_channels_isValid;

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    QString m_endpoint_version;
    bool m_endpoint_version_isSet;
    bool m_endpoint_version_isValid;

    QString m_icon_url;
    bool m_icon_url_isSet;
    bool m_icon_url_isValid;

    QList<QString> m_luis_app_ids;
    bool m_luis_app_ids_isSet;
    bool m_luis_app_ids_isValid;

    QString m_luis_key;
    bool m_luis_key_isSet;
    bool m_luis_key_isValid;

    QString m_msa_app_id;
    bool m_msa_app_id_isSet;
    bool m_msa_app_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBotProperties)

#endif // OAIBotProperties_H
