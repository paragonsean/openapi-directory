/*
 * Azure Bot Service
 * Azure Bot Service is a platform for creating smart conversational agents.
 *
 * The version of the OpenAPI document: 2017-12-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Bot;
import org.openapitools.client.model.BotResponseList;
import org.openapitools.client.model.CheckNameAvailabilityRequestBody;
import org.openapitools.client.model.CheckNameAvailabilityResponseBody;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BotApi
 */
@Disabled
public class BotApiTest {

    private final BotApi api = new BotApi();

    /**
     * Creates a Bot Service. Bot Service is a resource group wide resource type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void botsCreateTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Bot parameters = null;
        Bot response = api.botsCreate(resourceGroupName, resourceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

    /**
     * Deletes a Bot Service from the resource group. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void botsDeleteTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        api.botsDelete(resourceGroupName, resourceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Returns a BotService specified by the parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void botsGetTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Bot response = api.botsGet(resourceGroupName, resourceName, apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Check whether a bot name is available.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void botsGetCheckNameAvailabilityTest() throws ApiException {
        String apiVersion = null;
        CheckNameAvailabilityRequestBody parameters = null;
        CheckNameAvailabilityResponseBody response = api.botsGetCheckNameAvailability(apiVersion, parameters);
        // TODO: test validations
    }

    /**
     * Returns all the resources of a particular type belonging to a subscription.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void botsListTest() throws ApiException {
        String apiVersion = null;
        String subscriptionId = null;
        BotResponseList response = api.botsList(apiVersion, subscriptionId);
        // TODO: test validations
    }

    /**
     * Returns all the resources of a particular type belonging to a resource group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void botsListByResourceGroupTest() throws ApiException {
        String resourceGroupName = null;
        String subscriptionId = null;
        String apiVersion = null;
        BotResponseList response = api.botsListByResourceGroup(resourceGroupName, subscriptionId, apiVersion);
        // TODO: test validations
    }

    /**
     * Updates a Bot Service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void botsUpdateTest() throws ApiException {
        String resourceGroupName = null;
        String resourceName = null;
        String apiVersion = null;
        String subscriptionId = null;
        Bot parameters = null;
        Bot response = api.botsUpdate(resourceGroupName, resourceName, apiVersion, subscriptionId, parameters);
        // TODO: test validations
    }

}
